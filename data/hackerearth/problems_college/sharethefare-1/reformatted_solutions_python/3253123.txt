kases = input()

while (kases > 0):
    nq = map(int, raw_input().split())
    n = nq[0]
    q = nq[1]

    total_N = n
    list_N = []
    expenses = [0]*n
    paid = [0]*n

    while (total_N > 0):
        list_N.append(raw_input())
        total_N -= 1

    total_Q = q
    list_Q = []
    while (total_Q > 0):
        l = []
        l.append(raw_input())
        l.append(input())
        no_of_per = input()
        l.append(no_of_per)

        names_who_have_to_pay = []
        while (no_of_per > 0):
            names_who_have_to_pay.append(raw_input())
            no_of_per -= 1

        l.append(names_who_have_to_pay)
        list_Q.append(l)
        total_Q -= 1

    for tran in list_Q:
        # print tran[0]
        idx_paid = list_N.index(tran[0])
        # print idx_paid
        paid[idx_paid] += tran[1]
        # print tran[1],paid
        fare_share = tran[1]//(tran[2]+1)
        fare_share_extras = tran[1] % (tran[2]+1)
        # print fare_share,fare_share_extras

        expenses[idx_paid] -= fare_share + fare_share_extras
        for nam in tran[3]:
            idx_nam = list_N.index(nam)
            # print nam,idx_nam
            expenses[idx_nam] -= fare_share
            # print expenses

    for i in range(n):
        paid[i] += expenses[i]
        if (paid[i] > 0):
            print list_N[i], "is owed", paid[i]
        elif (paid[i] == 0):
            print list_N[i], "neither owes nor is owed"
        else:
            print list_N[i], "owes", -paid[i]

    kases -= 1
