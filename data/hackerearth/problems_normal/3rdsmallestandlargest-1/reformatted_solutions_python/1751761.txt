from copy import deepcopy


def next_greater_int(n_list):
    idx = -1
    len_list = len(n_list)
    last_elem = n_list[len_list-1]
    prev_idx = len_list - 1
    len_list = len(n_list)
    index = len_list - 2
    while True:
        if index < 0:
            break
        if n_list[index] < n_list[prev_idx]:
            temp = n_list[index]
            n_list[index] = n_list[prev_idx]
            n_list[prev_idx] = temp
            idx = index
            break
        elif n_list[index] == n_list[prev_idx]:
            if index == prev_idx - 1:
                index = index - 1
                continue
            prev_idx = prev_idx - 1
            if prev_idx == index:
                index = index - 1
            continue
        # else:
        #   prev_idx = index
        index = index - 1

    if idx == -1:
        return (False, n_list)
    else:
        a_list = sorted(n_list[idx + 1:])
        b_list = n_list[:idx+1] + a_list
        return (True, b_list)


def next_smaller_int(n_list):
    idx = -1
    len_list = len(n_list)
    last_elem = n_list[len_list-1]
    prev_idx = len_list - 1
    len_list = len(n_list)
    index = len_list - 2
    while True:
        if index < 0:
            break
        if n_list[index] > n_list[prev_idx]:
            temp = n_list[index]
            n_list[index] = n_list[prev_idx]
            n_list[prev_idx] = temp
            idx = index
            break
        elif n_list[index] == n_list[prev_idx]:
            if index == prev_idx - 1:
                index = index - 1
                continue
            prev_idx = prev_idx - 1
            if prev_idx == index:
                index = index - 1
            else:
                continue
        # else:
        #   prev_idx = index
        index = index-1

    if idx == -1:
        (False, n_list)
    else:
        a_list = sorted(n_list[idx + 1:], reverse=True)
        b_list = n_list[:idx+1] + a_list
        return (True, b_list)


t = int(raw_input())
count = 0
while True:
    if count == t:
        break
    # import pdb
    # pdb.set_trace()
    num = raw_input()
    num1 = sorted(num)
    num2 = deepcopy(num1)
    count += 1

    if len(num1) < 3 or len(set(num1)) == 1:
        print "Not possible!"
        continue

    flag, first_greater = next_greater_int(num1)
    if not flag:
        print "Not possible!"
        continue

    flag, second_greater = next_greater_int(first_greater)
    # import pdb
    # pdb.set_trace()
    num2 = sorted(num2, reverse=True)
    flag, first_smaller = next_smaller_int(num2)
    # import pdb
    # pdb.set_trace()
    flag, second_smaller = next_smaller_int(first_smaller)
    print "".join(second_greater), "".join(second_smaller)
