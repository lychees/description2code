#include <iostream>
using namespace std;


int inline scan()
{
    int N = 0;
    char C;
    C=getchar_unlocked();
    while (C < '0' || C>'9') C=getchar_unlocked();
    while (C >= '0' && C <= '9')
    {
        N = (N<<3) + (N<<1) + C - '0';
        C=getchar_unlocked();
    }

    return N;
}
int inline sumd(int n)
{
	int ans=0;
	while(n>0)
	{
		ans+=n%10;
		n/=10;
	}
	return ans;
}
int dig[10000001];
int sum[10000001];
bool pr[10000001];
int lef[10000001];
int cum[10000001];
void sieve()
{
	for(int i=2;i<=10000000;++i){ lef[i]=i; dig[i]=sumd(i); }
	for(int i=4;i<=10000000;i+=2)
	{
		pr[i]=1;
		int cnt=0,cp=i;
		while(!(cp&1))
		{
			cp>>=1;
			cnt++;
		}
		lef[i]=cp;
		sum[i]+=(cnt<<1);
	}
	for(int i=3;i<=3200;i+=2)
	{
		if(pr[i]==0)
		{
			for(int j=i*i;j<=10000000;j+=i)
			{
				pr[j]=1;
				int cnt=0,cp=lef[j];
				while(cp%i==0)
				{
					cp/=i;
					cnt+=dig[i];
				}
				sum[j]+=cnt;
				lef[j]=cp;
			}
		}
	}
	for(int i=2;i<=10000000;++i)
	{
		cum[i]=cum[i-1]+(dig[i]==(sum[i]+dig[lef[i]]));
	}
}
int main()
{
	sieve();
    int t,l,r;
    t=scan();
    while(t--)
    {
    	l=scan();r=scan();
    	printf("%d\n",cum[r]-cum[l-1]);
    }
    return 0;
}
