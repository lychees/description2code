/*
You are given a string of characters, or numbers. Find the minimum number of characters to be inserted into the string in order to obtain a palindrome. A palindrome is a word, phrase, number, or other sequence of symbols or elements that reads the same forward or reversed.

For example, the string abcbd can be transformed into a palindrome ("dabcbad" or "adbcbda"). However, inserting fewer than 2 characters will not produce a palindrome.

Input Format:

First line contains test cases and second line contains an integer 'n' specifying the length of the string, where 3<=n<=20 Second line contains a string of length n.

Note:

Upper-case and lower-case characters are considered as different. Elements of the string are either English alphabets or numerals.

Output Format:

One line containing the minimum number of insertions required to make the string a palindrome
*/
#include <bits/stdc++.h>
#define ll long long
using namespace std;
int main()
{
	int test;
	scanf("%d",&test);
	while(test--)
	{
		int mat[25][25];
		int n;
		char str[25],rev[25];
		scanf("%d%s",&n,str);
		int i,j,ans;
		ans=0;
		for(i=0;i<(n+1);i++)
		{
			for(j=0;j<(n+1);j++)
			{
				mat[i][j]=0;
			}
		}
		j=0;
		for(i=(n-1);i>=0;i--)
		{
			rev[j++]=str[i];
		}
		rev[n]='\0';
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=n;j++)
			{
				if(str[i-1]==rev[j-1])
				{
					mat[i][j]=mat[i-1][j-1]+1;
				}
				else
				{
					mat[i][j]=max(mat[i-1][j],mat[i][j-1]);
				}
			}
		}
		//~ for(i=0;i<=n;i++)
		//~ {
			//~ for(j=0;j<=n;j++)
			//~ {
				//~ cout<<mat[i][j]<<" ";
			//~ }
			//~ cout<<endl;
		//~ }
		ans=n-mat[n][n];
		printf("%d\n",ans);
	}
	return 0;
}
