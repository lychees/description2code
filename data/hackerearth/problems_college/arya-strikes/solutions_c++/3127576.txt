    #include <bits/stdc++.h>
    using namespace std;
     
    bool grid[55][55];
    bool valid(int n, int x, int y){
    	if(x < 0 || x >= n || y < 0 || y >= n || !grid[x][y]) return false;
    	return true;
    }
    void clearg(){
    	for(int i=0;i<55;++i)for(int j=0;j<55;++j)grid[i][j]=false;
    }
     
    int main()
    {
        int t;
        cin >> t;
        while(t--){
        	int n;
        	cin >> n;
        	clearg();
        	for(int i=0; i<n; ++i)
        		for(int j=0; j<n; ++j)
        			cin >> grid[i][j];
        	queue<pair<int,int> >q;
        	q.push({0,0});
        	bool works = false;
        	while(q.size()){
        		int cx = q.front().first, cy = q.front().second; q.pop();
        		if(cx == n-1 && cy == n-1){
        			works = true;
        			break;
        		}
        		if(valid(n, cx+1, cy)) q.push({cx+1,cy});
        		if(valid(n, cx, cy+1)) q.push({cx,cy+1});
        	}
        	if(works) cout << "POSSIBLE" << endl;
        	else cout << "NOT POSSIBLE" << endl;
        }
        return 0;
    }