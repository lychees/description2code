#include <iostream>
#include <fstream>
#include <string>

using namespace std;

#define MAXN 1000010

int N;
int Q;
string str;
int type;
int index;
char c;
int l;
int r;
int k;
int tree[MAXN][26];

int query(int idx, int order) {
	int sum = 0;
	while (idx > 0) {
		sum += tree[idx][order];
		idx = idx - (idx & (-idx));
	}
	return sum;
}

void update(int idx, int order, int val) {
	while (idx <= N) {
		tree[idx][order] += val;
		idx = idx + (idx & (-idx));
	}
}


int main() {
	cin >> N >> Q;

	cin >> str;

	for (int i = 0; i < str.length(); i++) {
		update(i + 1, str[i] - 'a', 1);
	}

	for (int i = 0; i < Q; i++) {
		cin >> type;
		if (type == 0) {
			cin >> index >> c;
			update(index, str[index-1] - 'a', -1);
			str[index-1] = c;
			update(index, str[index-1] - 'a', 1);
		}
		else if (type == 1) {
			cin >> l >> r >> k;
			int order;
			int cnt = 0;
			for (order = 0; order <26; order++) {
				cnt += query(r, order) - query(l - 1, order);
				if (cnt >= k) break;
			}
			if (order == 26) {
				cout << "Out of range" << endl;
			}
			else {
				c = 'a' + order;
				cout << c << endl;
			}
		}
	}

	return 0;
}

