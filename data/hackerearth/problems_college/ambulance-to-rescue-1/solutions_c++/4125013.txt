#include<bits/stdc++.h>
using namespace std;
 
const int N=1e6+10;
const int inf=1e9+9;
typedef long long ll;
 
vector<int>g[N];
int dist[N];
 
void bfs(int start) {
  queue<int>q;
  q.push(start);
  if(dist[start]<=0) {
    return;
  }
  dist[start]=0;
  q.push(start);
  while(!q.empty()) {
    int u=q.front();
    q.pop();
    for(int i=0;i<g[u].size();i++) {
      int to=g[u][i];
      if(dist[to]>dist[u]+1) {
        dist[to]=dist[u]+1;
        q.push(to);
      }
    }
  }
  return;
}
int main() {
  //freopen("a.cpp","r",stdin);
  ios::sync_with_stdio(0);
  int n,m,s,e;
  cin>>n>>m>>s>>e;
  for(int i=0;i<m;i++) {
    int foo,bar;
    cin>>foo>>bar;
    g[foo].push_back(bar);
    g[bar].push_back(foo);
  }
  for(int i=1;i<=n;i++) {
    dist[i]=inf;
  }
  for(int i=0;i<s;i++) {
    int val;
    cin>>val;
    bfs(val);
  }
  ll sum=0;
  for(int i=0;i<e;i++) {
    int val;
    cin>>val;
    if(dist[val]==inf) {
    	puts("-1");
    	return 0;
    }
    sum+=dist[val];
  }
  cout<<sum<<endl;
  return 0;
}