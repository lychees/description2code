#include <bits/stdc++.h>
using namespace std;
int GCD[1002][1002];
bool vis[1002][1002][2];
int dp[1002][1002][2];
int arr[1001][1001];
int gcd(int a,int b)
{
  if(b==0)
    return a;
  else
    return gcd(b,a%b);
}
void pre()
{
  for ( int i = 1; i <= 1000; i++ ) {
    for ( int j = 1; j <= i; j++ ) {
      GCD[i][j] = GCD[j][i] = __gcd(i,j);
    }
  }
  return;
}
void my()
{
  for(int i=1;i<1001;i++)
    for(int j=1;j<1001;j++)
      arr[i][j]=-1;
  for(int i=1;i<=1000;i++)
  {
    arr[i][1]=1;
    arr[1][i]=2;
  }
  arr[1][1]=0;
  for(int i=2;i<=2000;i++)
  {
    for(int j=1;j<i;j++)
    {
      int f=j; int s=i-j;
      if(f>1000 || s>1000)
        continue;
      if(f==1 || s==1)
        continue;
      if(arr[s-1][f]==2 || arr[(s/gcd(max(f,s),min(f,s)))][f]==2)
        arr[f][s]=1;
      else
        arr[f][s]=2;
    }
  }
}

int dp2[1010][1010];

bool canWin(int n, int m) {
  if(n == 1) return false;
  int & ret = dp2[n][m];
  if(ret != -1) return ret;
  if(GCD[n][m] > 1) {
    return ret = !canWin(m - 1, n) or !canWin(m / GCD[n][m], n);
  } else {
    return ret = !canWin(m - 1, n);
  }
}
int f(int a, int b, int turn)
{
  if ( turn == 0 ) {
    if ( a == 1 ) return 0;
  } 
  if ( turn == 1 ) {
    if ( b == 1 ) return 0;
  }
  if ( vis[a][b][turn] ) return dp[a][b][turn];
  vis[a][b][turn] = true;
  int ans = 0;
  if ( turn == 0 ) {
    ans |= (!f(a,b-1,turn^1));
    if ( GCD[a][b] != 1 ) ans |= (!f(a,b/GCD[a][b],turn^1));
  }
  else {
    ans |= (!f(a-1,b,turn^1));
    if ( GCD[a][b] != 1 ) ans |= (!f(a/GCD[a][b],b,turn^1));
  }
  dp[a][b][turn] = ans;
  return ans;
}
int main() {
  int t,A,B;
  int count=0;
  pre();
// for(int A=1;A<=1000;A++)
//   for(int B=1;B<=1000;B++)
//   {
//     if(A==1 && B==1)
//       {}
//     else if(A==1)
//      { }
//     else if(B==1)
//       {}
//     else{
//       if ( f(A,B,0) ) 
//       {
//         if(arr[A][B]!=1)
//           count++;
//       }
//       else
//       {
//         if(arr[A][B]!=2)
//           count++;
//       }
//     }
//   }
//   cout<<count;

  memset(dp2, -1, sizeof(dp2));
  int T; cin >> T;
  while(T--) {
    int n, m;
    cin >> n >> m;
    if(n == m and n == 1) puts("Draw");
    else if(n == 1){
      puts("Chandu Don");
    } else if(m == 1) {
      puts("Arjit");
    } else puts(canWin(n, m) ? "Arjit" : "Chandu Don");
  }
  return 0;
}