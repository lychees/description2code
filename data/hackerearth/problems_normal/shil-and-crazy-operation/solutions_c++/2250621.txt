#include <iostream>
#include<vector>
#include<cstring>
using namespace std;

typedef unsigned long long ull;
void solve(int n, ull t)
{
 ull arr[n];	
 int perm[n];
 for(int i=0;i<n;i++)
 {
 	cin>> arr[i];
 	//cout<<i+1<<". "<<arr[i]<<" ";
 }

	int tmp;
  for(int i=0;i<n;i++)
 {
 		//cout<<"* ";
 		cin >> tmp;
 		//cout<<tmp<<" ";
 		tmp--;
 		//cout<<tmp<<" ";
 		perm[tmp] = i;	
	    //cout<<"5 ";
 }
 	 
 int mark[n];

 memset(mark,0,sizeof(mark));
 vector<vector<int> > m;
 for(int i=0;i<n;i++)
 {
 	if(!mark[i])
 	{
 		mark[i] = 1;
		
 		m.resize(m.size()+1);
 		int tmp = i;
 		m[m.size()-1].push_back(i);
 		while(perm[tmp]!=i)
 		{
 		 m[m.size()-1].push_back(perm[tmp]);
 		 mark[perm[tmp]]=1;
 		 tmp = perm[tmp];
 		}
 	}
 }
 for(int i=0;i<m.size();i++)
 {
 	if(m[i].size())
 	{
 		int j;
 		for( j=0;j<m[i].size();j++)
 		{
 			
 			mark[m[i][j]] = m[i][(j+(t%(m[i].size())))%(m[i].size())];
 		}
 		
 	}
 	
 }

 int mark2[n];
 for(int i=0;i<n;i++)
{
	mark2[mark[i]] = i;
}
 
 for(int i=0;i<n;i++)
 	cout<<arr[mark2[i]]<<" ";
}
int main()
{
  	int n;ull t;
  	cin>> n >> t;
  	//cout<<"*";
  	solve(n,t);
    return 0;
}
