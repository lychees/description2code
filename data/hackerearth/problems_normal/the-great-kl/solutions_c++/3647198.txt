#include<bits/stdc++.h>

#define pb push_back
//#define mp make_pair
#define x first
#define y second
#define y0 qweasd
#define y1 qasdna
#define left leva
#define right prava
#define next sled
using namespace std;
const int N=103772;
vector<int> g[N];
int ans[N];
map<int,int> q[N];
int color[N],d[N],n,m,x,y;
void dfs(int v,int p){
    q[v][color[v]]=d[v];
    for(int i=0;i<g[v].size();++i){
        int to=g[v][i];
        if(to==p)continue;
        d[to]=d[v]+1;
        dfs(to,v);
        if(q[to].size()>q[v].size())swap(q[to],q[v]);
        for(map<int,int>::iterator it=q[to].begin();it!=q[to].end();++it){
            int w=it->first;
            int e=it->second;
            if(q[v].count(w))ans[w]=max(ans[w],q[v][w]+e-d[v]*2);
            q[v][w]=max(q[v][w],e);
        }
    }
}
main(){
    cin>>n>>m;
    for(int i=1;i<=n;++i)
        cin>>color[i];
    for(int i=1;i<n;++i)
        cin>>x>>y,g[x].pb(y),g[y].pb(x);
    dfs(1,0);
    for(int i=1;i<=m;++i)
        cout<<ans[i]<<' ';





}

