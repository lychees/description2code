#include<bits/stdc++.h>
using namespace std;
typedef struct Tnode{
    char id;
    int column_num;
    struct Tnode *left;
    struct Tnode *right;
}node;
node *create_node(char ch,int column){
    node *temp=new node();
    temp->id=ch;
    temp->column_num;
    return temp;
}
 int i;
vector<char> chars;
node *create_tree(string tree,int n,node *root,int query,int col){
    
        if(i >= n){
            return root;
        }
        if(tree.at(i) - 0  >= 97 && tree.at(i) -0  <= 122){
            if(root==NULL){
                root=create_node(tree.at(i),0);
                if(query==col){
                    chars.push_back(tree.at(i));
                }
                i++;
                return create_tree(tree,n,root,query,col);
            }
        }
        else  if(tree.at(i)- 0 == 40)
        {
            i++;
            root->left=create_tree(tree,n,root->left,query,--col);
            i++;
            col=col+2;
            root->right=create_tree(tree,n,root->right,query,col);
        }
        else if(tree.at(i) - 0 == 41){
            i++;
            return create_tree(tree,n,root,query,col);
        }
        else if(tree.at(i)- 0 ==46){
            return root;
        }
        return root;
}

int main(){
    int cases;
    int query;//column that we have to print
    string tree_def;
    cin>>cases;
    for(int iterator=0;iterator<cases;iterator++){
        cin>>query;
        cin>>tree_def;
        chars.clear();
        node *root=NULL;
	i=0;       
	 root=create_tree(tree_def,tree_def.length(),root,query,0);
        sort(chars.begin(),chars.end());
        
        if(chars.size() != 0){
	        for(int i=0;i<chars.size();i++){
	            cout<<chars.at(i);
	        }
        }
        else{
        	cout<<"Common Gandhijee!";
        }
        cout<<endl;
    }

}