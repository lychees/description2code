#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
int bit[20][100*1000+9];
lli  arr[100*1000+9];
int N;
void upd(int at,int by,int c){
    for(;at<=N;at+=at&-at){
        bit[c][at]+=by;
    }
    return;
}
int query(int at,int c){
    int sum=0;
    for(;at>=1;at-=at&-at){
        sum+=bit[c][at];
    }
    return sum;
}
int distinct_dig(lli num){
    int cnt[10];
    memset(cnt,0,sizeof cnt);
    lli temp=num;
    while(temp>0){
        cnt[temp%10]=1;
        temp/=10;
    }
    int c=0;
    for(int i=0;i<10;++i){
        if(cnt[i])c++;
    }
    return c;
}
int main(){
    scanf("%d",&N);
    for(int i=1;i<=N;++i){
        lli  temp;scanf("%lld",&temp);
        arr[i]=temp;
      //  printf("i is %d distinct_dig is %d\n",i,distinct_dig(temp));
        upd(i,1,distinct_dig(temp));
    }
    int Q;scanf("%d",&Q);
    while(Q--){
        int typ;scanf("%d",&typ);
        if(typ==0){
            lli u,v;scanf("%lld %lld",&u,&v);
            upd(u,-1,distinct_dig(arr[u]));
            upd(u,1,distinct_dig(arr[u]+v));
            arr[u]+=v;
        }else if(typ==1){
            lli u,v;scanf("%lld %lld",&u,&v);
            upd(u,-1,distinct_dig(arr[u]));
            upd(u,1,distinct_dig(v));
            arr[u]=v;
        }else if(typ==2){
            int l,r,c;scanf("%d %d %d",&l,&r,&c);
            printf("%d\n",query(r,c)-query(l-1,c));
        }
    }
    return 0;
}
