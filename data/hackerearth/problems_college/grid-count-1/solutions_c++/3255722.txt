
#include <iostream>
#include <cstdio>
#include <algorithm>
#include<cmath>
using namespace std;
bool is_perfect_square(long long  n) {
    if (n < 0)
        return false;
    long long root(round(sqrt(n)));
    return n == root * root;
}

bool is_perfect_cube(long long n) {
    long long root(round(cbrt(n)));
    return n == root * root * root;
}
int main()
{
	int n, k;
	cin>>n>>k;
	int   arr[n][n];
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			cin>>arr[i][j];
	if (k > n) return 0;
	int stripSum[n][n];
	for (int j=0; j<n; j++)
    	{
    		int sum = 0;
    		for (int i=0; i<k; i++)
    			sum += arr[i][j];
    		stripSum[0][j] = sum;
    	for (int i=1; i<n-k+1; i++)
    	{	
    		sum += (arr[i+k-1][j] - arr[i-1][j]);
    		stripSum[i][j] = sum;
    	}
    }
    int cnt=0;
    for (int i=0; i<n-k+1; i++)
    {
    	long long  sum = 0;
    	
    	for (int j = 0; j<k; j++)
    		sum += stripSum[i][j];
    	int aa=int(pow(sum,1/3.0));
    	 //cout<<" hi "<<sum<<endl;
    	 if(is_perfect_cube(sum))
		    {    cnt++;
		        //cout<<" hi "<<sum<<endl;
		    }
    	for (int j=1; j<n-k+1; j++)
    	{
		    sum += (stripSum[i][j+k-1] - stripSum[i][j-1]);
		   
		    if(is_perfect_cube(sum))
		    {    cnt++;
		      //  cout<<" hi "<<sum<<endl;
		    }
	    }
}
 cout << cnt << " ";

	return 0;
}
