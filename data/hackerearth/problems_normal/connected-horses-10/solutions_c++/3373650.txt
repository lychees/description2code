#include <bits/stdc++.h>
using namespace std;
vector<pair<int,int> >g;
vector<int>g1[1000005];
bool vis[1000005];
queue<int>q1;
long long ans;
long long temp[1000005];
int gg[1005][1005];
long long fact(int aa) {
    if (aa == 0 || aa == 1) {
        return 1;
    } else {
        if (temp[aa] != 0)
            return temp[aa];
        else
            return temp[aa] = (((aa %(1000000007))*(fact(aa - 1) %(1000000007))));
    }
 
}
int bfs(int i){
	q1.push(i);
	vis[i] = true;
	int sum = 1;
	while(!q1.empty()){
	int p = q1.front();
	q1.pop();
	for(int j = 0 ; j < g1[p].size();j++){
		if(!vis[g1[p][j]]){
			vis[g1[p][j]] = true;
			q1.push(g1[p][j]);
			sum++;
		}
	}	
	}
	return sum;
	
}
int gx[8] = {2,2,-2,-2,1,1,-1,-1};
int gy[8] = {1,-1,-1,1,2,-2,2,-2};
int main()
{
    int t,n,m,q,x,y;
    cin >> t;
  
    while(t--){
    	cin >> n >> m >> q;
    	 for(int i = 1;i <= q;i++){
    	 	g1[i].clear();
    	 }
    	 for(int i = 1;i <= 1005;i++)
    	 	for(int j = 1;j <= 1005;j++)
    	 		gg[i][j] = 0;
    	 
    	for(int i = 1; i <= q;i++){
    		cin >> x >> y;
    		gg[x][y] = i;
    		for(int j = 0;j < 8;j++){
    			if((x + gx[j] > 0 && x + gx[j] <= n) && (y + gy[j] > 0 && y + gy[j] <= m) && gg[x + gx[j]][y + gy[j]]!= 0){
    				g1[i].push_back(gg[x + gx[j]][y + gy[j]]);
    				g1[gg[x + gx[j]][y + gy[j]]].push_back(i);
    			}
    		}
    	
    		vis[i] = false;
    	}
    
    	ans = 1;
    	for(int i = 1; i <= q;i++){
    		if(!vis[i]){
    		 ans = ((long long)ans%(1000000007) * ((long long)fact(bfs(i)) %(1000000007)));
    		}
    	}
    	cout << ans << endl;
    }
    return 0;
}
