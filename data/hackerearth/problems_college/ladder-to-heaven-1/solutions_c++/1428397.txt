#include <iostream>
#include <cstdio>
#include <vector>
#include <climits>
#include <algorithm>
using namespace std;

int main()
{
    long long a, b;
    a = 1, b = 2;
    vector<long long> fib;
    fib.push_back(a);
    fib.push_back(b);
    while (a <= 4*10000000000000000LL) {
        long long c = a+b;
        fib.push_back(c);
        a = b;
        b = c;
    }
    vector<long long> prefix(fib.size());
    prefix[0] = ((fib[0] & 1)?  0:  fib[0]);
    for (int i = 1; i < fib.size(); i++) {
        prefix[i] = prefix[i-1];
        prefix[i] += ((fib[i] & 1)? 0: fib[i]);
    }
    /*for (int i = 0; i < 20; i++) {
        cout << fib[i] << ",";
        cout << prefix[i] << " ";
    }
    cout << endl;*/
    int t;
    cin >> t;
    while (t--) {
        long long n;
        cin >> n;
        int index = upper_bound(fib.begin(), fib.end(), n) - fib.begin();
        index--;
        cout << prefix[index] << endl;
    }
}
