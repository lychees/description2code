#!/usr/bin/env python

# import numpy
import sys
import resource
sys.setrecursionlimit(1000001)
resource.setrlimit(resource.RLIMIT_STACK, (2**29, -1))


def readint():
    return int(raw_input())


def readfloat():
    return float(raw_input())


def readarray(N, foo):
    res = []
    for i in xrange(N):
        res.append(foo())
    return res


def readlinearray(foo):
    return map(foo, raw_input().split())


def readrowarray(row, foo):

    for i in xrange(4):
        row -= 1
        temp = raw_input()
        if row == 0:
            result = map(foo, temp.split())

    return result


def reshape(target, dimen):
    result = []
    r = dimen[0]
    c = dimen[1]

    size = len(target) / c
    remain = len(target) % c

    for x in (a*c for a in xrange(size)):
        result.append(target[x:x+c])

    if remain != 0:
        result.append(target[x:x+remain])

    return result


cache = [-1 for i in range(100002)]


def solve(n):

    global cache

    if n == 0:
        return 1

    if n < 0:
        return 0

    if cache[n] != -1:
        return cache[n]

    ret = 0
    for i in xrange(1, 4):
        ret += solve(n-i)

    cache[n] = ret % 1000000007

    return cache[n]


testCount = eval(raw_input())

for test in xrange(1, testCount+1):

    n = eval(raw_input())

    print "%d" % solve(n)
