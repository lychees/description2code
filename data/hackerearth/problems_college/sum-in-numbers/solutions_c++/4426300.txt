#include<bits/stdc++.h>
using namespace std;
#define ll long long
const ll mod=1e9+7;
#define mp make_pair
#define pb push_back
#define MAX 100000
ll l,r,s;
char cad[20];
bool mem[20][200];
ll D[20][200];
// this is the function F(k,property)
ll F(int dig,int sum){
	if(dig == 0)
		return (ll)(sum  == 0);
	if(mem[dig][sum])
		return D[dig][sum];
	mem[dig][sum] = 1;
	ll ret = 0LL;
	for(int i = 0;i<=9;i++)
	{
            if(sum -i >=0)
		ret += F(dig - 1,sum - i);
    }
	D[dig][sum] = ret;
	return ret;
}

// this is M(x)
ll solve(ll x){
	ll ret = 0;
	
	sprintf(cad,"%lld",x);
	int len = strlen(cad);
        //sum is the desired property
	int sum = s;
	int qued = len;
        // we find the digit where they first differ x[i] < y[i] and for all digits j < i x[j] = y[j]
	for(int i = 0;i < len;i++){
		qued--;
		int d = cad[i] - '0';
                // now we find all the digits that can be at y[i] and are less than x[i]
		for(int j = 0;j <d;j++){
                        //sum - j = property'
			if(sum - j >= 0){
				ret += F(qued,sum - j);
			}
		}
                //update property after deletion of digit x[i]
		sum -= d;
	}
	return ret;
}

int main()
{
   
    cin>>l>>r>>s;
    ll ans=solve(r+1)-solve(l);
    cout<<ans<<endl;
    return 0;
}
