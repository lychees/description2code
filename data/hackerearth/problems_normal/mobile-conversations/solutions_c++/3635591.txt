#include<bits/stdc++.h>
using namespace std;

vector<pair<long long int ,int > >prof,loss;
bool truth(long long int answer)
{

	for(long long int i=0;i<prof.size();i++)
	{
		if(answer>=prof[i].first)
		{
			answer+=(prof[i].second-prof[i].first);
		}
		else
			return false;
	}
	for(long long int i=0;i<loss.size();i++)
	{
		if(answer>=loss[i].second)
		{
			answer-=(loss[i].second-loss[i].first);
		}
		else
			return false;
	}

	return true;
}

long long int binary(long long int start,long long int end)
{

	while((end-start )>1)
	{
		long long int mid=(start+end)/2;

		if(truth(mid))
			end=mid;
		else
			start=mid;
	}

	return end;
}
int main()
{

	long long int n;
	cin>>n;
	//vector<pair<long long int ,int > >prof,loss;
	
	for(long long int i=0;i<n;i++)
	{	
		
		long long int a,b;
		
		cin>>a>>b;
		if((b-a)>=0)
			prof.push_back(make_pair(a,b));
		else
		   	loss.push_back(make_pair(b,a));

	}

	sort(prof.begin(),prof.end());
	sort(loss.rbegin(),loss.rend());

	long long int ans= binary(0,10000000000);

	cout<<ans<<endl;

	return 0;
}











