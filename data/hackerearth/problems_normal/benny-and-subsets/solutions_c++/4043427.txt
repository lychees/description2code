#include<iostream>
#include<algorithm>
#include<string.h>
#include<vector>
#define MOD 10000007
#define MAXM 2047
using namespace std;

long long dp[1005][3005],a[1005],cnt[2000005];
vector< long long >v;

int main()
{
//    freopen("benny_subsets_in.txt","r",stdin);
//    freopen("benny_subsets_out.txt","w",stdout);
    long long i,j,n,m,temp,idx=1,ans=0,x;
    cin>>n>>x;
    for(i=1;i<=n;i++) {
        cin>>temp;
        if(temp>MAXM) v.push_back(temp);
        else a[idx++]=temp;
    }
    memset(dp,0,sizeof(dp)); memset(cnt,0,sizeof(cnt));
    for(i=1;i<idx;i++) {
        dp[i][a[i]]=(dp[i][a[i]]+1)%MOD;
        for(j=0;j<=MAXM;j++) {
            m=a[i]^j;
            dp[i][m]=(dp[i][m]+dp[i-1][j])%MOD;
        }
        for(j=0;j<=MAXM;j++) dp[i][j]=(dp[i][j]+dp[i-1][j])%MOD;
    }
    if(x<=MAXM) ans=dp[idx-1][x];

    if(v.size()>0) {
	    for(i=1;i<(1<<v.size());i++) {
	        temp=0;
	        for(j=0;j<v.size();j++) {
	            if(i&(1<<j)) temp=temp^v[j];
	        }
            if(temp==x) ans=(ans+1)%MOD;

	        m=x^temp;
	        if(m<=2047) ans=(ans+dp[idx-1][m])%MOD;
	    }
    }
    cout<<ans;
    return 0;
}
