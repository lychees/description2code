    #include <iostream>
    using namespace std;
    #include<vector>
    #define N 1000000
    int main()
    {
        bool isPrime[N+1];
        unsigned long sumPrime[N+1];
        //vector<bool>isPrime;
        for(int i = 0; i <= N;++i) {
            isPrime[i]=true,sumPrime[i]=0;
        }
        isPrime[0] = false;
        isPrime[1] = false;
        for(int i = 2; i*i <= N; ++i) {
             if(isPrime[i] == true) {
                 // Mark all the multiples of i as composite numbers
                 for(int j = i * i; j <= N ;j += i)
                     isPrime[j] = false;
              sumPrime[i]=sumPrime[i-1]+i;
           
            }
            else
            sumPrime[i]=sumPrime[i-1];
        }
       for(int i=1001;i<=N;i++)
       {
       	if(isPrime[i])
       	sumPrime[i]=i+sumPrime[i-1];
       	else
       	 sumPrime[i]=sumPrime[i-1];
       }
       
       int n;
         cin>>n;
        while(n)
        {
        	int l,r;
        	cin>>l>>r;
        	unsigned long sum=sumPrime[r];
            sum-=sumPrime[l-1];
        
         cout<<sum<<"\n";
        	n--;
        }
        return 0;
    }