#include <bits/stdc++.h>
#include <iostream>
using namespace std;

#define loop(n) for(int i=0; i<n; i++)
#define initialize(a,s,n) loop(n){a[i] = i;s[i] = 1;}

int root(int *a, int i)
{
    while(a[i]!=i){
        a[i] = a[a[i]];
        i = a[i];
    }
    return i;
}

bool find(int *a, int i, int j)
{
    if(root(a,i) == root(a,j))
        return true;
    return false;
}

void un(int *a, int *s, int i, int j)
{
    int rootA = root(a,i);
    int rootB = root(a,j);
    if(s[rootA] < s[rootB]){
        a[rootA] = a[rootB];
        s[rootB] += s[rootA];
    }
    else{
        a[rootB] = a[rootA];
        s[rootA] += s[rootB];
    }
}

int main()
{
    int n,k, count=1, x, y, r;
    cin >> n;
    int e[n],a[n],s[n];
    loop(n) cin >> e[i];
    cin >> k;
    initialize(a,s,n);
    loop(k){
        cin >> x >> y;
        un(a,s,x-1,y-1);
    }
    vector<int> components[n];
    loop(n){
        r = root(a,a[i]);
        components[r].push_back(i);
    }
    loop(n){
        if(components[i].size()){
            int min = 1001, c;
            for(int j=0; j<components[i].size(); j++){
                if(e[components[i][j]] < min){
                    min = e[components[i][j]];
                    c = 1;
                }
                else if(e[components[i][j]] == min)
                    c++;
            }
            count = (count*c)%1000000007;
        }
    }
    cout << count << endl;
    return 0;
}