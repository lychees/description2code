#include <bits/stdc++.h>
using namespace std;
const int size = 1e6+8;
bitset<size> bs;
vector<int>prime;
int dp[size],smallest[size];
int main(int argc, char const *argv[])
{
	bs.reset();
	bs.flip();
	smallest[1] = 1;
	for(int i=2;i<size;i++){
		if(bs.test(i)){
			//prime.push_back(i);
			smallest[i] = i;
			for(int j=2*i;j<size;j+=i){
				bs.set(j,0);
				if(smallest[j] == 0)smallest[j] = i;
			}
		}
	}
	// cout<<prime.size()<<endl;
	// for(int i=0;i<10;i++)cout<<prime[i]<<" \n"[i == 10];

	for(int i=2;i<size;i++){
		int ans = 1;
		int t = i;
		while(t > 1){
			int cnt  = 0;
			int d = smallest[t];
			while(t%d == 0){
				t /= d;
				cnt++;
			}
			ans = (ans*(cnt+1));
		}
		if(i&1)
			dp[i] = dp[i-1]+(ans-1);
		else dp[i] = dp[i-1] + ans;
	}


	int T;
	scanf("%d",&T);
	while(T--){
		int n;
		scanf("%d",&n);
		// double t=0;
		// int ans = 0,ans2 = 0;
		// for(int i=1;i<=n/2;i++){
		// 	ans += (n-i)/i;
		// 	ans2 += n/i;
		// 	t+=(1.0/i);
		// }
		// cout<<ans2<<" "<<dp[n]<<endl;
		// ans2 -= n/2;
		//cout<<ans<<" "<<ans2<<" "<<int(n*t)-n/2<<endl;
		cout<<dp[n]-n/2<<endl;
	}
	return 0;
}