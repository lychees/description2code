#include<bits/stdc++.h>
#define assn(n,a,b) assert(n<=b && n>=a)
using namespace std;
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define pdn(n) printf("%d\n",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%d",&n)
#define pn printf("\n")
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
#define MOD 1000000007
LL mpow(LL a, LL n) 
{LL ret=1;LL b=a;while(n) {if(n&1) 
    ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
return (LL)ret;}
int ar[100009];
int arr[100009];
int lt[100009][2];
int rt[100009][2];
//0- smaller, 1-larger
int MaxVal;
int tree[1000009];
int read(int idx){
    if(idx==0)return 0;
    int sum = 0;
    while (idx > 0){
        sum += tree[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
void update(int idx ,int val){
    while (idx <= MaxVal){
        tree[idx] += val;
        idx += (idx & -idx);
    }
}
void SET()
{
    memset(tree,0,sizeof(int)*MaxVal);
//    for(int i=0; i<=MaxVal+10; i++)
  //      tree[i]=0;
}
#define mygc(c) (c)=getchar_unlocked()
void reader(int *x){int k,m=0;*x=0;for(;;){mygc(k);if(k=='-'){m=1;break;}if('0'<=k&&k<='9'){*x=k-'0';break;}}for(;;){mygc(k);if(k<'0'||k>'9')break;*x=(*x)*10+k-'0';}if(m)(*x)=-(*x);}
int main()
{
    int t;
    reader(&t);
    while(t--)
    {
        int n;
        reader(&n);
        for(int i=1; i<=n; i++)
        {
            reader(&ar[i]);
            arr[i]=ar[i];
        }
        sort(arr+1,arr+n+1);
        for(int i=1; i<=n; i++)
        {
            int * it= lower_bound(arr+1,arr+n+1,ar[i]);
            ar[i]=(int)(it-(arr+1)) +1;
        }
        MaxVal=n+10;
        SET();
        for(int i=1; i<=n; i++)
        {
            lt[i][0]=read(ar[i]-1);
            lt[i][1]=i-1-read(ar[i]);
            update(ar[i],1);
        }
        SET();
        for(int i=n; i>=1; i--)
        {
            rt[i][0]=read(ar[i]-1);
            rt[i][1]=n-i-read(ar[i]);
            update(ar[i],1);
        }
        /*printf("left smaller\n");
          for(int i=1; i<=n; i++)
          printf("%d ",lt[i][0]);
          printf("\n");
          printf("left larger\n");
          for(int i=1; i<=n; i++)
          printf("%d ",lt[i][1]);
          printf("\n");
          printf("right smaller\n");
          for(int i=1; i<=n; i++)
          printf("%d ",rt[i][0]);
          printf("\n");
          printf("right larger\n");
          for(int i=1; i<=n; i++)
          printf("%d ",rt[i][1]);
          printf("\n");*/
        LL cnt1=0,cnt2=0;
        for(int i=2; i<n; i++)
        {
            cnt1 += (LL)lt[i][0]*(LL)rt[i][0];
            cnt2 += (LL)lt[i][1]*(LL)rt[i][1];
        }
        //cout << cnt1 << " " << cnt2 << endl;
        int flag=0;
        reader(&flag);
        if(cnt1==0)
        {
            if(flag==0)puts("Sarika\n0");
            else puts("Ananya\n0");
            continue;
        }
        else if(cnt2==0)
        {
            if(flag==1)puts("Sarika\n1");
            else puts("Ananya\n1");
            continue;
        }
        if(cnt1>cnt2)
        {
            if(flag==0)
                puts("Ananya");
            else
                puts("Sarika");
            printf("%lld\n",cnt2*(LL)2+1ll);
        }
        else
        {
            if(flag==0)
                puts("Sarika");
            else
                puts("Ananya");
            printf("%lld\n",cnt1*(LL)2);
        }
    }
    return 0;
}