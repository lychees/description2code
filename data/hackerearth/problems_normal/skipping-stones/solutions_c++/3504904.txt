#include <bits/stdc++.h>

using namespace std;

long double dp [1000 + 10];
bool vis [1000 + 10];

int d , n , l;
int dist [1000 + 10];
long double prob [1000 + 10];
bool reach;

long double rec(int index){

    if(dist[index] + l >= d){

        reach = true;
        return 1.0;
    }

    long double maxi = 0.0;

    if(vis[index]) return dp[index];

    for(int i = index + 1; i < n; i++){

        if(dist[i] - dist[index] > l) break;
        maxi = max(maxi , prob[i] * rec(i) );
    }

    vis[index] = true;
    return dp[index] = maxi;
}

int main()
{
    cin >> n >> l >> d;

    memset(vis, false, sizeof vis);

    for(int i = 0; i < n; i++) cin >> prob[i];

    for(int i = 0; i < n; i++) cin >> dist[i];

    long double maxi = 0.0;

    if(d <= l) {cout << "1.000000\n"; return 0;}

    for(int i = 0; i < n; i++){

        if(dist[i] > l) break;

        maxi = max(maxi , prob[i] * rec(i));
    }

    if(reach) printf("%.6Lf\n", maxi);
    else cout << "IMPOSSIBLE\n";

    return 0;
}
