#include<bits/stdc++.h>
using namespace std;
int  find(int parent[],int i)
{
	if(parent[i]==i)
	{
		return i;
	}
	parent[i]=find(parent,parent[i]);
	return parent[i];
}
void unionD(int rank[],int parent[],int i,int j)
{
	int p_i=find(parent,i);
	int p_j=find(parent,j);
	if(rank[p_i]>rank[p_j])
	{	
		parent[p_j]=p_i;
		rank[p_i]++;
	}
	else
	{
		parent[p_i]=p_j;
		rank[p_j]++;
	}
}
int main()
{
	int i,j,n;
	cin>>n;
	int parent[n],rank[n];
	for(i=1;i<=n;i++)
	{
		parent[i]=i;
		rank[i]=1;
	}
	int k;
	cin>>k;
	while(k--)
	{
		cin>>i>>j;
		unionD(rank,parent,i,j);
	}
	int count=0;
	for(i=1;i<=n;i++)
	{
		if(parent[i]==i)
		{
			count++;
		}
	}
	for(i=1;i<=n;i++)
	{
		int d= find(parent,i);
	}
	cout<<count<<"\n";
	return 0;
}