#include <bits/stdc++.h>

using namespace std;

int primes[25] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};

long long totient[10001] = {};
long long dp[10001] = {};

int gcd(int a, int b){
	if(b==0) return a;
	if(b==1) return 1;
	return gcd(b,a%b);
}

int pow(int a, int b){
	if(b==0) return 1;
	if(b==1) return a;
	if(b%2) return (a*pow(a*a,b/2));
	else return pow(a*a,b/2);
}

void pre(){
	totient[0] = 0;
	totient[1] = 0;
	totient[2] = 1;
	for(int i = 3; i<10001; i++){
		int count = 1;
		int n = i;
		for(int j = 0; j<25 && primes[j]<=n; j++){
			if(n%primes[j] == 0){
				int p = 0;
				while(n%primes[j]==0){
					n/=primes[j];
					p++;
				}
				count *= pow(primes[j],p-1)*(primes[j]-1);
			}
		}
		if(n!=1) count *= (n-1);
		totient[i] = count;
	}
	dp[0] = 0;
	dp[1] = 0;
	dp[2] = 1;
	for(int i = 3; i<10001; i++){
		dp[i] = dp[i-1] + totient[i];
	}
}

int main(){
	pre();
	int t,n;
	cin>>t;
	for(int i = 0; i<t; i++){
		cin>>n;
		cout<<dp[n]<<endl;
	}
	return 0;
}
