// #include C/C++ {
#include <bits/stdc++.h>
// }
using namespace std;
// #typedef {
typedef long long int64;
typedef unsigned long long uint64;
typedef pair <int, int> PII;
typedef pair <char, char> PCC;
typedef pair <int64, int64> PLL;
typedef pair <double, double> PDD;
// }

// #parameter{
#ifdef DEBUG_MODE

#define TYPE decltype
#define RF(filename) {freopen((filename), "r", stdin);}
#define WF(filename) {freopen((filename), "w", stdout);}
#define DEBUG printf

#else

#define TYPE __typeof
#define RF(filename) {;}
#define WF(filename) {;}
#define DEBUG(...)

#endif

// #define {
#define SZ(a) ((int)(a).size())
#define X first
#define Y second
#define MP make_pair
#define L(x) ((x)<<1)
#define R(x) ((x)<<1 | 1)
#define max3(x, y, z) (max(max((x), (y)), (z)))
#define min3(x, y, z) (min(min((x), (y)), (z)))
#define BIT(x, i) (((x) >> (i)) & 1)
#define ALL(it) (it).begin(), (it).end()
#define FILL(__space, __val) memset(__space, __val, sizeof(__space))
#define MOVE(__spaceTo, __spaceFrom) memmove(__spaceTo, __spaceFrom, sizeof(__spaceTo))
#define FOR(it, c) for( TYPE((c).begin()) it = (c).begin(); it != (c).end(); it++)
/////////////////////////////////////////////////////////////
const double PI = acos(-1.0);
const double EPS = 1e-6;

#define MAX_N 100005
#define MAX_M 55
#define MOD (int)(1e9+7)
#define INF ((1 << 30) - 1)
#define BINF ((1LL << 62) - 1LL)
#define NONE -1
#define NIL 0
// }

/////////////////////////////////////////////////////////////
PII p[MAX_N];
/////////////////////////////////////////////////////////////
int main(){
	RF("input.txt");
	//	WF("output.txt");

	srand((unsigned)time(NULL));
	int N;
	scanf("%d", &N);
	for (int i = 0; i < N; i++) scanf("%d %d", &p[i].X, &p[i].Y);
	int res = 0;
	for (int i = 0; i < N - 1; i++){
		double x1 = p[i].X;
		double y1 = p[i].Y;
		double x2 = p[i + 1].X;
		double y2 = p[i + 1].Y;
		res++;
		for (int j = i + 2; j < N; j++){
			double x = p[j].X;
			double y = y1 + (y2 - y1) * (x - x1) / (x2 - x1);
			if (p[j].Y > y - EPS){
				res++;
				x2 = p[j].X;
				y2 = p[j].Y;
			}
		}
	}
	printf("%d\n", res);
	return 0;
}