#include<bits/stdc++.h>
#define ll long long
#define M 1000000007
using namespace std;
ll arr[1005][1005];
queue<pair<ll,ll>> Q;
bool visit[1005][1005];
ll fact[100005];
ll bfs(ll x,ll y,ll n,ll m)
{
	ll z=0,i,j;
	Q.push(make_pair(x,y));
	visit[x][y]=true;
	while(!Q.empty()){
		i = Q.front().first;
		j = Q.front().second;
		z++;
		Q.pop();
		if(i-2!=-1 && j-1 != 0 && arr[i-2][j-1]==1 && visit[i-2][j-1]==false){
			Q.push(make_pair(i-2,j-1));
			visit[i-2][j-1]=true;
		}
		if(i-2!=-1 && j+1!=m+1 && arr[i-2][j+1]==1 && visit[i-2][j+1]==false){
			Q.push(make_pair(i-2,j+1));
			visit[i-2][j+1]=true;
		}
		if(i-1!=0 && j+2!=m+2 && arr[i-1][j+2]==1 && visit[i-1][j+2]==false){
			Q.push(make_pair(i-1,j+2));
			visit[i-1][j+2]=true;
		}
		if(i+1!=n+1 && j+2!=m+2 && arr[i+1][j+2]==1 && visit[i+1][j+2]==false){
			Q.push(make_pair(i+1,j+2));
			visit[i+1][j+2]=true;
		}
		if(i+2!=n+2 && j+1!=m+1 && arr[i+2][j+1]==1 && visit[i+2][j+1]==false){
			Q.push(make_pair(i+2,j+1));
			visit[i+2][j+1]=true;
		}
		if(i+2!=n+2 && j-1!=0 && arr[i+2][j-1]==1 && visit[i+2][j-1]==false){
			Q.push(make_pair(i+2,j-1));
			visit[i+2][j-1]=true;
		}
		if(i+1!=n+1 && j-2!=-1 && arr[i+1][j-2]==1 && visit[i+1][j-2]==false){
			Q.push(make_pair(i+1,j-2));
			visit[i+1][j-2]=true;
		}
		if(i-1!=0 && j-2!=-1 && arr[i-1][j-2]==1 && visit[i-1][j-2]==false){
			Q.push(make_pair(i-1,j-2));
			visit[i-1][j-2]=true;
		}
	}
	return z;
}
int main()
{
	ll t,n,m,i,j,q,ans,z,x,y;
	fact[0]=1;
	for(i=1;i<100005;i++){
		fact[i]=((fact[i-1] % M)*(i % M))%M;
	}
	cin>>t;
	while(t--){
		cin>>n>>m>>q;
		ans=1;
		for(i=1;i<=n;i++){
			for(j=1;j<=m;j++)
			{
				arr[i][j]=0;
				visit[i][j]=false;
			}
		}
		while(q--){
			cin>>x>>y;
			arr[x][y]=1;
		}
		for(i=1;i<=n;i++){
			for(j=1;j<=m;j++){
				if(visit[i][j]==false && arr[i][j]==1){
					z = bfs(i,j,n,m);
				//if(z>1)
					ans = ((ans % M)*(fact[z]%M))%M;
				}
			}
			
		}
		cout<<ans<<endl;
	}
	return 0;
}