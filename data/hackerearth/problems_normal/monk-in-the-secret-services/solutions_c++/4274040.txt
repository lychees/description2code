
#include<bits/stdc++.h>
#define ll long long int
#define ite iterator
#define mp make_pair
#define ff first
#define ss second
#define pb push_back
#define ioS ios::sync_with_stdio(false);

using namespace std ;
ll n,i,j,k,flag,y,x;

ll inf=10000000 ; //10^18 ;

ll done[2000000],vis[200][200]  ;

map<ll,ll>m ;
vector<pair<ll,ll> >v[200]   ;
ll a,s,h ;
ll wt,src,e ;
ll neg_cycle=0;
ll dist[2000][2000] ;

 void floyd_warshall(){
  for(i=1;i<=n;i++){dist[i][i]=0;}

  for(k=1;k<=n;k++){
    for(i=1;i<=n;i++){
        for(j=1;j<=n;j++){
            dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
        }
    }
  }

 }

int main(){
     //freopen("input.txt","r",stdin) ;
    ioS; ll t ;
cin >> t ;
while(t--){
 // vertices 1 to n
 cin >> n >> e; k=e;
for(i=1;i<=n;i++){v[i].clear();}

 for(i=1;i<=n;i++){
    for(j=1;j<=n;j++){
        dist[i][j]=inf;
    }
 }
 while(k--){
    cin >> x >> y >> wt ; dist[x][y]=min(dist[x][y],wt) ;dist[y][x]=min(dist[y][x],wt);
 }
  for(i=1;i<=n;i++){
    for(j=1;j<=n;j++){
        if(dist[i][j]!=inf){v[i].pb(mp(j,dist[i][j])) ;}
    }
 }
floyd_warshall();
 cin >> s >> a >> h ;
ll ans = 0 ;
 for(i=1;i<=n;i++){
    if(i!=a&&i!=s&&i!=h){k = dist[i][s] + 2*dist[i][a] + dist[i][h] ;ans=max(ans,k) ;}
 }
 cout << ans << endl ;
}

}
