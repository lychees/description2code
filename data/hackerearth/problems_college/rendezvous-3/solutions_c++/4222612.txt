#include<bits/stdc++.h>
#define pb push_back
#define PI acos(-1)
#define mp make_pair
#define f first
#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sdl(x) scanf("%lld",&x)
#define sd2l(x,y) scanf("%lld%lld",&x,&y)
#define maxn 100010
#define s second
#define ll long long int
#define inf 1000000014
#define infl (ll)(1e18+1)
#define mod 1000000007
#define sz(x) (int) x.size()
#define pi pair< int,int >
#define pii pair<int,pi>
#define trace1(x)  cerr << #x << ": " << x << endl
#define trace2(x, y)  cerr << #x << ": " << x << " | " << #y << ": " << y << endl
using namespace std;
int size[maxn];
int roo[maxn];
vector< pii > v;
int root(int x)
{
	while(x!=roo[x])
	{
		x = roo[x];
		roo[x] = roo[roo[x]];
	}
	return x;
}
void unio(int a, int b)
{
	int s1 = size[root(a)];
	int s2 = size[root(b)];
	if(s1>=s2)
	{
		size[root(a)]+=s2;
		roo[root(b)] = root(a);
	}
	else
	{
		size[root(b)]+=s1;
		roo[root(a)] = root(b);
	}
}
int main(int argc, char const *argv[])
{
	//freopen("input.txt","r",stdin);
//	freopen("output.txt","w",stdout);
	int n,m;
	sd2(n,m);
	int concomp = n;
	for(int i=1;i<=n;i++)
		{size[i]=1;roo[i]=i;}
	int a,b,c;
	for (int i = 0; i < m; ++i)
	{
		sd2(a,b);
		sd(c);
		v.pb(mp(c,mp(a,b)));
	}
	ll ans=0;
	sort(v.begin(), v.end());
	for(int i=0;i<m;i++)
	{
		if(root(v[i].s.f)!=root(v[i].s.s))
		{
			unio(v[i].s.f,v[i].s.s);
			ans+=v[i].f;
			concomp--;
			if(concomp==1)
				break;
		}
	}
	cout<<ans;
	return 0;
}