#include <stdio.h>
#include <iostream>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <string>
#include <sstream>
#include <map>
#include <algorithm>
#include <limits>

#define maxN(a,b) ((a>b)?(a):(b))
#define minN(a,b) ((a<b)?(a):(b))
#define INF (int)10e9
#define ABS(n)	((n>0)? n:(-1*n))
#define NINF -(int)10e9
#define eps 10e-9
#define WORDSIZE 31

using namespace std;

typedef vector<int> V;
typedef pair<int,int> PII;
typedef long long ll;
typedef vector<string> VS;
typedef vector<pair<int, int> > VPII;


	  //U  D  L  R
int dx[] = {0, 0, 1, -1};
int dy[] = {1,-1, 0, 0};
// numeric_limits<int>::min();
bool cmp(const PII p1, const PII p2) {
 return p1.second < p2.second;
}
int visited[102];
char conn[102][102];
int num[102],k;
vector< VPII > vv;
V v1, v2;

void dfs(int idx){
	if( visited[idx] == true){
		return;	
	}
//	printf("%d \n",idx);
	visited[idx] = true;	
	v1.push_back(idx);
	v2.push_back(num[idx]);
			
	for(int i = 0; i < k; i++){
		if(visited[i] == false && conn[idx][i] == 'Y'){
			//visited[i] = true;
		dfs(i);
		}	
	}
}
int main() {
	cin >> k;
	for(int i= 0;i < k; i++){
		scanf("%d", &num[i]);	
	}
	for(int i= 0;i < k; i++){
		scanf("%s", conn[i]);
	}

	int idxa[102] = {};
	for(int i = 0; i < k; i++){
		v1.clear();
		v2.clear();
		if( visited[i] == false){
			dfs(i);
			sort( v1.begin(), v1.end());
			sort( v2.begin(), v2.end());
			for(int j = 0; j < v1.size(); j++)
				idxa[v1[j]] = v2[j];
		}
	}
	for(int i = 0; i < k-1;i++){
		printf("%d ", idxa[i]);
	}
	printf("%d\n", idxa[k-1]);
	return 0;
}
