#include <iostream>
using namespace std;
void mergeSort(long arr[],int low,int mid,int high);
void partition(long arr[],int low,int high);
int main()
{
    	long k,n;
    	cin>>n>>k;
    	long a[n];
    	long i,lol;
    	for(i=0;i<n;i++)
    	cin>>a[i];
    	partition(a,0,n-1);
    	lol = a[k-1]-a[0];
    	for(i=1;i<n-k;i++)
    	{
    		if (lol > a[k+i-1]-a[i])
    		lol=a[k+i-1]-a[i];
    		else if (lol==0)
    		break;
    	}
    	cout<<lol<<endl;
    	
    return 0;
}

void partition(long arr[],int low,int high){

    int mid;

    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid);
         partition(arr,mid+1,high);
         mergeSort(arr,low,mid,high);
    }
}

void mergeSort(long arr[],int low,int mid,int high){

    int i,m,k,l;
    long temp[100000];
    l=low;
    i=low;
    m=mid+1;

    while((l<=mid)&&(m<=high)){

         if(arr[l]<=arr[m]){
             temp[i]=arr[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             m++;
         }
         i++;
    }

    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             i++;
         }
    }
   
    for(k=low;k<=high;k++){
         arr[k]=temp[k];
    }
}

