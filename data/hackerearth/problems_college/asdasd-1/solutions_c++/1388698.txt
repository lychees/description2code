#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <set>
#include <assert.h>
#include <cstring>
#include <string>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <time.h>
#include <climits>

using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;++i)
#define FORR(i,a,b) for(int i=a;i>=b;--i)
#define INT(x) scanf("%d",&x)
#define LLD(x) scanf("%lld",&x)
#define STR(x) scanf("%s",x)
#define CHAR(x) scanf("%c",&x)
#define PINT(x) printf("%d\n",x)
#define PLLD(x) printf("%lld\n",x)
#define CLR(x) memset(x,0,sizeof(x));
#define F first
#define S second
#define PB push_back
#define MOD 1000000007
#define MAX 10000000

const int INF = 1e7;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef map<int,int> MII;
typedef vector<pair<int,int> > VPII;
typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<LL> VLL;
typedef vector<VI> VVI;
typedef vector<VLL> VVL;

int gcd(int a,int b) {if(b==0) return a; else return gcd(b,a%b);}

LL power(LL b,LL e)
{
	LL r=1;
	while(e)
	{
		if(e&1)
		{
			r= (LL)r*b;		
		}

		e >>= 1;
		b = b*b;
		
	}


	return r;

}


int isprime[MAX+5];
int prime[MAX];
int primepos=0;

void seive()
{
	FOR(i,0,MAX+1)
		isprime[i] = 1;

	isprime[0] = 0;
	isprime[1] = 0;


	FOR(i,2,MAX+1)
	{
		if(isprime[i])
		{
			prime[primepos++]=i;
			for(int j=2*i;j<=MAX;j+=i)
				isprime[j]=0;
		}

	}

}



int dis_factors(int g,int fa,int fb)
{
	int  d=0;
	int f=0;
	int g1=g;

	FOR(i,0,primepos)
	{
		if(g1%prime[i]==0)
		{
			++d;
			while(g1%prime[i]==0)
			{
				g1 /= prime[i];
				++f;
			}
		}

		if(g1==1)
			break;
		
		if(prime[i]>g1)
			break;
			
	}


	return d;	
}


int main()
{

seive();

srand(time(0));

int t; INT(t);


while(t--)
{
	int a ; INT(a);
	int b ; INT(b);

	int fa = power(2,a) - 1;
	int fb = power(2,b) - 1;
	
	int g = gcd(fa,fb);

	int ans1 = dis_factors(g,fa,fb);

	PINT(ans1);

}


return 0;
}

