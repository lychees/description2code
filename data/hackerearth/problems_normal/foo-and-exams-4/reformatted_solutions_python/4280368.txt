'''
# Read input from stdin and provide input before running code

name = raw_input('What is your name?\n')
print 'Hi, %s.' % name
'''

import math


def cubicFunc(A, B, C, D, t):
    # print A, B, C, D, t, A*(pow(t,3)) + B*(pow(t,2)) + C*t + D
    return A*(pow(t, 3)) + B*(pow(t, 2)) + C*t + D


def binarySearch(A, B, C, D, K):
    lowIndex = 1
    highIndex = 2*lowIndex + 1

    lowFunc = cubicFunc(A, B, C, D, lowIndex)
    highFunc = cubicFunc(A, B, C, D, highIndex)
    while highFunc < K:
        highIndex = 2*highIndex + 1
        highFunc = cubicFunc(A, B, C, D, highIndex)

    while highIndex > lowIndex:
        index = (highIndex + lowIndex) / 2
        sub = cubicFunc(A, B, C, D, index)
        if cubicFunc(A, B, C, D, lowIndex) == K:
            return [lowIndex, lowIndex]
        elif sub == K:
            return [index, index]
        elif cubicFunc(A, B, C, D, highIndex) == K:
            return [highIndex, highIndex]
        elif sub > K:
            if highIndex == index:
                return sorted([highIndex, lowIndex])
            highIndex = index
        else:
            if lowIndex == index:
                return sorted([highIndex, lowIndex])
            lowIndex = index
    return sorted([highIndex-1, lowIndex-1])


T = int(raw_input())

for i in range(T):
    params = map(int, raw_input().strip().split(' '))
    A = params[0]
    B = params[1]
    C = params[2]
    D = params[3]
    K = params[4]

    # timeArray = range(1, int((K/2) ** (1. / 3)) + 2)
    # print timeArray
    # timeArray2 = [cubicFunc(A, B, C, D, x) for x in timeArray]
    # print timeArray2
    print(binarySearch(A, B, C, D, K)[0])
    # mini = min(range(len(timeArray2)), key=lambda i: abs(timeArray2[i]-K))
    #
