#include<iostream>
#include<algorithm>
#include<map>
#include<vector>
#include<cstdio>
#include<ctype.h>
#define si(n) scanf("%d",&n)
#define FOR(i,n) for(int i =0 ; i < (int)n ; i++)
#define FORN(i,x,n) for(int i = (int)x ; i < (int)n ; i++)

using namespace std;
vector<int> edges[1001];

bool visited[1001];
bool flag;

void dfs(int v){
	FOR(i,edges[v].size()){
		if(visited[edges[v][i]]){
			//cout << v << ' '<< edges[v][i] << endl;
			flag = true;
			break;
		}
		else{
			visited[edges[v][i]]=true;
			dfs(edges[v][i]);
		}
	}
}

int main(){
	int t,N,a,b,c,d;
	si(t);
	FOR(cs,t){
		si(N);
		flag =false;
		FORN(i,1,N+1){
			edges[i].clear();
			si(a);
			FOR(j,a){
				si(b);
				edges[i].push_back(b);
			}
			
		}
		FORN(i,1,N+1){
			FORN(j,1,N+1) visited[j]=false;
			visited[i]=true;
			dfs(i);
			if(flag) break;
		}
		if(flag) printf("#%d:Yes\n",cs+1);
		else printf("#%d:No\n",cs+1);
	}
	return 0;
}