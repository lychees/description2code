#include <iostream>
#include <vector>

using namespace std;

#define row vector<long long int>
#define matrix vector< row >

matrix square (matrix a)
{
	matrix c(4);
	for(int i=0;i<4;i++)
	{
		c[i].resize(4);
		for(int j=0;j<4;j++)
		{
			long long int sum=0;
			for(int k=0;k<4;k++)
			{
				sum+=(a[i][k]*a[k][j]);
			}
			c[i][j]=sum%1000003;
		}
	}
	return c;
}

matrix mult (matrix a,matrix b)
{
	matrix c(4);
	for(int i=0;i<4;i++)
	{
		c[i].resize(4);
		for(int j=0;j<4;j++)
		{
			long long int sum=0;
			for(int k=0;k<4;k++)
			{
				sum+=(a[i][k]*b[k][j]);
			}
			c[i][j]=sum%1000003;
		}
	}
	return c;
}


int main()
{
	
	matrix A(4);
	A[0].resize(4);	A[0][0]=1;	A[0][1]=0;	A[0][2]=0;	A[0][3]=0;
	A[1].resize(4);	A[1][0]=1;	A[1][1]=1;	A[1][2]=1;	A[1][3]=0;
	A[2].resize(4);	A[2][0]=1;	A[2][1]=1;	A[2][2]=0;	A[2][3]=1;
	A[3].resize(4);	A[3][0]=1;	A[3][1]=1;	A[3][2]=0;	A[3][3]=0;
	
	matrix data[32];
	data[0] = A;
	for(int i=1;i<32;i++)
	{
		data[i]=square(data[i-1]);
	}
	
	long long int t;
	cin>>t;
	for(long long int zz=0;zz<t;zz++)
	{
		long long int a,b,c,n,ans;
		cin>>a>>b>>c>>n;
		if(n==1)
			ans=a;
		else if(n==2)
			ans=a+b;
		else if(n==3)
			ans=a+b+c;
		else
		{
			long long int k=n-3;
			int place=0;
			matrix final(4);
			for(int i=0;i<4;i++)
			{
				final[i].resize(4);
				final[i][i]=1;
			}
			int count=0;
			while(k>0)
			{
				if(k%2==1)
					final=mult(final,data[count]);
				//cout<<"inside while\n";
				count++;
				k=k/2;
			}
			
			ans=((a+b+c)*final[0][0])+(c*final[1][0])+(b*final[2][0])+(a*final[3][0]);
			ans=ans%1000003;
		}
		cout<<ans<<endl;
				
	}
}
