/*    SHUBHAM SINHA    */
 
 
 
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>
 
#define ll unsigned long long
#define maxN 500000
#define maxVal 100000000
#define minVal -100000000
#define mod 1000000007LL
 
#define gcd(a,b) __gcd(a,b)
 
using namespace std;

int n;
int bit[maxN+5];
char a[maxN+5][20];
int r[maxN+5]; 

void update(int i,int v)
{
	while(i<=n)
	{
		bit[i]+=v;
		i=i+(i&(-1*i));
	}
}

int query(int i)
{
	int r=0;
	while(i>0)
	{
		r=r+bit[i];
		i=i-(i&(-1*i));
	}
	return r;
}

int main()
{
    #ifndef ONLINE_JUDGE
    	//freopen("in.txt","r",stdin);
    	//freopen("out.txt","w",stdout);
    #endif
	int t,i,q,k,s,e,m,x,ans;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for(i=1;i<=n;i++)
		{
			scanf("%s",a[i]);
			bit[i]=0;
		}
		for(i=1;i<=n;i++)
		{
			scanf("%d",&r[i]);
			update(i,1);
		}
		q=n-1;
		ans=0;
		while(q--)
		{
			scanf("%d",&k);
			//search for a index that is having query value k-1
			s=1;
			e=n;
			while(s<=e)
			{
				m=s+(e-s)/2;
				x=query(m);
				if(x>=k)
					e=m-1;
				else
					s=m+1;
			}
			m=s;
			update(m,-1);
			ans=max(ans,r[m]);
			printf("%s %d\n",a[m],ans);
		}
		s=1;
		e=n;
		k=1;
		while(s<=e)
		{
			m=s+(e-s)/2;
			x=query(m);
			if(x>=k)
				e=m-1;
			else
				s=m+1;
		}
		m=s;
		update(m,-1);
		ans=max(ans,r[m]);
		printf("%s %d\n",a[m],ans);
	}
    return 0;
}