#include<bits/stdc++.h>
using namespace std;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define LL long long
const int MOD = 1e9 + 7;
const int INF = INT_MAX;

LL op;
int n,inp[112345],per[112345],hash1[112345];
int flag[112345];
vector < vector<int> > here;
int hash2[112345],hash3[112345];

int main()
{
	memset(flag,0,sizeof(flag));
	cin >> n >> op;
	for(int i=1;i<=n;i++)
		cin >> inp[i];
	for(int i=1;i<=n;i++)
	{
		cin >> per[i];
		hash1[per[i]] = i;
	}

	int cnt = 0;
	for(int i=1;i<=n;i++)
	{
		vector<int> tmp;
		int cnt3 = 1;
		if(flag[per[i]] == 1)
			continue;
		int st = per[i];
		int j = i;
		flag[per[i]] = 1;
		tmp.PB(per[i]);
		hash2[per[i]] = cnt;
		hash3[per[i]] = cnt3;
		cnt3++;
		while(j != st)
		{
			flag[j] = 1;
			tmp.PB(j);
			hash2[j] = cnt;
			hash3[j] = cnt3;
			cnt3++;
			j = hash1[j];
		}
		here.PB(tmp);
		cnt++;
	}
	
	int t,newidx,ansid,ans[112345];
	int v,vidx,vsz,vpos;
	
	for(int i=1;i<=n;i++)
	{
		v = inp[i];
		vidx = hash2[i];
		vsz = here[vidx].size();		
		vpos = hash3[i];
		t = op%vsz;	
		newidx = (vpos + t)%vsz;	
		if(newidx == 0) newidx = vsz;

		ansid = here[vidx][newidx-1];
		ans[ansid] = v;
	}
	for(int i=1;i<=n;i++)
		cout << ans[i] << " ";
	cout << endl; 

	return 0;
}
