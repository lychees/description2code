/*
ID: magic24
PROG: 
LANG: 
*/
#include<bits/stdc++.h>
using namespace std;
//long long p1[1000000];
//long long p2[1000000];
bool primeFactors(long long a,long long b,long long c,long long d)
{
        long long cc=0,ca=0;
    	while (c%2 == 0)
    	{
        	cc++;
        	c = c/2;
    	}
 		//if(prime[2]<count*p)
 			//prime[2]=count*p;
 		//sr=sqrt(n);
 		while (a%2 == 0)
    	{
        	ca++;
        	a = a/2;
    	}
    	if(ca*b-cc*d<0)
    		return false;
    	
    	for (int i = 3; i <= sqrt(max(a,c)); i = i+2)
    	{	ca=cc=0;
       	 	while (c%i == 0)
        	{
            	//printf("%d ", i);
            	cc++;
            	c = c/i;
        	}
        	while (a%i == 0)
        	{
            	//printf("%d ", i);
            	ca++;
            	a = a/i;
        	}
        	if(ca*b-cc*d<0)
    			return false;
        }		
 
    if (c>2)
    {
    	//if(prime[n]==0)
    			//prime[n]=p;
        //printf ("%d ", n);
        if(a%c==0)
       		return (a/c)*b>=d;
       	else
       		return false;
	}
	return true;
}
int main()
{
	int t,i;
	long long a,b,c,d;;
	int flag=1;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%lld%lld%lld%lld",&a,&b,&c,&d);
		flag=1;
		if(d==0)
		{
			printf("Divisible\n");
			
		}
		else
		{	//memset(p1,0,sizeof(p1));
			//memset(p1,0,sizeof(p2));
			if(primeFactors(a,b,c,d))
			{
				printf("Divisible\n");
			}
			else
				printf("Not divisible\n");
			
		}
	}
	return 0;
}