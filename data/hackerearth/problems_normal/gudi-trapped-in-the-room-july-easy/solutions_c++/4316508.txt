/*template created by */
#include <bits/stdc++.h>
#define SI set<int> 
#define VI vector<int> 
#define ull unsigned long long 
#define inint(a) scanf("%d",&a)
#define input(a) cin>>a
#define ll long long 
#define print(a) cout<<a
#define printn(a) cout<<a<<"\n"
#define f first
#define s second
#define len(s) s.length()
#define range(a,b,n) for(int i=a;i<b;i+=n)
using namespace std;
int a,h;
set <string > lex;
void dfs(string pro){
	lex.insert(pro);
	string node=pro;
	int s=pro.size();
	for(int i=0;i<s;i++){
		node[(i+h)%s]=pro[i];
	}
	if(lex.find(node)==lex.end()){
		//no match in graph
		dfs(node);
	}
	node=pro;
	for(int i=0;i<s;i++){
		if(i%2){
			//0-based indexing it means even
			node[i]='0'+(pro[i]-'0'+a)%10;
		}
	}
	if(lex.find(node)==lex.end()){
		dfs(node);
	}
}
int main()
{
	
	int t;
	inint(t);
	while(t--){
		lex.clear();
		string in;
		input(in);
		inint(a);
		inint(h);
		dfs(in);
		cout<<*(lex.begin())<<"\n";
	}
	return 0;
}