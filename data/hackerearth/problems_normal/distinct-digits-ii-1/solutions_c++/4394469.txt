#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
const lli MOD=(lli)1000*1000*1000+7;
int bit[20][100*1000+9];
lli  arr[100*1000+9];
int N;
void upd(int at,int by,int c){
    for(;at<=N;at+=at&-at){
        bit[c][at]+=by;
    }
    return;
}
int query(int at,int c){
    int sum=0;
    for(;at>=1;at-=at&-at){
        sum+=bit[c][at];
    }
    return sum;
}
int distinct_dig(lli num){
    int cnt[10];
    memset(cnt,0,sizeof cnt);
    lli temp=num;
    while(temp>0){
        cnt[temp%10]=1;
        temp/=10;
    }
    int c=0;
    for(int i=0;i<10;++i){
        if(cnt[i])c++;
    }
    return c;
}
int main(){
    scanf("%d",&N);
    for(int i=1;i<=N;++i){
        lli  temp;scanf("%lld",&temp);
        arr[i]=temp;
        //  printf("i is %d distinct_dig is %d\n",i,distinct_dig(temp));
        upd(i,1,distinct_dig(temp));
    }
    int Q;scanf("%d",&Q);
    while(Q--){
        string typ;
        cin>>typ;
        if(typ=="MAX"){
            int l,r;scanf("%d %d",&l,&r);
            int ans=23,cnt=0;
            for(int i=10;i>=1;--i){
                cnt=query(r,i)-query(l-1,i);
                if(cnt!=0){
                    ans=i;
                    break;
                }   
            }
            printf("%d %d\n",ans,cnt);
        
    }else if(typ=="MIN"){
        int l,r;scanf("%d %d",&l,&r);
        int ans=23,cnt=0;
        for(int i=1;i<=10;++i){
            cnt=query(r,i)-query(l-1,i);
            if(cnt!=0){
                ans=i;
                break;
            }   
        }
        printf("%d %d\n",ans,cnt);
    }else if(typ=="MUL"){
       int u;lli v;
       scanf("%d %lld",&u,&v);
       upd(u,-1,distinct_dig(arr[u]));
       arr[u]=((arr[u]%MOD)*(v%MOD))%MOD;
       upd(u,1,distinct_dig(arr[u]));
    }else if(typ=="ADD"){
        int u;lli v;
       scanf("%d %lld",&u,&v);
       upd(u,-1,distinct_dig(arr[u]));
       arr[u]=((arr[u])%MOD+v%MOD)%MOD;
       upd(u,1,distinct_dig(arr[u]));
    }else if(typ=="REP"){
       int u;lli v;
       scanf("%d %lld",&u,&v);
       upd(u,-1,distinct_dig(arr[u]));
       arr[u]=(v)%MOD;
       upd(u,1,distinct_dig(arr[u]));
    }
    /*int typ;scanf("%d",&typ);
      if(typ==0){
      lli u,v;scanf("%lld %lld",&u,&v);
      upd(u,-1,distinct_dig(arr[u]));
      upd(u,1,distinct_dig(arr[u]+v));
      arr[u]+=v;
      }else if(typ==1){
      lli u,v;scanf("%lld %lld",&u,&v);
      upd(u,-1,distinct_dig(arr[u]));
      upd(u,1,distinct_dig(v));
      arr[u]=v;
      }else if(typ==2){
      int l,r,c;scanf("%d %d %d",&l,&r,&c);
      printf("%d\n",query(r,c)-query(l-1,c));
      }*/
}
return 0;
}
