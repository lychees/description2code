#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007LL
#define ll long long
#define pb push_back

ll power(ll a,ll b)
{
	ll res = 1;
	while(b)
	{
		if(b&1)
		{
			res *= a;
			res %= MOD;
		}
		a *= a;
		a %= MOD;
		b >>= 1;
	}
	return res;
}

void fibo(int n,ll &x,ll &y)
{
	if(n==1)
	{
		x = y = 1;
		return;
	}
	if(n&1)
	{	
		fibo(n-1,y,x);
		y += x;
		y %= MOD;
	}
	else
	{
		ll a,b;
		fibo(n/2,a,b);
		y = (a*a+b*b)%MOD;
		x = (a*b + a*(b-a+MOD))%MOD;
	}
}

int main()
{
	vector<int> fib;
	fib.pb(1);
	fib.pb(1);
	while(fib.back()<(int)1e9)
	{
		int sz = fib.size()-1;
		fib.pb(fib[sz]+fib[--sz]);
	}
	vector<int> cnt(fib.size());
	for(int i=1;i<cnt.size();++i)
		cnt[i] = fib[i]-i;
	int t,n;
	ll a,b;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		vector<int>::iterator it = lower_bound(cnt.begin(),cnt.end(),n);
		int pos = it - cnt.begin();
		--pos;
		int nonFibo = fib[pos]+(n-cnt[pos]);
		int Fibo = (fibo(n,a,b),a);
		printf("%lld\n",power(nonFibo,Fibo));
	}
	return 0;
}