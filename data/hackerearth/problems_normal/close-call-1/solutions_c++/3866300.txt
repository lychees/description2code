#include<iostream>
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<vector>
#include<algorithm>

using namespace std;
char a[50][50];
 int p,q;
int  wat[50][50];
int man[50][50];
vector<int>vi;
vector<int>vj;
vector<int>vv;
bool vis[50][50]={0};
void fillwat(int k)
{
     
     int i=vi[k];
     int j=vj[k];
     int pp=wat[i][j];
     if(a[i][j]!='#')
     {
     int val=vv[k];
     if(pp>val)
     {         wat[i][j]=val;
               vis[i][j]=1;
               if((i-1>=0)&&(vis[i-1][j]==0))
               {
                  vi.push_back(i-1);
                  vj.push_back(j);   
                  vv.push_back(val+1);
                        
               }
               if((i+1<p)&&(vis[i+1][j]==0))
               {
                  vi.push_back(i+1);
                  vj.push_back(j);         
               vv.push_back(val+1);
                  
               }
               if((j-1>=0)&&(vis[i][j-1]==0))
               {
                  vi.push_back(i);
                  vj.push_back(j-1);         
               vv.push_back(val+1);
                  
               }
               if((j+1<q)&&(vis[i][1+j]==0))
               {
                  vi.push_back(i);
                  vj.push_back(j+1);         
               vv.push_back(val+1);
                  
               }
      }     
      }   
     
}

vector<int>mi;
vector<int>mj;
vector<int>mv;
void fillman(int k)
{
     int i=mi[k];
     int j=mj[k];
     int pp=man[i][j];
      if(a[i][j]!='#')
     {
    
     int val=mv[k];
     if(pp>val)
     {         man[i][j]=val;
               vis[i][j]=1;
               if((i-1>=0)&&(vis[i-1][j]==0))
               {
                  mi.push_back(i-1);
                  mj.push_back(j);         
              mv.push_back(val+1);
                  
               }
               if((i+1<p)&&(vis[i+1][j]==0))
               {
                  mi.push_back(i+1);
                  mj.push_back(j);         
              mv.push_back(val+1);
              
               }
               if((j-1>=0)&&(vis[i][j-1]==0))
               {
                  mi.push_back(i);
                  mj.push_back(j-1);         
              mv.push_back(val+1);
              
               }
               if((j+1<q)&&(vis[i][1+j]==0))
               {
                  mi.push_back(i);
                  mj.push_back(j+1);         
              mv.push_back(val+1);
              
               }
      }  
      }      
     
}

int main()
{
   
    scanf("%d%d",&p,&q);
    for(int i=0;i<p;i++)
        scanf("%s",a[i]);
    for(int i=0;i<50;i++)
    {
            for(int j=0;j<50;j++)
            {
                    wat[i][j]=10000;
                    man[i][j]=10000;
            }
    }
    int posi=0;
    int posj=0;
    
    int pp=0;
    for(int i=0;i<p;i++)
    {
            for(int j=0;j<q;j++)
            {
                    if(a[i][j]=='R')
                    {
                               vi.push_back(i);
                               vj.push_back(j);
                               vv.push_back(0);
                               for(int ii=0;ii<50;ii++)
                               {
                                       for(int jj=0;jj<50;jj++)
                                       {
                                               vis[ii][jj]=0;
                                       }
                               }
                               while(pp<vi.size())
                               {       fillwat(pp);     
                                       pp++;
                               }
                    }
            }
    }
    int qq=0;
    for(int i=0;i<p;i++)
    {
            for(int j=0;j<q;j++)
            {
                    if(a[i][j]=='M')
                    {
                               mi.push_back(i);
                               mj.push_back(j);
                               mv.push_back(0);
                               for(int ii=0;ii<50;ii++)
                               {
                                       for(int jj=0;jj<50;jj++)
                                       {
                                               vis[ii][jj]=0;
                                       }
                               }
                               while(qq<mi.size())
                               {       fillman(qq);     
                                       qq++;
                               }
                    }
                    if(a[i][j]=='E')
                    {   posi=i;
                        posj=j;
                    }
            }
    }
    if(man[posi][posj]<=wat[posi][posj])
            cout<<"YES "<<wat[posi][posj]-man[posi][posj]<<"\n";
    else cout<<"NEGATIVE";         

    return 0;
}
