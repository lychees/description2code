#include<vector>
#include<iostream>
#include<stdio.h>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<math.h>
#include<cstdlib>
#include<ctime>
#include<cstring>
#include<climits>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

#define lli long long int
#define llu unsigned long long int
#define mp make_pair
#define pb push_back
#define F first
#define S second

const double eps = 1e-5;
const lli MOD = 1000000007ll;
const double PI = 3.14159265359;
int INF = 2147483645;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;

vector<int> G[100010];
int par[100010];
int dist[100010];
int vis[100010];
int start[100010];
int en[100010];
int tim = 0;

void dfs(int x)
{
    vis[x] = 1;
    start[x] = tim;
    tim++;

    for(int i=0;i<G[x].size();i++)
    {
        if(!vis[G[x][i]])
        {
            dfs(G[x][i]);
        }
    }
    en[x] = tim;
    tim++;
}

void bfs()
{
    par[1] = 0;
    dist[1] = 0;
    queue<int> Q;
    Q.push(1);
    vis[1] = 1;
    //cout<<Q.size()<<endl;
    while(!Q.empty())
    {
        int x = Q.front();
        Q.pop();
        //cout<<x<<" "<<par[x]<<endl;
        for(int i=0;i<G[x].size();i++)
        {
            int y = G[x][i];
            if(!vis[y])
            {
                vis[y] = 1;
                par[y] = x;
                dist[y] = dist[x] + 1;
                Q.push(y);
            }
        }
    }
}
int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin>>n;

    for(int i=0;i<n-1;i++)
    {
        int x,y;
        cin>>x>>y;
        G[x].pb(y);
        G[y].pb(x);
    }
    dfs(1);
    /*for(int i=1;i<=n;i++)
    {
        cout<<start[i]<<" "<<en[i]<<endl;
    }*/
    memset(vis,0,sizeof(vis));
    bfs();
    //cout<<par[2]<<endl;
    int q;
    cin>>q;
    while(q--)
    {
        int t,l,r;
        cin>>t>>l>>r;
        //cout<<dist[l]<<" "<<dist[r]<<endl;
        if(dist[l] > dist[r])
        {
            if(t==0)
            {
                cout<<"NO\n";
                continue;
            }
            else
            {
                if(start[l]>start[r] && en[l]<en[r])
                {
                    cout<<"YES "<<dist[l]-dist[r]+1<<endl;
                    continue;
                }
                else
                {
                    cout<<"NO\n";
                    continue;
                }
            }
        }
        else if(dist[r]>dist[l])
        {
            if(t==1)
            {
                cout<<"NO\n";
                continue;
            }
            else
            {
                if(start[r]>start[l] && en[r]<en[l])
                {
                    cout<<"YES "<<dist[r]-dist[l]+1<<endl;
                    continue;
                }
                else
                {
                    cout<<"NO\n";
                    continue;
                }
            }
        }
        else
        {
            if(l==r)
            {
                cout<<"YES "<<1<<endl;
            }
            else
            {
                cout<<"NO\n";
            }
        }
    }

    return 0;
}
