#include<iostream>
#include<map>
#include<cmath>
#include<bitset>
#include<new>
#include<utility>
#include<stdio.h>
#include<algorithm>
#include<stdlib.h>
#include<complex>
#include<valarray>
#include<queue>
#include<cstring>
using namespace std;

#define f first
#define s second
#define pb push_back
#define ll long long
#define ULL unsigned long long
#define mp make_pair
#define MOD 1000000007
#define mm map<int,map<int,bool> >
#define mv map<int,vector<int,bool> >
#define cp complex<double>
#define mpp map<pair<pair<int,int>,int > ,bool >
#define INF (1<<30)
#define MAX (1+(1<<20))

int a[1000000];
bool done[1000000];
int ans[1000000];
void dfs(int i)
{
    int tot=0,j=i;
    while(!done[i])
    {
	tot++;
	done[i]=1;
	i=a[i];
    }
    if(ans[i])
    {
	tot+=ans[i];
	while(!ans[j])
	{
	    ans[j]=tot;
	    j=a[j];
	    tot--;
	}
    }
    else
    {
	while(j!=i)
	{
	    ans[j]=tot;
	    tot--;
	    j=a[j];
	}
	while(!ans[j])
	{
	    ans[j]=tot;
	    j=a[j];
	}
    }
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
	int n;
	cin>>n;
	for(int i=0;i<n;i++)
	     scanf("%d",&a[i]);
	memset(done,0,sizeof(bool)*n);
	memset(ans,0,sizeof(int)*n);
	for(int i=0;i<n;i++)
	{
	    if(!ans[i])
		dfs(i);
	}
	int ansi=0;
	for(int i=1;i<n;i++)
	{
	    if(ans[i]>ans[ansi])
		ansi=i;
	}
	cout<<ansi<<endl;
    }
    return 0;
}
