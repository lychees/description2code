#include<iostream>
#include<algorithm>
#include<string.h>
#define MAXM 100000
using namespace std;

long long a[100005],f[100005][2];

long long query(long long idx,long long no)
{
  long long sum=0;
  for(;idx>0;idx-=idx&-idx)
    sum+=f[idx][no];
  return sum;
}
void add(long long pos,long long x,long long no)
{
  for(;pos<=MAXM;pos+=pos&-pos) f[pos][no]+=x;
}

int main()
{
    long long i,j,n,m,temp,q,l,r,k,s;
    cin>>n>>q;
    for(i=1;i<=n;i++) cin>>a[i];
    memset(f,0,sizeof(f));
    for(i=1;i<=n;i++) {
        add(i,a[i],0);
        add(i,i*a[i],1);
    }
    while(q--) {
        int type;
        cin>>type;
        if(type==1) {
            cin>>k>>l>>r;
            if(k<l) {
                cout<<query(r,1)-query(l-1,1)-k*(query(r,0)-query(l-1,0))<<"\n";
            } else if(k>r) {
                cout<<k*(query(r,0)-query(l-1,0))-(query(r,1)-query(l-1,1))<<"\n";
            } else {
                cout<<query(r,1)-query(k,1)-k*(query(r,0)-query(k,0))+k*(query(k-1,0)-query(l-1,0))-(query(k-1,1)-query(l-1,1))<<"\n";
            }
        } else if(type==2) {
            cin>>k>>s;
            add(k,s,0);
            add(k,k*s,1);
        }
    }
    return 0;
}
