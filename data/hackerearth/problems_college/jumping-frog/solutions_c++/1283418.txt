#include<iostream>
#include<cstdio>
#define ll int
#include<cstring>
#include<algorithm>
#include<cmath>
#include<queue>
#include<vector>
using namespace std;
typedef vector<ll> v;
typedef vector<v> vv;
ll arr[100001];
ll D[100001];
bool visite[100000];
ll n;
void bfs(vv& adj,ll s,ll end)
{
//	cout<<"yyy";
	ll u,v,i,top;
	memset(visite,false,sizeof visite);
	memset(D,-1,sizeof D);
	queue<ll> Q;
	D[s]=0;
	Q.push(s);
	while(!Q.empty())
	{
		top=Q.front();
		Q.pop();
		if(top==end)
			break;
		u=arr[top];
		if(!visite[u]){
		for(i=0;i<adj[u].size();i++)
		{
			v=adj[u][i];
			if(D[v]==-1)
			{
				D[v]=1+D[top];
				//visite[v]=true;
				Q.push(v);
			}
		}
		visite[u]=true;
		}
		if(top>0)
		{
			if(D[top-1]==-1)
			{
				D[top-1]=D[top]+1;
				//visite[top-1]=true;
				Q.push(top-1);
			}
		}
	}
	//cout<<"nnnn";
	//for(i=0;i<n;i++)
	//	cout<<D[i]<<"  ";
}
int main()
{
	ll i,x,y,via,q,sum;
	scanf("%d",&n);
	vv adj(101);
	for(i=0;i<n;i++)
	{
		scanf("%d",&arr[i]);
		adj[arr[i]].push_back(i);
	}
	scanf("%d",&q);
	while(q--)
	{
		scanf("%d%d%d",&x,&via,&y);
		bfs(adj,x,via);
		if(D[via]==-1)
		{
			printf("-1\n");
			continue;
		}
		else
			sum=D[via];
		bfs(adj,via,y);
		if(D[y]==-1)
			printf("-1\n");
		else
			printf("%d\n",sum+D[y]);
	}
	return 0;
}
