#include<bits/stdc++.h>

#define assn(n,a,b) assert(n<=b and n>=a)
#define pb push_back
#define mp make_pair
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define sd(n) scanf("%d",&n)
#define si(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
using namespace std;

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

#define MOD 1000000007ll
LL mpow(LL a, LL n) 
{LL ret=1;LL b=a;while(n) {if(n&1) 
    ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
return (LL)ret;}

#ifdef ONLINE_JUDGE
//FILE *fin = freopen(stdin,"r",stdin);
//FILE *fout = freopen(stdout,"w",stdout);
#endif

#define MAXN 500100
char str[MAXN];
VI prim;
void pre(){
	for(int i=2; i*i<MAXN; i++)
		for(int j=i; j*i<MAXN; j++)
			str[i*j]=1;
	for(int i=2; i<MAXN; i++)
		if(not str[i])prim.pb(i);
}

int pmax(int n){
	int ret,retcnt=0;
	for(int i=0; prim[i]*prim[i]<=n; i++){
		int cnt=0;
		while(n%prim[i]==0)
			n/=prim[i],cnt++;
		if(cnt>retcnt)retcnt=cnt,ret=prim[i];
	}
	if(n>1){
		if(retcnt==0)ret=n;
		else if(retcnt==1)ret=min(ret, n);
	}
	return ret;
}

int main()
{
    ios_base::sync_with_stdio(false);
    pre();
    int n,l;
    cin >> n >> l;
    VI ar(n),p(n,0);
    for(int i=0; i<n; i++)
        cin >> ar[i];
    sort(all(ar));
    int left=0;
    p[n-1]=1;
    for(int i=2; i<=l; i++){
    	if((pmax(i)%i)%2)p[n-1]++;
    	else{
    		if(p[left])p[left]--;
    		else{
    			ar[left]/=2;
    			if(ar[left]==0)left++;
    		}
    	}
    	if(left>=n)break;
    }
    cout << n-left << endl;
    for(int i=left; i<n; i++)
    	cout << (ar[i]*mpow(2, p[i]))%MOD << " ";
    cout << endl;
    return 0;
}

