#include<iostream>
#include <list>
#include <limits.h>
using namespace std;
list<int> adj[100000];  
int n,m;  
bool Cyclic(int v, bool visited[], int parent);
bool isCyclic();    
 
bool Cyclic(int v, bool visited[], int parent)
{
    visited[v] = true;
 
    list<int>::iterator i;
    for (i = adj[v].begin(); i != adj[v].end(); ++i)
    {
        if (!visited[*i])
        {
           if (Cyclic(*i, visited, v))
              return true;
        }
        else if (*i != parent)
           return true;
    }
    return false;
}
 bool visited[100000]={0}; 
bool isCyclic()
{
 
    for (int u = 0; u < n; u++)
        if (!visited[u]) 
          if (Cyclic(u, visited, -1))
             return true;
 
    return false;
}
 
int main()
{
	int x,y,i;
	scanf("%d",&n);
    scanf("%d",&m);
    for(i=0;i<m;i++)
    {
    	scanf("%d%d",&x,&y);
    	adj[y].push_back(x); 
    adj[x].push_back(y);
    }
    if(isCyclic())
    printf("FHTAGN!\n");
    else
    printf("NO\n");
    return 0;
}