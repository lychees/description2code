#include <bits/stdc++.h>

using namespace std;

#define ll long long int
#define N (int)1e7 + 5
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define MOD 1000000007
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i=0;i<N;i++)
#define frep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<int,int>
#define vii vector<int>
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcount(x)
#define print(A,j,k) for(int ii=j;ii<=k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)


string str(int i) {
	string s = "";
	while(i) {
		s.pb(i%10);
		i /= 10;
	}
	reverse(all(s));
	return s;
}

string oct_integer(string a) {
	string s = "";
	int n = a.size();
//	cout << a << " " << n << "\n";
	while (n % 3 != 0) {
	//	cout << "pushing";
		s.pb('0');
		n++;
	}
	s =s + a;
	string final = "";
	int l = 0;
	while (l < s.size()) {
		int ans = 0;
		if(s[l] == '1')
			ans += 4;
		l++;
		if(s[l] == '1')
			ans += 2;
		l++;
		if(s[l] == '1')
			ans += 1;
		l++;
		final.pb(ans + '0');
	}
//	while(final[0] == '0')
	//	final.erase(final.begin());
	return final;
}

string oct_decimal(string a) {
	string s = "";
	int n = a.size();
//	cout << a << " " << n << "\n";
	while (n % 3 != 0) {
	//	cout << "pushing";
		s.pb('0');
		n++;
	}
	s =a + s;
	string final = "";
	int l = 0;
	while (l < s.size()) {
		int ans = 0;
		if(s[l] == '1')
			ans += 4;
		l++;
		if(s[l] == '1')
			ans += 2;
		l++;
		if(s[l] == '1')
			ans += 1;
		l++;
		final.pb(ans + '0');
	}
//	while(final[0] == '0')
	//	final.erase(final.begin());
	return final;
}

string word_integer(string a) {
	string s = "";
	int n = a.size();
	while (n % 3 != 0) {
		s.pb('0');
		n++;
	}
	s =s + a;
	string final = "";
	int l = 0;
	while (l < s.size()) {
		int ans = 0;
		if(s[l] == '1')
			ans += 4;
		l++;
		if(s[l] == '1')
			ans += 2;
		l++;
		if(s[l] == '1')
			ans += 1;
		l++;
		if(ans == 0)
			final.pb(' ');
		else
			final.pb(ans - 1 + 'A' );
	}
//	while(final[0] == '0')
	//	final.erase(final.begin());
	return final;
}

string word_decimal(string a) {
	string s = "";
	int n = a.size();
	while (n % 3 != 0) {
		s.pb('0');
		n++;
	}
	s = a + s;
	string final = "";
	int l = 0;
	while (l < s.size()) {
		int ans = 0;
		if(s[l] == '1')
			ans += 4;
		l++;
		if(s[l] == '1')
			ans += 2;
		l++;
		if(s[l] == '1')
			ans += 1;
		l++;
		if(ans == 0)
			final.pb(' ');
		else
			final.pb(ans - 1 + 'A' );
	}
//	while(final[0] == '0')
	//	final.erase(final.begin());
	return final;
}


int main(int argc, char const *argv[])
{
	//fast;

	string s;

	//s = "101101101110.111";

	cin >> s;


	while(s[0] == '0') {
		s.erase(s.begin());
	}

	if(s.size() == 0) {
		cout << "0  ";
		return 0;
	}

	bool decimal = false;

	string a = "";
	int dd;

	rep(i , s.size()) {
		if (s[i] == '.') {
			decimal = true;
			dd = i+1;
			break;
		}
		a .pb(s[i]);
	}
		string b = "";

	if (decimal) {
		frep(i , dd , (int)s.size() - 1)
			b.pb(s[i]);
	}

	cout << oct_integer(a);
	if (decimal) {
		cout << "." << oct_decimal(b);
	}
	cout << " ";

	cout << word_integer(a);
	if (decimal) {
		cout << " " << word_decimal(b);
	}

	/*int n , m;
	cin >> n >> m;

	frep(i , n , m) {
		if (i % 15 == 0)
			s += str(i) + ",";
		else if(i%3 ==0 || i%5 == 0)
			continue;
		else
			s += str(i) + ",";
	}

	rep(i , (int)(s.size()) - 1)
		cout << s[i];
	cout << "\n";*/

	return 0;
}