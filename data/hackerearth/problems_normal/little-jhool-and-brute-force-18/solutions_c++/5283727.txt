#include <iostream>
#include <vector>
#include <map>
#include <iterator>
#include <algorithm>
using namespace std;
#define NMAX 704977
int main()
{
    //tc = test case
    vector<int> cube;
    int c = 0;
    while(1){
    	int mul = c*c*c;
    	if( mul <= NMAX){
    		cube.push_back(mul);
    	}else{
    		break;
    	}
    	c++;
    }
    map<int,int> countmap;
    vector<int> finalnumbers;
    for(int i = 1; i <c ; i++){
    	for(int j = i;  j < c ; j++){
    		int sum = cube[i]+cube[j];
    		countmap[sum]++;
    		if(countmap[sum] == 2 && sum!=0){
    			finalnumbers.push_back(sum);
    		}
    	}
    }
    sort(finalnumbers.begin(),finalnumbers.end());
    //print final numbers
    //copy(finalnumbers.begin(),finalnumbers.end(),ostream_iterator<int>(cout,", "));
    int tc,tc_max;
    cin >> tc_max;
    for(tc = 0; tc <tc_max ; tc++){
    	int n;
    	cin >> n;
    	int res  = -1;
    	vector<int>::iterator iter= finalnumbers.begin();
    	for(;iter!= finalnumbers.end(); iter++){
    		if(n > *iter){
    			res = *iter;
    		}else{
    			break;
    		}
    	}
    	cout << res << endl;
    }
    return 0;
}
