#include <bits/stdc++.h>

using namespace std;

int N, D, Min, Pointer;
vector <int> Links[1001];
int Arr[1001] = {0};
bool vis[1001] = {false};


void dfs(int s)
{
    if(!vis[s])
    {
        Arr[Pointer]++;
        vis[s] = true;
        for(int j = 0; j < Links[s].size(); j++)
        {
            dfs(Links[s][j]);
        }
    }
}

int main()
{
    cin >> N >> D;
    for(int i = 0; i < 1001; i++)
    {
    	if(i <= N)
    		Arr[i] = 0;
    	else
    		Arr[i] = 5000;
    }
    for(int i = 0; i < D; i++)
    {
        int x, y;
        cin >> x >> y;
        Links[x].push_back(y);
    }

    for(int i = 1; i <= N; i++)
    {
        for(int i = 0; i < 1001; i++)
            vis[i] = false;
        Pointer = i;
        dfs(i);
    }

    Min = Arr[1];
    for(int i = 1; i <= D; i++)
    {
        if(Min > Arr[i])
            Min = Arr[i];
    }

    cout << Min;
}