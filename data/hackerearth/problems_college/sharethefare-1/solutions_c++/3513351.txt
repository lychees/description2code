#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
using namespace std;
int main()
{
	int t;
	cin>>t;
	for(int i=0;i<t;i++)
	{
		int n,q;
		cin>>n>>q;
		vector< pair<string,int> > v(n);
		for(int j=0;j<n;j++)
		{
				cin>>v[j].first;
				v[j].second = 0;
				 
		}
		for(int k=0;k<q;k++)
		{
		
			string payer;
			int amount;
			int m;
			cin>>payer;
			cin>>amount;
			cin>>m;
			vector<string> shareHolder(m);
			vector< pair<string,int> >:: iterator p_i,b_i;
			
			for(int z=0;z<m;z++)
			{
				cin>>shareHolder[z];
			}
			int money = 0, paid = 0;
			for(int z=0;z<m;z++)
			{
				for(b_i=v.begin();b_i!=v.end();b_i++)
				{
						if(shareHolder[z] == b_i->first)
						{
								b_i->second -= (int)amount/ (m+1);
								paid += (int)amount/ (m+1);    	
						}
						else if(payer == b_i->first)
								p_i = b_i;
				}
			}
			//money  = amount - paid;
			p_i->second += paid; 	
		}
		for(int z=0;z<n;z++)
		{
			if( v[z].second > 0)
			{
				cout<<v[z].first<<" is owed "<<v[z].second<<endl;
			}
			else if(v[z].second < 0)
			{
				cout<<v[z].first<<" owes "<< -v[z].second<<endl;
			}
			else
				cout<<v[z].first<<" neither owes nor is owed "<<endl;
				
		}
				
	}
}