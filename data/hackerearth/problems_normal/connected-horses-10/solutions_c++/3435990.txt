#include<bits/stdc++.h>
using namespace std;
int n,m;
int c;
const int MAXN = 1e3+3;
const long long MOD = 1e9+7;
bool vis[MAXN][MAXN];
bool B[MAXN][MAXN];
long long fact[MAXN*MAXN];
void DFS(int x, int y) {
	c++;
	vis[x][y]=true;
	if(x!=1) {
		if(y>=3 and B[x-1][y-2] and !vis[x-1][y-2])
			DFS(x-1,y-2);
		if(y+2<=m and B[x-1][y+2] and !vis[x-1][y+2])
			DFS(x-1,y+2);
	}
	if(x>=3) {
		if(y>=2 and B[x-2][y-1] and !vis[x-2][y-1])
			DFS(x-2,y-1);
		if(y+1<=m and B[x-2][y+1] and !vis[x-2][y+1])
			DFS(x-2,y+1);
	}
	if(x+1<=n) {
		if(y>=3 and B[x+1][y-2] and !vis[x+1][y-2])
			DFS(x+1,y-2);
		if(y+2<=m and B[x+1][y+2] and !vis[x+1][y+2])
			DFS(x+1,y+2);
	}
	if(x+2<=n) {
		if(y>=2 and B[x+2][y-1] and !vis[x+2][y-1])
			DFS(x+2,y-1);
		if(y+1<=m and B[x+2][y+1] and !vis[x+2][y+1])
			DFS(x+2,y+1);
	}
}
int main() {
	fact[0]=fact[1]=1;
	for(int i=2;i<MAXN*MAXN;i++) {
		fact[i]=fact[i-1]*1LL*i;
		if(fact[i]>=MOD)
			fact[i]%=MOD;
	}
	int t;
	cin>>t;
	while(t--) {
		int q;
		scanf("%d%d%d",&n,&m,&q);
		for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) B[i][j]=vis[i][j]=false;
		long long ans=1;
		while(q--) {
			int x,y;
			scanf("%d%d",&x,&y);
			B[x][y]=true;
		}
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=m;j++) {
				if(B[i][j] and !vis[i][j]) {
					c=0;
					DFS(i,j);
					ans*=fact[c];
					if(ans>=MOD)
						ans%=MOD;
				}
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}