#include <stdio.h>
#include <stdlib.h>

int cmpfunc (const void * a, const void * b)
{
	if( *(long long int*)a - *(long long int*)b < 0 )
        return -1;
    if( *(long long int*)a - *(long long int*)b > 0 )
        return 1;
    if( *(long long int*)a - *(long long int*)b == 0 )
        return 0;
}

int findSum (long long int arr[], int len, long long int sum) {
        int i;
        for (i = 0; i < len ; i++) {
                int left = i + 1;
                int right = len - 1;
                while (right > left) {
                        if (arr[right] + arr[left] + arr[i] - sum == 0) {
                                return 1;
                        }
                        if (arr[right] + arr[left] + arr[i] - sum > 0)
                                right--;
                        else
                                left++;
                }
        }
        return -1;
}




int main() 
{
	int n, i;
	long long int k;
	long long int arr[30000];
	scanf("%d", &n);
	for(i = 0; i < n; i++) {
		scanf("%lld", &arr[i]);
	}
	scanf("%lld", &k);
	qsort(arr, n, sizeof(long long int), cmpfunc);
    if(findSum(arr, n, k) == 1) {
    	printf("YES\n");
    }
    else {
    	printf("NO\n");
    }
    return 0;
}
