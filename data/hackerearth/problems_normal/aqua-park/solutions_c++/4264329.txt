#include <bits/stdc++.h>
using namespace std;
typedef pair<int, int> PII;

vector<int> dp(105, -1);
vector<pair<PII, PII>> obj;
int t;

bool myfunc(pair<PII, PII> a, pair<PII, PII> b)
{
	return a.first.first < b.first.first;
}

float get_y(int id, int x)
{
	float x1 = float(obj[id].first.first);
	float y1 = float(obj[id].first.second);
	float x2 = float(obj[id].second.first);
	float y2 = float(obj[id].second.second);

	return y2 - ((x2 - x) * (y2 - y1) / (x2 - x1));
}

int binarySearch(int x, int y)
{
	float max = -1;
	int p = -1;
	for (int i = 0; i < t; i++)
	{
		float ym = get_y(i, x);
		if (x >= obj[i].first.first and x <= obj[i].second.first and
			ym > max and y > ym)
		{
			max = ym;
			p = i;
		}
	}
	return p;
}

PII solve(int id)
{
	return (obj[id].first.second > obj[id].second.second) ? obj[id].second : obj[id].first;
}


int main()
{
	int x;

	cin >> x >> t;
	obj.resize(t);

	for (int i = 0; i < t; i++)
	{
		cin >> obj[i].first.first >> obj[i].first.second
			>> obj[i].second.first >> obj[i].second.second;
	}

	int p = 0;
	int y = INT_MAX;
	while ((p = binarySearch(x, y)) != -1)
	{
		PII pr = solve(p);
		x = pr.first;
		y = pr.second;
	}

	cout << x;

	system("pause");
}
