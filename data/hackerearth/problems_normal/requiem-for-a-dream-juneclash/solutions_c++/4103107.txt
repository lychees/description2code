#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

#define ll long long
#define pb push_back
#define pii pair<int,int>
#define mp make_pair
#define F first
#define S second

#define N 100001
#define LGN 17

vector<pii> graph[N];
int depth[N];
int anc[N][LGN];

struct node{

	ll pref,suff,sum,ans;

	void merge(node a,node b){
		pref=max(a.pref,a.sum+b.pref);
		suff=max(b.suff,a.suff+b.sum);
		sum=a.sum+b.sum;
		ans=max(a.ans,b.ans);
		ans=max(ans,a.suff+b.pref);
	}

	void assgnleaf(int w){
		sum=w;
		if(w)
			pref=suff=ans=w;
		else
			pref=suff=ans=0;
	}

}arr[N][LGN];

void dfs(int v,int p){
	for(int i=0;i<graph[v].size();i++){
		if(graph[v][i].F!=p){
			depth[graph[v][i].F]=depth[v]+1;
			anc[graph[v][i].F][0]=v;
			arr[graph[v][i].F][0].assgnleaf(graph[v][i].S);
			dfs(graph[v][i].F,v);
		}
	}
}

ll lca(int u,int v){
	node an1,an2,temp;
	an1.assgnleaf(0);
	an2.assgnleaf(0);
	if(depth[u]>depth[v]){
		int diff=depth[u]-depth[v];
		for(int i=LGN-1;i>=0;i--){
			if((1<<i)<=diff){
				temp=an1;
				an1.merge(temp,arr[u][i]);
				u=anc[u][i];
				diff-=(1<<i);
			}
		}
	}else{
		int diff=depth[v]-depth[u];
		for(int i=LGN-1;i>=0;i--){
			if((1<<i)<=diff){
				temp=an2;
				an2.merge(temp,arr[v][i]);
				v=anc[v][i];
				diff-=(1<<i);
			}
		}
	}
	if(u==v)
		return max(an1.ans,an2.ans);
	for(int i=LGN-1;i>=0;i--){
		if(anc[u][i]!=anc[v][i]){
			temp=an1;
			an1.merge(temp,arr[u][i]);
			temp=an2;
			an2.merge(temp,arr[v][i]);
			u=anc[u][i];
			v=anc[v][i];
		}
	}
	temp=an1;
	an1.merge(temp,arr[u][0]);
	temp=an2;
	an2.merge(temp,arr[v][0]);
	return max(an1.suff+an2.suff,max(an1.ans,an2.ans));
}

int main(){
	int n,q;
	scanf("%d%d",&n,&q);
	for(int i=0;i<n-1;i++){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		graph[u].pb(mp(v,w));
		graph[v].pb(mp(u,w));
	}
	dfs(1,0);
	for(int j=1;j<LGN;j++){
		for(int i=1;i<=n;i++){
			if(depth[i]>=(1<<j)){
				anc[i][j]=anc[anc[i][j-1]][j-1];
				arr[i][j].merge(arr[i][j-1],arr[anc[i][j-1]][j-1]);
			}
		}
	}
	while(q--){
		int u,v;
		scanf("%d%d",&u,&v);
		printf("%lld\n",lca(u,v));
	}
}