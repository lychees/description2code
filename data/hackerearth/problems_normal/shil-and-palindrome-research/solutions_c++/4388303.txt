#include<bits/stdc++.h>
using namespace std;
int BIT[100005][27],n;
void update(int idx,int pos,int val)
{
    for(;idx<=n;idx+=((idx)&(-idx)))
    {
        BIT[idx][pos]+=val;
    }
}
int query(int idx,int pos)
{
    int sum=0;
    for(;idx>0;idx-=((idx)&(-idx)))
        sum+=BIT[idx][pos];
    return sum;
}
int main()
{
    ios::sync_with_stdio(false);
    int q,i,k,a,b,c,cal;
    char ch;
    string str;
    cin>>n>>q;
    cin>>str;
    memset(BIT,0,sizeof(BIT));
    for(i=1;i<=n;i++)
    {
        a=str[i-1]-'a';
        update(i,a,1);
    }
    while(q--)
    {
        cin>>k;
            if(k==1)
            {
                cin>>a>>ch;
                update(a,str[a-1]-'a',-1);
                update(a,ch-'a',1);
                str[a-1]=ch;
            }
            else if(k==2)
            {
                cin>>a>>b;
                c=0;
                for(i=0;i<26;i++)
                {
                    cal=query(b,i)-query(a-1,i);
                    if(cal%2==1)
                        c++;
                    if(c>1)
                        break;
                }
                if(i==26)
                    cout<<"yes\n";
                else
                    cout<<"no\n";
            }
    }
    return 0;
}
