/*
ID: eoart2
PROG: transform
LANG: C++
*/
//#define MYDEBUG
#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:134217728")
#include <cstdio>
#include <iostream>
#include <iomanip> 
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <string>
#include <functional>
#include <cassert>
#include <random>

const long long MOD = 1000000007;
const int INF = 1000000000;
const int MAXN = 200000;
const double EPS = 1e-7;
const int HASH_POW = 127;
const double PI = acos(-1.0);

using namespace std;

void my_return(int code)
{
#ifdef MYDEBUG
	cout << "\nTime = " << fixed << setprecision(3) << double(clock()) / CLOCKS_PER_SEC << endl;
#endif
	exit(code);
}

int main()
{
	cin.sync_with_stdio(0);
	cin.tie(0);
	mt19937 mt_rand(time(NULL));
	#ifdef MYDEBUG
	freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	#else
	/*freopen("g1.in", "r", stdin);
	freopen("g1.out", "w", stdout);*/
	#endif

	int n;
	int p[10];
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%d", &p[i]);
	sort(p, p + n);
	int cnt = 0;
	do
	{
		for (int i = 0; i < (1 << n); ++i)
		{
			int sum1 = 0, sum2 = 0;
			bool good = true;
			for (int j = 0; j < n; ++j)
			{
				if (i & (1 << j))
					sum1 += p[j];
				else
					sum2 += p[j];
				if (sum1 > sum2)
					good = false;
			}
			if (good)
				++cnt;
		}
	} while (next_permutation(p, p + n));

	int sum = 0;
	for (int i = 0; i < n; ++i)
		sum += p[i];

	printf("%d %d\n", cnt, sum);
	if (cnt > sum)
		printf("We will win!\n");
	else
		printf("Got no way out!\n");

	my_return(0);
}