#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue>
#include <climits>
#include <cassert>
#include <stack>
 
using namespace std;

typedef pair<int,int> pii;
 
#define pb push_back
#define mp make_pair
//#define sz size()
#define fr first
#define sc second

#define forr(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) forr(i,0,n)
#define all(v) v.begin(),v.end()
#define uniq(v) sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a) memset(a,0,sizeof a)
#define debug if(1)
#define debugoff if(0)
 
#define print(x) cout << x << " ";
#define pn() cout << endl;
#define trace1(x) cout << #x << ": " << x << endl;
#define trace2(x, y) cout << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cout << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define MAX 20

int a[MAX];
int n;

int f1(){

	int b[MAX];
	int beg = 1; int end = n; int lst = 1;
	for(int i=beg;i<=n and end>=1;i++){
		b[end] = a[i];
		end -= 2;
		lst = i;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	sort(all(v));
	int sz = v.size();
	int ans = 0; int total = 0;
	do{

		end = n-1;
		for(int i= sz-1; i>=0 and end>=1; i--){
			b[end]=v[i];
			end -= 2;
		}
		total = 0;
		for(int i=2;i<=n;i++)
			total += (i*(abs(b[i]-b[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);

	return ans ;
}


int f2(){

	int b[MAX];
	int beg = 1; int end = n-1; int lst = 1;
	for(int i=beg;i<=n and end>=1;i++){
		b[end] = a[i];
		end -= 2;
		lst = i;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	sort(all(v));
	int sz = v.size();
	int ans = 0; int total = 0;
	do{

		end = n;
		for(int i= sz-1; i>=0 and end>=1; i--){
			b[end]=v[i];
			end -= 2;
		}
		total = 0;
		for(int i=2;i<=n;i++)
			total += (i*(abs(b[i]-b[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);
	return ans ;
}

int f3(){

	sort(a+1,a+n+1,greater<int>());

	int b[MAX];
	int beg = 1; int end = n; int lst = 1;
	for(int i=beg;i<=n and end>=1;i++){
		b[end] = a[i];
		end -= 2;
		lst = i;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	sort(all(v));
	int sz = v.size();
	int ans = 0; int total = 0;
	do{

		end = n-1;
		for(int i= sz-1; i>=0 and end>=1; i--){
			b[end]=v[i];
			end -= 2;
		}
		total = 0;
		for(int i=2;i<=n;i++)
			total += (i*(abs(b[i]-b[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);
	return ans ;
}

int f4(){

	sort(a+1,a+n+1,greater<int>());
	int b[MAX];
	int beg = 1; int end = n-1; int lst = 1;
	for(int i=beg;i<=n and end>=1;i++){
		b[end] = a[i];
		end -= 2;
		lst = i;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	sort(all(v));
	int sz = v.size();
	int ans = 0; int total = 0;
	do{

		end = n;
		for(int i= sz-1; i>=0 and end>=1; i--){
			b[end]=v[i];
			end -= 2;
		}
		total = 0;
		for(int i=2;i<=n;i++)
			total += (i*(abs(b[i]-b[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);
	return ans ;
}


int main(){

	int t;
	cin>>t;
	while(t--){
		int ans = 0;
		cin>>n;
		forr(i,1,n+1)cin>>a[i];
		sort(a+1,a+n+1);

		int val1 = f1();
		int val2 = f2();
		int val3 = f3();
		int val4 = f4();

		ans = max(max(val1,val2) , max(val3,val4));
		cout<<ans<<endl;
	}
	return 0;
}
				
