#include <bits/stdc++.h>
using namespace std;

int MOD=1000000007;

long long fact[100010];
long long invf[100010];
long long S[100010];

long long fast_pow_mod(long long base, long long n)
{
	if(n==0) return 1;
	if(n==1) return base;
	long long ans=fast_pow_mod(base,n/2);
	ans=(ans*ans)%MOD;
	if(n&1) ans=(ans*base)%MOD;
	return ans;
}

long long invert(long long n) {	return fast_pow_mod(n,MOD-2); }

void init(int n)
{
	int i;
	fact[0]=1;
	for(i=1;i<=n;i++) fact[i]=(fact[i-1]*i)%MOD;
	for(i=0;i<=n;i++) invf[i]=invert(fact[i]);
}

int main()
{
    long long i,n,k,T,ans,cur;
    init(100005);
    scanf("%lld",&T);
    while(T--)
    {
    	scanf("%lld %lld",&n,&k);
    	for(i=0;i<n;i++) scanf("%lld",&S[i]);
    	sort(S,S+n);
    	ans=0;
    	for(i=0;i<n;i++)
    	{
    		if(n-i-1>=k-1)
    		{
    			cur=S[i]%MOD;
    			cur=(cur*fact[n-i-1])%MOD;
    			cur=(cur*invf[k-1])%MOD;
    			cur=(cur*invf[n-i-k])%MOD;
    			ans=(ans+cur)%MOD;
    		}
    	}
    	printf("%lld\n",ans);
    }
    return 0;
}
