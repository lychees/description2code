#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("clash.inp","r",stdin)
#define OUTPUT freopen("clash.out","w",stdout)
#define FOR(i,l,r) for(auto i=(l);i<=(r);i++)
#define REP(i,l,r) for(auto i=(l);i<(r);i++)
#define FORD(i,l,r) for(auto i=(l);i>=(r);i--)
#define REPD(i,l,r) for(auto i=(l);i>(r);i--)
#define ENDL printf("\n")
#define debug 1

typedef unsigned int ui;
typedef long long ll;
typedef pair<int,int> ii;


const int inf=1e9;
const int MOD=1e9+7;
const int N=2*2*3*3*7;


ui base[N][N],ans[N];
ui tbase[N][N],tans[N];
int main(){
//    freopen("input.inp","r",stdin);
    REP(i,0,N)
        FOR(j,1,9) if (i*10%j==0)
            base[i][(i*10+j)%N]++;
    ///
    ll n;
    cin>>n;
    ans[0]=1;
    //n&=(1LL<<32)-1;
    while (n){
        if (n&1){
            REP(i,0,N) tans[i]=ans[i];
            memset(ans,0,sizeof(ans));
            REP(j,0,N)
                REP(k,0,N) ans[j]+=tans[k]*base[k][j];
        }
        REP(i,0,N)
            REP(j,0,N) tbase[i][j]=base[i][j];
        memset(base,0,sizeof(base));
        REP(i,0,N)
            REP(j,0,N)
                REP(k,0,N) base[i][j]+=tbase[i][k]*tbase[k][j];
        n>>=1;
    }
    ///
    ui fans=0;
    REP(i,0,N) fans+=ans[i];
    cout<<fans;
}
