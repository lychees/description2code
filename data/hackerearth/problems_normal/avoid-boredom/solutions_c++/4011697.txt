#include <bits/stdc++.h>
using namespace std;
vector <int> vec;
long long int dp[101][101];
int main()
{
	int t, n, m;
	long long ans, val;
	scanf ("%d", &t);
	for (;t--;){
		scanf ("%d%d", &n, &m);
		vec.resize (n);

		for (int i = 0; i < n; i++){
			scanf ("%d", &vec[i]);
			memset (dp[i + 1], 0, sizeof (dp[i + 1]));
		}
		for (int i = 2; i <= m; i++){
			for (int j = 0; j < n; j++){
				for (int k = j + 1; k < n; k++){
					dp[i][k] = max (dp[i][k], dp[i - 1][j] + abs(vec[j] - vec[k]));
				}
			}
		}
		long long ans = 0;
		for (int i = 0; i < n; i++)
			ans = max (ans, dp[m][i]);
		cout << ans << endl;
	}
    return 0;
}
