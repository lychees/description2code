#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;
const int MAX=(1<<20);
bool arr[MAX];
vector<int> p;
void genprimes(){
	int i=3,j;
	for(i=4;i<MAX;i+=2) arr[i]=true;
	for(i=3;i<(1<<10);i+=2){
		if(arr[i]) continue;
		for(j=i;i*j<MAX;j+=2){
			arr[i*j]=true;
		}
	}
	p.push_back(2);
	for(i=3;i<MAX;i++){
		if(!arr[i])
		p.push_back(i);
	}
	arr[1]=arr[0]=true;
	
	
}
int gcd(int a,int b)
{
	if(a<b) return gcd(b,a);
	if(b==0) return a;
	return gcd(b,a%b);
}

int lcm(int a,int b){
	return (a*b)/gcd(a,b);
}
int main()
{
	genprimes();
   	int T;
   	cin >> T;
   	while(T--){
   		int a,b;
   		cin >> a >> b;
   		int x=lcm(a,b);
   		
   		int ans=0;
   		int i;
   		if(x==1) cout <<"0"<<endl;
   		else {
   			int ans=0;
   		for(i=0;(i<p.size()) && ((p[i]*p[i])<x);i++){
   			bool flip=false;
   			while((x%p[i])==0){
   				x/=p[i];
   				flip=true;
   			}
   			if(flip) ans++;
   		
   			
   			}
   			if(x>1) ans++;
   			
   			
   			if(!arr[ans])
   				cout <<"Yes"<<endl;
   			else 
   				cout <<"No"<<endl;
   			
   		}
   	}
   	
   	
    return 0;
}
