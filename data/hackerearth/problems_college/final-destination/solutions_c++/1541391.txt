#include <bits/stdc++.h>
using namespace std;
int mini[1000001]; 
int mult, divt, add, sub; int c;
int bfs (int a)
{
	queue <int> r; 
	mini[a]=0;
	r.push(a); 
	while (r.size())
	{
		int k=r.front(); r.pop(); 
		if (mini[k]>=mini[c]) break; 
		if (mult!=1 && k*mult<=1e6)
		{
			if (mini[k*mult]==1e9)
			{
				mini[k*mult]=mini[k]+1; 
				r.push(k*mult); 
			}
		}
		if (divt!=1 && k/divt>=2 && mini[k/divt]==1e9)
		{
			mini[k/divt]=mini[k]+1; 
			r.push(k/divt); 
		}
		if (add!=0 && k+add<=1e6 && mini[k+add]==1e9)
		{
			mini[k+add]=mini[k]+1; 
			r.push(k+add); 
		}
		if (sub!=0 && k-sub>=2 && mini[k-sub]==1e9)
		{
			mini[k-sub]=mini[k]+1;
			r.push(k-sub); 
		}
	}
}
main()
{
	int a; cin >> a;
	for (int g=0; g<a; g++)
	{
		for (int y=0; y<=1000000; y++) mini[y]=1e9; 
		int b; scanf("%d %d", &b, &c); 
		scanf("%d %d %d %d", &mult, &divt, &add, &sub); 
		bfs(b); 
		if (mini[c]==1e9) cout << -1 << '\n'; 
		else cout << mini[c] << '\n';
	}
}