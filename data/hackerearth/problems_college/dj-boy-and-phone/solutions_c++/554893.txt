//Seriously!! you want to read my code!! don't you have any other work??
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <utility>
#include <map>
#include <set>
#include <string>
using namespace std;
typedef long long LL;
#define IT iterator
#define getcx getchar
#define INF (int(1e9))
#define INFL (LL(1e18))
#define pii pair< int,int >
#define piii pair< pii , int >
#define temp 0
#define wait 1
#define perm 2
struct comp
{
    bool operator()(const pii &a,const pii &b)
    {
        return a.second>b.second;
    }
};
struct myclass {
  bool operator() (const pii &a,const pii &b)
  {
        return a.first>b.first;
  }
} myobject;
#define in2(n,m) scanf("%d %d",&n,&m);
#define in3(x,y,z) scanf("%d %d %d",&x,&y,&z);
#define mod 1000000009
inline void in(int &n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}
LL memo[12][10004];
int g[4][3];
LL func(int curr,int n,int x,int y)
{
    if(n==0)
    {
        return 1;
    }
    if(memo[curr][n]!=-1)
        return memo[curr][n];
    //printf("curr is %dand n is %d\n",curr,n);
    int i,j,z,sx,sy;
    LL ans=0;
    for(i=-1; i<=1; i++)
    {
        for(j=-1; j<=1; j++)
        {
            z=abs(i)+abs(j);
            if(z==1 || z==0)
            {
                sx=x+i;
                sy=y+j;
                if(sx>=0 && sx<=3 && sy>=0 && sy<=2)
                {
                    if(g[sx][sy]!=-1)
                    {
                        //printf("calling i j %d %d x y %d %d sx sy %d %d g is %d\n",i,j,x,y,sx,sy,g[sx][sy]);;
                        ans=ans+func(g[sx][sy],n-1,sx,sy);
                        if(ans>=mod)
                            ans%=mod;
                    }
                }
            }
        }
    }

    return (memo[curr][n]=(ans%mod));
}
int main()
{
    memset(memo,-1,sizeof(memo));
    int i,j,curr;
    curr=0;
    for(i=0; i<3; i++)
    {
        for(j=0; j<3; j++)
        {
            curr++;
            g[i][j]=curr;
        }
    }
    g[3][0]=-1;
    g[3][1]=0;
    g[3][2]=-1;
    /*for(i=0; i<4; i++)
    {
        for(j=0; j<3; j++)
        {
            printf("%d ",g[i][j]);
        }
        printf("\n");
    }*/
    int t,n;
    LL ans;
    in(t);
    while(t--)
    {
        in(n);
        if(n==0)
        {
            printf("0\n");
            continue;
        }
        ans=0;
        for(i=0; i<4; i++)
        {
            for(j=0; j<3; j++)
            {
                if(g[i][j]!=-1)
                {
                    ans=ans+func(g[i][j],n-1,i,j);
                    if(ans>=mod)
                        ans%=mod;
                }
            }
        }
        printf("%lld\n",ans%mod);
    }
    return 0;
}
