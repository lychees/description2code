#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
static int prime[1000001];
vector<int> plist,vec;
int sieve()
{
	plist.push_back(2);
	int n,x=0;
	for(int i=3;i<=1e3;i+=2)
	{
		if(prime[i]==0)
		{
			for(int j=i*i;j<=1e6;j+=i)
			{
				prime[j]=1;
			}
		}
	}
	for(int i=3;i<=1e6;i+=2)
	{
		if(prime[i]==0)
		{
			plist.push_back(i);
		}
	}
	//cout<<"yo"<<endl;
    int sz=plist.size();
    for(int i=0;i<sz;i++){
        n=(1e8/plist[i]);
        for(int j=i+1;plist[j]<=n&&j<sz;j++){
            vec.push_back((plist[i]*plist[j]));
            x++;
        }
    }
    sort(vec.begin(),vec.end());
	return 0;
}
int main()
{
	sieve();
	int t,l,r;
    cin>>t;
    while(t--){
        cin>>l>>r;
        int ans=(upper_bound(vec.begin(),vec.end(),r)-lower_bound(vec.begin(),vec.end(),l));
        cout<<ans<<endl;
    }
	return 0;
}
