 #include<iostream>
#include<math.h>
#include<map>
using namespace std;
map <int, long long> prime(int x)
{
	map <int, long long > temp;
	long long cnt;
	for (int i = 2; i <=sqrt(x); i++)
	{
		cnt = 0;
		if (x%i == 0)
		{

			while (x%i == 0)
			{
				cnt++;
				x = x / i;
			}
		}
		temp[i] = cnt;
		 
	}
	if (x > 1)
		temp[x] = 1;

	return temp;

}
int main()
{
	int a, b, c, d;
	int TestCases;
	scanf("%d",&TestCases);
	while (TestCases--)
	{
		scanf("%d %d %d %d",&a,&b,&c,&d);
		map <int, long long> numerator=prime(a), denominator=prime(c);
		map <int, long long> ::iterator it;
		int flag = 1;
		for (it = denominator.begin(); it != denominator.end(); ++it)
		{
			if ((it->second)*d > (numerator[it->first]*b))
			{
				flag = 0;
				
			}
		}
		if (flag)
		{
			printf("Divisible\n");
		}
		else
			printf("Not divisible\n");
	}

	return 0;
}