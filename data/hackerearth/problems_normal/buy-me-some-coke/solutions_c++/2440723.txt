//Saatwik Singh Nagpal
#include <bits/stdc++.h>
using namespace std;
#define MAXN 1000005
#define INF 1000000001
#define MOD 1000000007

#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define mset(a,b) memset(a,b,sizeof(a))
#define m2set(a,m,n,b) memset(a,b,sizeof(a[0][0])*m*n)
#define graphclear(g) for(int i=1;i<=n;i++)g[i].clear()

#define inp_s     ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define test()     int test;cin>>test;for(int t=1;t<=test;t++)

struct sort_pred {
	bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) {
		return left.second < right.second;
	}
};
//sort(v,v+n,sort_pred())

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif

#define pb push_back
#define PB pop_back
#define pf push_front
#define PF pop_front
#define mp make_pair
#define f first 
#define s second
#define all(v) v.begin(),v.end()
typedef long long ll;
typedef vector < ll > vll;
typedef vector < vll > vvll;
typedef pair < ll,ll > ll2;
typedef vector < ll2 > vll2;
typedef vector < int > vi;
typedef vector < vi > vvi;
typedef pair < int,int > ii;
typedef vector < ii > vii;
typedef vector < vii > vvii;
typedef pair< int,pair<int,int> > iii;
typedef vector < iii > viii;
#define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)

#define gc getchar
#define pc putchar
#define endl "\n"
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define pin(n) printf("%d\n",n)
#define plln(n) printf("%lld\n",n)
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
//Works for forward as well as backward iteration

int gcd(int a, int b)	{return (a == 0) ? b : gcd(b%a, a);}
ll powmod(ll a,ll b){if(b==0)return 1;ll x=powmod(a,b/2);ll y=(x*x)%MOD;if(b%2)return (a*y)%MOD;return y%MOD;}
int dp[151][151][51];
int solve(int c,int b,int d){
	if(c==0)return 0;
	if(dp[c][b][d]!=-1)
		return dp[c][b][d];
	int x=INF,y=INF,z=INF,w=INF,v=INF;
	if(d-1>=0)
		v = solve(c-1,b,d-1)+1;
	if(d-1>=0 && (8*c-b*5-d*10)-3>=0)
		w = solve(c-1,b+1,d-1)+4;
	if((8*c-b*5-d*10)-8>=0)
		x = solve(c-1,b,d)+8;
	if(b-2>=0)
		y = solve(c-1,b-2,d)+2;
	if(b-1>=0 && (8*c-b*5-d*10)-3>=0)
		z = solve(c-1,b-1,d)+4;
	return (dp[c][b][d]=min(min(min(x,v),min(y,z)),w));
}
int main(){
	//inp_s;
	test(){
		memset(dp,-1,sizeof(dp));
		int c,a,b,d;
		si(c);si(a);si(b);si(d);
		if(a*1+b*5+d*10<8*c){
			puts("-1");
			continue;
		}
		pin(solve(c,b,d));
	}
	return 0;
}
