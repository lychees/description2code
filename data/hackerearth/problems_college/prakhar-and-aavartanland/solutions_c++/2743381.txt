
#include <bits/stdc++.h>
#include <stdio.h>    
#include <string.h>
using namespace std;
#define mod 1000000007
 
#define llu long long unsigned
#define lld long long
#define ld long
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld%lld",&a,&b)
#define sc3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("%lf%lf",&a,&b)
#define scf3(a,b,c) scanf("%lf%lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a) 
 
lld scan_lld()    {int ip=getchar_unlocked(),flag=1;lld ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=ret*10+ip-'0';return flag*ret;}
#define lim 200003
lld A[lim],M[4*lim],N[4*lim],Lazy[4*lim];
 
void buildT(lld l,lld r,lld ind){
    if(l==r){
        M[ind]=A[l];
        N[ind]=1-A[l];
        return ;
    }
    lld mid=l+(r-l)/2;
    buildT(l,mid,2*ind+1);
    buildT(mid+1,r,2*ind+2);
    M[ind]=M[2*ind+1]+M[2*ind+2];
    N[ind]=N[2*ind+1]+N[2*ind+2];
}
 
void updateN(lld l,lld r,lld ind,lld x){
    Lazy[ind]+=x;
    if(x%2==1){
        lld t=M[ind];
        M[ind]=N[ind];
        N[ind]=t;
    }
}
 
void shift(lld l,lld r,lld ind){
    lld mid=l+(r-l)/2;
    updateN(l,mid,2*ind+1,Lazy[ind]);
    updateN(mid+1,r,2*ind+2,Lazy[ind]);
    Lazy[ind]=0;
}
 
void increase(lld st,lld end,lld l,lld r,lld ind,lld x){
    if(end<l||st>r) return ;
    if(l>=st&&r<=end){
        updateN(l,r,ind,x);
        return ;
    }
    shift(l,r,ind);
    lld mid =l+(r-l)/2;
    increase(st,end,l,mid,2*ind+1,x);
    increase(st,end,mid+1,r,2*ind+2,x);
    M[ind]=M[2*ind+1]+M[2*ind+2];
    N[ind]=N[2*ind+1]+N[2*ind+2];
}
 
lld query(lld st,lld end,lld l,lld r,lld ind){
    if(end<l||st>r) return 0;
    if(l>=st&&r<=end){
        return M[ind];
    }
    shift(l,r,ind);
    lld mid=l+(r-l)/2;
    return query(st,end,l,mid,2*ind+1)+query(st,end,mid+1,r,2*ind+2);
}
 
int main(){
    lld Q,i,j,k,n,t,m,T,p,count,a,b,l,r,c,pos,sum;
    sc2(n,m);
    string S;
    cin>>S;
    n--;
    for(i=0;i<n;i++){
        if(S[i]=='>') A[i]=1;
        else A[i]=0;
    }
    for(i=0;i<4*n;i++) Lazy[i]=0;
    buildT(0,n-1,0);
    // for(i=0;i<2*n-1;i++) prS(M[i]);
    //     cout<<endl;
    // sc(Q);
//    Q=scan_lld();
    while(m--){
        sc3(i,j,k);
        // i=scan_lld();
        // j=scan_lld();
        // k=scan_lld();
        if(i==2){
            if(k>j) prL(k-j-query(j-1,k-2,0,n-1,0));
            else if(j>k) prL(query(k-1,j-2,0,n-1,0));
        }
        else increase(j-1,k-2,0,n-1,0,1);
        // for(i=0;i<2*n-1;i++) prS(M[i]);
        //     cout<<endl;
    }
    return 0;
}