#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <climits>
using namespace std; 

map<int, int> max_wght;

int solve(vector<int> &item, int W)
{
	if (W == 0)
		return 0;
	if (W < 0)
		return INT_MAX;	
	if (max_wght.count(W))
		return max_wght[W];

	int answer = INT_MAX;
	for (int i = 0; i < item.size(); i++){
		int pick = solve(item,  W - item[i]);
		if (pick != INT_MAX)
			answer = min(answer, 1 + pick); 
	}	
	max_wght[W] = answer; 
	return answer;
}
int main()
{
	int t;
	scanf("%u", &t);
	while (t--) {
		int W;
		scanf("%d", &W);
		int  n, answer;
		vector<int> item;
		scanf("%d", &n);
		while(n--){
			int P;
			scanf("%d", &P);
			item.push_back(P);
		}
		for (int i = 0; i < n; i++)
			cout << item[i];
		if((answer = solve(item, W)) != INT_MAX)
			printf("%d\n", answer);
		else 
			printf("-1\n");
		max_wght.clear();
	}
	return 0;
}

