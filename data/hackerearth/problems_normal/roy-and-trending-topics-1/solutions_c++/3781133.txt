#include <iostream>
#include <map>
#include <set>
using namespace std;

int main() {
    long long int n;
    cin >> n;
    
    map<long long int, set<long long int>> M;
    map<long long int, long long int> Scores;
    for (long long int i = 0; i < n; ++i) {
        long long int id, z_score, posts, likes, comm, shares;
        cin >> id >> z_score >> posts >> likes >> comm >> shares;
        
        long long int new_score = 50 * posts + 5 * likes + 10 * comm + 20 * shares, change_score;
        
        change_score = new_score - z_score;
        auto itr = M.find(change_score);
        set<long long int> S;
        S.insert(id);
        
        if (itr == M.end()) {
            M[change_score] = S;
        } else {
            itr->second.insert(id);
        }
        Scores[id] = new_score;
    }
    
    int i = 1;
    for (auto itr = M.rbegin(); i <= 5; ++itr) {
        for (auto it = itr->second.rbegin(); i <= 5 && it != itr->second.rend(); ++it) {
            cout << *it << " " << Scores[(*it)] << endl;
            i++;
        }
    }
    
    return 0;
}
