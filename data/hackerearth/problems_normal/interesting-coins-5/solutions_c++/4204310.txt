#include <iostream>
using namespace std;

bool find(long A[], int N, long mid)
{
	long sheight = max(A[1]-mid,long(1));
	bool found = true;
	for(int j = 2; j <= N; ++j)
	{
		++sheight;
		if ((A[j] + mid) < sheight)
		{
			return false;
		}else if ((A[j] - mid) > sheight)
		{
			sheight = A[j] - mid;
		}
	}
	return true;
};
int main()
{
	int T;
	cin >> T;
	for(int i = 0; i < T; ++i)
	{
		int N;
		cin >> N;
		long *A = new long[N+1];
		long end = 0;
		for(int j = 1; j <= N; ++j)
		{
			cin >> A[j];
			if (max(A[j],long(j)) > end)
			{
				end = max(A[j],long(j));
			}
		}
		end = end;
		long start = 0;
		//cout << "emd\t" << end <<endl;
		
			int mid;
			while(start < end)
			{
				mid = (start + end)/2;
				if (find(A,N,mid))
				{
					end = mid;
				}else
				{
					start = mid+1;
				}
			}
			cout << start << endl;
		}
	
    //cout << "Hello World!" << endl;
    return 0;
}
