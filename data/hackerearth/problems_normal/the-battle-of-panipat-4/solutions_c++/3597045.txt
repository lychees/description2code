#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define N 100009
#define mod 1000000007
vector<ll>adj[N];
ll  ways[N];
ll outdeg[N];
ll indeg[N];
bool vis[N];
ll  solve(ll  vertex)
{
	//printf("vertex is %lld \n",vertex);
	if(ways[vertex]!=-1)return ways[vertex];
	if(vis[vertex]==0)vis[vertex]=1;
	ways[vertex]=1;
	for(ll i=0;i<(ll )adj[vertex].size();++i)
	{
		if(vis[adj[vertex][i]]==0)
		{
			ways[vertex]*=(1+solve(adj[vertex][i]));		
			if(ways[vertex]>=mod)ways[vertex]%=mod;
		}
	}
	return ways[vertex];
}
int main()
{
	ll  n;
	cin>>n;
	memset(outdeg,0,sizeof outdeg);
	memset(indeg,0,sizeof indeg);
	memset(vis,0,sizeof vis);
	for(ll  i=1;i<=n-1;++i)
	{
		ll  u,v;
		cin>>u>>v;
		adj[u].push_back(v);
		adj[v].push_back(u);
		outdeg[u]++;
		outdeg[v]++;
		indeg[u]++;
		indeg[v]++;
	}
	memset(ways,-1,sizeof ways);
	for(ll  i=0;i<n;++i)
	{
		if(outdeg[i]==1 &&  indeg[i]==1)
		{
			ways[i]=1;
	//		cout<<"  leaf "<<i<<endl;
		}

	}// base cases solved 
	for(ll i=0;i<n;++i)
	{
		if(ways[i]==-1)
		{
			solve(i);
			break;
		}
	}
	ll ans=0;// asdf
	for(int i=0;i<n;++i)
	{
//		cout<<"ways of "<<i<<" is  "<<ways[i]<<endl;
		ans+=ways[i];
		if(ans>=mod)ans%=mod;
	}
	cout<<(1+ans)%mod<<endl;
	return 0;
}

