#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;


#define ll long long
#define ff first
#define ss second
#define mpa make_pair
#define MOD 1000000007
#define pb push_back
#define lld I64d
#define MXN 1000000

int bitcnt(int mask){return __builtin_popcount(mask);}
int SET(int N,int pos){	return N=N | (1<<pos);}
int RESET(int N,int pos){	return N= N & ~(1<<pos);}
int check(int N,int pos){	return (N & (1<<pos));}
int toggle(int N,int pos){if(check(N,pos))return N=RESET(N,pos);return N=SET(N,pos);}
void PRINTBIT(int N){	printf("("); for(int i=6;i>=1;i--)	{bool x=check(N,i);cout<<x;}	puts(")");}
int mod(int a, int b) { return a - a/b * b;}

int S;
int N;
int R;

pair<int, int> Arr[MXN];

double dp[17][1 << 17];
bool vis[17][1 << 17];

void inp()
{
	scanf("%d%d%d", &S, &N, &R);
	
	for(int i = 0; i < S; ++i) {
		scanf("%d%d", &Arr[i].ff, &Arr[i].ss);
	}
}

double rec(int pos, int mask, int val)
{
	
	//cout<<"val => " << val<<"\n";
	
	if(pos == N)
		return 1.00;

	if(vis[pos][mask])	
		return dp[pos][mask];
	
	vis[pos][mask] = true;
			
	double ans = 0.00;
	
	for(int i = 0; i < S; ++i) {
		if((mask & ( 1 << i)) == 0 && val >= Arr[i].ff) {
			double temp = (((double(Arr[i].ss))/100.0) * rec(pos + 1, mask |(1 << i), val - Arr[i].ff));
			temp += (((1.00 - ((double(Arr[i].ss))/100.0)) * rec(pos, mask|(1 << i), val - Arr[i].ff)));
			
			ans = max(ans, temp);
		}
	}
	return dp[pos][mask] = ans;
}

void solve()
{
	memset(vis, false, sizeof vis);
	double ans = rec(0, 0, R);
	printf("%.6lf\n", ans);
	return;
}

int main()
{
	int T;
	scanf("%d", &T);
	
	while(T--) {
		inp();
		solve();
	}
	
	return 0;
}
