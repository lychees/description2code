#include <bits/stdc++.h>

#define gc getchar_unlocked

using namespace std;

typedef long long        ll;
typedef pair<int, int>   pii;
typedef pair<int, pii>   piii;
typedef vector<int>      vi;
typedef set<int>         si;
typedef vector<pii>      vii;
typedef vector<piii>     viii;

#define rep(i,n)     for (int (i)=0; (i)<(n); (i)++)
#define repn(i,n)    for (int (i)=1; (i)<=(n); (i)++)
#define repd(i,n)    for (int (i)=(n)-1; (i)>=0; (i)--)
#define foreach(i,X) for(__typeof((X).begin()) i = (X).begin(); i != (X).end(); i++)
#define all(a)       a.begin(),a.end()

const int inf = numeric_limits<int>::max();
const ll linf = numeric_limits<ll>::max();

#define fi           first
#define se           second
#define pb           push_back
#define mp           make_pair

void fs(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int n;
int a[100];
int dp[100][10000];

int calc(int k, int dif)
{
    if(dp[k][dif]!=-1) return dp[k][dif];
    if(k==n-1)
    {
        dp[k][dif]=abs(dif-a[k]);
        return abs(dif-a[k]);
    }
    dp[k][dif]=min(calc(k+1, dif+a[k]), calc(k+1, abs(dif-a[k])));
    return dp[k][dif];
}


int main()
{
    int t; cin>>t;
    while(t--)
    {
        int x; cin>>n>>x;
        int sum=0;
        rep(i,n)
        {
            cin>>a[i];
            sum+=a[i];
            rep(j,10000) dp[i][j]=-1;
        }
        int dif=calc(0,0);
        int ans=sum-(sum-dif)/2;
        if(ans<=x) cout<<"YES"<<endl;
        else cout<<"NO"<<endl;
    }
    return 0;
}