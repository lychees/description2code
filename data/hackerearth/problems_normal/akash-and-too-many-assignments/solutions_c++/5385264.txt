#include<iostream>
#include<bits/stdc++.h>
#include<string.h>
#define X first
#define Y second
#define ll int
#define mpp make_pair
#define nl printf("\n")
#define SZ(x) (int)(x.size())
#define pb(x) push_back(x)
#define pii pair<int,int>
#define pll pair<ll,ll>
///---------------------
#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define SL(a) scanf("%lld",&a)
#define SL2(a,b) scanf("%lld%lld",&a,&b)
#define SL3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define S2(a,b) scanf("%d%d",&a,&b)

///-----------------------------#-------
#define all(v) v.begin(),v.end()
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(ll i=a;i<=n;i++)
using namespace std;
string s;
ll seg[2500012][26];
ll haha[26];
void init(ll nd,ll l,ll r)
{
	if(l==r)
	{
		seg[nd][s[l]-'a']++;
		return;
	}
	ll mid=(l+r)/2;
	init(nd*2,l,mid);
	init(nd*2+1,mid+1,r);
	fr(i,0,25)
	{
		seg[nd][i]=seg[nd*2][i]+seg[nd*2+1][i];
	}
}
void update(ll nd,ll l,ll r,ll index,ll c)
{
	seg[nd][s[index]-'a']--;
	seg[nd][c]++;
	if(l==r)
	return;
	ll mid=(l+r)/2;
	if(index>mid)
	{
		update(nd*2+1,mid+1,r,index,c);
		return;
	}
	if(index<mid+1)
	{
		update(nd*2,l,mid,index,c);
		return;
	}
}
void query(ll nd,ll l,ll r,ll x,ll y)
{
	if((x>r)||(y<l))
	return ;
	if((l>=x)&&(r<=y))
	{
		fr(i,0,25)
		{
			haha[i]+=seg[nd][i];
		}
		return;
	}
		ll mid=(l+r)/2;
		query(nd*2,l,mid,x,y);
		query(nd*2+1,mid+1,r,x,y);	
}


int main()
{
	ll n,q,w,x,y,z;
	SL2(n,q);
	//cin>>n>>q;
	cin>>s;
	init(1,0,n-1);
	while(q--)
	{
		cin>>w;
		if(w==0)
		{
			SL(x);
			char c;
			cin>>c;
			y=c-'a';
			update(1,0,n-1,x-1,y);
			s[x-1]=c;
		}
		else
		{
			SL3(x,y,z);
			memset(haha,0,sizeof(haha));
			query(1,0,n-1,x-1,y-1);
			ll count=0;
			fr(i,0,25)
			{
				count+=haha[i];
				if(count>=z)
				{
					char cc=97+i;
					cout<<cc<<endl;
					goto hell;
				}
			}
			cout<<"Out of range"<<endl;
		}
		hell:
			cout<<"";
	}
	
	
}