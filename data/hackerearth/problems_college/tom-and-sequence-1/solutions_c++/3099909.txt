#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;

vector <long int> primes;
bool prime[1299800];
void SieveOfEratosthenes(long long int n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.

    memset(prime, true, sizeof(prime));
    for (long int p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (long int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }

    // Print all prime numbers
    for (long int p=2; p<=n; p++)
       if (prime[p])
          primes.push_back(p);
}

long long int ans[100005];
int main()
{
   SieveOfEratosthenes(1299720);
   ans[0] = 2;
   for(int i=1;i<100000;i++)
   ans[i] = (ans[i-1]*primes[i])%mod;
   int t;
   cin>>t;
   while(t--)
   {
     int n;
     cin>>n;
     cout<<ans[n-1]<<endl;
   }
}
