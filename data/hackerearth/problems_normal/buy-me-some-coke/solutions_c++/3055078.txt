#include <iostream>
#include <climits>
#include <cstring>

using namespace std;

int dp[155][155][155];
int coke;

int solve (int nc, int n5, int n10, int m)
{
    if (nc == coke)
    return 0;

    if (dp[nc][n5][n10] != -1)
        return dp[nc][n5][n10];

    int n1 = m-nc*8-5*n5-10*n10;

    int mini = INT_MAX;

    if (n1 >= 8) {
        mini = min (mini, solve(nc+1, n5, n10, m)+8);
    }
    if (n5 >= 1 && n1 >= 3) {
        mini = min (mini, solve (nc+1, n5-1, n10, m)+4);
    }
    if (n5 >= 2) {
        mini = min(mini, solve (nc+1, n5-2, n10, m) + 2);
    }
    if (n10 >= 1) {
        mini = min(mini, solve(nc+1, n5, n10-1, m)+1);
    }
    if (n10 >= 1 && n1 >= 3) {
        mini = min(mini, solve (nc+1, n5+1, n10-1, m) +4);
    }

    dp[nc][n5][n10] = mini;

    return mini;
}

int main()
{
    int i, j, t, m;
    int n1, n5, n10;
    cin>>t;

    while (t--) {
        cin>>coke>>n1>>n5>>n10;
        m = n1+5*n5+10*n10;

        memset (dp, -1, sizeof(dp));

        if (m < coke*8) {
            cout<<"-1\n";
            continue;
        }

        j = solve (0, n5, n10, m);
        cout<<j<<endl;
    }
    return 0;
}
