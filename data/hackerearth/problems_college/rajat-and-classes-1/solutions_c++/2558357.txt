#include<bits/stdc++.h>
#define ll long long

using namespace std;

vector<ll> *graph;
vector<ll> ans;
ll maxi=0;
ll mindex;

 bool *visited;



void dfs(ll src)
{
    visited[src]=true;
   if(graph[src].size()>=maxi)
   {
   	   if(graph[src].size()==maxi)
   	   {
   	   	if(mindex>src)
   	   	mindex=src;
   	   }
   	   else
   	   {
       maxi=graph[src].size();
       mindex=src;
   	   }
   }
   // cout<<src<<" ";
    vector<ll>::iterator it;


    for(it=graph[src].begin();it!=graph[src].end();it++)
    {



        if(!visited[*it])
        dfs(*it);
    }

}

int main()
{


    ll v,e,a,b;



    cin>>v>>e;
    ll tf[v];
    graph=new vector<ll>[v];
     visited= new bool[v];
    for(ll i=0;i<v;i++)
    {
        visited[i]=false;
        tf[i]=0;
    }
    for(ll i=0;i<e;i++)
    {
        cin>>a>>b;
        tf[a-1]++;
        tf[b-1]++;

        graph[a-1].push_back(b-1);
        graph[b-1].push_back(a-1);
    }
    for(ll i=0;i<v;i++)
    {
        if(!visited[i])
        {

             mindex=i;
              maxi=0;
            dfs(i);


            ans.push_back(mindex+1);



        }
    }
    cout<<ans.size()<<"\n";
    sort(ans.begin(),ans.end());
    vector<ll>::iterator it;
    for(it=ans.begin();it!=ans.end();it++)
        cout<<*it<<" ";

}
