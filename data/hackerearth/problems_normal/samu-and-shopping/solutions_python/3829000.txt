''' HackerEarth - Samu and Shopping
	NguyenDatSE '''

class Minimizer:
	def __init__(self, shops):
		self.shops = shops
		self.nshops = len(self.shops)

	def solve(self):
		mincosts = [[0 for i in xrange(3)] for n in xrange(self.nshops)]
		mincosts[0] = self.shops[0]
		
		for n in xrange(1, self.nshops):
			for i in xrange(3):
				minimize = []
				for j in xrange(3):
					if i != j:
						minimize.append(self.shops[n][i] + mincosts[n - 1][j])
				mincosts[n][i] = min(minimize)
		return min(mincosts[n])

T = int(raw_input())
for t in xrange(T):
	N = int(raw_input())
	Ns = []
	for n in xrange(N):
		Ns.append(map(int, raw_input().split()[:3]))
	minimizer = Minimizer(Ns[:N])
	print minimizer.solve()

