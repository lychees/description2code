#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>

using namespace std;

#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define S(x) scanf("%d",&x)
#define all(c) (c).begin(),(c).end() 
#define sz(c) int((c).size())
#define pb push_back
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define rep(i,x,y) for(int i = x; i < y; i++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long int LL;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;

const int MAX = 100001;

int nx[MAX], ny[MAX];
int main()
{
	int t;
	S(t);
	while(t--){
		int n;
		S(n);
		rep(i,0,n) S(nx[i]);
		rep(i,0,n) S(ny[i]);
		LL normalt, nitrot;
		int x, y;
		S(x); S(y);
		scanf("%lld%lld",&normalt,&nitrot);
		LL d =  normalt * LL(abs(x) + abs(y));
		rep(i,0,n){
			LL tmp = normalt* LL(abs(nx[i])+abs(ny[i]))+ nitrot*LL(abs(nx[i]-x)+abs(ny[i]-y));
			d = min(d,tmp);
		}
		printf("%lld\n",d);
	}
	return 0;
}