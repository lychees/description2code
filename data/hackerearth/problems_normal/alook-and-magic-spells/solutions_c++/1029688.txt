#include <cstring>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <iostream>

using namespace std;

#define fs first
#define sc second
#define pb push_back

typedef long long ll;
typedef pair<int,int> ii;

const int MOD = 1000000007;

struct matran {
    int m, n;
    int matrix[5][5];
    void init() {
        m = n = 0;
        memset(matrix, 0, sizeof matrix);
    }
};

matran khoitao, F, res, nhan;

void mul(matran a, matran b, matran & c) {
    c.n = a.n; c.m = b.m;
    for (int i = 1; i <= c.n; ++i)
    for (int j = 1; j <= c.m; ++j) {
        c.matrix[i][j] = 0;
        for (int k = 1; k <= a.m; ++k)
        c.matrix[i][j] = (c.matrix[i][j] + ((ll)a.matrix[i][k]*b.matrix[k][j])%MOD)%MOD;
    }
}

matran mu(matran a, int n) {
    if (!n) return khoitao;
    matran b; b.init();
    b = mu(a, n/2);
    matran c; c.init();
    mul(b,b,c);
    if (n&1) {
        matran d; d.init();
        mul(c,a,d);
        return d;
    }
    return c;
}

int main() {
	//freopen("input.txt","r",stdin);
    int t;
    scanf("%d",&t);
    khoitao.m = khoitao.n = 3;
    for (int i = 1; i <= 3; ++i)
        khoitao.matrix[i][i] = 1;
    while (t--) {
        int n;
        scanf("%d",&n);
        if (n <= 2) {
            printf("%d\n",(n==1)?2:14);
            continue;
        }
        nhan.init(), F.init(), res.init();
        nhan.n = nhan.m = 3;
        for (int i = 1; i <= 3; ++i)
            nhan.matrix[i][1] = 0;
        nhan.matrix[1][1] = 1;
        nhan.matrix[3][3] = 0;
        nhan.matrix[1][2] = nhan.matrix[2][2] = 2;
        nhan.matrix[1][3] = nhan.matrix[2][3] = 4;
        nhan.matrix[3][2] = 1;
        /////////////
        F.n = 3, F.m = 1;
        F.matrix[1][1] = 14;
        F.matrix[2][1] = 12;
        F.matrix[3][1] = 2;
        mul(mu(nhan,n-2),F,res);
        printf("%d\n",res.matrix[1][1]);
    }
	return 0;
}
