#include<bits/stdc++.h>
using namespace std;
vector<int>adj[100005];
int htof[100005];
int dfsin[100005],dfsout[100005];
int dfsno;

void dfs(int at,int ht)
{
	vector<int>::iterator it;
	htof[at]=ht;
	dfsin[at]=dfsno;
	dfsno++;
	it=adj[at].begin();
	while(it!=adj[at].end())
	{
		dfs((*it),ht+1);
		it++;
	}
	dfsout[at]=dfsno;
	dfsno++;
	return;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,i,root,par;
		scanf("%d",&n);
		for(i=1;i<=n;i++)
		{
			adj[i].clear();
			dfsin[i]=0;
			dfsout[i]=0;
		}
		for(i=1;i<=n;i++)
		{
			scanf("%d",&par);
			if(par==0)
			root=i;
			else
			adj[par].push_back(i);
		}
	
	dfsno=0;
	dfs(root,0);
	
	int q,x,y;
	scanf("%d",&q);
	while(q--)
	{
		scanf("%d%d",&x,&y);
		if(dfsin[y]<dfsin[x]&&dfsout[x]<dfsout[y])
		{
			printf("%d \n",htof[x]-htof[y]-1);
		}
		else
		printf("-1 \n");
	}
}
	return 0;
}