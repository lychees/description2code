#include <bits/stdc++.h>

using namespace std;
long long int n,m,mod;
struct data{
    long long int a;
    long long int b;
    long long int c;
    long long int d;
};
data A[1000005];
long long int B[1000005];
long long int C[1000005];
long long int F[1000005];
int main(){
    cin >> n >> m >> mod;
    F[0]=1;
    F[1]=1;
    for(int i=2;i<=n;++i)
        F[i]=(F[i-1]+F[i-2])%mod;

    A[0].a=1,A[0].b=0,A[0].c=0,A[0].d=1;
    A[1].a=1,A[1].b=1,A[1].c=1,A[1].d=0;
    for(int i=2;i<=n;++i){
        A[i].a=(A[i-1].a+A[i-1].c)%mod;
        A[i].b=(A[i-1].b+A[i-1].d)%mod;
        A[i].c=(A[i-1].a);
        A[i].d=A[i-1].b;

    }
    for(int i=1;i<=n;++i){
       cin >> B[i];
       B[i]=B[i]%mod;
       }
    C[n]=B[n]%mod;
    C[n-1]=(B[n-1]+B[n])%mod;
    for(int i=n-2;i>0;--i){
        C[i]=(C[i+1]+C[i+2]+B[i])%mod;
       // cout << i << " " << C[i] << endl;
    }
    vector<pair<long long int,long long int> > V;
    for(int i=1;i<=m;++i){
        int a;
        scanf("%d",&a);
        if(a==1){
            long long int l;
            long long int x;
            cin >> l >> x;
            V.push_back(make_pair(l,x));
            long long int si=(long long int)V.size();

            if(si>=500){
                for(int i=0;i<V.size();++i){
                    B[V[i].first]=V[i].second % mod;
                }
                V.clear();
               C[n]=B[n]%mod;
    C[n-1]=(B[n-1]+B[n])%mod;
    for(int i=n-2;i>0;--i){
        C[i]=(C[i+1]+C[i+2]+B[i])%mod;
    }


            }
        }
        else{
            int l,r;
           cin >> l >> r;
            long long int ans=C[l]%mod;
            long long int a=(C[r]-B[r]+mod)%mod;
            long long int b=C[r+1];
            a=(((A[r-l].a*a)%mod)+(((A[r-l].b*b)%mod))%mod)%mod;
            a=(ans-a+mod)%mod;
            map<long long int,long long int> M;
            for(int i=0;i<V.size();++i){
                if(V[i].first>=l && V[i].first<=r){
                    if(M.find(V[i].first)==M.end()){
                    a=(a-((F[V[i].first-l]*B[V[i].first])%mod)+((V[i].second*F[V[i].first-l])%mod)+mod)%mod;
                    M[V[i].first]=V[i].second;
                    }
                    else{
                       a=(a-((F[V[i].first-l]*M[V[i].first])%mod)+((V[i].second*F[V[i].first-l])%mod)+mod)%mod;
                       M[V[i].first]=V[i].second;
                    }
                }
            }
           cout << a << endl;

        }

    }


    return 0;
}
