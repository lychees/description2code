#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <utility>
#include <stack>
#include <queue>
#include <string>
#include <cstring>
#include <cstdlib>
#include <map>
using namespace std;
typedef int ll;
#define inf 1000000007
#define inpint(n) scanf("%d",&n)
#define outint(n) printf("%d",n)
#define pb(n) push_back(n)
#define REP(i,j,n) for(i=j;i<n;i++)
//vector<vector<int> > v(10005,vector<int> ());
//vector<int> dist(10010,0);
vector<int> v[10005];
bool visited[10005];
int ma;
int nde;
int dfs(int node,int d)
{
	if(d>=ma) {
		ma=d;
		nde=node;
	}
	visited[node]=1;
//	dist[node]=d;
	for(int i=0;i<v[node].size();i++) {
		if(!visited[v[node][i]]) dfs(v[node][i],d+1);
	}
}
int main()
{
	int tc;
	scanf("%d",&tc);
	while(tc--) {
	int n;
	scanf("%d",&n);
	int i;
	for(i=0;i<=n;i++) {
		v[i].clear();
//		dist[i]=0;
	}
	int a,b;
	int j,k;
	for(i=0;i<n-1;i++) {
		scanf("%d%d",&a,&b);
		a++;
		b++;
		v[a].pb(b);
		v[b].pb(a);
	}
	memset(visited,0,sizeof(visited));
	ma=0;
	nde=0;
	dfs(1,0);
	memset(visited,0,sizeof(visited));
	ma=0;
	dfs(nde,0);
	printf("%d\n",ma+1);
	}
	return 0;
}
