#include <bits/stdc++.h>

#define mod 1000000007
#define inf 1000000000000
#define root2 1.41421
#define root3 1.73205
#define pi 3.14159
#define MAX 100001
#define ll long long int
#define PII pair<int, int>
#define f first
#define s second
#define ss(n) scanf("%lld", &n)
#define ssf(n) scanf("%lf", &n)
#define PLL pair<ll, ll>
#define gc getchar
#define pb push_back

using namespace std;
ll m, n1, n2, amu[61], wat[16], msum, ans[61], mk;
bool b;
bool compare(ll a, ll b)
{
    return a>b;
}
bool canFormMixture(ll cur_sum)
{
    int i, k=0;
    ll sum=0;
    if(cur_sum==m)
        return false;
    ll A[61];
    for(i=0;i<n1;i++)
    {
        if(cur_sum+sum+amu[i]<=m)
        {
            sum+=amu[i];
            A[k++]=amu[i];
        }
    }
    if(sum>msum)
    {
        if(cur_sum+sum==m)
        {
            mk=k;
            for(i=k-1;i>=0;i--)
                ans[k-1-i]=A[i];
            msum=sum;
            return true;
        }
    }
    return false;
}
void solve(ll i, ll sum)
{
    if(canFormMixture(sum))
    {
     //   printf("canFormMixture\n");
        b=true;
    }
    if(i==n2)
        return;
    solve(i+1, sum+wat[i]);
    solve(i+1, sum);
}
int main()
{
    ll i, t;
    ss(t);
    while(t--)
    {
        ss(m);ss(n1);ss(n2);
        for(i=0;i<n1;i++)
            ss(amu[i]);
        for(i=0;i<n2;i++)
            ss(wat[i]);
        sort(amu, amu+n1, compare);
        b=false;msum=0;mk=0;
        solve(0, 0);
        if(!b)
            printf("NO\n");
        else
        {
            printf("YES\n");
            for(i=0;i<mk;i++)
                printf("%lld ", ans[i]);
            cout<<endl;
        }
    }
}
