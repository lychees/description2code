#include <iostream>
using namespace std;

#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int prime(long num)
{
    long i;
    if(num==1)
    {
        return 0;
    }
    else if(num ==2||num == 3)
    {
         return 1;
    }
    else
    {
        for(i=2;i*i <=(num);i++)
        {
            if(0 == (num%i))
            {
                return 0;
            }
        }
    }
    return 1;
}

int main()
{
		int test_cases, array_length,test_times,i,j,k;
        long count=0, *num_array=NULL,index_first=0,length,index_last=0,*prime_num = NULL;
        //String Input_array[] = new String[3];
        char line;
        scanf("%d",&test_cases);
        for( i=0;i<test_cases;i++)
        {
                scanf("%d",&array_length);

                //Getting the array as string
                length = (sizeof(long)*array_length);
                num_array = (long *)malloc(length);
                prime_num = (long *)malloc(length);
                memset(num_array,0,length);
                memset(prime_num,0,length);

                for(j=0;j<array_length;j++)
                {
                    scanf("%ld",&num_array[j]);
                    prime_num[j] = prime(num_array[j]);
                }
                scanf("%d",&test_times);
                for(j=0;j<test_times;j++)
                {
                        while(getchar()!='\n');
                        scanf("%c %ld %ld",&line,&index_first,&index_last);
                        if(line == 'A')
                        {
                                count =0;
                                for(k = index_first-1;k<index_last;k++)
                                {
                                    if(prime_num[k]==1)
                                    {
                                        count++;
                                    }
                                }
                                //count = prime_num[index_last-1]-prime_num[index_first-1];
                                printf("%ld\n",count);
                        }
                        else if(line == 'C')
                        {
                                //old_prime = prime(num_array[index_first-1]);
                                //old_prime = prime_num[index_first-1]-prime_num[index_first-2];
                                //new_prime = prime(index_last);
                                num_array[index_first-1] = index_last;
                                prime_num[index_first-1] = prime(index_last);


                        }
                }
                free(num_array);
                free(prime_num);
        }
        return 0;
}
