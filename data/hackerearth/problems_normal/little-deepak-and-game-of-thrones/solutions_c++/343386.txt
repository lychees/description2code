#include<cstdio>
#include<map>
#include<algorithm>
#include<vector>
#include<utility>
#include<iostream>
#define ll long long
#define f first
#define s second
using namespace std;
pair<int, pair<int,int> > X[2605];
int Y[2605],Y1[2605],exists[2605];
int bSearch(int arr[],int lo,int hi,int key)
{
  int mid;
  while(lo<=hi)
    {
      mid=(lo+hi)/2;
      if(arr[mid]==key)return mid;
      else if(arr[mid]<key)lo=mid+1;
      else hi=mid-1;
    }
}
int main()
{
  int T,N,i,start,end,j,len,idx;
  ll area;
  scanf("%d",&T);
  while(T--)
    {
      scanf("%d",&N);
      for(i=0;i<N;i++)
	{
	  scanf("%d %d %d %d",&X[2*i].f,&Y[2*i],&X[2*i+1].f,&Y[2*i+1]);
	  X[2*i].s.f=1;
	  X[2*i].s.s=i;
	  X[2*i+1].s.f=-1;
	  X[2*i+1].s.s=i;
	}
      if(N==1)
	{
	  printf("%lld\n",((ll)X[1].f-(ll)X[0].f)*((ll)Y[1]-(ll)Y[0]));
	  continue;
	}
      sort(X,X+2*N);
      for(i=0;i<2*N;i++)
	{
	  Y1[i]=Y[i];
	  exists[i]=0;
	}
      sort(Y1,Y1+2*N);
      j=1;
      for(i=1;i<2*N;i++)
	if(Y1[i]!=Y1[i-1])
	  Y1[j++]=Y1[i];
      len=j;
      area=0;
      for(i=0;i<2*N;i++)
	{
	  if(i!=0)
	    {
	      //idx=X[i].s.s;
	      for(j=0;j<len-1;j++)
		if(exists[j]>0)
		  area+=((ll)X[i].f-(ll)X[i-1].f)*((ll)Y1[j+1]-(ll)Y1[j]);
	    }
	  idx=X[i].s.s;
	  start=bSearch(Y1,0,len-1,Y[idx*2]);
	  end=bSearch(Y1,0,len-1,Y[idx*2+1]);
	  if(X[i].s.f==-1)
	    {
	      for(j=start;j<end;j++)
		exists[j]--;
	    }
	  else
	    {
	      for(j=start;j<end;j++)
		exists[j]++;
	    }
	}
      printf("%lld\n",area);
    }
  return 0;
}
