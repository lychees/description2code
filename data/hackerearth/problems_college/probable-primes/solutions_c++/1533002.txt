#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <vector> 
#include <list>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <fstream>
#include <ctime>
#include <cassert>
#include <stack>
#include <bitset>
using namespace std;

typedef long long int ll;
typedef pair<int, int > pii;

#define MOD 1000000007
#define pb push_back

bitset<1000001> bit;

int operations = 0;
int min_operations = 10000000;

int a[1000001] = {0};
vector<int> primes1;
void sieve()
{
	bit.reset();
	bit.flip();
	bit[0] = false;
	bit[1] = false;

	for(int i=2;i<1000001;i++)
	{
		if(bit[i])
		{
			for(int j=2*i;j<1000001;j+=i)
				bit[j] = false;
			primes1.push_back(i);
		}
	}
}

void solve()
{
	int l, r;
	cin>>l>>r;
	float c = 0;
	
	c = a[r] - a[l-1];
	float p = c/(r-l+1);
	//cout<<"c"<<c<<" "<<r<<" "<<l<<" "<<r-l+1<<endl;
	printf("%.6f\n",p);
}

int main()
{
	int t;
	primes1.push_back(0);
	sieve();
	for(int i=2;i<1000001;i++)
	{
		if(bit[i]==true)
			a[i] = 1+a[i-1];
		else
			a[i] = a[i-1];
	}
	cin>>t;
	while(t--)
	{
		solve();
	}
	return 0;
}