#include <bits/stdc++.h>

using namespace std;
int A[51],n;
int maxMask=1<<15;
int dp[53][1 << 15];
vector <int> V[51];

int Max(int a,int b)
{
    return (a>b?a:b);
}
int fun(int idx,int mask)
{

    if(idx==n) return 0;
     int &ret = dp[idx][mask];
    if(ret!=-1) return ret;
    if(A[idx]==1) return ret=1+fun(idx+1,mask);
    ret=fun(idx+1,mask);
    int sz=V[A[idx]].size();
    int newMask=mask;
    for(int i=0;i<sz;i++)
    {
        int pos=V[A[idx]][i];
        if(newMask &(1<<pos)) return dp[idx][mask];
        newMask=(1<<pos)|newMask;
    }

    return ret=Max(ret,1+fun(idx+1,newMask));
}

int main()
{
    int test,ans;
    cin>>test;

    int prime[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};
    for(int i=0;i<51;i++)
    {
        V[i].clear();
        for(int j=0;j<15;j++)
        {
            if(prime[j]>i) break;
            if(i%prime[j]==0) V[i].push_back(j);
        }
    }
    while(test--)
    {
        cin>>n;
        for(int i=0;i<n;i++) cin>>A[i];
        memset(dp,-1,sizeof dp);
        cout<<fun(0,0)<<endl;
    }
    return 0;
}
