#include <iostream>
#include <vector>
using namespace std;
vector<long long int> v[100001];
long long int heightof[100001];
void dfs(long long int at,long long int height)
{
	vector<long long int>::iterator it;
	heightof[at]=height;
	for(it=v[at].begin();it!=v[at].end();it++)
		dfs((*it),height+1);
	return;	
}
int main() {
	// your code goes here
	long long int T,N,i,x,root;
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin>>T;
	while(T--)
	{
		cin>>N;
		for(i=1;i<=N;i++)
			v[i].clear();
		for(i=1;i<=N;i++)
		{
			cin>>x;
			if(x==0)
				root=i;
			else
				v[x].push_back(i);
		}
		dfs(root,0);
		long long int shake=0,tot;
		tot=(N*(N-1))/2;
		for(i=1;i<=N;i++)
			shake=shake+heightof[i];
		cout<<shake<<" "<<tot-shake<<"\n";	
		
	}
	return 0;
}