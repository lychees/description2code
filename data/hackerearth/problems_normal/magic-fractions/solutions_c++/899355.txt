/*
* CodenationPrime.cpp
*
* Created on: 27-Oct-2014
* Author: nikhil
*/
 
 
 
 
/*
* codeJam.cpp
*
* Created on: 19-Oct-2014
* Author: nikhil
*/
 
 
 
 
#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include <string>
#include <algorithm>
#include <sstream>
#include <map>
#include <cmath>
#include <set>
#include <cstring>
#include <bitset>
using namespace std;
#define x first
#define y second
#define VI vector<int>
#define pii pair<int,int>
#define inf 1000000000
#define L(s) ((int)(s).size())
#define pb push_back
#define mp make_pair
#define all(s) (s).begin(), (s).end()
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define RREP(i, a, b) \
for (int i = int(a); i >= int(b); i--) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define ghei(i)\
scanf("%d",&i)
#define ghel(i)\
scanf("%lld",&i)
#define ghes(i)\
scanf("%s",&i)
#define INF 2000000000 // 2 billion
// If you need to recall how to use memset:
#define MEMSET_INF 127 // about 2B
#define MEMSET_HALF_INF 63 // about 1B
//memset(dist, MEMSET_INF, sizeof dist); // useful to initialize shortest path distances
//memset(dp_memo, -1, sizeof dp_memo); // useful to initialize DP memoization table
bool primes[550];
int cnt[551];
vector<int> pr;
void comp(){
memset(primes,true,sizeof(primes));
for(int i=2;i<501;i++) {
if(primes[i]==false) continue;
pr.pb(i);
for(int j=i+i;j<501;j+=i){
primes[j]=false;
}
}
}
ll proc(){
int n;
cin>>n;
if(n<2){
	cout<<0<<endl;
	return 1;
}
ll ans = 2;
ll prev = 1;
REP(i,3,n){
if(primes[i]){
// cout<<i<<" Prime"<<endl;
prev = prev*2;
ans = ans+prev;
}
else {
ans = ans+prev;
}
}
printf("%lld\n",ans-1);
}
int main() {
//freopen("in.txt","r",stdin);
//freopen("out.txt","w",stdout);
comp();
proc();
}
 
 