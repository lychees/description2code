#include<bits/stdc++.h>
using namespace std;
#define mp make_pair
vector<pair<int,int> > edges[100001];
int n,T,ans;
bool visited[100001];
void dfs(int s)
{
    T=s;
    stack<pair<int,int> > S;
    while(!S.empty())
        S.pop();
    ans=0;
    S.push(mp(s,0));
    while(!S.empty())
    {
        int u=S.top().first;
        int w=S.top().second;
        S.pop();
        visited[u]=true;
        for(int i=0;i<edges[u].size();i++)
        {
            if(visited[edges[u][i].first]==false)
            {
                int x=edges[u][i].second;
                S.push(mp(edges[u][i].first,x+w));
                if(x+w>ans)
                {
                    ans=x+w;
                    T=edges[u][i].first;
                }
            }
        }
    }
}
int main()
{
    int t,a,b,c;
    scanf("%d",&t);
    while(t--)
    {
      scanf("%d",&n);
      for(int i=0;i<=n;i++)
            edges[i].clear();
      for(int i=1;i<n;i++)
      {
          scanf("%d%d%d",&a,&b,&c);
          edges[a].push_back(mp(b,c));
          edges[b].push_back(mp(a,c));
      }
      for(int i=0;i<=n;i++)
        visited[i]=false;
    dfs(1);
    for(int i=0;i<=n;i++)
        visited[i]=false;
    dfs(T);
    int cost;
    if(ans<100)
        cost=0;
    else if(ans<1000)
        cost=100;
    else if(ans<10000)
        cost=1000;
    else
        cost=10000;
    printf("%d %d\n",cost,ans);
    }
    return 0;
}
