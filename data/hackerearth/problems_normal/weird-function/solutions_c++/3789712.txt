#include<bits/stdc++.h>
#define ll long long int
#define mod 1000000007
#define MAX 10009
using namespace std;

vector<ll> prime;
ll primedivisor[10009];
bool isPrime[MAX+5];

ll bigmod (ll a, ll b, ll c)
{
    ll res = 1;
    while (b > 0)
    {
        if (b % 2 == 1)
        {
            res = (res * a) % c;
        }
        a = (a * a) % c;
        b=b/2;
    }
    return res;
}


ll calprimedivisor(ll n)
{
    ll i,k,m,ans,l;
    ans=0;
    for(i=1; i*i<=n; i++)
    {
        if(n%i==0 && i!=n/i)
        {
            ans=(ans+bigmod(i,n,mod))%mod;
            ans=(ans+bigmod(n/i,n,mod))%mod;
        }
        else if(n%i==0 && i==n/i)
        {
            ans=(ans+bigmod(i,n,mod))%mod;
        }
    }
    return ans%mod;
}

void pre()
{
    primedivisor[0]=0;
    primedivisor[1]=1;
    for(ll i=2; i<10007; i++)
    {
        primedivisor[i]=(calprimedivisor(i)+primedivisor[i-1])%mod;
        //cout<<calprimedivisor(i)<<endl;
    }
}

int main()
{
    ll t,T,n,m,i,j,ans;
    scanf("%lld",&T);
    pre();
    //while(scanf("%lld",&n)!=EOF)
    for(t=1; t<=T; t++)
    {
        scanf("%lld %lld",&n,&m);
        if(n>m)
            swap(n,m);
        ans=primedivisor[m]-primedivisor[n-1];
        ans+=2*mod;
        ans=ans%mod;
        printf("%lld\n",ans);
    }
    return 0;
}

