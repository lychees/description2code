#include <bits/stdc++.h>

using namespace std;

const int MAXN = 1e6;
bool is_prime[MAXN + 1];
vector <int> prime;

void sieve() {
	fill(is_prime + 2, is_prime + MAXN + 1, true);
	for (int i = 2; i * i <= MAXN; ++i) {
		if (is_prime[i] == true) {
			for (int j = i * i; j <= MAXN; j += i) {
				is_prime[j] = false;
			}
		}
	}
	for (int i = 2; i <= MAXN; i++) {
		if (is_prime[i] == true) {
			prime.push_back(i);
		}
	}
}

int calc(int n) {
	if (is_prime[n]) {
		return 0;
	} 
	for (int i = 0; i < (int) prime.size(); i++) {
		if (n % prime[i] == 0) {
			return n - prime[i];
		} 
	}
	return -1;
}

int main() {
	sieve();
	int tt;
	scanf("%d", &tt);
	for (int tc = 1; tc <= tt; tc++) {
		int n;
		scanf("%d", &n);
		printf("%d\n", calc(n));
	}
	return 0;
}