#include <iostream>
#include <cstring>
using namespace std;

int min(int a, int b){return a<b?a:b;}

int minInsertion(string str, int l,int r){
	if(l>r)
		return 0;
	if(l==r)
		return 0;
	if(l==r-1)
		return (str[l]==str[r])?0:1;
	int minLen = (str[l]==str[r])?minInsertion(str,l+1,r-1):min(minInsertion(str,l+1,r),minInsertion(str,l,r-1))+1;
	return minLen;
}

int minInsertionDP(string str, int n){
	if(n<2)
	return 0;
	int table[n+1][n+1];
	memset(table,0,sizeof(table));
	
	for(int gap=1;gap<n;gap++){
		for(int i=0,j=gap;j<n;j++,i++){
			table[i][j]=(str[i]==str[j])?table[i+1][j-1]:min(table[i+1][j],table[i][j-1])+1;
		}
	}
	return table[0][n-1];
}

int main()
{
	long int t;
	int n;
	string str;
	cin>>t;
	while(t--){
		cin>>n;
		cin>>str;
		//cout<<minInsertion(str,0,n-1)<<endl;
		cout<<minInsertionDP(str,n)<<endl;
	}
    
    return 0;
}
