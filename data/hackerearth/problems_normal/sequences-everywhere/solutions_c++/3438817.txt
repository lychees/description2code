#include <functional>
#include <algorithm>
#include <iostream>
#include <numeric>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <ctime>
#include <queue>
#include <set>
#include <map>
using namespace std;
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, b, e) for (int i = (int)(b); i <= (int)(e); ++i)
#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef long long i64;
typedef unsigned long long u64;
const int inf = 1e9+100500;

int f(i64 x) {
    if (x == 1) return 2;
    int c = 0;
    while (true) {
        bool done = false;
        for (int i = 2; i < x; ++i) {
            if (x%i != 0) {
                ++c;
                x = i;
                done = true;
                break;
            }
        }
        if (!done) {
            break;
        }
    }
    return c+1;
}

i64 get(i64 n) {
    i64 n4 = (n+6) / 12 + (n + 420) / 840 + (n + 360360) / 720720
            + (n + 72201776446800) / (72201776446800 * 2);
    i64 n3 = max(0ll, n/2 - n4 - 1);
    i64 n1 = n >= 2;
    i64 n2 = n - n4 - n3 - n1;
//     cout << n << ": " << n1 << " " << n2 << " " << n3 << " " << n4 << endl;
    return n4 * 4 + n3 * 3 + n2 * 2 + n1;
}

i64 g1(i64 n) {
    i64 s = 0;
    for (i64 i = 1; i <= n; ++i) {
        s += f(i);
    }
    return s;
}

int main() {
#ifdef HOME
    freopen("input.txt", "r", stdin);
#endif

    i64 a, b;
    cin >> a >> b;

    /*
    for (int i = 5; i <= 1000000; ++i) {
        if (i%1000 == 0) { cerr << "time " << i << endl; }
        if (get(i) != g1(i)) {
            cout << i << endl;
            break;
        }
    }
    */

    /*
    i64 A = 72201776446800ll * 2;
    for (i64 x = A; x <= 1e17; x += A) {
        if (f(x) == 4) {
            cerr << x << endl;
            exit(0);
        }
    }
    cerr << "ok" << endl;

#define assert(x) do { if(!(x)) throw 1; } while (false)
    for (i64 i = 15000000000ll; i <= 100000000000000ll; ++i) {
        if (i % 100000000 == 0) cout << i << " " << endl;
        try {
            if (i%12 == 6 || i % 840 == 420 || i % 720720 == 360360)
                ;
//                 assert(f(i) == 4);
            else if (i%2 == 0)
                assert(f(i) == 3);
            else
                ;
//                 assert(f(i) == 2);
        } catch (int) {
            cout << i << ": " << f(i) << endl;
        }
    }
    */

//     cout << get(b) << " " << g1(b) << endl;
//     assert(get(b) == g1(b));
    cout << get(b) - get(a-1) << endl;
//     cout << g1(b) - g1(a-1) << endl;

#ifdef HOME
    cerr << "Time elapsed: " << clock() / 1000 << " ms" << endl;
#endif
    return 0;
}
