#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <cstring>
#include <cmath>
#include <climits>
#include <stack>
#include <map>
#include <sstream>

using namespace std;


vector<pair<int, pair<int, int> > > v;

int g[555][555], d[555][555], gt[555][555];
int dis[555];

int findelement(int a) {
        if(dis[a] == a) return a;
        return findelement(dis[a]);
}

int main () {
  int t, a, b, c, n, m, k;
  cin>>t;
  while(t--) {
    v.clear();
    for(int i = 0; i < 400; i++) dis[i] = i;
    cin>>n>>m>>k;
    memset(g, -1, sizeof(g));
    for(int i = 0; i < m; i++)  {
      cin>>a>>b>>c;
      a--;b--;
      g[a][b] = c;
      g[b][a] = c;
    }




    for(int i = 0; i < n; i++) {

      for(int j = 0; j < n; j++) {
        d[i][j] = g[i][j];
      }
      d[i][i] =0;
    }
    for(int kk = 0; kk < n; kk++) {
      for(int i = 0; i < n; i++)  {
        for(int j = 0; j < n; j++) {
          if(d[i][kk] != -1 && d[kk][j] != -1 && (d[i][j] > d[i][kk]+ d[kk][j] || d[i][j] ==-1)) {
            d[i][j] = d[i][kk]+d[kk][j];
          }
        }
      }

    }


    for(int i = 0; i < k; i++)  {
      for(int j = 0; j < k; j++) {
		if(d[i][j] != -1)
        v.push_back(make_pair(d[i][j], make_pair(i, j)));
      }
    }
    sort(v.begin(), v.end());
    int cst = 0;
    for(int i = 0; i < v.size(); i++)  {
      int a= findelement(v[i].second.first);
      int b = findelement(v[i].second.second);
      if(a == b) continue;
      cst+= v[i].first;
      dis[a]  = b;
    }
    cout << cst <<endl;



  }
}
