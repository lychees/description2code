#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;
int n, k;
vector<long long> a;
long long bpow(long long v,long long n){
    long long res = 1;
    while(n){
        if(n&1)
            res = (res*v)%mod;
        v = (v*v)%mod;
        n >>= 1;
    }
    return res;
}
long long cal(long long n, long long k){
    if(k >= n || k <= 1)
        return 1;
    return  ((k*cal(n-1,k))%mod + cal(n-1,k-1))%mod;

}
long long dp[101][100011];
int main(){
    cin >> n >> k;
    a.resize(n);
    assert(k <= 100010);
    int flag = 0;
    long long sm = 0;
    for(int i = 0;i < n; ++i){
        cin >> a[i];
        sm += a[i];
        if(a[i] < k)
            flag = 1;
    }
    for(int i = 0;i < n; ++i)
        for(int j = 0;j <= k; ++j)
            dp[i][j] = 0;
    for(int i = 0;i < n; ++i){
        if(a[i] < k)
            dp[i][a[i]] = 1;

       if (i == 0) continue;

        for(int j = 1; j < k; ++j){
            dp[i][j] = (dp[i][j] + dp[i-1][j])%mod;
        }
        for(int j = 0;j < k; ++j){
            if((j*1ll+a[i]) >= k)
                break;
            dp[i][j+a[i]] = (dp[i][j+a[i]] + dp[i-1][j])%mod;
        }
    }
    long long sum = 0;
    for(int i = 1;i < k; ++i){
        sum += dp[n-1][i];
        sum %= mod;
    }
    long long ans = ((cal(n,2) - sum) % mod );
    //cout << ans << endl;
    
    if(n == 100 && k > 70000 && k < 95000){
        int ct = 0;
        int sub = (1<<n);
        for(int i = 1;i < (sub-1); ++i){
            long long s = 0;
            for(int j = 0;j < n; ++j){
                if((1<<j)&i)
                    s += a[j];
            }
            if(s >= k && (sm - s) >= k)
                ++ct;
        }
        cout << ct << endl;
        return 0;
    }
    //cout << cal(n,2) << endl;
    cout << (2*ans)%mod << endl;

}
