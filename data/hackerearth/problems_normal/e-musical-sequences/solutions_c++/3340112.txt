#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <algorithm>
#include <map>

using namespace std;
long long N, M, Z;
vector<long long>notes;
long long get_next() {
	long long s = 0;
	int t  = notes.size() - 1;
	for (int i = 0; i < N; i++, t--) {
		long long val = notes[t];
		s += (i%2 == 0 ? val: (M - val)%M);
		s %= M;
	}
//	cout << s <<"\n";
	return (M + s)%M;
}
int main()
{
	int T; 
	for (cin >> T; T; T--) {
		cin >> N >> M >> Z;
		long long a;
		notes.clear();
	    for (int i = 0; i < N; i++) {
	    	scanf("%lld", &a);
	    	notes.push_back(a);
	    }
	    if (N == 1) { cout << a%M <<"\n"; continue;}
	    a = (M + get_next())%M;
	    notes.push_back(a);
		//cout << N << " " <<a << " " <<"\n"; 
	    /*for (int i = 0 ;i < 3*N; i++) {
	    	//a = get_next();
	    	cout << N + i << " " << a<<"\n";
	    	notes.push_back(a);
	    }*/
	    long long Q = Z/(N+1LL), rem = Z%(N+1LL);
	    if (N%2LL) cout << notes[rem]%M <<"\n";
	    else cout << (Q%2LL ? (M - notes[rem])%M : notes[rem]%M)<<"\n";
	    
	    
	}
    return 0;
}
