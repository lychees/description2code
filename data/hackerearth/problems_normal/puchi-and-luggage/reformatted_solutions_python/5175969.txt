#!/usr/bin/python

def mergeSort(l, start, end):
    if start < end:
        mid = (start + end)/2
        mergeSort(l, start, mid)
        mergeSort(l, mid+1, end)
        merge(l, start, mid, end)


def merge(l, start, mid, end):
    nl = mid - start + 1
    nr = end - mid
    z = start
    arrL = []
    arrR = []
    for i in range(nl):
        arrL.append(l[z])
        z += 1
    for i in range(nr):
        arrR.append(l[z])
        z += 1

    index = start
    i = 0
    j = 0

    while i < nl and j < nr:
        if arrL[i] < arrR[j]:
            l[index] = arrL[i]
            d[arrL[i]] += index-start-i
            i += 1
        else:
            l[index] = arrR[j]
            j += 1
        index += 1

    while i < nl:
        l[index] = arrL[i]
        d[arrL[i]] += index-start-i
        i += 1
        index += 1

    while j < nr:
        l[index] = arrR[j]
        j += 1
        index += 1


t = int(raw_input())
for iteration in range(t):
    d = {}
    n = int(raw_input())
    l = [0]*n
    for i in range(n):
        l[i] = int(raw_input())
        d[l[i]] = 0
    dup = list(l)
    mergeSort(l, 0, n-1)
    for i in dup:
        print d[i],
    print ""
