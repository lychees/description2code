#include <bits/stdc++.h>

using namespace std;
int dp[100005];

int main()
{
	vector <pair<int, int> > v;
	vector <int> a;
	memset(dp, 0, sizeof(dp));
	int n, x;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> x;
		a.push_back(x);
		v.push_back({x,i});
	}
	
	sort(v.begin(), v.end());
	for (int i = 0; i < v.size(); i++) {
		if (v[i].second == 0) {
			if (dp[v[i].second + 1] == 0) {
				dp[v[i].second] = 1;
			} else {
				if (a[v[i].second] == a[v[i].second+1])
					dp[v[i].second] = 1;
				else
					dp[v[i].second] = dp[v[i].second+1]+1;
			}
			continue;
		}
		
		if (v[i].second == n - 1) {
				if (dp[v[i].second - 1] == 0) {
				dp[v[i].second] = 1;
			} else {
				if (a[v[i].second] == a[v[i].second-1]) {
					dp[v[i].second] = 1;
				} else {
					dp[v[i].second] = dp[v[i].second-1]+1;
				}
			}
			continue;
		}
		
		if (dp[v[i].second-1] == 0 && dp[v[i].second+1] == 0) {
			dp[v[i].second] = 1;
		} else if (dp[v[i].second-1] > 0 && dp[v[i].second+1] > 0) {
			int ans = 1;
			
			if (a[v[i].second] != a[v[i].second-1])
				ans = max(ans, dp[v[i].second-1] + 1);
			
			if (a[v[i].second] != a[v[i].second+1])
				ans = max(ans, dp[v[i].second + 1] + 1);
				
			dp[v[i].second] = ans;
			
		} else if (dp[v[i].second-1] >0) {
			if (a[v[i].second-1] == a[v[i].second]) {
				dp[v[i].second] = 1;
			} else {
				dp[v[i].second] = 1 + dp[v[i].second-1];
			}
		} else if (dp[v[i].second+1] >0) {
				dp[v[i].second] = 1 + dp[v[i].second+1];
		} else {
			
		}
	}
	int sum = 0;
	for (int i = 0; i < n; i++) {
		sum += dp[i];
	}
	cout << sum << endl;
	return 0;
}