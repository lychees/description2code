#include<bits/stdc++.h>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cassert>
#include<cctype>
#include<vector>
#include<algorithm>
#include<map>
#include<vector>
#include<set>
#include<list>
#include<deque>
#define SZ 100005
using namespace std;
char p[SZ];
int f[SZ];
void ffunc(char *pattern, int f[],int m)
{
    int k;
    f[0] = -1;
    for (int i = 1; i <= m; i++)
    {
        k = f[i - 1];
        while (k >= 0)

        {
            if (pattern[k] == pattern[i - 1])
                break;
            else

                k = f[k];
        }
        f[i] = k + 1;
        //cout<<f[i]<<" "<<i<<endl;
    }
}
void kmp(char* pattern, char* target,int m,int n)

{
    //cout<<m<<endl;
    int cnt=0;
    int i = 0;
    int k = 0;
    for(i=0;i<n;i++)
    {
        //cout<<n<<endl;
        while(k>0&&pattern[k]!=target[i])
            k=f[k];
        if(pattern[k]==target[i])
            k=k+1;
        //cout<<"holla "<<i<<" "<<k<<endl;
        //cout<<i<<" "<<k<<endl;
        if(k==m)
        {
            k=f[k];
        }
    }
}
int main()
{
    //freopen("in.txt","r",stdin);
    int T;
    cin>>T;
    for(int cas=1;cas<=T;cas++)
    {
        scanf("%s",p);
        int lp=strlen(p);
        ffunc(p,f,lp);
        if(f[lp]==0)
            f[lp]=-1;
        printf("Case %d: %d\n",cas,f[lp]);
    }
    return 0;
}
