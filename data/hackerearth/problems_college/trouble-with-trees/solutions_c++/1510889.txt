#include<iostream>
using namespace std;
#define mod 1000000007
 
// A dynamic programming based function to find nth
// Catalan number
unsigned long int catalanDP(unsigned int n)
{
    // Table to store results of subproblems
    unsigned long int catalan[n+1];
 
    // Initialize first two values in table
    catalan[0] = catalan[1] = 1;
 
    // Fill entries in catalan[] using recursive formula
    for (int i=2; i<=n; i++)
    {
        catalan[i] = 0;
        for (int j=0; j<i; j++)
        {
        	unsigned long int left = catalan[j];
        	unsigned long int right = catalan[i-j-1];
        	catalan[i] = (catalan[i] + (left*right)%mod)%mod;
        }
    }
 
    // Return last entry
    return catalan[n];
}
 
// Driver program to test above function
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	unsigned int n;
    	cin>>n;
    	cout<<catalanDP(n)<<endl;
    }
}