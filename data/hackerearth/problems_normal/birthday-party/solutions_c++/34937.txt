#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>
#define mod  5000000
#define MOD 1000000007
#define PHI 1000000006
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define S1(x) scanf("%llu",&x)
using namespace std;
int m,n,m1,flag;
vector <int> aa;
int dp[1001][1001];
int fun (int x, int index)
{
    //cout << x << " " << index << endl;

    if (x == 0) {
        flag = 1;
        return 1;
    }

    if (flag == 1) {
        return 1;
    }

    if (index < 0) {
        return 0;
    }
    int &result = dp[x][index];

    if (result != -1) {
        return result;
    }

    result = 0;
    result = fun (x, index-1);
    if (x-aa[index] >= 0) {
        result = max (result, fun (x-aa[index], index-1));
    }
    return result;

}

void fill ()
{
    int i,j;
    F (i, 0, 1001) {
        F (j, 0, 1001) {
            dp[i][j] = -1;
        }
    }
}

void f (map <int, int> a)
{
    map <int, int> m;
    map <int, int> :: iterator it;
    for (it = a.begin(); it != a.end(); it++) {
        int x;
        x = (*it).second;
        m[x]++;
    }
    sort (aa.begin(), aa.end());

    fill ();

    int sum = 0;
    for (it = m.begin(); it != m.end(); it++) {
        int x;
        flag = 0;

        x = fun ((*it).first, min (m1-1, n-1));

        if (x >= 1) {
            sum = sum + (*it).second;
        }

    }
    cout << sum << endl;
}

int main()
{
    //freopen ("input.txt", "r", stdin);
    int t;
    S (t);
    while (t--) {
        int i,x;
        map <int, int> mm;
        S (n);  S (m);
        m1 = m;

        aa.resize (m);
        F (i, 0, m) {
            S (aa[i]);
        }

        F (i, 0, n) {
            S (x);
            mm[x]++;
        }

        f (mm);

    }
    return 0;
}
