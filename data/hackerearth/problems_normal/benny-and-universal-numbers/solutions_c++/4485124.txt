//---chinmay2------

#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;

#define MOD 1000000007

#define		scan(x)				scanf("%d", &x)
#define		scan2(x,y)			scanf("%d %d", &x, &y)
#define		print(x)			printf("%d", x)
#define		prints(x)			printf("%d ", x)
#define		printn(x)			printf("%d\n", x)

#define		scan_lli(x)			scanf("%lld", &x)
#define		scan2_lli(x,y)		scanf("%lld %lld", &x, &y)
#define		print_lli(x)		printf("%lld", x)
#define		prints_lli(x)		printf("%lld ", x)
#define		printn_lli(x)		printf("%lld\n", x)

#define		for_up(v, s, e)		for (int v=s; v<e; v++)
#define		for_down(v, s, e)	for (int v=s; v>=e; v--)

typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector< pair<int, int> > vpii;

#define pb push_back
#define mp make_pair

#define fs first
#define sc second

#define YES true
#define NO false

int rem[16];
bool is_prime[100];

vector<lli> uni;

void gen (int len, lli n, bool found) {
	
	if (found) uni.pb(n);
	
	if (len == 15) return;
	
	n *= 10;
	for_up (i, 0, 10) {
		if ((n+i) % (len+1) == rem[len+1]) {
			gen(len+1, n+i, is_prime[(n+i)%100]?YES:found);
		}
	}
}

int solve (lli n) {
	
	return (int) (upper_bound(uni.begin(), uni.end(), n) - uni.begin());
}

int main()
{
	for_up (i, 2, 100) is_prime[i] = true;
	for_up (i, 2, 100) {
		if (is_prime[i]) {
			for (int j=i+i; j<100; j+=i) {
				is_prime[j] = false;
			}
		}
	}
	
	for_up (i, 1, 16) scan(rem[i]);
	
	if (rem[1]!=0) {
		int N;
		scan(N);
		for_up (i, 0, N) printn(0);
		return 0;
	}
	
	for_up (i, 1, 10) {
		gen(1, i, NO);
	}
	
	sort(uni.begin(), uni.end());
	
	int N;
	scan(N);
	
	lli x = 1;
	while (N--) {
		lli A, B;
		scan2_lli(A, B);
		
		printn(solve(B) - solve(A-1));
	}
	
	return 0;
}