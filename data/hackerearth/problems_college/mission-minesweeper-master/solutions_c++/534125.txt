#include<iostream>
using namespace std;
int count2[201][201];
bool show[201][201];
int X,Y;
void dfs(int i,int j)
	{
	if(i<0 || i>=X)
		return;
	if(j<0 || j>=Y)
		return;
	if(show[i][j]==true)
		return;
	show[i][j]=true;
	if(count2[i][j]==0)
		{
		dfs(i-1,j);
		dfs(i-1,j+1);
		dfs(i-1,j-1);
		dfs(i,j+1);
		dfs(i,j-1);
		dfs(i+1,j+1);
		dfs(i+1,j-1);
		dfs(i+1,j);
		}
	return;
	}
 char game[200][201];
int main()
{
    int test_cases;
    cin>>test_cases;
    while(test_cases>0)
    {
        int i,j;
       
        cin>>X>>Y;
        if(X>100 || Y>100)
        	return 2;
        for(i=0;i<X;i++)
            cin>>game[i];

       int ii=-1,jj=-1;
        for(i=0;i<X;i++)
        	{
        	for(j=0;j<Y;j++)
        		{
        		if(game[i][j]!='.' && game[i][j]!='c' && game[i][j]!='*')
        			return 4;
        		show[i][j]=false;
        			 int c=0;
        		if(game[i][j]=='c')
        			ii=i,jj=j,count2[i][j]=0;
        		else if(game[i][j]=='*')
        			{
        			count2[i][j]=-1;	
        			continue;
        			}
        		if(i>0)
        			if(game[i-1][j]=='*')	
						c++;
				if(i<X-1)
					if(game[i+1][j]=='*')
					c++;
				if(j>0)
					if(game[i][j-1]=='*')
					c++;
				if(j<Y-1)
					if(game[i][j+1]=='*')
					c++;
				if(i>0 && j>0)
					if(game[i-1][j-1]=='*')
					c++;
				if(i<X-1 && j>0)
					if(game[i+1][j-1]=='*')
					c++;
				if(i<X-1 && j<Y-1)
					if(game[i+1][j+1]=='*')
					c++;
				if(i>0 && j<Y-1)
					if(game[i-1][j+1]=='*')
					c++;	
        		count2[i][j]=c;
        		}
        	}
        if(ii==-1)
        	return 1;
        dfs(ii,jj);
       	for(i=0;i<X;i++)
       		{
       		for(j=0;j<Y;j++)	
       			{
       			if(show[i][j]==true)
       				cout<<count2[i][j];
       			else
       				cout<<game[i][j];
       			}
       		cout<<endl;
       		}
        // your code here
        test_cases--;
    }
    return 0;
}