/*****************************************************************************************/
/*																		     			 */
/*  					Adarsh Pugalia 										 			 */
/*																			 			 */
/*****************************************************************************************/

#include <iostream>
#include <stdio.h>
#include <vector>
#include <math.h>
#include <set>
#include <queue>
#include <algorithm>
#include <stack>
#include <cmath>
#include <cassert>
#include <map>
#include <limits>
 
#define ll long long int
#define vi vector <int>
#define vl vector <ll> 
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vpii vector <pii >
#define vpll vector <pll >
 
 
#define f first
#define s second
 
#define sd(n) scanf("%d", &n)
#define sl(n) scanf("%lld", &n)
#define rep(i,j,k) for(int i=j; i<=k; i++)
#define repd(i,j,k) for(int i=j; i>=k; i--)
 
#define pb push_back
#define pob pop_back
#define mp make_pair
 
#define max_size 100005
#define max_capacity INT_MAX
#define max_string_size 1000
#define max_node_size 340
#define max_power 26
#define max_sieve_size 1300005
#define max_log 17

#define INF 10000000
 
using namespace std;

/* variables */


void preprocess(){

}

void init(){
	
}

int dp[155][205][105];


void solve(int test_case){
	int n, a, b, c;
	cin>>n>>a>>b>>c;

	if(8*n>a+b*5+c*10){
		cout<<"-1\n";
		return;
	}

	rep(i,0,n){
		rep(j,0,200){
			rep(k,0,100)
				dp[i][j][k] = INF;
		}
	}

	dp[0][b][c] = 0;
	rep(i,0,n-1){
		rep(j,0,200){
			rep(k,0,100){
				int temp_a = a+5*b+10*c - 8*i - j*5 - k*10;

				// 8 1's
				if(temp_a>=8)
					dp[i+1][j][k] = min(dp[i+1][j][k], dp[i][j][k]+8);

				// 3 1's and 1 5
				if(temp_a>=3 && j>0)
					dp[i+1][j-1][k] = min(dp[i+1][j-1][k], dp[i][j][k]+4);

				// 5+5
				if(j>1)
					dp[i+1][j-2][k] = min(dp[i+1][j-2][k], dp[i][j][k]+2);

				// 10
				if(k>0)
					dp[i+1][j][k-1] = min(dp[i+1][j][k-1], dp[i][j][k]+1);

				// 10 + 1+ 1+ 1
				if(temp_a>2 && c>0)
					dp[i+1][j+1][k-1] = min(dp[i+1][j+1][k-1], dp[i][j][k]+4);
			}
		}
	}

	int ans = INF;
	rep(j,0,200){
		rep(k,0,100){
			ans = min(ans, dp[n][j][k]);
		}
	}

	cout<<ans<<endl;
}

int main(){
	preprocess();

	int t=1;
	cin>>t;
	rep(i,1,t)
		solve(i);
	return 0;
}