#include <iostream>
#include <cstdio>
#include <iomanip>
#include <cmath>
#include <string.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <set>
#include <map>
#include <stdlib.h>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <fstream>
#include <sstream>
#include <utility>
#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif


#define ll  long long int
#define ull unsigned long long int
#define sc(a,b) scanf("%d %d",&a,&b)
#define fsentak for(int i=0;i<n;i++)
#define f(a,z,b) for(int a=z;a<b;a++)
//#define sc(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sa(my) scanf("%d",&my[i])
#define nlc cout <<endl;
#define nl printf("\n");
#define vcd vector<vector<ll>>
#define MAX_INT 99999
#define MIN_INT -99999
#define inf 999999
#define MOD 1000000007

using namespace std;


/*
 
 const int max_n = 1e6 + 10;
 
 inline ll read()
 {
 register ll x=0;
 register char c;
 while((c=gc())<48 || c>'9');
 x=c-'0';
 while((c=gc())>='0' && c<='9')
 x=(x<<3)+(x<<1)+c-'0';
 return x;
 }
 
 */


int *st;


void updateUtil(int ss,int se,int si,int i,int diff)
{
    if(i<ss || i>se)
        return;
    
    st[si] +=diff;
    
    if(ss!=se)
    {
        int mid = (ss+se)/2;
        updateUtil(ss,mid,2*si+1,i,diff);
        updateUtil(mid+1,se,2*si+2,i,diff);
        
    }
    
}

void update(int i,int arr[],int val,int n)
{
    if(i<0 || i>(n-1))
        return;
    
    int diff = val - arr[i];
    arr[i] = val;
    
    updateUtil(0,n-1,0,i,diff);
    
    
    
    
}

int getSumUtil(int ss,int se,int si,int qs,int qe)
{
    if(ss>=qs && se<=qe)
        return st[si];
    if(se<qs || ss>qe)
        return 0;
    
    int mid = (ss+se)/2;
    return getSumUtil(ss,mid,2*si+1,qs,qe)+getSumUtil(mid+1,se,2*si+2,qs,qe);
    
}
int consUtil(int ss,int se,int si,int arr[])
{
    if(ss==se)
        return st[si] = arr[ss];
    int mid = (ss+se)/2;
    st[si] = consUtil(ss,mid,2*si+1,arr) + consUtil(mid+1,se,2*si+2,arr);
    return st[si];
    
}
void cons(int arr[],int n)
{
    st = new int[4*n];
    consUtil(0,n-1,0,arr);

}
int main()
{
    int n;
    cin >>n;
    
    int arr[n];
    int var;
    fsentak
    {
        cin >>var;
        if(var & 1)
            arr[i] = 0;
        else
            arr[i] = 1;
    }
    cons(arr,n);
    
    int q;
    cin >>q;
    int x,y,z;
    
    while(q--)
    {
        cin >>x >>y >>z;
        if(x==0)
            update(y-1,arr,z%2==0?1:0,n);
        else if(x==1)
            cout <<getSumUtil(0,n-1,0,y-1,z-1) <<endl;
        else
            cout <<((z-y) - (getSumUtil(0,n-1,0,y-1,z-1))) + 1 <<endl;
    }
    
    
    
    
    
}
// cin.ignore (std::numeric_limits<std::streamsize>::max(), '\n')




// cin.ignore (std::numeric_limits<std::streamsize>::max(), '\n')
