#include <bits/stdc++.h>
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, N) for (int I = 0; I < (N); ++I)
#define REPP(I, A, B) for (int I = (A); I < (B); ++I)
#define RI(X) scanf("%d", &(X))
#define RII(X, Y) scanf("%d%d", &(X), &(Y))
#define RIII(X, Y, Z) scanf("%d%d%d", &(X), &(Y), &(Z))
#define DRI(X) int (X); scanf("%d", &X)
#define DRII(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define DRIII(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define RS(X) scanf("%s", (X))
#define CASET int ___T, case_n = 1; scanf("%d ", &___T); while (___T-- > 0)
#define MP make_pair
#define PB push_back
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define LEN(X) strlen(X)
#define PII pair<int,int>
#define VPII vector<pair<int,int> >
#define PLL pair<long long,long long>
#define F first
#define S second
typedef long long LL;
using namespace std;
const int MOD = 1e9+7;
const int SIZE = 50010;
vector<int>e[SIZE];
int v[SIZE],num[SIZE];
int dp[SIZE][101];
int used[SIZE],tt;
int an,K;
void add(int &x,int v){
    x+=v;
    if(x>=MOD)x-=MOD;
}
void dfs(int x){
    used[x]=tt;
    memset(dp[x],0,sizeof(int)*(K+1));
    num[x]=1;
    add(dp[x][v[x]],1);
    REP(i,SZ(e[x])){
        int y=e[x][i];
        if(used[y]==tt)continue;
        dfs(y);
        for(int j=min(num[x],K);j>=0;j--){
            for(int k=1;j+k<=K&&k<=num[y];k++)add(dp[x][j+k],(LL)dp[x][j]*dp[y][k]%MOD);
            add(dp[x][j],(LL)dp[x][j]*dp[y][0]%MOD);
        }
        num[x]+=num[y];
    }
    add(an,dp[x][K]);
}
int main(){
    CASET{
        tt++;
        int N;
        RII(N,K);
        REPP(i,1,N+1)e[i].clear();
        REPP(i,1,N+1)RI(v[i]);
        REPP(i,1,N){
            DRII(x,y);
            e[x].PB(y);
            e[y].PB(x);
        }
        an=0;
        dfs(1);
        printf("%d\n",an);
    }
    return 0;
}

