#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
using namespace std;
typedef long long ll;
#define MOD 10000007LL
void solve() {
    ll N, X; scanf("%lld %lld", &N, &X);
    map <ll, ll> mp; mp[0] = 1;
    vector<ll> v;
    for(int i = 0; i < N; i++) {
 
        ll now; cin >> now;
        if(now > (1LL << 10)) { v.push_back(now); continue;}
        map<ll, ll> tmp = mp;
        for(map<ll,ll> :: iterator it = tmp.begin(); it != tmp.end(); it++) {
            ll num = it -> second; ll x = it -> first;
            x = x ^ now; mp[x] = (mp[x] + num) % MOD;
        }
    }
    map<ll, ll> oth; oth[0] = 1;
    for(int i = 0; i < v.size(); i++) {
        map<ll, ll> tmp = oth;
        for(map<ll,ll> :: iterator it = tmp.begin(); it != tmp.end(); it++) {
            ll num = it -> second; ll x = it -> first;
            x = x ^ v[i]; oth[x] = (oth[x] + num) % MOD;
        }
    }
    ll ans = 0;
    for(map<ll,ll> :: iterator it = mp.begin(); it != mp.end(); it++) {
        ll x = it -> first; ll num = it -> second;
        ans = ans + num * oth[x ^ X];
        ans = ans % MOD;
    }
    printf("%lld\n", ans);
}
int main() {
    int t = 1; //scanf("%d", &t);
    while(t--) solve();
}