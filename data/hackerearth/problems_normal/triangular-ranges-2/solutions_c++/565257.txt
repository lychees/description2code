#include<bits/stdc++.h>
using namespace std;
vector<long long> a;
int bsearch(int lp,int up,long long v)
 {
 	int mp=(lp+up)/2;
 	if(a[mp]==v)
 	  return 1;
 	if(lp>=up)
 	  return 0;
 	if(a[mp]>v)
 	   return bsearch(lp,mp-1,v);
 	return bsearch(mp+1,up,v);
 }

long long func(long long l,long long r)
  {if(l>r) return 0;
  if(l==r)
    return bsearch(0,a.size()-1,l);
  	long long p=sqrt(2*l);
  	p--;
  	while((p*(p+1)/2)<l) p++;
    long long q=sqrt(2*r);
    q--;
  	while((q*(q+1)/2)<r) q++;
  	if(((q*(q+1))/2)>r) q--;
  	
  	
  
  	return q-p+1;
  	
  }
 

int main() 
{
   for(long long i=1;i<=1000000;i++)
	  a.push_back((i*(i+1))/2);
	int t;
	cin>>t;
	while(t--)
	  {long long x,y;
	  	cin>>x>>y;
	  	long long count=0;
	  	for(int i=0;i<1000000;i++)
	  	  {
	  	  	long long l=x-a[i];
	  	  	long long r=y-a[i];
	  	  	if(l<1)
	  	  	  l=1;
	  	  	if(r<1)
	  	  	  break;
	  	  	  
	  	  	 count+=func(max(l,a[i]),r);
	  	  //	 cout<<max(l,a[i])<<" "<<r<<" "<<count<<" "<<endl;
	  	  	
	  	  }
	  	  cout<<count<<endl;
	  }	
	
}