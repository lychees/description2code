from itertools import ifilter
from bisect import bisect


def is_exists(line, d):
    def found(res, x): return res and line[res - 1] == x - d
    return next(ifilter(lambda x: found(bisect(line, x - d), x), line), None)


def is_exists_bounds(line, d, x, y):
    def bounds(res): return res - \
        max(x, y) >= line[0] or res + min(x, y) <= line[-1]

    def found(res, x): return res and line[res - 1] == x - d and bounds(x)
    return next(ifilter(lambda x: found(bisect(line, x - d), x), line), None)


def main():
    n, l, x, y = map(int, raw_input().split())
    line = map(int, raw_input().split())
    boys = is_exists(line, y)
    girls = is_exists(line, x)
    diff = is_exists_bounds(line, abs(x - y), x, y)
    summ = is_exists(line, x + y)
    if boys and girls:
        print 0
    elif boys:
        print 1, x
    elif girls:
        print 1, y
    elif summ:
        print 1, summ - min(x, y)
    elif diff and diff + min(x, y) <= line[-1]:
        print 1, diff + min(x, y)
    elif diff and diff - max(x, y) >= line[0]:
        print 1, diff - max(x, y)
    else:
        print 2, x, y


if __name__ == "__main__":
    main()
