#include<bits/stdc++.h>
using namespace std;
#define mp make_pair
bool visited[123456];
vector<int> v[123456];
pair<int,int> p[123456];

void dfs(int i)
{
    visited[i]=true;
    for(int j=0;j<v[i].size();j++)
    {
        if(!visited[v[i][j]])
        {
            dfs(v[i][j]);
        }
    }
}
int main()
{
    int n,m,t,i,j,x,y,edge;
    for(cin>>t;t;--t)
    {
        memset(visited,0,sizeof(visited));
        cin>>n>>m;
        for(i=0;i<=n;i++)
        {
            v[i].clear();
        }
        for(i=1;i<=m;i++)
        {
            cin>>x>>y;
            p[i]=mp(x,y);
        }
        for(i=0;i<n-1;i++)
        {
            cin>>edge;
            v[p[edge].first].push_back(p[edge].second);
            v[p[edge].second].push_back(p[edge].first);
        }
        dfs(1);
        for(i=2;i<=n;i++)
        {
            if(!visited[i])
            {
                cout<<"NO\n";
                break;
            }
        }
        if(i==n+1)
        {
            cout<<"YES\n";
        }
    }
    return 0;
}
