#include<iostream>
#include<vector>
#include<algorithm>
#include<map>
#include<cmath>
#include<cstdlib>
using namespace std;
typedef long long ll;
vector<int> v,v1,v2;
ll quick_pow10(int n)
{
    ll pow10[13] = {
        1, 10, 100, 1000, 10000, 
        100000, 1000000, 10000000, 100000000, 1000000000,
        10000000000ULL, 100000000000ULL, 1000000000000ULL
    };

    return pow10[n]; 
}
ll findGcd(ll a, ll b)
{
   if (b==0) return a;
   return findGcd(b,a%b);
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--){
    	v.clear();
    	v1.clear();v2.clear();
    	ll n,m,f=0,gr=0,sm=0,pos;
    	scanf("%lld",&n);
    	m = n;
    	while(m){
    		int d = m%10;
    		if(d%2)
    			f=1;
    		v.push_back(m%10);
    		m/=10;
    	}
    	if(!f){
    		printf("Unlimited Power\n");
    		continue;
    	}
    	f=0,pos=0;
    	for(int i = 0;i<v.size();i++){
    		if(v[i]%2 )
    			pos = i;
    	}
    	int carr = 0;
    	for(int i=0;i<v.size();i++){
    		if(pos == i){
   
    			int d = v[i]+1;	
    			int d2 = v[i]-1;
    			v2.push_back(d2);
    			if(d == 10){
    				v1.push_back(0);
    				carr = 1;
    			}
    			else{
    				v1.push_back(d);
    			}
    		}
    		else if(pos>i){
    			v1.push_back(0);
    			v2.push_back(8);
    		}
    		else{
    			if(carr){
    				int d= v[i]+1;
   					if(d%2)
   						d+=1;
    				if(d==10){
    					v1.push_back(0);
    					carr = 1;
    				}
    				else{
    					v1.push_back(d);
    					carr = 0;
    				}
    			}
    			else{
    				int d = v[i];
    				v1.push_back(d);
    				carr = 0;
    			}
    			v2.push_back(v[i]);
    		}
    	}
    	if(carr)
    		v1.push_back(2);
    	for(int i=0;i<v1.size();i++)
    		gr = gr + quick_pow10(i)*v1[i];
    	for(int i=0;i<v2.size();i++)
    		sm = sm+quick_pow10(i)*v2[i];
    	//cout<<gr<<" "<<sm<<endl;
    	ll diff1 = gr-n;
    	ll diff2 = n-sm;
    	ll gcd  = findGcd(diff1,diff2);
    	printf("%lld/%lld\n",diff1/gcd,diff2/gcd);
    }
    return 0;
}
