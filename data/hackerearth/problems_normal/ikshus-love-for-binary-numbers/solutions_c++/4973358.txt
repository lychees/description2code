// hackerearth file
#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
#include<string>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%ld",&x)
#define gll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll MOD = 1e9+7;
//const int INF = 0x7f7f7f7f;
const int INF = 111111;
const double eps = 1e-6;
//const long long INF = 1e18;

const int MAXN = 111111;
ll dp[111][111];

ll pow_rec(ll a,ll b) {
	// a ^ b;
	ll p;
	if(b == 0) return 1;
	if(b % 2 == 0) {
		p = pow_rec(a,b / 2);
		p = p * p;
	}
	else p = a * pow_rec(a,b - 1);

	return p;
}

ll rec(ll n,ll k) {
	if(dp[n][k] != -1) return dp[n][k];
	if(n == k) return dp[n][k] = 1;

	ll ret = pow_rec(2ll,n - k);

	int cnt = 0;
	while (true) {
		ll t1 = n - k - 1 - cnt;
		if(t1 < 0) break;
		
		t1 = pow_rec(2ll,t1);
		ll t2 = pow_rec(2ll,cnt) - rec(cnt,k);

		ret += t1 * t2;
		cnt ++;
	}

	return dp[n][k] = ret;
}

int main() {
	ios_base::sync_with_stdio(false);

    ll n,k; cin >> n >> k;
	
	memset(dp,-1,sizeof dp);
	for (int i = 0; i < 66; i ++) for (int j = i + 1; j < 66; j ++) dp[i][j] = 0;

	ll a = rec(n,k);
	ll b = pow_rec(2ll,n);
	ll g = __gcd(a,b);
	a /= g;
	b /= g;
	cout << a << '/' << b << '\n';
	
	return 0;
}
