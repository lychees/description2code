/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <bits/stdc++.h>
using namespace std;
//assert 

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;

#define geti(n) int n;scanf("%d",&n)
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)
#define getl(n) long long n;cin >> n
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define max(x,y) ( x ^ ((x ^ y) & -(x < y)))
#define min(x,y) (y ^ ((x ^ y) & -(x < y)))

#define TRACE
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif

bool is_perfect_cube(ll n) {                       //for checking cube root 
    ll root(round(cbrt(n)));
    return n == root * root * root;
}
const int MAX = 2000; 
ll Dp[MAX][MAX],a[MAX][MAX];
int n,k;

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
     #ifdef _WIN32 
	    freopen("input.txt", "r", stdin);
         //freopen("output.txt","w",stdout);}
    #endif // LOCAL_USER   
//string s  ;
cin>>n>>k;
k-=1;
rep(i,n)
{
	rep(j,n)
	   cin>>a[i][j];
}

//Dp[i][j] -> contains the sum from (0,0) to (i,j) point in matrix. 
// so first making dp array.
rep(j,n)
{
	rep(i,n)
	  {
	  	if(i==0) Dp[i][j] = a[i][j]; 
	  	 else 
	  	    Dp[i][j] = Dp[i-1][j] + a[i][j] ;
	  }
}

rep(i,n)
{
	rep(j,n)
	  {
	  	 if(j==0) continue ;
	  	 Dp[i][j]+= Dp[i][j-1] ;//+ a[i][j];
	  }
}

/*
rep(i,n)
 {
 	rep(j,n)
 	  trace3(Dp[i][j],i,j);
 }
*/
int cnt = 0 ;
rep(i,n)
{
	if(i+k >=n) break ;           // no need to go further
	rep(j,n)
	 {
	 	 if(j+k >=n ) break ;    // same
         
         int i1 = i+k;
         int j1 = j+k;
        
        ll x=0,y=0,z=0; 
        
        if(j) 
        	x = Dp[i1][j-1];
        if(i) 
        	y = Dp[i-1][j1];
        if(i && j) 
        	z = Dp[i-1][j-1];

        ll sum = Dp[i1][j1] - x - y + z;                  
        if(is_perfect_cube(sum)) cnt+=1;
	 }
}
cout<<cnt<<endl;
}
