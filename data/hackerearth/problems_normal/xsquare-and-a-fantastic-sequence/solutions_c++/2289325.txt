/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-9
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512

using namespace std;

int tests;
int n,m;
int w[1<<20];
int cnt1[1<<19][27],cnt2[1<<19][27];

int get(int x)
{
	if (w[x]==x)
		return x;
	return w[x]=get(w[x]);
}

void merge(int a,int b)
{
	w[a]=b;
}

string st1,st2;
int s;

int get_score(int id)
{
	int s=0;
	for (int i=0;i<26;i++)
		s+=min(cnt1[id][i],cnt2[id][i]);
	return s;
}

int main(){
//freopen("blind.in","r",stdin);
//freopen("blind.out","w",stdout);
//freopen("F:/in.txt","r",stdin);
//freopen("F:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
	cin>>n>>m;
	for (int i=1;i<=n;i++)
		w[i]=i;
	for (int i=1;i<=n;i++)
		for (int j=0;j<=26;j++)	
			cnt1[i][j]=cnt2[i][j]=0;
	
	cin>>st1;
	cin>>st2;
	
	for (int i=1;i<=m;i++)
	{
		int a,b;
		cin>>a>>b;
		a=get(a);
		b=get(b);
		if (a==b)
			continue;
		merge(a,b);
	}
	
	for (int i=1;i<=n;i++)
	{
		int val1=st1[i-1]-'a';
		int val2=st2[i-1]-'a';
		int id=get(i);
//		cout<<id
		cnt1[id][val1]++;
		cnt2[id][val2]++;
	}
	
	int s=0;
	
	for (int i=1;i<=n;i++)
	{
		if (w[i]!=i)
			continue;
		for (int j=0;j<26;j++)
			s+=min(cnt1[i][j],cnt2[i][j]);
	}
	
	cout<<s<<endl;
	
	for (int i=1;i<=n;i++)
	{
		int id=get(i);
		
		int zz=get_score(id);
		
		cnt2[id][st2[i-1]-'a']--;
		
		for (int letter=0;letter<26;letter++)
		{
			if (cnt1[id][letter]==0)
				continue;
			--cnt1[id][letter];
			int val2=get_score(id)+(letter==st2[i-1]-'a');
			if (val2==zz)
			{
				cout<<char(letter+'a');
				break;
			}
			++cnt1[id][letter];
		}
	}
	
	cout<<endl;
}

//cin.get();cin.get();
return 0;}