#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define PII pair<int,int>
using namespace std;
int main()
{
    int n; si(n);
    vector<int> a;
    REP(i,n)
    {
        int x; si(x);
        a.PB(x);
    }
    LL ans=0;
    while(a.size()>2)
    {
        int m=-1,ind;
        for(int i=1;i<a.size()-1;i++)
        {
            if(a[i-1]*a[i+1]>m)
            {
                m=a[i-1]*a[i+1]; ind=i;
            }
        }
        ans+=m;
        vector<int> t;
        REP(i,a.size())
        {
            if(i==ind) continue;
            t.PB(a[i]);
        }
        a=t;
        t.clear();
    }
    cout<<ans<<endl;
	return 0;
}
