#include <bits/stdc++.h>

using namespace std;
#define MAX 500010

int sq(int);
int udv(int,int,int);
int tree[500100];
int b[500100],c[500100];
char a[500100][12];

int bs(int value, int final)
{
	int first = 1;
    //	last = n - 1;
   	int ans = -1;
  	while( first <= final )
   	{
    	int middle = (first+final)/2;
		if(sq(middle) < value)
        	 first = middle + 1;
      	else {
      		 ans = middle;
        	 final = middle - 1;
        }

   	}
   	return ans;
}
int sq(int l)
{
	int sm = 0;
	while(l > 0)
	{
		sm  = sm  + tree[l];
		l =  l - (l &(-l));
	}
	return sm;
}
int udv(int l, int x,int n)
{
	while(l <= MAX)
	{
		//cout<<l<<endl;
		tree[l] = tree[l] + x;
		l =  l + (l&(-l));
	}
}

int main()
{
	//ios_base::sync_with_stdio(0);
	int t;
	scanf("%d", &t);
	while(t--)
	{
		memset(tree, 0, sizeof(tree));
		int n,i,temp,top;
		scanf("%d", &n);
		for(i = 1; i <= n; i++)
		{
		 	scanf("%s", a[i]);
		}
		for(i = 1; i <= n; i++)
		{
			scanf("%d", &b[i]);
			udv(i,1,MAX);
		}
		for(i = 1 ; i <= n-1; i++)
		{
			scanf("%d", &c[i]);
		}
		// input
		int maxi = 0;
		for(i = 1; i <= n-1; i++)
		{
			int answer = bs(c[i], MAX);
			if(b[answer] > maxi)
			{
				maxi = b[answer];
			}
			printf("%s %d\n",a[answer], maxi);
			udv(answer,-1,MAX);
		}
		int answer = bs(1,MAX);
		if(b[answer] > maxi)
		{
			maxi = b[answer];
		}
		printf("%s %d\n",a[answer], maxi);
	}
	return 0;
}
