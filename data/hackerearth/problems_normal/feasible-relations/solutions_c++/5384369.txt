#include<bits/stdc++.h>

using namespace std;

long long vis[1000007];
vector<vector<long long> > G;

void DFS(long long idx,long long marker)
{
	long long i;
	
	vis[idx]=marker;
	
	for(i=0;i<G[idx].size();i++)
	{
		if(!vis[G[idx][i]])
			DFS(G[idx][i],marker);
	}
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		long long i,n,k,to,from,c,k1=0;
		string rel;
		vector<pair<long long,long long> > nteql;
		pair<long long,long long> P;
		vector<long long> R;
		cin>>n>>k;
		
		G.clear();
		
		for(i=0;i<=n;i++)
		{
			G.push_back(R);
			vis[i]=0;
		}
		
		for(i=0;i<k;i++)
		{
			cin>>to>>rel>>from;
			if(rel=="=")
			{
				G[to].push_back(from);
				G[from].push_back(to);
			}
			else
			{
				P.first=to;
				P.second=from;
				nteql.push_back(P);
			}
		}
		c=0;k1=0;
		for(i=1;i<=n;i++)
		{
			if(!vis[i])
			{
				++c;
				DFS(i,c);
			}
		}
		
		for(i=0;i<nteql.size();i++)
		{
			if(vis[nteql[i].first]==vis[nteql[i].second])
			{
				k1=1;
				break;
			}
		}
		
		if(k1==0)
			cout<<"YES\n";
		else
			cout<<"NO\n";
	}	
	return 0;
}