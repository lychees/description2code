#include <bits/stdc++.h>
using namespace std;
#define bug() printf("BUG\n")
#define bug1(n) printf("bg1 %d\n",n)
#define bug2(a,b) cout<<"bug2 "<<a<<" "<<b<<endl;
#define MOD 1000000007
#define ll long long
#define vi vector< int >
#define vll vector< long long >
#define vvi vector< vector< int > >
#define vvll vector< vector< long long > >
#define pi pair< int, int >
#define pll pair< long long, long long >
#define vpi vector< pair< int, int > >
#define vpll vector< pair< long long, long long > >
#define pb(n) push_back(n)
#define mp(a,b) make_pair(a,b)
#define printA(a,n) for(int i = 0;i < n;++i) cout<<a[i]<<" "; cout<<endl;
int gcd(int a,int b)
{
	if(a == 0)
		return b;
	return gcd(b%a,a);
}
int main()
{
	int t;
	scanf("%d",&t);
	assert(t >= 1 && t <= 1000000);
	while(t--)
	{
		int n;
		scanf("%d",&n);
		assert(n >= 1 && n <= 1000000000);
		vi maxy,miny;
		int temp = n;
		while(temp > 0)
		{
			maxy.pb(temp%10);
			temp/=10;
		}
		int len = maxy.size();
		for (int i = 0; i < len; ++i)
		{
			miny.pb(maxy[i]);
		}
		int ii = 0;
		for (ii = len-1; ii >= 0; --ii)
		{
			if (maxy[ii]%2 != 0)
			{
				break;
			}
		}
		if(ii == -1)
		{
			printf("Unlimited Power\r\n");
			continue;
		}
//		bug();
		if (ii == len-1 && maxy[ii] == 9)
		{
			maxy.pb(2);
			for (int i = 0; i < len; ++i)
			{
				maxy[i] = 0;
			}
		}
		else if(maxy[ii] == 9)
		{
			int ttt=1;
			if(maxy[ii+ttt] == 8)
			{
				while (ii+ttt < len && maxy[ii+ttt] == 8)
				{
					maxy[ii+ttt] = 0;
					ttt++;
				}
				if (ii+ttt < len)
				{
					maxy[ii+ttt]+=2;
				}
				else
					maxy.pb(2);
			}
			else
			{
				maxy[ii+1]+=2;
			}
			for (int i = 0; i <= ii; ++i)
			{
				maxy[i] = 0;
			}
		}
		else
		{
			maxy[ii]++;
			for (int i = 0; i < ii; ++i)
			{
				maxy[i] = 0;
			}
		}
//		bug();
		miny[ii]--;
		for (int i = 0; i < ii; ++i)
		{
			miny[i] = 8;
		}
		int maxx = 0,minn = 0,t1 = 10;
		int l1 = maxy.size();
		int l2 = miny.size();
		for (int i = l1-1; i >= 0; --i)
		{
			maxx = maxx*t1 + maxy[i];
		}
		for (int i = l2-1; i >= 0; --i)
		{
			minn = minn*t1 + miny[i];
		}
//		bug2(minn,maxx);
		minn = n - minn;
		maxx = maxx - n;
		if (minn == maxx)
		{
			printf("1/1\r\n");
		}
		else
		{
			int g = gcd(minn,maxx);
//			printf("%d\n",g );
			printf("%d/%d\r\n", maxx/g,minn/g);
		}
	}
	return 0;
}