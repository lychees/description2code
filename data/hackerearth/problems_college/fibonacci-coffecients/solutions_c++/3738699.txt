#include<bits/stdc++.h>
//Definitions
#define LL long long
#define LLU unsigned long long
#define fora(var,end) for(int var=0;var<end;var++)
#define fore(var,start,end) for(int var=start;var<end;var++)
#define forit(it1,a) for(typeof(a.begin()) it1=a.begin();it1!=a.end();it1++)
#define pub push_back
#define fst first
#define snd second
#define mkp make_pair
#define beg begin
#define ed end
#define pii pair<int,int>
#define all(v) v.begin(),v.end()
#define P(a,b) cout<<a<<" "<<b<<" "
#define PNL printf("\n")
#define vi vector<int>
#define vpi vector<pair<pair<int,int>,int> >
#define FL(a,n,x) fill(a,a+n,x)
#define db1(a) cout<<#a<<":"<<a<<endl;
#define db2(a,b) cout<<#a<<":"<<a<<" , "<<#b<<" : "<<b<<endl;
#define db3(a,b,c) cout<<#a<<":"<<a<<" , "<<#b<<":"<<b<<" , "<<#c<<":"<<c<<endl;
//AP_HAWKDOWN from hereon
using namespace std;
LL MOD;
LL FIB[2000111];
LL fib(long long int n)
{
    return FIB[n];
}
int ma;//arraysize +1
LL t1[200015],t2[200015];//Array size +1

void update(LL T[],int idx,LL val)
{
    while(idx<=ma)
    {
        T[idx]+=val;
        T[idx]=(((T[idx]%MOD)+MOD))%MOD;
        idx+=(idx&(-idx));
    }
}
void upd(LL t[],int a,int b,LL val)
{
    update(t,a,val);
    update(t,b+1,-val);
}
int query(LL T[],int idx)
{
    LL sum=0;
    while(idx>0)
    {
        sum+=T[idx];
        sum=((sum%MOD)+MOD)%MOD;
        idx-=(idx&(-idx));

    }
    return sum;
}
LL F[200023],F1[200044];
int main()
{
//freopen("ip.cpp","r",stdin);
    FIB[0]=0;
    FIB[1]=1;
    int n,m;
    cin>>n>>m>>MOD;

    for(int i=2; i<=200023; i++)
    {
        FIB[i]=(FIB[i-1]+FIB[i-2])%MOD;
    }
    ma=n+1;
    fora(i,n)
    {
        LL ff;
        scanf("%lld",&ff);
        LL f=ff%MOD,f1=ff%MOD;
        f=(f*fib(i+1))%MOD;
        F[i+1]=f;
        f1=(f1*fib(i+2))%MOD;
        F1[i+1]=f1;
        //cout<<f<<" "<<f1<<endl;
        upd(t1,i+1,n,f);
        upd(t2,i+1,n,f1);
    }
    fora(i,m)
    {
        LL f,f1;
        int x;
        LL y,z;
        scanf("%d %lld %lld",&x,&y,&z);
        if(x==1)
        {
            z=z%MOD;
            upd(t1,y,n,(((-F[y])%MOD)+MOD)%MOD);
            upd(t2,y,n,(((-F1[y])%MOD)+MOD)%MOD);
            f=z;
            f1=z;
            f=(f*fib(y))%MOD;
            f1=(f1*fib(y+1))%MOD;
            F[y]=f;
            F1[y]=f1;
            upd(t1,y,n,f);
            upd(t2,y,n,f1);
        }
        else
        {
            LL ans=0,down,down2;

            int t;
            t=y-1;

            if(t==0)
            {

                down=0;
                down2=0;
            }
            else
            {
                down=query(t1,t);
                down2=query(t2,t);
            }
            if(t%2==0)
            {
                ans=((((((query(t1,z)-down)*fib(t+1LL))%MOD)-(((query(t2,z)-down2)*fib(t))%MOD))%MOD)+MOD)%MOD;
            }
            else
            {
                ans=((((((-query(t1,z)+down)*fib(t+1))%MOD)+(((query(t2,z)-down2)*fib(t))%MOD))%MOD)+MOD)%MOD;
            }
            cout<<ans<<endl;
        }
    }

    return 0;
}
