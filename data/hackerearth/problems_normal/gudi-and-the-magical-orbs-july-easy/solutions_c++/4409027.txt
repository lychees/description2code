#include<bits/stdc++.h>
using namespace std;
int graph[105][105];
int n,m;
int lim;
int ans;
bool issafe(int x, int y)
{
		if(x>0 && x <= n && y > 0 && y <= m && graph[x][y] != 0) return true;
		return false;
}
bool dp[101][101][501];
int main()
{
		//cout << "Hello World!" << endl;
		//ios_base::sync_with_stdio(false);
		int t;
		scanf("%d",&t);
		//cin>>t;
		while(t--)
		{
				memset(dp,false,sizeof dp);
				int i;
				int j;
				ans = 0;
				scanf("%d %d %d",&n,&m,&lim);
				//cin>>n>>m>>lim;
				for(i=1;i<=n;++i)
				{
						for(j=1;j<=m;++j)
						{
								scanf("%d",&graph[i][j]);
								//cin>>graph[i][j];	
						}
				}
				dp[0][0][0]=true;
				int mk = -1;
				int k;
				
					for(i=1;i<=n;++i)
					{
						for(j=1;j<=m;++j)
						{
							for(k=1;k<=lim;++k)
							{
								if(k-graph[i][j]>=0)
								dp[i][j][k] = dp[i-1][j][k-graph[i][j]] || dp[i-1][j-1][k-graph[i][j]] ||  dp[i][j-1][k-graph[i][j]];
							}
						}
					}
					for(k=1;k<=lim;++k)
						if(dp[n][m][k]) mk = k;
				printf("%d\n",mk);
				

		}
		return 0;
}

