#include <bits/stdc++.h>
#define ll long long
using namespace std;

ll dp[102][1005],block[102][1005],prefix[102][100005]={{0}};
int a[102][100005];

ll solve(ll n,ll m)
{
    if(m<0)
        return -999999999999;
    if(n<0)
        return 0;
    if(dp[n][m]!=-1)
        return dp[n][m];
    int i,len=a[n][0];
    ll ma=0;
    for(i=0;i<=len;i++)
    {
        if(m==i)
        {
            ma=max(block[n][i],ma);
            break;
        }
        else
        {
            ma=max(block[n][i]+solve(n-1,m-i),ma);
        }
    }
    dp[n][m]=ma;
    return dp[n][m];
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    memset(dp,-1,sizeof(dp));
    ll n,m;
    scanf("%lld %lld",&n,&m);
    ll i,j;
    for(i=0;i<n;i++)
    {
        scanf("%lld",&a[i][0]);
        for(j=1;j<=a[i][0];j++)
        {
            scanf("%lld",&a[i][j]);
            if(j==1)
                prefix[i][j]=a[i][j];
            else
                prefix[i][j]=prefix[i][j-1]+a[i][j];
        }
    }
    for(i=0;i<n;i++)
    {
        ll x=0,k,len=a[i][0];
        block[i][0]=0;
        for(j=0;j<=m;j++)
        {
            x=0;
            for(k=1;k<=len;k++)
            {
                if(k+j>len)
                    break;
                x=max(x,prefix[i][k+j]-prefix[i][k]+a[i][k]);
            }
            block[i][j+1]=x;
            //cout<<block[i][j]<<" ";
        }
        //cout<<"\n";
    }
    printf("%lld\n",solve(n-1,m));
}
