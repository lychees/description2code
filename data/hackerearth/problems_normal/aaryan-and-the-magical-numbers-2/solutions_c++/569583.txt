#include <bits/stdc++.h>

using namespace std;

string toString(int n){ostringstream ost;ost<<n;ost.flush();return ost.str();}
int toInt(string s){int r=0;istringstream sin(s);sin>>r;return r;}

# define sz(x) (int)x.size()
# define pb push_back
# define mp make_pair
# define vi vector<int>
# define pi pair<int,int>

#define s(n)   scanf("%d",&n)
#define sl(n)  scanf("%lld",&n)
#define ss(n)  scanf("%s",n)

#define INF    (int)1e9
#define EPS    1e-9

#define foreach(v, c)   for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define Fw(a,b,c)  for (int (a)=(b); (a)<(c); (a)++)
#define Fd(a,b,c)  for (int (a)=(b); (a)>=(c); (a)--)

#define all(a)    a.begin(), a.end()
#define in(a,b)   ( (b).find(a) != (b).end())

template<typename T,typename TT> ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}

#define out(a,i) cout<<#a<<"= "<<a<<(i==1?'\n':' ');
#define printA(a,L,R) Fw(i,L,R) cout << a[i] << (i==R-1?'\n':' ')
#define reset(a,b)   memset(a,b,sizeof(a)) 
#define SYNC         ios_base::sync_with_stdio(0);
#define lli long long int

lli pre[20];
lli dp[20][2][2];
int len;
int isprime[10];
char s[20];
lli digit(int idx, int tight, int isprm) {
	if (idx == len) 
		return (isprm)?1:0;
	
	if (dp[idx][tight][isprm] != -1)return dp[idx][tight][isprm];
	
	lli &ans = dp[idx][tight][isprm];
	ans = 0;
	if (tight) {
		Fw(i,0,s[idx]-'0')
			ans+=digit(idx+1,0,isprime[i]|isprm);
		ans+=digit(idx+1,1,isprime[s[idx]-'0']|isprm);
	} else {
		if(isprm)
			ans+=pre[len-idx];
		else
			Fw(i,0,10)ans += digit(idx+1,0,isprime[i]|isprm);
	}
	
	return ans;
}
int main() {
	SYNC
	cin.tie(0);
	
	pre[0] = 1;isprime[2] =1;isprime[3] =1;isprime[5] =1;isprime[7] =1; 
	Fw(i,1,19)pre[i]=pre[i-1]*10;
	
	int t;
	s(t);
	while(t--) {
		reset(dp,-1);
		ss(s);len = strlen(s);
		cout << digit(0,1,0) << "\n";	
	}

return 0;
}