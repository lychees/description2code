#include<bits/stdc++.h>
using namespace std;

vector< vector<long long int> > a;
int n,m;
long long int cache[101][1001];

long long int maxTotalSum(int index,int cunt)
{
    if(index==a.size())return 0;
    if(cache[index][cunt]!=-21)return cache[index][cunt];
    long long int ans=maxTotalSum(index+1,cunt);
    for(int i=1;i<a[index].size()&&i<=m-cunt;i++)
    ans=max(ans,a[index][i]+maxTotalSum(index+1,cunt+i));
    return cache[index][cunt]=ans;
}

int main()
{
    scanf("%d%d",&n,&m);
    int len;
   std::fill (&cache[0][0],&cache[0][0] + sizeof(cache) / sizeof(cache[0][0]),-21);
    while(n--)
    {
        scanf("%lld",&len);
        vector<long long int> sum;
        vector<long long int> input;
        int x;
        long long int suma=0;
        while(len--)
        {
            scanf("%d",&x);
            suma+=x;
            input.push_back(suma);
        }
        sum.push_back(0);
        for(int difference=1;difference<=input.size()&&difference<=m;difference++)
        {
            long long int maxx=input[0+difference-1];
            for(int j=difference;j<input.size();j++)
            {
                maxx=max(maxx,input[j]-input[j-difference]);
            }
            if(sum.size()==0||maxx>sum[sum.size()-1])sum.push_back(maxx);
            else sum.push_back(0);
           
        }  
        a.push_back(sum);
    }
    cout<<maxTotalSum(0,0);
    return 0;
}
