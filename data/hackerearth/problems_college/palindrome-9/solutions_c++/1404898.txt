#include<bits/stdc++.h>
using namespace std;

const int N=1e4+4;
typedef long long ll;

ll dp[N];

map<ll,int>m;

bool isPalindrome(int res) {
    string s="";
    while(res) {
        s+=(char)(res%10+'0');
        res/=10;
    }
    string re=s;
    reverse(s.begin(),s.end());
    if(s.compare(re)==0) {
        return true;
    }
    return false;
}
void preprocess() {
    for(int i=1;i<N;i++) {
        dp[i]=i*i;
    }
    for(int i=1;i<N;i++) {
        dp[i]+=dp[i-1];
    }
    return;
}
int main() {
    preprocess();
    int a,b;
    scanf("%d%d",&a,&b);
    for(int i=1;i<N;i++) {
        for(int j=i-1;j>0;j--) {
            ll res=dp[i]-dp[j-1];
            if(res>=1ll*a&&res<=1ll*b&&isPalindrome(res)==true) {
                m[res]=1;
            }
        }
    }
    ll ans=0;
    map<ll,int>:: iterator it;
    for(it=m.begin();it!=m.end();it++) {
        ans+=it->first;
    }
    printf("%lld",ans);
    return 0;
}
