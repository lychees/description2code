#include <stack>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <climits>
#include <iostream>
#include <vector>
#include <map>
#include <list>
#include <queue>
#include <algorithm>
#include <limits>
#include <bitset>
using namespace std;

//Shorthands
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<vi> vvi;
typedef vector<ii> vii;
typedef long long ll;
typedef vector<ll> vll;
#define sd(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define For(i, j, k) for (int i = j; i <= k; i++)
#define Ford(i, j, k) for (int i = j; i >= k; i--)
#define sz(a) int((a).size())
#define rsz resize
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define abs(x) (((x) > 0) ? (x) : (-(x)))
#define mp make_pair

//Debug
#define trace(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define track(a) cerr << #a << ": "; for (auto tmp: a) cerr << tmp << " "; cerr << endl;
#define trackp(a) cerr << #a << ": "; for (auto tmp: a) cerr << "(" << tmp.first << ", " << tmp.second << "), "; cerr << endl;

//Constants
#define MOD 1000000007
//#define MAX 15

//General Purpose Routines;
vector<bool> isprime;
vector<int> primes;
void sieve(int n)
{
    isprime.resize(n + 1);
    for (int i = 0; i <= n; i++)
        isprime[i] = 1;
    isprime[1] = 0, isprime[2] = 1;
    for (int i = 2; i * i <= n; i++)
        if (isprime[i])
            for (int j = 2; i * j < n; j++)
                    isprime[i * j] = 0;
    for (int i = 2; i < n; i++)
        if (isprime[i])
            primes.push_back(i);
    return;
}

long long pow(long long n, long long m)
{
    if(m==0) return 1;
    long long x=pow(n,m/2);
    if(m%2==0) return (x*x)%MOD;
    else return (((x*x)%MOD)*n)%MOD;
}
//Input Output Routines
#define breakpoint {cerr << "\n----------Ok!!! Fine Till Here----------\n";}

void input()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    #endif // ONLINE_JUDGE
}

void output()
{
    #ifndef ONLINE_JUDGE
    freopen("output.txt", "w", stdout);
    #endif // ONLINE_JUDGE
}

#define MAX 200005

vector<vector<int> > G;
vector<bool> is;
vector<int> color;
ll fact[100005];

int dfs(int u, int col) {
    is[u] = 1;
    int members = 1;
    for (int i = 0; i < G[u].size(); i++) {
        if (!is[G[u][i]]) {
            members += dfs(G[u][i], col);
        }
    }
    return members;
}

void initfact(long long fact[])
{
     int i;
     fact[0]=1;
     for(i=1;i<=100003;i++)
            fact[i] = i*fact[i-1]%MOD;
}


int main()
{
    initfact(fact);
    int n;
    cin >> n;
    int k;
    cin >> k;
    is.resize(n);
    G.resize(n);
    while (k--) {
        int a, b;
        cin >> a >> b;
        G[a].pb(b);
        G[b].pb(a);

    }

    ll ways = 1;
    int col = 0;
    for (int i = 0; i < n; i++) {
        if (!is[i]) {
                int members = dfs(i, col);
                ways *= fact[members];
                ways %= MOD;
        }
    }
    cout << ways << endl;
}
