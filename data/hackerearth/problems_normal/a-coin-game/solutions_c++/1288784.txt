#include <iostream>
#include <cmath>
#include <set>
#include <iomanip>
#include <cstdio>
#include <vector>
using namespace std;

int gr[1010][1010];
vector<int> num;
bool win[1010][1010];

string solve()
{
    int n1, n2;
    cin >> n1 >> n2;
    if(n1 + n2 == 0)
        return "Don't Play";
    if(n1 < n2)
        swap(n1, n2);

    int idx = lower_bound(num.begin(), num.end(), n2) - num.begin();

    if(idx < num.size() and num[idx] == n2 and idx + 1 + n2 == n1)
        return "Don't Play";
    return "Play";
}

void peek()
{
    for(int i = 0; i < 1010; i++)
        for(int j = 0; j < 1010; j++) {

            for(int k = 1; k <= min(i, j); k++)
                if(not win[i - k][j - k])
                    win[i][j] = true;

            for(int k = 1; k <= i; k++)
                if(not win[i - k][j])
                    win[i][j] = true;

            for(int k = 1; k <= j; k++)
                if(not win[i][j - k])
                    win[i][j] = true;

            if(not win[i][j] and i < j)
                cout << i << " " << j << " " << j - i << endl;
        }

    for(int i = 0; i < 10; i++) {
        for(int j = 0; j < 10; j++) 
            cout << win[i][j];
        cout << endl;
    }
}

int f(int n)
{
    double rt = (1 + sqrt(5)) / 2.0;
    return (int)floor(n * rt);
}

void init()
{
    for(int i = 1; f(i) < 1e6; i++)
        num.push_back(f(i));
}

int main()
{
    init();
    int t;
    cin.sync_with_stdio(false);
    cin >> t;
    while(t-- > 0)
        cout << solve() << "\n";
    return 0;
}

