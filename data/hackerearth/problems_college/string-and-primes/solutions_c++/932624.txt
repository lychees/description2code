#include <stack>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <climits>
#include <iostream>
#include <vector>
#include <map>
#include <list>
#include <queue>
#include <algorithm>
#include <limits>
#include <bitset>
using namespace std;

//Shorthands
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<vi> vvi;
typedef vector<ii> vii;
typedef long long ll;
typedef vector<ll> vll;
#define sd(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define For(i, j, k) for (int i = j; i <= k; i++)
#define Ford(i, j, k) for (int i = j; i >= k; i--)
#define sz(a) int((a).size())
#define rsz resize
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define abs(x) (((x) > 0) ? (x) : (-(x)))
#define mp make_pair

//DEBUG
#define trace(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define track(a) cerr << #a << ": "; for (auto tmp: a) cerr << tmp << " "; cerr << endl;
#define trackp(a) cerr << #a << ": "; for (auto tmp: a) cerr << "(" << tmp.first << ", " << tmp.second << "), "; cerr << endl;

#define MOD 1000000007
#define INF 1e15

vector<bool> isprime;
vector<int> primes;
void sieve(int n)
{
	isprime.resize(n + 1);
	for (int i = 0; i <= n; i++)
		isprime[i] = 1;
	isprime[1] = 0;
	isprime[2] = 1;
	for (int i = 2; i * i <= n; i++)
		if (isprime[i])
			for (int j = 2; i * j < n; j++)
					isprime[i * j] = 0;
	return;
}



int main()
{
    sieve(256);
    int t;
    cin >> t;
    while (t--) {
        string s;
        cin >> s;
        int n = s.size();
        vector<bool> todisplay(n, true);
        bool flag = 0, flag2 = 1;
        for (int i = 0; i < n; i++) {
            if (isprime[s[i]]) {
                    todisplay[i] = false;
                    flag = 1;
            } else {
                flag2 = 0;
            }
        }
            for (int i = 0; i < n; i++) {
                if (todisplay[i]) {
                    cout << s[i];
                }
            }
        if (flag2) cout << "NULL";
        cout << endl;
    }
}
