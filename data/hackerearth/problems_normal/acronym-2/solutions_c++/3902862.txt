#include <bits/stdc++.h>

using namespace std; 

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
      cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
      const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

#define REP(i, n) for(int i=0; i<(n); i++)
#define si(x) scanf("%d",&x)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define V vector
typedef V<int> VI;
typedef long long LL;
typedef pair<int, int> PII;
 
int main() {
	ios::sync_with_stdio(false);
	int k;
	cin >> k;
	map<string, bool> mp;
	while(k -- ) {
		string s; cin >> s;
		mp[s] = true;
	}	
	string s;
	bool started = false;
	string res = "";
	getchar();
	while(cin >> s) {
		if(mp[s]) continue;
		if(started) {
			res += ".";
		}
		if(s[0] >= 'a' and s[0] <= 'z') {
			started = true;
			res += (char) (s[0] + 'A' - 'a');
		}
	}
	cout << res << endl;
	return 0;
}