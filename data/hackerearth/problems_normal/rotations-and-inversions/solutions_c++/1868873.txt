/*

*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-9
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256

using namespace std;

long long tests,n;
map<long long, long long> mapp;
vector<long long> v;
long long ar[1<<20];
long long bst,bp,t[1<<20];
long long cnt;
long long pw[1<<20],S[1<<20];

int sum (int r)
{
	int result = 0;
	for (; r >= 0; r = (r & (r+1)) - 1)
		result += t[r];
	return result;
}

void inc (int i, int delta)
{
	for (; i <=cnt; i = (i | (i+1)))
		t[i] += delta;
}

int sum (int l, int r)
{
	return sum (r) - sum (l-1);
}

long long get(int l,int span)
{
	long long res=S[l+span]-S[l];
	res*=pw[200000-l];
	return res;
}

int CMP(int a,int b)
{
	int l,r;
	l=0;
	r=n;
	while (l<r)
	{
		int mid=l+r+1;
		mid/=2;
		if (get(a,mid)!=get(b,mid))
			r=mid-1;
		else l=mid;
	}
	if (l==n)return 0;
	++l;
	if (ar[a+l]<ar[b+l])return -1;
	if (ar[a+l]>ar[b+l])return 1;
	return 0;
	return (ar[a+l]<ar[b+l]);
}
int main(){
//freopen("newlines.in","r",stdin);
//freopen("newlines.out","w",stdout);
//freopen("F:/B-large.in","r",stdin);
//freopen("F:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
pw[0]=1;
for (int i=1;i<=200000;i++)
 pw[i]=pw[i-1]*1000000007;
 
for (;tests;--tests)
{
	cin>>n;
	mapp.clear();
	v.clear();
	for (int i=1;i<=n;i++)
	{
		cin>>ar[i];	
		v.push_back(ar[i]);
	}
	sort(v.begin(),v.end());
	cnt=0;
	for (int i=0;i<v.size();i++)
	{
		if (i==0||v[i]!=v[i-1])
		{
			++cnt;
			mapp[v[i]]=cnt;
		}
	}	
	for (int i=1;i<=n;i++)
	 ar[i]=mapp[ar[i]];
	/*
	for (int i=1;i<=n*2;i++)
	 cout<<ar[i]<<" ";
	cout<<endl;
	*/
	for (int i=1;i<=n;i++)
	 ar[i+n]=ar[i];
	
	for (int i=1;i<=n*2;i++)
	 S[i]=S[i-1]+pw[i]*ar[i];
	/*
	for (int i=1;i<=n*2;i++)
	{
		cout<<i<<" "<<get(i,3)<<endl;
	}
	*/
	for (int i=0;i<=cnt;i++)
	 t[i]=0;
	
	long long inv=0;
	
	for (int i=1;i<=n;i++)
	{
		int C=sum(ar[i]+1,cnt);
		inv+=C;
		inc(ar[i+n],1);
	}
	bst=inv;
	bp=0;
	for (int i=1;i<=n;i++)
	{
		int C=sum(1,ar[i]-1);
		inv-=C;
		inc(ar[i],-1);
		C=sum(ar[i+n]+1,cnt);
		inv+=C;
		inc(ar[i+n],1);
		if (inv>bst||inv==bst&&CMP(i,bp)==-1)
		{
			bst=inv;
			bp=i;
		}
//		cout<<inv<<endl;
	}
	cout<<bp<<" "<<bst<<endl;
}
//cin.get();cin.get();
return 0;}