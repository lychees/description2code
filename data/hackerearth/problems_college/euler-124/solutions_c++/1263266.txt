#include<bits/stdc++.h>
using namespace std;

const int N=100005;
bool isPrime[N];
int a[N];

struct node {
    int first;
    int second;
};

bool compare(node a,node b) {
    return a.second<b.second;
}
bool compare1(node a,node b) {
    return a.first<b.first;
}
int main() {
    vector<int>primes(N,1);
    for(int i=2;i<N;i++) {
        if(isPrime[i]==false) {
            for(int j=i;j<N;j+=i) {
                primes[j]*=i;
                isPrime[j]=true;
            }
        }
    }
    int n=100000;
    node v[n+1000];
    for(int i=1;i<=n;i++) {
        v[i].first=i;
        v[i].second=primes[i];
    }
    sort(v+1,v+n+1,compare);
    for(int i=1;i<=n;i++) {
        int j=i;
        while(i+1<=n&&v[i+1].second==v[i].second) {
            i++;
        }
        sort(v+j,v+i+1,compare1);
    }
    for(int i=1;i<=n;i++) {
        a[i]=v[i].first;
    }
    int tt;
    scanf("%d",&tt);
    while(tt--) {
        int val;
        scanf("%d",&val);
        if(val<1) {
            cout<<0<<endl;
        } else
        printf("%d\012",a[val]);
    }
    return 0;
}
