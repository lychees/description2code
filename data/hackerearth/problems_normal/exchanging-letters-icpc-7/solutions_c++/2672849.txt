#include <cstdio>
#include <algorithm>
using namespace std;

const int NMAX = 2010, MOD = 1000000007;

int N, K, T, A[NMAX], S, Fact[NMAX];

int LgPow(int N, int P)
{
    if(!P) return 1;
    if(P % 2) return (1LL * N * LgPow(N, P - 1)) % MOD;
    int X = LgPow(N, P / 2);
    return (1LL * X * X) % MOD;
}

int Comb(int N, int K)
{
    int A = Fact[N], B = (1LL * Fact[K] * Fact[N - K]) % MOD;
    return (1LL * A * LgPow(B, MOD - 2)) % MOD;
}

int main()
{
    scanf("%i %i %i", &N, &K, &T);
    for(int i = 1; i <= K; ++ i)
    {
        scanf("%i", &A[i]);
        S += A[i];
    }
    S -= T;
    S = abs(S);

    if(S > K)
    {
        printf("0\n");
        return 0;
    }

    Fact[0] = 1;
    for(int i = 1; i < NMAX; ++ i) Fact[i] = (1LL * Fact[i - 1] * i) % MOD;

    if((S + K) % 2 || (S + K) / 2 > K)
    {
        printf("0\n");
        return 0;
    }
    printf("%i\n", Comb(K, (S + K) / 2));
}
