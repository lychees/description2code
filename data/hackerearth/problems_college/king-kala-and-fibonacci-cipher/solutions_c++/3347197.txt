#include <bits/stdc++.h>
using namespace std;
 
typedef long long LL;
 
#define PII       pair<LL,LL>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
#define cin(x)	scanf("%d" , &x)
#define MOD		1000000007
#define EPS       1E-10

int freq[100001][26] = {0};
int fibo[100001] = {0};

int OCC(int l,int r,int pos)
{
	int ret = freq[r][pos];
	if(l >= 1) ret -= freq[l-1][pos];
	return ret;
}

bool cmp(const PII &A , const PII &B)
{
	return ((A.first > B.first) or (A.first == B.first && A.second < B.second));
}

void solve()
{
	int l,r;
	cin >> l >> r;
	string s;
	cin >> s;
	vector<PII> arr(26);
	for(int i = 0; i < 26; i++)
		arr[i] = mp(OCC(l,r,i) , i);
	sort(all(arr) , cmp);
	for(int i = 0; i < sz(s); i++)
	{
		int val = s[i] - 'a';
		int rep = arr[val].second;
		s[i] = (char)('a' + rep);
	}
	cout << s << "\n";
}

int main()
{
	fibo[0] = 0;
	fibo[1] = 1;
	for(int i = 2; i <= 100000; i++)
		fibo[i] = (fibo[i-1] + fibo[i-2]) % 26;
	for(int i = 0; i <= 100000; i++)
	{
		for(int j = 0; j < 26; j++)
			freq[i][j] = 0;
		freq[i][fibo[i]] = 1;
		for(int j = 0; j < 26 && i; j++)
			freq[i][j] += freq[i-1][j];
	}
	int t;
	cin >> t;
	while(t--)
		solve();
	return 0;
}