#include <bits/stdc++.h>

using namespace std;

const int MAXN = (int) 1e6 + 5;
long long mod;

long long multiply(long long a, long long b) {
    return (a*b)%mod;
    long long res = 0;
    while (b) {
        if (b & 1) {
            res = (res + a) % mod;
        }
        a = (a + a) % mod;
        b >>= 1;
    }
    return res;
}

long long modpow(long long a, long long b) {
    long long res = 1;
    while (b) {
        if (b & 1) {
            res = multiply(res, a);
        }
        a = multiply(a, a);
        b >>= 1;
    }
    return res;
}

pair<string, string> parseIt(string s) {
    string fir = "", sec = "", temp = "";
    for (int i = 0; i < s.size();) {
        if (s[i] == '*') {
            i += 2;
            fir = temp;
            temp = "";
        } else {
            temp += s[i];
            i++;
        }
    }
    sec = temp;
    assert(fir.size() >= 1 && sec.size() >= 1);
    return make_pair(fir, sec);
}

long long solve(pair<string, string> temp) {
    string fir = temp.first;
    string sec = temp.second;
    //cout << fir << " " << sec << endl;
    long long base = 0;
    for (int i = 0; i < fir.size(); i++) {
        base = multiply(base, 10);
        base = (base + fir[i] - '0') % mod;
    }
    long long res = 1;
    for (int i = 0; i < sec.size(); i++) {
        res = modpow(res, 10);
        res = multiply(res, modpow(base, sec[i] - '0'));
    }
    return res;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin >> T;
    while (T--) {
        mod=(int)1e9+7;
        string s,t;
        cin >> s>>t;
        long long ans=solve(make_pair(s,t));
        cout<<ans<<endl;
    }
    return 0;
}
