 
    #include <iostream>
    #include <cstring>
    #include <vector>
    using namespace std;
    int L[1005],R[1005],vs[1005],n,m;
    vector<int>v[1005];
    bool df(int i)
    {
        vs[i]=1;
        for(int k=0;k<v[i].size();k++)
        {
            int j=v[i][k];
            if(R[j]==-1)
            {
                R[j]=i;
                L[i]=j;
                return true;
            }
            if(vs[R[j]]==0 && df(R[j]))
            {
                R[j]=i;
                L[i]=j;
                return true;
            }
        }
        return false;
    }
    void kuhn()
    {
        int ans=0,fl=0;
        memset(L,-1,sizeof(L));
        memset(R,-1,sizeof(R));
        do
        {
            fl=0;
            memset(vs,0,sizeof(vs));
            for(int i=1;i<=n;i++)
            {
                if(L[i]==-1)
                {
                    bool pp=df(i);
                    if(pp==true) ans++,fl=1;
                }
            }
        }while(fl!=0);
        cout<<n-ans-1<<"\n";
    }
    int main()
    {
        //freopen("input.txt","r",stdin);
        //freopen("out.txt","w",stdout);
        int tt;
        cin>>tt;
        while(tt--)
        {
            for(int i=0;i<1005;i++) v[i].clear();
            cin>>n>>m;
            while(m--)
            {
                int x,y;
                cin>>x>>y;
                v[x].push_back(y);
            }
            kuhn();
        }
    }
 
