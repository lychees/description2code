#include <iostream>
#include <unordered_map> // requires c++11
#include <string>

int main()
{
    std::unordered_map<std::string, long> m;

    int num_names;
    std::cin >> num_names;

    // put names into maps
    for (int i = 0; i < num_names; i++)
    {
        std::string name;
        std::cin >> name;
        if (m.find(name) == m.end()) // if name does not exist
            m[name] = 1;
        else
            m[name]++;
    }

    // find the maximum occurence
    long occ_max = -1;
    long occ;
    for (auto it = m.begin(); it != m.end(); it++)
    {
        occ = it->second;
        if (occ > occ_max)
            occ_max = occ;

    }

    // calculate the sum of maximum occurence
    long occ_sum = 0;
    for (auto it = m.begin(); it != m.end(); it++)
    {
        if (it->second == occ_max)
            occ_sum += it->second;

    }

    std::cout << occ_sum << std::endl;

    return 0;
}