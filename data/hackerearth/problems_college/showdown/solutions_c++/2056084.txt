#include<bits/stdc++.h>
#define MOD 1000000007
#define F first
#define S second
#define pb(x) push_back(x);
#define mp(x,y) make_pair(x,y)
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d %d",&x,&y)
#define Fill(x,y) memset(x,y,sizeof(x))
#define REP(i,x,y) for(int i=x ; i<=y ; i++)
#define DREP(i,x,y) for(int i=x ; i>=y ; i--)

using namespace std;
typedef long long llong;
typedef unsigned long long ullong;
typedef pair<int,int> ipair;
int main(){

    int n,num;
    sc(n);
    vector<int> one,two;
    for(int i=1 ; i<=n; i++){
        sc(num);
        one.push_back(num);
    }
    bool mark[100];
    Fill(mark,false);
    for(int i=1 ; i<=n; i++){
        sc(num);
        two.push_back(num);
    }

    sort(one.begin(),one.end());
    sort(two.rbegin(),two.rend());
    int ans=0;
    for(int i=0 ; i<n ; i++){
        bool flag=false;
        for(int j=0; j<n ; j++){
            if(two[j]<one[i] && !mark[j]){
                mark[j]=true;
                ans+=100;
                flag=true;
                break;
            }
        }
        if(flag) continue;
        for(int j=0; j<n ; j++){
            if(two[j]==one[i] && !mark[j]){
                mark[j]=true;
                ans+=50;
                flag=true;
                break;
            }
        }
        if(flag) continue;
        for(int j=0; j<n ; j++){
            if(!mark[j]){
                mark[j]=true;
                flag=true;
                break;
            }
        }
    }

    sort(one.rbegin(),one.rend());
Fill(mark,false);
    int ans1=0;
    for(int i=0 ; i<n ; i++){
        bool flag=false;
        for(int j=0; j<n ; j++){
            if(two[j]<one[i] && !mark[j]){
                mark[j]=true;
                ans1+=100;
                flag=true;
                break;
            }
        }
        if(flag) continue;
        for(int j=0; j<n ; j++){
            if(two[j]==one[i] && !mark[j]){
                mark[j]=true;
                ans1+=50;
                flag=true;
                break;
            }
        }
        if(flag) continue;
        for(int j=0; j<n ; j++){
            if(!mark[j]){
                mark[j]=true;
                flag=true;
                break;
            }
        }
    }
    cout<<max(ans,ans1);
    return 0;
}


