/** Created By :  Rounak Patni IIIT-H
_._._._._._._._._._._._._._._._._._._._._.*/
                                   
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <stack>
#include <vector>
#include <cstring>
#include <set>
#include <map>
#include <bitset>
#include <string>
#include <queue>
using namespace std;
int MAX(long long int a, long long int b){if(a > b){return a;}else{return b;}}
int MIN(long long int a, long long int b){if(a < b){return a;}else{return b;}}
int gcd ( long long int a, long long int b ){long long int c;while ( a != 0 ) {c = a; a = b%a;  b = c;}return b;}
//long long int power(long long int  a, long long int  b) { long long int  x=1, y=a; while(b>0) { if(b%2==1) x=(x*y)%mod; y=(y*y)%mod; b=b/2;}     return x; }
int main()
{

	int n;
	scanf("%d",&n);
	string a[20];
	int i;
	for(i=0;i<n;i++)
	{
		cin >> a[i];
	}
	string ans;
	ans=a[0];
	int array[n+2];
	for(i=0;i<n;i++)
	{
		array[i]=i;
	}

	int leng=1000000;
	do
	{
		ans.clear();
		for(i=0;i<n;i++)
		{
		int flag=0;
			if(i==0)
			{
				ans=a[array[i]];
			}
			else
			{
				int j;
				int save;
					string t1;
				for(j=0;j<ans.size();j++)
				{
					t1=ans.substr(j);
					if(t1.size() <= a[array[i]].size())
					{
					string t2=a[array[i]].substr(0,t1.size());
					if(t1==t2)
					{
						flag=1;
						save=t1.size();
						break;
					}
					}

				}
				int x1=0;
				if(flag==0)
				{
					x1=0;
				}
				else
				{
					x1=t1.size();
				}

				for(j=x1;j<a[array[i]].size();j++)
				{
					ans=ans+a[array[i]][j];
				}
				

			}
			
		}
		if(leng > ans.size())
		{
			leng=ans.size();
		}
	}
		while ( std::next_permutation(array,array+n) );

	cout << leng << endl;;

	return 0;
}
