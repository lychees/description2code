#include <bits/stdc++.h>
using namespace std;

vector<int>v[1000001];
int visit[1000001];
int particular[1000001];

int dfs(int me,int id)
{
	visit[me]=1;
	particular[me]=id;
	vector<int>::iterator i;
	for(i=v[me].begin();i!=v[me].end();i++)
	{
		if(visit[*i]==0)
		{
			dfs(*i,id);
		}
	}
	return 0;
}

int main()
{
    int t,n,k,a,b,i,j,x,y,flag=0;
    string s;
    scanf("%d",&t);
    while(t--)
    {
    	flag=0;
    	scanf("%d%d",&n,&k);
    	vector< pair<int,int> >p;
    	for(i=0;i<n;i++)
    	{
    		visit[i]=0;
    	}
    	for(i=0;i<n;i++)
    	{
    		v[i].clear();
    	}
    	for(i=0;i<k;i++)
    	{
    		scanf("%d",&a);
    		cin>>s;
    		scanf("%d",&b);
    		a--;
    		b--;
    		
    		if(s=="=")
    		{
    			v[a].push_back(b);
    		    v[b].push_back(a);
    		}
    		else
    		{
    			p.push_back(make_pair(a,b));
    		}
    	}
    	
    	for(i=0;i<n;i++)
    	{
    		if(visit[i]==0)
    		{
    		dfs(i,i);
    		}
    	}
    	n=p.size();
    	for(i=0;i<n;i++)
    	{
    		x=p[i].first;
    		y=p[i].second;
    		if(particular[x]==particular[y])
    		{
    			flag=1;
    		}
    	}
    	if(flag==1)
    	{
    		printf("NO\n");
    	}
    	else
    	{
    		printf("YES\n");
    	}
    }
    return 0;
}
