/*Program created by Shantanu Tripathi(SHAAN)
   IPG_2014079
   ABV-IIITM,Gwalior */
#include<bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef vector<long long> vll;
typedef vector<bool> vb;
typedef vector<vi > matrix;
typedef pair<int ,int> pi;
typedef pair<long long,long long> pll;
typedef vector<pi > vpi;
typedef vector<pll > vpll;
#define _ ios::sync_with_stdio(false); cin.tie(0);
#define T() int t; cin>>t; while(t--)
#define f0(i,n) for(int i=0;i<n;i++)
#define f1(i,n) for(int i=1;i<=n;i++)
#define fk(i,k,n) for(int i=k;i<=n;i++)
#define fr(i,r,n) for(int i=r;i>=n;i--)
#define ll long long
#define ri(n) int n; cin>>n;
#define ri2(x,y) int x,y; cin>>x>>y;
#define ri3(x,y,z) int x,y,z; cin>>x>>y>>z;
#define max(a,b) (((a)>(b))?(a):(b))
#define min(a,b) (((a)<(b))?(a):(b))
#define max3(a,b,c) ((max(a,b)>(c))?max(a,b):c)
#define min3(a,b,c) ((min(a,b)<(c))?min(a,b):c)
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define apresent(c,x) (find(all(c),x) != (c).end())
#define F first
#define S second
#define MOD 1000000007
#define MAX 1000007
#define SQ 1000
#define isprime(n) !(flag[n>>6]&(1<<((n>>1)&31)))         
#define setcomposite(n) (flag[n>>6]|=(1<<((n>>1)&31)))  
int small[MAX+1];
unsigned flag[MAX>>6]={0};
void sieve() { int i,j; for(i=3;i<=SQ;i+=2) if(isprime(i)) for(j=i*i;j<=MAX;j+=(i+i)) setcomposite(j);  }
void smallprime(){int i,j; small[0]=small[1]=0;for(i=2;i<=MAX;i++) small[i]=(i&1)?i:2;for(i=3;i<=SQ;i+=2) if(small[i]==i) for(j=i<<1;j<=MAX;j+=i) if(small[j]==j) small[j]=i;}
void fact(ll n){ll temp=small[n],prod=1,count=0;while(n>1) {if(temp==small[n])count++;else{cout<<temp<<"^"<<count<<" ";prod*=(count+1);temp=small[n];count=1;}n/=small[n];}cout<<temp<<"^"<<count<<" "<<endl;prod*=(count+1);}   
inline bool ispalin(string s) { for(int i=0,j=s.size()-1;i<=j;i++,j--) if(s[i]!=s[j]) return false; return true; }
inline bool ispalin(vi s) { for(int i=0,j=s.size()-1;i<=j;i++,j--) if(s[i]!=s[j]) return false; return true; }
inline ll gcd(ll a,ll b) {  return ((b==0)?a:gcd(b,a%b)); }
inline ll modexp(ll a,ll b,ll m) { ll d=1; while(b>0) { if(b&1) d=(d*a)%m; a=(a*a)%m; b=b>>1; } return (d<0?d+m:d); }
inline bool isPrime(ll x) { for(ll a = 2; a * a <= x; ++a) if(x % a == 0) return false; return true; }
inline ll powf(ll a,ll b) { ll d=1; while(b>0) { if(b&1) d=d*a; a=(a*a); b=b>>1; } return d;}
inline int digsum(ll n){ int sum = 0; while(n>0){ sum += n%10 ; n /=10; } return sum; }
ll ncr(long n ,long r){vector<vector<long> > dp(2,vector<long>(r+1,0)); f1(i,n) fk(j,0,min(i,r)) dp[i&1][j] = ((i==j || j==0)?1:(dp[(i-1)&1][j] + dp[(i-1)&1][j-1])%MOD); return dp[n&1][r]; }
ll ncr2(long n, long r) { ll ans=1; for(long i = n;i>r;i--) ans = (ans*i)%MOD;  f1(i,n-r) ans = (ans*(modexp(i,MOD-2,MOD)))%MOD;  return ans; }
ll phi(ll n){ ll ret=n; ll i = 2; if(n%i==0){ ret-=ret/i; while(n%i==0)n/=i;} for(i=3; i*i<=n; i++)if(n%i==0){ ret-=ret/i; while(n%i==0)n/=i;} if(n>1)ret-=ret/n;return ret;}
ll phi2(ll n){if(n==1)return 1; ll temp=small[n], count=n; while(n>1){if(temp!=small[n]){ count -= count/temp; temp = small[n];} n /= small[n]; }count -= count/temp; return count;}
//******************************* Code begins**********************//

ll countsubseq(int *a, int n)
{
	ll ** count;
	count = new ll*[n+1];
	f1(i,n) count[i] = new ll[105];
	f1(i,n) count[i][a[i]] = 1;
	fk(i,2,n) 
	{
		fr(j,i-1,1)
		{
			if(a[j] < a[i])
			{
				f1(k,100)
				{
					int g = gcd(k,a[i]);
				    count[i][g] += count[j][k];
				    if(count[i][g] > MOD) count[i][g] -= MOD;
				}
			}
		}
		
	}
	ll sum = 0;
	f1(i,n)
	{
	sum += count[i][1];
	if(sum > MOD) sum -= MOD;
    }
	return sum;
	}
int main()
{
	_
    ri(n)
    int *a;
    a = new int[n+1];
    f1(i,n) cin>>a[i];
    cout<<countsubseq(a,n)<<endl;
	return 0;
}





