#include<bits/stdc++.h>
using namespace std;
#define ull unsigned long long int
#define ll long long int
#define MAX 10000005
#define MOD 1000000007
long long mult(long long a, long long b, long long mod)
{
	__int128 res = a;
	res *= b;
	res %= mod;
	a = res;
	return a;
}
long long modulo(long long a, long long b, long long c){
	long long x = 1, y = a; 
	while (b > 0){
		if (b % 2 == 1){
			x = mult(x, y, c);
		}
		y = mult(y, y, c);
		b /= 2;
	}
	return x%c;
}
bool Miller(long long p, int iteration){
	if (p<2){
		return false;
	}
	if (p != 2 && p % 2 == 0){
		return false;
	}
	long long s = p - 1;
	while (s % 2 == 0){
		s /= 2;
	}
	for (int i = 0; i<iteration; i++){
		long long a = rand() % (p - 1) + 1, temp = s;
		long long mod = modulo(a, temp, p);
		while (temp != p - 1 && mod != 1 && mod != p - 1){
			mod = mult(mod, mod, p);
			temp *= 2;
		}
		if (mod != p - 1 && temp % 2 == 0){
			return false;
		}
	}
	return true;
}
bool divs(ll n)
{
	ll i,j;
	ll tmp;
	ll res=1;
	ll cnt;
	tmp=sqrt(n);
	if(tmp*tmp == n) return true;
	else return false;
}
int main()
{
    ll n,q;
    cin>>n>>q;
    ll i,d,k;
    d=0;
    ll a,b;
    unsigned long long ppl=0;
    
    ll tmp;
    ll cnt=1;
    ll curr=1;
    for(i=0;i<q;++i)
    {
    	//cin>>tmp>>a>>b;
    	scanf("%lld %lld %lld",&tmp,&a,&b);
    	if(tmp==1)
    	{
    		if(Miller(a+b,20)) 
    		{
    			ppl+=b;
    			d=(d+abs(curr-a))%MOD;
    			curr=a;
    			
    		}
    	}
    	else
    	{
    		if(divs(a+b))
    		{
    			ppl-=b;
    			d=(d+abs(curr-a))%MOD;
    			curr=a;
    		}
    	}
    }
    printf("%lld %llu\n",(d+MOD)%MOD,ppl);
    return 0;
}
