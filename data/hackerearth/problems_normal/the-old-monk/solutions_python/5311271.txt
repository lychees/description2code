def bisect(a, x, lo=0, hi=None):
    if lo < 0:
        raise ValueError('lo must be non-negative')
    if hi is None:
        hi = len(a)
    while lo < hi:
        mid = (lo+hi)//2
        if x > a[mid]: hi = mid
        else: lo = mid+1
    return lo

def solve(a, b):
    res = 0
    for i in range(len(a)):
        test = bisect(b, a[i])
        if test != ValueError:
            test -= 1
            if i<=test and a[i]<=b[test] and res <= test - i:
                res = test - i
    return res

if __name__ == '__main__':
    for _ in range(int(raw_input())):
        n = int(raw_input())
        a = map(int, raw_input().split())
        b = map(int, raw_input().split())
        print solve(a,b)