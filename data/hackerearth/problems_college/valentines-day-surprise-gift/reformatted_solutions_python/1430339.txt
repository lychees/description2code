from fractions import gcd
import math
sol = [1, 1, 1, 3, 3, 15, 15, 105, 105, 105, 105]


def R(n):
    if n <= (len(sol)-1) and sol[n] != 0:
        return sol[n]
    else:
        diff = n-len(sol)+1
        for i in range(diff+1):
            sol.append(0)
        ans = (2**int(math.ceil(n/4.0))) * \
            R(int(math.ceil(n/5.0)))*R(int(math.ceil(n/10.0)))
        ans = ans % (10**9+7)
        sol[n] = ans
        return sol[n]


def Max(n):
    k2 = Exp(n, n)
    maximum = 0
    for i in range(1, 6):
        for j in range(1, 6):
            if gcd(i, j) == 1:
                a = i*n
                b = j*n
                x = Exp(i, b)*Exp(k2, j)
                x = x % (10**9+7)
                if x > maximum:
                    maximum = x

            else:
                continue
    return maximum


def Exp(a, b):
    c = 10**9+7
    if b == 0:
        return 1
    elif b == 1:
        return a % c
    else:
        x = Exp(a, b/2)
        y = Exp(a, b-b/2)
        return (x*y) % c


inp = int(raw_input())
for i in range(inp):
    a = int(raw_input())
    a = R(a)
    a = Max(a)
    print a
