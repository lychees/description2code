//============================================================================
// Name        : shortcut_iterators.cpp
// Author      :
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include<string.h>
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<limits.h>
#include<algorithm>
#include<vector>
#include<list>
#include<bitset>
#include<utility>
#include<set>
#include<map>
#include<assert.h>
#include<stack>

#define ss(str) scanf("%s",str);
#define ps(str) printf("%s\n",str);
#define pi(n) printf("%d\n",n);
#define si(n) scanf("%d",&n);
#define sf(n) scanf("%lf",&n);
#define pf(n) printf("%lf\n",n);

#define ll long long
#define pl(n) printf("%lld\n",n);
#define pl2(n,m) printf("%lld %lld\n",n,m);
#define sl(n) scanf("%lld",&n);
#define sl2(n,m) scanf("%lld %lld",&n,&m);

#define FOR(i,n) for(i=0;i<n;i++)
#define FORE(i,a,b) for(i=a;i<b;i++)
#define PL pair<ll,ll>
#define MAX 100002
#define INF LLONG_MAX
using namespace std;
int main() {

	std::map<std::string, ll > mape;
	std::map<std::string, ll >::iterator it;
	bitset<MAX> bitmap;
	string str, ttr;
	ll i, n, count = 0;
	sl(n);
	ll p = (1 << n) - 1;
	bitmap.set();

	FOR(i,p)
	{
		cin >> str >> ttr;
		it = mape.find(str);
		ll key1;
		if (it == mape.end()) {
			mape.insert(make_pair(str, count));
			key1 = count++;
		} else
			key1 = it->second;

		it = mape.find(ttr);
		ll key2;
		if (it == mape.end()) {
			mape.insert(make_pair(ttr, count));
			key2 = count++;
		} else
			key2 = it->second;

		bitmap.reset(key2);
	}

	ll w_index = bitmap._Find_first();
	for (it = mape.begin(); it != mape.end(); it++) {
		if (it->second == w_index) {
			cout<<it->first;
			break;
		}
	}

}
