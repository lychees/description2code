#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
#define pb push_back
#define mp make_pair
#define sz size()
#define fr first
#define sc second
#define ln length()
#define forr(i,a,b)                 for(int i=a;i<b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()    
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
#define MAX 1000

string arr[MAX];
int mrk[MAX];
int cnt[MAX];
queue<int> Q;
int pos[MAX];
vector<int> m[MAX];
void bfs(){
	while(!Q.empty()){
		int node = Q.front();
		Q.pop();
		for(int i=0;i<m[node].sz;i++){
			int node2 = m[node][i];
			pos[node2] = max(pos[node2] , pos[node]+1);
			Q.push(node2);
		}
	}
	return;
}
int main(){
	int n;
	cin>>n;
	rep(i,n){
		cin>>arr[i];
		rep(j,arr[i].ln)
			mrk[arr[i][j] - 'a'] = 1;
	}
	rep(i,n-1){
		string s1 =arr[i];
		string s2 = arr[i+1];
		int l1 = s1.ln;
		int l2 = s2.ln;
		for(int i=0;i<min(l1,l2);i++){
			if(s1[i] != s2[i]){
				m[s1[i]-'a'].pb(s2[i]-'a');
				cnt[s2[i] - 'a']++;
				break;
			}
		}
	}
	for(int i=0;i<26;i++){
		if(mrk[i] and (cnt[i] == 0))
			Q.push(i);
	}
	bfs();
	bool b = true;
	for(int k=0;k<26;k++){
		b = true;
		for(int i = 0 ; i<26;i++){
			if(pos[i] ==k and mrk[i]){
				cout<<char(i+97);
				b = false;
			}
		}
		if(!b)
			cout<<endl;
	}
	cout<<endl;
	return 0;
}



