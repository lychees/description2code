#include <algorithm>
#include <cassert>
//#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <climits>
#include <vector>
#include <math.h>

#define abS(x)                  ((x)<0?-(x):(x))
#define error(x)                cout << #x << " : " << (x) << endl
#define fill(a,v)               memset(a,v,sizeof a)
#define FOR(i,a,b)              for(int i=a;i<b;i++)
#define FORs(i,a,b)             for(int i=a;i>=b;i--)
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
#define mP                      make_pair
#define p(n)                        printf("%d",n)
#define pB                      push_back
#define pc(n)                       printf("%c",n)
#define pf(n)                       printf("%lf",n)
#define pll(n)                       printf("%lld",n)
#define ps(n)                       printf("%s",n)
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sf(n)                       scanf("%lf",&n)
#define sll(n)                       scanf("%lld",&n)
#define ss(n)                       scanf("%s",n)
using namespace std;
int arr[100 + 5];
bool findPartiion (int n)
{
    int sum = 0;
    int i, j;
   
 
    for (i = 0; i < n; i++)
      sum += arr[i];
     
    if (sum%2 != 0) 
       return false;
   
    bool part[sum/2+100][n+1];
     
   
    for (i = 0; i <= n; i++)
      part[0][i] = true;
       
    
    for (i = 1; i <= sum/2; i++)
      part[i][0] = false;    
      
     
     for (i = 1; i <= sum/2; i++) 
     {
       for (j = 1; j <= n; j++) 
       {
         part[i][j] = part[i][j-1];
         if (i >= arr[j-1])
           part[i][j] = part[i][j] || part[i - arr[j-1]][j-1];
       }       
     }   
      
    
     return part[sum/2][n];
}    
 
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int n;
        cin>>n;

        for (int i = 0; i < n; ++i)
        {
         cin>>arr[i];   /* code */
        }
  if (findPartiion(n) == true)
     cout<<"YES"<<endl;
  else
    cout<<"NO"<<endl;
    }
  return 0;
}
