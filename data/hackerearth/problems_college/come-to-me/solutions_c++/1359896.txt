#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cctype>
#include <utility>
#include <queue>
#include <cmath>
using namespace std;

#define MX 10005

int n;
int cnt[30];
char s[MX];

bool can(int m) {
	if (m > n) return false;
	memset(cnt, 0, sizeof cnt);
	int i, j, k, flg;
	for (flg = i = 0; i < m; i++) {
		j = s[i] - 'A';
		cnt[j]++;
		if (cnt[j] == 1) flg++;
	}
	if (flg == m) return true;
	for (i = m; i < n; i++) {
		j = s[i] - 'A', k = s[i - m] - 'A';
		if (j != k) {
			cnt[j]++, cnt[k]--;
			if (cnt[j] == 1) flg++;
			if (cnt[k] == 0) flg--;
		}
		if (flg == m) return true;
	}
	return false;
}

int main() {
	int T, st, en, md;
	for (scanf("%d", &T); T--; ) {
		scanf("%s", s);
		n = strlen(s);
		st = 1, en = n + 1;
		while (en - st > 1) {
			md = (st + en) >> 1;
			if (can(md)) st = md;
			else en = md;
		}
		printf("%d\n", st);
	}
	return 0;
}
