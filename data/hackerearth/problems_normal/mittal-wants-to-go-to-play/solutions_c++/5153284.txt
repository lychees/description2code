#include<bits/stdc++.h>
using namespace std;
long long v,e,i,a,b,c;
	long long q,aam,pic,tar;
    long long dist[1000000],t;
    bool visit[1000000];
    vector<pair<long long,long long> > adj[1000000];
void dijekastra(long long src)
{
    priority_queue< pair<long long,long long>, vector <pair<long long,long long> > , greater<pair<long long,long long> > > pq;
 
    pq.push(make_pair(0, src));
    dist[src] = 0;
    while (!pq.empty())
    {
        long long u = pq.top().second;
        pq.pop();
 
       // list< pair<long long, long long> >::iterator i;
        for (i =0; i<adj[u].size(); i++)
        {
            long long v = adj[u][i].first;
            long long weight = adj[u][i].second;
            if (dist[v] > dist[u] + weight)
            {
                
                dist[v] = dist[u] + weight;
                pq.push(make_pair(dist[v], v));
            }
        }
    }
 
}
 
int main(){
	scanf("%lld",&t);
	while(t--){
	scanf("%lld %lld",&v,&e);
	for(i=1;i<=v;i++){
		dist[i]=1e15;
		adj[i].clear();
	}
	for(i=1;i<=e;i++){
		scanf("%lld %lld %lld",&a,&b,&c);
		adj[a].push_back(make_pair(b,c));
		adj[b].push_back(make_pair(a,c));
	}
	dijekastra(1);
 
	scanf("%lld",&q);
	while(q--){
		scanf("%lld %lld",&pic,&tar);
		aam=dist[pic]*2;
	//	cout<<dist[pic]<<endl;
		aam=tar-aam;
		if(aam<0)aam=0;
		cout<<aam<<endl;
	}
}}
