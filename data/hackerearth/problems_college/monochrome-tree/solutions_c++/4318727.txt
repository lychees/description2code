#include<bits/stdc++.h>
using namespace std;
vector<int>g[100*1000+8];
int colr1[100*1000+8];
int colr2[100*1000+8];
int crct[100*1000+8];
int wrng[100*1000+8];
void dfs(int curr,int p)
{
    int c=0,w=0;
    bool flag=false;
    for(int i=0;i<(int)g[curr].size();++i)
    {
        if(g[curr][i]!=p)
        {
            flag=true;
            dfs(g[curr][i],curr);
            c+=crct[g[curr][i]];
            w+=wrng[g[curr][i]];
        }
    }
    if(flag==false)//leaf
    {
        if(colr1[curr]==colr2[curr])
        {
            crct[curr]=0;
            wrng[curr]=1;
        }
        else {
            crct[curr]=1;
            wrng[curr]=0;
        }
        return ;
    }
    if(colr1[curr]==colr2[curr])
    {
        crct[curr]=min(c,2+w);
        wrng[curr]=min(1+c,w+1);
    }
    else 
    {
        crct[curr]=min(1+c,w+1);
        wrng[curr]=min(c+2,w);
    }
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n-1;++i)
    {
        int u,v;scanf("%d %d",&u,&v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    for(int i=1;i<=n;++i)
        scanf("%d",&colr1[i]);
    for(int i=1;i<=n;++i)
        scanf("%d",&colr2[i]);
     dfs(1,0);
    printf("%d\n",crct[1]);
    return 0;
}
