#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
struct _ { ios_base::Init i; _() { cin.sync_with_stdio(0); cin.tie(0); } } _;

#define read(x) freopen(x,"r",stdin)
#define write(x) freopen(x,"w",stdout)
#define REP(i,n) for(ll i=0;i<(n);i++)
#define FOR(i,a,b) for(ll i=(a);i<=(b);i++)
#define FORD(i,a,b) for(ll i=(a);i>=(b);i--)
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define ins insert

typedef pair<int,int> pii;
typedef vector<ll> vi;
typedef vector<pii> vpii;
ll const sz=(ll)1e5+10;
ll arr[sz],size[sz],n,k;
list<ll> l;
ll root(ll i)
{
	while(arr[i]!=i)
	{
		arr[ i ] = arr[ arr[ i ] ] ; 
		i=arr[i];
	}
	return i;
}

bool find(ll a,ll b)
{
	if(root(a)==root(b))
		return true;
	else
		return false;
}

void merge(ll a,ll b)
{
	ll root_A=root(a);
	ll root_B=root(b);
	/*if(size[root_A] < size[root_B ])
    {
		arr[ root_A ] = arr[root_B];
		size[root_B] += size[root_A];
	}
    else
    {
		arr[ root_B ] = arr[root_A];
		size[root_A] += size[root_B];
	}*/
	if(root_A != root_B)
		arr[root_A]=root_B;
}

void initialize()
{
	for(ll i=0; i<n;i++)
		arr[i]=i,size[i]=1;
}

int main()
{
	ll a,b,i,j;  
	cin>>n;
	initialize();
	cin>>k;
	while(k--)
	{
		//list<ll> l;
		cin>>a>>b;
		a--;
		b--;
		merge(a,b);
	}  
	set<ll> l;
	for(i=0;i<n;i++)
		l.insert(root(i));
	cout<<l.size()<<endl;
    return 0;
}