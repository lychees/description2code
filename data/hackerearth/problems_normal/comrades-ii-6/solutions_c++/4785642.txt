#include <iostream>
#include <vector>
using namespace std;
vector <int> l[100000];
int h[100000] = {0};

void getAllHeights(int current,int currentHeight)
{
	h[current] = currentHeight;
	vector <int> :: iterator it;
	it = l[current].begin();
	while(it != l[current].end())
	{
		getAllHeights(*it, currentHeight + 1);
		it++;
	}
	return;
	
}

int main()
{
    long int t,n;
    cin>>t;
    while(t--)
    {
    	cin>>n;
    	int i = 1,root;
    	long long int sumAllHeights = 0;
    	while(i <= n)
    	{
    		int parent;
    		cin>>parent;
    		if(parent == 0)
    			root = i;
    		else
    		l[parent].push_back(i);
    		i++;
    	}
    	getAllHeights(root,0);
    	for(i = 1 ;i <= n; i++)
    	 sumAllHeights = sumAllHeights + h[i];
    	
    	long long int total = (n*(n-1))/2;
    	cout<<sumAllHeights<<" "<<total-sumAllHeights<<endl;
    	
    	for(i = 1 ; i <= n ; i++)
    	{
    		l[i].clear();
    		h[i] = 0;
    	}
    	sumAllHeights = 0;
    	total = 0;
    }
    return 0;
}
