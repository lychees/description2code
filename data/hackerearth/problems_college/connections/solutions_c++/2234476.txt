#include<bits/stdc++.h>

using namespace std;


vector<int> v[100005];
int vis[100005];

long long  conn = 0;

void dfs(int start)
{
	vis[start] = 1;
	for(int i = 0;i<v[start].size(); i++)
	{
		if(!vis[v[start][i]])
		{
			dfs(v[start][i]);
		}
	}
	
	return;
}
int main()
{
	int n,m,i,q;
	
	
	cin >> n >> m;
	
	for(i=0;i<n+1;i++)
	{
		v[i].clear();
		
	}
	
	while(m--)
	{
		int a,b;
		cin >> a >> b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	
	long long ans = 1;
	long long num = 1;
	
	cin >> q;
	
	while(q--)
	{
		fill(vis,vis+n,0);
		int s,e;
		cin >> s >> e;
		
		int flag = 0;
		for(i = 0;i<v[s].size();i++)
		{
			if(v[s][i] == e)
			{
				flag = 1;
			}
		}
		
		if(flag == 1)
		{
			cout << "Direct Connection" << endl;
		}
		else
		{
			dfs(s);
			if(vis[e] == 1)
			{
				cout << "Indirect Connection" << endl;
			}
			else
			{
				cout << "No Connection" << endl;
			}
			
		}
		
				
	}
	return 0;
}
	