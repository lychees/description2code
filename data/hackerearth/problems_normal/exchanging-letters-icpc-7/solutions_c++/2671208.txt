#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<cmath>
#define pb push_back
#define mp make_pair
using namespace std;
#define INF 1000000007
long long fact[200010],inv[200010];
long long C(long long n,long long r){
    //cout<<n<<" "<<r<<" "<<n-r<<endl;
    //cout<<fact[n]<<" "<<inv[r]<<" "<<inv[n-r]<<endl;
    return (((fact[n]*inv[r])%INF)*inv[n-r])%INF;   
}
long long modpow(long long a,long long b,long long c){
    long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%c;
}
int main(){
	std::ios::sync_with_stdio(false);
    int n,k,t,z=0;
    cin>>n>>k>>t;
    int arr[k];
    fact[0]=1;
    fact[1]=1;
    for(int i=2;i<=200000;i++){
        fact[i]=fact[i-1]*i;
        if(fact[i]>=INF)
            fact[i]%=INF;
    }
    for(int i=0;i<=200000;i++){
        inv[i]=modpow(fact[i],INF-2,INF);
    }
    for(int i=0;i<k;i++){
    	cin>>arr[i];
    	z+=arr[i];
    }
    t=abs(t-z);
    if((k-t)%2||(k-t<0)){
    	cout<<0;
    	return 0;
    }
    cout<<C(k,(k-t)/2);
    return 0;
}