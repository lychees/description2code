#include <iostream>
using namespace std;
int max(int a, int b) { return (a > b)? a : b; }
int fcArray[100];
int pArray[100];
int main()
{
    int T;
    cin>>T;
    while(T--)
    {
    	int N, maxM;
    	cin>>N>>maxM;
    	int maxP[N+1][maxM+1];
    	
    	for(int i=0; i<N; i++)
    	{
    		cin>>pArray[i]>>fcArray[i];
    		pArray[i] = pArray[i] - fcArray[i];
    	}
    	
    	for(int fl=0; fl<=N; fl++)
    	{
    		for(int m=0; m<maxM+1; m++ )
    		{
    			if(fl == 0 || m == 0)
    			{
    				maxP[fl][m] = 0;
    			}else if(fcArray[fl-1] <= m)
    			{
    				maxP[fl][m] = max(maxP[fl-1][m], pArray[fl-1] + maxP[fl-1][m - fcArray[fl-1]]);
    			}
    			else
    				maxP[fl][m] = maxP[fl-1][m];
    		}
    	}
    	int i=N;
    	int j=maxM;
    	int max=maxP[N][maxM];
    	while(i>=0 && j>=0)
    	{
			if(maxP[i][j-1] == max)
    			j--;
    		else if(maxP[i-1][j] == max)
    			i--;
    		else
    			break;
    	}
    	cout<<(j>=0? j: 0)<<" ";
    	cout<<maxM+maxP[N][maxM]<<"\n";
    	
    }
    return 0;
}
