#include <vector>
#include <string>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <ctype.h>
#include <bitset>
#include <assert.h>
 
using namespace std;
 
#define REP(i, n) for(int i=0; i<(n); i++)
#define FOR(i, a, b) for(int i=(a); i<(b); i++)
#define IFOR(i, a, b) for(int i=(a); i>=(b); i--)
#define FORD(i, a, b, c) for(int i=(a); i<(b); i+=(c))
 
#define SS ({int x;scanf("%d", &x);x;})
#define SI(x) ((int)x.size())
#define PB(x) push_back(x)
#define MP(a,b) make_pair(a, b)
#define SORT(a) sort(a.begin(),a.end())
#define ITER(it,a) for(typeof(a.begin()) it = a.begin(); it!=a.end(); it++)
#define ALL(a) a.begin(),a.end()
#define INF 1000000000
#define V vector
#define S string
#define FST first
#define SEC second
typedef V<int> VI;
typedef V<S> VS;
typedef long long LL;
typedef pair<int, int> PII;
int main()
 {
 	int t;
 	cin>>t;
 	while(t--)
 	 {
 	 	int n;
 	 	cin>>n;
 	 	int a[n]; 
 	    for(int i=0;i<n;i++)cin>>a[i];

  int numOfSubsets = 1 << n; int z=0;
 map<int,int> m;
  for(int i = 0; i < numOfSubsets; i++)
 {
    int pos = n - 1;
   int bitmask = i;

   //System.out.print("{");
   int ans=0;
   while(bitmask > 0)
   {
    if((bitmask & 1) == 1)
     {ans=ans+a[pos];}
    bitmask >>= 1;
    pos--;
   }
   if(m[ans]==0){z++;}
   m[ans]=1;
 }
 cout<<z<<endl;
}
 	 }
 	