#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T,typename U> ostream& operator<< ( ostream &o,pair<T,U> v ) {
    o<<"("<<v.first<<","<<v.second<<")";
    return o;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
const int MAXN=100005;
typedef vll bit;
void insert ( bit &bm, int a, int v ) {
    int end=bm.size();
//     cout<<"inserting"<<v<<" at "<<a<<endl;
    while ( a< end ) {
        bm[a]+=v;
        a+=a&(-a);

    }
}
ll get ( bit &bm, int a ) {
    ll s=0;
    while ( a>0 ) {
        s+=bm[a];
        a-=a&(-a);
    }
    return s;
}
int main() {
    ios_base::sync_with_stdio ( false );
    int n;
    cin>>n;

    vi inp ( MAXN,0 );
    int m=0;
    rep ( i,n ) {
        int tmp;
        cin>>tmp;
        inp[tmp]++;
        m=max ( tmp,m );
//         cout<<inp<<" "<<m<<endl;
    }
//     cout<<"max:"<<m<<endl;
    bit table ( MAXN );
    rep ( i,m+1 ) {
//          cout<<"xx"<<i<<" "<<inp[i]<<endl;
        if ( inp[i] )
            insert ( table,i+1,inp[i] );
//         cout<<table;
    }
//     cout<<"init done"<<endl;
    vll res;
    inrep {
        int op,x,y,z;
        cin>>op;
        if ( op==0 ) {
            cin>>x>>y;
            res.push_back ( get ( table,y+1 )-get ( table,x ) );
//             cout<<res[res.size()-1]<<endl;

        } else if ( op==1 ) {
            cin>>z;
            insert ( table,z+1,-1 );
        } else{
            cin>>z;
            insert ( table,z+1,1 );
        }

    }
    rep ( i,res.size() ) {
        cout<<res[i]<<"\n";
    }
}


