#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define inrep int t;cin>>t; while(t--)
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for (unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for (unsigned   i=0; i<v.size(); i++ )
       in>>v[i];
    return in;
}
int main() {
    ios_base::sync_with_stdio(false);
    int n, q; cin>>n>>q;
    int vals[n];
    int pizza[5]={'p','i','z','z','a'};
    rep(i,5)pizza[i]-='a'-1;
    rep(i,n)cin>>vals[i];
    while(q--){
        int x,l,r;
        cin>>x>>l>>r;
        if(x==1){
        ll su=0;
            reu(i,l-1,r)
                su+=vals[i];
        int g=1; //=__gcd<ll>(su,r-l+1);
            cout<<su/g<<"/"<<(r-l+1)/g<<'\n';
        }
        else{
        int bl=(r-l+1)/5;
        int k=l-1;
        rep(i,bl){
        rep(j,5)
            vals[k++]+=pizza[j];
            
        }   
        
        rep(i,(r-l+1)%5)vals[k++]+=pizza[i];
        }
    }
}