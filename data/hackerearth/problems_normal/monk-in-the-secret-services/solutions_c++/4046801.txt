#include<bits/stdc++.h>
using namespace std;
int n,m;
vector<pair<int,int> > v[100];
void dijkstra(int s,int dist[])
{
    for(int i=0;i<n;i++)
        dist[i]=INT_MAX;
    queue<int> q;
    q.push(s);
    dist[s]=0;
    int t;
    while(!q.empty())
    {
        t=q.front();
        q.pop();
        for(int i=0;i<v[t].size();i++)
            if(dist[v[t][i].first]==INT_MAX || dist[v[t][i].first]>dist[t]+v[t][i].second)
            {
                dist[v[t][i].first]=dist[t]+v[t][i].second;
                q.push(v[t][i].first);
            }
    }
}
int main()
{
    int tc,S,a,h,x,y,r,mx;
    int dist1[100],dist2[100],dist3[100];
    scanf("%d",&tc);
    while(tc--)
    {
        scanf("%d %d",&n,&m);
        for(int i=0;i<n;i++)
            v[i].clear();
        for(int i=0;i<m;i++)
        {
            scanf("%d %d %d",&x,&y,&r);
            v[x-1].push_back({y-1,r});
            v[y-1].push_back({x-1,r});
        }
        scanf("%d %d %d",&S,&a,&h);
        S--;a--;h--;
        dijkstra(S,dist1);
        dijkstra(a,dist2);
        dijkstra(h,dist3);
        dist1[a]=0;
        dist1[h]=0;
        dist2[S]=0;
        dist2[h]=0;
        dist3[S]=0;
        dist3[a]=0;
        mx=0;
        for(int i=0;i<n;i++)
            mx=max(mx,dist1[i]+2*dist2[i]+dist3[i]);
        printf("%d\n",mx);
    }
}
