#include<iostream>
#include<vector>
#include<string>
#include<stack>
#include<unordered_map>
#include<algorithm>
#include<list>
using namespace std;
bool compare(const string& lh, const string& rh,int& m) {
  int i;
  for (i = 0; i < lh.size() && i < rh.size() && i < m; i++) {
    if (lh[i] == rh[i]) {
      continue;
    }
    return lh[i] < rh[i];
  }

  if (i == m) {
    return false;
  }
  if (lh.size() < rh.size()) {
    return true;
  }

  return false;
}

int main() {
  int t;
  int n, k,m;
  list<string> sorted;
  cin >> t;
  while (t--) {
    sorted.clear();
    cin >> n >> k >> m;
    string tmp;
    for (int i = 0; i < n; i++) {
      cin >> tmp;
      if (sorted.empty()){
        sorted.push_back(tmp);
      }
      else {
        list<string>::iterator it = sorted.begin();
        for (; it != sorted.end(); it++) {
          if (compare(tmp, *it, m)) {
            sorted.insert(it, tmp);
            break;
          }

        }
        if (it == sorted.end()) {
          sorted.push_back(tmp);
        }

      }
    }

    list<string>::iterator it = sorted.begin();
    while ((k--)!=1) {
      it++;
    }
    cout << *it << endl;
  }

  return 0;

}