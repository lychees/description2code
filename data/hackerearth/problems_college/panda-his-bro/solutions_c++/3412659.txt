#include <iostream>
#include <stdio.h>
#include <queue>
#include <cstdio>
#include <vector>
#define MAX 100007
using namespace std;

queue <int> q;
bool visited[MAX];
vector <int> v[MAX];
int dist[MAX];

void initialize()
{
	for(int i=0;i<MAX;++i)
	{
		visited[i] = false;
	}
}

void bfs(int s)
{
	q.push(s);
	dist[s] = 0;
	while(!q.empty())
	{
		int x = q.front();
		q.pop();
		//cout << x << " visted\n";
		visited[x] = true;
		for(int i=0;i<v[x].size();++i)
		{
			if(!visited[v[x][i]])
			{
				q.push(v[x][i]);
				dist[v[x][i]] = dist[x] + 1;
			}
		}
	}
}

int main()
{
    int N;
    scanf("%d", &N);
    initialize();
    for(int i=1;i<N;++i)
    {
    	int x, y;
    	scanf("%d %d", &x, &y);
    	v[x].push_back(y);
    	v[y].push_back(x);
    }
    /*
    for(int i=1;i<=N;++i)
    {
    	cout << i << "--->";
    	for(int j=0;j<v[i].size();++j)
    	{
    		cout << v[i][j] << " ";
    	}
    	cout << endl;
    }
    */
    int max = 0;
    //for(int i=1;i<=N;++i)
    //{
    	initialize();
    	bfs(1);
    	for(int j=1;j<=N;++j)
    	{
    		if(dist[max] < dist[j])
    		{
    			max = j;
    		}
    	}
    	initialize();
    	bfs(max);
    	max = 0;
		for(int j=1;j<=N;++j)
    	{
    		if(max < dist[j])
    		{
    			max = dist[j];
    		}
    	}
    //}
    cout << max << endl;
    return 0;
}
