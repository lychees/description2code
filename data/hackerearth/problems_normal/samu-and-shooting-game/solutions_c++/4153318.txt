#include <bits/stdc++.h>
using namespace std;
typedef pair<double, int> PFI;

int x, y, n, w;
double p1, p2;

vector<vector<double>> dp;

void initialize()
{
	vector<double> temp(w + 2, -1);
	dp.clear();
	dp.resize(n + 2, temp);
}

double solve(int id, int points)
{
	if (id == n or points >= w)
	{
		return (points >= w);
	}

	if (dp[id][points] != -1)
		return dp[id][points];

	double ans1 = p1 * solve(id + 1, points + x) + (1 - p1) * solve(id + 1, points);
	double ans2 = p2 * solve(id + 1, points + y) + (1 - p2) * solve(id + 1, points);

	return dp[id][points] = ans1 > ans2 ? ans1 : ans2;
}


int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		cin >> x >> y >> n >> w >> p1 >> p2;
		p1 = p1 / 100.0; p2 = p2 / 100.0;

		initialize();

		double prob = solve(0, 0);

		prob *= 100;
		printf("%6f\n", prob);
	}

	system("pause");
	return 0;
}
