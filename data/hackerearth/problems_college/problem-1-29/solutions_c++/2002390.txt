#include <bits/stdc++.h>
using namespace std;
int h[100][100];
int bfs(int a[][100],int n)
{
    queue<pair<int,int>> q;
    pair<int,int> p;
    int i;
    int j;
    int x;
    int y;
    q.push(make_pair(0,0));
    h[0][0] = 1;

    while(!q.empty()) {
        p = q.front();
        if(p.first == n-1 && p.second == n-1) {
            return 1;
        }
        q.pop();
        x = p.first;
        y = p.second;
        if(y+1 < n) {
            if(h[x][y+1] == 0 && a[x][y+1] == 1) {
                h[x][y+1] = 1;
                q.push(make_pair(x,y+1));
            }
        }

        if(x+1 < n) {
            if(h[x+1][y] == 0 && a[x+1][y] == 1) {
                h[x+1][y] = 1;
                q.push(make_pair(x+1,y));
            }
        }
    }

    return 0;

}
int main()
{
    int t;
    int n;
    int a[100][100];
    int i;
    int j;

    cin>>t;
    while(t--) {
        cin>>n;
        for(i = 0; i < n; i++) {
            for(j = 0; j < n; j++) {
                cin>>a[i][j];
                h[i][j] = 0;
            }
        }
        if(bfs(a,n) == 1) {
            cout<<"POSSIBLE"<<endl;
        }
        else {
            cout<<"NOT POSSIBLE"<<endl;
        }
    }
}
