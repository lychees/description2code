#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int arr[1010][1010];
bool track[1010][1010];

int dx[] = {1,0,-1,0};
int dy[] = {0,1,0,-1};

int n,m;

bool isvalid(int x,int y) {
	return x >= 0 and x < n and y >= 0 and y < m and arr[x][y];
}

int dfs(int x,int y) {
	if(track[x][y]) return 0;
	track[x][y] = true;
	
	int cnt = arr[x][y];
	for (int i = 0; i < 4; i ++) {
		int xx = x + dx[i];
		int yy = y + dy[i];
		
		if(isvalid(xx,yy)) {
			cnt += dfs(xx,yy);
		}
	}
	
	return cnt;
}

int main() {
	// your code goes here
	int q;
	scanf("%d%d%d",&n,&m,&q);
	int cnt = 0;
	for (int i = 0; i < n; i ++) {
		for (int j = 0; j < m; j ++) {
			int x; scanf("%d",&x);
			arr[i][j] = x;
			cnt += x;
		}
	}
	
	memset(track,false,sizeof track);
	
	int tot = 0;
	
	while (q --) {
		int x,y; scanf("%d%d",&x,&y);
		x --; y --;
		int ret;
		if(!arr[x][y]) ret = 0;
		else ret = dfs(x,y);
		tot += ret;
		printf("%d\n",cnt - tot);
	}
	
	return 0;
}