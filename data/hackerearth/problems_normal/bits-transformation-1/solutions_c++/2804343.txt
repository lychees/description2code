#include <bits/stdc++.h>
using namespace std;
string st1,st2;
long N,x,y,z,t,ps[2][2001];
long c[2];
long dp[2001][2001];
long tests,acost;
long get_cost(long Ps,long was,long ad)
{
 long was0=Ps-was;
 if (ad==0)
  was=was0;
 if (was>=c[ad])return 1e9;
 long pp=ps[ad][was];
 long bonus=0;
 if (pp<Ps)bonus=Ps-pp;
 bonus*=t;
 if (st1[Ps]=='?') return bonus+z;
 if (st1[Ps]==ad+48) return bonus;
 if (st1[Ps]=='0'&&ad==1)return bonus+x;
 if (st1[Ps]=='1'&&ad==0)return bonus+y;
 return 1e9;
}
int main(){
ios_base::sync_with_stdio(0);
//cin.tie(0);
cin>>tests;
for (;tests;--tests)
{
 cin>>N>>x>>y>>z>>t;
 cin>>st1;
 cin>>st2;
 
 c[0]=c[1]=0;
 for(int i=0;i<st2.size();i++)
 {
  int cur=st2[i]-'0';
  ps[cur][c[cur]]=i;
  c[cur]++;
 }
 
 for (int i=0;i<=N;i++)
  for (int j=0;j<=N;j++)
   dp[i][j]=1e9;
   
 dp[0][0]=0;
 
 for (int i=0;i<st1.size();i++)
 {
  for (int j=0;j<=i;j++)
  {
   for (int ad=0;ad<=1;ad++)
   {
       acost=get_cost(i,j,ad);
       dp[i+1][j+ad]=min(dp[i+1][j+ad],dp[i][j]+acost);
   }
  }   
 }
 cout<<dp[st1.size()][c[1]]<<endl;
}
return 0;}