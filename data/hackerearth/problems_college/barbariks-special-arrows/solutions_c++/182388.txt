#include <functional>
#include <algorithm>
#include <iostream>
#include <string.h>
#include <stdlib.h>
#include <sstream>
#include <ctype.h>
#include <stdio.h>
#include <bitset>
#include <vector>
#include <string>
#include <math.h>
#include <time.h>
#include <queue>
#include <stack>
#include <list>
#include <complex>
#include <map>
#include <set>
#define Int long long
#define inf 0x3f3f3f3f
#define eps 1e-9
using namespace std;
#define N 1005
 
map <int, int> X, Y;
map <int, int>::iterator iter;
 
struct point
{
    int x, y;
} A[N];
 
bool used[N];
 
int main()
{
    int t, n, i, j;
    cin >> t;
    while(t--)
    {
        X.clear();
        Y.clear();
        memset(used, false, sizeof(used));
        scanf("%d", &n);
        for(i = 0; i < n; i++)
            scanf("%d %d", &A[i].x, &A[i].y), X[A[i].x]++, Y[A[i].y]++;
 
        int res = 0;
        while(true)
        {
            bool ok = false;
 
            for(i = 0; i < n; i++)
                if(!used[i] && X[A[i].x] == 1 && Y[A[i].y] == 1)
                    res++, X[A[i].x]--, Y[A[i].y]--, used[i] = true, ok = true;
 
            for(i = 0; i < n; i++)
                if(!used[i] && Y[A[i].y] == 1)
                {
                    for(j = 0; j < n; j++)
                        if(!used[j] && A[j].x == A[i].x)
                            used[j] = true, X[A[j].x]--, Y[A[j].y]--;
                    ok = true;
                    res++;
                }
                else
                    if(!used[i] && X[A[i].x] == 1)
                    {
                        for(j = 0; j < n; j++)
                            if(!used[j]  && A[j].y == A[i].y)
                                used[j] = true, X[A[j].x]--, Y[A[j].y]--;
                        ok = true;
                        res++;
                    }
            if(!ok)
                break;
        }
        int minX = 0, minY = 0;
        for(iter = X.begin(); iter != X.end(); iter++)
            minX += (iter->second > 0);
        for(iter = Y.begin(); iter != Y.end(); iter++)
            minY += (iter->second > 0);
        res += min(minX, minY);
        printf("%d\n", res);
    }
}  