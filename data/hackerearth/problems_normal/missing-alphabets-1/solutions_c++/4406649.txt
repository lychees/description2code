#include <iostream>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
using namespace std;
int order[26];
struct lexcmp
{
	bool operator()(const string &s1,const string &s2)
	{
		int i=0;
		int j=min(s1.size(),s2.size());
		while(1)
		{
			if(order[s1[i]-'a']<order[s2[i]-'a'])
			return true;
			if(order[s1[i]-'a']>order[s2[i]-'a'])
			return false;
			if(i==j-1)
			{
				if(s1.size()<s2.size())
				    return true;
				else return false;
			}
			
			i++;
		}
	}
};
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	string s;
    	cin>>s;
    	for(int i=0;i<s.size();i++)
    	{
    		order[s[i]-'a']=i;
    	}
    	multiset<string,lexcmp> store;
    	int m;
    	cin>>m;
    	while(m--)
    	{
    		string q;
    		cin>>q;
    		store.insert(q);
    	}
    	for(auto i=store.begin();i!=store.end();i++)
    	{
    		cout<<*i<<endl;
    	}
    }
    return 0;
}
