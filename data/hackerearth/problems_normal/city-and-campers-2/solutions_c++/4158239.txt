#include<bits/stdc++.h>
 
#define MOD 1000000007
#define MAX 100005
#define P 1 << 15
#define ll long long 
#define slld(t) scanf("%lld",&t)
#define sd(t) scanf("%d",&t)
#define pd(t) printf("%d\n",t)
#define plld(t) printf("%lld\n",t)
#define pcc pair<char,char>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define tr(container,it) for( typeof(container.begin()) it =container.begin();it!=container.end();it++)
#define mp(a,b) make_pair(a,b)
#define F first
#define S second
#define pb(x) push_back(x)
#define inf 1000000
int n,q,u,v;

using namespace std;

struct cmp {
	bool operator ()(pii a, pii b) {
		if(a.second==b.second)
		return a.first < b.first;
		
		return a.second < b.second;
	}
};

multiset < pii , cmp > s;
multiset < pii , cmp > s2 ;
int a[100005],size[100005],p[100005];
multiset< pii,cmp > ::iterator it1,it2,it3,it4,it5,it6,it7,it;
int root( int i)
{
	while(i!=a[i])
	{
		i=a[i];
	}
	return i;
}
void ast( int u)
 {
    int p1,p2,p3,p4;
    it= s.find(mp(u,size[u]));
    p1=(*it).first;
    p2=(*it).second;
    
    s2.erase(mp(p1,p[p1]));
    it++;
    p3=(*it).second;
    it--;
    it--;
    p4=(*it).second;
    
    p2=min(abs(p2-p3),abs(p2-p4));
    s2.insert(mp(p1,p2));
    p[p1]=p2;
    
    return ;
 }
void dsu(int u , int v)
{ int p1,p2,p3;
	int ru= root(u);
	int rv= root(v);
	if(ru == rv)return ;
	it4=s.find(mp(0,-2*n));
	it5=it4;it6=it5;it7=it6;
	
	it1=s.find(mp(ru,size[ru]));
	it2=s.find(mp(rv,size[rv]));
	  it1++;
	  if((*it1).first != rv)
	     it4=it1;
	  it1--;it1--;
	    if((*it1).first != rv)
	     it5=it1;
	  it2++;
	   if((*it2).first != ru)
	     it6=it2;
	     it2--,it2--;
	     if((*it2).first != ru)
	     it7=it2;
	     
		s.erase(mp(ru,size[ru]));
		s.erase(mp(rv,size[rv]));
		
		s2.erase(mp(ru,p[ru]));
	    s2.erase(mp(rv,p[rv]));
    
	if(size[ru] >= size[rv])
	{
		a[rv]=ru;
		size[ru]+=size[rv];
		s.insert(mp(ru,size[ru]));
		it3= s.find(mp(ru,size[ru]));
		ast(ru);
		it3++;
		ast((*it3).first);
		it3--,it3--;
		ast((*it3).first);
	}
	else
	{
		a[ru]=rv;
		size[rv]+=size[ru];
		s.insert(mp(rv,size[rv]));
		it3= s.find(mp(rv,size[rv]));
		ast(rv);
		it3++;
		ast((*it3).first);
		it3--,it3--;
		ast((*it3).first);
	 
	}

	ast((*it4).first);
		ast((*it5).first);
			ast((*it6).first);
				ast((*it7).first);
	
}


int main()
{  ios::sync_with_stdio(false);

	cin>>n>>q;
	s.insert(mp(0,-2*n));
	s.insert(mp(n+1,3*n));
	s.insert(mp(-1,-4*n));
	s.insert(mp(n+2,5*n));
	size[0]=-2*n,size[n+1]=3*n,size[n+2]=5*n;
	s2.insert(mp(0,2*n));
	s2.insert(mp(n+1,2*n));
	p[0]=2*n,p[n+1]=2*n;
	for(int i=1;i<=n;i++)
	{
		a[i]=i;
		size[i]=1;
		s.insert(mp(i,1));
		s2.insert(mp(i,0));
		p[i]=0;
	}
	 //int ans=(*s2.begin()).second,ans2=(*s2.begin()).first;
       // cout<<ans<<"\t"<<ans2<<endl;
        
	for(int i=0;i<q;i++)
	{
		cin>>u>>v;
		dsu(u,v);
	
        int ans=(*s2.begin()).second,ans2=(*s2.begin()).first;
        if(ans>=n)ans=0;
        cout<<ans<<endl;
	}
	return 0;

}