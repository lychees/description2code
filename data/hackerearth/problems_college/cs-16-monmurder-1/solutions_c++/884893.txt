#define _CRT_SECURE_NO_WARNINGS
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long, long long> pll; typedef vector<pair<long long, long long> > vpll;
typedef vector<string> vs; typedef long double ld;
template<typename T, typename U> inline void amin(T &x, U y) { if (y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if (x < y) x = y; }


vector<int> smallestPrimeFactor;
void getSmallestPrimeFactors(int n) {
	n = max(n, 1);
	if ((int)smallestPrimeFactor.size() >= n + 1) return;
	smallestPrimeFactor.assign(n + 1, 0);
	smallestPrimeFactor[1] = 1;
	rer(i, 2, n) if (!smallestPrimeFactor[i]) {
		smallestPrimeFactor[i] = i;
		if ((ll)i * i <= n)
			for (int j = i * i; j <= n; j += i)
				if (!smallestPrimeFactor[j]) smallestPrimeFactor[j] = i;
	}
}

typedef int FactorsInt;
typedef vector<pair<FactorsInt, int> > Factors;
void primeFactors(FactorsInt x, Factors &out_v) {
	getSmallestPrimeFactors(x);
	out_v.clear();
	while (x != 1) {
		int p = smallestPrimeFactor[x], k = 0;
		x /= p, k++;
		while (x % p == 0) x /= p, k++;
		out_v.push_back(make_pair(p, k));
	}
}


int main() {
	getSmallestPrimeFactors(1000000);
	int T;
	scanf("%d", &T);
	rep(ii, T) {
		int H;
		scanf("%d", &H);
		Factors fs;
		primeFactors(H, fs);
		int grundy = 0;
		each(i, fs)
			grundy ^= i->second;
		puts(grundy != 0 ? "Printf{}" : "Pappu Bhujia");
	}
	return 0;
}
