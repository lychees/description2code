/*
	By: facug91
	From:
	Name:
	Date: 28/09/2015
*/

#include <bits/stdc++.h>
#define next asjkdbg1238dv8ydf38gy832gf8yd
#define prev asjkdbuiqdg783gdiu3dg79832dui
#define EPS 1e-9
#define MP make_pair
#define DB(x) cerr << "#" << (#x) << ": " << (x) << " "
#define DBL(x) cerr << "#" << (#x) << ": " << (x) << endl
const double PI = 2.0*acos(0.0);

#define INF 1000000000
#define MINUSINF -10000000000000ll// -10^13
#define MOD 1000000007ll
//#define MAXN 10000100

using namespace std;
typedef long long ll;
typedef pair<int, int> ii; typedef pair<int, ii> iii;
typedef vector<int> vi; typedef vector<ii> vii;	    typedef vector<iii> viii;

int n, a[505], DP[505][505], next_prime[1000100], prev_prime[1000100];
bool sieve[1000100];

void initialize () {
	int i, j;
	for (i=3; i<1000100; i+=2) sieve[i] = true;
	sieve[0] = sieve[1] = false;
	sieve[2] = true;
	for (i=3; i<1010; i+=2)
		if (sieve[i])
			for (j=i*i; j<1000100; j+=i+i)
				sieve[j] = false;
	int last = -1;
	for (i=1000100-1; i>=0; i--) {
		if (sieve[i]) last = i;
		next_prime[i] = last;
	}
	last = -1;
	for (i=0; i<1000100; i++) {
		if (sieve[i]) last = i;
		prev_prime[i] = last;
	}
}

int dp (int l, int r) {
	if (l > r) return 0;
	if (DP[l][r] != -1) return DP[l][r];
	int ans = INT_MAX, add, p1, p2;
	for (int i=l+1; i<=r; i+=2) {
		p1 = next_prime[a[l]];
		p2 = next_prime[a[i]];
		add = (p1 - a[l]);
		if (p1 >= a[i]) add += (next_prime[p1+1]-a[i]);
		else add += ((p2 - a[i]) + (prev_prime[p2-1]-p1));
		ans = min(ans, dp(l+1, i-1)+dp(i+1, r)+add);
	}
	return DP[l][r] = ans;
}

int main () {
	ios_base::sync_with_stdio(0); cin.tie(0);
	//cout<<fixed<<setprecision(7); cerr<<fixed<<setprecision(7); //cin.ignore(INT_MAX, ' '); //cout << setfill('0') << setw(5) << 25
	int i, j;
	
	initialize();
	cin>>n;
	for (i=0; i<n; i++) cin>>a[i];
	memset(DP, -1, sizeof DP);
	cout<<dp(0, n-1)+n/2<<endl;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	return 0;
}
