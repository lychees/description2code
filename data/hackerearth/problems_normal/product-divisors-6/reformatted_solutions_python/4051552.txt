from collections import Counter


def primes_sieve(limit):
    limitn = limit+1
    not_prime = set()
    primes = []

    for i in range(2, limitn):
        if i in not_prime:
            continue

        for f in range(i*2, limitn, i):
            not_prime.add(f)

        primes.append(i)

    return primes


SEIVE = primes_sieve(10**6)  # seive upto max
MODULO = 1000000007


def sum_of_factors(counter):
    sum = 1
    for num, count in counter.iteritems():
        sum = pow(sum * (count + 1), 1, MODULO)
    return sum


def factorize(n):
    pos = 0
    prime_factors = []
    while n != 1:
        d = SEIVE[pos]
        while (n % d) == 0:
            prime_factors.append(d)
            n //= d
        pos += 1
    return Counter(prime_factors)


_ = int(raw_input())  # do not care about length
a = map(int, str(raw_input()).split(" "))
# a = [i for i in range(10000, 12000)]
factors = Counter()
for num in a:
    factors += factorize(num)

print sum_of_factors(dict(factors))
