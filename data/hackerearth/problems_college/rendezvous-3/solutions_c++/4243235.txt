#include <bits/stdc++.h>
using namespace std;

int id[100011];
pair <long long int,pair<int,int> >p[100001];
int n,m;
long long int ans=0,z;
int x,y;

int root(int x){
	while(id[x]!=x)
		{
			id[x]=id[id[x]];
			x=id[x];
		}
	return id[x];
}

void union_(int x, int y)
{
	id[root(x)]=id[root(y)];
}

long long int kruskal(pair <long long int,pair<int,int> > p[])
{
	long long int mnc=0;
	int x,y;
	for(int i=1;i<=m;i++)
	{
		x=p[i].second.first;
		y=p[i].second.second;
		
		if(root(x)!=root(y))
		{
			mnc+=p[i].first;
			union_(x,y);
		}
	}
	return mnc;
}
int main()
{
	cin>>n>>m;
	for(int i=0;i<=n;i++)
	id[i]=i;
	for(int i=1;i<=m;i++)
		{
			cin>>x>>y>>z;
			p[i]=make_pair(z,make_pair(x,y));
		}
	sort(p+1,p+m+1);
	cout<<kruskal(p);
	return 0;
}
