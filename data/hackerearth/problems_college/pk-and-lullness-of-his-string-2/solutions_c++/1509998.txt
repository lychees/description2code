#include<bits/stdc++.h>
#include<string.h>
using namespace std;
typedef long long ll;
ll fa[100005] ;
char line[100005];
ll ma = 1000000007;
int fir[100005],sec[100005],a[100005];
   ll pow(ll a, ll b)
        {
        //	printf("power of %lld to %lld\n",a,b);
            if(b==0)return 1;
            ll x = pow(a,b/2);
            x = (x * x)%ma;
            if(b%2==1)x = (x * a)%ma;
            return x;
        }
 
  ll ncr(int n,int r)
        {
          //  System.out.println("ncr of " + n + " and " + r);
         // printf("ncr of %d and %d\n",n,r);
            if(r>n)return 0;
            ll first = fa[n];
            ll secst = (fa[r] * fa[n-r])%ma;
            //printf("fa are %lld %lld %lld\n",fa[n],fa[r],fa[n-r]);
            //printf("secs is %lld\n",secst);
            secst = pow(secst,ma-2);
            // printf("secs is %lld\n",secst);
            return (first*secst)%ma;
        }

int  main()
	{
	int ca,t;
		fa[0] = 1;
		for(t=1;t<=100001;t++)
		{
		    fa[t] = (fa[t-1]*t)%ma;
		}
        int n,k;
      scanf("%d",&t);
        for(ca=1;ca<=t;ca++)
        {
         scanf("%s%d",&line,&n);
            ll ans = 0;
            if(n!=1)
            {
                int want = n/2;
                int m= strlen(line);
           
                int in = 0;
                int co = 0;
                int i;
                char pr = 'x';
                for(i=0;i<=m+2;i++)
                a[i] = fir[i] = sec[i] = 0;
                for(i=1;i<=m;i++)
                {
                   char ch =line[i-1];
                   if(ch=='l')a[i] = 1;
                   
                }
                for(i=1;i<=m;i++)
                fir[i] = fir[i-1] + a[i];
                for(i=m;i>=1;i--)
                sec[i] = sec[i+1] + a[i];
                ll cur;
            
                for(i=1;i<=m;i++)
                {
                    if(line[i-1]=='u')
                    {
                        ll fi,se;
                       // System.out.println(" we want " + want);
                        fi = ncr(fir[i-1],want);
                        se = ncr(sec[i+1],want);
                      //  printf("so ways are %lld and %lld\n",fi,se);
                        cur = (fi*se)%ma;
                        ans = (ans+cur)%ma;
                    }
                }
            }
         printf("%lld\n",ans);
            
        }
        }
     


