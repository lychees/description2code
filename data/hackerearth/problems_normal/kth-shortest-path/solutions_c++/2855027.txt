#include <iostream>
#include<string>
#include<vector>
#include<stdlib.h>
using namespace std;

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int m , n;
		cin>>m>>n;
		int** arr = new int*[m];
		for(int i = 0 ; i < m ; i++)
		{
			arr[i] = new int[n];
			for(int j = 0 ; j < n ; j++)
			{
				string s;
				cin>>s;
				if(s[0] == '#')
					arr[i][j] = -11;
				else
					arr[i][j] = atoi(s.c_str());
			}
		}
		vector<int> out[101][101];
		if(arr[0][0] != -11)
			out[0][0].push_back(arr[0][0]);
		for(int i = 1 ; i < m ; i++)
			if(arr[i][0] != -11 && out[i-1][0].size() > 0)
					out[i][0].push_back(out[i-1][0][0] + arr[i][0]);
		for(int i = 1 ; i < n ; i++)
			if(arr[0][i] != -11 && out[0][i-1].size() > 0)
					out[0][i].push_back(out[0][i-1][0] + arr[0][i]);
		
		for(int i = 1 ; i < m ; i++)
		{
			for(int j = 1 ; j < n ; j++)
			{
				if(arr[i][j] != -11)
				{
					int size1 = out[i][j-1].size();
					int size2 = out[i-1][j].size();
					int index1 = 0;
					int index2 = 0;
					int count = 0;
					while((index1 < size1 || index2 < size2) && count != 101)
					{
						if(index1 == size1)
						{
							out[i][j].push_back(out[i-1][j][index2] + arr[i][j]);
							index2++;
						}
						else if(index2 == size2)
						{
							out[i][j].push_back(out[i][j-1][index1] + arr[i][j]);
							index1++;
						}
						else
						{
							if(out[i-1][j][index2] > out[i][j-1][index1])
							{
								out[i][j].push_back(out[i][j-1][index1] + arr[i][j]);
								index1++;
							}
							else
							{
								out[i][j].push_back(out[i-1][j][index2] + arr[i][j]);
								index2++;
							}
						}
						count++;
					}
				}
			}
		}
		int q;
		cin>>q;
		while(q--)
		{
			int x , y , k;
			cin>>x>>y>>k;
			if(arr[x][y] == -11)
				cout<<"Obstacle"<<endl;
			else if(k > out[x][y].size())
				cout<<"Not so many paths"<<endl;
			else
				cout<<out[x][y][k-1]<<endl;
		}
	}
	return 0;
}