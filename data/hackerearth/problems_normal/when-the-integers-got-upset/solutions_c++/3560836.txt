#include <bits/stdc++.h>
using namespace std;
#define mem(a) memset(a,0,sizeof(a))
int dp [(1<<12) + 5][15][15];
int a [15]; 
int p [15]; 
int N; 
int main(){
	ios_base::sync_with_stdio(0); 
	int T; cin >> T; 
	assert(1<=T and T<=10); 
	for (int g=0; g<T; g++){
		int R; cin >> R;
		assert (1<=R and R<=12); 
		mem(a);
		mem(p); 
		mem(dp); 
		for (int y=1; y<=R; y++) {cin >> a[y]; assert(a[y]>=0 and a[y]<=200);} 
		for (int y=1; y<=R; y++) {cin >> p[y]; assert(p[y]>=0 and p[y]<=200);}
		for (int y=(1<<R)-1; y>=0; y--){
			for (int z=0; z<=R; z++){
				for (int k=0; k<=R; k++){
					if(y==(1<<R)-1){
						dp[y][z][k] = 0; 
						continue; 
					}
					dp[y][z][k] = 1e9; 
					if (k==0 && z!=0) continue; 
					if (z && !((1<<(z-1))&y)) continue;
					if (k && !((1<<(k-1))&y)) continue; 
					for (int t=1; t<=R; t++){
						if ((1<<(t-1))&y) continue;
						dp[y][z][k] = min(dp[y][z][k], ((z==0)?(0):(a[z]^a[k]^a[t])) * p[__builtin_popcount(y)+1] + dp[y|(1<<(t-1))][k][t]);
					}
				}
			}
		}
		cout << dp[0][0][0] << '\n';
	}
	return 0; 
}