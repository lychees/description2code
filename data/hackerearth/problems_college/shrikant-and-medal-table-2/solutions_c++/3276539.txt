#include <bits/stdc++.h>
#define endl '\n'
using namespace std;

const int maxN = 55;

struct c
{
	string name;
	int gold, silver, bronze;

	c()
	{
		gold = 0;
		silver = 0;
		bronze = 0;
	}
};

c cs[maxN];

bool cmp(c x, c y)
{
	if(x.gold != y.gold) return x.gold > y.gold;
	if(x.silver != y.silver) return x.silver > y.silver;
	if(x.bronze != y.bronze) return x.bronze > y.bronze;
	return x.name < y.name;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int n, ind1, ind2, ind3, currInd = 0;

	cin>>n;
	
	string s1, s2, s3;
	map<string, int> m;
	for(int i = 0; i < n; i++)
	{
		cin>>s1>>s2>>s3;

		if(m.find(s1) != m.end()) ind1 = m[s1];
		else
		{
			ind1 = currInd++;
			m[s1] = ind1;
		}
		if(m.find(s2) != m.end()) ind2 = m[s2];
		else
		{
			ind2 = currInd++;
			m[s2] = ind2;
		}
		if(m.find(s3) != m.end()) ind3 = m[s3];
		else 
		{
			ind3 = currInd++;
			m[s3] = ind3;
		}

		cs[ind1].name = s1;
		cs[ind1].gold++;

		cs[ind2].name = s2;
		cs[ind2].silver++;

		cs[ind3].name = s3;
		cs[ind3].bronze++;
	}

	sort(cs, cs + currInd, cmp);
	
	for(int i = 0; i < currInd; i++)
	{
		cout<<cs[i].name<<" "<<cs[i].gold<<" "<<cs[i].silver<<" "<<cs[i].bronze<<endl;
	}

	return 0;
}
