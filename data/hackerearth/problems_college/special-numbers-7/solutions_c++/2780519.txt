#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define PII pair<int,int>
using namespace std;
int get(int i)
{
    int ct=0;
    if(i%2==0)
    {
      ct++;
      while(i%2==0) i/=2;
    }
    for(int k=3;k<=i;k+=2)
    {
        if(i%k==0)
        {
            ct++;
            while(i%k==0) i/=k;
        }
    }
    if(i>1) ct++;
    if(ct>=3) return 1;
    return 0;
}
int main()
{
    long long dp[1005];
    int ct=0,i=30;
    while(1)
    {
        if(ct>=1000) break;
        if(get(i)) dp[++ct]=i;
        i++;
    }
    int t; si(t);
    while(t--)
    {
        int n; si(n);
        cout<<dp[n]<<endl;
    }
	return 0;
}
