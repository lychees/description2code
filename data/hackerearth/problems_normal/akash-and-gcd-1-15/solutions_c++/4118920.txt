#include<iostream>
#define mod 1000000007
using namespace std;
long ph[500005];
long sum[500005];
long long BIT[1000004];
void precom()
{
	for(long i=0;i<=500000;i++)
		ph[i]=i;
	for(long i=2;i<=500000;i++)
		if(ph[i]==i)
			for(long j=i;j<=500000;j=j+i)
				ph[j]=ph[j]-ph[j]/i;
	
	for(long i=1;i<=500000;i++)
		for(long j=i;j<=500000;j+=i)
			sum[j]+=i*ph[j/i];

}
void update(long long x, long long val,long n)
{
		if(val<0)
			val+=mod;
      for(; x <= n; x += x&-x)
        BIT[x] =(BIT[x]+ val);
}
long long  query(long x,long n)
{
     long long res = 0;
     for(; x > 0; x -= x&-x)
        res = (res+BIT[x])%mod;
     return res;
}
				
int main()
{
	long n,q,a[1000004],x,y;
	char c;
	cin>>n;
		precom();
	for(long i=1;i<=n;i++)
	{
		cin>>a[i];
		update(i,sum[a[i]],n);
	}

	cin>>q;
	while(q--)
	{
		cin>>c>>x>>y;
		if(c=='C'){
		
			long long ans=(query(y,n)-query(x-1,n)+mod)%mod;
			cout<<ans<<endl;
		}
		else
		{
			update(x,-sum[a[x]],n);
			update(x,sum[y],n);
			a[x]=y;
		}
	}
	return 0;
}