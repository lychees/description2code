
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  @ All power is within you; you can do anything and everything. Believe in that, do not believe that you are  @
  @ weak; do not believe that you are half-crazy lunatics, as most of us do nowadays. You can do any thing and @
  @ everything, without even the guidance of any one. Stand up and express the divinity within you.            @
  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ */

#include<bits/stdc++.h>
#define fori(a,b) for(ll i=a;i<b;i++)
#define forj(a,b) for(ll j=a;j<b;j++)
#define fork(a,b) for(ll k=a;k<b;k++)
#define fori1(a,b) for(ll k=a;k<=b;k++)
#define ford(a,b) for (int i = b-1; i >= a; --i)
#define ll long long
#define mod 1000000007
#define nax 1000005
#define inf 100000000000000000LL
#define pll pair<ll,ll>
#define distSqr(x1,y1,x2,y2) ( sqr(x1-x2) + sqr(y1-y2) )
#define eps 1e-9
#define plll pair<ll,pair<ll,ll> >
#define db(x) cout << '>' << #x << ':' << x << endl;
using namespace std;
ll a,b,c,d,e,f,g,h,k,l,m,n,o,p,q,r,s,t,u,w,x,y,z;
ll arr[1000005];
ll brr[1000005];
int dp[1005][1005];
ll fac[nax];
ll inv [nax];
vector<ll> v[1000005];
ll fastmod( ll w, ll e,ll MOD){ll a,b,ans=1;a=w;b=e;while(b>0){if(b%2==1){ans=((ans)*(a))%MOD;}a=((a)*(a))%MOD;b=b/2;}return ans;}
void cal(){fac[0]=1;inv[0]=1;fori(1,nax){fac[i]=(fac[i-1]*i)%mod;inv[i]=(inv[i-1]*fastmod(i,mod-1,mod))%mod;}}
ll C(ll n,ll r){return (((fac[n]*inv[r])%mod)*inv[n-r])%mod;}
string s1[15],s2[15],req;
int fre1[15][26],fre2[15][26];

int solve()
{
    map<vector<int> ,int  > mp;
     vector<int> res(26);

    fori(0,15) forj(0,26) fre1[i][j]=fre2[i][j]=0;


    fori(0,a)
    {
        forj(0,s1[i].length())
        {
            k = s1[i][j]-'a';
            fre1[i][k]++;
        }

    }
    fori(0,b)
    {
        forj(0,s2[i].length())
        {
            k = s2[i][j]-'a';
            fre2[i][k]++;
        }

    }
    fori(0,26)
    res[i]=0;
    fori(0,req.length())
    {
        k = req[i]-'a';
        res[k]++;
    }
    fori(0,(1<<a))
    {
        vector<int> freq(26);
        fori(0,26)
        freq[i]=0;

        forj(0,a)
        {
            if(i&(1<<j))
            {


                fork(0,26)
                freq[k]+=fre1[j][k];
            }
        }
        mp[freq]=1;
    }
    fori(0,(1<<b))
    {
        vector<int> freq(26);
        fori(0,26)
        freq[i]=0;

        forj(0,b)
        {
            if(i&(1<<j))
            {


                fork(0,26)
                freq[k]+=fre2[j][k];
            }
        }
        fori(0,26)
        freq[i]=res[i]-freq[i];

        if(mp[freq])
            return true;

    }
    return false;
}







int main()
{
    cin>>t;
    while(t--)
    {
        cin>>n;
        a = n/2;
        b = n-a;
        fori(0,a)
        cin>>s1[i];
        fori(0,b)
        cin>>s2[i];
        cin>>req;
        if(solve())
            puts("YES");
        else
            puts("NO");

    }

}

