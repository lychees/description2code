/*
@author: Swarnim Singhal


Date: October,2014
Concept : Maths, Divisors

*/

#include <iostream>
#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define ll long long int
#define ull unsigned long long int
#define scan(x) scanf("%d",&x)
#define scanll(x) scanf("%lld",&x)
#define print(x) printf("%d\n",x)
#define printll(x) printf("%lld\n",x)


#define MAX 1000005

ll x[MAX],f[MAX],y[MAX],g[MAX];

// function to calculate smallest prime factor
void spf(){
	for(ll i=2;i<MAX;i++){
		if(x[i]==0){                        // if prime
			for(ll j=i;j<MAX;j=j+i){        // loop over all multiples
				if (x[j]==0)                // If not done ,largest prime factor gets stored.
					x[j]=i;                 
			}
		}
	}
}

// y(n) = sum of all natural numbers p less than n which follow that n % p == 0

void calcy(){
	ll i,j;
	for(i=1;i<=(1000002/2);i++)
    {
        for(j=i+i;j<1000002;j+=i)
        {
            y[j]+=i;
        }
    }
}



int main()
{   
	spf();
	calcy();	

	for(ll i=2;i<MAX;i++){
		f[i]=f[i-1]+x[i];
		g[i]=g[i-1]+y[i];
	}	

	int t;
    scan(t);
    while(t--)
        {
	        ll n;
	        scanll(n);
	        printll((f[n]+g[n])%n);
        }



	return 0;
}

