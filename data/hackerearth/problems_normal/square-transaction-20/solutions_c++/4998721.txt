#include<iostream>
#include<sstream>
#include<vector>
#include<string>
#include<algorithm>
#include<math.h>
using namespace std;
#define IOS ios_base::sync_with_stdio(false);cin.tie(0)
typedef long long LL;
int bSearch(LL query, vector<LL>& dataBase) {
  int b = 0, e = dataBase.size();
  int n = query / 1000;
  b = n;
  if (query > dataBase.back()) {
    return -1;
  }
  int ret=-1;
  int mid;
  while (b != e) {
    mid = (b + e) / 2;
    if (dataBase[mid] > query) {
      ret = mid;
      e = mid;
    }
    else if(dataBase[mid]<query) {
      b = mid + 1;
    }
    else if (dataBase[mid] == query) {
      ret = mid;
      break;
    }
  }
  return ret;
}
int main() {
  IOS;
  int t;
  cin >> t;
  vector<LL> complete;
  int a;
  complete.resize(t+1, 0);
  for (int i = 1; i <= t; i++) {
    cin >> a;
    complete[i] = complete[i - 1] + a;
  }
  int query;
  cin >> query;
  LL target;
  while (query--) {
    cin >> target;
    int ret = bSearch(target, complete);
    cout << ret << endl;
  }
  return 0;
}