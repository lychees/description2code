#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;
int n;
char s[10];
int in[15][5], A[15], B[15];
int yes(int p, int t) {
  int a[4];
  for (int i = 0; i < 4; ++i) {
    a[3 - i] = p % 10;
    p /= 10;
  }
  for (int i = 0; i < 4; ++i) {
    for (int j = 0; j < 4; ++j) {
      if (i != j && a[i] == a[j])
        return 0;
    }
  }
  int x = 0, y = 0;
  for (int i = 0; i < 4; ++i) {
    for (int j = 0; j < 4; ++j) {
      if (a[i] == in[t][j]) {
        if (i == j)
          ++x;
        else
          ++y;
      }
    }
  }
  if (x == A[t] && y == B[t])
    return 1;
  return 0;
}
int main() {
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%s%d%d", s, A + i, B + i);
    for (int j = 0; j < 4; ++j) {
      in[i][j] = s[j] - '0';
    }
  }
  int cnt = 0, ans;
  for (int i = 0; i < 10000; ++i) {
    int ok = 1;
    for (int j = 0; j < n; ++j) {
      if (!yes(i, j)) {
        ok = 0;
        break;
      }
    }
    if (ok) {
      ++cnt;
      ans = i;
    }
  }
  if (cnt == 0)
    printf("Incorrect data\n");
  else if (cnt == 1) {
    if (ans < 1000)
      printf("0%d\n", ans);
    else
      printf("%d\n", ans);
  } else
    printf("Need more data\n");
  return 0;
}
