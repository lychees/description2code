#include <bits/stdc++.h>
#include <stdlib.h>
using namespace std;
const long long mod=1e9+7;
 
typedef long long unsigned llu;
typedef long long int lld;
typedef long ld;
#define rep(i,a,n) for(long long int i = (a); i <= (n); ++i)
#define repI(i,a,n) for(int i = (a); i <= (n); ++i)
#define repD(i,a,n) for(long long int i = (a); i >= (n); --i)
#define repDI(i,a,n) for(int i = (a); i >= (n); --i)

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld%lld",&a,&b)
#define sc3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scd(a) scanf("%d",&a)
#define scd2(a,b) scanf("%d%d",&a,&b)
#define scd3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("%lf%lf",&a,&b)
#define scf3(a,b,c) scanf("%lf%lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prdL(a) printf("%d\n",a)
#define prdS(a) printf("%d ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a)
#define popcount __builtin_popcountll
#define swap(a,b,t) t=a;a=b;b=t
typedef pair<lld,lld> PA;
 
#define lim 100003
#define lim2 3003
inline lld sqr(lld x) { return x * x; }
// map<lld,lld> M,Mn;
// map<lld,lld>::iterator it;
// set<PA>::iterator it;
// std::ios::sync_with_stdio(false);
string S[lim],T[lim];
 
// multiset<lld> S;
// set<PA> S;
// string S;
// vector<lld> V[lim];
 
// lld dp[3003][3003];
// lld A[lim],dp1[lim],dp2[lim],P[lim];
// bool dp[1002][12][12];
// priority_queue<PA> Q;
// double X[lim],Y[lim],C[lim];
lld A[lim],B[lim];
// lld P[lim];
// std::vector<lld> V;
// lld P[lim],Q[lim],R[lim];
// char S[lim];
// double dp[1<<18];

int main(){
	// std::ios::sync_with_stdio(false);
    lld T,i,j,k,h,l,r,s,a,b,c,d,w,x,y,v,z,t,p,q,n,m,curr,sum,ans,pos,val,secondMin,countA,indicator;
    sc(T);
    while(T--){
    	sc(n);
    	rep(i,0,n-1) cin>>S[i];
    	sort(S,S+n);
    	t=1;
    	rep(i,1,n-1){
    		if(S[i].find(S[i-1])==0 && S[i]!=S[i-1]) t=0;
    	}
    	if(t==1 || n==0) printf("YES\n");
    	else printf("NO\n");
    }
	return 0;
	
	
}
