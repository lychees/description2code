#include <bits/stdc++.h>
/*#include <boost/multiprecision/cpp_int.hpp> */
#define ll long long
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define gc getchar_unlocked
#define pp pair<int,int>
#define bigint boost::multiprecision::cpp_int
#define bsize 314
using namespace std;

int cot[1500],n,q,m,check[10];

void doit(int pos,int bits,int &ans)
{
    if(pos==10)
    {
        bool f=false,ss=true;
        
        for(int i=0;i<=9;i++)
        {
            if(!check[i])continue;
            
            if(bits & (1<<i)){ f=true; break;}
            else ss=false;
        }
        
        if(ss || f)ans+=cot[bits];
        
        return;
    }
    
    doit(pos+1,bits,ans);
    doit(pos+1,bits | (1<<pos),ans);
    
}
int main()
{
    cin>>n>>q;
    for(int i=1;i<=n;i++)
    {
        int ct[10]={0};
        int temp=i;
        
        while(temp>0){ ct[temp%10]=1; temp/=10;}
        int bit=0;
        for(int j=0;j<=9;j++)
        {
            bit+= (1 << j)*ct[j];
        }
        
        cot[bit]++;
    }
    
    
    
    while(q--)
    {
        cin>>m;
        
        memset(check,0,sizeof(check));
        int val;
        while(m--){cin>>val;check[val]=1;}
        int ans=0;
        doit(0,0,ans);
        cout<<ans<<"\n";
    }
   
return 0;
}