#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int MaxN = 100010;

int tr[11][100010];
long long b[100010];
int a[100010];

void update(int id, int x, int val) {
    for (int i = x; i < MaxN; i += i & -i) {
        tr[id][i] += val;
    }
}

int read(int id, int x) {
    int ans = 0;
    for (int i = x; i > 0; i -= i & -i) {
        ans += tr[id][i];
    }
    return ans;
}

int cal(long long x) {
    int use[10];
    memset(use, 0, sizeof(use));
    do {
        use[x % 10] = 1;
        x /= 10;
    }while (x != 0);
    int ans = accumulate(use, use + 10, 0);
    return ans;
}

int main() {
    int n;
    scanf("%d", &n);
    for (int i = 1; i <= n; i ++) {
        scanf("%lld", &b[i]);
        a[i] = cal(b[i]);
        update(a[i], i, 1);
    }
    int q;
    scanf("%d", &q);
    for (int i = 0; i < q; i ++) {
        int ope;
        scanf("%d", &ope);
        if (ope == 0) {
            int u;
            long long v;
            scanf("%d%lld", &u, &v);
            update(a[u], u, -1);
            b[u] += v;
            a[u] = cal(b[u]);
            update(a[u], u, 1);
        } else if (ope == 1) {
            int u;
            long long v;
            scanf("%d%lld", &u, &v);
            update(a[u], u, -1);
            b[u] = v;
            a[u] = cal(b[u]);
            update(a[u], u, 1);
        } else {
            int l, r, c;
            scanf("%d%d%d", &l, &r, &c);
            if (c < 0 || c > 10) {
                puts("0");
            } else {
                printf("%d\n", read(c, r) - read(c, l - 1));
            }
        }
    }
    return 0;
}