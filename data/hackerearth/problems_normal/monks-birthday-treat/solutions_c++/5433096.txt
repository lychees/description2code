#include<bits/stdc++.h>
using namespace std;
bool vis[1000000];
//long long arr[1000000];
long long c=0;

void dfs(long long x,vector<long long>v[]){
	//cout<<v[x].size()<<" "
	//	if(v[x].size()!=0)
	 
	    c++;
	    vis[x]=true;
	   //cout<<x<<" ";
	for(long long i=0;i<v[x].size();i++)
		if(vis[v[x][i]]==false)
		  dfs(v[x][i],v); 
	      
		 vis[x]=false;                           
		                      	
}
/*void dfs2(long long x,vector<long long>v[]){
	//cout<<v[x].size()<<" "
	//	if(v[x].size()!=0)
	 
	    //c=c+arr[x-1];
	vis[x]=false;
	   //cout<<x<<" ";
	for(int i=0;i<v[x].size();i++)
		if(vis[v[x][i]]==true)
		 dfs(v[x][i],v);                            
		                      	
}*/
int main(){
	long long n,m,cost;
	int t;

	c=0;
	
	cin>>n>>m;
	vector<long long>v[n+1];
	vector<long long>::iterator it;
	//vector<int>v1;
	for(long long i=0;i<m;i++){
		long long x,y;
		cin>>x>>y;
		it=find(v[x].begin(),v[x].end(),y);
		if(it==v[x].end()){
		  v[x].push_back(y);
     	}
	    //	v[y].push_back(x);
	}
	long long min=INT_MAX;
	//for(long long i=0;i<n;i++){
	//	cin>>arr[i];
	//}
	
	   for(long long i=1;i<=n;i++){
	   	 vis[i]=false;
	   }
	for(long long i=1;i<=n;i++){

	     if(vis[i]==false){
			dfs(i,v);
			long long p=c;
			//cout<<p<<" ";
			if(p < min)
			min=p;
		    
		   //if(vis[i]==true)
		   //dfs2(i,v);
		 	
		}
		c=0;
	}
	cout<<min<<"\n";
	
	for(long long i=0;i<n;i++){
		v[i].clear();
	}    
   return 0;
	
}