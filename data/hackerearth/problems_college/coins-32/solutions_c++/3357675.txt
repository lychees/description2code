#include <bits/stdc++.h>
 
using namespace std;
 
#define mem0(arr) memset(arr , 0 , sizeof arr)
#define memf(arr) memset(arr , false , sizeof arr)
#define rep(i , n) for(int i = 1; i <= n; i++)
#define loop(i , n) for(int i = 0; i < n; i++)
#define pb push_back
 
int arr [4];
int dp [1000 + 10][4];
int value [4];
 
int n , m , k , d , tem1 , tem2 , tem3 , l ,  ans = 0, t;
 
int rec (int sum , int index){				// Top Down DP Approach
 
    if(sum < 0) return 0;					// invalid case
    if(index == m && sum != 0) return 0;	// invalid case
    if(sum == 0) return 1;					// valid case
    int &st = dp[sum][index];				// reference to memory
    if(st != -1) return st;					// check if this state is calculated before
 
    int r = 0;
    for(int i = 0; i <= arr[index]; i++){
        r += rec(sum - i * value[index] , index + 1 );   // take 0,1,2,...number of coins for this (Coin Unit)
    }
    return st = r;
}
 
int main()
{
 
    scanf("%d", &t);
    m = 4;				// number of Coin Units   
	
    value[0] = 1; value[1] = 2; value[2] = 5; value[3] = 10;
	
    while(t--){
	
        memset(dp , -1,  sizeof dp);    // All states isn't calculated yet.
		
        scanf("%d", &n);
        scanf("%d%d%d%d", &arr[0] , & arr[1], &arr[2], &arr[3]);
        printf("%d\n", rec(n , 0));
 
    }
 
    return 0;
}