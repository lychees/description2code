# include<bits/stdc++.h>
using namespace std;
using namespace std;
typedef long long       LL;
typedef pair<int, int>  PII;
typedef pair<LL, LL>    PLL;
typedef vector<int>     VI;
typedef vector<LL>      VL;
typedef vector<PII>     VPII;
typedef vector<VI>      VVI;
typedef vector<VPII>    VVPII;
#define MM(a,x) memset(a,x,sizeof(a));
#define ALL(x)  (x).begin(), (x).end()
#define P(x)     cerr<<"["#x<<" = "<<(x)<<"]"<<endl;
#define P2(x,y)  cerr<<"["#x" = "<<(x)<<", "#y" = "<<(y)<<"]"<<endl;
#define P3(x,y,z)cerr<<"["#x" = "<<(x)<<", "#y" = "<<(y)<<", "#z" = "<<(z)<<"]"<<endl;
#define PP(x,i)  cerr<<"["#x<<i<<" = "<<x[i]<<"]"<<endl;
#define TM(a,b)  cerr<<"["#a" -> "#b": "<<1e3*(b-a)/CLOCKS_PER_SEC<<"ms]\n";
#define UN(v)   sort(ALL(v)), v.resize(unique(ALL(v))-v.begin())
#define mp make_pair
#define pb push_back
#define x first
#define y second
struct _ {_() {ios_base::sync_with_stdio(0);}} _;
template<class A, class B> ostream& operator<<(ostream &o, pair<A, B> t) {o << "(" << t.x << ", " << t.y << ")"; return o;}
template<class T> string tostring(T x, int len = 0, char c = '0') {stringstream ss; ss << x; string r = ss.str(); if(r.length() < len) r = string(len - r.length(), c) + r; return r;}
template<class T> void PV(T a, T b, int n = 0, int w = 0, string s = " ") {int c = 0; while(a != b) {cout << tostring(*a++, w, ' '); if(a != b && (n == 0 || ++c % n)) cout << s; else cout << "\n"; cout.flush();}}
template<class T> inline bool chmin(T &a, T b) {return a > b ? a = b, 1 : 0;}
template<class T> inline bool chmax(T &a, T b) {return a < b ? a = b, 1 : 0;}
const LL linf = 0x3f3f3f3f3f3f3f3fLL;
const int inf = 0x3f3f3f3f;
const int mod = int(1e9) + 7;
const int N = 111111;

int main() {
    int n, k;
    cin >> n >> k;
    assert(1 <= n && n <= 1e5);
    assert(1 <= k && k <= 1e9);

    VI p(n), w(n);
    for(int i = 0; i < n; i++) {
        cin >> p[i];
        p[i] = n - p[i];
        w[p[i]] = i;
    }

    {
        VI a = p;
        sort(ALL(a));
        for(int i = 0; i < n; i++) assert(a[i] == i);
    }

    for(int i = 0; i < n && k > 0; i++) {
        if(p[i] == i) continue;
        int to = w[i];
        w[p[i]] = to;
        swap(p[i], p[to]);
        k--;
    }

    for(int i = 0; i < n; i++) cout << n - p[i] << " "; 
    cout << endl;

    return 0;
}