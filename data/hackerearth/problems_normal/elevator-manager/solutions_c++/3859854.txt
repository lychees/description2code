//joyneel
#include<bits/stdc++.h>

using namespace std;

typedef pair<int,int>   II;
typedef vector< II >      VII;
typedef vector<int>     VI;
typedef vector< VI > 	VVI;
typedef long long int 	LL;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);
const LL md = 1e9+7;
long long mult(long long a, long long b, long long mod)
{
	__int128 res = a;
	res *= b;
	res %= mod;
	a = res;
	return a;
}
long long modulo(long long a, long long b, long long c){
	long long x = 1, y = a; 
	while (b > 0){
		if (b % 2 == 1){
			x = mult(x, y, c);
		}
		y = mult(y, y, c);
		b /= 2;
	}
	return x%c;
}
bool Miller(long long p, int iteration){
	if (p<2){
		return false;
	}
	if (p != 2 && p % 2 == 0){
		return false;
	}
	long long s = p - 1;
	while (s % 2 == 0){
		s /= 2;
	}
	for (int i = 0; i<iteration; i++){
		long long a = rand() % (p - 1) + 1, temp = s;
		long long mod = modulo(a, temp, p);
		while (temp != p - 1 && mod != 1 && mod != p - 1){
			mod = mult(mod, mod, p);
			temp *= 2;
		}
		if (mod != p - 1 && temp % 2 == 0){
			return false;
		}
	}
	return true;
}
bool prime(LL x){ return Miller(x,15); }
bool sqr(LL x){ LL tp = sqrt(x+0.5); return (tp*tp==x); }
int main(){
	LL n;
	int q;
	cin>>n>>q;
	LL cur = 1, d = 0, num = 0;
	for(int i=0;i<q;i++){
		int c;
		cin>>c;
		LL f,k;
		cin>>f>>k;
		LL tot = f + k;
		if(c==1 and prime(tot)){
			d += abs(cur-f);
			d %= md;
			cur = f;
			num += k;
		}
		else if(c==2 and sqr(tot)){
			d += abs(cur-f);
			d %= md;
			cur = f;
			num -= k;
		}
	}
	cout<<d<<' '<<num<<endl;
	return 0;
}
