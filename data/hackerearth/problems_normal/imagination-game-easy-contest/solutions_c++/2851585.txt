#include <bits/stdc++.h>

using namespace std;

int limit[12], pos[12];

int solve(int n, int l[12], int p[12])
{
	int i, j, k, m, x, f;
	int nl[12], np[12];
	//cout << n << "\n";
	/*f = 0;
	for(i=1; i<=n; i++){
		if(l[i]!=1){
			f = 1;
			break;
		}
	}
	if(!f)
		return 0;*/
	set<int> mset;
	
	for(i=1; i<=n; i++)
		nl[i] = l[i], np[i] = p[i];

	for(i=1; i<=n; i++){
		for(j=1; j<l[i]; j++){
			if(j<p[i]){
				nl[i] = l[i]-j;
				np[i] = p[i]-j;
				x = solve(n, nl, np);
				mset.insert(x);
				nl[i] = l[i];
				np[i] = p[i];
			}
			else{
				nl[i] = j;
				x = solve(n, nl, np);
				mset.insert(x);
				nl[i] = l[i];
			}
		}
	}
	i=0;
	while(1){
		if(mset.find(i)==mset.end())
			return i;
		i++;
	}
}

int main()
{
	//freopen("i.txt", "r", stdin);
	int t, n, i, j, x;
	scanf("%d", &t);
	while(t--){
		scanf("%d", &n);
		x = 0;
		for(i=1; i<=n; i++)
			scanf("%d", &limit[i]);
		for(i=1; i<=n; i++){
			scanf("%d", &pos[i]);
			x^=(pos[i]-1);
			x^=(limit[i]-pos[i]);
		}
		if(x)
			printf("First\n");
		else
			printf("Second\n");

	}
	return 0;
}