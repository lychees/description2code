//#define MYDEBUG
#define _CRT_SECURE_NO_WARNINGS
#define TASK "c1"
#pragma comment(linker, "/STACK:67108864")
#include <cstdio>
#include <iostream>
#include <iomanip> 
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <functional>
#include <cassert>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
#include <random>

const int MOD = 1000000007;
const int INF = 1000000001;
const int MAXN = 400;
const long double EPS = 1e-9;
const int HASH_POW = 29;
const long double PI = acos(-1.0);

using namespace std;

double workTime()
{
	return double(clock()) / CLOCKS_PER_SEC;
}

void my_return(int code)
{
#ifdef MYDEBUG
	cout << "\nTime = " << fixed << setprecision(3) << workTime() << endl;
#endif
	exit(code);
}

int n, q, f[100010], ans[100010];
bool used[100010];

int main()
{
	cin.sync_with_stdio(0);
	cin.tie(0);
	mt19937 mt_rand(time(0));
#ifdef MYDEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	/*freopen(TASK".in", "rt", stdin);
	freopen(TASK".out", "wt", stdout);*/
	/*freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);*/
#endif

	scanf("%d %d", &n, &q);
	for (int i = 1; i <= n; ++i)
		scanf("%d", &f[i]);

	for (int i = 0; i < 20; ++i)
	{
		int last = -1;
		for (int j = 1; j <= n; ++j)
		{
			if (!used[j])
			{
				if (last == -1)
					last = j;
				else
				{
					++ans[last];
					++ans[j];
					if (f[last] < f[j])
						used[last] = true;
					else
						used[j] = true;
					last = -1;
				}
			}
		}
	}

	while (q--)
	{
		int x;
		scanf("%d", &x);
		printf("%d\n", ans[x]);
	}

	my_return(0);
}