#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007
#define eps 1e-13
#define PI 3.14159265359
#define N 1000009
#define INF 1000000011
#define INFLL 1000000000000000011
#define space printf(" ")
#define endl printf("\n")
#define vi vector<int>
#define vll vector<long long>
#define vc vector<char>
#define vs vector<string>
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pil pair<int, long long>
#define pli pair<long long, int>
#define pcc pair<char, char>
#define mp make_pair
#define F first
#define S second
#define pb(x) push_back(x)
#define fo(i,a,n) for(int i = (int)(a); i < (int)(n); i++)
#define sd(x) scanf("%d", &(x))
#define pd(x) printf("%d", (x))
#define pdn(x) printf("%d\n", (x))
#define sld(x) scanf("%lld", &(x))
#define pld(x) printf("%lld", (x))
#define pldn(x) printf("%lld\n", (x))
#define slf(x) scanf("%llf", &(x))
#define plf(x) printf("%.9llf", (x))
#define plfn(x) printf("%.9llf\n", (x))
#define sch(x) scanf("%c", &(x))
#define pch(x) printf("%c", (x))
#define pchn(x) printf("%c\n", (x))
#define gtl(x) getline(cin, (x))
#define flsh fflush(stdout)
#define sws ios::sync_with_stdio(false); cin.tie(0)
#define gcd __gcd
#define clr(x) memset(x,0,sizeof(x))
#define all(a) (a).begin(), (a).end()
	
/*ll gcd(ll a, ll b)
{
	if(b == 0)
		return a;
	return gcd(b, a%b);
}*/
	
ll modx(ll Base, ll exponent)
{
	ll ans = 1;
	if(Base == 1)
		return Base;
	while(exponent)
	{
		if(exponent & 1)
			ans = (ans * Base)%mod;
		Base = (Base * Base)%mod;
		exponent = exponent >> 1;
	}
	return ans;
}
	
ll inmodx(ll num)
{
	return (modx(num, mod-2LL));
}
	
bool cmp()
{
	return false;
}

bool ch[N];
int subtr[N];
vi v[N];

void dfs(int ver)
{
	ch[ver] = 1;
	int i;
	subtr[ver] = 1;
	fo(i,0,v[ver].size())
	{
		if(!ch[v[ver][i]])
		{
			dfs(v[ver][i]);
			subtr[ver] += subtr[v[ver][i]];
		}
	}
}

int main()
{
	sws;
	int a, b, n, i;
	cin >> n;
	fo(i,1,n)
	{
		cin >> a >> b;
		v[a].pb(b);
		v[b].pb(a);
	}
	dfs(1);
	subtr[1]--;
	fo(i,1,n+1)
		cout << subtr[i] << " ";
	return 0;
}