#include <bits/stdc++.h>

using namespace std;

vector < long long > v;

int binar_search(int lowest, long long value, bool upper){

    int low = lowest, high = v.size(), mid;

    while(high > low){

        mid = low + (high - low) / 2;

        if(upper){          // search for the upper limit of the range

            if(v[mid] > value) high = mid;      
            else low = mid + 1;

        } else {            // search for the lower limit of the range

            if(v[mid] < value) low = mid + 1;
            else high = mid;
        }
    }

    if(!upper) return low;
    return high;
}

int main()
{
    ios::sync_with_stdio(false);cin.tie(0);         // decrease the time for cin, cout

    long long t , l , r;
    long long ans;


    for(long long i = 1; ; i++){        // Generating the triangular number

        long long trianglar = (i * (i + 1)) / 2;
        v.push_back(trianglar);
        if(trianglar > 1e12) break;     // number bigger than constraints
    }


    cin >>   t      ;

    while( t-- ){

        ans = 0;

        cin >> l >> r;

        for(int i = 0; i < v.size() && v[i] <= r; i++){

            ans += binar_search(i , r - v[i], true) - binar_search(i, l - v[i], false);     // subtract upper limit - lower limit
        }

        cout << ans << "\n";
    }

    return 0;
}
