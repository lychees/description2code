#include <bits/stdc++.h>
 
#include <iostream>
#include <vector>
#include <queue>
#include <string>
#include <cstring>
#include <sstream>
#include <set>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
 
#define rep(i,n) for(int i=0;i<(int)(n);++i)
#define iter(a) __typeof(a.begin())
#define FOR(it,a) for(iter(a)it=a.begin();it!=a.end();++it)
#define F first
#define S second
#define SZ(a) (int)((a).size())
#define sz(a) SZ(a)
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define ALL(a) (a).begin(),(a).end()
using namespace std;
 
typedef long long ll;
typedef pair<int,int> PI;
typedef pair<ll,ll> PL;
typedef unsigned long long ull;
 
#ifdef ONLINE_JUDGE
#define PR(...) (void(0))
#else
#define PR(...) do{cerr << "line : " << __LINE__ << ", " << endl; pr(#__VA_ARGS__, __VA_ARGS__);}while(0)
template<class T>
void pr(const string& name, T t){
  cerr << name << ": " << t << endl;
}
template<typename T, typename ... Types>
void pr(const string& names, T t, Types ... rest) {
  auto p = names.find(',');
  cerr << names.substr(0, p) << ": " << t << ", ";
  pr(string(names, p + 1), rest ...);
}
#endif
 
template<class T,class U> ostream& operator<< (ostream& o, const pair<T,U>& v){return o << "(" << v.F << ", " << v.S << ")";}
template<class T> ostream& operator<< (ostream& o, const vector<T>& v){o << "{";rep(i,SZ(v)) o << (i?", ":"") << v[i];return o << "}";}
template<class T,class U> ostream& operator<< (ostream& o, const map<T,U>& v){o << "{";for(const auto& e : v) o << e << ", ";return o << "}";}
template<class T,class U> ostream& operator<< (ostream& o, const unordered_map<T,U>& v){o << "{";for(const auto& e : v) o << e << ", ";return o << "}";}
template<class T> ostream& operator<< (ostream& o, const set<T>& v){o << "{";for(const auto& e : v) o << e << ", ";return o << "}";}
template<class T> string to_s(const T& v){ostringstream is;is << v;return is.str();}
 
const int dx[]={0,1,0,-1,1,1,-1,-1,0};
const int dy[]={1,0,-1,0,-1,1,1,-1,0};

#define endl '\n'


template<int N>
struct Scc{
  /*
    verified
    Yandex.Algorithm.2015 Qualification B.Optimal Playlist
    https://contest.yandex.ru/algorithm2015/contest/1238/run-report/679639/
    https://www.hackerrank.com/contests/indeed-prime-challenge/challenges/course-dilemma/submissions/code/3284651
  */
  
  vector<int> G[N];
  vector<int> rG[N];
  vector<int> vs;
  bool used[N];
  int cmp[N];
  int max_v;
  Scc(): max_v(0){};

  /*********************************************
   // please use init before construction and calc
   *********************************************/
  
  void init(){
    for(int i = 0; i < max_v; ++i){
      G[i].clear();
      rG[i].clear();
    }
    max_v = 0;
  }
  
  void add_edge(int a, int b){
    G[a].push_back(b);
    rG[b].push_back(a);
    max_v = max({max_v, a + 1, b + 1});
  }
  
  void dfs(int v){
    used[v] = true;
    for(auto e : G[v]) if(!used[e]) dfs(e);
    vs.push_back(v);
  }

  void rdfs(int v,int k){
    used[v] = true;
    cmp[v] = k;
    for(auto e : rG[v]) if(!used[e]) rdfs(e, k);
  }
  
  int scc(int n){
    fill(used, used + n, false);
    vs.clear();
    for(int i = 0; i < n; ++i)
      if(!used[i]) dfs(i);
    fill(used, used + n, false);
    int k = 0;
    reverse(vs.begin(), vs.end());
    for(auto v : vs)
      if(!used[v]) rdfs(v, k++);
    return k;
  }
};

Scc<200000 + 10> sc;

int main(int argc, char *argv[])
{
  ios::sync_with_stdio(0);
  cin.tie(0);

  int n, m;
  cin >> n >> m;
  rep(i, m){
    int a, b;
    cin >> a >> b;
    --a, --b;
    sc.add_edge(a, b);
  }

  sc.scc(n);
  map<int, int> app;
  rep(i, n) ++app[sc.cmp[i]];
  
  
  rep(i, n){
    if(i) cout << ' ';
    cout << (app[sc.cmp[i]] > 1 ? 1 : 0);
  }
  cout << endl;
  
}
