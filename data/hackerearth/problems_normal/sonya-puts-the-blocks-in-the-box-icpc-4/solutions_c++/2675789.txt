#include <bits/stdc++.h>

using namespace std;

#define ll long long

int len[102], n, m;
ll arr[102][100100], pre[102][100100], dp[102][100100], dp2[1010][102];

ll solve(int cur, int cb)
{
	if(cur>=m || cb>=n)
		return 0;
	if(dp2[cur][cb]!=-1)
		return dp2[cur][cb];
	int i;
	ll x, ret;
	ret = -1ll<<50;
	ret = solve(cur+1, cb);
	for(i=0; i<=min(len[cb], m-cur); i++){
		x = dp[cb][i]+solve(cur+i, cb+1);
		ret = max(ret, x);
	}
	return dp2[cur][cb] = ret;
}

int main()
{
	//freopen("i.txt", "r", stdin);
	int i, j, k;
	memset(dp2, -1, sizeof(dp2));
	ll x;
	scanf("%d%d", &n, &m);
	for(i=0; i<n; i++){
		scanf("%d", &len[i]);
		//len[i] = 1000;
		pre[i][0] = 0;
		for(j=1; j<=len[i]; j++){
			scanf("%lld", &arr[i][j]);
			//arr[i][j] = 1;
			pre[i][j] = pre[i][j-1]+arr[i][j];
		}
		dp[i][0] = 0;
		for(j=1; j<=min(len[i], m); j++){
			x = -1ll<<50;
			for(k=1; k<=(len[i]-j+1); k++)
				x = max(x, (pre[i][k+j-1]-pre[i][k-1]));
			//cout << i << " " << j << " " << k << " " << x << "\n";
			dp[i][j] = x;
		}
	}
	/*for(i=0; i<n; i++){
		for(j=0; j<=len[i]; j++)
			cout << pre[i][j] << " " << dp[i][j] << " ";
		cout << "\n";
	}*/
	//cout << "1\n";
	ll ans = solve(0, 0);
	/*for(i=0; i<=5; i++){
		for(j=0; j<=5; j++)
			cout << dp2[i][j] << " ";
		cout << "\n";
	}*/
	printf("%lld\n", ans);
	return 0;
}