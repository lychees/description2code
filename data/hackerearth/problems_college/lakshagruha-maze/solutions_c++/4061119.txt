#include"stdio.h"
#include"list"
#include"math.h"
#include"string.h"
using namespace std;
struct point{char x;unsigned int y;};
int sgn(const int a){return a<0?-1:(a==0?0:1);}
void insert(list<point>& v,point p)				{
	while(v.back().x!=p.x||v.back().y!=p.y){
		point q=v.back();
		if(q.x!=p.x)q.x+=sgn(p.x-q.x);
		if(q.y<p.y)q.y<<=1;
		if(q.y>p.y)q.y>>=1;
		v.push_back(q);			}		}
unsigned int reachable[32],mask[32],nextReachable[32];
char A[40][40];;
int main(){
	int T;
	scanf("%d",&T);
	while(T--){
		int N,M,C,K;
		scanf("%d%d%d%d",&M,&N,&C,&K);
		list<point> path[C];
		list<point>::iterator iter[C];
		for(int x=0;x<C;x++)									{
			int l;
			scanf("%d",&l);
			for(int y=0;y<l;y++)				{
				point p;
				int a,b;
				scanf("%u%d",&b,&a);
				b++,a++;
				p.x=a;
				p.y=1u<<b;
				if(y)insert(path[x],p);
				else path[x].push_back(p);		}
			insert(path[x],path[x].front());
			if(path[x].size()>1)path[x].pop_back();
			iter[x]=path[x].begin();							}
		unsigned int targetx,targety,initx,inity;
		for(int x=1;x<=M;x++)					{
			scanf("%s",A[x]+1);
			for(int y=1;y<=N;y++)
				if(A[x][y]=='E')targetx=x,targety=y;
				else if(A[x][y]=='P')initx=x,inity=y;	}
		for(int x=0;x<32;x++)mask[x]=0,reachable[x]=0;
		for(int x=1;x<=M;x++)
			for(int y=1;y<=N;y++)
				mask[x]|=(A[x][y]=='X')?0:1u<<y;
		reachable[initx]=1u<<inity;
		int t=0;
		targety=1u<<targety;
		for(t=0;(!(reachable[targetx]&targety))&&t<K;t++)														{
			for(int x=1;x<31;x++)
				nextReachable[x]=(reachable[x]|(reachable[x]>>1)|(reachable[x]<<1)|reachable[x-1]|reachable[x+1])&mask[x];
			nextReachable[0]=nextReachable[31]=0;
			memcpy(reachable,nextReachable,128);
			for(int ghost=0;ghost<C;ghost++)
			{
				reachable[iter[ghost]->x]&=~(iter[ghost]->y);
				iter[ghost]++;
				if(iter[ghost]==path[ghost].end())iter[ghost]=path[ghost].begin();
				reachable[iter[ghost]->x]&=(~iter[ghost]->y);
			}
																				}
		if(!(reachable[targetx]&targety))t=-1;
		printf("%d\n",t);
	}
} 