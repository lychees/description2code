/*input
4
0 0
0 2
2 2
2 0
*/

#include <bits/stdc++.h>
using namespace std;
#define M 1007
typedef long long ll;

int x[M], y[M];
int main() {
    int N;
    cin >> N;

    for (int i = 0; i < N; i++)
        cin >> x[i] >> y[i];

    /*
      see https://en.wikipedia.org/wiki/Pick%27s_theorem and http://codeforces.com/blog/entry/4838
      pick' theorem says Area = s + b/2 - 1   where s is integer coordinate inside and b on boundry
      so s = Area + 1 - b/2

      Consider the points (x1, y1) and (x2, y2). Let a = |x1 - x2|, b = |y1 - y2|. Then the number 
      of points with integer coordinates on the segment is gcd(a, b) + 1, including points (x1, y1) and (x2, y2).
    */

    ll area = 0LL;
    x[N] = x[0];
    y[N] = y[0];                        //  making circular
    for (int i = 0; i < N; i++) {
        area += (ll)x[i + 1] * y[i] - (ll)x[i] * y[i + 1];
    }

    //  area has twice of actual area value
    ll b = 0LL;
    for (int i = 0; i < N; i++) {
        b += __gcd(abs(x[i] - x[i + 1]), abs(y[i] - y[i + 1]));
    }
    // b += N;
    cout << (area + 2 - b) / 2 << endl;
}