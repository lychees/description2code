#include<iostream>
#include<vector>
#define MAX 400000
#include<cstdio>
using namespace std;
vector< int > vec;
int hsh[100001]={0};
int build(int index , int i , int j ){
	   if( i == j )
	   	{
	   vec[index] = hsh[i];	          
	   return hsh[i];   	
	   }
	 vec[index] = build(2*index,i,(i+j)>>1)+ build(2*index+1,(i+j)/2+1,j);
	 return vec[index];
}
int getsum(int index ,int i,int j,int qs,int qe)
{
	    if(qs > j || qe < i )
	    return 0;
	    if(qs <= i && qe >= j)
	    return vec[index];
	    return getsum(2*index,i,(i+j)/2,qs,qe)+getsum(2*index+1,(i+j)/2+1,j,qs,qe);
}
int update1(int index , int i ,int j , int item)
{
	  if(i > j  ||  item < i || item > j )
	  return 0;
       if( item >= i && item <= j)
	   {
   		  vec[index]++;
     	}	
     	if( i != j )
		 	{
      update1(2*index,i,(i+j)/2,item);
	  update1(2*index+1,(i+j)/2+1,j,item); 	
     	}
}
int update2(int index , int i ,int j , int item)
{
	  if(i > j || item < i || item > j  )
	  return 0;
       if( item >= i && item <= j)
	   {
   		  vec[index]--;
     	}	
     	if( i != j ){
      update2(2*index,i,(i+j)/2,item);
	  update2(2*index+1,(i+j)/2+1,j,item); 	
     	}
}
int main(){
               int n,x;
               scanf("%d",&n);
               while(n--)
			   	{
			   		scanf("%d",&x);
   				hsh[x]++;
   			}           	
   			vec.resize(MAX);
            build(1,1,100000);
  		int q;
  		scanf("%d",&q);
   			while(q--){
			   	int a,b,c;
			   	scanf("%d",&a);
			   	if(a==0)
			   	{
			   		scanf("%d%d",&b,&c);
	   			   printf("%d\n",getsum(1,1,100000,b,c));	
	   			}
	   			else
	   			if(a==1)
	   			{
	   				scanf("%d",&b);
			   		update2(1,1,100000,b);
			   	}
			   	else
			   	{
			   		scanf("%d",&b);
	   				update1(1,1,100000,b);
			   	
	   			}
			   }
			   return 0;
}