// Time erodes gratitude more quickly than it does beauty!
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i = 0, _n = (n); i != _n; i++)
#define rep1(i,a,b) for(int i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(int i = b, _a = (a); i >= _a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define fix(c,sz_val...) c.clear(); c.resize(sz_val);
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int t; cin >> t; rep1(_t,1,t)
#define case(ans) "Case #" << _t << ": " << ans << "\n"
#define cout(d) cout << fixed << setprecision(d)
#define io ios_base::sync_with_stdio(false); cin.tie(NULL);
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1e7 + 7;

int main() {
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    int n, k, x; cin >> n >> k;
    vi a, b;
    rep(i,n) cin >> x, (x > 1024 ? b:a).eb(x);
    sort(all(a)), sort(all(b));
    
    int cnt[2200] = {1}, cnt1[2200];
    for(int p: a) {
        rep(i,2048) cnt1[i] = cnt[i];
        rep(i,2048) cnt1[i ^ p] = (cnt1[i ^ p] + cnt[i]) % mod;
        rep(i,2048) cnt[i] = cnt1[i];
    }
    
    map<int,int> m, mm;
    m[0] = 1;
    for(int q: b) {
        mm = m;
        for(auto r: m) mm[r.X ^ q] = (mm[r.X ^ q] + r.Y) % mod;
        m.swap(mm);
    }
    
    if(k == 0) {
        cout << cnt[0] + m[0] - 1 << endl;
        return 0;
    }
    else {
        int ans(0);
        if(k < 2200) ans = (ans + cnt[k]) % mod;
        if(m.find(k) != m.end()) ans = (ans + m[k]) % mod;
        
        rep(i,2048) if(m.find(k ^ i) != m.end())
            ans = (ans + (ll)(cnt[i] - !i) * (m[k ^ i] - !(k ^ i))) % mod;
        
        cout << ans << endl;
        return 0;
    }
    return 0;
}