#include<stdio.h>
#include <string.h>
#include<iostream>
#define min(X, Y)  ((X) < (Y) ? (X) : (Y))
int Ans=1000000001;
#define MEMSIZE 10000000
int dp[MEMSIZE]={1000000001};
void init()
{
    dp[1] = 0;// trivial case
	for(int i=2;i<MEMSIZE;i++)
	{
		dp[i] = 1+dp[i-1];
		if(i%2==0)
		{
			dp[i] = min(dp[i], dp[i/2]+1);
		}
		if(i%3==0)
		{
			dp[i] = min(dp[i], dp[i/3]+ 1);
		}
	}
}

void Recursion( int distance, int count)
{
	if(distance < MEMSIZE)
	{
		Ans = min( Ans,dp[distance] + count);
		return;
	}
    
    if (distance==1 && count<Ans)
    {
        Ans=count;
        return ;
    }
    
    if(count>=Ans)
        return;
        
    if(distance%3==0)
    {
        Recursion(distance/3,count+1); 
    }
    if(distance%2==0)
    {
        Recursion(distance/2,count+1); 
    }
    Recursion(distance-1,count+1); 
}

int main()
{
	int tc = 0;
	scanf("%d\n", &tc);
    init();
	for (int test_case = 0; test_case < tc; test_case++)
	{
	    int target;
		scanf("%d\n", &target);
		if (target == 1)
		{
			printf("0\n");
			continue;
		}
	   Ans=1000000001;
	   Recursion(target,0);
	   printf("%d\n",Ans);
	}
	return 0;
}

