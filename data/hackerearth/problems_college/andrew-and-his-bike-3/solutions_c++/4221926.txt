// The truth is always either terrible or boring
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define rep1(i,a,b) for(int i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(int i = b, _a = (a); i >= _a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple // remember tie & ignore
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int __t; cin >> __t; rep1(_t,1,__t)
#define case(ans) "Case #" << _t << ": " << ans << "\n"
#define cout(d) cout << fixed << setprecision(d)
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1e9 + 7;
int n, par[100100], cnt[100100];
vi t[100100];

inline void root(int x) {
    vi temp;
    for(int ch: t[x])
        if(ch != par[x])
            temp.eb(ch), par[ch] = x, root(ch);
    t[x] = temp;
}

inline int sz(int x) {
    if(cnt[x]) return cnt[x];
    cnt[x]++;
    for(int ch: t[x])
        cnt[x] += sz(ch);
    return cnt[x];
}

inline int dis(int x) {
    if(!x) return 0;
    return 1 + dis(par[x]);
}

int main() {
//    ios_base::sync_with_stdio(false); cin.tie(NULL);
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    int x, y; cin >> n;
    rep(i,n-1) cin >> x >> y, t[x-1].eb(y-1), t[y-1].eb(x-1);
    root(0);
    rep(i,n) cout << sz(i) - !i << ' ';
    return 0;
}