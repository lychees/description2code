#include<bits/stdc++.h>
#define LL long long int
#define M 1000000007
#define reset(a) memset(a,0,sizeof(a))
#define rep(i,j,k) for(i=j;i<=k;++i)
#define per(i,j,k) for(i=j;i>=k;--i)
#define print(a,start,end) for(i=start;i<=end;++i) cout<<a[i];
#define endl "\n"
using namespace std;
LL dp[100001][4][3][2][2]={0};
LL a[100001];
int main()
    {
        ios_base::sync_with_stdio(0);
        int n,x,y,z,w,i,j,k,l,m,x1,x2,x3,x4;
        cin>>n;
        rep(i,1,n)
        	{
        		cin>>a[i];
        	}
        rep(i,1,n)
        	{
        		x = y = z = w = 0;
        		if(a[i]%8==0)
        			x = 3;
        		else if(a[i]%4==0)
        			x = 2;
        		else if(a[i]%2==0)
        			x = 1;
        		
        		if(a[i]%9==0)
        			y = 2;
        		else if(a[i]%3==0)
        			y = 1;
        		
        		if(a[i]%5==0)
        			z = 1;
        		
        		if(a[i]%7==0)
        			w = 1;
        		//now i have counts of all numbers available so i can build a new solution using this number
        		rep(j,0,3)
        			rep(k,0,2)
        				rep(l,0,1)
        					rep(m,0,1)
        						{
        							dp[i][j][k][l][m] = dp[i-1][j][k][l][m];
        						}
        		dp[i][x][y][z][w]+=1;
        		rep(j,0,3)
        			rep(k,0,2)
        				rep(l,0,1)
        					rep(m,0,1)
        						{
        							x1 = min(x+j,3);
        							x2 = min(y+k,2);
        							x3 = min(z+l,1);
        							x4 = min(w+m,1);
        							dp[i][x1][x2][x3][x4] += dp[i-1][j][k][l][m];
        							if(dp[i][x1][x2][x3][x4]>=M)
        								dp[i][x1][x2][x3][x4]%=M;
        						}
        	}
        	cout<<dp[n][3][2][1][1];
    }
