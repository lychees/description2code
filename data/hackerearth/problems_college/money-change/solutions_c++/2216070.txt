#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <list>
#include <cstdio>
#include <cstring>
#include <cctype>
#include <queue>
#include <set>
using namespace std;

#define trace(x) cerr << #x << "=" << x <<endl;
#define track(x, n) {cerr << #x << ":" << endl; for (int i = 0; i < n; i++) {cerr << x[i] << " ";} cerr << endl;}

#define MAX 100005
#define MOD 4294967143

long long dp[55][350];
bool exist[55][350];

int a[MAX];

long long solve(int i, int n, const int &m)
{
    if (i == m) {
        if (n == 0)
            return 1;
        else
            return 0;
    }
    if (!exist[i][n]) {
        long long answer = 0;
        for (int j = 0; a[i] * j <= n; j++) {
            answer += solve(i+1, n - j * a[i], m);
        }
        dp[i][n] = answer;
        exist[i][n] = true;
    }
    return dp[i][n];
}


int main()
{
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> a[i];
    }
    long long answer = solve(0, n, m);
    cout << answer << endl;
}
