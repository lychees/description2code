#include<bits/stdc++.h>
#define pb push_back
#define rep(i,a,b) for(int i=(int)a;i<(int)b;++i)
#define rrep(i,a,b) for(int i=(int)a;i>=(int)b;--i)
#define ab(a) (a<0)?(-1*a):a
#define pc putchar_unlocked
#define gc getchar_unlocked
#define ll long long int
#define repl(i,a,b) for(ll i=(ll)a;i<(ll)b;++i)
#define rrepl(i,a,b) for(ll i=(ll)a;i>=(ll)b;--i)
#define mset(a,b,c) rep(i,0,b) a[i]=c
#define F first
#define S second
#define mp make_pair
#define clr(x) x.clear()
const ll mod=1000000007;
const double pi=acos(-1.0);
#define itoc(c) ((char)(((int)'0')+c))
#define pll pair<ll,ll>
#define pii pair<int,int>
#define MAX 500010
#define all(p) p.begin(),p.end()
#define maxVal(x,y) (x>y)?x:y
#define minVal(x,y) (x<y)?x:y
#define getMid(s,e) (s+(e-s)/2)
#define mini INT_MIN
#define maxi INT_MAX
#define nline cout<<endl;
using namespace std;
inline void rdi(int &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void rdl(ll &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void print(int a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }
inline void prlong(ll a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }

ll n,p,q,m,ans;
void multiply(ll F[2][2], ll M[2][2]) {
	ll x=((F[0][0]*M[0][0])%mod+(F[0][1]*M[1][0])%mod)%mod;
	ll y=((F[0][0]*M[0][1])%mod+(F[0][1]*M[1][1])%mod)%mod;
	ll z=((F[1][0]*M[0][0])%mod+(F[1][1]*M[1][0])%mod)%mod;
	ll w=((F[1][0]*M[0][1])%mod+(F[1][1]*M[1][1])%mod)%mod;
	F[0][0]=x;
	F[0][1]=y;
	F[1][0]=z;
	F[1][1]=w;
}
void power(ll F[2][2], ll n) {
	if(n==0 or n==1) return;
	ll M[2][2]={{1,1},{1,0}};
	power(F,n/2);
	multiply(F,F);
	if(n%2!=0) multiply(F,M);
}
int fib(ll n) {
	ll F[2][2]={{1,1},{1,0}};
	if(n==0) return 0;
	power(F,n-1);
	return F[0][0];
}
inline ll modPow(int a,int n) {
	ll r=1;
	for(ll x=a;n;n>>=1,x=(x*x)%mod) if(n&1) r=(r*x)%mod;
	return r;
}
int main() {
	int t;
	ll b[50];
	ans=0;
	m=900000001;
	p=0; q=1;
	while(n<m) {
		n=p+q;
		b[ans++]=n;
		p=q;
		q=n;
	}
	rdi(t); while(t--) {
		rdl(n);
		p=0;
		rep(i,1,44) {
			if((p+(b[i]-b[i-1]))<=n) p+=((b[i]-b[i-1])-1);
			else {
				p=b[i-1]+(n-p);
				break;
			}
		}
		q=fib(n);
		ans=(modPow(p,q))%mod;
		prlong(ans);
	}
}