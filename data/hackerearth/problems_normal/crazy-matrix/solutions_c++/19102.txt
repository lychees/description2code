#include<stdio.h>
#include<cstring>
#include<iostream>

using namespace std;

int N;
int deltay1[] = {1,1,0,-1,-1};
int deltax1[] = {0,1,1,1,0};


int deltax2[] = {-1,-1,0,1,1};
int deltay2[] = {0,1,1,1,0};
int mat[104][104];

bool anso = false;
bool dfsOne( int x, int y, int xl, int yl) {
    
    
    if(x == N-1 || (anso == true) ) return (anso = true);
    
   
    for(int i = 0; i < 5; i++) {
        int a = x + deltax1[i];
        int b = y + deltay1[i];
        
    if( (a < N &&  a >= 0 ) && 
        (a != xl || b != yl ) &&
        (b < N &&  b >= 0 ) &&
        (mat[a][b] == 1 )  ) 
        {
                //printf("deltax %d  %d\n", x + deltax1[i], y+deltay1[i] );       
                anso = dfsOne( a, b, x, y);
        }
    
    }
   
    return anso;
}
 
bool anst = false;

bool dfsTwo( int x, int y, int xl, int yl) {
    
    if(y == N-1 || (anst == true) )  return (anst = true);
    

    for(int i = 0; i < 5; i++) {
     int a = x+deltax2[i];
     int b = y+deltay2[i];
    if( ( a< N && a>= 0)&&    (a != xl || b != yl)&&
        (b < N && b >= 0)&&   (mat[a][b] == 2 )  ) 
        {
            //printf("delta %d  %d", x + deltax2[i], y+deltay2[i] );
            anst = dfsTwo( a, b, x, y);
            
        }
    }
    return anst;
    
} 


int main() {
        bool isOne = false;
        bool isTwo = false;
        scanf("%d", &N);
        
        for(int i = 0; i < N; i++)
            for(int j =0; j < N; j++) 
                scanf("%d", &mat[i][j]);
        /*
        for(int i = 0; i < N; i++)
            for(int j =0; j < N; j++) 
                printf("%d ", mat[i][j]);
        */   
        
        for(int j = 0; j < N; j++) {
            if( mat[0][j] == 1){
                isOne = dfsOne(0, j, 0, j-1);    
                if(isOne) break;
            }
        }
        
        
        
        for(int i = 0; i < N; i++) {
            if( mat[i][0] == 2){
                isTwo = dfsTwo(i, 0, i-1, 0);    
                if(isTwo) break;
            }
        }
        
        
        if(isOne && isTwo ) {
            puts("AMBIGUOUS");
        }
        else if(isOne){
            puts("1");
        }
        else if(isTwo){
            puts("2");
        }
        else{
            puts("0");
        }
    return 0;
} 