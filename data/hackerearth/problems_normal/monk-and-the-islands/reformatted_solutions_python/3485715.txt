def bfs(x):
    # an array of false flags to keep track of vertices visited
    b = [False]*(n+1)
    # memo=[-1]*(n+1)
    global memo
    found = False

    q = []
    q.append(x)
    memo[x] = 0
    while len(q) != 0 and not found:
        # t=s[-1]
        top = q.pop(0)
        # print "top",top
        # l=t
        b[top] = True
        # q.pop(0)
        for j in G[top]:
            # print "j",j
            if not b[j]:
                if b[j] == n:
                    memo[j] = 1+memo[top]
                    found = True

                q.append(j)
                memo[j] = 1+memo[top]
                b[j] = True
    return memo[n]


t = input()
while t != 0:
    n, m = map(int, raw_input().split())
    G = {i: [] for i in xrange(1, n+1)}
    memo = [-1]*(n+1)
    memo[0] = 0
    p = m
    while p != 0:
        x, y = map(int, raw_input().split())
        G[x].append(y)
        G[y].append(x)
        p -= 1
    print bfs(1)
    t -= 1

    # print memo[i]
