#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
typedef vector<int> vi;
typedef vector<vi> vvi;
vector<int> start;
vector<int> stop;
vector<vi> adj;
vi visited;
int fillStartStop(int st,int n){
	visited[n]=1;
	start[n]=st;
	st++;
	for(int j:adj[n])
	if(!visited[j])
	st=fillStartStop(st,j);
	stop[n]=st;
	return st;
	
}
int isChild(int x, int y){
	return start[y]>=start[x] &&start[y]<stop[x];
}
int main()
{
	ios_base::sync_with_stdio(0);
int n; cin>>n;
start=vi(n);
stop=vi(n);
adj=vvi(n);
visited=vi(n);
for(int i=0;i<n-1;i++){
	int a,b ; cin>>a>>b;
	a--;b--;
	adj[a].push_back(b);
	adj[b].push_back(a);
	
}
fillStartStop(0,0);
//for(int i=0;i<n;i++)
//cout<<i<<" "<<start[i]<<" "<<stop[i]<<endl;
int q; cin>>q;
vi res;
while(q--){
	char op;
	int x,y;
	cin>>op>>x>>y;
	if(op=='1')swap(x,y);
	res.push_back(isChild(x-1,y-1));

}
for(int i=0;i<res.size();i++)
	if(res[i])
		cout<<"YES\n";
	else
			cout<<"NO\n";
return 0;
}
