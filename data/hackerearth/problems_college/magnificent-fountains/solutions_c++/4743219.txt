//https://www.hackerearth.com/problem/algorithm/magnificent-fountains/
#include <bits/stdc++.h>
using namespace std;
 
int main()
{
 
	int T;
	cin>>T;
	for(int i = 0; i<T; i++){
		int n;
		cin>>n;
		int fount[n];
		int max = 0;
		for(int j = 0; j <  n; j ++){
			cin>>fount[j];
			if(fount[j] > max)
				max = fount[j];
		}
		long long int lcm = 1;
		int p = 2;
		int flag = 1;
		while(p<=max){
			while(flag == 1){
				flag = 0;
				for(int k = 0; k < n; k++){
					if((fount[k] % p) == 0){
						//cout<<p<<" "<<fount[k]<<endl;
						fount[k] = fount[k]/p;
						flag = 1;
					}
				}
				if(flag == 1)
					lcm = ((lcm % 1000000007) * (p % 1000000007)) % 1000000007;
				else
					break;
			}
			flag = 1;			
			p++;
		}
	cout<<lcm<<endl;
	}
	
}