/*
 * AHE.cpp
 *
 *  Created on: 10-Nov-2014
 *      Author: nikhil
 */




/*
 * codeJam.cpp
 *
 *  Created on: 19-Oct-2014
 *      Author: nikhil
 */




#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include <string>
#include <algorithm>
#include <sstream>
#include <map>
#include <cmath>
#include <set>
#include <cstring>
#include <bitset>
using namespace std;
#define x first
#define y second
#define VI vector<int>
#define pii pair<int,int>
#define inf 1000000000
#define L(s) ((int)(s).size())
#define pb push_back
#define mp make_pair
#define all(s) (s).begin(), (s).end()
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define RREP(i, a, b) \
for (int i = int(a); i >= int(b); i--) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define ghei(i)\
scanf("%d",&i)
#define ghel(i)\
scanf("%lld",&i)
#define ghes(i)\
scanf("%s",&i)
#define INF 2000000000 // 2 billion
// If you need to recall how to use memset:
#define MEMSET_INF 127 // about 2B
#define MEMSET_HALF_INF 63 // about 1B
//memset(dist, MEMSET_INF, sizeof dist); // useful to initialize shortest path distances
//memset(dp_memo, -1, sizeof dp_memo); // useful to initialize DP memoization table
string num;
int cnt[11];
bool fun(ll num) {
	if(num==4 || num == 7)return true;
	if(num<10 && num>=0)return false;
	memset(cnt,0,sizeof(cnt));
	while(num>0) {
			cnt[num%10] ++;
			num = num/(ll)10;
		}
		for(int i=0;i<10;i++){
			if(i==4 || i==7) continue;
			if(cnt[i]!=0){
				return false;
			}
		}

		return fun(cnt[4]+cnt[7]);
}
void proc(){
	memset(cnt,0,sizeof(cnt));
	cin>>num;
	for(int i=0;i<num.length();i++){
		cnt[num[i]-'0'] ++;
	}

	if(fun(cnt[4]+cnt[7])){
		cout<<"YES"<<endl;
	}
	else cout<<"NO"<<endl;
}
int main() {
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int t;
	cin>>t;
	while(t--) {
		proc();
	}
}




