#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#define MAX 1000001
#define FOR(i, n) for( int (i)=0; (i)<(n); (i)++)
#define FOR1(i, n) for( int (i)=1; (i)<=(n); (i)++)


using namespace std;

vector<int> adj[MAX];
pair <int, int> bad_edge[MAX];
bool vis[MAX];
int T, N, K; 
int cc =0;
int CC[MAX];


void dfs(int s)
{
	vis[s] = true;
	CC[s] = cc;
	FOR(i,adj[s].size()) if(!vis[adj[s][i]]) dfs(adj[s][i]);
	
}

int main() {
	
	int a, b;
	int ans = 1;
	string reltn;
	cin >> T;
	
	while(T--)
	{
		cin >> N >> K;
        FOR1(i,N)
		{
			adj[i].clear();
		}
		
		int bd = 0;	
		cc = 0;
		memset(vis,false,sizeof(vis));	
		memset(CC,0,sizeof(CC));
				
		FOR1(i,K)
		{
			cin >> a >> reltn >> b;
			if(reltn == "=")
			{
				adj[a].push_back(b);
				adj[b].push_back(a);
			}
			else if(reltn == "!=")
			{
				bd++;
			    bad_edge[bd] = make_pair(a,b);
				
			}
			
		}
		
		FOR1(i,N)
		{
			if(!vis[i]) ++cc, dfs(i);
		}
		
		ans = 1;
		
		FOR1(i,bd)
		{
			if(CC[bad_edge[i].first] == CC[bad_edge[i].second]) 
			{
				ans = 0; break;
			}
		}
		
		if(ans == 1) cout << "YES\n";
		if(ans == 0) cout << "NO\n";
		
	}
	
	
	return 0;
}