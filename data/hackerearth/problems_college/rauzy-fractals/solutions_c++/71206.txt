#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<cctype>
#include<algorithm>
using namespace std;
#define pb push_back
#define mp make_pair
#define cin(n) scanf("%d",&n)
#define gc getchar_unlocked
typedef vector<int> VI;
int fcin(){register int c = gc();int x = 0;for(;(c<48 || c>57);c = gc());for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}return x;}
#define mod 1000003
//matrix module starts
typedef vector<vector<int> > VVI;
VVI iden(int n){
	VVI arr; 
	arr.resize(n); 
	for(int i=0;i<n;i++){
		arr[i].resize(n,0);
		arr[i][i] = 1; 
	}
	return arr;
}
VVI mul(VVI A,VVI B){
	int a = A.size(); 
	int c = B.size(); 
	int b = B[0].size();
	VVI res; 
	res.resize(a);
	for(int i=0;i<a;i++)res[i].resize(b); 
	for(int i=0;i<a;i++){
		for(int j=0;j<b;j++){
			res[i][j] = 0; 
			for(int k=0;k<c;k++){
				res[i][j] = (res[i][j] + (A[i][k]*1ll*B[k][j])%mod)%mod;
			}
		}
	}
	return res;  
}
VVI pow(VVI A,int n){
	int sz = A.size(); 
	VVI res = iden(sz); 
	while (n) {
		if(n&1){
			res = mul(res,A);
		}
		n >>= 1; 
		A = mul(A,A);
	}
	return res; 
}
void print(VVI a){
	for(int i=0;i<a.size();i++){
		for(int j=0;j<a[i].size();j++)cout << a[i][j] <<" " ; cout << endl;
	}
}
// matrix module ends
vector<VI> base; 
vector<VI> fac;
int n;
int main(){
 	base.resize(1);
	base[0].resize(4);
	fac.resize(4);
	fac[0].resize(4,0);
	fac[1].resize(4,0);
	fac[2].resize(4,0);
	fac[3].resize(4,0);
	fac[1][0] = fac[2][1] = fac[0][2] = fac[1][2] = fac[2][2] = 1;
	for(int i=0;i<4;i++)fac[i][3] =1;
	int t = fcin(); 
	while (t--) {
		base[0][0] = fcin(); 
		base[0][1] = fcin(); 
		base[0][2] = fcin(); 
		base[0][3] = (base[0][0]+base[0][1]+base[0][2])%mod;
		n = fcin(); 
		if(n == 1)cout << base[0][0] << endl; 
		else if (n  == 2)cout << (base[0][1]+base[0][2])%mod << endl; 
		else {
			base = mul(base,pow(fac,n-3));
			cout << base[0][3] << endl;
		}
	}
}