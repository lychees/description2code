#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e5+10;
int h[mx],o[mx];
int upw[mx],dwn[mx];
int f[mx],g[mx];

void updUpw(int i,int v){
   for(++i;i<mx;i+=(i&-i))upw[i]=max(upw[i],v);
}
int qryUpw(int i){
   int ans=0;
   for(++i;i>0;i-=(i&-i))ans=max(ans,upw[i]);
   return ans;
}
void updDwn(int i,int v){
   for(i=mx-1-i;i<mx;i+=(i&-i))dwn[i]=max(dwn[i],v);
}
int qryDwn(int i){
   int ans=0;
   for(i=mx-1-i;i>0;i-=(i&-i))ans=max(ans,dwn[i]);
   return ans;
}

int main(){
   int t,n;
   scanf("%d",&t);
   while(t--){
      memset(upw,0,sizeof upw);
      memset(dwn,0,sizeof dwn);
      scanf("%d",&n);
      for(int i=0;i<n;i++){
         scanf("%d",h+i);
         o[i]=h[i];
      }
      sort(o,o+n);
      int c=unique(o,o+n)-o;
      for(int i=0;i<n;i++){
         int idx=lower_bound(o,o+c,h[i])-o;
         h[i]=idx;
      }
      int ans=1;
      for(int i=n-1;i>=0;i--){
         f[i]=1+qryDwn(h[i]);
         g[i]=1+qryUpw(h[i]);
         updUpw(h[i],f[i]);
         updDwn(h[i],g[i]);
         ans=max(f[i],g[i]);
      }
      printf("%d\n",ans);
   }
   return 0;
}

