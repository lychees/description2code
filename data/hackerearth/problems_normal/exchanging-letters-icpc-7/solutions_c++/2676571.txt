#include <iostream>
#include <fstream>
#include <cstdio>
#include <math.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <climits>
#include <stack>
#include <queue>
#include <set>
#include <map>
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a>b?b:a
#define FOR(i,n) for(int i=0;i<n;i++)
#define FOR_X(i,x,n) for(i=x;i<n;i++)
#define BACK(i,n) for(i=n;i>=0;i--)
#define BACK_X(i,n,x) for(i=n;i>=x;i--)
#define fill(a,v) memset(a,v,sizeof(a))
#define gcd(a,b) __gcd(a,b)
#define lcm(a,b) a*b/gcd(a,b)
#define pb push_back
#define pp pair<int,int>
typedef long long int lld;
using namespace std;
const int mod=1e9+7;
int dp[2001][5002],a[2002];
int n,k,diff,off;
int rec(int x, int sum){
	if( x==k ){
		if( sum==diff) return 1;
		else return 0;
	}
	else if(  dp[x][sum+off]!=-1 ) return dp[x][sum+off];
	dp[x][sum+off]= (rec(x+1,sum+1) + rec(x+1,sum-1) )%mod;
	return dp[x][sum+off];
}
int main()
{
	ios_base::sync_with_stdio(0); //dont use with EOF
	int t;
	cin>>n>>k>>t;
	int sum=0;
	off=2005;
	FOR(i,k){
		cin>>a[i];
		sum+=a[i];
	}
	if( abs(sum-t) > k ) cout<<"0\n";
	else{
		diff= t-sum;
		fill(dp,-1);
		cout<<rec(0,0)<<endl;
	}
	return 0;
}