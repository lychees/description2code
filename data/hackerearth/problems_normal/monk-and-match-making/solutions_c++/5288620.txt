#include <bits/stdc++.h>
using namespace std;

int main()
{
	char s[100000+50];
    cin>>s;
 //   string s;
 //   cin>>s;
    
 //   long long int base = 211;
 //   long long int mod= 1e9+7;
 //   int mod1=1e9+7, mod2=1e9+9;
    
 //   long long int hash1[s.length()+1];
 //   long long int hash2[s.length()+1];

	// for(int i=0;i<=s.length();i++)
	// 	hash1[i]=hash2[i]=0;
    
 //   hash1[0]=hash2[0]=s[0];
 //   for(int i=1;i<s.length();i++){
 //   	hash1[i]=(base*(hash1[i-1]))%mod1+s[i];
 //   	hash1[i]%=mod1;
    	
 //   	hash2[i]=(base*(hash2[i-1]))%mod2+s[i];
 //   	hash2[i]%=mod2;
 //   }
    
    int Q;
    cin>>Q;
    while(Q--){
    	int L1, R1, L2, R2;
    	cin>>L1>>R1>>L2>>R2;
    	L1--;	R1--;
    	L2--;	R2--;
    	// long long int sa1=(L1==0)?hash1[R1]:(hash1[R1]-hash1[L1-1]);
    	// long long int sa2=(L1==0)?hash2[R1]:(hash2[R1]-hash2[L1-1]);
    	
    	// long long int sb1=(L2==0)?hash1[R2]:(hash1[R2]-hash1[L2-1]);
    	// long long int sb2=(L2==0)?hash2[R2]:(hash2[R2]-hash2[L2-1]);
    	
    	// if(sa1==sb1 && sa2==sb2)
    	if(memcmp(s+L1, s+L2, R1-L1+1)==0 && (R1-L1+1)==(R2-L2+1))
    	
    		cout<<"Yes"<<endl;
    	else
    		cout<<"No"<<endl;
    }
    
    return 0;
}
