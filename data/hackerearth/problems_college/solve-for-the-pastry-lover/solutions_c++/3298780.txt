#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <string.h>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <fstream>
//#define _LOCAL_
#ifdef _LOCAL_
#include "testlib.h"
/* rnd */
#endif

using namespace std;

template<class T> inline T cabs(const T &x) { return x > 0 ? x : (-x); }
template<class T> inline T gcd(const T &x, const T &y) { return (y == 0) ? x : gcd(y, x % y); }
template<class T> inline T sgn(const T &x) { return (x > 0) - (x < 0); }

#define dbg(x) cout << #x << " = " << (x) << endl
#define dbg2(x,y) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << endl
#define dbg3(x,y,z) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << ", " << #z << " = " << (z) << endl
#define dbg4(x,y,z,w) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << ", " << #z << " = " << (z) << ", " << #w << " = " << w << endl

#define out(x) cout << (x) << endl
#define out2(x,y) cout << (x) << " " << (y) << endl
#define out3(x,y,z) cout << (x) << " " << (y) << " " << (z) << endl
#define out4(x,y,z,w) cout << (x) << " " << (y) << " " << (z) << " " << (w) << endl

struct node {
    int ind, val;
    inline bool operator<(const node &s) const {
        if( val != s.val )
            return val < s.val;
        return ind < s.ind;
    }
    inline void in(const int &_ind) {
        ind = _ind;
        scanf("%d", &val);
    }
};

vector<node> vn;
char str[1000000];

void run()
{
    vn.clear();
    int n;
    scanf("%d", &n);
    node now;
    gets(str); gets(str);
    for(int i = 0; i < n; i ++) {
        now.ind = i;
        now.val = str[i] - '0';
        vn.push_back(now);
    }
    sort(vn.begin(), vn.end());
    int ans = -1;
    for(int i = 1; i < (int)vn.size(); i ++) {
        if( vn[i].val >= 0 && vn[i].val <= 9 && vn[i].val == vn[i - 1].val ) {
            if( ans == -1 || ans > vn[i].ind - vn[i - 1].ind )
                ans = vn[i].ind - vn[i - 1].ind;
        }
    }
    printf("%d\n", ans);
}

int main()
{
    //freopen("data.in", "r", stdin);
    int nt;
    scanf("%d", &nt);
    for(; nt > 0; nt --) run();
    return 0;
}
