

def sieve(n):

    isPrime = [True] * (n+1)
    isPrime[0] = False
    isPrime[1] = False

    i = 2
    for i in range(2, int(n**0.5)+2):
        if isPrime[i]:
            j = i ** 2
            while j <= n:
                isPrime[j] = False
                j += i

    return isPrime


def exponentiation(a, b, c):

    ans = 1

    while b:

        if b & 1:
            ans *= a
            ans %= c

        a *= a
        a %= c
        b >>= 1

    return ans


def factors(n):
    if n == 1:
        return 1

    cnt = 2

    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            if i**2 == n:
                cnt += 1
            else:
                cnt += 2

    return cnt


def sieve(n):

    isPrime = [True] * (n+1)
    isPrime[0] = False
    isPrime[1] = True

    i = 2
    for i in range(2, int(n**0.5)+2):
        if isPrime[i]:
            j = i ** 2
            while j <= n:
                isPrime[j] = False
                j += i

    return isPrime


isPrime = sieve(10 ** 7)


N = input()

for i in range(N):

    x = input()

    sqrtX = int(x**0.5)
    if isPrime[x]:
        print 'NO'
    elif sqrtX**2 == x and isPrime[sqrtX]:
        print 'NO'
    else:
        print 'YES'
