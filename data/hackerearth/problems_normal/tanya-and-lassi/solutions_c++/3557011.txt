#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

long memo[10010];
long price[10010];
long recurse(int l) {
	if (l == 0) return 0;
	if (memo[l] != -1 ) return memo[l];
	long maxi = 0;
	for (int i = 1; i <= l; i++) maxi = max(maxi, recurse(l-i) + price[i]);
	return memo[l] = maxi;
}
int main()
{
	int T;
	for(cin >> T; T; T--) {
		memset(memo, 0, sizeof(memo));
		memset(price, 0, sizeof(price));
		int l; cin >> l;
		for (int i = 1; i <= l; i++) scanf("%lld", &price[i]);
		//cout << recurse(l)<<"\n";
		for(int i = 1; i <=l; i++) {
			for (int j = 0; j <= i; j++) memo[i] = max(memo[i], memo[j] + price[i-j]);
		}
		cout << memo[l]<<"\n";
	}
	return 0;
}
