#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <limits>

using namespace std;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);

    int T;
    cin >> T;
    for(int ti = 0; ti < T; ti++){
        int n;
        long long k;
        cin >> n >> k;
        vector<long long> prices(n), tasks(n);

        vector<pair<int, int>> input(n);
        for(auto& e : input) cin >> e.first;
        for(auto& e : input) cin >> e.second;
        sort(input.begin(), input.end());
        for(int i = 0; i < n; i++){
            prices[i] = input[i].first;
            tasks[i] = input[i].second;
        }
        



        vector<long long> dp(n + 1, numeric_limits<long long>::max());
        dp[n] = 0;
        for(int begin = n - 1; begin >= 0; begin--){
            long long num_tasks = 0;
            for(int end = begin; end < n; end++){
                num_tasks += tasks[end];
                dp[begin] = min(dp[begin], (num_tasks + k) * prices[end] + dp[end + 1]);
            }
        }
        
        cout << dp[0] << '\n';
    }
}
