# -------------------------------------------------------------------------------
def loadInput():

    rows, columns = str(raw_input()).split()
    rows, columns = int(rows), int(columns)
    start_x, start_y = str(raw_input()).split()
    start_x, start_y = int(start_x), int(start_y)
    end_x, end_y = str(raw_input()).split()
    end_x, end_y = int(end_x), int(end_y)
    p = int(raw_input())

    return (rows, columns, start_x, start_y, end_x, end_y, p)


def computeCost(rows, columns, start_x, start_y, end_x, end_y, p):
    cost_x = min(abs(end_x - start_x), rows - abs(end_x - start_x))
    cost_y = min(abs(end_y - start_y), columns - abs(end_y - start_y))
    tot_cost = (cost_x + cost_y) * p
    return tot_cost


def main():
    tc = int(raw_input())
    while tc > 0:
        tc -= 1
        (rows, columns, start_x, start_y, end_x, end_y, p) = loadInput()

        total_cost = computeCost(
            rows, columns, start_x, start_y, end_x, end_y, p)

        if total_cost <= 1000:
            msg = 'You saved the group.'
        else:
            msg = 'Let go of the group.'

        print total_cost
        print msg


if __name__ == '__main__':
    main()
