#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cctype>
#include <cstdlib>
#include <bitset>
#include <vector>
#include <list>
#include <deque>
#include <queue>
#include <map>
#include <set>
#include <stack>
#include <cmath>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <complex>
#include <functional>
#include <climits>
#include <cassert>
#include <iterator>
#include <math.h>
#include <time.h>
#include <string.h>

using namespace std;

#define bit(n) (1<<(n))
#define inf 1000000000
#define eps 1e-9
#define PI 3.1415926535897932385
#define pb push_back
#define sz size()
#define mp make_pair
#define cl clear()
#define all(a) a.begin(),a.end()
#define fill(ar,val) memset(ar,val,sizeof(ar))
#define MIN(a,b) if(a>(b)) a=(b)
#define MAX(a,b) if(a<(b)) a=(b)
#define sqr(x) ((x)*(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define MOD 1000000007

const int N = 101000;

using namespace std;

double area(int a1,int b1,int a2,int b2,int a3,int b3)
{
    return fabs((a1*(b2-b3) + a2*(b3-b1) + a3*(b1-b2)) / 2.0);
}

int ins(int a1,int b1,int a2,int b2,int a3,int b3,int x1,int y1)
{
    double ABC = area(a1,b1,a2,b2,a3,b3);
    double ABP = area(a1,b1,a2,b2,x1,y1);
    double APC = area(a1,b1,x1,y1,a3,b3);
    double PBC = area(x1,y1,a2,b2,a3,b3);
    
    if(ABC == ABP + APC + PBC)
    {
        return 1;
    }
    else{
        return 0;
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    int t,a1,a2,a3,b1,b2,b3,x1,y1;
    cin >> t;
    while(t--)
    {
        cin >> a1>>b1>>a2>>b2>>a3>>b3>>x1>>y1;
        if(ins(a1,b1,a2,b2,a3,b3,x1,y1))
        {
            cout<<"INSIDE"<<endl;
        }
        else
        {
                cout<<"OUTSIDE"<<endl;
        }
    }
    

    return 0;
}
