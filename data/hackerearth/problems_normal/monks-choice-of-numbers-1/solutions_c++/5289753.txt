#include <bits/stdc++.h>
using namespace std;

struct Node {
	int num;
	int bits_set;
};

int setBits(int num) {
	if(num == 0)	return 0;
	int count = 0;
	while(num & (num - 1)) {
		count++;
		num &= (num - 1);
	}
	return ++count;
}

int compare(const void* a, const void* b) {
	if (((Node*)a)->bits_set > ((Node*)b)->bits_set) {
		return -1;
	} else if(((Node*)a)->bits_set == ((Node*)b)->bits_set) {
		return 0;
	}
	return 1;
}

int main() {
	std::ios::sync_with_stdio(false);
	int t;
	cin >> t;
	while(t--) {
		int n, k;
		cin >> n >> k;
		Node nums[n];
		for(int i = 0; i < n; ++i) {
			cin >> nums[i].num;
			nums[i].bits_set = setBits(nums[i].num);
		}
		qsort(nums, (size_t)n, sizeof(nums[0]), compare);
		int cheeseCakes = 0;
		for(int i = 0; i < k; i++) {
			cheeseCakes += nums[i].bits_set;
		}
		cout << cheeseCakes << "\n";
	}
	return 0;
}