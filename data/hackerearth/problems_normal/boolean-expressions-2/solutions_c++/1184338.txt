#include <bits/stdc++.h>

using namespace std;
 
int main()
{
    string s,op ;
    cin >> s >> op ;

    int n = s.length();
    char symb[s.length()];
    strcpy(symb, s.c_str());
    
    char oper[op.length()];
    strcpy(oper, op.c_str());
    
    long long F[n][n], T[n][n];
 
    for (int i = 0; i < n; i++)
    {
        F[i][i] = (symb[i] == '0')? 1: 0;
        T[i][i] = (symb[i] == '1')? 1: 0;
    }

    for (int gap=1; gap<n; ++gap)
    {
        for (int i=0, j=gap; j<n; ++i, ++j)
        {
            T[i][j] = F[i][j] = 0;
            for (int g=0; g<gap; g++)
            {
                
                int k = i + g;
 
                long long tik = T[i][k] + F[i][k];
                long long tkj = T[k+1][j] + F[k+1][j];
 
                if (oper[k] == 'a')
                {
                    T[i][j] += T[i][k]*T[k+1][j];
                    F[i][j] += (tik*tkj - T[i][k]*T[k+1][j]);
                }
                if (oper[k] == 'o')
                {
                    F[i][j] += F[i][k]*F[k+1][j];
                    T[i][j] += (tik*tkj - F[i][k]*F[k+1][j]);
                }
                if (oper[k] == 'x')
                {
                    T[i][j] += F[i][k]*T[k+1][j] + T[i][k]*F[k+1][j];
                    F[i][j] += T[i][k]*T[k+1][j] + F[i][k]*F[k+1][j];
                }

                T[i][j] = T[i][j]%1000000009 ;
                F[i][j] = F[i][j]%1000000009 ;

            }
        }
    }

    
    int query ;
    cin >> query ;

    for (int i = 0; i < query; ++i)
    {
        int l,r;
        string value ;
        cin >> l >> r >> value ;

        if(value=="true")
        {
            cout << T[l-1][r-1] << endl ;
        }

        else if(value=="false")
        {
            cout << F[l-1][r-1] << endl ;
        }

    }
    return 0;
}