#include<iostream>
#include<queue>
int inf=1000000000;
using namespace std;
class Pair{
public:
int first;
int second;
};
int main()
{
int t;
cin>>t;
while(t--)
{
int m,n;
cin>>m>>n;
int Va[m+1][n+1];
for(int i=1;i<=m;i++)
for(int j=1;j<=n;j++)
cin>>Va[i][j];
int ex,ey,t;
cin>>ex>>ey>>t;
int Path[m+1][n+1];
for(int i=0;i<=m;i++)
for(int j=0;j<=n;j++)
Path[i][j]=inf;
queue<Pair>q;
Pair p;	
p.first=1;
p.second=1;
q.push(p);
Path[1][1]=0;
while(!q.empty())
{
int x=q.front().first;
int y=q.front().second;
q.pop();
if(Path[x+1][y]>Path[x][y]+Va[x][y]&&x+1<=m)
{
Pair e;
e.first=x+1;
e.second=y;
q.push(e);
Path[x+1][y]=Path[x][y]+Va[x][y];
}
if(Path[x][y+1]>Path[x][y]+Va[x][y]&&y+1<=n)
{
Pair e;
e.first=x;
e.second=y+1;
q.push(e);
Path[x][y+1]=Path[x][y]+Va[x][y];
}	
if(Path[x-1][y]>Path[x][y]+Va[x][y]&&x-1>=1)
{
Pair e;
e.first=x-1;
e.second=y;
q.push(e);
Path[x-1][y]=Path[x][y]+Va[x][y];
}
if(Path[x][y-1]>Path[x][y]+Va[x][y]&&y-1>=1)
{
Pair e;
e.first=x;
e.second=y-1;
q.push(e);
Path[x][y-1]=Path[x][y]+Va[x][y];
}	
}
int left=t-(Path[ex][ey]+Va[ex][ey]);
if(left>=0)
{
cout<<"YES"<<endl;
cout<<left<<endl;
}
else
cout<<"NO"<<endl;
}
}