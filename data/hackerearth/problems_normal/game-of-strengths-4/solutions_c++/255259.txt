#include<iostream>
#include<math.h>
#include<algorithm>
using namespace std;
long long int mod=1000000007;
int compare (const void * a, const void * b)
{
  return ( *(long long int*)a - *(long long int*)b );
}
long long  AbsDiff(long long a[], long long n)
{
  if ( n < 2 ) return 0;
  //sort(a,a+n);  
  qsort (a, n, sizeof(long long int), compare);   
  long long sum = 0;
  long long i;
 for(i=0;i<n/2;i++)
       {
            sum=sum+(((n- 2*i -1)%mod)*(a[n-i-1] - a[i]))%mod;
       }
  return sum;
}
#include <iostream>

long long bigMod(long long a, long long  b, long long c) {
    if (a == 0 || b == 0) {
        return 0;
    }
    if (a == 1) {
        return b;
    }
    if (b == 1) {
        return a;
    } 

    // Returns: (a * b/2) mod c
    long long a2 = bigMod(a, b / 2, c);

    // Even factor
    if ((b & 1) == 0) {
        // [((a * b/2) mod c) + ((a * b/2) mod c)] mod c
        return (a2 + a2) % c;
    } else {
        // Odd exponent
        // [(a mod c) + ((a * b/2) mod c) + ((a * b/2) mod c)] mod c
        return ((a % c) + (a2 + a2)) % c;
    }
}

int main()
{
	int t;
	long long arr[100000];
	long long n,sum,max,res;
	long long x,temp,i;
	scanf("%d",&t);
	while(t--)
	{
		//cin>>n;
		scanf("%lld",&n);
		max=0;sum=0;
		for(i=0;i<n;i++)
		{
		 scanf("%lld",&arr[i]);
		 if(arr[i]>max) max=arr[i];
		}
		long long res=AbsDiff(arr,n);
		
		printf("%lld",bigMod(res,max,mod));
		printf("\n");
	}
	return 0;
}