#include <iostream>
#include <vector>
#include<sstream>
inline int scan_d() { int ip = getchar_unlocked(), ret = 0, flag = 1;for (;ip<'0' || ip>'9';ip = getchar_unlocked())if (ip == '-') { flag = -1;ip = getchar_unlocked();break; }for (;ip >= '0'&&ip <= '9';ip = getchar_unlocked())ret = ret * 10 + ip - '0';return flag*ret;}
using namespace std;

void call(vector<int>& dp, int n,int y){
	for(int i=2;(i*n)<=y;i++)
		dp[i*n] = 1;
}

int main()
{
    vector<int> dp(1000005);
    vector<int> primes;
	for(int i=2;i<=1000000;i++){
	    		if(dp[i]==0){
	    			primes.push_back(i);
	    			call(dp,i,1000000);
	    		}
	}
	int t;
	t = scan_d();
	while(t--){
		int n;
		n = scan_d();
		if(dp[n]==0){
			cout<<"2^0"<<endl;
			continue;
		}
		stringstream ans;
		for(int i=0,l=primes.size();n>0&&i<l;i++){
			int count = 0;
			while(n>0&&(n%primes[i]==0)){
				count++;
				n /= primes[i];
			}
			if(count==0&&primes[i]==2)
				ans << "2^0*";
			else if(count>0){
				ans << primes[i];
				ans << "^";
				ans<< count;
				if(n>1)
				ans << "*";
			}
				
		}
		cout<<ans.str()<<endl;
	}
    return 0;
}
