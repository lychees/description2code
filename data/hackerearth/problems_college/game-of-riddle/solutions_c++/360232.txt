#include <iostream>
#include <algorithm> 
#include <vector>
#define PB push_back

using namespace std;

void hobbits(int n, vector<int> val)
{
	int min_index = 8;
	int min_val = val[8];
	//cout<<"min_val1 = "<<min_val<<endl;
	for(int j=7; j>=0; j--)
	{
		if(val[j] < min_val)
		{
			min_index = j;
			min_val = val[j];
		}
	}
	//cout<<"min_val = "<<min_val<<endl;
	//cout<<"min_index = "<<min_index<<endl;
	//cout<<"val[8] = "<<val[8]<<endl;
	
	/*
	int min_index = min_element(val.begin(), val.end()) - val.begin();
	int min_val = val[min_index];
	//*/
	
	vector<int> output;
	
	int nod = n/min_val;

	if(nod == 0)
	{
		cout<<"-1";
		return;
	}

	if(min_index == 8)
	{
		for(int i = 0; i<nod; i++)
			cout<<9;
		return;
	}	

	
	int total = min_val * nod ;	

	int left = n - total;
	
	
	for(int i = 0 ; i<nod; i++)
		output.PB(min_index+1);
		
	//int temp = 9;
	
	for(int i = nod-1; i >= 0; i--)
	{
		if(left == 0)
			break;
		for(int j=9; j>1; j--)
		{
			int temp = val[j-1] - val[output[i]-1];
			if(output[i] >= j)
				break;
			if(temp <=left && output[i] < j)
			{
				left = left - temp;
				output[i] = j;
				break;
			}
			if(left == 0)
				break;
			
		}
	}
	
	for(int i = nod-1 ; i>=0; i--)
		cout<<output[i];	
	
	
}


int main()
{
    //cout << "Hello World!" << endl;
    
    
    int notc;
    cin>>notc;
    
    
    for(int i=0; i<notc; i++)
    {
    	vector<int> val;
    	int n;
    	cin>>n;
    	
    	for(int i=0; i<9; i++)
    	{
    		int tempval;
    		cin>>tempval;
    		val.push_back(tempval);
    	}
    	
    	hobbits(n,val);
    	cout<<endl;
    	
    	
    }
    
    
    return 0;
}
