#include <iostream>
#include <fstream>
#include <cstdio>
#include <climits>
#include <vector>
#include <map>
#include <list>
#include <deque>
#include <stack>
#include <set>
#include <string>
#include <cstring>
#include <algorithm>
#include <bitset>
#include <cmath>

using namespace std;

#define ll long long
#define vt vector

ll solve(ll n,ll m,ll k)
{
	vector<vector<ll> > dp(m+1,vector<ll>(k+1,0));
	for(ll i=1;i<=n && i<=k;i++)
	{
		dp[1][i]=1;
	}
	for(ll i=2;i<=m;i++)
	{
		for(ll j=1;j<=k;j++)
		{
			for(ll k1=1;k1<=n&&k1<j;k1++)
			{
				dp[i][j] += dp[i-1][j-k1];
			}
		}
	}
	return dp[m][k];
}

int main()
{
	ll t,m,n,k;
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld %lld %lld",&m,&n,&k);
		if(k>n*m || k<m)
		{
			printf("0.000 0\n");
			continue;
		}
		else
		{
			double ans=0;
			vector<vector<double> > dp(m+1,vector<double>(n*m+1,0));
			for(int i=1;i<=n;i++)
				dp[1][i]=1;
			for(int i=2;i<=m;i++)
			{
				for(int j=1;j<=k;j++)
				{
					for(int x=1;x<j && x<=n;x++)
						dp[i][j] += dp[i-1][j-x];
				}
			}
			ans = dp[m][k];
			for(int i=1;i<=m;i++)
				ans/=(double)n;
			ll count=0;
			while(ans<1 && ans!=0)
				ans*=10,count++;
			printf("%.3lf %d\n",ans,count);
		}
	}
	return 0;
}