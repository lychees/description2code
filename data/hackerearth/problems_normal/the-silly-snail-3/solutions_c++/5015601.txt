#include<stdio.h>
#include<limits.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<sstream>
#include <map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#define PB push_back
#define MP make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 1000000007
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define pw printf(" ")
using namespace std;
//long long int mini(long long int a,long long int b){return a<b?a:b;}
//long long int maxi(long long int a,long long int b){return a>b?a:b;}
int v[100005][2];
bool mark[100005];
int dfs(int i){
    
if(i==0){return 0;}
if(mark[i]==0)
{
mark[i]=1;
cout<<i;printf(" "); 
}
dfs(v[i][0]);  
dfs(v[i][1]);
return 0;}
int main(){
int t;
cin>>t;
while(t--){
int x,y,z,i;int n;
  cin>>n;
if(n==0){
pi(1);
printf("\n");}
else{
rep(i,n){
 cin>>x>>y>>z;
 mark[x]=0;
 mark[y]=0;
 mark[z]=0;
 v[x][0]=y;
 v[x][1]=z;
 v[y][0]=0;
 v[y][1]=0;
 v[z][0]=0;
 v[z][1]=0;
         }
dfs(1);
printf("\n");}
}
return 0;
}