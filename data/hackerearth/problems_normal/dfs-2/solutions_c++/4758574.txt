#include <iostream>
#include <algorithm>
#include <stdlib.h>
using namespace std;
long long int arr[100001];
int cmp (const void * a, const void * b)
{
   return ( *(long long int*)a - *(long long int*)b );
}
int main()
{
	long long int N=0;
	scanf("%lld",&N);
	for(long long int i=0;i<N;i++)
	{
		scanf("%lld",&arr[i]);
	}
    qsort(arr,N, sizeof(long long int), cmp);
    long long int L,R,q=0;
    scanf("%lld",&q);
    for(long long int i=0;i<q;i++)
    {
    	scanf("%lld %lld",&L,&R);
    	long long int lo1=0;
	    long long int high1=N-1;
	    long long int mid1=0;
	    long long int lo2=0;
	    long long int high2=N-1;
	    long long int mid2=0;
	    int flag1=0;
	    int flag2=0;
	    if(L<=arr[0])
	    {
	    	flag1=1;
	    	mid1=-1;
	    }
	    if(R>=arr[N-1])
	    {
	    	flag2=1;
	    	mid2=N-1;
	    }
	    if((L>arr[N-1])|(R<arr[0]))
	    {
	    	printf("0\n");
	    }
	    else
	    {
    		while(true)
    		{
    			if((flag1!=0)&(flag2!=0))
    			{
    				break;
    			}
    		
    			if(flag1==0)//for L
    			{
    				mid1=(lo1+high1)/2;
    				if(arr[mid1]<L && arr[mid1+1]>=L)
    				{
    					flag1=1; 
    					//printf("d\t");
    				}
    				else if(L<=arr[mid1])
    				{
    					high1=mid1;
    				}
    				else if(L>arr[mid1])
    				{
    					lo1=mid1;
    				}
    			}
    			if(flag2==0)//for R
    			{
    				mid2=(lo2+high2)/2;
    				if(arr[mid2]<=R && arr[mid2+1]>R)
    				{
    					flag2=1;
    				}
    				else if(R<arr[mid2])
    				{
    					high2=mid2;
    				}
    				else if(R>=arr[mid2])
    				{
    					lo2=mid2;
    				}
    			}
    		
    		}
    		printf("%lld\n",(mid2-mid1));
    	}
    }	
    return 0;
}
