#include "bits/stdc++.h"

using namespace std;

#define TEST(T) int T; cin>>T; while(T--)
#define ll long long
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define ins insert
#define pii pair<int,int>
#define all(V) V.begin(),V.end()
#define clr(V,val) memset(V,val,sizeof(V))
#define rep(X,A,N,C) for(X=A;X<=N;X+=C)
#define rept(X,A,N,C) for(X=A;X>=N;X-=C)
#define sci(X) scanf("%d",&X)
#define scl(X) scanf("%lld",&X)
#define scs(X) scanf("%s",&X)
#define pfi(X) printf("%d",X)
#define pfl(X) printf("%lld",X)
#define pfs(X) printf("%s",X)
#define sp printf(" ")
#define nxt printf("\n")


const int MX=1e6 + 5;

const int INF=1e9;

const int M=1000000007;


            /*************************/
/********** I GOTTA DO WHAT I GOTTA DO ********/
           /*************************/


int BIT[MX][15]={0},n;

void update(int x,int d,int v)
{
	for(;x<=n;x+=(x&-x))
	BIT[x][d]+=v;
}

int query(int x,int d)
{
	int s=0;
	
	for(;x>0;x-=(x&-x))
	s+=BIT[x][d];
	
	return s;
}

int cnt(int y)
{
	set<int> s;

	while(y>0){
		
		s.ins(y%10);
		
		y/=10;
		
	}
	
	return s.size();
}

int main()
{
	sci(n);
	
	ll arr[n];
	int x;
	
	for(x=0;x<n;x++) cin>>arr[x];
	
	for(x=0;x<n;x++)
	{
		int digit=cnt(arr[x]);
		
		update(x+1,digit,1);
	}
	
	int q,ans;
	
	sci(q);
	
	while(q--)
	{
		string chk;
		
		int a,b;
		
		cin>>chk;
		
		sci(a);
		
		sci(b);
		
		if(chk == "ADD")
		{
			int digit=cnt(arr[a-1]);
			
			update(a,digit,-1);
			
			ll abhi=(arr[a-1]+b)%M;
			
			int newdigit=cnt(abhi);
			
			update(a,newdigit,1);
			
			arr[a-1]+=b;
			
			arr[a-1]%=M;
		}
		
		else if(chk == "MUL")
		{
			int digit=cnt(arr[a-1]);
			
			update(a,digit,-1);
			
			ll abhi=(arr[a-1]*b)%M;
			
			int newdigit=cnt(abhi);
			
			update(a,newdigit,1);
			
			arr[a-1]*=b;
			
			arr[a-1]%=M;
		}
		
		else if(chk == "REP")
		{
			int digit=cnt(arr[a-1]);
			
			update(a,digit,-1);
			
			ll abhi=b%M;
			
			int newdigit=cnt(abhi);
			
			update(a,newdigit,1);
			
			arr[a-1]=b;
			
			arr[a-1]%=M;
		}
		
		else if(chk == "MAX")
		{
			int x;
			
			for(x=12;x>=1;x--)
			{
				ans=query(b,x)-query(a-1,x);
				
				if(ans>0) break;
			}
			
		    pfi(x); sp; pfi(ans);  nxt;
		}
		
		else if(chk == "MIN")
		{
			int x;
			
			for(x=1;x<=12;x++)
			{
				ans=query(b,x)-query(a-1,x);
				
				if(ans>0) break;
			}
			
			pfi(x); sp; pfi(ans);  nxt;
		}
	}
	
}