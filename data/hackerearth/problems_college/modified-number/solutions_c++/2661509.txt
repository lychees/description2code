#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define PII pair<int,int>
using namespace std;
int check(int a)
{
    LL aa=1LL*a*a;
    string s="";
    while(aa)
    {
        s+=(aa%10)+'0';
        aa/=10;
    }
    reverse(all(s));
    LL f=0,l=0;
    for(int i=0;i<ceil(s.size()/2);i++)
    {
        f=f*10+(s[i]-'0');
    }
    for(int i=ceil(s.size()/2);i<s.size();i++)
    {
        l=l*10+(s[i]-'0');
    }
    return (f+l)==a;
}
int main()
{
    vector<int> v;
    for(int i=0;i<100000;i++)
    {
        if(check(i))
        {v.PB(i);}
    }
    int l,r;
    si(l); si(r);
    int ct=0;
    for(int i=0;i<v.size();i++)
    {
        if(v[i]>=l && v[i]<=r)
        {
            cout<<v[i]<<" ";
            ct++;
        }
    }
    if(ct==0) cout<<"INVALID RANGE"<<endl;
	return 0;
}
