#include<bits/stdc++.h>

using namespace std;
int arr[500001], tree[1000005];
void build_tree(int node, int a, int b)
{
	if(a>b) return;
	if(a==b)
	{
		tree[node]=arr[a];
		return;
	}
	int mid=(a+b)/2;
	build_tree(node*2, a, mid);
	build_tree((node*2)+1, mid+1, b);
	tree[node]=__gcd(tree[node*2],tree[(node*2)+1]);
}

int query_tree(int node, int a, int b, int i, int j)
{
	if(a>b||j<a||i>b) return 0;
		if(a>=i&&b<=j) {
		return tree[node];
	}
	int mid=(a+b)/2;
	int q1=query_tree(node*2, a, mid, i, j);
	int q2=query_tree(node*2+1, mid+1, b, i, j);
	return __gcd(q1, q2);
}
int main()
{
	
	ios_base::sync_with_stdio(false);
	int n,k,ml=0,l;
	//cin>>n>>k;
	scanf("%d%d",&n,&k);
	for(int i=0;i<n;i++)
	//cin>>arr[i];
	scanf("%d",&arr[i]);
	build_tree(1,0,n-1);
	int j=0;
	for(int i=0;i<n;i++)
	{
		while(j<n)
		{
			l=query_tree(1,0,n-1,i,j);
			if(l>=k)
			j++;
			else break;
		}
		ml=max(ml,(j-i));
		j=(i+ml+1);
	}
	//cout<<ml<<"\n";
	printf("%d\n",ml);
}

