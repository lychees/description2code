//Pranet Verma
#include <bits/stdc++.h>
using namespace std;
int dp[20][1 << 20];
int cnt[1 << 20];
int main() {
	int t;
	scanf("%d", &t);
	while (t--) {
		int n;
		scanf("%d", &n);
		for (int i = 0; i < n; ++i) {
			int x;
			scanf("%d", &x);
			++cnt[x];
		}
		for (int mask = 0; mask < (1 << 20); ++mask) {
			if (mask & 1) {
				dp[0][mask] = cnt[mask ^ 1];
			}
			else {
				dp[0][mask] = cnt[mask] + cnt[mask ^ 1];
			}
		}
		for (int i = 1; i < 20; ++i) {
			for (int mask = 0; mask < (1 << 20); ++mask) {
				if (mask & (1 << i)) {
					dp[i][mask] = dp[i - 1][mask ^ (1 << i)];
				}
				else {
					dp[i][mask] = dp[i - 1][mask ^ (1 << i)] + dp[i - 1][mask];
				}
			}
		}
		long long ans = 0;
		for (int i = 0; i < (1 << 20); ++i) {
			ans += (long long)cnt[i] * dp[19][i];
		}
		printf("%lld\n", ans);
		memset(cnt, 0, sizeof cnt);
	}	 
}