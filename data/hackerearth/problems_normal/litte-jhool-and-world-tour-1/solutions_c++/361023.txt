#include<stdio.h>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<cassert>
#include<set>
#include<queue>
#include<map>
#include <stack>
	
using namespace std;
//#define __TEST__ 	

#define ll long long
#define llu unsigned long long
#define MOD 1000000007

#ifdef __TEST__
#include "test.h"
#endif

typedef struct _p
{
	ll s,e;
}P;
bool comp(P a, P b)
{
	return a.s < b.s;
}
void find()
{
	ll a,b,m,n;
	cin>>n>>m;
	
	vector<P> prs;
	
	for(ll i = 0; i<m; ++i)
	{
		cin>>a>>b;
		P p1 = { a,b };
		if(p1.s <= p1.e)
		{
			prs.push_back(p1);		
			p1.s+=n , p1.e+=n;
			prs.push_back(p1);	
		}
		else{
			p1.e+=n;
			prs.push_back(p1);	
		}
		
	}
	//If More range then contries
	if(m>n)
	{
		printf("NO\n");
		return;
	}
	
	sort(prs.begin(),prs.end(),comp);
	bool yes  = true;
	stack<P> check;
	int nIndex =0;
	llu com =0;
	P p2;
	const int nSize = prs.size();
	while(yes && nIndex < nSize)
	{
		if(!check.size())
		{
			com = prs[nIndex].s; 			
		}
		while(nIndex < nSize && com == prs[nIndex].s)
		{
			p2.s = nIndex;
			p2.e = prs[nIndex].e ;
			check.push(p2);
			nIndex++;
		}
		//First check value to verify
		if(check.size())
		{
			p2 = check.top();
			if( com< prs[p2.s].s || com > prs[p2.s].e)
			{
				yes = false;
			}
			check.pop();
			com+=1;
		}
	}
	if(yes)
		printf("YES\n");
	else
		printf("NO\n");
		
}
int main(int, char **)
{
#ifdef __TEST__
	main1();
	return 0;
#endif
	int T;
	ll N;
	scanf("%d",&T);
	while(T--)
	{
		//scanf("%lld",&N);
		find();
	}

	return 0;
}
