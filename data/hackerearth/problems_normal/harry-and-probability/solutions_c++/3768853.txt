#include <bits/stdc++.h>

#define LLI long long  int
#define LLU long long unsigned int
#define LI  long int
#define LU  long unsigned

#define MIN(a,b) ((b)^(((a)^(b))&-((a)<(b))))
#define BUG printf("BUGGEeee");
#define PRINT(n) printf("%d\n",n);
#define MOD 1000000007
#define POWER2(v) (v && !(v & (v - 1)))
#define PA pair<int,int>
#define PB pair<PA,int>
#define MP(a,b) make_pair(a,b)
#define PUS(x) push_back(x)


#define MAX_VAL 1000005
#define MAX_INT 999999999
#define MIN_INT -999999999


using namespace std;




bool compare(PA lhs,PA rhs)
{
    if(lhs.first<rhs.first)
    {
        return true;
    }
    return false;
}

LLI MAX(LLI a,LLI b)
{
    if(a>b)return a;
    return b;
}

LLI GCD(LLI a,LLI b)
{
    LLI x=MAX(a,b);
    LLI y=MIN(a,b);
    if(x%y==0)
    {
        return y;
    }
    else
    {
        return GCD(x%y,y);
    }

}


long long fast_pow(int a,int n)
{
    long long result = 1;
    long long power = n;
    long long value = a;
    while(power>0)
    {
        if(power&1)
            {result = result*value;
            result = result%MOD;}
        value = value*value;
        value = value%MOD;
        power /= 2;
        //power >>= 1;
    }
    return result;
}


int pow_k(LLI N,LLI K)
{
    int count=0;
    while(N>1)
    {
        N/=K;
        count++;
    }
    return count;
}


int count_bit(int N)
{
    int count=0;
    for(int i=0;i<32;i++)
    {
        if(N&(1<<i))
        {
            count++;
        }
    }
    return count;
}


#define PI 3.14159265


int main()
{
    int T;
    cin>>T;
    while(T--)
    {
    	LLI A,B,C,D;
    	cin>>A>>B>>C>>D;
    	long double prob;
    	long double K=(double)(C-B)/(double)((B-A)+(D-C));
    	if(K<1)
    	{
    		prob=acos(K)/acos(-1);	
    	}
    	else
    	{
    		prob=0.0;
    	}
    	cout<<std::setprecision(6)<<std::fixed<<prob<<endl;
    }
    return 0;
}