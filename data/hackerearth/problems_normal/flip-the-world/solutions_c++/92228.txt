#include <iostream>
#include <valarray>
#include <cstdlib>

#include <ctime>
using namespace std;

void print_board( valarray<bool> const &board, size_t cols ) {
    for ( size_t i = 0; i < board.size(); ++ i ) { 
        cout << board[i] << " "; 
        if ( i % cols == cols-1 ) cout << endl;
    }   
    cout << endl;
}

int main() {
	int t;
	cin>>t;
	while(t--){
    //srand( time(NULL) );
    int rows, cols;
	cin>>rows>>cols;
    valarray<bool> board( false, rows * cols );
    char inp[rows][cols];
    for(int i=0;i<rows;i++)
    	cin>>inp[i];
    for ( size_t i = 0; i < board.size(); ++ i ) {
    	int x=i/cols;
    	int y=i%cols;
    	int u=inp[x][y]-'0';
    	u=1-u;
    	board[i] = u;}
   // print_board( board, cols );

    int taken_moves = 0;
    for ( size_t i = board.size(); i > 0; ) { 
        if ( ! board[ -- i ] ) continue;

        size_t sizes[] = { i%cols +1, i/cols +1 }, strides[] = { 1, cols };

        gslice cur_move( 0, valarray<size_t>( sizes, 2 ),
                            valarray<size_t>( strides, 2 ) );
        board[ cur_move ] ^= valarray<bool>( true, sizes[0] * sizes[1] ); 

       // cout << sizes[1] << ", " << sizes[0] << endl;
       // print_board( board, cols );

        ++ taken_moves;
    }   

    cout << taken_moves << endl;}
}

