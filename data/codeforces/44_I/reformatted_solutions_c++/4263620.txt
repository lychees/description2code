/* 2013-08-11 10:37:10.388934 */
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>

#include <map>
#include <queue>
#include <set>
#include <string>
#include <vector>
const int ans[11] = {0, 1, 2, 5, 15, 52, 203, 877, 4140, 21147, 115975};
using namespace std;
bool begin[20];
int belong[21];
int n;
void print(int m) {
  for (int i = 1; i <= m; ++i) {
    bool ft = 1;
    for (int j = 1; j <= n; ++j) {
      if (belong[j] == i) {
        printf("%c%d", ft ? '{' : ',', j), ft = false;
      }
    }
    printf("}%c", i == m ? '\n' : ',');
  }
}
void tryy(int now, int length) {
  if (now == n + 1) {
    print(length);
    return;
  }
  if (begin[now]) {
    for (int i = 1; i <= length + 1; ++i) {
      belong[now] = i;
      tryy(now + 1, max(i, length));
    }
    begin[now] = false;
  } else {
    for (int i = length + 1; i > 0; --i) {
      belong[now] = i;
      tryy(now + 1, max(i, length));
    }
    begin[now] = true;
  }
}
int main() {
  scanf("%d", &n);
  for (int i = 1; i <= n; ++i)
    begin[i] = 1, belong[i] = 1;
  printf("%d\n", ans[n]);
  tryy(1, 0);
  return 0;
}
