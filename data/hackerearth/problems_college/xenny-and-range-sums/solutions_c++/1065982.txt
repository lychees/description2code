#include<stdio.h>
#include<algorithm>
#include<string>
#include<math.h>
#define MAX 1000000
#define M 1000000007
#define scll(t) scanf("%lld",&t)
#define scl(t) scanf("%ld",&t)
#define max(a,b) a>b?a:b
#define min(a,b) a<b?a:b
#define ll long long
using namespace std;
ll a[MAX];

ll tmi[4*MAX];
ll t[4*MAX];

void build (ll a[], ll v, ll tl, ll tr) {
	if (tl == tr)
		t[v] = a[tl];
	else {
		ll tm = (tl + tr) / 2;
		build (a, v*2, tl, tm);
		build (a, v*2+1, tm+1, tr);
		t[v] = t[v*2] + t[v*2+1];
	}
}
void build1 (ll a[], ll v, ll tl, ll tr) {
	if (tl == tr)
		tmi[v] = a[tl];
	else {
		ll tm = (tl + tr) / 2;
		build (a, v*2, tl, tm);
		build (a, v*2+1, tm+1, tr);
		tmi[v] = tmi[v*2+1] - tmi[v*2];
	}
}
ll sum (ll v, ll tl, ll tr, ll l, ll r) {
	if (l > r)
		return 0;
	if (l == tl && r == tr)
		return t[v];
	ll tm = (tl + tr) / 2;
	return sum (v*2, tl, tm, l, min(r,tm))
		+ sum (v*2+1, tm+1, tr, max(l,tm+1), r);
}
ll dif (ll v, ll tl, ll tr, ll l, ll r) {
	if (l > r)
		return 0;
	if (l == tl && r == tr)
		return tmi[v];
	ll tm = (tl + tr) / 2;
	return dif (v*2, tl, tm, l, min(r,tm))
		+ dif (v*2+1, tm+1, tr, max(l,tm+1), r);
}
int main()
{
    ll n;
    scll(n);
    long i;
    ll q,ar,b;

    scll(q);
    for(i=0;i<n;i++)
        scanf("%lld",&a[i]);
    build(a,1,0,n-1);
    build1(a,1,0,n-1);
    while(q--)
    {
        scll(ar);
        scll(b);
        printf("%lld %lld\n",sum(1,0,n-1,ar-1,b-1),a[b-1]-(sum(1,0,n-1,ar-1,b-1)-a[b-1]));
    }
    return 0;
}
