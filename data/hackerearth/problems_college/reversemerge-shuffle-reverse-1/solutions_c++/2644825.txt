#include <algorithm>
#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <cstring>
#include <map>
#include <string>
#include <queue>
#include <set>
#include <stack>
#define rep(i, a, b) for(int i = a; i < b; i++)
#define red(i, a, b) for(int i = a; i > b; i--)
#define RED true
#define BLACK false
#define pb push_back
#define mk make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int, int> ii;
typedef long long ll;
typedef pair<ii, int> iii;
typedef vector<ii> vii;
typedef vector<int> vi;
const int N = 1e5 + 7;
const int M = 26;
const int inf = (int)1e9 + 7;
const ll base = (ll)1e18;
const double pi = acos(-1);
const double ep = 1e-18;

vi c[28];
int a[N][28];
int n;
string s;
char ans[N];
int cnt[M];

void solve(){
    cin >> s;
    reverse(s.begin(), s.end());
    //cout<<s;
    n = s.size();
    for(int i = 1; i <= n; i++){
        rep(j, 0, M) a[i][j] = a[i-1][j];
        a[i][s[i-1] - 'a']++;
        c[s[i-1] - 'a'].push_back(i);
    }

    //cout<<a[1][4]<<endl;


    rep(j, 0, M) cnt[j] = a[n][j] / 2;

    int last = 0;
    int m = n / 2;
    int k = 0;
    //cout<<n;
    while (m-- > 0){
        rep(i, 0, M){
            if (cnt[i] == 0) continue;
            vector<int>::iterator it = upper_bound(c[i].begin(), c[i].end(), last);
            if (it == c[i].end()) continue;
                //cout<<i<<endl;
            int cur = *it;
            //cout<<cur<<endl;
            bool check = true;
            rep(j, 0, M){
                if (a[n][j] - a[cur-1][j] < cnt[j]){
                    check = false;
                    break;
                }
            }
            if (check){
                ans[k++] = char(i + 'a');
                cout<<char(i + 'a');
                last = cur;
                cnt[i]--;
                break;
            } else continue;
        }
    }
    //ans[++k] = '\n';
    //puts(ans);
}


int main() {
    ios_base::sync_with_stdio(0); cin.tie(NULL);
#ifdef _LOCALE_H_
    freopen("in.txt", "r", stdin);
#endif // _LOCALE_H_
    solve();
    return 0;
}
