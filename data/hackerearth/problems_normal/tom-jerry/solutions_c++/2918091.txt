#include<iostream>
#include<vector>
#include<stdio.h>
using namespace std;
long long int DFS(vector<vector<long long int > > &grid,vector<vector<long long int > > &visited,int i,int j,int n)
{
	if(i==n-1 && j==n-1 && grid[i][j]==0)
	{
		return 1;
	}
	int arr1[4]={-1,0,1,0};
	int arr2[4]={0,1,0,-1};
	int res=0;
	
	if( i <0 || i>=n || j<0 || j>=n || grid[i][j]==1 || visited[i][j]==1)
		return 0;
	visited[i][j]=1;
	for(int k=0;k<4;k++)
	{
		int p=i+arr1[k];
		int q=j+arr2[k];
		res+= DFS(grid,visited,p,q,n);
	
	}
	visited[i][j]=-1;
	return res;
}
int main()
{
    int n;
    scanf("%d",&n);
    vector<long long int > v(n,-1);
    vector<vector<long long int > > grid(n,v);
    for(int i=0;i<n;i++)
    {
    	for(int j=0;j<n;j++)
    		scanf("%lld",&grid[i][j]);
    }
    if(grid[n-1][n-1] == 1)
    	cout<<0<<endl;
    else
    {
    	 
	    vector<vector<long long int > > visited(n,v);
	    cout<<DFS(grid,visited,0,0,n)<<endl;
    }
  
   
}
