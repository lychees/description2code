#include<stdio.h>
#include<iostream>
#include<math.h>
#define SIZE 1000001
using namespace std;
bool isPrimes[SIZE];
bool isAlphaPrimes[SIZE];
int alphaPrimeCount[SIZE];
int power10[7];
int main(){
	int i, j;
	for(i=0;i<SIZE;i++)
	{
		isPrimes[i] = true;
		isAlphaPrimes[i] = false;
	}
	
	power10[0] = 1;
	for(i=1;i<7;i++){
		power10[i] = power10[i - 1] * 10;
	}
	
	isPrimes[0] = isAlphaPrimes[0] = false;
	isPrimes[1] = isAlphaPrimes[1] = false;
	
	int sqrtN = (int)sqrt(1000000);
	
	for(i=2; i<=sqrtN; i++)
	{
		if(isPrimes[i])
		{
			for(j=(i*i); j<SIZE; j = j + i)
			{
				isPrimes[j] = false;
			}
		}
	}
		
	
	for(i= SIZE - 1; i>1 ; i--)
	{
		if(!isPrimes[i])
		{
			int ctr = 1;
			int remVal = i;			
			while(remVal > 0 && ctr < 7)
			{
				int val = i % power10[ctr];
				
				if(isPrimes[val] || isAlphaPrimes[val])
				{
					isAlphaPrimes[i] = true;
					break;				
				}	
				
				ctr++;
				remVal = remVal / 10;			
			}
		}
	}
	
	alphaPrimeCount[1] = 0;
	alphaPrimeCount[2] = 1;
	for(i=3;i<SIZE;i++)
	{
		if(isPrimes[i] || isAlphaPrimes[i]){			
			alphaPrimeCount[i] = alphaPrimeCount[i-1] + 1;
		}else{		
			alphaPrimeCount[i] = alphaPrimeCount[i-1];
		}
	}
	
	int q, l, r;
	scanf("%d", &q);
	while(q--){
		scanf("%d%d", &l, &r);
		printf("%d\n", alphaPrimeCount[r] - alphaPrimeCount[l-1]);
	}
	return 0;
}