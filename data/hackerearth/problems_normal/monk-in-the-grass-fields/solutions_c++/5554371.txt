#if 0
#include<bits/stdc++.h>
using namespace std;

const int N = 1005;
int a[N][N];
long r[N], c[N];

int main() 
{
    int te;
    scanf("%d",&te);
    while(te--)
    {
    	long ans =0;
    	memset(r,0,sizeof(r));
    	memset(c,0,sizeof(c));
    	int n, m, k, p;
      	scanf("%d%d",&n,&k);
    	vector<int> qr, qc;
      	m=n;
      	p=1;
      	
      	for (int i = 1; i <= n; ++i)
        for (int j = 1; j <= m; ++j) 
        {
          scanf("%d", &a[i][j]);
          r[i] += a[i][j];
          c[j] += a[i][j];
        }
      
      	for (int i = 1; i <= n; ++i)  qr.push_back(r[i]);
      	for (int j = 1; j <= m; ++j)  qc.push_back(c[j]);
      
      	for (int i = 1; i <= k; ++i) 
      	{
        	sort(qr.begin(),qr.end());
        	sort(qc.begin(),qc.end());
        	if(qr[0] < qc[0])
        	{
        		ans += qr[0];
        		long t = qr[0];
        		qr[0]=t + m * p;
        		for(int j=0; j<qc.size(); j++)
        			qc[j] += 1;
        	}
        	else
        	{
        		ans += qc[0];
        		long t = qc[0];
        		qc[0]=t + m * p;
        		for(int j=0; j<qr.size(); j++)
        			qr[j] += 1;

        	}
      	}
      	cout<<ans<<"\n";
      }
      return 0;
    }
#endif



    #include<bits/stdc++.h>
    using namespace std;
    #define vi vector < int >
    #define pii pair < int , int >
    #define pb push_back
    #define mp make_pair
    #define ff first
    #define ss second
    #define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
    #define ll long long
    #define llu unsigned long long
    #define MOD 1000000007
    #define INF 0x3f3f3f3f
    #define dbg(x) { cout<< #x << ": " << (x) << endl; }
    #define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
    #define all(x) x.begin(),x.end()
    #define mset(x,v) memset(x, v, sizeof(x))
    #define sz(x) (int)x.size()
    int a[201][201];
    int r[201],c[201];
    int sr[401],sc[401];
    int main(){
    	int t;
    	scanf("%d",&t);
    	assert(1 <= t && t <= 100);
    	while(t--){
    		int n,k,i,j;
    		scanf("%d%d",&n,&k);
    		assert(1 <= n && n <= 200);
    		assert(1 <= k && k <= 400);
    		mset(r,0);
    		mset(c,0);
    		for(i=0;i<n;i++){
    			for(j=0;j<n;j++){
    				scanf("%d",&a[i][j]);
    				assert(1 <= a[i][j] && a[i][j] <= 1000);
    				r[i] += a[i][j];
    				c[j] += a[i][j];
    			}
    		}
    		int ans = INF;
    		for(i=1;i<=k;i++){
                int x = 0;
                for(j=0;j<n;j++){
                    if(r[j] < r[x]){
                        x = j;
                    }
                }
                sr[i] = r[x] + sr[i-1];
                r[x] += n;
    		}
    		for(i=1;i<=k;i++){
                int x = 0;
                for(j=0;j<n;j++){
                    if(c[j] < c[x]){
                        x = j;
                    }
                }
                sc[i] = c[x] + sc[i-1];
                c[x] += n;
    		}
    		for(i=0;i<=k;i++){
    			ans = min(ans,sr[i] + sc[k-i] + i*(k-i));
    		}
    		printf("%d\n",ans);
    	}
    	return 0;
    }

