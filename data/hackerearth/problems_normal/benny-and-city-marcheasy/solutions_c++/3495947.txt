//Pranet Verma
#include <bits/stdc++.h>
using namespace std;
long long a[21][21], col[21];
int main()
{
    int n, m, c;
    scanf("%d %d %d", &n, &m, &c);
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j)
            scanf("%lld", &a[i][j]);
    long long ans = -1000000000;
    for (int mask = 0; mask < (1 << n); ++mask)
    {
        int cnt = __builtin_popcount(mask);
        for (int j = 0; j < m; ++j)
            col[j] = 0;
        for (int i = 0; i < n; ++i)
        {
            if(mask & (1<<i))
                continue;
            for (int j = 0; j < m; ++j)
                col[j] += a[i][j];
        }
        priority_queue<long long> Q;
        for (int j = 0; j < m; ++j)
            Q.push(col[j]);
        long long tmp = - (cnt + m) * c;
        long long sum = 0;
        for (int choose = 1; choose <=m; ++choose)
        {
            sum += Q.top();
            Q.pop();
            tmp = max(tmp ,sum - (long long)c * (cnt + m - choose));
        } 
        ans = max(ans, tmp);
    }    
    cout<<ans;
}