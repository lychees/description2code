#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <queue>
#include <set>
#include <cstdio>
#include <cstdlib>
#include <stack>
#include <cstring>
#include <iomanip>
#include <cctype>
#include <map>

using namespace std;
int isPrime[10000005];
int firstPrime[10000005];
int sumOfDigits[10000005];
int sumOfPDigits[10000005];
int isValid[10000005];
int main() {
    for(int i = 1;i <= 10000000;i++) {
        isPrime[i] = 1;
    }
    isPrime[1] = 0;
    for(int i = 2;i <= 10000000;i++) {
        if(isPrime[i]) {
            for(int j = i * 2;j <= 10000000;j+=i) {
                if(isPrime[j]) {
                    isPrime[j] = 0;
                    firstPrime[j] = i;
                }
            }
        }
    }
    sumOfDigits[0] = 0;
    for(int i = 1;i <= 10000000;i++) {
        sumOfDigits[i] = sumOfDigits[i/10] + i % 10;
    }
    for(int i = 2;i <= 10000000;i++) {
        if(isPrime[i]) sumOfPDigits[i] = sumOfDigits[i];
        else sumOfPDigits[i] = sumOfPDigits[i/firstPrime[i]] + sumOfPDigits[firstPrime[i]];
    }
    isValid[1] = 0;
    for(int i = 2;i <= 10000000;i++) {
        isValid[i] = (sumOfPDigits[i] == sumOfDigits[i]);
        isValid[i]+=isValid[i - 1];
    }
    int t; cin>>t;
    while(t--) {
        int x,y; scanf("%d %d",&x,&y);
        printf("%d\n",isValid[y] - isValid[x - 1]);
    }
    
    
    
}
