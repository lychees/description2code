#include <iostream>
#include<vector>
using namespace std;
int root(int x, int a[])
{
	while(a[x]!=x)
	{
		a[x]=a[a[x]];
		x=a[x];
	}
	return x;
}
void unio(int *a,int *sz,int x,int y)
{
	int rx = root(x,a);
	int ry = root(y,a);
	if(sz[rx]<sz[ry])
	{
		a[rx]=a[ry];
		sz[ry]= sz[rx]+sz[ry];
	}
	else
	{
		a[ry]=a[rx];
		sz[rx]=sz[ry]+sz[rx];
	}
	
}
int main()
{
    int t,n,m,x,y,i,j;
    cin>>t;
    vector <string> ans;
    for(i=0;i<t;i++)
    {
    	cin>>n>>m;
    	int nodes[n+1],sz[n+1];
    	for(j=1;j<=n;j++)
    	{
    		nodes[j]=j;
    		sz[j]=1;
    	}
    	pair<int,int> edge[m+1];
    	for(j=1;j<=m;j++)
    	{
    		cin>>edge[j].first>>edge[j].second;
    	}
    	//cout<<"done";
    	for(j=1;j<n;j++)
    	{
    		cin>>x;
    		unio(nodes,sz,edge[x].first,edge[x].second);
    	}
    	y=0;
    	for(j=1;j<=n;j++)
    	{
    		if(nodes[j]==j)
    			y++;
    		if(y>1) break;
    		//cout<<y<<" ";
    	}
    	if(y>1) ans.push_back("NO");
    	else if(y==1) ans.push_back("YES");
    	//cout<<"hi";
    }
    //cout<<ans[0]<<ans[1];
    for(i=0;i<ans.size();i++)
    {
    	cout<<ans[i]<<endl;
    }
    return 0;
}
