#include<bits/stdc++.h>
using namespace std;

set<int> ans;
set<int> sum;

void sieve()
{
	int prev_prime = 0;
	int k = 0;
	vector<bool> p(10000000, 0);
//	memset(p, 0, sizeof p);
	for(int i = 3; i < 10000000; i+=2)
	{
		if(p[i])
			continue;	
		if(prev_prime)
			ans.insert(i-prev_prime);
		prev_prime = i;
		for(int j =i; j < 10000000; j+=i)
			p[j] = 1;
	}
//	cout << prev_prime;
	set<int>::iterator it;
//	it = ans.begin();
	
	for(it = ans.begin(); it != ans.end(); it++)
	{
		for(auto it1 = it; it1 != ans.end(); it1++)
			sum.insert(*it + *it1);
	}
	
	//for(it = sum.begin(); it != sum.end(); it++)
	//	cout << *it << endl;
}
int main()
{
	sieve();
	int t, n;
	scanf("%d", &t);
	while(t--)
	{
		scanf("%d", &n);
		if(sum.find(n) != sum.end())
			printf("YES\n");
		else
			printf("NO\n");
	}
	return 0;	
}
