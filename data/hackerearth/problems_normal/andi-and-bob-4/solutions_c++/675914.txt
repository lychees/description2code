//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
//#include <unordered_map>
//#include <unordered_set>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(int i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(int i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)

int tab[5000006];
pair<int, int> dupa[5000006];

void jebaj()
{
	LL n;
	cin >> n;
	int ile_zer = 0, ile_jed = 0, suma = 0;
	REP(i, n)
	{
		int a;
		cin >> a;
		tab[i + 1] = a % 2;
	}
	int zera = 0, jedynki = 0;
	
	FORD(i, n, 1)
	{
		if(tab[i] == 1)
		{
			dupa[i].ST = dupa[i + 1].ND + 1;
			dupa[i].ND = dupa[i + 1].ST;
		}
		else
		{
			dupa[i].ST = dupa[i + 1].ST;
			dupa[i].ND = dupa[i + 1].ND + 1;
		}
		//cout << dupa[i].ST << " " << dupa[i].ND << "\n";
		dupa[i + 1].ST = 0;
		dupa[i + 1].ND = 0;
		jedynki += dupa[i].ST;
		zera += dupa[i].ND;
	}
	//cout << jedynki << " " << zera << "\n";
	if(jedynki >= zera)
	{
		cout << "BOB\n";
		return;
	}
	cout << "ANDI\n";
	return;
}

int main()
{
	IOSYNC;
	int t;
	//t = 1;
	cin >> t;
	
	REP(i, t) 
	{
		jebaj();
	}
}
