//Aayush Agarwal
 
#include<bits/stdc++.h>
using namespace std;
 
#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000007
#define INF INT_MAX
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

int inter[100] , arr[100] , N ;

int dp[60][( 1 << 17 )] ;

int f( int idx , int mask )
{
	int &ret = dp[idx][mask] ;
	if( ret == -1 )
	{
		ret = 0 ;
		if( idx == N )
		{
			ret = 0 ;
		}
		else
		{
			ret = f( idx + 1 , mask ) ; 
			if( (inter[idx] & mask) == 0 )
			{
				ret = max( ret , f( idx + 1 , mask | inter[idx] ) + 1 );
			}
		}
	}
	return ret ;
}

int main()
{
	int t;
	si(t);
	int pr[] = { 2 , 3 ,  5 , 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 , 41 , 43 , 47 } ;
	int pos[50] ;
	for(int i = 0 ; i < 15 ; i++ )
	{
		pos[pr[i]] = i ;
	}
	while(t--)
	{
		si(N);
		for(int j = 0 ; j < N ; j++ )
		{
			si(arr[j]);
			int a = arr[j] ;
			int vv = 0 ;
			for(int i = 2 ; i * i <= a ; i++ )
			{   
				if( a % i == 0 )
				{
					vv |= ( 1 << pos[i] ) ;
				}
				while( a % i == 0)
				{
					a /= i ;
				}
			}
			if( a > 1 )
			  vv |= ( 1 << pos[a] ) ;
			inter[j] = vv ;
		}
		memset(dp , -1 , sizeof(dp));
		int ans = f( 0 , 0 ) ;
		pi(ans);nl;
	}
}

