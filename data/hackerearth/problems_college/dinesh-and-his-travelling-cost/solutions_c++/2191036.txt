#include<bits/stdc++.h>
using namespace std;
vector< pair < int ,int > > g[501];
int dist[501];
void djk(int s)
{
     for(int i = 0 ; i <= 500 ; ++i )
        dist[i] = 1e9;

        dist[s] = 0;
        set<pair<int,int> > q;
        q.insert(make_pair( 0 , s));

         while(!q.empty())
         {
            int c = (*(q.begin())).first;
            int u = (*(q.begin())).second;
                     q.erase(q.begin());
            for(int i  = 0;  i < g[u].size() ; ++i)
            {
               int v = g[u][i].first;
               int w = g[u][i].second;
               if(dist[v] > w + c)
               {
                 if(dist[v] == 1e9)
                 {
                    dist[v] = w + c;
                    q.insert(make_pair( dist[v],v));
                 }
                 else
                 {
                  q.erase(q.find(make_pair(dist[v],v)));
                      dist[v] = w + c;
                    q.insert(make_pair( dist[v],v));


                 }

               }

            }

         }
}
int main(){

       int n;
       cin >> n;
        int u  ,  v , w;
       for(int i = 1; i <= n ; ++i ){
         cin  >> u >> v >> w;
          g[u].push_back(make_pair( v , w));
          g[v].push_back(make_pair( u , w));
       }

          int src ;
          cin >> src;
          djk(src);
          int q;
          cin >> q;
          while(q--)
          {
            int d;
            cin >> d;
            if(dist[d] == 1e9)
            cout <<"NO PATH"<<endl;
            else
            cout << dist[d] << endl;

          }

           return 0;


}
