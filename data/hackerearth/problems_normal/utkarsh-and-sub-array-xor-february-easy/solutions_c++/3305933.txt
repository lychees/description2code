#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<vector>
#include<string>
#include<cstring>
#include<unordered_map>
#include<cassert>
#include<cmath>

//code by cl3488

#define dri(X) int (X); scanf("%d", &X)
#define drii(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define driii(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define pb push_back
#define mp make_pair
#define rep(i, s, t) for ( int i=(s) ; i <(t) ; i++)
#define fill(x, v) memset (x, v, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define why(d) cerr << (d) << "!\n"
#define whisp(X, Y) cerr << (X) << " " << (Y) << "#\n"
#define exclam cerr << "!!\n"
typedef long long ll;
using namespace std;
typedef pair<int, int> pii;
const ll inf = (ll)1e9 + 70;
const ll mod = 1e9 + 7;
const int maxn = 1e5 + 1000;
const int half = (mod + 1) / 2;
ll pw(ll a, ll n){
	if(n == 0) return 1;
	ll b = pw(a, n >> 1);
	b = b * b % mod;
	if(n & 1) b = b * a % mod;
	return b;
}

int main(){
	if (fopen("input.txt", "r")) freopen("input.txt", "r", stdin);
	ll n; cin >> n;
	ll ans = pw(2, n);
	dri(k);
	unordered_map<ll, ll> m;
	rep(kk, 0, k){
		ll i; ll j; cin >> i >> j;
		while(m.count(i) != 0){
			ll j2 = m[i];
			ll nexti = min(j, j2) + 1;
			ll nextj = max(j, j2);
			i = nexti;
			j = nextj;
			if(i > j) break;
		}
		if(i <= j){
			ans = ans * half % mod;
			m[i] = j;
		}
		cout << (ans + mod) % mod << "\n";
	}
	return 0;
}