/*Author : rednivrug15*/
#include <bits/stdc++.h>
#define mod ((int)(1e9)+7)
#define ll long long
#define mp make_pair
#define pb push_back
using namespace std;

long long gcd(long long a,long long b)
{
    return b==0?a:gcd(b,a%b);
}

long long power(long long a,long long b)
{
    long long ret=1;
    while(b)
    {
        if(b%2==1)
            ret=(ret*a)%mod;
        b/=2;
        a=(a*a)%mod;
    }
    return ret;
}

int parent[123456];

int findParent (int p)
{
    if ( parent [p] ==p ) return p;
    return parent [p] = findParent(parent [p]);
}

int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i=1; i<=n; i++) parent[i]=i;

    vector < pair < int , int > > arr(m);
    for(int i=1; i<=m; i++) scanf("%d%d",&arr[i-1].first,&arr[i-1].second);

    vector < int > ans;
    for(int i=m-1; i>=0; i--) {
        int x=findParent(arr[i].first);
        int y=findParent(arr[i].second);

        if(x==y) ans.push_back(i+1);
        else parent[x]=parent[y];

    }
    sort(ans.begin(),ans.end());
    printf("%d\n",ans.size());

    for(int i=0; i<ans.size(); i++) printf("%d\n",ans[i]);

    return 0;
}

