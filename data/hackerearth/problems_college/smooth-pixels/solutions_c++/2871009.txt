#include<iostream>
#include <algorithm>
using namespace std;

int dp[101][257];
int D, I, M, N;
int a[100];

int min(int a, int b){
	return (a<b)?a:b;
}
int max(int a, int b){
	return (a>b)?a:b;
}

int sol() {
    for(int i=0; i<101; i++){
    	for(int j=0; j<257; j++){
    		dp[i][j]=0;
		}
	}
    int ret = N * D;
    for (int i = N-1; i >= 0; i--){
	    for(int j=-1; j<256; j++){
	        int& x = dp[i][j+1];
	        x = dp[i+1][j+1] + D;
	        if (j == -1) {
	            for(int t=0; t<256; t++)
	                x = min(x, dp[i+1][t+1] + min( abs(t-a[i]), I+D ));
	        } else {
	            for(int t=0; t<256; t++){
	                if (!M) {
	                    x = min(x, dp[i+1][j+1] + min(abs(a[i]-j), I + D));
	                } else {
	                    int ic = max(0, (abs(t-j) - 1) )/ M *I; //max((abs(t-j) + M - 1) / M -1, 0) * I;
	                    x = min(x, dp[i+1][t+1] + ic + abs(t-a[i]));
	                    x = min(x, dp[i+1][t+1] + ic + I + D);
	                }
	            }
	        }
	    }
	}
    ret = min(ret, dp[0][0]);
    return ret;
}

int main() {
    int T;
    cin>>T;
    for(int t=1; t<T+1; t++){
        cin >> D >> I >> M >> N;
        for(int i=0; i<N; i++)
            cin >> a[i];
        cout << "Case #" << t << ": " << sol() << endl;
    }
    return 0;
}