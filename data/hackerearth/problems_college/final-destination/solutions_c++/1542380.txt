#include<bits/stdc++.h>
using namespace std;
#define author rajat1603
#define mod 1000000007
#define pb push_back
#define mp make_pair
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c<'0'||c>'9'){
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return x;
}
int dist[1000001];
int main(){
    int t=scan();
    while(t--){
        int a=scan(),b=scan();
        int mul=scan(),di=scan(),add=scan(),sub=scan();
        queue<int> q;
        q.push(a);
        memset(dist,-1,sizeof(dist));
        dist[a]=0;
        while(!q.empty()){
            int node=q.front();
            if(node==b){
            	break;
            }
            q.pop();
            long long next=node*mul;
            if(next<=1000000&&next>1&&next!=node){   
                if(dist[next]==-1){
                    dist[next]=dist[node]+1;
                    q.push(next);
                }
            }
            next=node/di;
            if(next<=1000000&&next>1&&next!=node){
                if(dist[next]==-1){
                    dist[next]=dist[node]+1;
                    q.push(next);
                }
            }
            next=node+add;
            if(next<=1000000&&next>1&&next!=node){
                if(dist[next]==-1){
                    dist[next]=dist[node]+1;
                    q.push(next);
                }
            }
            next=node-sub;
            if(next<=1000000&&next>1&&next!=node){
                if(dist[next]==-1){
                    dist[next]=dist[node]+1;
                    q.push(next);
                }
            }
        }
        printf("%d\n",dist[b]);
    }
} 