#include <iostream>
#include<bits/stdc++.h>
using namespace std;
long n;
double dp[3100][3100];
struct points
{
    double x,y,f;
    points()
    {
        x=y=f=0.00;
    }
}p[3100];
double dist(struct points p1,struct points p2)
{
    return sqrt(((p1.x-p2.x)*(p1.x-p2.x))+((p1.y-p2.y)*(p1.y-p2.y)));
}
double rec(long idx,long prev)
{
    if(idx==n)
    {
        return p[idx].f-dist(p[prev],p[idx]);
    }
    else if(dp[idx][prev]!=-1e9)
    {
        return dp[idx][prev];
    }
    else
    {
        double opt[]={-1e9,-1e9};
        opt[0]=rec(idx+1,prev);
        double d=dist(p[prev],p[idx]);
        //cout<<" idx="<<idx<<" prev="<<prev<<" f="<<p[idx].f<<" dist="<<d<<endl;
        opt[1]=p[idx].f+rec(idx+1,idx)-d;
        //cout<<" idx="<<idx<<" prev="<<prev<<" opt1="<<opt[0]<<" opt2="<<opt[1]<<endl;
        dp[idx][prev]=max(opt[0],opt[1]);
        //cout<<" idx="<<idx<<" prev="<<prev<<" ans="<<dp[idx][prev]<<endl;
        return dp[idx][prev];
    }
}
int main()
{
    double ans;
    long i,j;
    for(i=0;i<3050;i++)
    {
        for(j=0;j<3050;j++)
        {
            dp[i][j]=-1e9;
        }
    }
    scanf("%ld",&n);
    p[0].x=0;
    p[0].y=0;
    p[0].f=0;
    for(i=1;i<=n;i++)
    {
        scanf("%lf %lf %lf",&p[i].x,&p[i].y,&p[i].f);
    }
    ans=p[1].f+rec(2,1);
    printf("%.6lf\n",ans);
    return 0;
}
