#include <bits/stdc++.h>
using namespace std;
const int maxn=100010;
int pa[maxn],pb[maxn];
bool mark[maxn];
vector<int> component;
vector<int> adj[maxn];
void dfs(int src)
{
	//printf("DFSING %d\n",src);
	mark[src]=true;
	component.push_back(src);
	for(int i=0;i<adj[src].size();i++) if(!mark[adj[src][i]]) dfs(adj[src][i]);
}
bool same(vector<int> x)
{
	vector<int> v1(x.size()),v2(x.size());
	for(int i=0;i<x.size();i++) v1[i]=pa[x[i]],v2[i]=pb[x[i]];
	sort(v1.begin(),v1.end());
	sort(v2.begin(),v2.end());
	for(int i=0;i<x.size();i++) if(v1[i]!=v2[i]) return false;
	return true;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,m;
		scanf("%d%d",&n,&m);
		for(int i=1;i<=n;i++) {adj[i].clear();mark[i]=false;scanf("%d",&pa[i]);}
		for(int i=1;i<=n;i++) scanf("%d",&pb[i]);
		for(int i=0;i<m;i++)
		{
			int u,v;
			scanf("%d%d",&u,&v);
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		bool done=false;
		for(int i=1;i<=n&&!done;i++)
		{
			if(!mark[i])
			{
				component.clear();
				dfs(i);
				//for(int j=0;j<component.size();j++) printf("%d ",component[j]);
				//printf("\n");
				if(!same(component)) {puts("NO");done=true;}
			}
		}
		if(!done) puts("YES");
	}
}