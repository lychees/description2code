#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<algorithm>
#include<stdio.h>
#include<cassert>

using namespace std;

#define FOR(i,a,b) for(i= a ; i < b ; ++i)
#define rep(i,n) FOR(i,0,n)
#define si(n) scanf("%d",&n)
#define mod (int)(1e9 + 7)
#define ll long long int

ll modpow(ll a,ll n,ll temp){ll res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;} 

int arr[1001][1001],op[1001][1001];
int isprime[1000006];

void seive()
{
	ll i,j,MAX;
	MAX=10006;
	isprime[0]=1;
	isprime[1]=1;
	for(i=2;i*i<MAX;i++)
	{
		if(isprime[i]==0)
		{
			j=i*i;
			for(;j<MAX;j+=i)
				isprime[j]=1;
		}
	}
}
inline int find(int i,int j,int k)
{
	if(op[i][j]!=0)
		return op[i][j];
	ll calc,cnt=0;
	int flag=1;
	calc=arr[i][j];
	while(isprime[calc]==1)
	{
		calc+=k;
		if(calc>10000)
		{
			flag=0;
			break;
		}
		cnt++;
	}
	if(flag==0)
	{
		op[i][j]=-1;
	}
	else
	{
		op[i][j]=cnt;
	}
	return op[i][j];
}
int main()
{
	int n,k,i,f,s,a,b,ans=-1,j,cnt,calc;
	seive();
	ans=mod;
	si(n);
	si(k);
	assert(n>=1 && n<=1000);
	assert(k>=1 && k<=5);
	rep(i,n)
	{
		rep(j,n)
		{
			si(arr[i][j]);
			assert(arr[i][j]>=1 && arr[i][j]<=10000);
		}
	}
	rep(i,n-2)
	{
		rep(j,n-2)
		{
			calc=0;
			//Checking for five elements present in the cross individually. 
			cnt=find(i,j,k);
			if(cnt==-1)
				continue;
			calc+=cnt;
			cnt=find(i+1,j+1,k);
			if(cnt==-1)
				continue;
			calc+=cnt;
			cnt=find(i,j+2,k);
			if(cnt==-1)
				continue;
			calc+=cnt;
			cnt=find(i+2,j,k);
			if(cnt==-1)
				continue;
			calc+=cnt;
			cnt=find(i+2,j+2,k);
			if(cnt==-1)
				continue;
			calc+=cnt;
			if(calc<ans)
			{
				ans=calc;
				a=i;
				b=j;
			}
		}
	}
	if(ans==mod)
	{
		printf("no\n");
	}
	else
	{
		printf("yes\n");
		printf("%d\n",ans);
		printf("%d %d\n",a+2,b+2);
	}
	return 0;
}