

//Author : Piyush Agarwal
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000007
#define inp(a) scanf("%lld",&a);
#define outl(a) printf("%lld\n",a);
#define out(a) printf("%lld ",a);
#define line printf("\n");
#define FOR(i,b,e) for(i=b;i<=e;i++)
#define mp make_pair
#define pb push_back
      
inline void finp(ll *n)
{
   *n = 0;
    ll ch = getchar_unlocked();
    while(ch < '0' || ch > '9')
    ch = getchar_unlocked();
    while(ch >= '0' && ch <= '9')
    (*n) = ((*n)<<3) + ((*n)<<1) + ch - '0', ch = getchar_unlocked();
}
  
ll gcd(ll a,ll b)
{
    if(b==0)
          return a;
    return gcd(b,a%b);
}
ll i,j,k,l,n,a[1000005],cost[200][200],mark[1000],mark2[1000],s,d,t,pl=0;
vector <ll> m[10000],ans,final_ans;
ll v,e,c,p;
void dfs(ll x,ll np,vector<ll> ans,ll parent)
{
//    printf("x %lld parent %lld\n",x,parent);
    if(np==0)
        np=cost[x][parent];
    else if(np>=cost[x][parent])
        np=cost[x][parent];
    ans.pb(x);/*  
    printf("here ");
    for(int k=0;k<ans.size();k++)
        printf("%lld ",ans[k]);
    printf("over \n");*/
    if(mark[x]==0)
    {
            if(x==d)
            {
  /*               printf("np is %lld\n",np);
                  for(int k=0;k<ans.size();k++)
                    printf("%lld ",ans[k]);
                printf("\n");
*/
                    if(np>pl)
                    {
                        pl=np;final_ans=ans;
                    }
                    else if(np==pl)
                    {
                    	if(ans.size()<final_ans.size())
                    	final_ans=ans;
                    }
                    return;
            }
            mark[x]=1;
    }
    for(int i=0;i<m[x].size();i++)
    {
        if(x==s)
        {/*
            for(int j=1;j<=v;j++)
                mark[j]=0;
                  mark[s]=1;*/
                  np=0;
    //              printf("starts np is %lld\n",np);
        }
              if(!mark[m[x][i]])
              {
              dfs(m[x][i],np,ans,x);
              mark[m[x][i]]=0;
              mark[s]=1;
              }
          
        }
}


int main()
{

    inp(v);inp(e);
    for(i=0;i<e;i++)
    {
        inp(j);inp(k);inp(c);
      
            m[j].pb(k);

            m[k].pb(j);
        cost[j][k]=cost[k][j]=c;
    }
    inp(s);inp(d);inp(p);
    ll f=0;
    dfs(s,f,ans,s);
   
    for(i=0;i<final_ans.size();i++)
        printf("%lld ",final_ans[i]);
   printf("\n"); 
   p++;
   ll count=0,inc=1;
   while(pl*inc<p)
   {
       inc++;
       count++;
       p++;
   }

   count++;
   printf("%lld\n",count);
   
   return 0;
}

 
 

