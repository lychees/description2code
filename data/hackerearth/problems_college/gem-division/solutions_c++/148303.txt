
// NISHANT AGARWAL
//CSE MNNIT ALD
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<climits>
#include<queue>
#include<cmath>

using namespace std;

#define inp(n) scanf("%d",&n);
#define inp2(n,m) scanf("%d %d",&n,&m);
#define inp3(n,m,k) scanf("%d %d %d",&n,&m,&k);

#define input(n) scanf("%lld",&n);
#define input2(n,m) scanf("%lld %lld",&n,&m);
#define input3(n,m,k) scanf("%lld %lld %lld",&n,&m,&k);

#define inps(str) scanf("%s",str);

#define out(n) printf("%d\n",n);
#define out2(n,m) printf("%d %d\n",n,m);
#define out3(n,m,k) printf("%d %d %d\n",n,m,k);

#define outlld(n) printf("%lld\n",n);
#define outlld2(n,m) printf("%lld %lld\n",n,m);
#define outlld3(n,m,k) printf("%lld %lld %lld\n",n,m,k);

#define FOR(i,n) for(int i=0;i<n;i++)
#define FOR1(i,n) for(int i=1;i<=n;i++)

#define LL long long int

#define PB push_back
#define MP make_pair
#define F first
#define S second

#define MAX 200010
int maxi(int x,int y)
{
    return (x>y)?x:y;
}
int mini(int x,int y)
{
    return (x>y)?y:x;
}
int arr1[60];
int n;
int dp[65][5015];
int bakri(int i,int s)
{
    if(i==n-2)
        return mini(s+arr1[i],abs(s-arr1[i]));
    if(dp[i][s]!=-1)
        return dp[i][s];
    else
    {
        int a,b,ans;
        a=bakri(i+1,s+arr1[i]);
        b=bakri(i+1,abs(s-arr1[i]));
        ans=mini(a,b);
        dp[i][s]=ans;
        return dp[i][s];
    }
}
int main()
{
    int t,sum,k,monk;
    inp(t);
    while(t--)
    {
        inp(n);
        int arr[n+5];
        sum=0;
        FOR(i,n)
        {
            inp(arr[i]);
            sum=sum+arr[i];
        }
        sort(arr,arr+n);
        int temp;
        int ans=500000;
        int idx;
        FOR(i,n)
        {
            monk=arr[i];
            k=0;
            FOR(j,n)
            {
                if(j!=i)
                {
                    arr1[k++]=arr[j];
                }
            }
            FOR(i,n+3)
                FOR(j,sum+10)
                    dp[i][j]=-1;
            temp=bakri(0,0);
          //  printf("temp %d\n",temp);
            if(temp<ans)
            {
                ans=temp;
                idx=i;
            }
            //printf("%")
        }
        out2(ans,arr[idx]);
    }
    return 0;
}

