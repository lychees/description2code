#include<bits/stdc++.h>
#define LOCAL 0
#define lli long long int
#define si(n) scanf("%d",&n)
#define slli(n) scanf("%lld",&n);
#define ss(n) scanf("%s",n);

const lli MOD = 1000000007ll;
lli sev[100001] = {};

using namespace std;

void multiply(lli F[2][2],lli M[2][2]){lli x=F[0][0]*M[0][0]+F[0][1]*M[1][0];
lli y=F[0][0]*M[0][1]+F[0][1]*M[1][1];lli z=F[1][0]*M[0][0]+F[1][1]*M[1][0];
lli w=F[1][0]*M[0][1]+F[1][1]*M[1][1];F[0][0]=x;F[0][1]=y;F[1][0]=z;F[1][1]=w;}
void power(lli F[2][2],lli n){if(n==0||n==1)return;lli M[2][2]={{1,1},{1,0}};power(F,n/2);multiply(F,F);if(n%2!=0)multiply(F, M);}
lli fib(int n){lli F[2][2]={{1,1},{1,0}};if(n==0)return 0;power(F,n-1);return F[0][0];}

lli modInverse(lli a,lli m){lli m0=m,t,q;lli x0=0,x1=1;if(m==1)return 0;while(a>1){q=a/m;t=m;m=a%m,a=t;t=x0;x0=x1-q*x0;x1=t;}if(x1<0)x1+=m0;return x1;}
lli gcd(lli a,lli b){if(a==0)return b;return gcd(b%a,a);}
void sieve(){sev[0] = 1;sev[1] = 1;for(int i=2;i*i<100001;i++){if(sev[i]==0){for(int j = i+i;j<=100000;j=j+i){sev[j] = 1;}}}}
lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
lli sub(lli a,lli b,lli m=MOD){lli x=a-b;while(x<0)x+=m;return x;}
int main()
{
    string s;
    cin >> s;
    lli n;
    cin >> n;
    lli str[s.length()+1];
    lli j = 1;
    str[0] = 0;
    for(int i=1;i<=s.length();i++){
        str[i] = (str[i-1] + (j*(s[i-1]-'a'+1))%MOD)%MOD;
        j = (j*29)%MOD;
      //  cout << str[i] << " ";
    }
    while(n--){
        lli a,b,c,d;
        cin >> a >> b >> c >> d;
        lli l1 = sub(str[b],str[a-1],MOD);
        lli l2 = sub(str[d],str[c-1],MOD);
       // cout << l1 << " " << l2 << " ";
        lli l3 = powermod(29,b-1,MOD);
        lli l4 = powermod(29,d-1,MOD);
        lli l5 = modInverse(l3,MOD);
        lli l6 = modInverse(l4,MOD);
        lli l7 = (l5*l1)%MOD;
        lli l8 = (l6*l2)%MOD;
        if(l7!=l8){
            cout << "No\n";
        }
        else{
            cout << "Yes\n";
        }
    }
    return 0;
}
