#include <bits/stdc++.h>
#define ll long long int
#define mp make_pair
#define pb push_back
#define X first
#define Y second
using namespace std;
ll a[1001][1001];
bool vis[1001][1001];

int dx[4] = {-1,0,1,0};
int dy[4] = {0,1,0,-1};

bool isvalid(int x,int y,int m,int n) {
	if (x >= 0 && x < m && y >= 0 && y < n) {
		return true;
	}
	return false;
}

int main()
{
	int t,m,n;
	cin >> t;

	while (t--) {
		cin >> m >> n;
		memset(vis,false,sizeof(vis));
		for (int i = 0;i < m; i++) {
			for (int j = 0; j < n; j++) {
				cin >> a[i][j];
			}
		}
		int posx,posy;ll time;
		cin >> posx >> posy >> time;
		posx--;posy--;
		auto comp = [](pair<pair<int,int>,ll> a,pair<pair<int,int>,ll> b) {
			if (a.Y < b.Y) {
				return true;
			}
			return false;
		};
		priority_queue<pair<pair<int,int>,ll>,vector<pair<pair<int,int>,ll> >,decltype(comp) > q(comp);
		ll dist[m][n];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				dist[i][j] = LLONG_MAX;
			}
		}
		dist[0][0] = a[0][0];
		q.push(mp(mp(0,0),a[0][0]));
		ll ans;
		while (!q.empty()) {
			pair<pair<int,int>,ll> t = q.top();
			q.pop();

			for (int i = 0; i < 4; i++) {
				int xx = t.X.X + dx[i];
				int yy = t.X.Y + dy[i];
				if (isvalid(xx,yy,m,n)) {
					ll tt = t.Y + a[xx][yy];
					if (dist[xx][yy] > tt) {
						dist[xx][yy] = tt;
						q.push(mp(mp(xx,yy),tt));
					}
				}
			}
		}
		ans = dist[posx][posy];
		if (ans < time) {
			cout << "YES\n";
			cout << time - ans << endl;
		} else {
			cout << "NO\n";
		}
	}

	return 0;
}
