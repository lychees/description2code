#include <iostream>
#include <math.h>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <fstream>
#include <string>
#include <algorithm>
#include <stack>
#include <queue>

//#include <conio.h>

#define ALL(x) (x).begin(), (x).end()
#define mp make_pair
#define vec vector
#define deb(x) cerr << #x << " = " << x << '\n';

typedef unsigned long long ull;
typedef long double LD;
typedef long long LL;

const LL inf = 1000000000ll;
const LL inf64 = inf * inf;
const LL base = inf + 7;
const LL MOD = inf + 9;
const double pi = acos(-1.0);

using namespace std;

template<typename T, typename P>
const ostream & operator << (ostream & os, const pair<T, P> & a) {
	os.precision(10);
	os << fixed;
	os << a.first;
	os << ' ';
	os << a.second;
	os << ' ';
	return os;
}

bool solve()
{	
	int n;
	scanf("%d", &n);

	vec< int > s(n + 1), preff(n + 1), suff(n + 1);
	int pos = -1;

	for(int i = 1;i <= n;i++) {
		scanf("%d", &s[i]);
		if(pos == -1 || s[pos] < s[i]) pos = i;
		preff[i] = pos;
	}

	pos = -1;
	for(int i = n;i >= 1;i--) {
		if(pos == -1 || s[pos] < s[i]) pos = i;
		suff[i] = pos;
	}
	
	vec< int > ans;

	pos = preff[n];

	while(1) {
		ans.push_back(pos);
		if(pos == 1) break;
		else pos = preff[pos - 1];
	}

	pos = preff[n];

	while(1) {
		ans.push_back(pos);
		if(pos == n) break;
		else pos = suff[pos + 1];
	}

	sort(ALL(ans));
	ans.resize(unique(ALL(ans)) - ans.begin());
	
	for(int i = 0;i < (int)ans.size();i++) cout << ans[i] << ' ';
	cout << '\n';

	return true;
}   

int main() 
{
	//while(solve());
	solve();

	return 0;
}