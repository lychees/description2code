#include<bits/stdc++.h>
using namespace std;
#define INF 0x3f3f3f3f
int a[505];
int dp[505][505],p[2000005],nxt[2000005],prv[2000005];
void sieve()
{
    p[1]=1;
    for(int i=2;i*i<=2000000;i++)
    {
        if(!p[i])
        {
            for(int j=i*i;j<=2000000;j+=i)
                p[j]=1;
        }
    }
}
void primes()
{
    for(int i=2000000;i>0;i--)
    {
        if(!p[i])
            nxt[i]=i;
        else
            nxt[i]=nxt[i+1];
    }
    for(int i=1;i<=2000000;i++)
    {
        if(!p[i])
            prv[i]=i;
        else
            prv[i]=prv[i-1];
    }
}
int cost(int a,int b)
{
    int sum=a+b;
    if(a<=b&&prv[b-1]>=a)
        return nxt[b]+prv[b-1]-sum;
    a=max(a,b);
    a=nxt[a];
    b=nxt[a+1];
    return a+b-sum;
}
int recur(int l,int r)
{
    if(l>=r)
        return 0;
    if(dp[l][r]!=-1)
        return dp[l][r];
    int m=INF;
    for(int k=l+1;k<=r;k+=2)
    {
        int op=recur(l+1,k-1)+recur(k+1,r)+cost(a[l],a[k]);
        m=min(m,op);
    }
    return dp[l][r]=m;
}
int main()
{
    sieve();
    primes();
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",&a[i]);
    memset(dp,-1,sizeof(dp));
    printf("%d\n",recur(0,n-1)+n/2);
    return 0;
}
