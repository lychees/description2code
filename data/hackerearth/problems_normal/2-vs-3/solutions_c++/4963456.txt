#include "bits/stdc++.h"
using namespace std;

const int MX=1e5 + 5;
int arr[MX]={0},p[MX]={0},tree[5*MX]={0};

void twopow()
{
    p[0]=1;
    int i;
    
    for(i=1;i<=MX;++i)
        p[i]=(p[i-1]*2)%3;
}

void build(int node,int st,int end)
{
	if(st==end)
	{
		tree[node]=arr[st];
	}
	
	else
	{
		int mid=(st+end)/2;
		
		build(2*node,st,mid);
		build(2*node+1,mid+1,end);
	
	   tree[node]=((tree[2*node]*p[end-mid]%3)+tree[2*node+1])%3;
	   
	}
	
}

void update(int node,int st,int end,int idx)
{
	if(st==end)
	{
		arr[idx]=1;
		tree[node]=1;
	}
	
	else
	{
		int mid=(st+end)/2;
		
		if(st<=idx && idx<=mid) update(2*node,st,mid,idx);
		else update(2*node+1,mid+1,end,idx);
		
		tree[node]=((tree[2*node]*p[end-mid]%3)+tree[2*node+1])%3;
	}
	
	
}

int query(int node,int st,int end,int l,int r)
{
	if(r<st || end<l) return 0;
	
	if(l<=st && end<=r) return (tree[node]*p[r-end])%3;
	
	
	int mid=(st+end)/2;
		
	int p1=query(2*node,st,mid,l,r);
	int p2=query(2*node+1,mid+1,end,l,r);
		
	return (p1+p2)%3;
	
}

int main()
{
	int n;
	cin>>n;
	
	string s;
	cin>>s;
	
	int x;
	
	for(x=0;x<s.size();x++) arr[x+1]=s[x]-48;
	
	twopow();
	build(1,1,n);
	
	
	int q;
	cin>>q;
	
	while(q--)
	{
		int a;
		cin>>a;
		
		if(a==1)
		{
			int b;
			cin>>b;
			
			if(arr[b+1]==0){
			update(1,1,n,b+1);
			arr[b+1]=1;
			s[b]='1';
			
			}
		}
		
		else
		{
			int c,d;
			cin>>c>>d;
			
			cout<<query(1,1,n,c+1,d+1)<<"\n";
		}
	}
	
	return 0;
}

