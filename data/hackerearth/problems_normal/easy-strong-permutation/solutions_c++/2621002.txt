#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
long long int mod(long long int num)
{
    return num>0? num: (-num);
}
bool myfunction (int i,int j) { return (i<j); }

struct myclass {
  bool operator() (int i,int j) { return (i<j);}
} myobject;

int main () {
    long long int n,i;
    cin>>n;
    int myints[n],ans[n];
    for(i=0;i<n;i++)
        cin>>myints[i];
    vector<int> myvector (myints, myints+n);
    sort (myvector.begin(), myvector.end(), myobject);
    i=0;
    for (vector<int>::iterator it=myvector.begin(); it!=myvector.end(); ++it)
    {
        myints[i]=*it;
        i++;
    }
    for(long long int i=0;i<n;i++)
        ans[i]=0;
    long long int k=n-1,j;
    for(j=0;j<n;j=j+2,k--)
       ans[j]=myints[k];

    if(n%2==0)
        j=n-1;
    else
        j=n-2;
    for(j;j>0;j=j-2,k--)
        ans[j]=myints[k];
    unsigned long long sum=0;
    for(i=0;i<n-1;i++)
        sum+=mod(ans[i]-ans[i+1]);
    sum+=mod(ans[n-1]-ans[0]);
    cout<<sum;
    return 0;
}
