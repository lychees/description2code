#include <iostream>
#include <algorithm>

using namespace std;

struct node
{
    unsigned long long int start,end;
};

bool fucking_critical_function(node a, node b) { return a.start < b.start; }

int main()
{
    unsigned long long int n,s,e,sum=0,r;
    cin>>n>>s>>e;
    r=s;
    node x[n];
    for(unsigned long long int i=0;i<n;++i)
    {
        cin>>x[i].start;
        cin>>x[i].end;
        x[i].start-=x[i].end;
        x[i].end=x[i].start+2*x[i].end;
    }

  /*  for(unsigned long long int j=0;j<n;++j)
    {
        cout<<x[j].start<<",";
    }
    cout<<endl;
    for(unsigned long long int j=0;j<n;++j)
    {
        cout<<x[j].end<<",";
    }
    cout<<endl;*/
    
    std::sort(x,x+n,fucking_critical_function);
    
  /*  for(unsigned long long int j=0;j<n;++j)
    {
        cout<<x[j].start<<",";
    }
    cout<<endl;
    for(unsigned long long int j=0;j<n;++j)
    {
        cout<<x[j].end<<",";
    }
    cout<<endl; */
    
    for(unsigned long long int z=0;z<n;++z)
    {
        if(x[z].start>r && x[z].start<e)
        {
            sum=sum+(x[z].start-r);
            r=x[z].end;
        }

        else if (x[z].end>r && x[z].start<e)
        {
            r=x[z].end;
        }
    }
    if(r<e)
        sum=sum+(e-r);
    cout<<sum;
    return 0;
}










