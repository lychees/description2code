#include<iostream>
#include<map>
#include<set>
#include<vector>
#include<map>
#include<utility>
#include<climits>
#include<algorithm>
#include<sstream>
#include<cmath>
#include<cstdio>
#include<cstring>
using namespace std;
#define mp make_pair
#define s(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define pi(n) printf("%d",n)
#define ps(s) puts(s)
#define rep(i,n) for(i=0; i<(n); ++i)								//rep 	[0,n)
#define repe(i,n) for(i=0; i<=(n); ++i)								//repe 	[0,n]
#define repd(i,n) for(i=(n); --i>=0;)								//repd 	[n,0]
#define repab(i,a,b) for(i=(a); i<(b); ++i)							//repab [a,b)
#define repeab(i,a,b) for(i=(a); i<=(b); ++i)						//repeab[a,b] 
#define repdab(i,a,b) for(i=(b); --i>=(a); )						//repdab[b,a]
#define repc(a,i) for(i=(a).begin(); i!=(a).end(); ++i)//repc container
#define repcd(a,i) for(i=(a).rbegin(); i!=(a).rend(); ++i)//repcd container reverse
#define all(a) a.begin(), a.end() 
#define sz(a) int((a).size()) 
#define maxr(a) max_element(all(a)) //max in range
#define minr(a) min_element(all(a)) //min in range
#define mod 1000000007
#define pb push_back
#define gc getchar_unlocked
#define pc putchar_unlocked
void debug(int i){cout<<i<<endl;}
void sieve(){int i,j,n=100000;bool isPrime[n];memset(isPrime,true,sizeof(isPrime));isPrime[0]=isPrime[1]=false;for(i=2;i<sqrt(n);i++)if(isPrime[i])for(j=i*i;j<n;j+=i)isPrime[j]=false;}
bool asc (int i,int j) { return (i<j); }
bool desc (int i,int j) { return (i>j); }
#define fe(v) for_each(v.begin(),v.end(),debug) //apply func to [it1,it2]
#define pii pair<int,int>
#define pll pair<l,l>
#define itr(a) __typeof((a).begin())//any container iterator
#define FF first
#define SS second
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef long long ll;
typedef int I;
/*inline int scan(){register int n=0,c=gc();while(c<'0'||c>'9')c=gc();while(c<='9'&&c>='0')n=(n<<1)+(n<<3)+c-'0',c=gc();return n;}
inline void print(int a){char s[20];int i=0;do{s[i++]=a%10+'0';a/=10;}while(a);i--;while(i>=0)pc(s[i--]);pc('\n');}
inline int scanneg(){register int n=0,f=1;char c=gc();while(c!='-'&&c<'0')c=gc();if(c=='-')f=-1,c=gc();while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=gc();return n*f;}
/*Vector
v.insert(itr,val),v.erase(it1,it2)
MAP
key-value,insert m[key]=val,sorted on keys,m.insert(pii),m.erase(it1,it2)
,m.find(key),
SET
sorted on val,do dup vals,val cannot be modified,s.find(val),s.insert(val)
,s.insert(it,val)
Algorithm
find(it1,it2,val),returns it2 if val not found
max_element(it1,it2) returns it,min_element(it1,it2) max,min in a range
max(const a,const b),min(const a,const b)
for_each(it1,it2,func) applies func to each el
sort(it1,it2,func)
equal(it1,it1end,it2) true if all match
each below[it1,it2)
count(it1,it2,val),copy(it1,it1end,it2),fill(it1,it2,val)
reverse(it1,it2)
next_permutation(it1,it2)-into the next lexicographically greater permutation(sort before)
true if could rearrange else false
*/
// Useful hardware instructions
#define bitcount                    __builtin_popcount
#define gcd                         __gcd
//c794693fc0a8ee810341873476c51297
//int dp[100][1000000];//10^6 is max sum
I n,m; vi v; I ans=INT_MAX,mx;
int solve()
{
	I low=*(max_element(all(v)));
	I high=accumulate(all(v),0);
	I i;
	while(low<=high)//kind of gives the rightmost insertion point (rosetta code)
	{
		int mid=(low)+(high-low)/2;
		//let us see can all the packages be carried, if max package any worker can carry is mid?
		I count=1,load=0;
		for(i=0;i<n;i++)
		{
			if(load+v[i]<=mid)load+=v[i]; else count++,load=v[i];
		}
		if(count<=m)//okie so mid can be acheived..lets see if the indi workload can be reduced?
			high=mid-1;
		else
			low=mid+1;
	}
	return low;
}
int main() {
	//fast cin/cout
	//ios_base::sync_with_stdio(false);
	 s(m);//movers
	 s(n);//packages
	I i,j,k; 
	rep(i,n){s(k);v.pb(k);}
	cout<<solve();
	return 0;
}