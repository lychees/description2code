#include<cstdio>
#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<sstream>
#include<set>
#include<map>
#include<stack>
#include<cmath>
#include <map>
#include<cstdlib>
#include<cstring>
#include<string>

using namespace std;

#define DEBUG //on-off switch for prlling statements

// Input macros
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)

// Useful constants
#define EPS                         1e-9

// Useful hardware instructions
#define bitcount1                    __builtin_popcount1
#define gcd                         __gcd

// Useful container manipulation / traversal macros
#define forall(i,a,b)               for(ll i=a;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((ll)(a.size()))

// Some common useful functions
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))

#define ll long long int
#define llu long long unsigned
#define ld long
#define MAXLG 22
#define mod 1000000007
int fav[100001];
int ang[100001];
typedef struct type
{
	int val;
	int ind;
}type;
type tot[100001];
int compare(const type& a,const type &b)
{
	return a.val>b.val;
}
void solve()
{
	int n;
	s(n);
	for(int i=0;i<n;i++)
	{
		s(fav[i]);
		s(ang[i]);
		tot[i].ind=i;
		tot[i].val=fav[i]+ang[i];
	}
	sort(tot,tot+n,compare);
	ll ans=0;
	ans=ans+fav[tot[0].ind];
	ans=ans+fav[tot[1].ind];
	for(int i=2;i<n;i++)
	{
		//printf("%d %d\n",ans[itot[i].ind);
		ans=ans-ang[tot[i].ind];
	}
	printf("%lld\n",ans);
}
		
int main()
{
	int t;
	s(t);
	for(int i=0;i<t;i++)
	{
		solve();
	}
}