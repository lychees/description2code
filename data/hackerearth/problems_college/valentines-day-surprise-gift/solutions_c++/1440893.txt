#include <iostream>
#include<math.h>
#define M 1000000007
using namespace std;

int hash1[]={1,1,1,3,3,15,15,105,105,105,105};

long long gcd(long long a,long long b)
{
	long long t;
	t=a%b;
	while(t>0)
	{
		a=b;
		b=t;
		t=a%b;
	}
	return b;
	
}

long long pow2(long long x,long long y)
{
	long long s=1;
	for(int i=1;i<=y;i++)
	s=(s*x)%M;
	//cout<<"Power:"<<s;
	return s;
}



long long calcR(long long n)
{
	if(n<=10)
	return hash1[n];
	else return ((pow2(2,ceil((double)n/4))%M)*(calcR(ceil((double)n/5))%M)*(calcR(ceil((double)n/10)))%M)%M;
	
}
int main()
{
	int t,n,i,j,k;
	long long r,maxans;
	cin>>t;
	
    for(i=0;i<t;i++)
    {
    	maxans=0;
    	cin>>n;
    	r=calcR(n);
    	for(j=1;j<=5;j++)
    	for(k=1;k<=5;k++)
    	{
    		if(gcd(j,k)==1)
    		{
    			maxans=max(maxans,pow2(r*j,r*k)%M);
    		}
    	}
    	cout<<maxans<<endl;
    }
    return 0;
}
