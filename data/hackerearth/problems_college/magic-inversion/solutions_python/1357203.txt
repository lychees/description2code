from sys import stdin
import bisect
def primes(n=10000000):
    sieve = [True] * n
    for i in xrange(3,int(n**0.5)+1,2):
        if sieve[i]:
            sieve[i*i::2*i]=[False]*((n-i*i-1)/(2*i)+1)
    return [2] + [i for i in xrange(3,n,2) if sieve[i]]
def count_inversion(lst1, lst2, lst3):
    lst3.sort()
    count=0
    for i in xrange(0,len(lst1)):
        ind=bisect.bisect_left(lst3, lst1[i])
        count+=(ind-(i+1))
    return count 
prime=primes()
a=int(stdin.readline())
b=map(int, stdin.readline().split())
c=map(int, stdin.readline().split())

print 'MAGIC INVERSION' if count_inversion(b, c, c) in prime else 'SIMPLE INVERSION'

