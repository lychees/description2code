#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef long long int ll;
#define TRvii(c, it) for(vii::iterator it = (c).begin(); it != (c).end(); it++)
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define dfs_white -1
#define dfs_black 1
#define MAX 100005
#define MOD 1000000007
int dfs_visited[MAX];
vii AdjList[MAX];
vector<int> V;
vector<int> Components;
void dfs(int u)
{
    dfs_visited[u]=dfs_black;
    Components.push_back(u);
    TRvii(AdjList[u], v)
    if(dfs_visited[v->first] == dfs_white)
            dfs(v->first);

}

void findComponents(int N)
{
    memset(dfs_visited,dfs_white,sizeof(dfs_visited));
    V.clear();
    F(i,0,N-1)
    {
        if(dfs_visited[i] == dfs_white)
        {
            Components.clear();
            dfs(i);
            V.push_back(Components.size());
        }
    }
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int T,n,m,k,u,v;
    ll ans;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&n,&m);
        F(i,0,n-1)
             AdjList[i].clear();
        F(i,1,m)
        {
            scanf("%d%d",&u,&v);
            AdjList[u].push_back(make_pair(v,0));
            AdjList[v].push_back(make_pair(u,0));
        }
        findComponents(n);
        k = V.size();
        int sum = 0;
        F(i,0,k-1) sum += V[i];
        printf("%d\n",n-sum+k);
    }
    return 0;

}


