#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

string decode(string &s)
{
    string ans = "";
    for (int i = 0; i < s.size(); i++) {
        if (s[i] == 'Y') {
            ans.push_back('1');
        } else {
            ans.push_back('0');
        }
    }
    return ans;
}

int all_one(string &s)
{
    for (int i = 0; i < s.size(); i++) {
        if (s[i] == '0') {
            return 0;
        }
    }
    return 1;
}

string combine(string &s1, string &s2)
{
    string ans = "";
    for (int i = 0; i < s1.size(); i++) {
        if (s1[i] == '1' || s2[i] == '1') {
            ans.push_back('1');
        } else {
            ans.push_back('0');
        }
    }
    return ans;
}

long long solve(vector<string> &input, string ans, int i, int n)
{
    if (all_one(ans))
        return 0;
    if (i == n) {
        return 10000000LL;
    }
    string ret = combine(ans, input[i]);
    return min(1+solve(input, ret, i+1, n), solve(input, ans, i+1, n));
}

int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        string s;
        vector<string> input1;
        for (int i = 0; i < n; i++) {
            cin >> s;
            input1.push_back(s);
        }

        vector<string> input;
        for (int i = 0; i < input1[0].size(); i++) {
            string s = "";
            for (int j = 0; j < input1.size(); j++) {
                s.push_back(input1[j][i]);
            }
            input.push_back(decode(s));
        }
        /*for (int i = 0; i < n; i++) {
            cout << input[i] << endl;
        }*/
        string s1 = "";
        for (int i = 0; i < input[0].size(); i++) {
            s1.push_back('0');
        }
        cout << solve(input, s1, 0, input.size()) << endl;
    }

    return 0;
}
