#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#define pb push_back
 
using namespace std;

long long f[1010], all[1010][1010], dp[1010][1010];

void mod(long long &x){
    x += 1000000007;
    x = x % 1000000007;
}

void inisialisasi(){
    f[1] = 1;
    f[0] = 1;
    for(int i = 2; i < 1001; i++){
        f[i] = f[i-1];
        if(i - 2 >= 0) f[i] += f[i-2];
        mod(f[i]);
        if(i - 3 >= 0) f[i] += f[i-3];
        mod(f[i]);
        if(i - 4 >= 0) f[i] += f[i-4];
        mod(f[i]);
    }
    for(int i = 1; i < 1001; i++){
        for(int j = 1; j < 1001; j++){
            dp[i][j] = 0;
            if(i == 1) all[i][j] = f[j];
            else {
                all[i][j] = all[i-1][j] * f[j];
                mod(all[i][j]);
            }
        }
    }
}

long long solve(int x, int y){
    if(dp[x][y]) return dp[x][y];
    dp[x][1] = 1;
    for(int i = 2; i <= y; i++){
        dp[x][i] = all[x][i];
        long long temp = 0, temp2 ;
        for(int j = 1; j < i; j++){
            temp2 = all[x][j] * dp[x][i-j];
            mod(temp2);
            temp += temp2;
            mod(temp);
        }
        dp[x][i] -= temp;
        mod(dp[x][i]);
    }
    return dp[x][y];
}

int main(){
    inisialisasi();
    int T, x, y;
    scanf("%d", &T);
    while(T--){
        scanf("%d%d", &x, &y);
        cout << solve(x, y) << endl;
    }
    return 0;
}
