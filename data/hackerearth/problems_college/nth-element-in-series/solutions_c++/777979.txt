#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#include<vector>

using namespace std;
#define mod 1000000007
#define max_size 10
int k;
struct Matrix
{
	long long int a[max_size][max_size];
	Matrix(){}
	void init()
	{
		int i;
		memset(a,0,sizeof(a));
		for(i=0;i<max_size;i++)
		a[i][i]=1;
	}
}kuchbhi;
void mul(Matrix &m1,Matrix &m2,Matrix &m3)
{
	memset(m1.a,0,sizeof(m1.a));
	int i,j,z;
	for(i=0;i<k;i++)
		for(j=0;j<k;j++)
			for(z=0;z<k;z++)
			m1.a[i][j]=(m1.a[i][j]+m2.a[i][z]*m3.a[z][j])%mod;
			
}
Matrix pow(Matrix &m,int n)
{
	Matrix temp;
	temp.init();
	if(n==0)return temp;
	if(n==1)return m;
	Matrix q=m;
	while(n!=0)
	{
		if(n &1)
		{
			kuchbhi=temp;
			mul(temp,kuchbhi,m);	
		}
		n>>=1;
		kuchbhi=m;
		mul(m,kuchbhi,kuchbhi);

	}
	return temp;
}
int main()
{
	int i,j,t;
	Matrix m,temp;
	cin>>t;
while(t--)
{
	
	k=5;
	long long int b[k],c[k];
	int n;
	for(i=0;i<k;i++)
	cin>>b[i];
	c[0]=1;
	c[1]=1;
	c[2]=1;
	c[3]=2;
	c[4]=1;
	cin>>n;
	//n--;
	if(n<k)
	cout<<b[n]<<"\n";
	else {
	memset(m.a,0,sizeof(m.a));
	for(i=0;i<k;i++)
	m.a[0][i]=c[i];
	for(i=1;i<k;i++)
	m.a[i][i-1]=1;
	temp=pow(m,n-k+1);
	long long int ans=0;
	for(i=0;i<k;i++)
		ans=(ans+temp.a[0][i]*b[k-i-1])%mod;
		cout<<ans<<"\n";
	}

}
return 0;
}