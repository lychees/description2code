#include <iostream>
using namespace std;

void avlsort(int *A, int index, int N)
{
	int left = 2*index;
    int right = 2*index+1;
    if (right <= N)
    {
    	int tmp = (A[left] > A[right])?A[left]:A[right];
    	if (tmp > A[index])
    	{
    		if (A[left] >= A[right])
    		{
    			A[left] = A[index];
    			A[index] = tmp;
    			avlsort(A,left,N);
    		}else
    		{
    			A[right] = A[index];
    			A[index] = tmp;
    			avlsort(A,right,N);
    		}
    	}
    }else if (left == N)
    {
    	int tmp = A[left];
    	if (A[left] > A[index])
    	{
    		A[left] = A[index];
    		A[index] = tmp;
    		return;
    	}
    }
    return;
};


int main()
{
    int N;
    cin >> N;
    int *A = new int[N+1];
    for(int i = 1; i <= N; ++i)
    {
    	cin >> A[i];
    }
    
    for(int i = N/2; i >= 1; --i)
    {
		avlsort(A,i,N);
    }
    
    for(int i = N; i >=2; --i)
    {
    	avlsort(A,1,i);
    	int tmp = A[1];
    	A[1] = A[i];
    	A[i] = tmp;
    }
    
    int *B = new int[N+1];
    for(int i = 1; i <= N; ++i)
    {
    //	cout << A[i] << " ";
    	B[i] = 1;
    }
    //cout << endl;
    
    for(int i = 1; i < N; ++i)
    {
    	for(int j = i+1; j <= N; ++j)
    	{
    		if (((A[j]%A[i]) == 0) && (B[j] <= B[i]))
    		{
    			B[j] = B[i] + 1;
    		}
    	}
    }
    
    int maxl = 0;
    for(int i = 1; i <= N; ++i)
    {
    	if (B[i] > maxl)
    	{
    		maxl = B[i];
    	}
    }
    
    if (maxl <= 1)
    {
    	cout << -1 << endl;
    }else
    {
    	cout << maxl << endl;
    }
    return 0;
}
