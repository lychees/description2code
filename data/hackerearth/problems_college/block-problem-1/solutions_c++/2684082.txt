#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define Geti(x) scanf("%d",&x)
#define Getl(x) scanf("%ld",&x)
#define Getll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll mod=1e9+7;
const int INF=0x7f7f7f7f;
const double eps = 1e-6;

ll all[1010],tot[1010],stable[1010];

ll fast_expo(ll a,ll b) {
	// a ^ b % mod
	if(b == 1ll) return a;
	ll p;
	if(b % 2 == 0) {
		p = fast_expo(a,b / 2) % mod;
		p = (p * p) % mod;
	}
	else p = (a * fast_expo(a,b - 1)) % mod;

	return p % mod;
}

int main() {
    int t; cin >> t;
	all[1] = 1;
	all[2] = 2;
	all[3] = 4;
	all[4] = 8;

	for (int i = 5; i <= 1004; i ++)
		all[i] = (all[i - 1] + all[i - 2] + all[i - 3] + all[i - 4]) % mod;

	while (t --) {
		ll n,m; cin >> n >> m;
		for (int i = 1; i <= m; i ++) tot[i] = fast_expo(all[i],n);

		stable[1] = 1;

		for (int i = 2; i <= m; i ++) {
			ll temp = 0;
			for (int j = 1; j < i; j ++) {
				temp = (temp + stable[j] * tot[i - j]) % mod;
			}
			stable[i] = (tot[i] - temp);
			if(stable[i] >= mod) stable[i] -= mod;
			if(stable[i] < 0) stable[i] += mod;
		}
		cout << stable[m] << endl;
	}
	return 0;
}
