#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#include <cassert>
#ifdef DEBUG
    #include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<ii>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define dep(it, n) for(int it = n - 1; it >= 0; --it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define dep1(it, n) for(int it = n; it > 0; --it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define rng(cont, n) cont, cont + n
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9 + 7;

#ifdef DEBUG
    #define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
    #define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
    #define debug(...)
#endif

// end of template

#define MAXN (int) (1e6)

#define lsone(value) ((value) & (-value))

int FT_size;
struct FT {
    int arr[MAXN + 1];
    void update(int v, int k) {
        for (;k <= FT_size; k += lsone(k)) {
            arr[k] += v;
        }
    }
    int get(int k) {
        int total = 0;
        for (;k > 0; k -= lsone(k))  {
            total += arr[k];
        }
        return total;
    }
} bits[26];
#undef lsone

char str[MAXN + 1];

int main() {
#ifdef DEBUG
    freopen("akash-and-too-many-assignments.in", "r", stdin);
#endif
    
    int n, q;
    scanf("%d %d%*c", &n, &q);
    scanf("%1000000s%*c", str);

    FT_size = n;

    rep(idx, n) {
        int cv = str[idx] - 'a';
        bits[cv].update(1, idx + 1);
    }

    while (q--) {
        int type;
        scanf("%d", &type);
        if (type == 0) {
            int index;
            char c;
            scanf("%d %c%*c", &index, &c);

            char prev_c = str[index - 1];

            bits[prev_c - 'a'].update(-1, index);
            bits[c - 'a'].update(1, index);

            str[index - 1] = c;
        } else {
            int left_limit, right_limit, k;
            scanf("%d %d %d%*c", &left_limit, &right_limit, &k);
            if (right_limit - left_limit + 1 < k) {
                puts("Out of range");
                continue;
            }
            int ans;
            for (ans = 0; ans < 26; ++ans) {
                int count = bits[ans].get(right_limit) - bits[ans].get(left_limit - 1);
                if (k <= count)
                    break;
                k -= count;
            }
            printf("%c\n", ans + 'a');
        }
    }

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}