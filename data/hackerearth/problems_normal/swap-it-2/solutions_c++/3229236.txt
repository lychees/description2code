// freopen ("input.in","r",stdin);
// freopen ("output.in","w",stdout);
#include<bits/stdc++.h>
#define M 1000000007
#define INF 1000000000000000007LL
#define DMAX 8
#define PI 3.14159265358979323846264338327950288419716939937510582097494459230781
using namespace std;
#define pb push_back
#define mp make_pair
// #define EPS 1e-7
typedef long long LL;
long long expo(LL a,LL b,LL m){
   LL result = 1;
   while (b){
      if (b&1){
         result=  (result*a)%m;
      }
      b= (b >>1)%m ;
      a= (a*a)%m;
   }
  return result;
}
double expof(double a,int b){
   double result = 1;
   while (b){
      if (b&1){
         result=  (result*a);
      }
      b= (b >>1);
      a= (a*a);
   }
  return result;
} 
// void dfs()
// {
//   int dir[DMAX][2] = {{1, 0},{0, 1}, {0, -1}, {-1, 0},{1, 1}, {1, -1}, {-1, -1}, {-1, 1}};
//   for (int k = 0; k < DMAX; ++k)
//   {
//     int dx = i + dir[k][0];
//     int dy = j + dir[k][1];
   
//     if (0 <= dx and dx < n and 0 <= dy and dy < n and str[dx][dy] == '*')
//        cnt++;
//   }
 
// }
int main()
{
   // freopen ("input.in","r",stdin);
   // freopen ("output.in","w",stdout);
   int t,n,k,a[1000005];
   cin>>t;
   for (int Case = 0; Case < t; ++Case)
   {
      cin>>n>>k;
      for (int i = 0; i < n; ++i)
      {
         cin>>a[i];



      }
      int idx,temp;
      for (int i = 0; i <n; ++i)
      {
         if(k==0)
            break;
         temp=INT_MAX;
         for (int j =i+1;j<=i+k&&j<n; ++j)
         {
            if(a[j]<temp&&a[j]<a[i])
            {
               idx=j;
               temp=a[j];
            }
         }
         if(temp==INT_MAX)
            continue;
         int j=idx;
         while(j>i)
         {
            swap(a[j],a[j-1]);
            j--;
         }
         k-=(idx-i);
      }
      for (int i = 0; i < n; ++i)
      {
         cout<<a[i]<<" ";
      }
      cout<<endl;
   }




      

}