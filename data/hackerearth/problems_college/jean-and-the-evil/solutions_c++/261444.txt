#include <iostream>
#include <cstdio>

using namespace std;

typedef long long LL;

#define MAX 1000007
#define INFINITY 1000000007

int N, T;
int num[MAX];

int main()
{
	scanf("%d", &T);
	while (T--)
	{
		scanf("%d", &N);	
		for (int i=1 ; i<=N ; i++)
			scanf("%d", &num[i]);
			
	    // Simple Implementtation of Kadane's Algorithm from Algorithmist
    	int maxSum, maxStartIndex, maxEndIndex;
    	maxSum = -INFINITY;
    	maxStartIndex = 0;
    	maxEndIndex = 0;
    	
    	int currentMaxSum = 0;
    	int currentStartIndex = 1;
    	
    	for(int currentEndIndex=1 ; currentEndIndex<=N ; currentEndIndex++)
    	{
        	currentMaxSum = currentMaxSum + num[currentEndIndex];
        	if(currentMaxSum > maxSum)
            {
            	maxSum = currentMaxSum;
            	maxStartIndex = currentStartIndex;
            	maxEndIndex = currentEndIndex;
            }

        	if (currentMaxSum < 0)
        	{
            	currentMaxSum = 0;
            	currentStartIndex = currentEndIndex + 1;
        	}
    	}
    	printf("%d\n", maxSum);
	}
    return 0;
}
