/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = int(1e9) + 7;

void mult(ll a[16][16], ll b[16][16]) {
  static ll res[16][16];
  memset(res, 0, sizeof(res));
  for (int i = 0; i < 16; i++)
    for (int j = 0; j < 16; j++)
      for (int k = 0; k < 16; k++)
        res[i][j] = (res[i][j] + a[i][k] * b[k][j]) % MOD;
  memcpy(a, res, sizeof(res));
}

void solve(int test_num) {
  ll N, A, B, C, D;
  cin >> N >> A >> B >> C >> D;
  ll mat[16][16], base[16][16];
  memset(mat, 0, sizeof(mat));
  memset(base, 0, sizeof(base));
  for (int i = 0; i < 16; i++)
    mat[i][i] = 1;
  for (int a = 0; a < 2; a++)
    for (int b = 0; b < 2; b++)
      for (int c = 0; c < 2; c++)
        for (int d = 0; d < 2; d++)
          for (int dig = 0; dig < 10; dig++)
            base[a << 3 | b << 2 | c << 1 | d][(a ^ (dig == 2)) << 3 | (b ^ (dig == 3)) << 2
                | (c ^ (dig == 5)) << 1 | (d ^ (dig == 7))]++;
  for (ll e = N - 1; e > 0; e >>= 1) {
    if (e & 1)
      mult(mat, base);
    mult(base, base);
  }
  //plnarr(mat, 16, 16);
  ll res = 0;
  for (int dig = 0; dig < 10; dig++)
    res += mat[(dig == 2) << 3 | (dig == 3) << 2 | (dig == 5) << 1 | (dig == 7)][A << 3 | B << 2
        | C << 1 | D];
  res %= MOD;
  cout << res << endl;
}

void solve() {
#ifdef AZN
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
