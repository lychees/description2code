#pragma comment(linker, "/STACK:1024000000,1024000000") 
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <assert.h>
#include <cmath>
#define x first 
#define y second 
#define pb push_back 
#define mp make_pair 
#define vi vector<int> 
#define pii pair<int,int> 
#define ll long long 
#define ull unsigned long long 
#define inf 1000000007 
#define mod 1000000009
#define all(x) x.begin(),x.end() 
#define N 1000010
#define pi acos(-1.)
#define DBG(x) cerr<<#x<<"="<<x<<"\n"; 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++) 
using namespace std;

int f[N],a[N/2],pos[N/2];pii q[N/2];
void upd(int x,int v){
	while(x<N)f[x]+=v,x+=x&-x;
}
int query(int x){
	int ans=0;
	while(x)ans+=f[x],x-=x&-x;
	return ans; 
}
int main(){
    int T,i,j,k,n,m,ca=0,Q;
	scanf("%d%d",&n,&Q);
	for(i=1;i<=n;i++)scanf("%d",&a[i]);
	int l=0,r=0;
	for(i=0;i<Q;i++){
		char s[2];
		scanf("%d%s",&q[i].x,s);
		if(s[0]=='r')q[i].y=1,r++;
		else q[i].y=0,l++;
	}
	ll ans=0;
	for(i=l+1;i<=n+l;i++)upd(i,1),pos[a[i-l]]=i;
	int M=l+n+r;
	for(i=0;i<Q;i++){
		int x=q[i].x;
		int y=query(pos[x]-1),z=n-1-y;
		//cerr<<x<<" "<<y<<" "<<z<<" "<<l<<" "<<r<<",\t";
		ans+=min(y,z);
		upd(pos[x],-1);
		if(q[i].y==0){
			int l=1,r=pos[x];
			while(l<=r){
				m=(l+r)>>1;
				if(query(m)==0)l=m+1;
				else r=m-1;
			}
			//cerr<<x<<" "<<pos[x]<<" "<<l-1<<",\t";
			pos[x]=l-1;upd(pos[x],1);
		}
		else{
			int l=pos[x],r=M;
			while(l<=r){
				m=(l+r)>>1;
				if(query(m)==n-1)r=m-1;
				else l=m+1;
			}
			//cerr<<x<<" "<<pos[x]<<" "<<r+2<<".\t";
			pos[x]=r+2;upd(pos[x],1);
		}
	}
	printf("%lld\n",ans);
    return 0;
}