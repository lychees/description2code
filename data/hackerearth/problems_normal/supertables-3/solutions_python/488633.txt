import math

def gcd(a, b):
	if b%a == 0:
		return a
	else:
		return gcd(b%a, a)
		
def find_element(a, b, n):
	if n == 0:
		return 0
	if n == 1:
		return a
	l = 0
	r = n+1
	pre = 0
	i = int(math.floor(n/2))
	while 1:
		if a * i < b * (n-i):
			if a * (i+1) < b * (n-i):
				l = i+1
				i = int(math.floor((l+r)/2))
			else:
				return b * (n-i)
		else:
			if a * i > b * ((n-i)+1):
				r = i
				i = int(math.floor((l+r)/2))
			else:
				return a * i
		
t = int(raw_input())
#gcd_dict = {}
while t > 0:
	t = t - 1
	line = raw_input().split()
	a = int(line[0])	
	b = int(line[1])
	n = int(line[2])
	if a == 0:
		print b * n
		continue
	if b == 0:
		print a * n
		continue
	if a == 1 or b == n:
		print n
		continue
	if a > b:
		temp = a
		a = b
		b = temp
	lcm = (b/gcd(a, b))*a
	period = lcm/a + lcm/b - 1
	ans = 0
	if n >= period:
		temp = int(math.floor(n/period))
		ans = temp*lcm + find_element(a, b, n - temp*period)
	else:
		ans = find_element(a, b, n)
	print ans