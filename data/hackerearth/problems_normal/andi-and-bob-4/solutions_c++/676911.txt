#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <stack>
#include <queue>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <utility>

using namespace std;

#define PB push_back
#define MP make_pair
#define S second
#define F first
#define MOD 1000000007
#define INF 1000000007
#define MAXN 10010
#define LL long long
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define LD long double

inline void Solve(){
    LL n, i, prev = 0, flag = 0, x;
    vector<LL> v;
    sld(n);
    for(i = 1; i <= n; i++){
        sld(x);
        if(x & 1){
            v.PB(i - prev);
            prev = i;
            flag = 1;
        }
    }
    if(flag == 0){
        printf("ANDI\n");
        return;
    }
    v.PB(n + 1 - prev);
    LL ans = 0, even_sum = 0, odd_sum = 0;
    for(i = 0; i < v.size(); i++){
        if(i & 1)
            odd_sum += v[i];
        else
            even_sum += v[i];
        //cout<<v[i]<<" ";
    }
    //cout<<endl;
    //cout<<even_sum<<" "<<odd_sum<<endl;
    for(i = 0; i < (LL)v.size(); i++){
        if(i & 1){
            ans += (v[i] * even_sum);
            if(odd_sum > 0)
                odd_sum -= v[i];
        }
        else{
            ans += (v[i] * odd_sum);
            if(even_sum > 0)
                even_sum -= v[i];
        }
    }
    LL total = (n * (n + 1)) / 2;
    //cout<<ans<<" "<<total<<endl;
    if(ans >= total - ans){
        printf("BOB\n");
    }
    else{
        printf("ANDI\n");
    }

    return;
}

int main(){
    LL t = 1;
    cin>>t;
    while(t--){
        Solve();
    }
    return 0;
}
