#include <bits/stdc++.h>

using namespace std;

#define maxN 1000

int n,m,c,v;
int a[maxN+5][maxN+5];
int visit[maxN+5][maxN+5];

int ri[]={0,0,1,-1,1,-1,1,-1};
int cj[]={1,-1,0,0,1,-1,-1,1};

int bfs(int si,int sj)
{
	int k,ui,uj,vi,vj,p=0;
	queue<pair<int,int> > q;
	q.push(make_pair(si,sj));
	visit[si][sj]=1;
	while(!q.empty())
	{
		ui=(q.front()).first;
		uj=(q.front()).second;
		p++;
		q.pop();
		for(k=0;k<8;k++)
		{
			vi=ui+ri[k];
			vj=uj+cj[k];
			if(vi>=0&&ui<n&&vj>=0&&vj<m&&visit[vi][vj]==0&&a[vi][vj]==1)
			{
				visit[vi][vj]=1;
				q.push(make_pair(vi,vj));
			}
		}
	}
	return p;
}

void compute()
{
	int i,j;
	for(i=0;i<n;i++)
		for(j=0;j<m;j++)
			visit[i][j]=0;
	c=0;
	v=0;
	for(i=0;i<n;i++)
		for(j=0;j<m;j++)
			if(visit[i][j]==0&&a[i][j]==1)
			{
				c++;
				v=max(v,bfs(i,j));
			}
}

int main()
{
    int t,i,j;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d%d",&n,&m);
    	for(i=0;i<n;i++)
    		for(j=0;j<m;j++)
    			scanf("%d",&a[i][j]);
    	compute();
    	printf("%d %d\n",c,v);
    }
    return 0;
}
