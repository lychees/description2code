#include <bits/stdc++.h>
using namespace std;
char a[1000005];
int b[1000005];
int bit[26][200005];
int N;
vector<int> position[26];
void update(int ind, int pos, int val)
{
//	printf("update query %d %d %d\n",ind,pos,val);
	while(pos <=N)
	{
		bit[ind][pos]+= val;
		pos += pos&(-pos);
	}
/*	int i;
	for(i=0;i<=N;i++)
	printf("%d ",bit[ind][i]);
	printf("\n");
	*/
}
int query(int ind, int pos)
{
//	printf("calling %d %d\n",ind,pos);
/*		int i;
	for(i=0;i<=N;i++)
	printf("%d ",bit[ind][i]);
	printf("\n");
	*/
	int res = 0;
	while(pos > 0)
	{
		res += bit[ind][pos];
		pos -= pos & (-pos);
	}
//	printf("query %d %d is %d\n",ind,pos,res);
	return res;
}
char s[5];
int main()
{
   // cout << "Hello World!" << endl;
   scanf("%s",&a);
   int n,i;
   for(N=1;a[N-1];N++);
   for(n=1;a[n-1];n++)b[n] = a[n-1],position[a[n-1]-'a'].push_back(n),update(a[n-1]-'a',n,1);
   int m,k;
   scanf("%d",&m);
   while(m--)
   {
   	scanf("%d%s",&k,&s);
   	int in = s[0] - 'a';
   	int lo = 1;
   	int hi = n;
   	int mid;
   	while(hi-lo > 1)
   	{
   		mid = (lo + hi)/2;
   		int count = query(in, mid);
   	//	printf("%d count %d is %d\n",in,mid,count);
   		if(count>= k)
   		{
   			hi = mid;
   		}
   		else {
   			lo = mid;
   		}
   	}
   	int ans = hi;
   	if(query(in, lo)>=k)ans = lo;
   //	printf("change at %d %d\n",in,ans);
   b[ans] = -1;
   	update(in, ans, -1);
   }
   for(i=1;i<=n;i++)
   if(b[i]>0)printf("%c",b[i]);
    return 0;
}
