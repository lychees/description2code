#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:100000000")
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>
#include <cstring>
#include <set>
#include <stdio.h>
#include <vector>
#include <map>
#include <queue>
#include <time.h>
#include <memory.h>

#define ll long long
#define ld long double
#define mp make_pair
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pi 3.141592653589793238462643383279

ll gcd(ll a, ll b) {
	if (b == 0)
		return a;
	else
		return gcd(b, a % b);
}

ll lcm(ll a, ll b) { return (((a*b) / gcd(a, b))); }

ll phi(ll n){
	ll result = n;
	for (ll i = 2; i*i <= n; i++) {
		if (n % i == 0) {
			while (n % i == 0) n /= i;
			result -= result / i;
		}
	}
	if (n > 1) result -= result / n;
	return result;
}

ll binpow(ll a, ll n, ll c) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		res %= c;
		a *= a;
		a %= c;
		n >>= 1;
	}
	res = (res + c) % c;
	return res;
}
#define inf 1000000007

#define eps 0.0001
#define ls (v << 1)
#define rs ((v << 1)+1)
//#define y1 privet

void nxi(int& n){
	bool min = 0; char c; n = 0;
	while ((c = getc(stdin)) && c <= 32);
	if (c == '-') min = 1; else n = c - 48;
	while ((c = getc(stdin)) && c>32) n = (n << 3) + (n << 1) + c - 48;
	if (min) n = -n;
}

void prl(int n){
	if (n == 0) { puts("0"); return; }
	if (n<0) { putchar('-'); n = -n; }
	static int s[10];
	int top = 0;
	while (n>0) s[top++] = n % 10, n /= 10;
	while (top--) putchar(s[top] + 48);
	puts("");
}

#define x1 first
#define y1 second
#define x0 privet
#define y0 pak
#define pll pair<ll, ll>
#define X first
#define Y second
#define ppii pair< pii ,  pii >
#define vi vector<ll>
#define matrix vector<vi>
#define try freagoijf

#define rank ranggggg
#define in(n) scanf("%d",&(n));
#define in2(n,m) scanf("%d %d",&(n),&(m));
#define in3(n,m,k) scanf("%d %d %d",&(n),&(m),&(k));
using namespace std;

const int nmax = 1010;
ld X[5], Y[5], x[5], y[5];

int main()
{
	srand(time(0));
	//freopen("rollback.in", "r", stdin); freopen("rollback.out", "w", stdout);
	//freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

	for (int i = 1; i <= 3; i++) cin >> X[i] >> Y[i];
	x[1] = X[1] + X[2] - X[3];
	x[2] = 2 * X[1] - (x[1]);
	x[3] = 2 * X[2] - x[1];
	y[1] = Y[1] + Y[2] - Y[3];
	y[2] = 2 * Y[1] - (y[1]);
	y[3] = 2 * Y[2] - y[1];
	vector<pair<ld, ld>> v;
	for (int i = 1; i <= 3; i++) v.push_back(mp(x[i], y[i]));
	sort(v.begin(), v.end());
	for (int i = 1; i <= 3; i++) cout << setprecision(4) << fixed << v[i-1].first << " " << v[i-1].second << endl;
	
	return 0;
	while (1){
		vector<pair<ld, ld>> v;
		for (int i = 1; i <= 3; i++)
		for (int j = i + 1; j <= 3; j++)
			v.push_back(mp((x[i] + x[j]) / 2.0, (y[i] + y[j]) / 2.0));
		sort(v.begin(), v.end());
		v.erase(unique(v.begin(), v.end()));
		
		random_shuffle(X + 1, X + 4);
	}



	return 0;
}