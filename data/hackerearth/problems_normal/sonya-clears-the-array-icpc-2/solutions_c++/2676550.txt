#include<bits/stdc++.h>
#define assn(n,a,b) assert(n<=b and n>=a)
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define sd(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
using namespace std;

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
       cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
       const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

#define INF 1000000007ll
#define MAXN 509
#define MAXV 1000100
int A[MAXN];
int dp[MAXN][MAXN];
char str[MAXV+10];
VI prim;
int nextp[MAXV];
int prevp[MAXV];
int AL[MAXV];

void gen(){
    int n=MAXV;
    for(int i=2; i*i<=n; i++)
        if(str[i]==0)
            for(int j=i; j*i<=n; j++)
                str[i*j]=1;
    for(int i=2; i<=MAXV; i++)
        if(str[i]==0)prim.pb(i);
    for(int i=0; i<(int)prim.size()-1; i++){
        nextp[prim[i]]=prim[i+1];
        if(i!=0)prevp[prim[i]]=prim[i-1];
    }
}

int cost(int l, int r){
    int al=AL[l];
    int ar=AL[r];
    int ret=INF;
    if(nextp[al]>=ar)
        ret=min(ret,nextp[al]-r+al-l);
    if(ar!=2 and prevp[ar]>=al)
        ret=min(ret,prevp[ar]-l+ar-r);
    return ret;
}

int rec(int l, int r){
    if(r<l)
        return 0;
    if(r==l)
        return INF;
    int &ret=dp[l][r];
    if(ret!=-1)return ret;
    ret=INF;
    for(int i=l; i<r; i++){
        int a=rec(i+1,r-1);
        int b=rec(l,i-1);
        if(a==INF or b==INF)continue;
        int p = 1 + cost(A[i],A[r]) + a + b;
        ret=min(ret,p);
    }
    return ret;
}

int main()
{
    gen();
    memset(dp,-1,sizeof(dp));
    int n;
    sd(n);
    for(int i=0; i<n; i++){
        sd(A[i]);
        AL[A[i]]=*(lower_bound(prim.begin(),prim.end(),A[i]));
    }
    cout << rec(0,n-1) << endl;
    return 0;
}


