#include<stdio.h>
#include<cstdlib>
#include<iostream>
#include<cmath>
#include<cstring>
#include<limits.h>
#include<list>
#include<map>
#include<vector>
long gcd(long a,long b) {
if (a%b==0) return b; else return gcd(b,a%b);
}
void Divbygcd(long& a,long& b) {
long g=gcd(a,b);
a/=g;
b/=g;
}
long C(int n,int k){
long numerator=1,denominator=1,toMul,toDiv,i;
if (k>n/2) k=n-k; /* use smaller k */
for (i=k;i;i--) {
toMul=n-k+i;
toDiv=i;
Divbygcd(toMul,toDiv); /* always divide before multiply */
Divbygcd(numerator,toDiv);
Divbygcd(toMul,denominator);
numerator*=toMul;
denominator*=toDiv;
}
return numerator/denominator;
}
int main()
{
	long long int t=0;
	scanf("%lld",&t);
	while(t>0)
	{
		 int n=0,k=0;
		scanf("%d%d",&n,&k);
		printf("%ld\n",C(n+k-1,n-1));
		t--;
		}
	
	return 0;
	}
