#include <bits/stdc++.h>
using namespace std;

struct node
{
	int color;
	node *left, *right;
};

unordered_map<int, node *> address;

inline node * newnode(int color)
{
	node * n = new node;
	n->color = color;
	n->left = NULL;
	n->right = NULL;
	return n;
}

void printpreorder(node * root)
{
	if (root != NULL)
	{
		printf("%d ", root->color);
		printpreorder(root->left);
		printpreorder(root->right);
	}
}

void insert(node * root, int x, int y, int z)
{
	if (root != NULL)
	{
		node * cur = address[x];
		if(y > 0)
		{
			cur->left = newnode(y);
			address[y] = cur->left;
		}
		if(z > 0)
		{
			cur->right = newnode(z);
			address[z] = cur->right;
		}
	}
}

int main()
{
	int t;
	scanf("%d", &t);
	while (t--)
	{
		int n;
		scanf("%d", &n);

		node * root = newnode(1);
		address[1] = root;

		for (int i = 0; i < n; i++)
		{
			int x, y, z;
			scanf("%d %d %d", &x, &y, &z);
			insert(root, x, y, z);
		}

		printpreorder(root);
		cout << endl;
	}

	system("pause");
	return 0;
}