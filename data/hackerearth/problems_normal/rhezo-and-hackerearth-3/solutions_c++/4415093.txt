#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
const int N=1000*100+9;
vector<int>G[N];
bool vis[N];
int num[N],low[N];
int tim=0;
vector<pair<int,int> >edges;
map<pair<int,int>,int>MP;
void dfs(int curr,int P){
    num[curr]=low[curr]=++tim;
    int child=0;
    for(auto &to:G[curr] ){
        if(to==P)continue;
        else if(num[to]==-1){
            child++;
            dfs(to,curr);
            low[curr]=min(low[curr],low[to]);
            if(low[to]>num[curr]){
                MP[mp(curr,to)]=1;
                MP[mp(to,curr)]=1;
            }
            //if(P!=0 && low[to]>=num[curr])
            //  vis[curr]=true;
            //if(P==0 && child>1)
            //vis[curr]=true;
        }else{
            low[curr]=min(low[curr],num[to]);
        }
    }
    return;
}
int main(){
    int n,m;cin>>n>>m;
    edges.clear();
    for(int i=0;i<m;++i)
    {
        int u,v;cin>>u>>v;
        G[u].pb(v);
        G[v].pb(u);
        edges.pb(mp(u,v));
    }
    memset(vis,0,sizeof vis);
    memset(num,-1,sizeof num);
    tim=0;
    for(int i=1;i<=n;++i)
        if(num[i]==-1)dfs(i,0);
    int q;cin>>q;
    while(q--){
        int idx;cin>>idx;
        int u=edges[idx-1].first;
        int v=edges[idx-1].second;
        if(MP[mp(u,v)]==1 && MP[mp(v,u)]==1)
            puts("Unhappy");
        else puts("Happy");
    }
    return 0;
}//race_gurram
//racegurram_
