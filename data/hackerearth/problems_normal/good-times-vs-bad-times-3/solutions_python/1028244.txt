from fractions import gcd
primes = []
for i in range(2, 60):
	flag = True
	for j in range(2, i-1):
		if i%j == 0:
			flag = False
			break	
	if flag:
		primes.append(i)

ans = [ [ [[0,0,0] for i in range(60)] for i in range(60)] for i in range(24)]
prevh=prevm=prevs=0
for h in range(24):
	for m in range(60):
		for s in range(60):
			flag = True
			ans[h][m][s][1] = ans[prevh][prevm][prevs][1]
			ans[h][m][s][0] = ans[prevh][prevm][prevs][0]
			for prime in primes:
				if h%prime==0 and m%prime==0 and s%prime==0:
					ans[h][m][s][1] += 1
					ans[h][m][s][2] = 1
					#print h,m,s
					flag = False
					#print ans[h][m][s][1]
					break;
				#if h%prime==0 or m%prime==0 or s%prime==0:
				#	flag = False
			if flag:
				#print 'good'
				ans[h][m][s][0] += 1
			prevh = h
			prevm = m
			prevs = s
			
#print primes			
T = int(raw_input())
for i in range(T):
	h, m, s = [int(j) for j in raw_input().split()]
	
	a = ans[23][59][59][1]-ans[h][m][s][1]
	b = ans[23][59][59][0]-ans[h][m][s][0]
	if ans[h][m][s][2] == 1:
		a += 1
	else:
		b += 1
	x = gcd(a, b)
	if a == 0 or b==0:
		x = 1
	
	print "{0}:{1}".format(a/x,b/x)