#include<iostream>
#include<cmath>
using namespace std;

bool isPrime (int num)
{
    if (num <=1)
        return false;
    else if (num == 2)         
        return true;
    else if (num % 2 == 0)
        return false;
    else
    {
        bool prime = true;
        int divisor = 3;
        double num_d = static_cast<double>(num);
        int upperLimit = static_cast<int>(sqrt(num_d) +1);
        
        while (divisor <= upperLimit)
        {
            if (num % divisor == 0)
                prime = false;
            divisor +=2;
        }
        return prime;
    }
}

int main()
{
	ios_base::sync_with_stdio(false);
	int T;
	cin>>T;
	while(T--)
	{
		long long int a, b, ans = 0;
		cin>>a>>b;
		
		while(a != b)
		{
			if(a > b)
			{
				if(isPrime(a))
					ans -= a;
				else
					ans += a;
				a/=2;
			}
			else
			{
				if(isPrime(b))
					ans -= b;
				else
					ans += b;
				b/=2;
			}
		}	
		if(isPrime(a))
			ans -= a;
		else
			ans += a;	

		cout<<ans<<"\n";

	
	}
	return 0;
}