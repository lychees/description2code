#include <bits/stdc++.h>
#define fr(i,a,b) for (int i = (a); i < (b); ++i)
#define rp(i,b) fr(i,0,b)
#define limit while
#define st first
#define nd second
#define pb push_back
#define db(x) cerr << #x << " == " << x << endl
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef pair<int, ii> iii;
typedef vector<int> vi;

const double eps = 1e-7;
const int inf = 0x3f3f3f3f;
const ll linf = 0x3f3f3f3f3f3f3f3fLL;

const int N = 405;

int n, adj[N][N], cap[N];
bool foi[N], mark[N];
int rep[N];

int corte() {
  int ret, S, T;
  memcpy(mark, foi, sizeof foi);
  rp(i,n) if (!foi[i]) {
    rp(j,n) cap[j] = adj[i][j];
    mark[i] = true;
    S = i;
    break;
  }
  while (true) {
    int x, y = 0;
    rp(i,n) if (!mark[i] && cap[i] > y) x = i, y = cap[i];
    if (!y) break;
    ret = y;
    T = S;
    S = x;
    mark[S] = true;
    rp(i,n) if (!mark[i] && adj[S][i]) {
      cap[i] += adj[S][i];
    }
  }
  foi[S] = true;
  rp(i,n) {
    adj[i][T] += adj[i][S];
    adj[T][i] += adj[S][i];
  }
  return ret;
}

int sets;

int fset(int a) { return rep[a] == a ? a : rep[a] = fset(rep[a]); }

void unir(int a, int b) {
  if (fset(a) == fset(b)) return;
  --sets;
  rep[fset(a)] = fset(b);
}

int main() {
  int q; scanf("%d %d", &n, &q);
  ++n;
  sets = n;
  rp(i,n) rep[i] = i;
  memset(foi, false, sizeof foi);
  memset(adj, 0, sizeof adj);
  rp(i,q) {
    int a, b; scanf("%d %d", &a, &b); --a; --b;
    unir(a, b + 1);
    adj[a][b + 1]++;
    adj[b + 1][a]++;
  }
  if (sets != 1) {
    puts("0");
  } else {
    int res = inf;
    fr(k,1,n) {
      res = min(res, corte());
    }
    printf("%d\n", res);
  }
  return 0;
}
