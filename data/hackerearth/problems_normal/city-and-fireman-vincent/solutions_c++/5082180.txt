#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
void unionC(int x,int y,int parent[]);
int find(int parent[],int x);
int cost[10000];

int find(int parent[],int x)
{
	if(parent[x]==x)
		return x;
	parent[x] = find(parent,parent[x]);
	return parent[x];
}

void unionC(int x,int y,int parent[])
{
	int px = find(parent,x);
	int py = find(parent,y);
	if(px!=py)
		parent[px] = py;
}
bool cmp2(int i,int j)
{
	return cost[i]<cost[j];
}

int main()
{
    int n,k,a,b;
    //freopen("file1.txt","r",stdin);
    cin>>n;
    int parent[n+1],minm,cnt;//,visited[n+1];
    for(int i=1;i<=n;i++)
    {
    	cin>>cost[i];
    	parent[i] = i;
    }
    cin>>k;

    for(int i=0;i<k;i++)
    {
    	cin>>a>>b;
    	unionC(a,b,parent);
    }

    for(int i=1;i<=n;i++)
    	parent[i]=find(parent,i);


    vector<int> dsu[n+1];

    for(int i=1;i<=n;i++)
    {
    	dsu[parent[i]].push_back(i);
    	//visited[i]=0;
    }

    long long pdt = 1;
    //cout<<"fdsfg";
    int mn,p;
    for(int i=1;i<=n;i++)
    {
    	if(dsu[i].size()==0) continue;

        sort(dsu[i].begin(),dsu[i].end(),cmp2);
        mn = cost[dsu[i][0]];p=1;
        for(int j=1;j<dsu[i].size();j++)
        {
        	if(cost[dsu[i][j]]==mn)
        		p++;
        	else break;
        }
        pdt = (pdt*p)%MOD;//cout<<mn<<endl;

    }

    cout<<pdt<<endl;

}
