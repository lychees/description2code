#include<iostream>
#include<vector>
#include<algorithm>
#include<cstdio>
using namespace std;
#define max 400004
#define mod 1000000007
//vector<vector <long long int> > dps(201,vector<int>(max));
vector<long long int> vec(max);
vector<long long int> vecspe(max);
vector<vector<int> > dpk(201,vector<int>(max));
/*vector<vector<int> > visits(201,vector<int>(max));
vector<vector<int> > visitk(201,vector<int>(max));
vector<int> visit(201);
void dp(int n,int j,vector<int> &vec,int sum){
	if(j==n){
	dps[sum]++;
	return;
	}
	dp(n,j+1,vec,visit,sum);
	dp(n,j+1,vec,visit,sum+vec[j]);
	return;
}*/
int main()
{
   long long int temp,ans=0;
   int temps,tempe;
   int n,q;
   scanf("%d",&n);
   vector<int> vecs(n+1);
   vector<int> veck(n+1);
   for(int i=1;i<=n;i++) scanf("%d",&vecs[i]);
   for(int i=1;i<=n;i++) scanf("%d",&veck[i]);
   sort(vecs.begin(),vecs.end());
   sort(veck.begin(),veck.end());
   scanf("%d",&q);
   for(int i=0;i<=n;i++){
   	//dps[i][0]=1;
   	dpk[i][0]=1;
   }
   for(int i=1;i<=n;i++){
   	for(int j=1;j<max;j++){
   		dpk[i][j]=(dpk[i][j]+dpk[i-1][j])%mod;
   		if(j>=vecs[i])
   		dpk[i][j]=(dpk[i][j]+dpk[i-1][j-vecs[i]])%mod;
   	}
   }
   for(int i=0;i<max;i++)vec[i]=dpk[n][i];
   for(int i=1;i<=n;i++){
   	for(int j=1;j<max;j++)dpk[i][j]=0;
   }
   
   for(int i=1;i<=n;i++){
   	for(int j=1;j<max;j++){
   		dpk[i][j]=(dpk[i][j]+dpk[i-1][j])%mod;
   		if(j>=veck[i])
   		dpk[i][j]=(dpk[i][j]+dpk[i-1][j-veck[i]])%mod;
   	}
   }
   vecspe[0]=1;
   for(int i=1;i<max;i++) vecspe[i]=(dpk[n][i]+vecspe[i-1])%mod;
   for(int i=0;i<max;i++){
   	temp=0;
   	if(i+q<max)
   	tempe=i+q;
   	else
   	tempe=max-1;
   	if(i-q>0)
   	temps=i-q-1;
   	else{
   	temps=0;
   	temp++;
   	}
   	temp=(temp+vecspe[tempe]-vecspe[temps])%mod;
   	
   	if(temp<0)
   	temp+=mod;
   	ans=(ans+(vec[i]%mod*temp%mod)%mod)%mod;
   }
   printf("%lld",ans);
    return 0;
}
