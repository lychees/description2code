#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <cstdlib>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include<limits>
using namespace std;
struct point{
    int x, y;
};

bool cmp(point a, point b) {
    return a.x< b.x;
}
point A[100009];
struct compare  
 {  
   bool operator()(const long long& l, const long long& r)  
   {  
       return l > r;  
   }  
 };  
int main() 
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		
		for(int i=0;i<n;i++) cin>>A[i].x;
        for(int i=0;i<n;i++) 
		{
			int p;
			cin>>p;
			(A[i].y)=(A[i].x) +p;
		}
         std::sort(A, A + n, cmp);
         priority_queue<int,vector<int>, compare > pq;
        
		 int ans=0;
		 for(int i=0;i<n;i++)
		 {
		 	while(!pq.empty() && pq.top()<=A[i].x) pq.pop();
		 	pq.push(A[i].y);
		 	ans=max(ans, (int)pq.size());
		 	
		 }
         cout<<ans<<endl;
		
	}

   
    return 0;
}
