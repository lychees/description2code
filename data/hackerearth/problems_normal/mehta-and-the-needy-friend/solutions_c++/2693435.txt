using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

int test,m;
string s;
ll dp[19][2][2][2][2][2][2],a,b,k,first,last,mid,d,ans;

ll xuli(int pos,int i2, int i3, int i5, int i7, bool pre, bool check){
    if (pos==m){
        if (!i2 && !i3 && !i5 && !i7) dp[pos][i2][i3][i5][i7][pre][check]=1;
        else dp[pos][i2][i3][i5][i7][pre][check]=0;
    }
    ll ans=dp[pos][i2][i3][i5][i7][pre][check];
    if (ans==-1){
        ans=0;
        int x;
        if (pre) x=9;
        else x=s[pos]-'0';
        FORE(i,0,x){
            if (!check && i==0) ans+=xuli(pos+1,i2,i3,i5,i7,pre|(i<x), check|(i>0));
            if (i==1) ans+=xuli(pos+1,i2,i3,i5,i7,pre|(i<x), check|(i>0));
            if (i==2) ans+=xuli(pos+1,(i2+1)%2,i3,i5,i7,pre|(i<x), check|(i>0));
            if (i==3) ans+=xuli(pos+1,i2,(i3+1)%2,i5,i7,pre|(i<x), check|(i>0));
            if (i==4) ans+=xuli(pos+1,i2,i3,i5,i7,pre|(i<x), check|(i>0));
            if (i==5) ans+=xuli(pos+1,i2,i3,(i5+1)%2,i7,pre|(i<x), check|(i>0));
            if (i==6) ans+=xuli(pos+1,(i2+1)%2,(i3+1)%2,i5,i7,pre|(i<x), check|(i>0));
            if (i==7) ans+=xuli(pos+1,i2,i3,i5,(i7+1)%2,pre|(i<x), check|(i>0));
            if (i==8) ans+=xuli(pos+1,(i2+1)%2,i3,i5,i7,pre|(i<x), check|(i>0));
            if (i==9) ans+=xuli(pos+1,i2,i3,i5,i7,pre|(i<x), check|(i>0));
        }
    }
    return dp[pos][i2][i3][i5][i7][pre][check]=ans;
}

ll count(ll n){
    s="";
    while (n){
        s=(char)(n%10+48)+s;
        n/=10;
    }
    m=s.length();
    memset(dp,-1,sizeof(dp));
    return xuli(0,0,0,0,0,0,0);
}

int main(){
 //   freopen("mehta-and-the-needy-friend.inp", "r", stdin);
 //   freopen("mehta-and-the-needy-friend.out", "w", stdout);
    ri(test);
    while (test--){
        ri(a); ri(b); ri(k);
        if (count(b)-count(a-1)<k) puts("-1");
        else{
            d=count(a-1);
            first=a-1;
            last=b+1;
            ans=INF*INF;
            while(first+1<last){
                mid=(first+last)/2;
                if (count(mid)-d>=k){
                    last=mid;
                    ans=min(ans,mid);
                }
                else first=mid;
            }
            cout << ans << "\n";
        }
    }
}
