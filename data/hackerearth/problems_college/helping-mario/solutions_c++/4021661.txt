#include <iostream>
#include <map>
#include <vector>
using namespace std; 
 
size_t Gcd(size_t x, size_t y) {
	if(x > y)
		swap(x, y);
	while(true) {
		size_t r = y % x;
		if(r == 0) return x;
		if(r == 1) return 1;
		y = x;
		x = r;
	}
	return 0;
}
 
size_t GetCountUtil(vector<size_t> &arr, size_t i, size_t gcd, size_t l, size_t r) {
	map<size_t, size_t> mp;
    for(auto &i : arr) {
    	map<size_t, size_t> tmp(mp);
    	for(auto &p : mp) {
    		tmp[Gcd(p.first, i)] += mp[p.first];
    	}
    	swap(tmp, mp);
    	mp[i] += 1;
    }
    size_t sum = 0;
    for(auto &p : mp) {
    	if(p.first >= l && p.first <= r) {
    		sum += p.second;
    	}
    }
    return sum;
}
 
size_t GetCount(vector<size_t> &arr, size_t l, size_t r) {
	size_t gcd = -1;
	return GetCountUtil(arr, arr.size(), gcd, l, r);
}
 
int main()
{
    size_t t;
    cin >> t;
    while(t--) {
    	size_t n;
    	cin >> n;
    	vector<size_t> arr(n);
    	for(size_t &i : arr) {
    		cin >> i;
    	}
    	size_t l, r;
    	cin >> l >> r;
    	cout << GetCount(arr, l, r) << endl;
    }
    return 0;
}