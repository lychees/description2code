#include <iostream>
using namespace std;
typedef long long LL;

const LL mod = 1000000007LL;
LL F[1000007];
LL inv(LL n, LL p = mod - 2) {
  if (p == 0) return 1;
  LL ret = inv(n, p / 2);
  ret *= ret; ret %= mod;
  if (p % 2) {
    ret *= n;
    ret %= mod;
  }
  return ret;
}
LL C(LL n, LL k) {
  LL ret = F[n];
  ret *= inv(F[k]);
  ret %= mod;
  ret *= inv(F[n-k]); ret++;
  ret %= mod;
  return ret;
}


LL A[1000007];
LL P[1000007];
//a(n) = 2^(n-1)*(1+2^n). 
int main()
{
	//a(n) = 6*a(n-2)-8*a(n-4)
	F[0] = 1;
	P[0] = 1;
	for (LL i = 1; i <= 1000000; ++i) P[i] = (P[i-1] * 2) % mod;
  	for (LL i = 1; i <= 1000000; ++i) F[i] = (F[i-1] * i) % mod;
  	//a(1)=1, a(n) = (3(2n-1)*a(n-1)-5(n-2)*a(n-2))/(n+1)
  	A[1] = 1; A[2] = 3;
  	for (LL i = 1; i <= 1000000; ++i) {
  		//A[i] = 3LL * (2LL * i - 1) * A[i-1] - 5LL * (i - 2) * A[i - 2];
  		//A[i] %= mod;
  		//A[i] *= inv(i + 1);
  		A[i+1] = P[i-1] * (1 + P[i]); A[i] %= mod;
  	}
  	
  	//	a(0)=a(1)=1, a(2)=2, a(3)=3, a(n)=4*a(n-2)-2*a(n-4)
  	
  	int t; cin >> t;
  	while (t--) {
  		int n; cin >> n;
  		if (n == 1) {
  			cout << 1 << '\n';
  		} else if (n == 2) {
  			cout << 1 << "\n";
  		}
  		else {
  		n++;
  		LL ret = A[n / 2 - 1];
  		if (n % 2 == 1) ret *= 2;
  		++ret;
  		ret %= mod;
  		cout << ret << '\n';
  		//cout << (A[n] + 1) % mod<< '\n';
  		}
  	}
    return 0;
}
