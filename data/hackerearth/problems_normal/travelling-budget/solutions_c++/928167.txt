#include <bits/stdc++.h>

using namespace std;

typedef vector<int> VI;
typedef long long LL;
typedef pair<int,int>   PI;

#define FOR(i,a,b) for(register int i=a;i<(b);i++)
#define FORE(i,a,b) FOR(i,a,(b)+1)
#define FORD(i,a,b) for(int i=a;i>=(b);i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define mod 1000000007LL
#define MP make_pair
#define INF mod
#define getchar_unlocked getchar

LL get()
{
    char c;
    while(c=getchar_unlocked(),(c<'0'||c>'9')&&(c!='-'));
    bool flag=(c=='-');
    if(flag)
        c=getchar_unlocked();
    LL x=0;
    while(c>='0'&&c<='9')
    {
        x=x*10+c-48;
        c=getchar_unlocked();
    }
    return flag?-x:x;
}

void output(LL x)
{
    if(x<0)
    {
        putchar('-');
        x=-x;
    }
    LL len=0,data[10];
    while(x)
    {
        data[len++]=x%10;
        x/=10;
    }
    if(!len)
        data[len++]=0;
    while(len--)
        putchar(data[len]+48);
    putchar('\n');
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("a.in","r",stdin);
    //freopen("a.out","w",stdout);
#endif
    //ios_base::sync_with_stdio(0);
    int t, n, m, b, q;
    for(t = get(); t--;)
    {
        n = get();
        m = get();
        b = get();
        int cost[n][n], len[n][n];
        memset(len,-1,sizeof len);
        int x,y,c,l;
        while(m--)
        {
            x = get();
            y = get();
            c = get();
            l = get();
            cost[x-1][y-1] = c;
            len[x-1][y-1] = l;
        }
        int dp[n][b+1];
        REP(i,n) REP(j,b+1) dp[i][j] = INF;
        REP(i,b+1) dp[0][i] = 0;
        REP(j,b+1) REP(i,n)  REP(k,n)
        {
            if(len[k][i]!=-1 and j>=cost[k][i] and dp[k][j-cost[k][i]]!=INF) dp[i][j] = min(dp[i][j],dp[k][j-cost[k][i]]+len[k][i]);
        }
        for(q = get();q--;)
        {
            x = get();
            y = get();
            if(dp[x-1][y]==INF)puts("-1"); else output(dp[x-1][y]);
        }
    }
    return 0;
}

