/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-9
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256

using namespace std;

int n,ar[1<<20],tests;
set<int> ps;
vector<pair<int, int> > S;
long long ans;
set<pair<int, int> > ::iterator it;
set<int> ::iterator it1,it2;
int qp,val;

void dodel(long pss)
{
// S.erase(make_pair(ar[pss],pss));
 ps.erase(pss);
}

int main(){
//freopen("k.in","r",stdin);
//freopen("k.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
//ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
 cin>>n;
 S.clear();
 ps.clear();
 
 for (int i=1;i<=n;i++)
 {
//  cin>>ar[i];
  scanf("%d",&ar[i]);
  S.push_back(make_pair(ar[i],i));
  ps.insert(i);
 }
 ps.insert(n+1);
 ps.insert(0);
 ar[0]=ar[n+1]=1e9+1e6;
 
 sort(S.begin(),S.end());
 pair<int, int> it;
 
 ans=0;
 for (int i=1;i<n;i++)
 {
  it=S[i-1];
  val=(it).first;
  qp=(it).second;
//  cout<<"%"<<val<<" "<<qp<<endl;
  it1=ps.lower_bound(qp+1);
  it2=ps.lower_bound(qp);
  --it2;
  int val1,val2;
  val1=ar[(*it1)];
  val2=ar[(*it2)];
//  cout<<val1<<" "<<val2<<endl;
  ans+=min(val1,val2);/*
  if (val1<val2)
  {
   dodel(*it1);
  }
  else dodel(*it2);*/
  dodel(qp);
 }
 cout<<ans<<endl;
}

cin.get();cin.get();
return 0;}
