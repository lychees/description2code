#include <iostream>
#include <queue>
using namespace std;
int used[1001][1001]={0};
int xx[4]={-1,0,0,1};
int yy[4]={0,1,-1,0};
int an = -100;
int n,M[1001][1001];
void bfs(int i, int j)
{
	//cout<<i<<" "<<j<<endl;
	deque< pair<int,int> >q;
	q.push_back(make_pair(i,j));
	int ans = 1;
	while(!q.empty()){
		int x = q.front().first;
		int y = q.front().second;
		q.pop_front();
		used[x][y]=1;
		for(int i=0;i<4;i++)
		{
			    int x1=x+xx[i];
			  	int y1=y+yy[i];
			if(x1>=0 && x1<=(n-1) && y1>=0 && y1<=(n-1))
			  {
                if(!used[x1][y1] && M[x1][y1]==1){
                	//cout<<x1<<" "<<y1<<" "<<M[x1][y1]<<endl;
                	used[x1][y1] = 1;
                	ans += 1;
                    q.push_back(make_pair(x1,y1));
                }
			  }
		}
	}
	if(ans > an) an = ans;
}
int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
      cin>>M[i][j];
   for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
    if(M[i][j]==1 && used[i][j]==0) bfs(i,j);
    cout<<an<<endl;
    return 0;
}
