#include<bits/stdc++.h>
using namespace std;
#define lx long long
#define mod 1000000007
lx derange[101];
lx c[101][101];
void precomp(int n)
{
    derange[0]=1;
    derange[1]=0;
    for (int i=2;i<=n;i++)
        derange[i]=((i-1)*(derange[i-1]+derange[i-2]))%mod;
    for (int i=0;i<=n;i++)
        for (int j=0;j<=i;j++)
        {
            if (i==j || j==0)
                c[i][j] = 1;
            else
                c[i][j] = (c[i-1][j]+c[i-1][j-1])%mod;
        }
}
lx power(lx a,lx b,lx m)
{
    lx r = 1;
    while(b)
    {
        if (b&1)
            r = (r*a)%m;
        b >>= 1;
        a = (a*a)%m;
    }
    return r;
}
int main()
{
    int n,l,r;
    cin>>n>>l>>r;
    precomp(n);
    lx p = 0, q = 0;
    for (int i=0;i<=n;i++)
    {
        lx ways = (derange[i] * c[n][i])%mod;
        if (l<=i && i<=r)
        {
            p += ways;
            p %= mod;
        }
        q += ways;
        q %= mod;
    }
    lx ans = (p*power(q,mod-2,mod))%mod;
    cout<<ans<<endl;
    return 0;
}
