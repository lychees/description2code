#include <iostream>
#include<algorithm>
//#include<cmath>
//#include <cstdio>
//#include <cstring>
using namespace std;
unsigned long long lcm(unsigned long long x,unsigned long long y)
{
	unsigned long long r,temp;
	
/*	 r=y;temp=2;
	while(r<=(x*y))
	{
		if(!(r%x))
		 return r;
		else
		 r=r*(temp++);
	}*/
	 r=(x*y)/__gcd(x,y);
	return (r);
}
unsigned long long fun(unsigned long long int a,unsigned long long int b,unsigned long long n)
{
    unsigned long long int temp;
    unsigned long long low,mid,high,count;//;
    if(a>b)
	 {
	 	temp=a;
	 	a=b;
	 	b=temp;
	 }
	 
	 low=1;high=b*n;
	 while(low<=high)
	 {
	 
	 mid=(low+high)/2;
	 count=(mid/a)+(mid/b)-(mid/lcm(a,b));
     
      if(count>n)
       high=mid-1;
      else if(count<n)
       low=mid+1;
       else
        break;
     }
     if((mid%a)<=(mid%b))
      	 return (mid-(mid%a));
      	else
      	 return (mid-(mid%b));  
    // return -1;
  
    
}
int main()
{
	unsigned long long num,n;
    unsigned long long int a,b;    
    cin>>num;
    while(num--)
    {     
     cin>>a>>b>>n;
     cout<<fun(a,b,n)<<endl;//[1],arr[2]));
     }
    return 0;
}