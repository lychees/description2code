#include <bits/stdc++.h>
#define ll long long

using namespace std;

ll dp[20][200][2000];
std::vector<ll> dig;

ll func(ll index, ll sum, ll sqsum, bool tight){
	if(index == -1) return __gcd(sum, sqsum) == 1 ? 1 : 0;
	if(!tight && dp[index][sum][sqsum] != -1) return dp[index][sum][sqsum];
	ll last = tight ? dig[index] : 9;
	ll ans = 0;
	for(ll i=0;i<=last;i++){
		ans += func(index - 1, sum + i, sqsum + (i*i), tight && (i == last));
	}
	if(!tight) dp[index][sum][sqsum] = ans;
	return ans;
}

ll solve(ll n){
	if(n == 0) return 0;
	dig.clear();
	while(n != 0){
		dig.push_back(n%10);
		n/=10;
	}
	return func(dig.size() - 1, 0, 0, true);
}

int main()
{
	ll t,l,r;
	memset(dp, -1, sizeof(dp));
	cin >> t;
	while(t--){
		cin >> l >> r;
		cout << solve(r) - solve(l-1) << endl;
	}

	return 0;
}