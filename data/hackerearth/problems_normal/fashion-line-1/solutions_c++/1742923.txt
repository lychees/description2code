#include<bits/stdc++.h>
using namespace std;
int t1;
#define MAX 10001
int a[MAX];
int l;
int r;
int n;
int k;
string s;
string t;
set<char> N;
int ge(int j){
	if (j < 0){
		return 0;
	}
	return a[j];
}
int main(){
	scanf("%d", &t1);
	while (t1--){
		N.clear();
		scanf("%d%d%d%d", &n,&k,&l,&r);
		cin >> s;
		cin >> t;
		for (int i = 0; i < t.size(); i++){
			N.insert(t[i]);
		}
		for (int i = 0; i < s.size(); i++){
			if (N.count(s[i])){
				a[i]=1;
			}
			else{
				a[i] = 0;
			}
			if (i){
				a[i] += a[i - 1];
			}
		}
		long long int way = 0;
		for (int i = 0; i < s.size(); i++){
			int mint = i;
			int maxt = n-1;
			while (mint +1 < maxt){
				int mid = (mint + maxt) / 2;
				if (ge(mid) - ge(i - 1) >= l){
					maxt = mid;
				}
				else{
					mint = mid+1;
				}
			}
			if (mint != maxt){
				if (ge(mint) - ge(i - 1) >= l){
					maxt = mint;
				}
				else{
					mint = maxt;
				}
			}
			if (ge(mint) - ge(i - 1)<l){
				continue;
			}
			int ind = mint;
			mint=i;
			maxt = n-1;
			while (mint + 1 < maxt){
				int mid = (mint + maxt) / 2;
				if (ge(mid) - ge(i - 1) > r){
					maxt = mid;
				}
				else{
					mint = mid;
				}
			}
			if (mint != maxt){
				if (ge(maxt) - ge(i - 1) > r){
					maxt = mint;
				}
				else{
					mint = maxt;
				}
			}
			if(ge(mint)-ge(i-1)>r){
				continue;
			}
			long long int len = mint - ind + 1;
			way += len;
		}
		printf("%lld\n", way);
	}
	return 0;
}
