#include <bits/stdc++.h>
using namespace std;
#define lli long long int

std::vector<std::string> split(std::string str,std::string sep){
    char* cstr=const_cast<char*>(str.c_str());
    char* current;
    std::vector<std::string> arr;
    current=strtok(cstr,sep.c_str());
    while(current!=NULL){
        arr.push_back(current);
        current=strtok(NULL,sep.c_str());
    }
    return arr;
}

multiset<string>bf,gf;
int main()
{
    lli t;
    char c,colon;
    string s;
	cin>>t;
    while(t--)
    {
        cin>>c;
        if(c=='G')
        {
                cin>>colon;
                std::getline (std::cin,s);

                vector<string>temp;
                temp=split(s," ");
                for(int i=0;i<temp.size();i++)
                {
                        gf.insert(temp[i]);
                }

        }
        if(c=='M')
        {
                cin>>colon;
                std::getline (std::cin,s);

                vector<string>temp;
                temp=split(s," ");
                for(int i=0;i<temp.size();i++)
                {
                        bf.insert(temp[i]);
                }
        }


    }

    int fin[31];
    for(int i=0;i<31;i++)
    fin[i]=0;

  /*  multiset<string>:: iterator it;
    for(it=gf.begin();it!=gf.end();it++)
    {	
    
        cout<<*it<<" "<<gf.count(*it)<<endl;

    }*/
    
    
    for(int i=1;i<31;i++)
    {
        fin[i]=(2*(gf.count(to_string(i))))+fin[i];
       // cout<<fin[i]<<endl;
	//	cout<<"count of "<<i<<" is "<<gf.count(to_string(i))<<endl;
    }
    

     for(int i=1;i<31;i++)
    {
        fin[i]=((bf.count(to_string(i))))+fin[i];

    }

	
	
    int ans=0,maxi=-1213,flag=0;
    for(int i=1;i<31;i++)
    {
        if(maxi<fin[i])
        {
            maxi=fin[i];
            ans=i;
        }

    }
    for(int i=1;i<31;i++)
    {
        if(fin[ans]<=fin[i]&&ans!=i)
        {
        	
            flag=1;
        }
    }
	
    if(flag==0&&(ans==19||ans==20))
    cout<<"Date\n";
    else
    cout<<"No Date\n";

   
    return 0;
}
