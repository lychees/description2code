#include <bits/stdc++.h>
using namespace std;

#define debug(args...) fprintf(stderr,args)

typedef long long lint;
typedef pair<int,int> pii;
typedef pair<lint,lint> pll;

const int INF = 0x3f3f3f3f;
const lint LINF = 0x3f3f3f3f3f3f3f3fll;
const int MAXS = 310;
const int MOD = 1e9+9;

int literals[MAXS];
char operations[MAXS];
lint dp[MAXS][MAXS][2];

lint go(int l,int r,int value) {
    lint &ret = dp[l][r][value];
    if(ret != -1) return ret;
    if(l == r) return ret = (value == literals[l] ? 1 : 0);
    ret = 0;
    for(int mid = l; mid < r; ++mid) {
        for(int left_hand = 0; left_hand <= 1; ++left_hand) {
            for(int right_hand = 0; right_hand <= 1; ++right_hand) {
                bool valid = 0;
                if(operations[mid] == 'a' && (left_hand & right_hand) == value)
                    valid = 1;
                else if(operations[mid] == 'o' && (left_hand | right_hand) == value)
                    valid = 1;
                else if(operations[mid] == 'x' && (left_hand ^ right_hand) == value)
                    valid = 1;
                if(valid) ret = (ret + go(l,mid,left_hand) * go(mid+1,r,right_hand))%MOD;
            }
        }
    }
    return ret;
}

int main() {
    memset(dp,-1,sizeof(dp));
    char lit[MAXS];
    scanf(" %s %s",lit,operations);
    int len = strlen(lit);
    for(int a=0;a<len;++a)
        literals[a] = lit[a] - '0';
    int q;
    for(scanf("%d",&q);q--;) {
        int l,r;
        char value[10];
        scanf("%d%d %s",&l,&r,value);
        printf("%lld\n",go(l-1,r-1,value[0] == 't'));
    }        
    return 0;
}
