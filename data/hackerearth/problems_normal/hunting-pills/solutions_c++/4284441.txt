#include <bits/stdc++.h>
using namespace std;
stack<int> st;
int pills[1009];
int vis[1009];
int cnt;

void dfsst(int n,vector<int> gr[])
{
	vis[n] = 1;
	for(vector<int>::iterator it = gr[n].begin();it!=gr[n].end();it++)
	{
		if(!vis[*it])
			dfsst(*it,gr);
	}
	st.push(n);
	
}
void dfsc(int n,vector<int> grr[])
{
	vis[n] = 1;
	cnt+=pills[n];
	for(vector<int>::iterator it = grr[n].begin();it!=grr[n].end();it++)
	{
		if(!vis[*it])
			dfsc(*it,grr);
	}
}
int main()
{
    int T,a,b;
    cin>>T;
    while(T--)
    {
    	int N,M;
    	cin>>N>>M;
    	vector<int> gr[N+1],grr[N+1];
    	for(int i=0;i<N;i++)
    	{
    		cin>>pills[i];
    	}
    	for(int i=1;i<=M;i++)
    	{
    		cin>>a>>b;
    		gr[a].push_back(b);
    		grr[b].push_back(a);
    	}
    	
    	for(int i=0;i<=N;i++)
    		vis[i] = 0;
    	for(int i=0;i<N;i++)
    		if(!vis[i])
    			dfsst(i,gr);
    	int mx = -1000000009;
    	for(int i=0;i<=N;i++)
    		vis[i] = 0;
    	while(!st.empty())
    	{
    		a = st.top();
    		st.pop();
    		cnt = 0;
    		if(!vis[a])
    			dfsc(a,grr);
    		if(cnt>mx)
    			mx = cnt;
    	}
    	cout<<mx<<endl;
    }
}
