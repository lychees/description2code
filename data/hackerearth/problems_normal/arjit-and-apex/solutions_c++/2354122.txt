// 2015-
#include <bits/stdc++.h>
#include <unordered_map>
#include <array>
#include <forward_list>
#include <unordered_set>
using namespace std;

#ifndef LOCAL
//#define LOCAL
#endif

#define ff first
#define ss second
#define sz(x) (int)((x).size())
#define szo(x) sizeof(x)
#define pub push_back
#define pob pop_back
#define fo(i,j,k) for (int i = j; i <= (int)(k); ++i) // [j..k]
#define fd(i,j,k) for (int i = j; i >= (int)(k); --i) // [j..k]
#define gg cout << "OK\n"

#define SET_BIT(mask, index) (mask |= (1 << index))
#define TEST_BIT(mask, index) (mask & (1 << index))
#define CLEAR_BIT(mask, index) (mask &= ~(1 << index))
#define TOGGLE_BIT(mask, index) (mask ^= (1 << index))
const int INF = 1000000000;
using pii = pair<int, int>;
using pip = pair<int, pii>;
using ll = long long;
using vi = vector<int>;
using vll = vector<ll>;

template<class T> T scan() { T t; cin >> t; return t; }
#define sc(T) scan<decltype(T)>()
#define sci scan<int>()
#define scll scan<ll>()
#define scs scan<string>()

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w+", stdout);
#endif

	int tc = sci;
	while (tc--) {
		int m = sci, n = sci;
		int sk[10003], pr[10003];
		memset(sk, 0, szo(sk));
		memset(pr, 0, szo(pr));

		fo(i, 0, m - 1) {
			int u = sci, v = sci;
			sk[u]++;
			pr[v]++;
		}
		int good = 0, great = 0;
		fo(i, 0, n - 1) {
			int w = sci, x = sci;
			if (sk[w] > 0) {
				sk[w]--;
				good++;
				if (pr[x] > 0) {
					great++;
					pr[x]--;
				}
			}
		}
		int g = sci, h = sci;
		string ans;
		if (good >= g && great >= h) {
			ans = "Great";
		}
		else if (good >= g) {
			ans = "Good";
		}
		else {
			ans = ":(";
		}
		cout << ans << "\n";
	}


	return 0;
}
