#include <bits/stdc++.h>

#define MOD 1000000007

using namespace std;

unsigned long long power(unsigned long long x, unsigned long long y)
{
    unsigned long long temp;
    if( y == 0)
        return 1;
    temp = power(x, y/2) % MOD;
    if (y%2 == 0)
        return (temp*temp) % MOD;
    else
        return (((x*temp)%MOD)*temp)%MOD;

}

unsigned long long modInv(unsigned long long n)
{
	return power(n,MOD-2) % MOD;
}

int n;
int total;
int m;
long long arr[100005] = {0};
long long mul = 1;
long long prod = 1;

int main()
{
    arr[0] = 1;
    arr[1] = 1;
    for(int i = 2; i <= 100000; i++)
    {
        long long tmp = arr[i-1];
        tmp = (tmp * i) % MOD;
        arr[i] = tmp;
    }

    cin>>n;

    for(int i=0;i<n;i++)
    {
        cin>>m;

        total += m;

        map <int,int> dis;

        prod = (prod * arr[m]) % MOD;

        for(int j=0;j<m;j++)
        {
            int tmp;
            cin>>tmp;
            dis[tmp]++;
        }

        long long tmp = 1;
        map <int,int> ::iterator it;
        for (it = dis.begin(); it != dis.end(); it++)
        {
            tmp = (tmp * arr[it->second] % MOD);
        }
        mul = (mul*tmp)%MOD;
    }

    long long ans = 1;
    ans = arr[total] ;
    ans = (ans*mul)%MOD;
    ans = (ans*modInv(prod))%MOD;

    cout<<ans<<endl;
}
