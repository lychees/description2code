#include<stdio.h>
#define FOR(i,n) for(i=0;i<n;i++)
#define mod 1000000007
#define ll  long long

/*
inline ll  MOD(ll a)
{
   return a%mod;

}
*/
//calculating power of matrix by exponentiation
void matpower(ll m[2][2],ll n)
{
       int i,j,k;
       ll temp[2][2]={0,0,0,0};
       ll cur[2][2]={{3,-1},{1,0}};
        //long long  j=1000000007;

           if(n>1)
            {
                    matpower(m,n/2);
            FOR(i,2)
                FOR(j,2)
                  FOR(k,2)
                        //temp[i][j]=MOD(MOD(temp[i][j]+MOD(M[i][k]*M[k][j])+mod));
                        temp[i][j]= ((temp[i][j]%mod+(m[i][k]*m[k][j])%mod)+mod)%mod;

            FOR(i,2)
                FOR(j,2)
                        m[i][j]=temp[i][j];
           if(n%2!=0){
                  ll temp1[2][2]={0,0,0,0};

                FOR(i,2)
                    FOR(j,2)
                          FOR(k,2)
                           //temp1[i][j]=MOD(MOD(temp1[i][j]+MOD(m[i][k]*cur[k][j]))+mod);
                             temp1[i][j]= ((temp1[i][j]%mod+(m[i][k]*cur[k][j])%mod)+mod)%mod;

              FOR(i,2)
                   FOR(j,2)
                        m[i][j]=temp1[i][j];
          }
      }
}

//recursion function
ll fib(ll m[2][2],ll n){//function for computation
       if(n==1)  return 1;
       else if(n==2)  return 3;
       else {
                   matpower(m,n-2);
      // return MOD((MOD(MOD(M[0][0]*3)+MOD(M[0][1]*1)))+mod);
      return ((m[0][0]*3)%mod+m[0][1]%mod+mod)%mod;
       }
}

int main()
{
        int t;
        ll ans,n;
         scanf("%d",&t);
        while(t--)
        {
                ll m[2][2]={{3,-1},{1,0}};
                scanf("%lld",&n);
               printf("%lld\n",fib(m,n));
        }
        return 0;
}
