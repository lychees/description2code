#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
using namespace std;
char letters[10010];
int k=0;
struct node
{
	char c;
	node *left,*right;
};
void preorder(node *head,int count,int num)
{
	if(head==NULL)
		return;
	if(count==num)
		letters[k++]=head->c;
	preorder(head->left,count-1,num);
	preorder(head->right,count+1,num);
}
int cmp(const void *a,const void *b)
{
	return(*(char *)a - *(char *)b);
}
int main()
{
	int t,i,num;
	node *l,*r,*n;
	char str[10010];
	scanf("%d",&t);
	while(t--)
	{
		stack <node *> s;
		scanf("%d",&num);
		getchar();
		scanf("%s",str);
		for(i=0;str[i]!='\0';i++)
		{
			if(str[i]!=')' && str[i]!='(')
			{
				n=(node *)malloc(sizeof(node));
				n->c=str[i];
				n->left=n->right=NULL;
				s.push(n);
			}
			else if(str[i]==')')
			{
				r=s.top();
				s.pop();
				l=s.top();
				s.pop();
				n=s.top();
				s.pop();
				if(l->c=='.')
					n->left=NULL;
				else
					n->left=l;
				if(r->c=='.')
					n->right=NULL;
				else
					n->right=r;
				s.push(n);
			}
		}
		preorder(s.top(),0,num);
		if(!k)
			cout<<"Common Gandhijee!\n";
		else
		{
			letters[k]='\0';
			qsort(letters,k,sizeof(char),cmp);
			k=0;
			cout<<letters<<endl;
		}
	}
	return 0;
}				
