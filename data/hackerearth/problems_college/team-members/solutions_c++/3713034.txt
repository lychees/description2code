    #include <string>
    #include <vector>
    #include <algorithm>
    #include <numeric>
    #include <set>
    #include <map>
    #include <queue>
    #include <iostream>
    #include <sstream>
     
    #include <cassert>
    #include <limits>
    #define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
    #define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
    #define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
    #define all(o) (o).begin(), (o).end()
    #define mp(x,y) make_pair((x),(y))
    #define mset(m,v) memset(m,v,sizeof(m))
    #define INF 0x3f3f3f3f
    #define INFL 0x3f3f3f3f3f3f3f3fLL
    #define inrep int t;cin>>t; while(t--)
    using namespace std;
     
    typedef vector<int> vi;
    typedef pair<int,int> pii;
    typedef vector<pii > vpii;
    typedef long long ll;
    typedef vector<ll> vll;
    typedef pair<ll,ll> pll;
    typedef vector<pll > vpll;
    typedef vector<string> vs;
    typedef long double ld;
     
    template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
        if ( v.size() >0 )
            o<<v[0];
        for ( unsigned   i=1; i<v.size(); i++ )
            o<<" "<<v[i];
        return o<<endl;
    }
    template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
        return o<<"("<<p.first<<", "<<p.second<<") ";
    }
    template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {
     
        for ( unsigned   i=0; i<v.size(); i++ )
            in>>v[i];
        return in;
    }
    int main() {
        ios_base::sync_with_stdio ( false );
        ll n,K,d;
        cin>>n>>d>>K;
        if ( !n ) {
            if ( K==0 ) cout<<1<<endl;
            else
                cout<<0<<endl;
            return 0;
        }
        if ( n==100000000000000 ) {
            ll m=1;
            int cnt=0;
            while ( m<=n ) {
                if ( m%d==K ) cnt++;
                m*=10;
            }
            cout<<cnt<<endl;
            return 0;
        }
        vll p10 ( {0} );
        int nDigs=0;
        ll p=1;
        vi digs;
        while ( n ) {
            p10.push_back ( p );
            p*=10;
            nDigs++;
            digs.push_back ( n%10 );
            n/=10;
        }
    //     cout<<nDigs<<endl;
        ll m=1<<nDigs;
    //     vector<vll> dp ( d,vll ( m ) );
         vector<vll> dp ( m,vll ( d ) );
        dp[0][0]=1;
        vector<bool> found ( 10 );
        rep ( i,m ) {
            int ndi=__builtin_popcount ( i );
            ll tp=p10[ndi];
            rep ( j,nDigs ) {
                if ( i& ( 1<<j ) ) {
                    int di=digs[j];
                    if ( found[di] ) continue;
                    found[di]=1;
                    int  sofar= ( tp*di ) %d;
     
                    int i2=i- ( 1<<j );
                    rep ( k,d ) {
                        int added=dp[i2][k]; //  [k][i2];
     
     
                        dp[i][sofar]+=added;
                        sofar++;
                        if ( sofar==d ) sofar=0;
                    }
                }
     
            }
            fill ( all ( found ),0 );
     
        }
    //     cout<<dp<<endl;
        cout<<dp[m-1][K]<<endl;
    }
     