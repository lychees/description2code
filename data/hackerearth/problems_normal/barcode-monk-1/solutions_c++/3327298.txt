#include <bits/stdc++.h>

#define FOR(i,s,e) for (int i = int(s); i != int(e); i++)
#define FORIT(i,c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
using namespace std;
typedef long long ll;


bool possible[1010];
ll dp[1010][2];
ll cal(int n,int ch)
{
if(dp[n][ch]!=-1)
	return dp[n][ch];
else if(n==0)
	return dp[n][ch]=1;
else if(ch)
	return dp[n][ch]=cal(n-1,0)%1000000007;
else
{
ll temp=cal(n-1,0);

FOR(i,1,n+1)
{
if(possible[i])
	{temp+=cal(n-i,1);
temp%=1000000007;}
}
return dp[n][ch]=temp;
}
}
int main() {

    int n, k, d;
    cin >> n >> k;
    possible[0] = true;
    memset(dp,-1,sizeof(dp));
    for (int i = 0; i < k; ++i) {
        cin >> d;
        if (d > n) continue;
        for (int j = d; j <= n; ++j) {
            possible[j] |= possible[j - d];
        }
    }

printf("%lld",cal(n,0));
    return 0;
}
