#include<iostream>
#include<cstdio>
#include<iomanip>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
#include<sstream>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf

vi tree(4000001);

bool comp(const pp&a,const pp& b)
{
	if(a.first ^ b.first)
	{
		return (a.first < b.first);
	}
	else
	{
		return (a.second > b.second);
	}
}

void update(int node, int a, int b,int pos)
{
	if(a==b)
	{
		tree[node]=1;
		return;
	}
	tree[node] +=1;
	int mid=(a+b)/2;
	if( pos <= mid)
	{
		update(node*2,a,mid,pos);
	}
	else
	{
		update(node*2+1,mid+1,b,pos);
	}
}

int query(int node, int a,int b,int i, int j)
{
	if((a>b) ||(i > b)|| (j < a))
		return 0;
	if((a>=i) && (b <=j))
	{
		return tree[node];
	}
	int mid=(a+b)/2;
	int q1=query(node*2, a, mid, i, j);
	int q2=query(node*2+1, mid+1, b, i, j);
	return (q1+q2);
}
int main()
{
	ios_base::sync_with_stdio(false);
	int i, n;
	cin >> n;
	vi ans(n);
	vector <pp > v(n);
	for( i=0;i<n;i++ )
	{
		cin >> v[i].first;
		v[i].second=i;
	}
	sort( v.begin(), v.end(), comp);
	vi val(n);
	for( i=0;i<n;i++ )
	{
		val[v[i].second]=i;
	}
	for( i=0;i<n;i++ )
	{
		ans[i]=query(1, 0, n-1, 0, val[i]);
		update(1, 0, n-1, val[i]);
		cout << ans[i] << " ";
	}
    return 0;
}