/**/
#include<bits/stdc++.h>
using namespace std;
/***********************************************/
/*      ____________
 *     /            \
 *    /  /\      /\  \
 *   /  /  \    /  \  \
 *   \                /
 *    \     \___/    /
 *     \____________/
 */
const long long mod = 1000000007;
pair<long long,long long> dp[1510];
int vis[1510];
int res[1510];
int c;
int w[1510];
vector<vector<int> > tree;
int k;
pair<long long,long long> bt(int ind,int p){
	vis[ind] = c;
	if(res[ind] == c)return dp[ind];
	pair<long long,long long> &ref = dp[ind];
	ref = make_pair(1,1);
	for(int i = 0;i < tree[ind].size();i++){
		int u = tree[ind][i];
		if(u == p)continue;
		if(w[u] < k)continue;
		pair<long long,long long> cur = bt(u,ind);
		ref.first = (ref.first * (cur.first + 1))%mod;
		ref.second = (ref.second + cur.second)%mod;
	}
	ref.second = (ref.second + ref.first + mod - 1)%mod;
	res[ind] = c;
	return ref;
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);


	int n;
	cin>>n;
	for(int i = 0;i < n;i++)cin>>w[i];
	int u,v;
	tree.resize(n);
	for(int i = 1;i < n;i++)cin>>u>>v,u--,v--,tree[u].push_back(v),tree[v].push_back(u);
	int q;
	cin>>q;
	while(q--){
		c++;
		cin>>k;
		long long res1 = 0,res2 = 0;
		for(int i = 0;i < n;i++){
			if(w[i] < k)continue;
			if(vis[i] != c)
				res1 = (res1 + bt(i,INT_MAX).second) % mod;
		}
		c++;
		k++;
		for(int i = 0;i < n;i++){
			if(w[i] < k)continue;
			if(vis[i] != c)
				res2 = (res2 + bt(i,INT_MAX).second) % mod;
		}
		//cout<<res1<<' '<<res2<<endl;
		cout<< (res1 + mod - res2)%mod<<'\n';
	}
	return 0;
}
/**/
