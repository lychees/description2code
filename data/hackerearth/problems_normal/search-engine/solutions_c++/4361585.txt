#include<bits/stdc++.h>
using namespace std;
struct trie_node{
    int maxwt;
    trie_node* next[26];
    trie_node(){
        maxwt=0;
        for(int i=0;i<26;++i)
            next[i]=NULL;
    }
    void insert(const string &s,int i,int wt){
        if(wt>maxwt){
            maxwt=wt;
        }
        if(i==s.size() )return;
        if(!next[s[i]-'a'])next[s[i]-'a']=new trie_node();
        next[s[i]-'a']->insert(s,i+1,wt);
    }
    int findbest(const string &s,int i){
        if(i==s.size())return maxwt;
        if(!next[s[i]-'a'])return -1;
        return next[s[i]-'a']->findbest(s,i+1);
    }
};
int main()
{
    ios_base::sync_with_stdio(false);
    int n,q;
    cin>>n>>q;
    //scanf("%d %d",&n,&q);
    trie_node *root=new trie_node();
    for(int i=0;i<n;++i){
        string s;int wt;
        cin>>s>>wt;
        root->insert(s,0,wt);
    }
    for(int i=0;i<q;++i){
        string s;
        cin>>s;
        int ans=root->findbest(s,0);
        cout<<ans<<"\n";
    }
    return 0;
}
