/*
Bad dog no biscuit
Bad cop no donut
Bad kid no candy
Bad drunk no brandy
Bad song no hit
Bad Bobbitt no dick
Bad job no pay
Bad boss no way

Truth or consequence
Truth or consequence

Bad luck no win
Bad wheel no spin
Bad cramps no bog
Bad master bad dog

Live in sin
Laws to defy
Live to win
Born to die
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-9
//#define M_PI 3.141592653589793
#define bs 1000000009
#define bsize 256
#define right adsgasgadsg
#define free adsgasdg
 
using namespace std;

long tests,ans,n,p,q,block,can,k;
long st,ofs;

long brute()
{
 vector<long> v,res;
 for (int i=1;i<=n;i++)
 {
  v.push_back(i);
 }
 while (v.size())
 {
  res.push_back(v[0]);
  v.erase(v.begin());
  if (v.size())
  {
   long temp=v[0];
   v.push_back(temp);
   v.erase(v.begin());
  }
 }
 return res[k-1];
}
int main(){
//freopen("capital.in","r",stdin);
//freopen("capital.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
 cin>>n>>k;
// cout<<brute()<<endl;
 p=(n%2);
 block=1;
 st=1;
 ofs=0;
 
 while (k>0)
 {
  q=(n-st)/block+1-ofs;
  can=q/2+(q%2==1);
//  cout<<k<<" "<<block<<" "<<st<<" "<<ofs<<" "<<can<<" "<<q<<endl;
  if (can>=k)
  {
   ans=(st+ofs*block+(k-1)*block*2);break;
  }
  else
  {
   k-=can;
   if(q%2==0){if (ofs==0)st+=block;block*=2;ofs=0;}
   else
   {
    if (ofs==0){st+=block;}
    ofs=1;
    block*=2;
   }
  }
  if (can==0)block/=2;
 }
 cout<<ans<<endl;
}
    
cin.get();cin.get();
return 0;}
