#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>
using namespace std;
typedef pair<long long,long long> P;
bool cmp(P p1,P p2) {
	if(p1.first<p2.first)return 1;
	if(p1.first==p2.first) {
		if(p1.second<p2.second)return 1;
	}
	return 0;
}
int main() {
	int n;
	long long s,e,low,up,pt,len,sum=0,right=0;
	P tmp;
	cin>>n>>s>>e;
	vector<P> ar;
	for(int i=0;i<n;i++) {
		cin>>pt>>len;
		low=pt-len;
		up=pt+len;
		if(s>low && s<up)low=s;
		if(e>low && e<up)up=e;
		if(up<=s || low>=e) {
			continue;
		}
		else {
			tmp=make_pair(low,up);
			ar.push_back(tmp);
		}
	}
	if(ar.size()==0) {
		cout<<(e-s)<<endl;
		return 0;	
	}	
	sort(ar.begin(),ar.end(),cmp);
	int size=ar.size();
	sum+=ar[0].first-s;
	right=ar[0].second;
	for(int i=1;i<size;i++) {
		if(ar[i].second>right) {
			sum+=max(0LL,ar[i].first-right);
			right=ar[i].second;
		
		}
		
	}
	/*
	for(int i=0;i<size;i++) {
		cout<<ar[i].first<<" "<<ar[i].second<<endl;
	}*/
	sum+=(e-right);
	cout<<sum<<endl;
	return 0;
}