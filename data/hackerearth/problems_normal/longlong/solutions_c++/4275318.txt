#include <bits/stdc++.h>
using namespace std;
#define d 173
string s;
long long p[1000000];
unordered_set <long long> o;
bool check(int mid){
	o.clear();
	long long h=0;
	for(int i=0;i<mid;i++){
		h=(h*d+s[i]);
	}
	o.insert(h);
	for(int i=1;i<=s.length()-mid;i++){
		h=(h-(p[mid-1]*s[i-1]));
		//h=(h+m)%m;
		h=(d*h+s[i+mid-1]);
		if(o.find(h)!=o.end())
		return true;
		o.insert(h);
	}
	return false;
}
int main()
{   
    cin>>s;
    int l=0,r=s.size()-1,mid;
    p[0]=1;
    for(int i=1;i<s.size();i++){
    	p[i]=(p[i-1]*d);
    }
    while(l<r){
    	mid=(l+r+1)/2;
    	if(check(mid))
    	l=mid;
    	else
    	r=mid-1;
    }
    cout<<l;
    return 0;
}
