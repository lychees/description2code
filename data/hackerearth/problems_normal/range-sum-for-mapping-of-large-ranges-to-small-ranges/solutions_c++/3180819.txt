#include<iostream>
#include<cstring>
using namespace std;
#define M 1000000007
int count[100009],parent[100009];
long long dp[100009][3];
void computeComb()
{
    for(int i=0;i<=100000;i++)
        dp[i][0]=1;
    dp[1][1]=1;
    dp[2][2]=1;
    dp[1][2]=1;
    dp[2][1]=2;
    for(int i=3;i<=100000;i++)
    {
        for(int j=1;j<=2;j++)
        {
            dp[i][j]=(dp[i-1][j-1]%M+dp[i-1][j]%M)%M;
        }
    }
}

int main()
{
    computeComb();
    int t;
    scanf("%d",&t);
    while(t--){
        int n,k;
        scanf("%d%d",&n,&k);
        for(int i=1;i<=n;i++)
        {
            count[i]=1;
            parent[i]=-1;
        }

        while(k--)
        {
            int x,y;
            scanf("%d%d",&x,&y);
            while(parent[x]!=-1)
                x=parent[x];

            while(parent[y]!=-1)
                y=parent[y];

            if(x!=y){
                if(count[x]>=count[y])
                {
                    parent[y]=x;
                    count[x]+=count[y];
                    count[y]=0;
                }
                else
                {
                    parent[x]=y;
                    count[y]+=count[x];
                    count[x]=0;
                }
            }
        }
        long long result=1;
        for(int i=1;i<=n;i++)
        {
              if(count[i]!=0)
              {
                  result=(result*(dp[count[i]][2]%M))%M;
              }
        }
        printf("%lld\n",result);

    }
    return 0;
}
