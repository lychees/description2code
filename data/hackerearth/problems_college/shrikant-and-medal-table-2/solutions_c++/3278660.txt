#include <iostream>
#include <map>
#include <vector>
#include <algorithm>

using namespace std;


struct person
{
    string name;
	int gold=0, silver=0, bronze=0;
};

bool comp(person p1 , person p2)
{
    if(p1.gold > p2.gold)
    {
        return true;
    }

    if(p1.gold == p2.gold && p1.silver > p2.silver)
    {
        return true;
    }

    if(p1.gold == p2.gold && p1.silver == p2.silver  && p1.bronze > p2.bronze)
    {
        return true;
    }

    if(p1.gold == p2.gold && p1.silver == p2.silver  && p1.bronze == p2.bronze)
    {
        if(p1.name < p2.name)
        {
            return true;
        }
        else{
            return false;
        }

    }

    return false;


}
int main()
{
    int n;
    cin>>n;
    map<string, person> M;
    while(n--)
    {
    	string g,s,b;
    	cin>>g>>s>>b;

    	M[g].gold++;
    	M[s].silver++;
    	M[b].bronze++;
    	/*
    	for(int i=0; i<V.size(); i++)
    	{
    		if(V.name==g)
    		{
    			V.gold++;
    		}

    		if(V.name==s)
    		{
    			V.silver++;
    		}

    		if(V.bronze==b)
    		{
    			V.bronze++;
    		}
    	}
    	*/
    }

    map<string, person>::iterator it;
    vector<person> V;

    for(it = M.begin(); it!=M.end(); it++)
    {
    	person P;
    	P.name = (it->first);
    	P.gold = (it->second).gold;
    	P.silver = (it->second).silver;
    	P.bronze = (it->second).bronze;
    	V.push_back(P);
    }

    sort(V.begin(), V.end() , comp);

    for(int i=0; i<V.size(); i++)
    {
    	cout<<V[i].name<<" "<<V[i].gold<<" "<<V[i].silver<<" "<<V[i].bronze<<endl;
    }

    return 0;
}
