#include<bits/stdc++.h>
using namespace std;
#define vi vector < int >
#define pb push_back
#define mp make_pair
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 2000000000
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define all(x) x.begin(),x.end()
#define SQRT 38
struct node
{
    int val,id;
}a[1503];
int A[1503];
bool cmp(node a,node b)
{
    if(a.val != b.val)
        return a.val < b.val;
    return a.id < a.id;
}
int b[40][1503];
int main()
{
    int n,q,i,j;
    scanf("%d",&n);
    assert(1 <= n && n <= 1414);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&a[i].val);
        assert(1 <= a[i].val && a[i].val <= INT_MAX);
        A[i] = a[i].val;
        a[i].id = i;
    }
    sort(a+1,a+n+1,cmp);
    for(i=1;i<=n;i++)
    {
        b[(i-1)/SQRT][a[i].id] = 1;
    }
    for(i=0;i<39;i++)
    {
        for(j=1;j<=n;j++)
            b[i][j] += b[i][j-1];
    }
    scanf("%d",&q);
    assert(1<= q && q <= n*n);
    while(q--)
    {
        int l,r,k;
        int x = 0;
        scanf("%d%d",&l,&r);
        assert(1 <= l && l <= n);
        assert(l <= r && r <= n);
        int len = (r-l+1);
        if(len&1)
            k = len/2 + 1;
        else
            k = len/2;
        for(i=0;i<39;i++)
        {
            if(x+ b[i][r] - b[i][l-1] >= k)
            {
                for(j=i*SQRT;j<(i+1)*SQRT && j<n;j++)
                {
                    if(a[j+1].id >= l && a[j+1].id <= r)
                    {
                        x++;
                    }
                    if(x == k)
                    {
                        printf("%d\n",A[a[j+1].id]);
                        break;
                    }
                }
                break;
            }
            else
            {
                x += b[i][r] - b[i][l-1];
            }
        }
    }
    return 0;
}
