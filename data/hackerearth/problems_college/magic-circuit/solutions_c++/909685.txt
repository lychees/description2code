#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;

#define ll long long

int x;
int y;
char grap[1000][1000];
bool gra[1000][1000];

int solve(vector<int> step)
{
	bool temp[x + 2][y + 2];
	memset(temp, false, sizeof(temp));
	for(int i = 0; i < x; ++i) {
		for(int j = 0; j < y; ++j) {
			temp[i][j] = gra[i][j];
	//		cout<<gra[i][j] << " "; 
		}
	//	puts("");
	}
	//puts("\n");
	int ans = 0;
	int size = step.size();
	for(int i = 0; i < size; ++i) {
		int Y = step[i];
		ans++;
		temp[0][Y] = !temp[0][Y];
		if(Y - 1 >= 0) temp[0][Y - 1] = !temp[0][Y - 1];
		if(Y + 1 < y) temp[0][Y + 1] = !temp[0][Y + 1];
		if(1 < x) temp[1][Y] = !temp[1][Y];
	}
	
	for(int i = 1; i < x; ++i) {
		for(int j = 0; j < y; ++j) {
			if(temp[i - 1][j] == 1) {
				temp[i][j] = !temp[i][j], ans++;
				if(i + 1 < x) temp[i + 1][j] = !temp[i + 1][j];
				if(i - 1 >= 0) temp[i - 1][j] = !temp[i - 1][j];
				if(j + 1 < y) temp[i][j + 1] = !temp[i][j + 1];
				if(j - 1 >= 0) temp[i][j - 1] = !temp[i][j - 1];
			}
		}
	}
	
	bool flg = false;
	for(int i = 0; i < x && !flg; ++i) {
		for(int j = 0; j < y; ++j) {
			if(temp[i][j] == 1) {
				flg = true;
				break;
			}
		}
	}
	
	
	//cout<<"ans = " << ans << "step.size()" << size << "\n";
	if(flg) return INT_MAX;
	else return ans;
}

int main()
{
	char Ch;
	while(true) {
		scanf("%d%d", &x, &y);
		if(x == 0 && y == 0) break;
	 	
		memset(gra, 0,sizeof gra);
 
        for(int i = 0; i < x; i++) {
            for(int j = 0; j < y; j++) {
                cin>> Ch;
                if(Ch == 'X')
                    gra[i][j]=true;
                else
                    gra[i][j]=false ;
 
 
            }
        }
        
		int ans = INT_MAX;
		for(int i = 0; i < (1 << y); ++i) {
			vector<int> step;
			for(int j = 0; j < y; ++j) {
				if(i & (1 << j)) {
					step.push_back(j);
				}
			}
			
			ans = min(ans, solve(step));
		}
		
		if(ans < INT_MAX)
			printf("%d\n", ans);
		else
			puts("-1");
	}
}
