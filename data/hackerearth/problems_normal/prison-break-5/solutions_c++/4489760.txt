#include <iostream>
using namespace std;
bool IsValid(int i, int j, int N,bool mat[][21])
{
	return (i>=0 && i<N) && (j>=0 && j<N) && (mat[i][j]==0);

}
int DFS(int currx,int curry, int N, bool mat[][21])
{
    mat[currx][curry]=2;
	if(currx==N-1 && curry==N-1)
	return  1;
	int ans=0;
	int deltax[]={0,1,0,-1};
	int deltay[]={1,0,-1,0};
	for(int i=0;i<4;i++)
	{
		int newx=currx+deltax[i];
		int newy=curry+deltay[i];
		if(IsValid(newx,newy,N,mat))
		{
			ans=ans+DFS(newx,newy,N,mat);
            mat[newx][newy]=0;
		}
	}
	return ans;
}
int main()
{
	int t;
	cin>>t;
	for(int i=0;i<t;i++)
	{
		int n;
		cin>>n;
		bool mat[21][21];
		for(int r=0;r<n;r++)
		{
			for(int c=0;c<n;c++)
			{
				cin>>mat[r][c];
			}
		}
        cout<<DFS(0,0,n,mat)<<endl;

	}
    return 0;
}
