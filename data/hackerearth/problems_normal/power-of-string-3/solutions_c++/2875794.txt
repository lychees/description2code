#include<bits/stdc++.h>
#define ll long long int
using namespace std;

struct info
{
    ll idx,tup[2];
    bool operator< (const info &a) const
    {
        if(tup[0]==a.tup[0])
            return tup[1]<a.tup[1];
        else
            return tup[0]<a.tup[0];
    }
};

ll Rank[25][1000009],LCP[1000009],k,n;
info arr[1000005];
string s;
//char s[1000005];


void Suffix_Array()
{
    ll i,j,a,b,step,jump,id1,id2;

    //cout<<s.size()<<endl;
    for(i=0; i<n; i++)
    {
        Rank[0][i]=s[i]-'a'+1;

        arr[i].tup[0]=0;
        arr[i].tup[1]=0;
    }

    for(step=1,jump=1; jump<=n; step++,jump=jump*2)
    {
        for(i=0; i<n; i++)
        {
            a=Rank[step-1][i];
            if(i+jump<n)
                b=Rank[step-1][i+jump];
            else
                b=-1;

            arr[i].idx=i;
            arr[i].tup[0]=a;
            arr[i].tup[1]=b;
        }
        sort(arr,arr+n);

        Rank[step][arr[0].idx]=0;
        for(i=1; i<n; i++)
        {
            if(arr[i].tup[0]==arr[i-1].tup[0] && arr[i].tup[1]==arr[i-1].tup[1])
                Rank[step][arr[i].idx]=Rank[step][arr[i-1].idx];
            else
                Rank[step][arr[i].idx]=i;
        }
    }


    memset(LCP,0,sizeof LCP);

    for(i = k-1; i < n; i++)
    {
        id1 = arr[i-k+1].idx;
        id2 = arr[i].idx;
        if(id1==id2)
        {
            LCP[i]=n-id1;
            continue;
        }
        LCP[i] = 0;
        for(j = step - 1; j >= 0 && id1<n && id2<n ; j--)
        {
            if(Rank[j][id1] == Rank[j][id2] && Rank[j][id2])
            {
                LCP[i] += (1 << j);
                id1 += (1 << j);
                id2 += (1 << j);
            }
        }
    }
}

int main()
{
    ll t,m,i,j,ans;
    //freopen("in.txt","r",stdin);

    while(cin>>k>>n)
    {
        cin>>s;
        ans=0;
        Suffix_Array();
        for(i=0; i<n; i++)
        {
            ans=max(ans,LCP[i]);
        }
        cout<<ans<<endl;
    }
    return 0;
}

