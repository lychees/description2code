#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return r;
}
double dp[3001];

double dist(double x1,double x2,double y1,double y2){
   double dx,dy;
   dx=x1-x2;
   dy=y1-y2;
   return sqrt(dx*dx + dy*dy);

}
int main(){
    int n;
    si(n);
    vector< pair<pair<double,double>,double > > in;
    double x,y,f;
    fr(i,0,n){
      cin>>x>>y>>f;
      in.pb(mp(mp(x,y),f));
    }
    dp[0]=in[0].y;
    fr(i,1,n){
       dp[i]=( (in[0].y+in[i].y)-(dist(in[0].x.x,in[i].x.x,in[0].x.y,in[i].x.y)));
    //      cout<<(dist(in[0].x.x,in[i].x.x,in[0].x.y,in[i].x.y));pln;
    }

    /*fr(i,0,n){
      cout<<dp[i];pln;
    }
    cout<<"lkjlfknv\n";
    */
    double add;
    fr(i,1,n){
      add=-10e16;
      fr(j,1,i){
        add=max(add,dp[j]+( (in[i].y)-(dist(in[i].x.x,in[j].x.x,in[i].x.y,in[j].x.y))) );
        //   cout<<"dist "<<i<<" "<<j<<" "<<(dist(in[i].x.x,in[j].x.x,in[i].x.y,in[j].x.y));pln;
 //           cout<<"value "<<dp[j]+( (in[i].y)-(dist(in[i].x.x,in[j].x.x,in[i].x.y,in[j].x.y)));pln;

      }
      if(add>dp[i]){
        dp[i]=add;
      }
    }

/*    fr(i,0,n){
      cout<<dp[i];pln;
    }
*/
    printf("%.6lf\n",dp[n-1]);

return 0;
}
