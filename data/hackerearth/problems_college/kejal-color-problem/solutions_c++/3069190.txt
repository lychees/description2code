#include<bits/stdc++.h>
#define pb push_back
#define rep(i,a,b) for(int i=(int)a;i<(int)b;++i)
#define rrep(i,a,b) for(int i=(int)a;i>=(int)b;--i)
#define ab(a) (a<0)?(-1*a):a
#define pc putchar_unlocked
#define gc getchar_unlocked
#define ll long long int
#define repl(i,a,b) for(ll i=(ll)a;i<(ll)b;++i)
#define rrepl(i,a,b) for(ll i=(ll)a;i>=(ll)b;--i)
#define mset(a,b,c) rep(i,0,b) a[i]=c
#define F first
#define S second
#define mp make_pair
#define clr(x) x.clear()
const ll mod=1000000007;
const double pi=acos(-1.0);
#define itoc(c) ((char)(((int)'0')+c))
#define pll pair<ll,ll>
#define pii pair<int,int>
#define MAX 100010
#define all(p) p.begin(),p.end()
#define maxVal(x,y) ((x)>(y))?(x):(y)
#define minVal(x,y) ((x)<(y))?(x):(y)
#define getMid(s,e) ((s)+((e)-(s))/2)
#define mini INT_MIN
#define maxi INT_MAX
#define nline cout<<endl;
using namespace std;
inline void rdi(int &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void rdl(ll &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void print(int a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }
inline void prlong(ll a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }

int c[MAX], dp[MAX];
vector<int> v[MAX];
inline int func(int p, int q) {
	int s=0;
	rep(i,0,v[p].size()) if(v[p][i]>q) {
		s+=(v[p].size()-i);
		break;
	}
	return s;
}
int main() {
	int n,p,q,r,x,y,z,u;
	rdi(n);
	rep(i,1,n+1) {
		rdi(c[i]);
		v[c[i]].pb(i);
		dp[c[i]]++;
	}
	ll ans=0;
	rep(i,1,n+1) {
		z=c[i];
		if(dp[z]==0) continue;
		if(v[z].size()<=1) continue;
		r=v[z].size();
		map<int,int> mmap;
		rep(j,0,r-1) {
			rep(k,j+1,r) {
				p=v[z][k-1]+1;
				q=v[z][k];
				
				rep(e,p,q) {
					if(c[e]!=z and dp[c[e]])
					mmap[c[e]]++;
				}
				for(map<int,int>::iterator it=mmap.begin();it!=mmap.end();++it) {
					x=it->F;
					y=it->S;
					u=(dp[x]-y);
					ans+=(u*y);
					ans%=mod;
				}
			}
			clr(mmap);
		}
		dp[z]=0;
	}
	cout<<ans<<endl;
}
/*
6
1 2 1 2 1 2
1 2 3 4 5 6
(1 3) =2
(1 5) =1
(3 5) =2
(2 4) =
9
3 1 2 3 1 2 3 1 2
1 2 3 4 5 6 7 8 9
*/