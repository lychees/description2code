#include <bits/stdc++.h>
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, N) for (int I = 0; I < (N); ++I)
#define REPP(I, A, B) for (int I = (A); I < (B); ++I)
#define RI(X) scanf("%d", &(X))
#define RII(X, Y) scanf("%d%d", &(X), &(Y))
#define RIII(X, Y, Z) scanf("%d%d%d", &(X), &(Y), &(Z))
#define DRI(X) int (X); scanf("%d", &X)
#define DRII(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define DRIII(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define RS(X) scanf("%s", (X))
#define CASET int ___T, case_n = 1; scanf("%d ", &___T); while (___T-- > 0)
#define MP make_pair
#define PB push_back
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define LEN(X) strlen(X)
#define PII pair<int,int>
#define VPII vector<pair<int,int> >
#define PLL pair<long long,long long>
#define F first
#define S second
typedef long long LL;
using namespace std;
const int MOD = 1e9+7;
const int SIZE = 1e5+10;
// template end here
int dp[SIZE][2][2];
void add(int &x,int v){
    x+=v;
    if(x>=MOD)x-=MOD;
}
int main(){
    CASET{
        MS0(dp);
        dp[0][0][0]=1;
        DRI(N);
        REPP(i,1,N+1){
            add(dp[i][0][0],dp[i-1][0][0]);
            add(dp[i][0][1],dp[i-1][0][0]);
            add(dp[i][1][1],dp[i-1][0][1]);
            add(dp[i][0][0],dp[i-1][0][1]);
            add(dp[i][1][0],dp[i-1][1][0]);
            add(dp[i][1][1],dp[i-1][1][0]);
            add(dp[i][1][0],dp[i-1][1][1]);
        }
        int an=0;
        REP(i,2)add(an,dp[N][1][i]);
        cout<<an<<endl;
    }
    return 0;
}
