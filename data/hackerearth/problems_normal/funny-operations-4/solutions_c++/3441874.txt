#include <iostream>
#include <math.h>
using namespace std;


int main()
{
    int T, N, values[20];
    int P_ans, max_length, current_p;
    int k, No_of_set, count, j;
    int XOR_ALL= 0, AND_ALL, flag=0, length=0;
    
    cin>>T;
    
    while(T--)
    {
    	P_ans= current_p = 0; 
    	max_length=0;

    	cin>>N;
    	for(k=0; k<N; k++)
    		cin>>values[k];
    		
    		
    	No_of_set = pow(2, N);
    	
    	for(count=0; count < No_of_set; count++)
    	{
    		XOR_ALL = flag = length = 0;
    		for(j=0; j<N; j++)
    		{
    			if(count & (1<<j))
    			{
    				XOR_ALL ^= values[j];
    				if(flag == 0)
    				{
    					AND_ALL = values[j];
    					flag=1;
    				}
    				else
    				{
    					AND_ALL &= values[j];
    				}
    				length++;
    			}
   
    		}
    		current_p = XOR_ALL | AND_ALL;
    		if(current_p > P_ans)
    		{
    			
    			P_ans = current_p;
    			max_length = length;
    		}
    		if(current_p == P_ans && max_length < length)
    			max_length=length;

    	}
    	
    	cout<<P_ans<<" "<<max_length<<endl;
    }
    
    return 0;
}
