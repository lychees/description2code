#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<random>
using namespace std;
string pluss(string a, string b, bool flag = false){
	if (!flag){
		reverse(a.begin(), a.end());
		reverse(b.begin(), b.end());
	}
	if (a.size() > b.size()){
		swap(a, b);
	}
	string ans;
	ans.clear();
	long long int want = 0;
	for (int i = 0; i < a.size(); i++){
		long long int val = a[i] - '0';
		val += b[i] - '0';
		val += want;
		want = val / 10LL;
		val %= 10LL;
		ans.push_back(val + '0');
	}
	for (int j = a.size(); j < b.size(); j++){
		long long int val = 0;
		val += b[j] - '0';
		val += want;
		want = val / 10LL;
		val %= 10LL;
		ans.push_back(val + '0');
	}
	while (want){
		ans.push_back(want % 10 + '0');
		want /= 10;
	}
	if (!flag){
		reverse(ans.begin(), ans.end());
	}
	return ans;
}
string mult(string a, string b, bool flag = false){
	if (!flag){
		reverse(a.begin(), a.end());
		reverse(b.begin(), b.end());
	}
	string ans = "0";
	string pas;
	string kari;
	pas.clear();
	for (int i = 0; i < b.size(); i++){
		long long int bb = b[i] - '0';
		long long int tmp = 0;
		kari = pas;
		for (int j = 0; j < a.size(); j++){
			long long int val = (long long int)(a[j] - '0')*bb;
			val += tmp;
			tmp = val / 10LL;
			val %= 10LL;
			kari.push_back(val + '0');
		}
		while (tmp){
			kari.push_back((tmp % 10LL) + '0');
			tmp /= 10LL;
		}
		ans = pluss(ans, kari, true);
		//end
		pas.push_back('0');
	}
	if (!flag){
		reverse(ans.begin(), ans.end());
	}
	return ans;
}
int t;
string s;
string tt;
int main(){
	cin >> t;
	int cas=0;
	while (t--){
		cas++;
		cin >> s >> tt;
		string ss = s;
		int countt = 1;
		while (1){
			if (s.size() >= tt.size()){
				bool match = false;
				for (int i = 0; i < tt.size(); i++){
					if (tt[i] != s[i]){
						match = true;
						break;
					}
				}
				if (!match){
					break;
				}
			}
			s = mult(s, ss);
			countt++;
		}
		cout <<"Case "<<cas<<": "<< countt << endl;
	}
	return 0;
}