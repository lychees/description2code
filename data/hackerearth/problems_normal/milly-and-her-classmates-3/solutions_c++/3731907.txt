#include <iostream>
using namespace std;
#include <algorithm>

  
void printUnsorted(int arr[], int n,int b[])
{
  int s = 0, e = n-1, i, max, min;   
  
  // step 1(a) of above algo
  for (s = 0; s < n-1; s++)
  {
    if (arr[s] > arr[s+1])
      break;
  }
  if (s == n-1)
  {
    printf("-1 -1\n");
    return;
  }
  
  // step 1(b) of above algo
  for(e = n - 1; e > 0; e--)
  {
    if(arr[e] < arr[e-1])
      break;
  }
  
  // step 2(a) of above algo
  max = arr[s]; min = arr[s];
  for(i = s + 1; i <= e; i++)
  {
    if(arr[i] > max)
      max = arr[i];
    if(arr[i] < min)
      min = arr[i];
  }
  
  // step 2(b) of above algo
  for( i = 0; i < s; i++)
  {
    if(arr[i] > min)
    {  
      s = i;
      break;
    }      
  } 
  
  // step 2(c) of above algo
  for( i = n -1; i >= e+1; i--)
  {
    if(arr[i] < max)
    {
      e = i;
      break;
    } 
  }  
      
  // step 3 of above algo
  //printf(" The unsorted subarray which makes the given array "
    //     " sorted lies between the indees %d and %d", s, e
    int start=s,end=e;
    int temp;
    while (start < end)
    {
        temp = arr[start];   
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }  
    int cnt=0;
    for(int i=0;i<n;i++)
    {
    	if(arr[i]==b[i])
    		cnt++;
    }
    if(cnt==n)
    	printf("%d %d\n",s+1,e+1);
    else
    	printf("-1 -1\n");
  return;
}
  
int main()
{
  int t;
  scanf("%d",&t);
  while(t-->0)
  {
  	int n;
  	scanf("%d",&n);
  	int arr[10000] ;int b[10000];
  	for(int i=0;i<n;i++){
  		scanf("%d",&arr[i]);
  		b[i]=arr[i];
  	}
  	std::sort(b, b + n);
  	int arr_size = sizeof(arr)/sizeof(arr[0]);
  	printUnsorted(arr, n,b);
  }
  
  
  return 0;
}
