#include<stdio.h>
#include<stdlib.h>
#include <bits/stdc++.h>
#define mod 1000000007
using namespace std;
unsigned long long int prpo[10001];
//int array[1000000];
void SieveOfEratosthenes(int n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    bool prime[n+1];
    memset(prime, true, sizeof(prime));
 	int *array;
	array=(int*)malloc(1000000*sizeof(int));
    for (int p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
 	int x=1;
    // Print all prime numbers
    for (int p=2; p<=n; p++)
	{	
		if(prime[p])
		array[x++]=p;
	}
	for(x=1;x<=10000;x++)
	{
		prpo[x]=array[array[x]];
		//printf("%d %d\n",prpo[x],x);
	}
      // if (prime[p])
       //   cout << p << " ";
}

int main()
{
	int t,i=1;
	scanf("%d",&t);
	SieveOfEratosthenes(5555555);
	while(t--)
	{
		unsigned long long int n,m;
		scanf("%llu%llu",&n,&m);
		printf("%llu\n",((prpo[n]%mod)*(prpo[m]%mod))%mod);
	}

return 0;
}
