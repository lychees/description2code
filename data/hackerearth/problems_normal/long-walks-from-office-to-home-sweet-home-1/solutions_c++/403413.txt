#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long LL;

LL G[50][50], P = 1000000007;

int u, v;

void mul(LL A[50][50], LL B[50][50], int N){
    for(int i=0;i<N;++i)
        for(int j=0;j<N;++j)
        {
            LL tmp = 0;
            for(int k=0;k<N;++k)
            {
               	tmp =tmp + (A[i][k] * B[k][j])%P;
				if(tmp >= P) tmp -= P;
            }
            G[i][j] = tmp;
        }
}

void copy(LL A[50][50], LL B[50][50], int N){
    for(int i=0;i<N;++i)
        for(int j=0;j<N;++j)
        {
           A[i][j] = B[i][j];
        }
}

void pow_(LL A[50][50], LL b, int N){
    LL Ans[50][50];
    for(int i=0;i<N;++i)
        for(int j=0;j<N;++j)
            Ans[i][j] = (i==j);
    while(b){
        if(b&1){
            mul(Ans, A, N);
            copy(Ans, G, N);
        }
        b >>=1;
        mul(A, A, N);
        copy(A, G, N);
    }
    printf("%lld\n",Ans[u][v]);
}
int main()
{
    LL k, A[50][50];
    int T, N, x;
    scanf("%d",&T);
    while(T--){
    	scanf("%d%lld%d%d",&N,&k,&u,&v);
    	for(int i=0;i<N;++i)
    		for(int j=0;j<N;++j)
    			scanf("%d",&x),
    			A[i][j] = x;
    	pow_(A,k,N);
    }

    return 0;
}