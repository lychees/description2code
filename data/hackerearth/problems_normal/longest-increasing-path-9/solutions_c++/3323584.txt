#include<bits/stdc++.h>
#define REP(i,n) for (int i=1;i<n;i++)
using namespace std;

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		
		int arr[109][109]={},dp[109][109]={};
		for(int i=0; i< n; i++)
	    for(int j=0; j<m; j++)
		cin >> arr[i][j];
		
		memset(dp,-1,sizeof(dp));
		dp[0][0]=1;
		REP(i,n)
		if(dp[i-1][0]!=-1)
		{
			if(arr[i-1][0]<arr[i][0]) dp[i][0]=dp[i-1][0]+1;
			else dp[i][0]=-1;
		}	
		
		REP(j,m)
		if(dp[0][j-1]!=-1)
		{
			if(arr[0][j-1]<arr[0][j]) dp[0][j]=dp[0][j-1]+1;
			else dp[0][j]=-1;
		}
		
		REP(i,n) REP(j,m)
		if(dp[i-1][j]==-1 && dp[i][j-1]==-1)
			dp[i][j]=-1;
			
		else if(dp[i-1][j]==-1 && dp[i][j-1]!=-1)
		{
			if(arr[i][j-1]<arr[i][j]) dp[i][j]=dp[i][j-1]+1;
			else
			dp[i][j]=-1;
			}	
		else if(dp[i-1][j]!=-1 && dp[i][j-1]==-1)
		{
			if(arr[i-1][j]<arr[i][j]) dp[i][j]=dp[i-1][j]+1;
			else
			dp[i][j]=-1;
			
		}
		else
		{
			if(arr[i][j-1]<arr[i][j])
				dp[i][j]=dp[i][j-1]+1;
			else
				dp[i][j]=-1;
			if(arr[i-1][j]<arr[i][j])
				dp[i][j]=max(dp[i][j],dp[i-1][j]+1);
				
		}
		int ans =0;
		
		for(int i=0; i<n; i++)
	{
	    for(int j=0; j<m; j++)
	    {
		ans=max(ans,dp[i][j]);
	    }
	}
		cout<<ans<<endl;
	}
	
	return 0;
}
