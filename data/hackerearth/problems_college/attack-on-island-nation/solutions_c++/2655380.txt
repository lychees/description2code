#include <bits/stdc++.h>
using namespace std;

vector<int> pset, setrank;
int findset(int n){
	return (pset[n] == n) ? n : (pset[n] = findset(pset[n]));
}
void unionset(int a, int b){
	int x = findset(a), y = findset(b);
	if (setrank[x] > setrank[y])
		pset[y] = x;
	else{
		pset[x] = y;
		if (setrank[x] == setrank[y])
			++setrank[y];
	}
}

int main(){
	int n, m;
	cin >> n >> m;
	pset.assign(n+1,0);
	for (int i = 1; i <= n; ++i)
		pset[i] = i;
	setrank.assign(n+1,1);
	vector<pair<int,pair<int,int> > >  adj (m);
	for (int i = 0; i < m; ++i)
		cin>>adj[i].second.first>>adj[i].second.second>>adj[i].first;
	sort(adj.begin(),adj.end());
	int k;
	cin>>k;
	long long ans = 0;
	for (int i = 0; i < m; ++i){
		int a = adj[i].second.first, b = adj[i].second.second, r = adj[i].first;
		if (findset(a) != findset(b)){
            //cout<<"conn: "<<a<<" "<<b<<endl;
			unionset(a,b);
			ans += r;
		}
	}
	cout << ans << '\n';

	/*cout<<"-----------------------------------------"<<endl;
    for(int i=0;i<setrank.size();++i)
        cout<<setrank[i]<<endl; */
return 0;}
