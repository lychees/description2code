//This imlementation of Booth's is taken form wiki
//this algo can be used to find lexicographically maximum/minimum string using rotation
#include <iostream>
#include <cstdio>
#include<bits/stdc++.h>
using namespace std;
int f[8000005];
void lcs(char s[])
	 {
        //s+= s;  
		//cout<<s<<endl;           //S += S # Concatenate string to it self to avoid modular arithmetic
      int k = 0;
	  int n=strlen(s);
	  for (int i = 0; i < n; ++i) {
        s[i + n] = s[i];
    }
      memset(f, -1, sizeof(f));
    for (int i = 1; i < 2 * n; ++i) 
		{
        int j = f[i - k - 1];
        while (j != -1 && s[i] != s[k + j + 1]) {
            if (s[i] > s[k + j + 1])
                k = i - j - 1;
            j = f[j];
        }
        if (j == -1 && s[i] != s[k + j + 1]) {
            if (s[i] > s[k + j + 1])
                k = i;
            f[i - k] = -1;
        } else {
            f[i - k] = j + 1;
        }
    }
    //cout<<s.substr(k,n/2)<<endl;
    for (int i = 0; i < n; ++i) 
        printf("%c",s[k + i]);
  
}

char s[8000005];
int main()
{
    
    cin >> s;
    lcs(s);
}
