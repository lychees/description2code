#include <bits/stdc++.h>
using namespace std;

#define count_1(num) __builtin_popcount(num)
#define mx 1000005

bool double_equals(double a, double b, double epsilon = 0.1)
{
    return std::abs(a - b) < epsilon;
}

double BinarySearch( long long int i , long long int tm, long double p, long double r) 
{
  long double q;
  

  while (r - p > 1e-9 ) {
    q = (p + r)/2;
    
    if (i*q*log2(q) > tm) {
      r = q;
    } else {
      p = q;
    }
  }
  return p;
}

//long long prime[1000005];

/*
void seive()
{
prime[0]=1;
prime[1]=1;
for(int i=2;i*i<=mx;++i)
if(!prime[i])
for(int j=2*i;j<mx;j+=i)
if(!prime[j])
prime[j]=1;
 
}*/


 
int main() {
    std::ios_base::sync_with_stdio(false);
    long long t,p,x,y,u,v,ans;
    cin>>t;
    while(t--)
    {
		cin>>p>>x>>y>>u>>v;
		long double m;
		if(x==u && y == v)
		 {
		 	cout<<"Counter-Terrorists Win !" <<endl;
		 }
		else
		{
		m = ( ( long double ) ( v - y ) / ( long double ) ( u - x ) ) ;
		
		//cout<<m<<endl;
		if(m == 1.0 or m == -1.0 )
		ans = 1;
		else
		{
		if((v-y) % 2 == 0 && (u-x) % 2 == 0)
		ans = 2;
		else if((v-y) % 2 != 0 && (u-x) % 2 != 0)
		ans = 2;
		else
		ans = p;
		}
		
		if(ans<p)
		cout<<"Counter-Terrorists Win !" <<endl;
		else
		cout<< "Terrorists Win !"<<endl;
    	}
	
		
	}
    
	return 0;
}
