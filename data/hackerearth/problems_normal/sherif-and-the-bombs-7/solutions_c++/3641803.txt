/**********************************************************************\
|                                            _                         |
|                 __   __    ____    _ __   (_)  _ __                  |
|                |  \_/  |  / __ \  | '_  \ | | | '__|                 |
|                | || || | | (__) | | | | | | | | |                    |
|                |_||_||_|  \____/  |_| |_| |_| |_|                    |
|                                                                      |
|                  Computer Science and Engineering                    |
|  Bangabandhu Sheikh Mujibur Rahman Science and Technology University |
|                                                                      |
\**********************************************************************/
#include<bits/stdc++.h>
using namespace std;
#define ll         long long
#define F          first
#define S          second
#define pii        pair<int, int>
#define pll        pair<ll, ll>
#define mii        map<int, int>
#define mll        map<ll, ll>
#define vii        vector<int>
#define vll        vector<ll>
#define pb         push_back
#define eb         emplace_back
#define em         emplace
#define mp         make_pair
#define mt         make_tuple
#define End        return 0
#define endl       '\n'
#define inf        1e16
#define in         freopen("in.txt", "r", stdin)
#define out        freopen("out.txt", "w", stdout)
#define all(x)     x.begin(), x.end()
#define rall(x)    x.rbegin(), x.rend()
#define asort(v)   sort(v.begin(), v.end())
#define dsort(v)   sort(v.begin(), v.end(), [](int a, int b){return a > b;})
#define fill(a,b)  memset(a, b, sizeof a)
#define gcd(a,b)   __gcd(a,b)

const int N = 1000;
int g[N + 5][N + 5];

double get_dis(int x1, int y1, int x2, int y2) {
    int d = ((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2));
    return d;
}
void update(int x, int y, int r) {
    for(int i = 1; i <= N; i++) {
        for(int j = 1; j <= N; j++) {
            if(get_dis(i, j, x, y) <= r * r) {
                g[i][j]++;
            }
        }
    }
}
int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n;

    cin >> n;

    while(n--) {
        int x, y;
        int r;

        cin >> x >> y >> r;

        update(x, y, r);
    }

    int ans = 0;

    for(int i = 1; i <= N; i++) {
        for(int j = 1; j <= N; j++) {
            if(g[i][j] > 1) {
                ans++;
            }
        }
    }

    cout << ans << endl;
    End;
}

