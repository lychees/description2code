#include <bits/stdc++.h>

using namespace std;

typedef long long int ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, bool> pldb;
typedef vector<ll> vec;

#define rep(i, a, n) for(int i = a; i < n; i++)
#define mem(h, val) memset(h, val, sizeof(h))
#define MOD 1000000007
#define INF 100000009
#define MAX 112345
#define MAX1 1123456
#define mp make_pair
#define pb push_back

int a[4000];
map<string, int> g;
map<string, int> s;
map<string, int> b;

map<string, pair<int, pair<int, int>> > all;


struct node {
	string name;
	int g, s, b;
};

bool comp(const node& l, const node& r) {

	if(l.g > r.g) return true;
	else if(l.g == r.g) {

		if(l.s > r.s) return true;
		else if(l.s < r.s) return false;
		else {

			if(l.b > r.b) return true;
			else if(l.b < r.b) return false;
			else {
				if(l.name < r.name) return true;
				else return false;
			}
		}
	}
	else return false;
}

vector<node> fn;

vector<pair<int, pair<int, pair<int, pair<string, int>> >> > f;

node retnode(string n, int g, int s, int b) {

	node r;
	r.name = n;
	r.g = g;
	r.s = s;
	r.b = b;
	return r;
}

int main() {

	int n; cin >> n;

	rep(i, 0, n) {

		string go, si, br; cin >> go >> si >> br;
		all[go].first++;
		all[si].second.first++;
		all[br].second.second++;
	}

	for(auto it = all.begin(); it != all.end(); ++it)
		fn.pb(retnode(it->first, it->second.first, it->second.second.first, it->second.second.second));
	sort(fn.begin(), fn.end(), comp);

	for(auto p : fn)
		cout << p.name << " " << p.g << " " << p.s << " " << p.b << endl;

	return 0;
}



