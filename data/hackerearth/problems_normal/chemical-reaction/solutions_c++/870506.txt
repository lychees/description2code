#include<bits/stdc++.h>
#define gc getchar
#define MAX 500009
using namespace std;

char lst[MAX][100];
int rtime[MAX],seq[MAX],bit[MAX];

void update(int x, int* bit,int val)
{
    while (x <= MAX)
    {
        bit[x] += val;
        x += (x&(-x));
    }
}

int query(int x, int* bit)
{
    int rt=0;
    while (x >0)
    {
        rt += bit[x];
        x -= (x&(-x));
    }
    return rt;
}

int Search(int q, int n)
{
    int strt=1,end=n,mid,qmid;
    while (strt < end)
    {
        mid = (strt + end)/2;
        qmid = mid - query(mid,bit);
        if (q > qmid)
        {
            strt = mid+1;
        }
        else if(q < qmid)
        {
            end = mid - 1;
        }
        else
        {
            end = mid;
        }
    }
    return strt;
}

inline void fastRead(int *a)
{
	register char c=0;
	while (c<33) c=getchar();
	*a=0;
	while (c>33)
	{
		*a=*a*10+c-'0';
		c=getchar();
	}
}

inline void fastWrite(int a)
{
	char snum[20];
	int i=0;
	do
	{
		snum[i++]=a%10+48;
		a=a/10;
	}while(a!=0);
	i=i-1;
	while(i>=0)
	putchar(snum[i--]);
	putchar('\n');
}

int main()
{
    int t,n,mx,curr;
    char c;
    fastRead(&t);
    while (t--)
    {
        for (int i=0;i<=MAX-2;i++)
        bit[i]=0;
        fastRead(&n);
        for (int i=1;i<=n;i++)
        {
            scanf("%s",lst[i]);
        }
        for (int i=1;i<=n;i++)
        {
            fastRead(&rtime[i]);
        }
        for (int i=1;i<=n-1;i++)
        {
            fastRead(&seq[i]);
        }
        seq[n]=1;
        mx = -1;
        for (int i=1;i<=n;i++)
        {
            curr = Search(seq[i],n);
            update(curr,bit,1);
            if (rtime[curr]>mx)
            mx = rtime[curr];
            printf("%s ",lst[curr]);
            fastWrite(mx);
            //cout<<lst[curr]<<" "<<mx<<endl;
        }

    }
}
