#include<bits/stdc++.h>
//#include<iostream>
//#include<stdio.h>


using namespace std;

#define ll int
#define lll long long int
#define s(a) scanf("%d",&a)
#define slll(a) scanf("%lld",&a)
#define fr(i,n) for(i=0;i<n;i++)
#define fra(i,a,n) for(i=a;i<n;i++)
//#define N 100010
#define MAX 500100
#define inf lll_MAX
#define MOD 1000000007
/*#define gc getchar_unlocked

void scanlll(lll &x)
{
    register lll c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

ll gcd(ll a,ll b)
{
   //cout<<a<<" "<<b<<endl;
   if(b==0)
   return a;
   return gcd(b,a%b);
}*/
struct node
{
  ll x,y;

};
bool cmp(node a,node b)
{
  return a.x<b.x;
}/*
lll poww(lll a, lll b)
{

  lll x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD;
        b /= 2;
    }
    return x;
}
bool prime[10000010];

void primer()
{
    memset(prime,1,sizeof(prime));
   prime[1]=0;

   for(i=2;i*i<=10000000;i++)
   {
     //cout<<i;
      if(prime[i])
      {
         for(j=i*i;j<=10000000;j+=i)
         {
            prime[j]=0;
            //cout<<"j"<<j;
         }
      }
   }
}*/
/*
struct node
{
   ll w,x,y;
};
struct comp
{
    bool operator(node a,node b)
    {
        if(a.w==b.w)
        {
            if(a.x==b.x)
            {
                return a.y<b.y;
            }
            else
            return a.x<b.x;
        }
        else
            return a.w<b.w;
    }
};
*/
int main()
{
   ll n,i,ans=0,x2,y2,x1,y1,x,y,d;
   s(n);
   node a[n+2];

   fr(i,n)
   {
       s(x); s(y); s(d);
       a[i].x=x;
       a[i].y=x+d;
   }

   sort(a,a+n,cmp);
   x1=a[0].x;
   y1=a[0].y;
   ans = y1-x1+1;

   fra(i,1,n)
   {
      x2=a[i].x;
      y2=a[i].y;

      if(x2>=y1)
      {
          ans+=y2-x2+1;
          x1=x2;
          y1=y2;
      }
      else
      {
          if(y2-y1>=0)
            ans+=y2-y1;
          y1=max(y1,y2);
      }
   }
   cout<<ans;
    return 0;
}
