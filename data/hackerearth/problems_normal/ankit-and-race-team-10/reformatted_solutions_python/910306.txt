inf = 1000000007


def power(n, m):

    if m == 0:
        return 1

    ans = power(n, m/2)  # m>>2

    ans = (ans*ans) % inf

    if m % 2 == 0:
        return ans
    else:
        return (ans*n) % inf


def process(st, n, k):

    st = sorted(st, reverse=True)
    # print st
    sol = 0
    for i in range(k - 1, n):
        sol = (sol + (Choose(i, k-1) * st[i] % inf) % inf) % inf
        # different than sol += (Choose(i, k-1) * st[i]) %inf and (Choose(i, k-1) * st[i]%inf ) %inf
        # print i, " : i"
        # print j, " : j"
        # print sol

    print sol


def Choose(x, y):
    an = (fac[x]*invf[y]) % inf
    an = (an*invf[x - y]) % inf
    # print an

    return an


def fact(n):
    # if fac[n] > 0:
    # return fac[n]
    global fac
    global invf
    # if n == 0:
    # return 1

    fac[0] = 1
    fac[1] = 1
    for i in range(2, n):
        fac[i] = (fac[i-1]*i) % inf
        # print fac[i]
        # j = (1/fac[i])
        # print 1/fac[i]

    invf[100000] = power(fac[100000], inf-2)
    # print invf[100000]
    for i in reversed(range(0, 100000)):
        invf[i] = (invf[i+1]*(i+1)) % inf
        # print invf[i]
    invf[0] = (invf[1]*1) % inf
    # print invf[0]
    # return fac[n]


T = int(raw_input())

fac = [0 for x in range(100001)]
invf = [0 for x in range(100001)]
fact(100001)
# print fac

for i in range(T):
    N, K = [int(x) for x in raw_input().split()]
    st = [int(x) for x in raw_input().split()]
    process(st, N, K)
