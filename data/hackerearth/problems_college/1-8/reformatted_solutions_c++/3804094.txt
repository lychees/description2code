#include <bits/stdc++.h>
using namespace std;
#define MAX 200005
#define ll long long int
int lp[MAX];
int primes[MAX];
int pr;
map<int, int> mp1, mp2, mp3;
ll modpow(ll a, ll b, ll mod) {
  if (b == 1)
    return a;
  ll res = 1;
  while (b) {
    if (b & 1)
      res = (res * a) % mod;
    a = (a * a) % mod;
    b /= 2;
  }
  return res;
}
void pre(void) {
  int i, j;
  // for(i=1;i<MAX;++i)
  //	phi[i] = i;
  pr = 0;
  for (i = 2; i < MAX; ++i) {
    if (lp[i] == 0) {
      primes[pr++] = i;
      for (j = i; j < MAX; j += i) {
        lp[j] = 1;
      }
    }
  }
}
void store(map<int, int> &mp, int num) {
  int i;
  for (i = 0; i < pr && primes[i] <= num; ++i) {
    int cnt = 0;
    long long int prm = primes[i];
    while (num >= prm) {
      cnt += num / prm;
      prm *= primes[i];
    }
    mp[primes[i]] = cnt;
  }
}
void pack(map<int, int> &mp, int num) {
  int i;
  for (i = 0; i < pr && primes[i] <= num; ++i) {
    int cnt = 0;
    long long int prm = primes[i];
    while (num % prm == 0) {
      num /= prm;
      cnt++;
    }
    mp[primes[i]] = cnt;
  }
}
int main() {
  pr = 0;
  pre();
  int t;
  cin >> t;
  ll fact[MAX];
  while (t--) {
    ll n, m, k;
    cin >> n >> m >> k;
    store(mp1, m + n);
    store(mp2, n);
    store(mp3, m);
    map<int, int>::iterator it, it2;
    for (it = mp2.begin(); it != mp2.end(); ++it) {
      mp1[it->first] -= it->second;
    }
    for (it = mp3.begin(); it != mp3.end(); ++it) {
      mp1[it->first] -= it->second;
    }
    for (it = mp1.begin(); it != mp1.end(); ++it)
      it->second *= 2;
    // for(it=mp1.begin();it!=mp1.end();++it)
    //	cout<<it->first<<" "<<it->second<<endl;
    mp2.clear();
    mp3.clear();
    pack(mp2, m + 1);
    pack(mp3, n + 1);
    for (it = mp3.begin(); it != mp3.end(); ++it) {
      mp1[it->first] -= it->second;
    }
    for (it = mp2.begin(); it != mp2.end(); ++it) {
      mp1[it->first] -= it->second;
    }

    mp3.clear();
    pack(mp3, m + n + 1);
    for (it = mp3.begin(); it != mp3.end(); ++it) {
      mp1[it->first] += it->second;
    }
    long long int ans = 1;
    for (it = mp1.begin(); it != mp1.end(); ++it) {
      ans = (ans * modpow(it->first, it->second, k)) % k;
    }
    cout << ans << endl;
    mp1.clear();
    mp2.clear();
    mp3.clear();
  }
}
