#include <bits/stdc++.h>
#include <string>
using namespace std;

typedef long long ll;
typedef unsigned int ul;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef vector <char> vc;
typedef map<string,string> mss;
typedef map<int, vector<int> > mvii;
typedef map<int, int> mii;
typedef queue <int> qi;
typedef map <int, vector<string> > mvis;
typedef map <string, vector<int> > mvsi;
typedef vector <string> vs;
typedef pair <int, int> pii;

#define MP make_pair
#define all(c) c.begin(),c.end() 
#define present(container,element)  (container.find(element)!=container.end())                        // for set and map.
#define cpresent(container,element) (find(all(container),element)!=container.end())
#define SORT(a) sort (a.begin(), a.end())
#define REVERSE(a) reverse (a.begin(), a.end())
#define PI acos(-1)
#define ms(x,y) memset (x, y, sizeof(x))
#define INF 2000000000
#define pb push_back
#define MAX 5000000
#define debug cout<<"A"<<endl
#define prnt(a) cout<<a<<endl
#define mod 1000000009
#define FOR(i,a,b) for(int i=(a); i<(b); i++)
#define FORr(i,a,b) for (int i=(a); i>=b; i--)
#define tr(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

/* Direction Array */

// int fx[]={1,-1,0,0};
// int fy[]={0,0,1,-1};
// int fx[]={0,0,1,-1,-1,1,-1,1};
// int fy[]={-1,1,0,0,1,1,-1,-1};

template <class T> inline T bigmod(T p,T e,T M)
{
    ll ret = 1;
    for(; e > 0; e >>= 1)
    {
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}

template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}
template <class T> inline T lcm(T a,T b) {a=abs(a);b=abs(b); return (a/gcd(a,b))*b;}
template <class T, class X> inline bool getbit(T a, X i) { T t=1; return ((a&(t<<i))>0);}
template <class T, class X> inline T setbit(T a, X i) { T t=1;return (a|(t<<i)); }
template <class T, class X> inline T resetbit(T a, X i) { T t=1;return (a&(~(t<<i)));}

unsigned factorial(unsigned int n);


inline ll power(ll a, ll b)
{
	ll multiply=1;
	FOR(i,0,b)
	{
		multiply*=a;
	}
	return multiply;
}


int main (){
	
	int t;
	cin >>t;
	FOR(i,0,t){
		int l;
		cin >> l ;
		int pr[l];
		
		FOR(j,0,l){
			cin >>pr[j];
		}
		
		long long int M[10000];
		M[0]=0;
		FOR(k,1,l+1){
			long long int max=-1;
			FOR(u,1,l+1){
				
				if(k-u>=0){
					if(pr[u-1]+M[k-u] >  max)
					max= pr[u-1]+M[k-u];
				}
				
			}
			
			M[k]=max;
			
		}
		
		
		
 	cout << M[l]   << endl;	
		
		
	}
	
	
	
return 0;	
}

