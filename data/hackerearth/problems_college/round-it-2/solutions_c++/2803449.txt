/**______________________________________________________________________
    \_______________________________   _____________   __________________/
          \  \        ________      | |             | |
           \  \      /  ____  \     | |             | |
            \  \    /  /    \  \    | |      ____   | |
             \  \   \ /      \  \   | |     /  _ \  | |
              \  \           /  /\  | |     \ / \ \ | |
               \  \         /  /\ \ | |          \ \| |
                \  \       /  /  \ \| |           \   |
                 \  \_____/  /    \   |            \  |
                  \_________/      \  |           __|_|___
                                    |_|          / ______ \
                                                / / | |  \ \
                                               / /  / /   \ \
                                               \ \_/ /     \_\
                                                \___/
************************************************/

#include<bits/stdc++.h>
using namespace std;
#define LL  long long int
#define ll  long long int

#define NN 1000000
#define MOD 1000000007
#define   PI  3.14159265358979323846264338327950
#define   eps  1e-7
#define area(x1,y1,x2,y2,x3,y3) ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define sqr(x) ((x)*(x))
#define distSqr(x1,y1,x2,y2) ( sqr(x1-x2) + sqr(y1-y2) )
//..................bit..............
#define chk(a,k) ((bool)(a&(1<<(k))))
#define set0(a,k) (a&(~(1<<(k))))
#define set1(a,k) (a|(1<<(k)))

#define chkA(a,k) (bool)(a[(k)>>5] & (1<<((k)&31)))
#define setA0(a,k) (a[(k)>>5] &= ~(1<<((k)&31)))
#define setA1(a,k) (a[(k)>>5] |= (1<<((k)&31)))

//...............loop..........
#define loop1(i,n) for(i=1;i<=n;i++)
#define loop0(i,n) for(i=0;i<n;i++)
#define loop_a_to_b(i,a,b) for(i=a;i<=b;i++)


#define CLR(a) memset(a,-1,sizeof(a))

//**************************************scanf***********************************
template<class T1> void cnf(T1 &e1)
{
    cin>>e1;
}
template<class T1,class T2> void cnf(T1 &e1,T2 &e2)
{
    cin>>e1>>e2;
}
template<class T1,class T2,class T3> void cnf(T1 &e1,T2 &e2,T3 &e3)
{
    cin>>e1>>e2>>e3;
}
template<class T1,class T2,class T3,class T4> void cnf(T1 &e1,T2 &e2,T3 &e3,T4 &e4)
{
    cin>>e1>>e2>>e3>>e4;
}
template<class T1,class T2,class T3,class T4,class T5> void cnf(T1 &e1,T2 &e2,T3 &e3,T4 &e4,T5 &e5)
{
    cin>>e1>>e2>>e3>>e4>>e5;
}
template<class T1,class T2,class T3,class T4,class T5,class T6> void cnf(T1 &e1,T2 &e2,T3 &e3,T4 &e4,T5 &e5,T6 &e6)
{
    cin>>e1>>e2>>e3>>e4>>e5>>e6;
}
template<class T1,class T2> void cnf(T1 e1[],T2 n)
{
    for(int i=0;i<n;i++)
    cin>>e1[i];
}
//**************************************printf***********************************
template<class T1> void pnf(T1 e1)
{
    cout<<e1<<endl;
}
template<class T1,class T2> void pnf(T1 e1,T2 e2)
{
    cout<<e1<<" "<<e2<<endl;
}
template<class T1,class T2,class T3> void pnf(T1 e1,T2 e2,T3 e3)
{
    cout<<e1<<" "<<e2<<" "<<e3<<endl;
}
template<class T1,class T2,class T3,class T4> void pnf(T1 e1,T2 e2,T3 e3,T4 e4)
{
    cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<endl;
}
template<class T1,class T2,class T3,class T4,class T5> void pnf(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5)
{
    cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<endl;
}
template<class T1,class T2,class T3,class T4,class T5,class T6> void pnf(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5,T6 e6)
{
    cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<" "<<e6<<endl;
}
template<class T1,class T2> void pnf(T1 e1[],T2 n)
{
    for(int i=0;i<n-1;i++)
    cout<<e1[i]<<" ";
    cout<<e1[n-1]<<endl;
}

int dir_x[] = {-1,-1,-1,0,0,1,1,1};
int dir_y[] = {-1,0,1,-1,1,-1,0,1};

template< class T > T sq(T n) { return n*n; }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T a, T b, T c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }
template< class T > T power(T N,T P){  return (P==0)?  1: N*power(N,P-1); }
void month()
{
    //freopen("inputa.txt","r",stdin);
    //freopen("outputa.txt","w",stdout);
    //  string s;
    string s[14];
    s[1]="January";
    s[2]="February";
    s[3]="March";
    s[4]="April";
    s[5]="May";
    s[6]="June";
    s[7]="July";
    s[8]="August";
    s[9]="September";
    s[10]="October";
    s[11]="November";
    s[12]="December";
}

/*#define MAX 1002
#define LMT 19
#define i64 long long

long int flag[MAX+1], primes[MAX], total;

#define ifc(x) (flag[ x >> 6 ] & (1 << ((x >> 1) & 31)))
#define isc(x) (flag[ x >> 6]|=(1 << ((x >> 1) & 31)))

//int m2[2000];
void sieve()
{
    int i, j, k;
    primes[0] = 2;
    //m2[2]=1;
    total = 1;
    for(i = 3; i <=LMT; i += 2)
    {
        if(!ifc(i))
        {
            primes[total++] = i;
            //m2[i]=1;
            for(j = i*i, k=i<<1; j <=MAX; j += k)
            isc(j);
        }
    }
    for(i = LMT+2; i <=MAX; i += 2)
    {
        if(!ifc(i))
        {
           primes[total++] = i;
           //m2[i]=1;
        }
    }
}
int max(int n,int m)
{
    if(n<m)
    return m;
    return n;
}
int min(int n,int m)
{
    if(n>m)
    return m;
    return n;
}
//map<int,int>m1;
//int mx=0,mn=10000000;
long long str[1000];
i64 divisor(i64 n)
{
    i64 ret = 1,k,ssss=1,lll=1, i,j,cnt, rt = (LL)sqrt((double)n);
    j=0;
    for(i = 0; i < total && primes[i] <= rt; i++)
    {
       // if(m2[n]==1)
       // break;
        if(n % primes[i] == 0)
        {
            n /= primes[i], cnt = 1;
            str[j]=primes[i];
            j++;
            while(n % primes[i] == 0)
            {
                n/= primes[i], cnt++;
                str[j]=primes[i];
                j++;
            }
            rt = (int)sqrt((double)n);
            //ret*=(cnt+1);
           // m1[primes[i]]+=m;
           // mx=max(mx,primes[i]);
           // mn=min(mn,primes[i]);
        }
    }
    if(n > 1)
    {
       // ret*=(1+1);
         str[j]=n;
         j++;
       // m1[n]+=m;
        //mx=max(mx,n);
       // mn=min(mn,n);
        //ret <<= 1;
    }
    for(i=j-1,k=0;i>=0;i--,k++)
    {
        ssss*=pow(primes[k],str[i]-1);
    }
    cout<<ssss<<endl;
    return 0;
}*/

/*LL gcd(LL a,LL b)
{
    while(b>0)
    {
        a=a%b;
        a=a^b;
        b=b^a;
        a=a^b;
    }
    return a;
}

LL lcm(LL a,LL b)
{
    LL x=(a*b)/gcd(a,b);
    return x;
}
*/
/*bool is_pr(long long n)
{
    if(n<2)return 0;
    if(n==2)return 1;
    if(n%2==0)return 0;
    for(int i=3;i*i<=n;i+=2)
    if(n%i==0)return 0;
    return 1;
}*/

/*LL bigmod(LL b,LL p,LL mod)
{
    LL x=1,power;
    if(b==0)
    return 0;
    power = b%mod;
    while(p)
    {
       if( p%2 == 1)
       x = (x*power)%mod;
       power = (power*power)%mod;
       p = p/2;
    }
    return x;
}*/

//..............inverse mod.............
/*void EE(ll a, ll b, ll *x, ll *y)
{
	if(a==0)
	{
		*x=0;
		*y=1;
		return;
	}
	ll temp_x,temp_y;
	EE(b%a, a, &temp_x, &temp_y);
	*y=temp_x;
	*x=temp_y - (b/a)*temp_x;

}
ll inverse(ll a,ll m)  //gcd(a,m)=1 hote hobe
{
	ll x,y;
	EE(a,m,&x,&y);
	while(x<0) x+=m;  // Importantly make it positive
	return x;
}*/

/*const int S=8;
long long mult_mod(long long a,long long b,long long c)
{
    a=a%c;
    b=b%c;
    long long ret=0,tmp=a;
    while(b)
    {
        if(b&1)
        {
            ret+=tmp;
            if(ret>c)
            ret-=c;
        }
        tmp<<=1;
        if(tmp>c)
        tmp-=c;
        b>>=1;
    }
    return ret;
}
long long pow_mod(long long a,long long n,long long mod)
{
    long long ret=1;
    long long temp=a%mod;
    while(n)
    {
        if(n&1)
        ret=mult_mod(ret,temp,mod);
        temp=mult_mod(temp,temp,mod);
        n>>=1;
    }
    return ret;
}
bool check(long long a,long long n,long long x,long long t)
{
    long long ret=pow_mod(a,x,n);
    long long lll=ret;
    for(int i=1;i<=t;i++)
    {
        ret=mult_mod(ret,ret,n);
        if(ret==1 and lll!=1 and lll!= n-1)
        return true;
        lll=ret;
    }
    if(ret!=1)
    return true;
    else
    return false;
}
bool miller_rabin(long long n)
{
    if(n<2) return false;
    if(n==2)return true;
    if((n&1)==0) return false;
    long long x=n-1;
    long long t=0;
    while((x&1)==0)
    {
        x>>=1;
        t++;
    }
    srand(time(NULL));
    for(int i=0;i<S;i++)
    {
        long long a=rand()%(n-1)+1;
        if(check(a,n,x,t))
        return false;
    }
    return true;
}*/

int main()
{
   //freopen("intput.txt","r",stdout);
    //freopen("outputa.txt","w",stdout);
   // scanf("%I64d",&n);
    ios_base::sync_with_stdio(0);
	//cin.tie(0);
    long long t,tt, n,m,mm;
    //fib();
    cin>>n;
    while(n--)
    {
        cin>>m>>mm;
        t=m;tt=m;
        while(1)
        {
            if(t%mm==0 or tt%mm==0)
            break;
            t--;
            tt++;
        }
        if(tt%mm==0)
        cout<<tt<<endl;
        else
        cout<<t<<endl;
    }
    return 0;
}
