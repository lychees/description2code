#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

int main() {
  //    ifstream fin("input.txt");
  //    ofstream fout("output.txt");
  int n, i, j;
  map<string, set<string>> hosts;
  map<set<string>, vector<string>> paths;
  string s;

  cin >> n;
  for (i = 0; i < n; ++i) {
    cin >> s;

    for (j = 0; s[7 + j] != '/' && 7 + j < s.size(); ++j) {
    }

    hosts[s.substr(7, j)].insert(s.substr(7 + j));
  }

  //	for (map<string, set<string> >::iterator it = hosts.begin(); it !=
  //hosts.end(); ++it) { 		cout << (*it).first << " : "; 		for
  //(set<string>::iterator itt = (*it).second.begin(); itt !=
  //(*it).second.end(); ++itt) { 			cout << "[" << (*itt) << "] ";
  //		}
  //		cout << endl;
  //	}

  for (map<string, set<string>>::iterator it = hosts.begin(); it != hosts.end();
       ++it) {
    paths[(*it).second].push_back((*it).first);
  }

  n = 0;
  for (map<set<string>, vector<string>>::iterator it = paths.begin();
       it != paths.end(); ++it) {
    if ((*it).second.size() > 1) {
      n++;
    }
  }

  printf("%d\n", n);
  for (map<set<string>, vector<string>>::iterator it = paths.begin();
       it != paths.end(); ++it) {
    if ((*it).second.size() > 1) {
      for (i = 0; i < (*it).second.size(); ++i) {
        if (i > 0) {
          putchar(' ');
        }
        printf("http://%s", (*it).second[i].c_str());
      }
      printf("\n");
    }
  }

  return 0;
}
