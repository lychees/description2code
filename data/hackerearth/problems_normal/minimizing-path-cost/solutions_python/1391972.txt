INF = 999999999999

def floydWarshall(graph):
	nodes = graph.keys()
	distance = {}
	for n in nodes:
		distance[n] = {}
		for k in nodes:
			distance[n][k] = graph[n][k]
	for k in nodes:
		for i in nodes:
			for j in nodes:
				distance[i][j] = min(distance[i][j], distance[i][k]+distance[k][j])

	return distance

def solve():
	n,m = map(int,(raw_input().split()))
	nodes = raw_input().split()
	graph = {}

	for i in xrange(n):
		src = nodes[i]
		graph[src] = {}
		for dst in nodes:
			graph[src][dst] = INF

 	for i in xrange(m):
		s1,s2,d = raw_input().split()
		d = int(d)
		graph[s1][s2] = d
		graph[s2][s1] = d

	q = int(raw_input())
	d = floydWarshall(graph)

	for i in xrange(q):
		src,dst = raw_input().split()
		print d[src][dst]

solve()