/*   ARSHEYA RAJ   */

#include <iostream>
#include <bits/c++io.h>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>
#include <string.h>
#include <algorithm>
#include <iomanip>
#include <exception>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <iterator>
#include <climits>
 
#define ll long long int
#define MAX(a,b) (a>b)?a:b
#define MIN(a,b) (a>b)?b:a
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FOR_X(i,x,n) for(i=x;i<n;i++)
#define BACK(i,n) for(i=n;i>0;i--)
#define BACK_X(i,n,x) for(i=n;i>=x;i--)
#define fill(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define pp pair<int,int>
#define mod 1000000007
#define MAX_N 100005

template< class T > T sq(T &x) { return x * x; }
template< class T > T abs(T &n) { return (n < 0 ? -n : n); }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T &a, T &b, T &c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }

const double EPS = 1e-9;
const int INF = 0x3f3f3f3f;

using namespace std;

int main(){
	ll n,i,usernameindex,pwdindex,profileindex,roleindex,keyindex;
	string s;
	cin>>s;
	n=s.size();
	for(i=0;i<n-7;i++){
		if(s.at(i)=='u' && s.at(i+1)=='s' && s.at(i+2)=='e' && s.at(i+3)=='r' && s.at(i+4)=='n' && s.at(i+5)=='a' && s.at(i+6)=='m' && s.at(i+7)=='e'){
			usernameindex=i;
			break;
		}
	}
	usernameindex=usernameindex+9;
	printf("username: ");
	while(1){
		cout<<s.at(usernameindex);
		usernameindex++;
		if(s.at(usernameindex+1)=='p' && s.at(usernameindex+2)=='w' && s.at(usernameindex+3)=='d'){
			break;
		}
	}
	printf("\n");
	for(i=0;i<n-2;i++){
		if(s.at(i)=='p' && s.at(i+1)=='w' && s.at(i+2)=='d'){
			pwdindex=i;
			break;
		}
	}
	pwdindex=pwdindex+4;
	printf("pwd: ");
	while(1){
		cout<<s.at(pwdindex);
		pwdindex++;
		if(s.at(pwdindex+1)=='p' && s.at(pwdindex+2)=='r' && s.at(pwdindex+3)=='o' && s.at(pwdindex+4)=='f' && s.at(pwdindex+5)=='i' && s.at(pwdindex+6)=='l' && s.at(pwdindex+7)=='e'){
			break;
		}
	}
	printf("\n");
	for(i=0;i<n-6;i++){
		if(s.at(i)=='p' && s.at(i+1)=='r' && s.at(i+2)=='o' && s.at(i+3)=='f' && s.at(i+4)=='i' && s.at(i+5)=='l' && s.at(i+6)=='e'){
			profileindex=i;
		}
	}
	profileindex=profileindex+8;
	printf("profile: ");
	while(1){
		cout<<s.at(profileindex);
		profileindex++;
		if(s.at(profileindex+1)=='r' && s.at(profileindex+2)=='o' && s.at(profileindex+3)=='l' && s.at(profileindex+4)=='e'){
			break;
		}
	}
	printf("\n");
	for(i=0;i<n-3;i++){
		if(s.at(i)=='r' && s.at(i+1)=='o' && s.at(i+2)=='l' && s.at(i+3)=='e'){
			roleindex=i;
		}
	}
	roleindex=roleindex+5;
	printf("role: ");
	while(1){
		cout<<s.at(roleindex);
		roleindex++;
		if(s.at(roleindex+1)=='k' && s.at(roleindex+2)=='e' && s.at(roleindex+3)=='y'){
			break;
		}
	}
	printf("\n");
	for(i=0;i<n-2;i++){
		if(s.at(i)=='k' && s.at(i+1)=='e' && s.at(i+2)=='y'){
			keyindex=i;
		}
	}
	keyindex=keyindex+4;
	printf("key: ");
	while(keyindex!=n){
		cout<<s.at(keyindex);
		keyindex++;
	}
return 0;
}