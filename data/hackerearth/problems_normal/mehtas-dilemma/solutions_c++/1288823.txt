
//Author : Utkarsh $axena

#include<bits/stdc++.h>
#include<iostream>
using namespace std;
#define fre 	freopen("0.in","r",stdin),freopen("0.out","w",stdout)
#define abs(x) ((x)>0?(x):-(x))
#define M 1000000007
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define mpa make_pair
#define pii pair<int,int>
#define fi first
#define se second
#define scan(x) scanf("%d",&x)
#define scanll(x) scanf("%lld",&x)
#define printll(x) printf("%lld\n",x)
#define boost ios_base::sync_with_stdio(0)
//vector<int> g[2*100000+5];int visited[2*100000+5];
struct mat
{
	lld m[35][35];
	mat()
	{
		for(int i=0;i<32;++i)
			for(int j=0;j<32;++j)m[i][j]=0;
	}
}ex;
mat mul(mat a,mat b)
{
	mat c;
	for(int i=0;i<32;++i)
	{
		for(int j=0;j<32;++j)
		{
			for(int k=0;k<32;++k)
			{
				c.m[i][j]+=(a.m[i][k]*b.m[k][j])%M;
				c.m[i][j]%=M;
				if(c.m[i][j]<0)c.m[i][j]+=M;
			}
		}
	}
	return c;
}
mat pow(mat base, lld exponent)
{
	mat result;
	for(int i=0;i<32;++i)result.m[i][i]=1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = mul(result , base);
        exponent = exponent >> 1;
        base = mul(base , base);
    }
    return result;
}//INVERSE MODULO modularpow (a,M-2);
int req[654];
lld pow(lld base, lld exponent,lld modulus)
{
    lld result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}//INVERSE MODULO modularpow (a,M-2);

int main()
{
	req[2]=1;
	req[3]=2;
	req[5]=4;
	req[6]=3;
	req[7]=8;
	req[8]=1;
	for(int i=0;i<16;++i)
	{
		for(int j=1;j<=9;++j)
		{
			ex.m[i][i^req[j]]++;
			ex.m[i][i^req[j]+16]--;
		}
		ex.m[i][i]++;
	}
	for(int i=16;i<32;++i)ex.m[i][i-16]=1;
	int t;
	lld n;
	cin>>t;
	while(t--)
	{
		cin>>n;
		lld ans=(pow(10,n,M)-1-9*(pow(9,n,M)-1)*pow(8,M-2,M))%M;
		ans+=pow(ex,n).m[0][0];
		ans%=M;
		if(ans<0)ans+=M;
		cout<<ans<<endl;
	}
}
