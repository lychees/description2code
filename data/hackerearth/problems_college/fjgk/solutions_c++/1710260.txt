#include <cstdio>
#include <cstring>
#include <vector>
#include <bitset>
#include <algorithm>
using namespace std;

#define ll long long
#define pb push_back
#define MAX 10010
#define inf 10000001

bitset<inf> bs;
vector<int> p;
int f[MAX];

void sieve(){
    bs.set();
    p.clear();
    bs[0] = bs[1] = 0;
    for (ll i = 2; i < inf; i++)
        if (bs[i]){
            p.pb(i);
            for (ll j = i*i; j < inf; j += i) bs[j] = 0;
        }
}

int isPrime(ll n){
    if (n < inf) return bs[n];
    for (ll i = 0; p[i]*p[i] <= n; i++)
        if (n % p[i] == 0) return 0;
    return 1;
}

int calc(int n){
    int m = (n + 1) >> 1;
    if (f[m] != -1)
        return f[m];
    f[m] = calc(n - 2);
    for (int i = 1; i <= 4; i++)
        f[m] += isPrime((n - 2LL)*(n - 2LL) + i * (n - 1LL));
    return f[m];
}

int main(){
    int t, n;

    sieve();
    memset(f, -1, sizeof(f));
    f[1] = 0;
    scanf("%d", &t);
    while (t--){
        scanf("%d", &n);
        printf("%.6lf\n", 100.0 * calc(n) / (2*n - 1));
    }
    return 0;
}
