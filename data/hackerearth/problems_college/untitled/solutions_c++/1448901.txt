#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#define MAX 1000100
#define MOD 1000000007
using namespace std;
int sieve[MAX],p[MAX],k=0;
void make_sieve(){
    sieve[1] = sieve[0] = 1;
    for(int i=2;i*i<MAX;i++){
        if(!sieve[i])
            for(int j=i*i;j<MAX;j+=i)
                sieve[j] = 1;
    }

    k = 0;
    for(int i=2;i<MAX;i++)
        if(!sieve[i])
            p[k++] = i;
}
void prime_fact_factorize(long long n)
{
    long long pf=0,sum=0,dv=1;
    long long count,temp=n;

    for(int i=0;p[i]<=n;i++)//check prime factor in factorial
    {
        count=0;

        for(long long j=p[i];j<=n;j*=p[i])
        {
            count+=floor(n/j);
            while(temp%p[i] == 0)
                temp/=p[i];

        }

        if(count > 0){
            pf =  (pf  + 1)%MOD;
            dv = (dv * (count+1))%MOD;
            sum = (sum + p[i])%MOD;
        }
        //printf("%d^%d ",p[i],count);
       
    }
    //cout<<endl;
    cout<<pf<<" "<<sum<<" "<<dv<<endl;
}

int main()
{
    make_sieve();
    long  long n,t;
    cin>>t;
    while(t--){
        cin>>n;
        prime_fact_factorize(n);
        //cout<<cumm[r] - cumm[l-1]<<endl;
    }
    return 0;
}

