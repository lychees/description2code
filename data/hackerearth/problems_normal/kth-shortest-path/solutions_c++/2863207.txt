#include <iostream>
#include<climits>
using namespace std;

long long Dp[105][105][105];
long long Ar[105][105];
int main()
{
    int T;
    cin>>T;
    while(T--)
    {
    	int m,n;
    	cin>>m>>n;
    	for(int i=0;i<m;i++)
    		for(int j=0;j<n;j++)
    			for(int k=0;k<102;k++)Dp[i][j][k]=INT_MAX;
    			
    	for(int i=0;i<m;i++)
    		for(int j=0;j<n;j++)
    		{
    			string S;
    			cin>>S;
    			if(S[0]=='#')
    			Ar[i][j]=INT_MAX;
    			else
    			Ar[i][j]=std::stol(S);
    		}
    	
    	if(Ar[0][0]!=INT_MAX)Dp[0][0][0]=Ar[0][0];
    	for(int i=1;i<n;i++)
    		if(Ar[0][i]==INT_MAX||Dp[0][i-1][0]==INT_MAX)break;
    		else Dp[0][i][0]=Ar[0][i]+Dp[0][i-1][0];
    	for(int i=1;i<m;i++)
    		if(Ar[i][0]==INT_MAX||Dp[i-1][0][0]==INT_MAX)break;
    		else Dp[i][0][0]=Ar[i][0]+Dp[i-1][0][0];
    	for(int i=1;i<m;i++)
    	{
    		for(int j=1;j<n;j++)
    		{
    			if(Ar[i][j]==INT_MAX)continue;
    			int l=0,k=0,c=0;
    			while(c<=101&&(Dp[i-1][j][l]<INT_MAX||Dp[i][j-1][k]<INT_MAX))
    			{
    				if(Dp[i-1][j][l]<=Dp[i][j-1][k])
    				{
    					Dp[i][j][c++]=Dp[i-1][j][l]+Ar[i][j];
    					l++;
    				}
    				else
    				{
    					Dp[i][j][c++]=Dp[i][j-1][k]+Ar[i][j];
    					k++;
    				}
    			}
    		}
    	}
    	int q;
    	cin>>q;
    	while(q--)
    	{
    		int tx,ty,k;
    		cin>>tx>>ty>>k;
    		if(Ar[tx][ty]==INT_MAX)
    		{
    			cout<<"Obstacle\n";
    			continue;
    		}
    		if(Dp[tx][ty][k-1]<INT_MAX)cout<<Dp[tx][ty][k-1]<<"\n";
    		else cout<<"Not so many paths\n";
    	}
    }
    return 0;
}
