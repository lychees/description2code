#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
inline bool comp(const long long int &a,const long long int &b){
    return (a>b);
}

long long int fact[1000006];
void factorial(){
    fact[0]=1;
    for(int i=1;i<100005;i++){
        fact[i]=(fact[i-1]*i)%MOD;
    }
}
long long modulo(long long int a,long long int b){
    long long int x=1,y=a,z;
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%MOD;
        }
        y = (y*y)%MOD;
        b /= 2;
    }
    z=x%MOD;
    return z;
}

int main(){
    long long int n;
    factorial();
    cin>>n;
    long long int answer=0;
    long long int a[n];
    long long int b[n];
    long long int  tmp=1;
    long long int sum=0;
    long long int z;
     long long int f=1;
    for(int i=0;i<n;i++){
    	b[i]=1;
    }
   long long int i;
    for( i=0;i<n;i++){
        cin>>a[i];
        int num[a[i]];
        map<int,int> mapp;
        for(long long int j=0;j<a[i];j++){
            cin>>num[j];
            mapp[num[j]]++;
        }
        for(map<int,int>::iterator it=mapp.begin();it!=mapp.end();it++){
        	b[i]=(b[i]*fact[it->second])%MOD;
        }
        sum=(sum+a[i])%MOD;
    }
   for(i=0;i<n;i++){
    f=(f*fact[a[i]])%MOD;
   }
    for( i=0;i<n;i++){
    	tmp=(tmp*b[i])%MOD;
    }
    answer=(fact[sum]*modulo(f,MOD-2))%MOD;
    answer=(answer*tmp)%MOD;
    long long int final_ans;
    final_ans=answer%MOD;
    cout<<final_ans<<"\n";
}
