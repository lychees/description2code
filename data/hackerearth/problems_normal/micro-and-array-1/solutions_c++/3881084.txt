#include<math.h>

#include<vector>
#include<iostream>
#include<map>
using namespace std;

#define K 500

class arr_op
{
        private:
                unsigned int N, Q;
                vector<unsigned int> max_v;
                vector<unsigned int> arr;
                void op_0(unsigned int index, unsigned int new_val);
                void op_1(unsigned int query_val);
        public:
                void process_input();




};

void arr_op::process_input()
{
        cin >> N >> Q;
        arr.resize(N+1);
        max_v.push_back(0);
        unsigned int max = 0, count=1;;
        for(unsigned int i=1; i<=N; i++)
        {
                if(count >  K)
                {
                        max_v.push_back(max);
                        max = 0;count = 2;
                }
                else
                        count++;

                cin >> arr[i];
                if(arr[i] > max)
                        max = arr[i];
        }
        //if(count != 1)
                max_v.push_back(max);

        int op_code;
        unsigned int index, new_val;
        unsigned int query_val;
        for(unsigned int i=0; i<Q; i++)
        {
                cin >> op_code;
                if(op_code == 0)
                {
                        cin >> index >> new_val;
                        op_0(index, new_val);
                }
                else
                {
                        cin >> query_val;
                        op_1(query_val);
                }
        }


}

void arr_op::op_0(unsigned int index, unsigned int new_val)
{
        unsigned int old_val = arr[index];
        arr[index] = new_val;

        unsigned int high= ceil((double(index))/(double(K)));
        unsigned int low = index/K;
        if(low == high)
                low--;

        if(max_v[high] <= new_val)
                max_v[high] = new_val;
        else if(max_v[high] == old_val)
        {
                unsigned int tmp_max = 0;
                for(unsigned int i=low*K+1; i<=high*K && i<=N; i++)
                {
                        if(arr[i]>tmp_max)
                                tmp_max = arr[i];
                }
                max_v[high] = tmp_max;
        }
}


void arr_op::op_1(unsigned int query_val)
{
        unsigned int i;
        for(i=1; i<max_v.size(); i++)
        {
                if(max_v[i] >= query_val)
                        break;

        }
        if(i == max_v.size()) {         cout << -1 << endl; return; }

        for(unsigned int k=(i-1)*K+1; k<=i*K && k<=N; k++)
        {
                if(arr[k] >= query_val) { cout <<  k << endl; return; }
        }
}


int main()
{
        arr_op obj1;
        obj1.process_input();
        return 0;
}
