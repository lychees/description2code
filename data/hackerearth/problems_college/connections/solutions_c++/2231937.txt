/*
    	Author - Shubham Shukla (shuklas664)
*/

#include <bits/stdc++.h>

typedef long long 	ll;

#define	MOD			1000000007
#define scll(t)		scanf("%lld",&t)
#define sc(t)		scanf("%d",&t)
#define max(a,b)	(a>=b?a:b)
#define min(a,b)	(a<b?a:b)
#define gc			getchar_unlocked
#define mp			make_pair
#define pb			push_back
#define freinp		freopen("in.txt","r",stdin)
#define freout		freopen("out.txt","w",stdout)
#define Size(a)		int((a).size())
#define F			first
#define S			second

using namespace std;


/* This is for Fast Input

void scanint(int &x)
{
	register int c = gc();
	x = 0;
	for(;(c<48 || c>57);c = gc());
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

void scanint(int &x)
{
	register int c = gc();
	x = 0;
	int neg = 0;
	for(;((c<48 || c>57) && c != '-');c = gc());
	if(c=='-') {neg=1;c=gc();}
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
	if(neg) x=-x;
}

*/

int parent[100];
int mat[101][101];

int find(int a)
{
	if(parent[a]!=a)
		parent[a] =  find(parent[a]);
	return parent[a];
}
void unite(int a,int b)
{

	int u=find(a);
	int v=find(b);
	if(u==v)
		return;
	parent[u]=v;

}

int main()
{
	//freinp;
	//ios_base::sync_with_stdio(false);
	int n,i,m,x,y,q;
	memset(mat,0,sizeof mat);
	for(i=0;i<100;i++)
        parent[i] = i;
	sc(n);
	sc(m);
	for(i=0;i<m;i++)
	{
        sc(x);
        sc(y);
        mat[x][y] = 1;
        mat[y][x] = 1;
        unite(x,y);
	}
    sc(q);
    while(q--)
    {
        sc(x);
        sc(y);
        if(mat[x][y] == 1)
            cout<<"Direct Connection\n";
        else if(find(x)==find(y))
            cout<<"Indirect Connection\n";
        else cout<<"No Connection\n";
    }
}


