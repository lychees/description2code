#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <string.h>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <fstream>
//#define _LOCAL_
#ifdef _LOCAL_
#include "testlib.h"
/* rnd */
#endif

using namespace std;

template<class T> inline T cabs(const T &x) { return x > 0 ? x : (-x); }
template<class T> inline T gcd(const T &x, const T &y) { return (y == 0) ? x : gcd(y, x % y); }
template<class T> inline T sgn(const T &x) { return (x > 0) - (x < 0); }

#define dbg(x) cout << #x << " = " << (x) << endl
#define dbg2(x,y) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << endl
#define dbg3(x,y,z) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << ", " << #z << " = " << (z) << endl
#define dbg4(x,y,z,w) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << ", " << #z << " = " << (z) << ", " << #w << " = " << w << endl

#define out(x) cout << (x) << endl
#define out2(x,y) cout << (x) << " " << (y) << endl
#define out3(x,y,z) cout << (x) << " " << (y) << " " << (z) << endl
#define out4(x,y,z,w) cout << (x) << " " << (y) << " " << (z) << " " << (w) << endl

long long f(long long m, long long t) {
    if( m & 1 )
        return t - (t / 2);
    return t / 2;
}

long long run(long long Q) {
    long long ans = 0;
    long long m, n, low, high, mid, t;
    for(m = 2; m * m <= Q; m ++) {
        t = 0;
        low = 1, high = m - 1;
        while( low <= high ) {
            mid = (low + high) >> 1;
            n = mid;
            if( (m + n) * m <= Q ) {
                t = n;
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        //dbg2(m, t);
        ans += t + f(m, t);
    }
    return ans;
}

int main()
{
    //freopen("data.in", "r", stdin);
    int nt;
    scanf("%d", &nt);
    for(; nt > 0; nt --) {
        long long Q;
        scanf("%lld", &Q);
        printf("%lld\n", run(Q));
    }
    return 0;
}
