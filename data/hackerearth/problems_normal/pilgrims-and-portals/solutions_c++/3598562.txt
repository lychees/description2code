#include<bits/stdc++.h>
using namespace std;
const int MAXN = 105;
vector< pair<int,int> > adj[MAXN];
bool vis[MAXN];
int dist[MAXN][MAXN];
const int INF = 1e9+3;

int main() {
	int t;
	cin>>t;
	while(t--) {
		int n,m,k;
		scanf("%d%d%d",&n,&m,&k);
		for(int i=1;i<=n;i++) adj[i].clear(),vis[i]=false;
		for(int i=1;i<=m;i++) {
			int x,y,z;
			scanf("%d%d%d",&x,&y,&z);
			adj[x].push_back(make_pair(y,z));
			adj[y].push_back(make_pair(x,z));
		}
		for(int i=1;i<=k;i++) {
			priority_queue< pair<int,int> > pq;
			pq.push(make_pair(0,i));
			for(int j=1;j<=n;j++) dist[i][j]=INF;
			dist[i][i]=0;
			while(!pq.empty()) {
				int dis=-pq.top().first;
				int ver=pq.top().second;
				pq.pop();
				if(dis>dist[i][ver]) continue;
				for(int j=0;j<(int)adj[ver].size();j++) {
					int distance=adj[ver][j].second;
					int vertex=adj[ver][j].first;
					if(dist[i][vertex]>dist[i][ver]+distance) dist[i][vertex]=dist[i][ver]+distance,pq.push(make_pair(-dist[i][vertex],vertex));
				}
			}
		}
		int ans=0;
		int counter=1;
		vis[1]=true;
		vector<int> v;
		v.push_back(1);
		while(counter<k) {
			int mini=1e9+3,idx;
			for(int i=0;i<(int)v.size();i++) {
				for(int j=1;j<=k;j++) {
					if(!vis[j]) {
						if(dist[v[i]][j]<mini) mini=dist[v[i]][j],idx=j;
					}
				}
			}
			ans+=mini;
			vis[idx]=true;
			v.push_back(idx);
			counter++;
		}
		printf("%d\n",ans);
	}
	return 0;
}