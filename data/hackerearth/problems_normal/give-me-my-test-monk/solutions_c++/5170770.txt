#include <iostream>
using namespace std;

long int U = 1e9 + 7;

long long int powModulo(long int a, long int p){
	long long int ans = 1L;
	while(p){
		if(p & 1){
			ans = ((ans % U) *  ( a % U)) % U;
		}
		p >>= 1;
		a = (a * a) % U;
	}
	return ans;
}

long long int factModulo(long int n){
	long long int ans = 1L;
	while(n){
		ans = ((ans % U) * (n % U)) % U;
		n--;
	}
	return ans;
}

long long int C(long int n, long int r){
	long long int ans;
	ans = (((factModulo(n) * powModulo(factModulo(n - r), U - 2L)) % U) * powModulo(factModulo(r), U - 2L) % U);
	return ans;
}

long long int D(long int n){
	long long int ans = 0L;
	long long int temp;
	for(long int i = 0; i <= n; i++){
		temp = powModulo(factModulo(i), U - 2L);
		if(i & 1)
			temp = -temp;
		ans = (ans + temp) % U;
	}
	ans = (ans * factModulo(n)) % U;
	return ans;
}

int main()
{
    int n, l, r;
    long long int der = 0L;
    cin >> n >> l >> r;
    if(l ==0)
    	der += 1L;
    if(l < 2)
    	l = 2;
    while(l <= r){
    	der = (der % U + ((C(n, l) % U) * (D(l) % U)) % U) % U;
    	l++;
    }
    der = (der * (powModulo(factModulo(n), U - 2))) % U;
    cout << (der < 0L ? der + U : der) << endl;
    return 0;
}
