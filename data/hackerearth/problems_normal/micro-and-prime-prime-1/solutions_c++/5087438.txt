#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
 
bitset<1001000> bssss;
vector<ll> primes;
 
void sieve1()
{
 	bssss.set();
 	bssss[0] = bssss[1] = 0;
 	
 	for(ll i = 2; i <= 1000000; i++)
 		if(bssss[i])
 		{
 			for(ll j = i * i; j <= 1000000; j += i)
 				bssss[j] = 0;
			primes.push_back(i);
 			
 		}
 }
 
bool isPrime(ll n)
{
	if(n <= 1000000)
		return bssss[n];
	for(int i = 0; i < (int)primes.size(); i++)
		if(n % primes[i] == 0)
			return false;
	return true;
}
 
 
int main()
{
 	
 	sieve1();
 	ll dp1[1000010], dp2[1000010];
 	dp1[0] = 0;
 	for(int i = 1; i <= 1000000; i++)
 		dp1[i] = dp1[i - 1] + bssss[i];
 		
 	dp2[0] = 0;
 	for(int i = 1; i <= 1000000; i++)
 		dp2[i] = dp2[i - 1] + isPrime(dp1[i]);
 	
 	int t, x, y;
 	scanf("%d", &t);
 	while(t--)
 	{
 		scanf("%d %d", &x, &y);
 		printf("%lld\n", dp2[y] - dp2[x - 1]);
 	}
    return 0;
}