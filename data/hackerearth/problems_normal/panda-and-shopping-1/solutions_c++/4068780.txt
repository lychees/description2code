#include<iostream>
#include <map>
#define MAX 500
 
using namespace std;
int main()
{
    unsigned T;
    cin>>T;
    map<long, long> res;        //L to H

    for(int i = 0; i < T; i++) {
        long H, L;
        cin>>H>>L;
        if(H < 0)
            continue;

        //point it to max lower value than L
        map<long, long>::iterator it = res.lower_bound(L);
        long inserted_val = H;
        if(it != res.begin() && (it == res.end() || it->first > L))
            it--;
        if(it != res.end() && it->first <= L)
            inserted_val += it->second;

        //point it_
        //pair<map<long,long>::iterator, bool> pr = res.insert(pair<long, long>(L, inserted_val));
        //map<long, long>::iterator it_res = pr.first;
        res[L] = inserted_val;
        map<long, long>::iterator it_res = res.find(L);
//        cout<<"\n";
//        cout<<it_res->first<<it_res->second;
//        cout<<"\n";
        it_res++;

        map<long, long>::iterator it_res2 = it_res;
        for( ; it_res2 != res.end() && (it_res2->second <= inserted_val); it_res2++)
            ;

        res.erase(it_res, it_res2);
    }

    long gmax = 0;
    map<long, long>::iterator it = res.end();
    it--;
    if(it != res.end())
        gmax += it->second;

//    cout<<"\n";
    cout<<gmax;
    cout<<"\n";
 //       if(i < T-1)
 //           cout<<"\n";

    return 0;
}
 
