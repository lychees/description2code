#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

const int N = 1010;
const int MOD = (int) 1e9 + 7;

int n, ans = 0, a[N][N], dp[N][N], dx[] = {-1, 1, 0, 0}, dy[] = {0, 0, -1, 1};
vector < pair <int, int> > g[N];

void add(int &x, int y) {
    x += y;
    if (x >= MOD) {
        x -= MOD;
    }
}

int main() {

    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
            dp[i][j] = 0;
            g[a[i][j]].push_back(make_pair(i, j));
        }
    }

    for (int i = 100; i >= 1; i--) {
        for (int j = 0; j < g[i].size(); j++) {
            int x = g[i][j].first;
            int y = g[i][j].second;
            add(dp[x][y], 1);
            for (int k = 0; k < 4; k++) {
                int xx = x + dx[k];
                int yy = y + dy[k];
                if (xx < 0 || xx >= n || yy < 0 || yy >= n || a[xx][yy] >= a[x][y]) {
                    continue;
                }
                add(dp[xx][yy], dp[x][y]);
            }
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            add(ans, dp[i][j]);
        }
    }

    printf("%d\n", ans);

    return 0;

}
