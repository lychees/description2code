from collections import defaultdict

n, m = map(int, raw_input().split(' '))

A = []
for i in range(n):
    s, j = map(int, raw_input().split(' '))
    A.append((s, s+j, i))

A.sort(key=lambda x: x[0])

alloted = {i: 0 for i in range(1, m+1)}
# avail = defaultdict(int)
result = [-1] * n

for i in range(n):
    for j in alloted:
        if alloted[j] <= A[i][0]:
            result[A[i][2]] = j
            alloted[j] = A[i][1]
            break


# for i in range(n):
    # keys = [j for j in avail if j<=A[i][0]]
    # for k in keys:
    # 	alloted -= avail[k]
    # 	del avail[k]
    # if alloted < m:
    # 	alloted += 1
    # 	avail[A[i][1]] += 1
    # 	result[A[i][2]] = alloted

print ' '.join(map(str, result))
