//by Vanjape Rajas Mangesh

#include<bits/stdc++.h>

using namespace std;

typedef pair<int,int>   II;
typedef vector< II >      VII;
typedef vector<int>     VI;
typedef vector< VI > 	VVI;
typedef long long int 	LL;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);

const int N=5000005;

char A[N];
VI g[N];
string s;
int n,m;
int vis[N];

int valid(int i,int j)
{
	if(i<0||i>=n+2||j<0||j>=m+2)
		return 0;
	return 1;
}
int check(int i1,int j1,int i2,int j2)
{
	if(valid(i1,j1)==0||valid(i2,j2)==0)
		return 0;
	if(A[i1*(m+2)+j1]==A[i2*(m+2)+j2])
		return 0;
	return 1;
}
void addedge(int i1,int j1,int i2,int j2)
{
	g[i1*(m+3)+j1].PB(i2*(m+3)+j2);
	g[i2*(m+3)+j2].PB(i1*(m+3)+j1);
}
int cnt=0;
int qu[N],st,ed;
void dfs(int u)
{
	st=ed=0;
	qu[st]=u;
	vis[u]=1;
	while(st<=ed)
	{
		int v=qu[st];
		for(int i=0;i<SZ(g[v]);i++)
		{
			int w=g[v][i];
			if(!vis[w])
			{
				vis[w]=1;
				qu[++ed]=w;
			}
		}
		st++;
	}
	int ss=SZ(g[u]);
	if(ss==0)
		cnt=1;
	else
		cnt=0;
}

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		int ct=0;
		for(int i=0;i<=m+1;i++)
			A[ct]='.',ct++;
		for(int i=0;i<n;i++)
		{
			A[ct]='.',ct++;
			cin>>s;
			for(int j=0;j<m;j++)
				A[ct]=s[j],ct++;
			A[ct]='.',ct++;
		}
		for(int i=0;i<=m+1;i++)
			A[ct]='.',ct++;
		int ans=0;
		for(int i=0;i<=n+2;i++)
			for(int j=0;j<=m+2;j++)
			{

				if(check(i-1,j-1,i-1,j)==1)
					addedge(i,j,i-1,j);
				if(check(i-1,j-1,i,j-1)==1)
					addedge(i,j,i,j-1);
				if(check(i-1,j,i,j)==1)
					addedge(i,j,i,j+1);
				if(check(i,j-1,i,j)==1)
					addedge(i,j,i+1,j);
			}
		for(int i=0;i<(n+3)*(m+3);i++)
			if(!vis[i])
			{
				dfs(i);
				if(cnt==0)
				{
					ans++;
				}
			}
		if(ans>1)
			cout<<"NO\n";
		else
			cout<<"YES\n";
		for(int i=0;i<(n+3)*(m+3);i++)
			g[i].clear(),vis[i]=0;
	}
	return 0;
}
