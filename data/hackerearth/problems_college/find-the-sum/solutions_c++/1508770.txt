/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
vector<ll> v;
vector<ll>::iterator it;
void pre(){
	ll sum=0,c=1;
	while(sum<=1e12){
		v.pb(sum);
		sum+=c;
		c++;
	}
}
ll solve(ll n){
	ll p,ret,val;
	if(n==0) return 0;
	it=lower_bound(v.begin(),v.end(),n);
	if((*it)!=n) it--;
	p=it-v.begin();
	ret=(p+1)/2;
	ret*=ret;
	p=(p*(p+1))/2;
	n-=p;
	if(n==0) return ret;
//	cout<<"**"<<n<<" "<<ret<<endl;
	val=it-v.begin();
	if(n%2) return ret+val+1;
	return ret;
}
int main(){
	pre();
	ll t,le,r,u,l;
	sl(t);
	while(t--){
		sl(le);sl(r);
		u=solve(r);
		l=solve(le-1);
	//	cout<<u<<" "<<l<<endl;
		printf("%Ld\n",u-l);
	}
	return 0;
}