#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int prime[100001];
int num[100001],k;
int pro[100001];
void pre()
{
	int i,j;
	prime[0]=prime[1]=1;
	for(i=2;i<100001;i++)
	{
		if(prime[i]!=0) continue;
	for(j=i*2;j<100001;j+=i)
	 prime[j]=1;
	}
	for(i=2;i<100001;i++) if(prime[i]==0) num[k++]=i;
}
void process(int x)
{
	int temp=x,j=0,i=0;
	while(temp>1)
	{
		int j=0;
		while(temp%num[i]==0)
		{
			j++;
			temp/=num[i];
		}
		pro[num[i]]+=j;
		i++;
		if(prime[temp]==0)
		{
			pro[temp]+=1;
			break;
		}
	}
}
void sol()
{
	int i,n,base;
	int a[100001];
	cin>>n;
	for(i=0;i<n;i++) 
	{
		cin>>a[i];
	}
	for(i=0;i<n;i++) process(a[i]);
	cin>>base;
	while(base--)
	{
		cin>>i;
		int t=0;
		int ans=100000;
		while(i>1)
		{
			int m=0;
			while(i%num[t]==0) 
			{
				m++;
				i/=num[t];
			}
			if(m>0)
			{
				m=pro[num[t]]/m;
			ans=min(ans,m);
			}
			t++;
			if(prime[i]==0)
			{
				m=pro[i];
				ans=min(ans,m);
				break;
			}
		}
		cout<<ans<<endl;
	}
}
int main()
{
	ios_base::sync_with_stdio(0);
	pre();
	sol();
	return 0;
}