#include<bits/stdc++.h>
#define lli long long int
#define pii pair<lli,lli>
#define mp(x,y) make_pair(x,y)
using namespace std;

lli arr[100009]; lli index_of[100009]; lli bit[100009]; lli ans[100009];// ans[i]=> answer for R=i;
pair < pii ,lli> ranges[100009];

void update(lli index)
{
	while (index<=100005)
	{
		bit[index]++;
		index+=index&-index;
	}

}

lli query(lli index)
{
	lli sum=0;
	
	while (index>0)
	{
		sum+=bit[index];
		index-=index&-index;
	}
	return sum;
}


int main()
{
		ios::sync_with_stdio(false);

		lli n,q,d,l,r;
		cin>>n>>q>>d;


		for (lli i=1 ; i<=n ; i++)
		{
			cin >> arr[i];
			index_of[arr[i]] = i;
		}

		for (lli i=0 ; i<q ; i++)
		{
			cin>>l>>r;
			ranges[i]=mp( mp(r,l), i );
		}

		sort(ranges,ranges+q);
	    lli i=1,i2=0;
	    
		for (  ; i<=n and i2<q ; i++)
		{
		
			for (lli j=max(1LL,arr[i]-d) ; j<= min(arr[i]+d,n) ; j++)
			{
				if(index_of[j]<=i)
				update(index_of[j]);
			}

			while(i==ranges[i2].first.first)
			{
				l=ranges[i2].first.second;
				r=ranges[i2].first.first;
				lli index_of_range=ranges[i2].second;
				
				ans[index_of_range] = query(r)-query(l-1);
				i2++;
			}

		}
		
		for (lli i=0 ; i<q ; i++)
		cout<<ans[i]<<endl;
		
}
