""" Ashima bought home n: cats
    Bought 'n' packets of cat food
    every cat eats a whole packet of cat food
    and won't share anything with other cats
    each food packet calorie value = c
    cat with original strength s eats packet with
        calorie value c
        new strength = c*s
    all the cats won't be able to eat max strength packet
Input:
!<=n<=10^6
1<=s<=10^6 space seperated list of original strengths
1<=c<=10^6 cal value of n packets bought
Output:
The maximum value sum(final strengths)
Given you give one packet to each cat
 Greedy strategy cat with smallest strength must eat packet cal realtively close to it ...
 Obs: arbitrary non-greedy solution may equal or be less than the greedy approach but may not exceed it
"""
from itertools import izip
N = int(raw_input())
OriginalStrengths = map(int, raw_input().split())
CalorieValues = map(int, raw_input().split())
OriginalStrengths.sort()
CalorieValues.sort()
ans = 0
for c, s in izip(OriginalStrengths, CalorieValues):
    ans += c*s
print ans
