#include<iostream>

using namespace std;
int good[24][60][60],bad[24][60][60];

int gd(int x,int y)
{
    if(!x)
        return y;
    return gd(y%x,x);
}
int gcd(int x,int y,int z)
{

    int a,b;

    //if(x==1||y==1)
    a=gd(x,y);
    b=gd(a,z);
    //if(a&&b)

    if(b==1)
        return 1;
    else
        return 0;
}
void gettime()
{
    int i,j,k;

    for(i=23;i>=0;i--)
    {
        for(j=59;j>=0;j--)
        {
            for(k=59;k>=0;k--)
            {
               if(k!=59)
               {
                  good[i][j][k]=good[i][j][k+1];
                  bad[i][j][k]=bad[i][j][k+1];
               }


               if(gcd(i,j,k))
               good[i][j][k]++;
               else
                bad[i][j][k]++;


            }
            if(j)
            {
              good[i][j-1][59]=good[i][j][0];
              bad[i][j-1][59]=bad[i][j][0];
            }
            bad[i][j-1][59]=bad[i][j][0];
        }
        if(i)
        {
          good[i-1][59][59]=good[i][0][0];
           bad[i-1][59][59]=bad[i][0][0];
        }

    }
}
int main()
{
    int t,h,m,s,g;

    cin>>t;
    gettime();
    while(t--)
    {
       cin>>h>>m>>s;

       g=1;
      // bad=(60-s)*(60-m)*(24-h)-good;
        if( good[h][m][s]&&bad[h][m][s])
       g=gd(good[h][m][s],bad[h][m][s]);

       cout<<bad[h][m][s]/g<<':'<<good[h][m][s]/g<<'\n';
    }


    return 0;
}

