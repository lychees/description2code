#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> pii;

bool isSafe(int x,int y,int n)
{
   if(x>=0 && x<n && y>=0 && y<n)
                return true;
return false;
}
int main()
{
 int n;
 int ts;
  cin>>ts;
  while(ts--)
{
  cin>>n;
  int arr[n][n];
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<n;j++)
    {
      cin>>arr[i][j];
    }
   }
  queue<pii> q;
  pii f(0,0);
  q.push(f);
  bool flag=false;
  while(!q.empty())
  {
    pii fringe=q.front();
    q.pop();
    int x,y;
    x=fringe.first;
    y=fringe.second;
    if(fringe.first==n-1 && fringe.second==n-1)
    {
           flag=true;
           break;
    }
    if(isSafe(x,y+1,n)) {
         if(arr[x][y+1]==1)
            {
                    pii t(x,y+1); 
                    q.push(t);
            }
      }
    if(isSafe(x+1,y,n)){
       if(arr[x+1][y]==1)
                {
                           pii t(x+1,y);
                            q.push(t);
                }
     }
   
  }
  if(flag)
   cout<<"POSSIBLE"<<endl;
  else
   cout<<"NOT POSSIBLE"<<endl;
}
}