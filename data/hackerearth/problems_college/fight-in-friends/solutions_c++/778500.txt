#include<iostream>
#include<cstdio>
#include<vector>
#include<list>
#include<queue>
using namespace std;
const int MAX = 2002;
#define SZ(c) c.size()

bool G[MAX][MAX];
int color[MAX];
bool visited[MAX];
int dist[MAX];

bool bfs(int u,int n)
{
	int i, v, sz;
	queue< int > Q;
	Q.push(u);	visited[u]=true;
	dist[u]=0;

	while(!Q.empty())
	{
		u = Q.front();Q.pop();
		
		for(i = 0; i <n; i++) 
		{
			if(G[u][i]==1)
			{
			v = i;
			if(visited[v]==false)
			{
				Q.push(v);
				visited[v]=true;
				dist[v]=dist[u]+1;
			}
			}
		}
	}
	return true;
}


int main() {
	int n,m,a,b;
		cin>>n>>m>>a>>b;
		
		//scanf
		for(int i=0;i<n;i++) for(int j=0;j<n;j++) 
		{
			if(i==j) G[i][j]=0;
			else G[i][j]=1;
		}
		
		int u,v;
		for(int i = 0; i < m; i++) 
		{
			scanf("%d%d", &u, &v);
			G[u-1][v-1]=G[v-1][u-1]=0;
		}
		
		
		
		bfs(a-1,n);
		if(visited[b-1]==true) cout<<dist[b-1]<<endl;
		else cout<<"-1"<<endl;
		
		return 0;
}