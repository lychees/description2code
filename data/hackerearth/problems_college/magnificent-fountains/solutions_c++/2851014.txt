#include <iostream>
#include<vector>
#include<cmath>
using namespace std;
vector<long> v;
int cal=0;
int isprime(long a)
{
	if(cal==0)
	{
	v.push_back(2);
	for(int i=3;i<=a;i=i+2)
	{
		int k=v.size();
		int j;
		for( j=0;j<k;j++)
		{
			if(i%v[j]==0)
			break;
		}
		if(j==k)
		v.push_back(i);
	}
	cal=a;
	return v.size();
	}
	if(cal==a)
	{
	cal=a;
	return v.size();
	}
	
	if(cal<a)
	{
		for(int i=cal+2;i<=a;i=i+2)
	{
		int k=v.size();
		int j;
		for( j=0;j<k;j++)
		{
			if(i%v[j]==0)
			break;
		}
		if(j==k)
		v.push_back(i);
	}
	cal=a;
	return v.size();
	}
if(cal>a)
{
	int ttr=v.size();
	while(v[ttr-1]>a)
	{
		ttr--;
	}
	cal=a;
	return ttr;
}

	
	
	}
int main()
{
	int t;
	cin>>t;
	for(int y=0;y<t;y++)
	{
    int n;
    cin>>n;
    long max=0;
    long pro=1;
    int nn=0;
    long *arr=new long[n];
    for(int i=0;i<n;i++)
    {
    cin>>arr[i];
    if(arr[i]>max)
      max=arr[i];
    }
    //long upto=pow(max,0.5);
    int rec=isprime(max);
    //int siz=v.size();
    for(int i=0;i<rec;i++)
    {
    	int maxi=0;
      for(int j=0;j<n;j++)
      {
      	if(arr[j]%v[i]!=0)
      	{
      	continue;	
      	}
      	else
      	{ 
      		int count=0;
      		while(arr[j]%v[i]==0)
      		{
      		arr[j]=arr[j]/v[i];
      		count++;
      		}
      		if(maxi<count)
      		maxi=count;
      	}
      }
      if(maxi>0)
      for(int q=0;q<maxi;q++)
      {
      	pro=pro*((v[i])%1000000007);
      	pro=pro%1000000007;
      }
    }
    cout<<pro<<endl;
	}
    
    return 0;
}
