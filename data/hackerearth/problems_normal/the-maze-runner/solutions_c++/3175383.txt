#include <bits/stdc++.h>
using namespace std;
double x[105],y[105],H;
double dp[105][2];

bool perpendicular(int l, int h, double t){
	for(int i=l;i<h;i++)
		if(t<y[i] || y[i]+H < t) return false; 
	return true;
}

bool inmaze(int l, int h, double x1, double y1, double x2, double y2){
	double ins_y;
	for(int i=l;i<h;i++){
		ins_y = (y2-y1)/(x2-x1) * (x[i] - x1) + y1;
		if(ins_y<y[i] || ins_y>y[i]+H) return false;
	}
	return true;
}
int main()
{
	int n;
	double x1,y1,x2,y2;
	cin >> n;
	for(int i=0;i<=n;i++){
		scanf("%lf%lf",&x[i],&y[i]);
	}
	cin >> H;
	for(int i=0;i<=n;i++){
		dp[i][0] = dp[i][1] = 100000000;
	}
	dp[0][0] = dp[0][1] = 0;
	for(int i=1;i<=n;i++){
		if(perpendicular(0,i,y[i])) dp[i][0] = x[i] - x[0];
		else if(perpendicular(0,i,y[i]+H)) dp[i][1] = x[i] - x[0];
	}
	for(int i=0;i<=n;i++){
		for(int t1=0;t1<=1;t1++){
			for(int j=i+1;j<=n;j++){
				for(int t2=0;t2<=1;t2++){
					x1=x[i];
					y1=y[i]+H*t1;
					x2=x[j];
					y2=y[j]+H*t2;
					if(inmaze(i+1,j,x1,y1,x2,y2)){
						dp[j][t2] = min(dp[j][t2],dp[i][t1] + sqrt((x1-x2)*(x1-x2) + (y2-y1)*(y2-y1)));
					}
				}	
			}
		}	
	}
	double ans = 100000000;
	for(int i=0;i<=n;i++){
		if(perpendicular(i+1,n+1,y[i]))
			ans = min(ans,dp[i][0] + x[n]-x[i]);
		if(perpendicular(i+1,n+1,y[i]+H))
			ans = min(ans,dp[i][1] + x[n]-x[i]);
	}
	printf("%.10f",ans);
    return 0;
}
