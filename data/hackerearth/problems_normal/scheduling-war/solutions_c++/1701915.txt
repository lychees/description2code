#include <bits/stdc++.h>
#define INF 1000000000
using namespace std;
int res[205][205],mf,f,s,t,v,n,b,sys,k,sum;
int p[205];
vector <int> dist,adj[205];
queue <int> q;
void augment(int n, int minEdge){
	if(n==s) f=minEdge;
	else if(p[n]>=0){
		augment(p[n],min(minEdge,res[p[n]][n]));
		res[p[n]][n]-=f;
		res[n][p[n]]+=f;
	}
}
int main(){
	memset(res,0,sizeof(res));
	scanf("%d",&n);
	for(int x=1;x<=n;x++) scanf("%d",&res[0][x]);
	scanf("%d",&b);
	for(int x=1;x<=b;x++){
		scanf("%d",&sys);
		for(int y=0;y<sys;y++){
			scanf("%d",&k);
			res[k][n+x]=INF;
		}
		scanf("%d",&res[n+x][n+b+1]);
		sum+=res[n+x][n+b+1];
	}
	v=n+b+1;
	for(int x=0;x<=v;x++) for(int y=0;y<=v;y++) if(res[x][y]>0||res[y][x]>0) adj[x].push_back(y);
	s=0;t=n+b+1;
	mf=0;
	while(1){
		f=0;
		dist.clear();
		dist.resize(v+1,INF);
		dist[s]=0;
		while(!q.empty()) q.pop();
		q.push(s);
		memset(p,-1,sizeof(p));
		while(!q.empty()){
			int u=q.front();
			q.pop();
			if(u==t) break;
			for(int x=0;x<adj[u].size();x++){
				int n=adj[u][x];
				if(res[u][n]>0&&dist[n]==INF){
					dist[n]=dist[u]+1;
					q.push(n);
					p[n]=u;
				}
			}
		}
		augment(t,INF);
		if(f==0) break;
		mf+=f;
	}
	printf("%d\n",sum-mf);
	return 0;
}
 	