#include<bits/stdc++.h>
#define set(p) memset(p,-1,sizeof(p))
#define clr(p) memset(p,0,sizeof(p))
#define ll long long int
#define llu unsigned long long int
#define scan(n)                   scanf("%lld",&n)
#define sf(n)                   scanf("%lf",&n)
#define sscan(n)                                   scanf("%s",n)
#define rep(i,a,n) for(i=(a);i<(n);i++)
#define pii pair<int,int>
#define pb(x) push_back(x)
#define v(x) vector<x>
using namespace std;

int gcd(int a,int b)
{
 int r, i;
  while(b!=0){
    r = a % b;
    a = b;
    b = r;
  }
  return a;
}


long long int power(long long int x,long long int y,ll mod)
{
    long long int temp,ty,my;

    if( y == 0)
        return 1;
    temp = power(x, y/2,mod);
    ty=(temp%mod)*(temp%mod);
    if (y%2 == 0)
        {

                return ty%mod;
        }
    else
        {
                my=(x%mod)*(ty%mod);
                return my%mod;
        }
}



long long int maxxi(long long int a,long long int b)
{
        return a>b?a:b;
}

long long int mini(long long int a,long long int b)
{
        return a<b?a:b;
}




struct abhi
{
       ll val;
       ll arr1;
};

struct abhi brr[100010];

bool cmp(struct abhi x,struct abhi y)
{
        return x.arr1<y.arr1;
}


ll arr1[200001];
ll arr2[200001];


ll solve(ll n,ll m,ll mi)
{
    ll i=0;
    ll j=0;

    while(i<n && j<m)
    {
        if(abs(arr1[i]-arr2[j])<=mi)
        {
            i++;
            j++;
        }
        else
            j++;
    }

    if(i==n)
        return 1;
    else
        return 0;
}

int main()
{
    ll t,i,j,n,m,k,p,r;

    scan(t);

    while(t--)
    {
        scan(n);
        scan(m);

        for(i=0;i<n;i++)
        {
            scan(arr1[i]);
        }

        for(i=0;i<m;i++)
        {
            scan(arr2[i]);
        }

        sort(arr1,arr1+n);
        sort(arr2,arr2+m);

        ll left=0;

        ll right=INT_MAX;

        ll mi;
        while(left<right)
        {
            mi=(left+right)/2;

            if(solve(n,m,mi)==1)
            {
                right=mi;
            }
            else
            {
                left=mi+1;
            }
        }
        ll ans=left;

        cout<<ans<<"\n";
    }
    return 0;
}
