#include <iostream>
#include <algorithm>
#include <set>
#include <vector>

using namespace std;

const int inf = -1u/2;
const int N = 1010;

int A[N], B[N];
int n, k;

vector<int> Va, Vb;
set<int> Sa, Sb;

int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> k;
	for(int i = 1;i <= n;i++) {
		cin >> A[i] >> B[i];
		Sa.insert(A[i]);
		Sb.insert(B[i]);
	}
	Va.assign(Sa.begin(), Sa.end());
	Vb.assign(Sb.begin(), Sb.end());
	int ans = inf;
	for(int i = 0;i < Va.size();i++) {
		int mxA = Va[i];
		int lo = 0, hi = Vb.size();
		while(lo < hi) {
			int mid = (lo + hi) / 2;
			int mxB = Vb[mid];
			int mx = 0;
			for(int i = 1;i <= n and i <= mx + k;i++) {
				if(A[i] <= mxA and B[i] <= mxB) {
					mx = i;
				}
			}
			if(mx+k >= n+1) {
				hi = mid;
			}else {
				lo = mid + 1;
			}
		}
		if(hi == Vb.size()) continue;
		int mxB = Vb[lo];
		ans = min(ans, mxA * mxB);
	}
	cout << ans << endl;
    return 0;
}
