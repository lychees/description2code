/* Talk is cheap , show me the code. */

#include <bits/stdc++.h>
using namespace std;

#define SI(intger) scanf("%d",&intger)
#define SL(longLongInt) scanf("%lld",&longLongInt)
#define SC(ch) scanf("%c",&ch)
#define PI(intger) printf("%d",intger)
#define PL(longLongInt) printf("%lld",longLongInt)
#define PC(ch) printf("%c",ch)
#define PS(str) printf("%s",str)
#define CI(str) cin>>str
#define CO(str) cout<<str
#define PE printf("\n")

#define F1(i,n) for(int i=1;i<=n;i++)
#define F0(i,n) for(int i=0;i<n;i++)
#define FAB(i,a,b) for(int i=a;i<=b;i++)
#define FR1(i,n) for(int i=n;i>0;i--)
#define FR0(i,n) for(int i=n-1;i>=0;i--)
#define ll long long

#define VI vector<int>
#define VL vector<long long>
#define PII piar<int,int>
#define PIL pair<int,long long>
#define PLL pair<long long ,long long>
#define PB push_back
#define MP make_pair
const ll mod=1e9+7;
const int N=2*1e6+7;
const int lg=20;

string str;char ch;
int t,n,i,j,q,k,l,r,chk,idx,m,ans[N],arr[1][N];

struct suffix
{
    int nr[2],idx;
}arry[N];

bool compare(suffix a,suffix b)
{
    if(a.nr[0]!=b.nr[0])
        return a.nr[0]<b.nr[0];
    if(a.nr[1]!=b.nr[1])
        return a.nr[1]<b.nr[1];
    return a.idx<b.idx;
}
int main()
{
    SI(n);
    CI(str);
    str+=str;
    for(int i=0;i<2*n;i++)
        arr[0][i]=str[i]-'a';
    int stp,cnt;
    for(stp=1,cnt=1;cnt<n;stp++,cnt<<=1)
    {
        F0(i,n)
        {
            arry[i].nr[0]=arr[0][i];
            arry[i].nr[1]=(i+cnt<2*n)?(arr[0][i+cnt]):(-1);
            arry[i].idx=i;
        }
        sort(arry,arry+n,compare);
        F0(i,n)
            arr[0][arry[i].idx]= ( (i>0)&&(arry[i].nr[0]==arry[i-1].nr[0])&&(arry[i].nr[1]==arry[i-1].nr[1]) ) ?arr[0][arry[i-1].idx] :i;
    }
    //F0(i,n)
      //  PI(arr[0][i]),PE;
    int mini=arr[0][0];
    ans[0]=0;
    F1(i,n-1)
    {
        if(arr[0][i]<mini)
        {
            mini=arr[0][i];
            ans[i]=i;
        }
        else
            ans[i]=ans[i-1];
    }
    SI(q);
    while(q--)
    {
        int x;
        SI(x);
        PI(ans[x]);PE;
    }
    return 0;
}
