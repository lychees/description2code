def top_actual(balance):
    odd = balance % 2
    count = (balance+1)/2
    s = ''
    for i in xrange(count-1):
        s += '/ '
    s += '/'
    if not odd:
        s += '  '
    s += '\\'
    for i in xrange(count-1):
        s += ' \\'
    return s


def top_print(number_of_spaces, balance):
    # print 'Number of spaces', number_of_spaces,'balance', top_actual(balance)
    leading_spaces = ' ' * number_of_spaces
    actual = top_actual(balance)
    print '%s%s' % (leading_spaces, actual)


def bottom_actual(balance):
    # print 'bottom_actual ', balance
    s = ''
    odd = balance % 2
    count = (balance-odd)/2
    for i in xrange(count):
        s += '\\ '
    if odd:
        s += '\\/'
    for i in xrange(count):
        s += ' /'
    return s


def bottom_print(number_of_spaces, balance):
    leading_spaces = ' ' * number_of_spaces
    actual = bottom_actual(balance)
    print '%s%s' % (leading_spaces, actual)


def draw_logo(N):
    for i in xrange(N):
        number_of_spaces = N-i-1
        balance = N - number_of_spaces
        top_print(number_of_spaces, balance)

    for i in xrange(N):
        number_of_spaces = 2+i
        balance = N - i
        bottom_print(number_of_spaces, balance)


X = int(raw_input())
draw_logo(X)
draw_logo(X+1)
