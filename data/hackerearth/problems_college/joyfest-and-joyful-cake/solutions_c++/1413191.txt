#include <iostream>
#include <string.h>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <queue>
#define S(n) scanf("%d",&n)
#define Sll(n) scanf("%lld",&n)
#define Sl(n) scanf("%ld",&n)
#define ll long long 
#define li long int
using namespace std;
struct node {
	ll x;
	ll y;
};
ll gcd(ll a, ll b)
{
	return b == 0 ? a : a > b ? gcd(b, a%b) : gcd(a, b%a);
}
bool myfunc(struct node a,struct node b)
{
	if(a.x == b.x) {
		return a.y < b.y;
	} else {
		return a.x < b.x;
	}
}
const int maxBufSize = (10000000);
 
struct Input
{
int bufSize, bufEnd, bufPos;
char buffer[maxBufSize];
void grabBuffer() {
bufSize = (maxBufSize); bufPos = 0;
bufEnd = fread(buffer, sizeof (char), bufSize, stdin);
buffer[bufEnd] = '\0';
}
bool bufEof() {return bufPos == bufEnd;}
int getChar() {return buffer[bufPos++];}
void skipWS() {
while ((buffer[bufPos] == '\n' ||
buffer[bufPos] == ' ' || buffer[bufPos] == '\t'))
bufPos++;
}
int rInt() {
int n = 0, x; skipWS();
bool neg=false;
if ( ( x = getChar() )=='-' ){
neg=true;
x=getChar();
}
for (; x <= '9' && x >= '0'; x = getChar())
n = (n << 3) + (n << 1) + (x - '0');
if ( neg )return -n;
else return n;
}
inline bool isWhiteSpace(char x) {
return x == ' ' || x == '\n' || x == '\t';
}
char rChar() {skipWS(); return getChar();}
}input;
ll a[2100002];
int main()
{
	//input.grabBuffer();

	int t;
	//t = input.rInt();
	S(t);
	ll i;
	int k = 2100000;
	for(i = 0; i < k; i++) {
		a[i] = (i * i + i + 2) / 2;
	}
	//cout << a[1414] << endl;
	while(t--) {
		ll n;
		//n = input.rInt();
		Sll(n);
		ll ans = lower_bound(a, a + k, n) - a;
		printf("%lld\n", ans);
	}
	return 0;
}