#include <bits/stdc++.h>
using namespace std;


void solve(){
	long long n;
	cin>>n;
	long long a[n];
	
	for(long long i = 0;i<n;i++)
	{
		cin>>a[i];
	}
	
	long long  pow_set_size = pow(2, n);
    long long  counter, j;
 
 	bool f = true;
 	long long res = 0,len = 0,tmp1=0,tmp2=0,l=0;
    /*Run from counter 000..0 to 111..1*/
    for(counter = 0; counter < pow_set_size; counter++)
    {
    	f = true;
    	l = 0;
    	tmp1=0;
    	tmp2=0;
    	
      for(j = 0; j < n; j++)
       {
          /* Check if jth bit in the counter is set
             If set then pront jth element from set */
          if(counter & (1<<j))
          {
          	l++;
          	if(f)
          	{
          		tmp1=a[j];
          		tmp2=a[j];
          		f= false;
          	}else
          	{
          		tmp1 ^= a[j];
          		tmp2 &= a[j];
          	}
          }
            
       }
       
       long long q = tmp1 | tmp2;
       
       
       
       if(q>=res)
       {
       		if(q==res)
       			len = max(len,l);
       		else
       			len = l;
       			
       		res = q;
       	
       }
    }
	
	cout<<res<<" "<<len<<endl;
       res=0;len=0;
}


int main()
{
    long long test;
    cin>>test;
    while(test--)
    solve();
    return 0;
}
