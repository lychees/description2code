#define _CRT_SECURE_NO_DEPRECATE
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <stdlib.h>
#include <ctime>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <math.h>
#include <queue>
#include <memory.h>
#include <iostream>
#include <stack>
#include <complex>
#include <list>
#include <bitset> 
using namespace std;
void ASS(bool b)
{
    if (!b)
    {
        ++*(int*)0;
        cout << "gg" << endl;
    }
} 
#define FOR(i, x) for (int i = 0; i < (int)(x); i++)
#define CL(x) memset(x, 0, sizeof(x))
#define CLX(x, y) memset(x, y, sizeof(x))
#pragma comment(linker, "/STACK:106777216")
typedef vector<int> vi;
typedef long long LL;
struct Hash2 {
    vector<vi> a;
    vi px;
    vi py;
    Hash2(const vector<string>& s)
    {
        const int MX = 173;
        const int MY = 100000009;
        int n = (int)s.size();
        int m = (int)s[0].size();
        a.assign(n + 1, vi(m + 1, 0));
        px.assign(n + 1, 1);
        py.assign(m + 1, 1);
        FOR(i, n)
            px[i + 1] = px[i] * MX;
        FOR(i, m)
            py[i + 1] = py[i] * MY;
        FOR(i, n)
            FOR(j, m)
                a[i + 1][j + 1] = s[i][j] - 'a' + 1;
        FOR(i, n + 1)
            FOR(j, m)
                a[i][j + 1] += a[i][j] * MY;
        FOR(i, n)
            FOR(j, m + 1)
                a[i + 1][j] += a[i][j] * MX;
    }
    int hash(int posx, int posy, int dx, int dy) {
        return (a[posx + dx][posy + dy] - a[posx + dx][posy] * py[dy]) -
               (a[posx][posy + dy] - a[posx][posy] * py[dy]) * px[dx];
    }
 
};
 
int main() {
 
    vector<string> vs,vs2;
    int n,m;
    cin>>n>>m;
    string ab;
    string ab1,ab2;
    ab1="_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#";
	ab2="#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_#_";
	for(int i=0;i<16;i++)
	{
		vs2.push_back(ab1);
		vs2.push_back(ab2);
	}
	Hash2 h1(vs2);
    for(int i=0;i<n;i++)
    {
    	cin>>ab;
    	vs.push_back(ab);
    //	cout<<"\ngood\n";
    } 
    Hash2 h2(vs);
    int count=0;
	for(int i=1;i<=n;i++)
	{
	//	cout<<"\nin i\n";
		for(int j=1;j<=m;j++)
		{
		//	cout<<"\nin j \n";
			if(((n-i)>=31)&&((m-j)>=31))
			{
				
				if((h1.hash(0,0,32,32))==(h2.hash(i-1,j-1,32,32)))
				{
				//	cout<<"\ni = "<<i<<" , j = "<<j<<"\n";
					count++;
				}
					
			}
			
		}
	}
	cout<<count<<"\n";
    return 0;
}