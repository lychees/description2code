#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 10;

int a[N], n;

int get_count(int x) {
	int l = 0, h = x - 1;
	long long sum = 0, res = 0;
	for (int i = l; i <= h; i++) {
		sum += a[i];
	}
	if (sum >= 0) {
		res++;
	} 
	while (h < n - 1) {
		sum -= a[l++];
		sum += a[++h];
		if (sum >= 0) {
			res++;
		} 
	}
	return res;
}

int bs_lower_bound(int l, int h, int x) {
	while (l < h) {
		int mid = (l + h) / 2;
		if (x >= get_count(mid)) {
			h = mid;
		} else {
			l = mid + 1;
		}
	}
	return l;
}

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	int len, count;
	int pos = bs_lower_bound(1, n + 1, 0);
	len = pos - 1;
	if (len == 0) {
		printf("-1\n");
	} else {
		count = get_count(len);
		printf("%d %d\n", len, count);
	}
	return 0;
}