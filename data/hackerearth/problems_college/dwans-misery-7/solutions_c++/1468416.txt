#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
int a[300000];
long long int dp[300000];
int n;
long long int ans(int x,int l) {
	if (x >= l)
		return 0;
	if (dp[x] != -1) {
		return dp[x];
	}
	long long int k1 = a[x]+ans(x+2,l);
	long long int k2 = ans(x+1,l);
//	cout << k1 << "\t" << k2 << endl;
	dp[x] = max(k1,max(k2,dp[x]));
	return dp[x];
}
int main()
{
  	int t;
  	scanf("%d",&t);
  	while (t--) {
  		scanf("%d",&n);
  		memset(dp,-1,sizeof(dp));
  		for (int i = 0; i < n; i++) {
  			scanf("%d",&a[i]);
  		}
  		long long int temp1 = ans(0,n-1);
  		memset(dp,-1,sizeof(dp));
  		long long int temp2 = ans(1,n);
  	//	cout << ans(0,n-1) << endl << ans(1,n);
  		printf("%lld\n",max(temp1,temp2));
  	}
 	 return 0;
}
