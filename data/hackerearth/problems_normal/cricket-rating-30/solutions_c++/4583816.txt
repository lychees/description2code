#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>

using namespace std;
#define FOR(i, a, b) for(int i=a; i <= b; ++i)
#define FORD(i, a, b) for(int i=a; i >= b; --i)
#define gc getchar_unlocked
#define ll long long
#define MOD 1000000007

//Divide and Conquer
int maxSumSubarray(int arr[], int n) {
	if (n == 1) {
		return arr[0];
	}
	int m = n >> 1;
	int left_subarray = maxSumSubarray(arr, m);
	int right_subarray = maxSumSubarray(arr + m, n-m);
	int left_sum = INT_MIN, right_sum = INT_MIN, sum = 0;
	for(int i = m; i < n; i++) {
		sum += arr[i];
		right_sum = max(right_sum, sum);
	}
	sum = 0;
	for(int i = m-1; i >= 0; i--) {
		sum += arr[i];
		left_sum = max(left_sum, sum);
	}
	int ans = max(left_subarray, right_subarray);
	return max(ans, left_sum + right_sum);
}

void scanint(int &x) {
	register int c = gc();
	x = 0;
	int neg = 0;
	for(;((c<48 || c>57) && c != '-');c = gc());
	if(c=='-') {neg=1;c=gc();}
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
	if(neg) x=-x;
	
}
int main()
{
    int n;
    scanint(n);
    int *arr = new int[n];
    FOR(i, 0, n-1) {
    	scanint(arr[i]);
    }
    if(n == 0) {
    	printf("%d", n);	
    }
    else {
    	printf("%d", maxSumSubarray(arr, n));	
    }
    return 0;
}
