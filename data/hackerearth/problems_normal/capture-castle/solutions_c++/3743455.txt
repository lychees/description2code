#include<bits/stdc++.h>
using namespace std;
#define mp make_pair
int arr[1001][1001];
int dp[1001][1001];
int t,m,n;

int chk(int x,int y)
{
    if(x>=1&&x<=m&&y>=1&&y<=n)
        return 1;
    return 0;

}
int main()
{

queue<pair<int, int> >q;
cin>>t;
long long int x,y,tm;
while(t--)
{
    int i,j;
  cin>>m>>n;
  for(i=1;i<=m;i++)
  {
      for(j=1;j<=n;j++)
      {
          scanf("%d",&arr[i][j]);
          dp[i][j]=INT_MAX;
      }

  }
  scanf("%lld%lld%lld",&x,&y,&tm);



        q.push(mp(1,1));
       dp[1][1]=arr[1][1];
       pair<int, int> p;
       while(!q.empty())
       {
           p=q.front();
           q.pop();

         if(chk(p.first+1,p.second)==1)
           {
                if(dp[p.first+1][p.second] > dp[p.first][p.second]+arr[p.first+1][p.second])
               {
                   q.push(mp(p.first+1,p.second));
                   dp[p.first+1][p.second] = dp[p.first][p.second]+arr[p.first+1][p.second];

               }

           }
           if(chk(p.first,p.second+1)==1)
           {
               if(dp[p.first][p.second+1] > dp[p.first][p.second]+arr[p.first][p.second+1])
               {
                   q.push(mp(p.first,p.second+1));
                   dp[p.first][p.second+1] = dp[p.first][p.second]+arr[p.first][p.second+1];

               }

           }
           if(chk(p.first-1,p.second)==1)
           {
               if(dp[p.first-1][p.second] > dp[p.first][p.second]+arr[p.first-1][p.second])
               {
                   q.push(mp(p.first-1,p.second));
                   dp[p.first-1][p.second] = dp[p.first][p.second]+arr[p.first-1][p.second];

               }

           }if(chk(p.first,p.second-1)==1)
           {
               if(dp[p.first][p.second-1] > dp[p.first][p.second]+arr[p.first][p.second-1])
               {
                   q.push(mp(p.first,p.second-1));
                   dp[p.first][p.second-1] = dp[p.first][p.second]+arr[p.first][p.second-1];

               }

           }




    }
    if(dp[x][y]<=tm)
    {
        cout<<"YES"<<endl;
        cout<<tm-dp[x][y]<<endl;
    }
    else
        cout<<"NO"<<endl;



}

return 0;
}
