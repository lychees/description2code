#include<bits/stdc++.h>
#define ll long long
using namespace std;
vector<ll> arr[100005];
queue<pair<ll,ll>> q;
ll ans[100005];
ll k;
ll troop[1000][1000];
bool visit[1000][1000];
//ll x,y;
ll bfs(ll x,ll y,ll n,ll m)
{
	ll a,b,c;
	c=0;
	q.push(make_pair(x,y));
	visit[x][y]=true;
	//c++;
	while(!q.empty()){
		a = q.front().first;
		b = q.front().second;
		c++;
		q.pop();
		if(b-1 != -1 && troop[a][b-1]==1 && visit[a][b-1]==false){
			q.push(make_pair(a,b-1));
			visit[a][b-1] = true;
			//cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a<<" "<<b-1<<endl;
			//(*c)++;
		}
		if(a-1 != -1 && troop[a-1][b] == 1 && visit[a-1][b]==false){
			q.push(make_pair(a-1,b));
			visit[a-1][b] = true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a-1<<" "<<b<<endl;
		}
		if(a+1 != n && troop[a+1][b]==1 && visit[a+1][b]==false){
			q.push(make_pair(a+1,b));
			visit[a+1][b]=true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a+1<<" "<<b<<endl;
		}
		if(b+1 != m && troop[a][b+1]==1 && visit[a][b+1]==false){
			q.push(make_pair(a,b+1));
			visit[a][b+1] = true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a<<" "<<b+1<<endl;
		}
		if(a-1 != -1 && b-1 != -1 && troop[a-1][b-1]==1 && visit[a-1][b-1]==false){
			q.push(make_pair(a-1,b-1));
			visit[a-1][b-1] = true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a-1<<" "<<b-1<<endl;
		}
		if(a-1 != -1 && b+1 != m && troop[a-1][b+1]==1 && visit[a-1][b+1]==false){
			q.push(make_pair(a-1,b+1));
			visit[a-1][b+1]=true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a-1<<" "<<b+1<<endl;
		}
		if(a+1 != n && b-1 != -1 && troop[a+1][b-1] == 1 && visit[a+1][b-1] == false){
			q.push(make_pair(a+1,b-1));
			visit[a+1][b-1]=true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a+1<<" "<<b-1<<endl;
		}
		if(a+1 != n && b+1 != m && troop[a+1][b+1]==1 && visit[a+1][b+1]==false){
			q.push(make_pair(a+1,b+1));
			visit[a+1][b+1]=true;
			//	cout<<"a b "<<a<<" "<<b<<endl;
			//cout<<a+1<<" "<<b+1<<endl;
		}
	}
	return c;
}
int main()
{
	ll t,n,m,i,j,x,z;
	cin>>t;
	while(t--){
		//cout<<t<<endl;
		x=0;
		k=0;
		cin>>n>>m;
		for(i=0;i<n;i++){
			for(j=0;j<m;j++){
				cin>>troop[i][j];
			}
		}
		for(i=0;i<1000;i++){
			for(j=0;j<1000;j++){
				visit[i][j]=false;
			}
		}
		for(i=0;i<n;i++){
			for(j=0;j<m;j++){
				if(troop[i][j]==1 && visit[i][j] == false){
					//c=0;
					z = bfs(i,j,n,m);
					ans[x++]=z;
					
				}
			}
		}
		sort(ans,ans+x);
		cout<<x<<" "<<ans[x-1]<<endl;
	}
	return 0;
}