#include<iostream>
#include<algorithm>
#include<vector>

using namespace std;

bool check(vector<int> &input,int n,int mid)
{
//	cout<<"mid: "<<mid<<endl;
	int temp[n];
	for(int i=0;i<n;i++)
	{
		temp[i]=input[i];
	}
	temp[0]=max(temp[0]-mid,1);
	for(int i=1;i<n;i++)
	{
		if(max(temp[i]-mid,1)<=temp[i-1]+1 && temp[i]+mid>=temp[i-1]+1)temp[i]=temp[i-1]+1;
		else if(max(temp[i]-mid,1)>temp[i-1]+1){
			//for(int j=i;j<n;j++)
			//{
			////	if(temp[j]<=temp[j-1]){
			//		return false;
			//		break;
			//	}
			//	break;
			//}
			temp[i]=temp[i]-mid;
		}
		else return false;
	}
	return true;
}
int findd(vector<int> & input,int n,int low,int high)
{
	if(low<=high)
	{
		int mid=(low+high)/2;
		if(check(input,n,mid)==false){
		//	cout<<'a'<<endl;
			return findd(input,n,mid+1,high);
		}
		else if(check(input,n,mid-1)==true)
		{
		//	cout<<'b'<<endl;
			return findd(input,n,1,mid-1);
		}
		else if(check(input,n,mid)==true)
		{
		//	cout<<'c'<<endl;
			return mid;
		}
	}
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		vector<int>  input(n);
		bool chk=true;
		for(int i=0;i<n;i++)
		{
			cin>>input[i];
		}
		for(int i=1;i<n;i++)
		{
			if(input[i]<=input[i-1])
			{
				chk=false;
				break;
			}
		}
		
		if(chk==true)cout<<0<<endl;
		else{
			
			int high=n+*max_element(input.begin(),input.end());
			cout<<findd(input,n,1,high)<<endl;
		}
		
	}
	
	return 0;
}