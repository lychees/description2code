#include <bits/stdc++.h>
#include <assert.h>
#define PB push_back
#define MP make_pair
#define UNDEF -1
#define SZ M00008
#define INF 9000000000LL
#define M 1007
using namespace std;
typedef long long ll;
typedef long double ld;
ll a[M+1], c[M+1], l[M+1],r[M+1], f[M+2][M+2], g[M+2][M+2];
int main() {
	ios_base::sync_with_stdio(false);
	ll n;
	cin >> n;
	for (ll x = 1; x <= n; x++) {
		cin >> a[x];
	}
	for (ll y = 0; y <= M; y++) {
		c[y] = 0;
		l[y] = INF;
		r[y] = -INF;
		f[0][y] = 0;
		g[n+1][y] = 0;
	}
	for (ll x = 1; x <= n; x++) {
		for (ll y = 0; y <= M; y++) {
			f[x][y] = f[x-1][y];
		}
		for (ll y = a[x]; y <= M; y++) {
			f[x][y]++;
		}
	}
	for (ll x = n; x >= 1; x--) {
		for (ll y = 0; y <= M; y++) {
			g[x][y] = g[x+1][y];
		}
		for (ll y = a[x]; y <= M; y++) {
			g[x][y]++;
		}
	}
	for (ll x = 1; x <= n; x++) {
		ll y = a[x];
		c[y]++;
		l[y] = min(l[y], x);
		r[y] = max(r[y], x);
	}
	ll final = 0;
	for (ll lo = 0; lo <= M; lo++) {
		if (c[lo] == 0) continue;
		for (ll hi = lo; hi <= M; hi++) {
			if (c[hi] == 0) continue;
			ll ans = c[lo];
			if (hi != lo) ans += c[hi];
			ll left = min(l[lo],l[hi]);
			ll right = max(r[lo],r[hi]);
			bool p,q; p=false; q=false;
			if (left-1 >= 1 && f[left-1][hi] - f[left-1][lo] > 0) {
				ans++;p=true;
			}
			if (right+1 <= n && g[right+1][hi] - g[right+1][lo] > 0) {
				ans++;q=true;
			}
			//if (ans == 4) {
			//	printf("%d %d %d %d %d %d %d %d %d %d\n", lo, hi, left, right, c[lo], c[hi], p,q,g[right+1][hi],g[right+1][lo-1]);
			//}
			final = max(final, ans);
		}
	}
	cout << final << endl;
}