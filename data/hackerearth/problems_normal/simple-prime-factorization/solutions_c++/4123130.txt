/* NumeriX
   "Hard Work Beats Talent
   When Talent Doesn't Work Hard"
*/
#include <bits/stdc++.h>
#define ll long long int
#define sii(x) scanf("%d",&x)
#define pii(x) printf("%d\n",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld\n",x)
#define present_set_map(container, element) (container.find(element) != container.end()) 
#define present_vec(container, element) (find(all(container),element) != container.end()) 
#define mp make_pair
#define all(x) x.begin(),x.end()
#define all_rev(x) x.rbegin(),x.rend()
#define pb push_back
#define fr first
#define se second
using namespace std;
 
ll arr[1000005];
ll primes[1000005];
ll ctr;

void sieve()
{
    arr[0]=arr[1]=-1;
    ll i,j;
    for(i=2;i<=1000004;i++)
    {
        if(arr[i]==0)
        {
            primes[ctr++]=i;
            for(j=i*i;j<=1000004;j+=i)
                arr[j]=-1;
        }
    }
}
 
int main()
{
    sieve();
    ll tc,n,j,c;
    //freopen("inp.txt","r",stdin);
	//freopen("out.txt","w",stdout);
    sll(tc);
    while(tc--)
    {
        ll temp;
        sll(n);
        if(arr[n]==0)
        {
            printf("2^0\n");
            continue;
        }
        temp=n;
        for(j=0;primes[j]<=temp && j<ctr;j++)
        {
            c=0;
            while(temp%primes[j]==0 && temp>0)
            {
                c++;
                temp/=primes[j];
            }
            if(primes[j]==2)
                printf("2^%lld",c);
            else if(c!=0)
                printf("*%lld^%lld",primes[j],c);
        }
        printf("\n");
    }
}