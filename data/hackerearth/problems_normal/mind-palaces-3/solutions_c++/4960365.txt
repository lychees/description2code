#include<iostream>
using namespace std;
int binary_search(int *, int, int, int, int);
main()
{
    int i,j,row,col,**arr,num,ret;
    int T,*q,row_num,col_num;
    cin>>row>>col;
    arr=new int*[row];
    for(i=0;i<row;i++)
        arr[i]=new int[col];
    for(i=0;i<row;i++)
        for(j=0;j<col;j++)
            cin>>arr[i][j];
    cin>>T;
    q=new int[T];
    for(i=0;i<T;i++)
        cin>>q[i];
    for(i=0;i<T;i++)
    {
        ret=0;
        row_num=0;
        num=q[i];
        if((num<arr[0][0])||(num>arr[row-1][col-1]))
            cout<<"-1"<<" "<<"-1"<<endl;
        else
        {
            while(row_num<row)
            {
             //   cout<<row_num<<endl;
                if(num<=arr[row_num][col-1])
                {
                    ret=binary_search(arr[row_num],row_num,0,col-1,num);
                    if(ret==1)
                        break;
                }
                row_num++;
            }
            if(row_num==row)
                cout<<"-1"<<" "<<"-1"<<endl;
            //cout<<ret<<endl;

        }
    }
}

int binary_search(int *arr,int row_num,int first,int last,int num)
{
   if(first<last)
   {

   int mid=(first+last)/2;
   if(num==arr[mid])
   {
       cout<<row_num<<" "<<mid<<endl;
       return 1;
   }
   else if(num>arr[mid])
   {
       if((last-first)==1)
       {
           if(arr[last]!=num)
            return 0;
           else
           {
               cout<<row_num<<" "<<last<<endl;
               return 1;
           }
       }
       binary_search(arr, row_num, mid, last, num);
   }
   else
    binary_search(arr, row_num, first, mid, num);
   }
   else
    return 0;
}
