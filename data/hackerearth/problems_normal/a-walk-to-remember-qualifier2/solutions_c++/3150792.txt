#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define pii pair<int, int>
using namespace std;          
const int N = int(3e5); 
int n,comp[N],cmp,m,sz[N];
vi g[N],order,rb[N];
bool used[N];
 
void dfs(int v){
	used[v] = 1;
	for(int i=0;i<g[v].size();i++){
		int to = g[v][i];
		if(!used[to]) dfs(to);
	}
	order.pb(v);
}
 
void dfs1(int v){
	used[v] = 1;
	comp[v] = cmp;
	sz[cmp]++;
	for(int i=0;i<rb[v].size();i++){
		int to = rb[v][i];
		if(!used[to]) dfs1(to);
	}
}
 
 
int main () {
	scanf("%d%d",&n,&m);
	for(int i=1,u,v;i<=m;i++){
		scanf("%d%d",&u,&v);
		g[u].pb(v);
		rb[v].pb(u);
	}
	for(int i=1;i<=n;i++) if(!used[i]) dfs(i);
	memset(used,0,sizeof(used));
	reverse(order.begin(),order.end());
	for(int i=0;i<order.size();i++){
		int v = order[i];
		if(!used[v]){
			cmp++;
			dfs1(v);
		}
	}
	for(int i=1;i<=n;i++){
		int v = comp[i];
		if(sz[v] > 1) printf("1 ");
		else printf("0 ");
	}
 
return 0;
}