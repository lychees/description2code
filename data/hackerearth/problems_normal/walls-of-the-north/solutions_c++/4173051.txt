#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())

const int MOD = 1e9+7;

typedef long long ll;
typedef pair<int,int> pii;

const int MAXN = 1e5+5;
int BIT1[MAXN];
// int BIT2[MAXN];
// int BIT3[MAXN];
int BIT4[MAXN];

int rev[MAXN];
int fin[MAXN];
pii ar[MAXN];

int n;
void update1(int idx, int val) {
	while(idx<=n) {
		BIT1[idx]=max(BIT1[idx],val);
		idx+=(idx&-idx);
	}
}
/*void update2(int idx, int val) {
	while(idx<=n) {
		BIT2[idx]=max(BIT2[idx],val);
		idx+=(idx&-idx);
	}
}
void update3(int idx, int val) {
	while(idx<=n) {
		BIT3[idx]=max(BIT3[idx],val);
		idx+=(idx&-idx);
	}
}
*/
void update4(int idx, int val) {
	while(idx<=n) {
		BIT4[idx]=max(BIT4[idx],val);
		idx+=(idx&-idx);
	}
}
int query1(int idx) {
	int ret=0;
	while(idx) {
		ret=max(ret,BIT1[idx]);
		idx-=(idx&-idx);
	}
	return ret;
}
/*
int query2(int idx) {
	int ret=0;
	while(idx) {
		ret=max(ret,BIT2[idx]);
		idx-=(idx&-idx);
	}
	return ret;
}
int query3(int idx) {
	int ret=0;
	while(idx) {
		ret=max(ret,BIT3[idx]);
		idx-=(idx&-idx);
	}
	return ret;
}*/

int query4(int idx) {
	int ret=0;
	while(idx) {
		ret=max(ret,BIT4[idx]);
		idx-=(idx&-idx);
	}
	return ret;
}
int main() {
	// freopen("TASK.in","r",stdin);	
	// freopen("TASK.out","w",stdout);
	int t;
	cin>>t;
	while(t--) {
		scanf("%d",&n);
		for(int i=1;i<=n;i++) {
			scanf("%d",&ar[i].ff);
			ar[i].ss=i;
		}
		ar[0].ff=-2;
		sort(ar+1,ar+1+n);
		int cur=0;
		for(int i=1;i<=n;i++) {
			if(ar[i].ff!=ar[i-1].ff) ++cur;
			fin[ar[i].ss]=cur;
			BIT1[i]=BIT4[i]=0;
		}
		int ans=0;
		for(int i=1;i<=n;i++) rev[i]=cur-fin[i]+1;
		for(int i=1;i<=n;i++) {
			int q=query1(fin[i]);
			ans=max(ans,1+q);
			int temp=1+q;
			q=query4(rev[i]);
			ans=max(ans,1+q);
			//update2(fin[i],temp);
			update4(rev[i],temp);
			//update3(rev[i],1+q);
			update1(fin[i],1+q);
		}
		printf("%d\n",ans);
	}
	return 0;
}