#include<utility>
#include<vector>
#include<iostream>
#include<algorithm>
using namespace std;
vector< pair<long long,pair<long long,long long> > > vec;
int main()
{
    long long int t,a1,b1,c1,a,b,c;

    ios::sync_with_stdio(false);
    cin>>t;
    for(long long int i=0;i<t;i++)
    {
        cin>>a1>>b1>>c1;
        a=min(a1,min(b1,c1));
        c=max(a1,max(b1,c1));
        b=a1+b1+c1-a-c;
        //cout<<a<<' '<<b<<' '<<c<<endl;
        vec.push_back(make_pair(a,make_pair(b,c)));
    }
    sort(vec.begin(),vec.end());
    long long int count = 0;
    if(vec[0]!=vec[1])
        count++;
    for(long long int i=1;i<t-1;i++)
    {
        if(vec[i]!=vec[i+1]&&vec[i]!=vec[i-1])
        {count++;}
        /*cout<<vec[i].first<<' '<<vec[i].second.first<<' '<<vec[i].second.second<<endl;
    cout<<endl;
    cout<<vec[i+1].first<<' '<<vec[i+1].second.first<<' '<<vec[i+1].second.second<<endl;
    cout<<endl;
    cout<<vec[i-1].first<<' '<<vec[i-1].second.first<<' '<<vec[i-1].second.second<<endl;
    cout<<endl;
        if((vec[i].first==vec[i+1].first)&&(vec[i].second.first==vec[i+1].second.first)&&(vec[i].second.second==vec[i+1].second.second))
            continue;
        else if((vec[i].first==vec[i-1].first)&&(vec[i].second.first==vec[i-1].second.first)&&(vec[i].second.second==vec[i-1].second.second))
            continue;
        else
            count++;*/
    }
    if(vec[t-2]!=vec[t-1])
        count++;
    cout<<count<<endl;
}
