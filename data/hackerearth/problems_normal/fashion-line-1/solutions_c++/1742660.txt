#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <iomanip>
#include <cstring>
#include <fstream>
#include <limits.h>
#define mod 1000000007
using namespace std;

struct node {

};



map <char, long long> mp;

vector <long long> A;
string str1, str2;
void process();

int main()
{
    long long t, n, i;
    cin >> t;
    while(t--){
            A.clear();
            mp.clear();
            long long n, k, l, r;
            cin >> n >> k >> l >> r;
            cin >> str1;
            cin >> str2;
            for(i = 0;i < str2.size(); ++i){
                mp[str2[i]] = 1;
            
           }
           long long res = 0;
            process();
            

            vector <long long>::iterator iter = A.begin();

            for(i = 0;i < A.size() - 1; ++i){
                ++iter;
                long long pre = A[i];
                long long a = lower_bound(iter, A.end(), pre + l) - A.begin();
                long long b = upper_bound(iter, A.end(), pre + r) - A.begin();
                res += (b - a);
            }
            cout << res << endl;
    }
    return 0;
}
void process()
{
    long long i;
    A.push_back(0);
    for(i = 0;i < str1.size(); ++i){
        if(mp[str1[i]] == 1){
            A.push_back(A[i] + 1);
        }
        else{
            A.push_back(A[i]);
        }
    }
}