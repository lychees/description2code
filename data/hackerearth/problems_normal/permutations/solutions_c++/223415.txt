#include <iostream>
#include <fstream>
#include <cstdio>
#include <climits>
#include <vector>
#include <map>
#include <list>
#include <deque>
#include <stack>
#include <set>
#include <string>
#include <cstring>
#include <algorithm>
#include <bitset>
#include <cmath>

using namespace std;

#define ll long long
#define vt vector
#define max 103


vector<int>tempint;
char temp[max][max];
vector<vector<int> >adj(max);
int visited[max];
vector<int>cc;
vector<int>values;
void dfs(int u)
{
	visited[u]=1;
	cc.push_back(u);
	for(int j=0;j<adj[u].size();++j)
		if(!visited[adj[u][j]] )
			dfs(adj[u][j]);
}
void solve(int K)
{
	for(int i=0;i<K;++i)
		cout<<tempint[i]<<" ";
	cout<<endl;
}
int main()
{
	int k,n;
	string rows[109];
	scanf("%d",&k);
	for(int i=0;i<k;++i)
	{
		scanf("%d",&n);
		tempint.push_back(n);
	}
	for(int i=0;i<k;++i)
		cin>>rows[i];
	for(int i=0;i<k;++i)
		for(int j=0;j<rows[i].size();++j)
			temp[i][j]=rows[i][j];
	for(int i=0;i<k;++i)
		for(int j=0;j<k;++j)
			if(temp[i][j]=='Y')
				adj[i].push_back(j);  
	for( int i = 0 ; i <k ; ++i )
	{   
		if( !visited[ i ] )
		{ 
			dfs( i ); 
			for(int x=0;x<cc.size();++x)
			{
				values.push_back(tempint[cc[x]]);
			}
			sort(cc.begin(),cc.end());
			sort(values.begin(),values.end());
			for(int x=0;x<cc.size();++x)
			{
				tempint[cc[x]]=values[x];
			}
			cc.clear();
			values.clear();
		}
	}
	solve(k);
	return 0;
}