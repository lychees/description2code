#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <cstring>
using namespace std;
#define mx 100001
#define ll long long
#define e printf("\n");
#define rep(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
void solve();
int main()
{
  int t;
  cin>>t;
  while(t--)
    solve();
  return 0;
}
vector<int> g[mx];
bool vis[mx];
int height[mx];
int in[mx],out[mx];
ll ct;
void dfs(int u,int depth)
{
 // cout<<u<<" ";
  height[u]=depth;
  vis[u]=true;
  in[u]=ct;
  ct++;
  for(int i=0;i<g[u].size();i++)
  {
    int w=g[u][i];
    if(!vis[w])
    {
      dfs(w,depth+1);
    }
  }
  out[u]=ct;
  ct++;
}
void solve()
{
  ct=0;
  int n,i,j,l,p,q,x,y;
  cin>>n;
   rep(i,1,n)
    g[i].clear();
  memset(vis,false,sizeof vis);
  memset(in,0,sizeof in);
  memset(out,0,sizeof out);
  int x1;
  rep(i,1,n)
  {
    cin>>x;
    if(x)
    g[x].push_back(i);
    else
      x1=i;
  } 
  dfs(x1,0);
  cin>>q;
  while(q--)
  {
    cin>>x>>y;
    swap(x,y);
    if(in[x]<in[y] && out[x]>out[y])
      cout<<height[y]-height[x]-1;
    else
      cout<<"-1";
    e
  }
}