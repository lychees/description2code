#include <iostream>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
long long gcd (ll a, ll b){
	if(b>a) return gcd(b,a);
	if(b==0) return a;
	return gcd(b,a%b);
}

inline ll lcm(ll a, ll b){
	return (a*b)/gcd(a,b);
}

unordered_set<ll> primes(ll num){
	unordered_set<ll> factors;
	while(true){
		ll lim=sqrt(num); bool found=false;
		for(int i=2;i<=lim;i++){
			if(num%i==0){
				//cout<<"found "<<i<<endl;
				factors.insert(i);
				num=num/i;
				found=true;
				break;
			}
		}
		if(!found)
			break;
	}
	if(num>1){
			//cout<<"found "<<num<<endl;
			factors.insert(num);
	}
	return factors;
}

bool ifprime(int n){
	if(n==1) return false;
	int lim=sqrt(n);
	for(int i=2;i<=lim;i++){
		if(n%i==0) return false;
	}
	return true;
}

int main()
{
    int tc; cin>>tc;
    while(tc--){
    	ll a,b; cin>>a>>b;
    	ll l=lcm(a,b);
    	//cout<<"lcm is "<<l<<endl;
    	unordered_set<ll> factors = primes(l);
    	//cout<<"no of prime factors is "<<factors.size()<<endl;
    	cout<<(ifprime(factors.size())?"Yes":"No")<<endl;
    }
    return 0;
}
