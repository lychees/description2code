#include <iostream>
using namespace std;

long long int find_gcd (long long int a,long long int b){
    long long int c;
    if ( b == 0 )
        return a;
    else
        while ( b != 0 ){
            c = b;
            b = a % b;
            a = c;
		}
        return a;
}

void input(){
	long long int l=0,p=0,count=0,sum=0;
	long long int **arr=new long long int*[l];
	char* ch=new char[l];
	for(long long int i=0;i<l;i++)
		arr[i]=new long long int[l];
	cin>>l>>p;
	for(long long int i=0;i<l;i++){
		cin>>ch[i];
	}

	for(int i=0;i<=p;i++){
		if(ch[i]=='1')
			count++;
	}
	sum=sum+count+count*(count-1);

	int k=0;
	while(k<(l-p-1)){
		if(ch[k+p+1]=='1'){
			if(ch[k]=='0')
				count+=1;
			sum=sum+1+2*(count-1);
		}
		else if(ch[k+p+1]=='0'){
			if(ch[k]=='1')
				count-=1;
		}
		k++;
	}


	long long int div=find_gcd(sum,l*l);
	if(div==0)
		cout<<sum<<"/"<<l*l<<"\n";
	else
		cout<<sum/div<<"/"<<l*l/div<<"\n";
}


int main()
{
	long long int tc;
	cin>>tc;
	for(long long int i=0;i<tc;i++){
		input();
	}
    return 0;
}
