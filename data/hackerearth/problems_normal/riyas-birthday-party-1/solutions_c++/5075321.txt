#include<bits/stdc++.h>
using namespace std;

typedef long long int64;
typedef vector<int64> vi;
typedef string ST;
typedef stringstream SS;
typedef vector< vector<int64> > vvi;
typedef pair<int64,int64> ii;
typedef vector<string> vs;
typedef vi::iterator iter;

#define mp make_pair
#define St string
#define	Sf scanf
#define	Pf printf
#define S second
#define F first
#define pb push_back
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define iterV(c, it) for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define iterS(c, it) for (set<int64>::iterator it = (c).begin(); it != (c).end(); it++)
#define iterM(c, it) for (map <int64, int64>::iterator it = (c).begin(); it != (c).end(); it++)
#define	present(x, c) ((c).find(x) != (c).end()) //map & set//
#define	cpresent(x, c) (find( (c).begin(), (c).end(), x) != (c).end()) //vector & list//

#define pran(i, n) for(long long int i = 0; i<n; i++)
#define pranab(i, a, b) for(long long int i = a; i<=b; i++)
#define pran_rev(i, n) for(long long int i = n-1; i>=0; i--)
#define pranab_rev(i, a, b) for(long long int i = b; i>=a; i--)
#define PI 3.14159265
#define MOD 1000000007

vvi ans;
#define gc getchar_unlocked

#define mem(A,val) memset(A,val,sizeof(A))
#define all(c) (c).begin(),(c).end()

// to sort in decending order .....
//sort(all(v),greater<int64>());


// for transversing backward in vector use rbegin() and rend(); IMP...
#define sq(x) ((x)*(x))

/* this function calculates (a*b)%c taking into account that a*b might overflow */
long long mulmod(long long a,long long b,long long c){
    long long x = 0,y=a%c;
    while(b > 0){
        if(b%2 == 1){
            x = (x+y)%c;
        }
        y = (y*2)%c;
        b /= 2;
    }
    return x%c;
}


/* This function calculates (ab)%c */
int64 modulo(int64 a,int64 b,int64 c){
    long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
           x= mulmod(x,y,c); 
        }
        y = mulmod(y,y,c); 
        b /= 2;
    }
    return x%c;
}


int main() {
ios_base::sync_with_stdio(0);

int64 t;
cin>>t;
while(t--)
{
	int64 n,ans = 1;
	cin>>n;
	
	if(n==1){
		ans  = 1;
	}
	else if(n==2){
		ans = 6;
	}
	else{
		ans = mulmod(n-1,6,MOD)-mulmod(n-2,1,MOD)+mulmod(mulmod(2,n-2,MOD),n-1,MOD);
	}
	
	cout<<(ans+MOD)%MOD<<"\n";
}

	return 0;
}