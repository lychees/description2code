#include <bits/stdc++.h>
#define inf 999999999999999999
using namespace std;

int main()
{
	unsigned long long n,m,s,k[100005];
	cin >> n >> m >> s;
	for(unsigned long long i=1;i<=n;i++)
	{
		cin >> k[i];
	}
	vector<pair<unsigned long long, unsigned long long> >v[100005];
	for(unsigned long long i=0;i<m;i++){
		unsigned long long x,y,z;
		cin >> x >> y >> z;
		v[x].push_back(make_pair(y,z));
		v[y].push_back(make_pair(x,z));
	}
	unsigned long long dist[100005];
	for(unsigned long long i=1;i<=n;i++) dist[i] = inf;
	dist[s] = 0;
	set<pair<unsigned long long, unsigned long long> >Q;
	Q.insert(make_pair(dist[s], s));
	while(Q.size() > 0) {
		unsigned long long now = (*(Q.begin())).first;
		unsigned long long node = (*(Q.begin())).second;
		Q.erase(Q.begin());
		
		for(unsigned long long i=0;i<v[node].size();i++)
		{
			unsigned long long to = v[node][i].first;
			unsigned long long cost = v[node][i].second;
			//cout << node << " -- " << to << endl;
			if(now + cost < dist[to])
			{
				if(Q.find(make_pair(dist[to], to)) != Q.end())
				{
					Q.erase(Q.find(make_pair(dist[to], to)));
				}
				dist[to] = now + cost;
				Q.insert(make_pair(dist[to], to));
				//cout << node << " " << to << " " << dist[to] << " ---\n";
			}
			
		}
	}
	unsigned long long total = 0, totalppl = 0;
	unsigned long long cc[100005];
	for(unsigned long long i=1;i<=n;i++)
	{
		if(dist[i] == inf) {
			k[i] = -1;
			continue;
		}
		cc[i] = k[i] * dist[i];
		total += cc[i];
		totalppl += k[i];
	}
	for(unsigned long long i=1;i<=n;i++)
	{
		if(k[i] == -1) {
			cout << "0 ";
		}
		else {
			cout << dist[i] * (totalppl - k[i]) + total - cc[i] << " ";
		}
	}
    return 0;
}
