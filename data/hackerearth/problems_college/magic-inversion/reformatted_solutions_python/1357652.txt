from sys import stdin
import bisect


def prime_sieve(n=10000000):
    sieve = [True] * n
    for i in xrange(3, int(n ** 0.5)+1, 2):
        if sieve[i]:
            sieve[i*i::2*i] = [False]*((n-i*i-1)/(2*i)+1)
    return [2] + [i for i in xrange(3, n, 2) if sieve[i]]


def count_inversion(list1, list2):
    list2.sort()
    count = 0
    for i in xrange(0, len(list1)):
        index = bisect.bisect_left(list2, list1[i])
        count += ((index-i)-1)
    return count


def main():
    primes = prime_sieve()
    length = stdin.readline()
    A = map(int, stdin.readline().split())
    B = map(int, stdin.readline().split())
    print 'MAGIC INVERSION' if count_inversion(A, B) in primes else 'SIMPLE INVERSION'


if __name__ == '__main__':
    main()
