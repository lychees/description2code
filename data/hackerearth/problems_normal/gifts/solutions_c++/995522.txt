#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v; ll w; };

ll MOD = 1000000007;
ll _MOD = 1000000009;
double EPS = 1e-10;

struct bit {
	vector<ll> v;
	bit(int n) : v(n + 1) {}
	ll sum(int i) {
		ll res = 0;
		for (; i > 0; i -= i & -i) res += v[i];
		return res;
	}
	void add(int i, ll x) {
		for (i++; i < v.size(); i += i & -i) v[i] += x;
	}
	int lower_bound(ll x) {
		if (x <= 0) return 0;
		int res = 0;
		for (int i = 1 << 24; i > 0; i >>= 1)
			if (res + i < v.size() && v[res + i] < x) {
				res += i; x -= v[res];
			}
		return res + 1;
	}
};

int hoge(string s, char c) {
	for (int i = 0; i < 5; i++)
		if (s[i] == c) return i;
}

int main() {
	int n; cin >> n;
	vector< vector<int> > a(5, vector<int>(n));
	for (int i = 0; i < 5; i++)
		for (int j = 0; j < n; j++)
			scanf("%d", &a[i][j]);
	string s; cin >> s;
	vector< vector<bit> > b(5, vector<bit>(5, bit(n)));
	for (int j = 0; j < n; j++)
		for (int k = 0; k < 5; k++)
			if (s[j] - 'A' == k)
				for (int i = 0; i < 5; i++)
					b[k][i].add(j, a[i][j]);
	int q; cin >> q;
	string t = "ABCDE";
	while (q--) {
		char c[3]; scanf("%s", c);
		if (c[1] == 'e') {
			char c[2], _c[2]; scanf("%s%s", c, _c);
			int i = hoge(t, c[0]), _i = hoge(t, _c[0]);
			swap(t[i], t[_i]);
		}
		else if (c[1] == 'c') {
			int j; char c[2]; scanf("%d%s", &j, c); j--;
			int k = s[j] - 'A', _k = c[0] - 'A';
			for (int i = 0; i < 5; i++) {
				ll x = b[k][i].sum(j + 1) - b[k][i].sum(j);
				b[k][i].add(j, -x);
			}
			for (int i = 0; i < 5; i++)
				b[_k][i].add(j, a[i][j]);
			s[j] = c[0];
		}
		else if (c[1] == 's') {
			int x, y; scanf("%d%d", &x, &y);
			ll sum = 0;
			for (int k = 0; k < 5; k++) {
				int i = hoge(t, 'A' + k);
				sum += b[k][i].sum(y) - b[k][i].sum(x - 1);
			}
			printf("%lld\n", sum);
		}
	}
}