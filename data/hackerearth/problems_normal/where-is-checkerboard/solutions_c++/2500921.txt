#include <bits/stdc++.h> 

using namespace std;
 
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(x) (int)((x).size()) 
#define forn(i,n) for (int i = 0; (i) < (n); ++i)
#define fornr(i,n) for (int i = (n) - 1; (i) >= 0; --i)
#define forab(i,a,b) for (int i = (a); (i) < (b); ++i)
#define forba(i,a,b) for (int i = (b) - 1; (i) >= (a); --i)
#define forit(it,c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)
#define all(c) (c).begin(),(c).end() 

#ifdef LOCAL
    #define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
    #define eprintf(...) static_cast<void>(0)   
#endif

#ifdef _WIN32
    #define I64 "%I64d"
#else
    #define I64 "%lld"
#endif

typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef unsigned int uint;
typedef vector <int> vi;
typedef pair <int, int> pii;

#define FNAME ""

const int MAXN = 2005;

char s[MAXN][MAXN];
int down[MAXN][MAXN], righ[MAXN][MAXN], sq[MAXN][MAXN];

int main() 
{
#ifdef LOCAL    
    freopen(FNAME".in", "r", stdin);
    freopen(FNAME".out", "w", stdout); 
#endif    
    int n, m;
    scanf("%d%d\n", &n, &m);    
    forn (i, n)
        gets(s[i]);
    int ans = 0;
    fornr (i, n)
        fornr (j, m)
        {
            if (i == n - 1 || s[i][j] == s[i + 1][j])
                down[i][j] = 1;
            else
                down[i][j] = down[i + 1][j] + 1;
            if (j == m - 1 || s[i][j] == s[i][j + 1])
                righ[i][j] = 1;
            else
                righ[i][j] = righ[i][j + 1] + 1;
            sq[i][j] = 1;
            if (i != n - 1 && j != m - 1 && s[i + 1][j + 1] == s[i][j])
                sq[i][j] = min(min(down[i][j], righ[i][j]), sq[i + 1][j + 1] + 1);
            if (sq[i][j] >= 32 && s[i][j] == '_')
                ans++;
        }
    printf("%d\n", ans);         
    return 0;
}