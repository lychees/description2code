#include<bits/stdc++.h>
using namespace std;

struct Suff
{
    int x;
    int y;
    int index;
}suffix[2000005];

int cmp(struct Suff A,struct Suff B)
{
    return (A.x==B.x)?(A.y<B.y?1:0):(A.x<B.x?1:0);
}

int* build_suffix(string str, int n)
{
    int i,k;

    for(i=0;i<n;i++)
    {
        suffix[i].index=i;
        suffix[i].x=str[i]-'a';
        suffix[i].y= (i+1<n)?(str[i+1]-'a'):-1;
    }

    sort(suffix,suffix+n,cmp);

int *ind=(int *)malloc(sizeof(int)*n);
    for(k=4;k<2*n;k=k*2)
    {

        int rank=0;
      int prev_rank=suffix[0].x;
      suffix[0].x=rank;
       ind[suffix[0].index]=0;

    for(i=1;i<n;i++)
      {
          if(prev_rank==suffix[i].x && suffix[i].y==suffix[i-1].y)
          {
              suffix[i].x=rank;
          }
          else
          {
              prev_rank=suffix[i].x;
              ++rank;
              suffix[i].x=rank;
          }

          ind[suffix[i].index]=i;
      }

      for(i=0;i<n;i++)
      {
          int nxt= suffix[i].index+k/2;
          suffix[i].y=(nxt<n)?suffix[ind[nxt]].x:-1;
      }

      sort(suffix,suffix+n,cmp);
    }

   return ind;

}
int main()
{
   // freopen("inp.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int n,i;

    cin>>n;
    // cout<<n<<endl;
    string str;
    cin>>str;
    str=str+str;
    int *arr;
    arr=build_suffix(str,n*2);


    int ans[2*n];
    int mini=arr[0];
    int ind=0;

    for(i=0;i<n;i++)
    {
        if(arr[i]<mini)
        {
            mini=arr[i];
            ind=i;
        }
      ans[i]=ind;

    }
    int q;
    cin>>q;
    while(q--)
    {
        int a;
        cin>>a;
        cout<<ans[a]<<endl;
    }
 return 0;
}
