#include <bits/stdc++.h>

using namespace std;

int mat[1000][1000],visited[1000][1000];

void DFS (int r, int c, int n)
{
	int row[]={0,1},column[]={1,0},i;
	
	visited[r][c]=1;
	
	for (i=0;i<2;++i)
		if (visited[r+row[i]][c+column[i]]==0 && mat[r+row[i]][c+column[i]]==1 && (r+row[i])<n && (c+column[i])<n)
			DFS (r+row[i], c+column[i], n);
}

int main()
{
    int t,n,m,i,j,k;
    scanf ("%d",&t);
    while (t--)
    {
    	scanf ("%d",&n);
    	
    	for (i=0;i<n;++i)
    		for (j=0;j<n;++j)
    		{
    			scanf ("%d",&mat[i][j]);
    			visited[i][j]=0;
    		}
    		
    	DFS (0,0,n);
    	
    	if (visited[n-1][n-1]==1)
    		puts ("POSSIBLE");
    	else
    		puts ("NOT POSSIBLE");
    }
    
    return 0;
}
