#include<bits/stdc++.h>
#define MAX_SIZE 1000001
using namespace std;
int dp[MAX_SIZE];
int isPandatic(long long n);
long long big_power(long long n,long long p);
int main()
{
    long long t;
    std::ios::sync_with_stdio(false);
    cin>>t;
    memset(dp,-1,sizeof(dp));
    long long i,j;
    i=1;
    while(i<8)
    {
        long long tmp=big_power(i,i);
        dp[tmp]=1;
        i++;
    }
    isPandatic(MAX_SIZE-1);
    while(t--)
    {
        long long n;
        cin>>n;
        long long tmp=n;
        int flag=0;
        if(isPandatic(n))
        {
            flag=1;
        }
        if(flag==1)
            cout<<"Yes\n";
        else
            cout<<"No\n";
    }
}
int isPandatic(long long n)
{
    long long tmp=n;
    if(n<=0)
        return 0;
    if(dp[n]!=-1)
        return dp[n];
    while(tmp>0)
    {
        int digit=tmp%10;
        if(digit>0&&isPandatic(n-digit*digit))
        {
            dp[n]=1;
            return 1;
        }
        tmp/=10;
    }
    dp[n]=0;
    return 0;
}
long long big_power(long long n,long long p)
{
    long long tmp;
    if(p==0)
        return 1;
    tmp=big_power(n,p/2);
    tmp=(tmp*tmp);
    if(p%2!=0)
        return (tmp*n);
    else
        return tmp;
}
