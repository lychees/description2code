#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
const int MOD = 1000000007;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define foru(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define ford(i, a, b) for (int i = (a); i >= (b); --i)
#define sz(a) ((int) a.size())
#define pb(a) push_back(a)
#define mp(a, b) make_pair(a, b)
#define mem(a) memset(a, 0, sizeof(a))

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void add_max(T &a, T b) {if (b > a) a = b;}
template<class T> inline void add_min(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {if (b == 0) return a; return gcd(b, a % b);}

typedef vector<vector<ll> > M;

M mul(M x, M y) {
    M ans(3, vector<ll>(3, 0));
    repu(i, 0, 3) {
        repu(j, 0, 3) {
            repu(k, 0, 3) ans[i][j] = (ans[i][j] + x[i][k] * y[k][j]) % MOD;
        }
    }
    return ans;
}

M expn(M x, ll y) {
    if (y == 1) return x;
    M ans = expn(x, y / 2);
    ans = mul(ans, ans);
    if (y % 2) ans = mul(ans, x);
    return ans;
}

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    int ntest;
    ll n;
    cin >> ntest;
    M base(3, vector<ll>(3, 0));
    base[0][0] = 1;
    base[0][1] = 2;
    base[0][2] = 4;
    base[1][1] = 2;
    base[1][2] = 4;
    base[2][1] = 1;
    while (ntest--) {
        cin >> n;
        if (n == 1) {
            printf("2\n"); continue;
        }
        if (n == 2) {
            printf("14\n"); continue;
        }
        M ans = expn(base, n - 2);
        ll res = (ans[0][0] * 14 + ans[0][1] * 12) % MOD;
        res = (res + ans[0][2] * 2) % MOD;
        printf("%lld\n", res);
    }
    return 0;
}
