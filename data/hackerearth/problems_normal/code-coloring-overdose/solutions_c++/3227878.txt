#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
const int MOD=1000000007;
int main() {
    ios_base::sync_with_stdio ( false );
    int n,k,m;
    cin>>n>>k>>m;
    vi cOcc ( k );
    rep ( i,n ) {
        int c;
        cin>>c;
        c--;
        cOcc[c]++;

    }
    vi dp ( m+1 );
    dp[0]=1;
    vi twoPows ( n+1 );
    twoPows[0]=1;
    rep ( i,n ) {
        twoPows[i+1]= ( 2*twoPows[i] ) %MOD;

    }
    rep ( i,k ) {
//         cout<<dp;
        ll mu=twoPows[cOcc[i]]-1;
        if ( mu==0 ) continue;
        vi dpNew ( m+1 );
        dpNew[0]=dp[0];
        rep ( j,m ) {
            dpNew[j+1]= ( dp[j+1]+dp[j]*mu ) %MOD;
        }
        
        swap ( dp,dpNew );
    }
    ll su=0;
    rep ( i,m+1 ) su+=dp[i];
    su%=MOD;
    cout<<su<<endl;

}
