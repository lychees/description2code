#include<bits/stdc++.h>
 
#define pb push_back
#define len(n) strlen(n)
#define mp make_pair
#define forp(i,a,b) for(i=a;i<=b;i++)
#define rep(i,n)    for(i=0;i<n;i++)
#define ren(i,n)    for(i=n-1;i>=0;i--)
#define forn(i,a,b) for(long i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>  
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define gli(m,n) cin >> m >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define onn printf("\n")
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define gs printf(" ")
#define on cout<<"\n"
#define gn printf("\n")
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define alll(n,i,j) n.begin()+i,n.begin()+j
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define boost ios_base::sync_with_stdio(false)
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define ret return 0
#define mem(n) memset(n,0,sizeof(n))
#define lub lower_bound
#define glb upper_bound
#define M 1000000007
#define mod 100000007
#define SIZE 10000000
using namespace std;
 
typedef unsigned long long int ull;
typedef long long int ll;
typedef long int lg;
typedef vector<vector<ll> > mat;
ll bin_pow(ll a,ll n) {
  ll res = 1;
  while(n){
  	if(n&1) res = (res*a)%M;
  	a = (a*a)%M;
    n >>= 1;
  }
 return res;
}
bool prime[10000010];
vll prm;
set<ll> gap;

void seive() {
 ll i,j;
 prime[0] = prime[1] = 1;
 forp(i,1,SIZE/2) prime[2*i] = 1;
 for(i=3;i*i<=SIZE;i+=2) {
 	if(!prime[i]){
 	  for(j=i*i;j<=SIZE;j += 2*i) prime[j] = 1;
 	}
 }
rep(i,SIZE/2+1) if(!prime[2*i+1]) prm.pb(2*i+1);
}

int main()
{
 boost;
 ll n,i,j,t,a[500]={0},mx=0;
 bool f;
 seive();
 rep(i,prm.size()-1) a[prm[i+1] - prm[i]] = 1,mx = max(mx,prm[i+1]-prm[i]); 
 gl(t);
 while(t--) {
  f = 0;
  gl(n);
  	if(n<=2*mx)
  	{rep(i,min(n,mx+1)) if(a[n-i]&&a[i]) {
  	f = 1; 
  	break; 
  	}
  	}
  if(f) ol("YES"),on;
  else  ol("NO"),on;
  }
 ret;
}