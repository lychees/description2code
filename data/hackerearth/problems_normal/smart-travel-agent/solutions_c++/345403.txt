#include <iostream>
#include<queue>
#include<bits/stdc++.h>
using namespace std;
int adj[101][101];
int parent[101];
int capacity[101];
int status[101];
int main() {
    // your code goes here
    for(int i=0;i<=100;i++)
    {
        for(int j=0;j<=100;j++)
        {adj[i][j]=100000;}
    }
    int n,r,u,v,s,d,t,cost,curr,temp;
    cin>>n>>r;
    for(int i=0;i<r;i++)
    {
        cin>>u>>v>>cost;
        adj[u][v]=cost;
        adj[v][u]=cost;
    }
    cin>>s>>d>>t;
    capacity[s]=100000;
    while(1)
    {
    int flag=0;
    int maxo=-1;
    int curr=-1;
        for(int j=1;j<=n;j++)
        {
            if(capacity[j]>maxo&&status[j]==0)
            {
            	maxo=capacity[j];
            	curr=j;
            	flag=1;
            }
        }
        if(flag==0)
        {break;}
       status[curr]=1;
       for(int j=1;j<=n;j++)
       {
       		if(adj[curr][j]!=100000&&status[j]==0)
       		{
       			temp=min(capacity[curr],adj[curr][j]);
       			capacity[j]=max(capacity[j],temp);
       			if(capacity[j]==temp)
       			{
       				parent[j]=curr;
       			}
       		}
       
       }
    }
    int path[100];
    int pathsize=0;
    v=d;
    while(v!=s)
    {
    	path[pathsize]=v;
    	pathsize++;
    	v=parent[v];
    }
    path[pathsize]=s;
    for(int i=0;i<=pathsize;i++)
    {
    	cout<<path[pathsize-i]<<" ";
    }
    cout<<endl;
    //cout<<capacity[d]<<endl;
    cout<<ceil((double)t/(capacity[d]-1))<<endl;
    return 0;
}