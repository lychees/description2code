#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <climits>
#include <ctime>
#include <cassert>
#include <cctype>
#include <algorithm>
#include <numeric>
#include <map>
#include <set>
#include <queue>
#include <string>
#include <vector>
#include <bitset>

#define X first
#define Y second
#define pb push_back
#define bit(x) (1 << (x))
#define bnum(x) (__builtin_popcount(x))
#define sqr(x) ((x) * (x))
#define sz(x) ((int)(x.size()))
#define PQ priority_queue

#if _WIN32 || __WIN32__
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

using namespace std;
typedef long long LL;
typedef pair<int, int> pii;
typedef vector<int> vi;
template <class T> inline void chkmin(T &a, T b) {
	if (b < a) a = b;
}
template <class T> inline void chkmax(T &a, T b) {
	if (a < b) a = b;
}

#define MX 100005
char s[MX][105];
int len[MX];

int main() {
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	int n, K, i, j;
	LL sum;
	
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		scanf("%s", s[i]);
		len[i] = strlen(s[i]);
	}
	scanf(LLD, &sum);
	
	for (K = 2; K <= 16; K++) {
		LL tot = 0;
		for (i = 0; i < n; i++) {
			LL inc = 1;
			for (j = len[i] - 1; j >= 0; j--) {
				if (isdigit(s[i][j])) {
					if (s[i][j] - '0' >= K) break;
					tot += inc * (s[i][j] - '0');
				} else {
					if (s[i][j] - 'A' + 10 >= K) break;
					tot += inc * (s[i][j] - 'A' + 10);
				}
				inc *= K;
			}
			if (j >= 0) break; 
		}
		if (i < n) continue;
		if (tot == sum) break;
	}
	
	cout << K << endl;
	return 0;
}
