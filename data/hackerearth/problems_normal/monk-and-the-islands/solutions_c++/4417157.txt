#include <iostream>
#include <vector>
#include <queue>
#include <utility>

using namespace std;

int main()
{
	int t;
	cin >> t;
	
	while (t--) {
		int n, m;
		cin >> n >> m;
		vector<int> graph[n + 1];
		int i = 0;
		
		while (i < m) {
			int x, y;
			cin >> x >> y;
			graph[x].push_back(y);
			graph[y].push_back(x);
			i++;
		}
		
		vector<int> dist(n + 1, -1);
		queue<int> q;
		
		q.push(1);
		dist[1] = 0;
		while (!q.empty())  {
			int curr = q.front();
			q.pop();
			
			vector<int>::iterator it;
			for (it = graph[curr].begin(); it != graph[curr].end(); it++) {
				if (dist[*it] == -1) {
					dist[*it] = dist[curr] + 1;
					q.push(*it);
				}
			}
		}
		
		cout << dist[n] << endl;
	}
	
	return 0;
}