
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef pair<double, double> PDD;
typedef map<int, int> MI;
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<vector<int> > VVI;
typedef vector<vector<LL> > VVL;
const double pi=acos(-1.0);
const double eps=1e-11;
const int mod = 1e9 + 7;
const int oo = (1 << 31) - 1;

#define two(X) (1<<(X))
#define twoL(X) ((1LL)<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

#define rep(i, n) rb(i, 0, n)
#define rb(i, b, n) rbc(i, b, n, <)
#define rbe(i, b, n) rbc(i, b, n, <=)
#define rbc(i, b, n, c) for(int i = ((int)(b)); i c ((int)(n)); i++)

#define p(x) cout << x;
#define ps(x) cout << x << " "
#define pl cout << endl
#define pn(x) cout << x << endl

#define s(v) ((int) v.size())
#define all(v) v.begin(), v.end()
#define MP make_pair
#define PB push_back
#define X first
#define Y second
#define getcx getchar
//_unlocked

template<class T>
inline void readInt( T &n )//fast input function
{
   n=0;
   T ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}

   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   n=n*sign;
}
/**************************************************/

const int maxn = 300005;

int fact[101][100000], L[101], prime[101];

bool isPrime(int n) {
    if(n < 2) return false;
    if(n == 2) return true;
    if(n % 2 == 0) return false;
    int m = (int) sqrt(n + .0) + 1;
    for(int i = 3;i < m;i += 2)
        if(n % i == 0) return false;
    return true;
}

int main() {

    //freopen("test.in","r",stdin);
    //freopen("test.out","w",stdout);

    rep(i, 101) prime[i] = isPrime(i);

    rep(i, 101) rep(j, 100000) fact[i][j] = 0;
    fact[0][0] = 1; L[0] = 1;

    rb(i, 1, 101) {
        L[i] = L[i - 1];
        rep(j, L[i - 1]) fact[i][j] = fact[i - 1][j];

        rb(j, 1, i) {
            int d, c = 0;
            rep(k, L[i]) {
                d = c + fact[i][k];
                if(k < L[i - 1]) d += fact[i - 1][k];
                c = d / 10;
                d %= 10;
                fact[i][k] = d;
            }
            if(c) fact[i][L[i]] = c, L[i]++;
        }
    }

    int n;

    cin >> n;

    rbe(i, 1, n) if(prime[i]) {
        for(int j = L[i] - 1;j >= 0;--j) {
            printf("%d", fact[i][j]);
            if(j == 0) printf("\n");
        }
    }

    return 0;
}

