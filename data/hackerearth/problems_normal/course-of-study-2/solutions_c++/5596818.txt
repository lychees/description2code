#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int MAXN = 1e5 + 10;
const LL MOD = 1e9 + 7;

vector<int> v[MAXN];
LL fac[MAXN];
LL power(LL a, LL b){
	LL ans = 1;
	while(b > 0){
		if(b&1) {
			ans = (ans * a) %  MOD;
		}
		a = (a * a) % MOD;
		b >>= 1;
	}
	return ans;
}
int main(){
	fac[0] = 1;
	for(int i = 1;i < MAXN;++i){
		fac[i] = (fac[i - 1] * i) % MOD;
	}
	int n;
	cin >> n;
	int cnt = 0;
	for(int i = 1;i <= n;++i){
		int m;
		cin >> m;
		for(int j = 1;j <= m;++j){
			int x;
			cin >> x;
			v[i].push_back(x);
			++cnt;
		}
	}
	LL ans = 1;
	for(int i = 1;i <= n;++i){
		int m = v[i].size();
		ans = (ans * fac[cnt]) % MOD;
		ans = (ans * power(fac[cnt - m], MOD - 2)) % MOD;
		ans = (ans * power(fac[m], MOD - 2)) % MOD;
		cnt -= m;
		map<int, int> mp;
		for(int j = 0;j < m;++j){
			int next = v[i][j];
			mp[next] += 1;
		}
		for(auto it : mp){
			ans *= fac[it.second];
			ans %= MOD;
		}
	}
	cout << ans << "\n";
    return 0;
}
