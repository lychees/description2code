//                                                                                                          saan_nitd
//                                                                                                           NIT-DGP                                                                                //NIT-DGP
//                                                                                                         IT(2014-2018)


#include<bits/stdc++.h>
#define loop(i,n) for(i=0;i<n;i++)
#define loop1(i,n) for(i=1;i<=n;i++)
#define loop3(i,n,k) for(i=n;i<=k;i++)
#define loopr(i,n,k) for(i=n;i>=k;i--)
using namespace std;
                     /* I want to find maximum and minimum Simultinously
                       in this algorithm we need only (3n-1)/2 for n odd
                       and 3n/2-2 for n even comparision will be needed */
int max(int a,int b)
{
           return (a>b?a:b);
}
struct s
{
    long long int  a;
   long long int   b;
};
struct s ar[2000008];
bool my(struct s ls,struct s lh)
 {
   if(ls.a==lh.a){
   	return ls.b>lh.b;
   }else return ls.a<lh.a;
 }
int main()
{
           std::ios::sync_with_stdio(false);
            long long int x,y,n,i;
            scanf("%d",&n);
           // max1=0;
            for( i=0;i<n;i++)
              {
                scanf("%d%d",&x,&y);
                 ar[i].a=x;
                 ar[i].b=y;
              }
              sort(ar,ar+n,my);
              for( i=0;i<n;i++)
               printf("%d %d\n",ar[i].a,ar[i].b);
            return 0;
}
