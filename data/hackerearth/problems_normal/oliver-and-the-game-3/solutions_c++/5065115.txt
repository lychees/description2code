#include <bits/stdc++.h>
using namespace std;
#define dbg(x) { cout<<#x<<" : "<<x<<endl; }
int timer;

void dfs(int i,vector<int> adj[],bool visited[],int timein[],int timeout[],int n)
{
	visited[i]=true;
	timein[i]=++timer;
	vector<int>::iterator it;
	for( it=adj[i].begin(); it!=adj[i].end(); it++ ) {
		if( visited[*it]==false ) 
			dfs(*it,adj,visited,timein,timeout,n);
	}
	timeout[i]=++timer;
}
int main()
{
	ios::sync_with_stdio(false);
	int n,a,b,c,q,x,y;
	cin>>n;
	vector<int> adj[n+1];
	bool visited[n+1];
	int timein[n+1];
	int timeout[n+1];
    timer=0;
    visited[n]=false;
    timein[n]=0;
    timeout[n]=0;
    for(int i=1;i<n;i++) {
    	cin>>a>>b;
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    	visited[i]=false;
    	timein[i]=0;
    	timeout[i]=0;
    }
    dfs(1,adj,visited,timein,timeout,n);
    cin>>q;
  //  dbg(q);
    while(q--) {
    	cin>>c>>x>>y;
    	if(c==1) {
    		if( timein[y]<timein[x] && timeout[y]>timeout[x] )
    			cout<<"YES"<<endl;
    		else
    			cout<<"NO"<<endl;
    	}
    	else {
    		if( timein[x]<timein[y] && timeout[x]>timeout[y] )
    			cout<<"YES"<<endl;
    		else
    			cout<<"NO"<<endl;
    	}
    		
    }
    return 0;
}
