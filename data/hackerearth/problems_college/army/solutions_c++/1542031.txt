#include <bits/stdc++.h>
using namespace std ;
#define LL long long int
#define ft first
#define sd second
#define PII pair<int,int>
#define MAXN 10
#define MAXM 111111
#define mp make_pair
#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)
#define sc(x) scanf("%d",&x)
#define scll(x) scanf("%lld",&x)
#define pr(x) printf("%lld\n",x)
#define all(x) x.begin(),x.end()
#define pb push_back
#define MOD 1000000007

int N,Q,M,DP[(1 << MAXN)],A[MAXM],ans;
vector<int> C ;

int get_mask(int x){
    int num = 0 ;
    while(x){
        num |= (1 << (x%10)) ;
        x /= 10 ;
    }
    return num ;
}

void solve1(int lev = 0 ,int mask = 0){

    if(lev == MAXN){
        if(mask){
            for(int i=1;i<=N;i++){
                if((A[i]&mask) == mask){
                    DP[mask] ++ ;
                }
            }
        }
        return ;
    }
    solve1(lev+1,mask) ;
    solve1(lev+1,mask|(1 << (lev))) ;
}

void solve2(int lev = 0,int mask = 0,int cnt = 0){
    if(lev == M){
        int val = DP[mask] ;
        if(cnt%2)
            ans += val ;
        else
            ans -= val ;
        return ;
    }
    solve2(lev+1,(mask|(1 << C[lev])),cnt+1) ;
    solve2(lev+1,mask,cnt) ;
}

int main(){

    sc(N) ;
    for(int i=1;i<=N;i++){
        A[i] = get_mask(i) ;
    }
    sc(Q) ;
    solve1() ;
    while(Q--){
        cin >> M ;
        C.resize(M) ;
        for(int i=0;i<M;i++) cin >> C[i] ;
        ans = 0 ;
        solve2();
        cout << ans << endl ;
        C.clear() ;
    }
    return 0 ;
}
