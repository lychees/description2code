#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <deque>
#include <queue>
#include <cstring>
#include <set>
#include <list>
#include <map>
#include <unordered_map>
#include <stdio.h>

using namespace std;

typedef long long ll;
typedef std::vector<int> vi;
typedef std::vector<bool> vb;
typedef std::vector<string> vs;
typedef std::vector<double> vd;
typedef std::vector<long long> vll;
typedef std::vector<std::vector<int> > vvi;
typedef std::vector<std::vector<bool> > vvb;
typedef std::vector<std::pair<int, int> > vpi;
typedef std::pair<int, int> pi;
typedef std::pair<ll, ll> pll;
typedef std::vector<pll> vpll;

long long mod=1000000007;

#define all(c) (c).begin(),(c).end()
#define sz(c) (int)(c).size()
#define forn(i, a, b) for(int i = a; i < b; i++)

#define pb push_back
#define mp make_pair

ll powM(ll k, ll n, ll modulo) {
    if (n==0) return 1;
    if(n==1) return k;
    ll x = powM(k, n/2, modulo);
    return (((x*x)%modulo)*powM(k, n%2, modulo)) % modulo;
}
ll gcd (ll a, ll b, ll & x, ll & y) {
    if (a == 0) {
        x = 0; y = 1;
        return b;
    }
    ll x1, y1;
    ll d = gcd (b%a, a, x1, y1);
    x = y1 - (b / a) * x1;
    y = x1;
    return d;
}

ll invmod(ll a, ll modulo) {
    ll x, y;
    gcd(a, modulo, x, y);
    return (x+modulo*modulo)%modulo;
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif
    ll t,n,k;
    cin>>t;
    forn(i,0,t) {
        cin >> k >> n;
        //cout << "case " << k<<" "<<n<<": ";
        if (k == 1) {
            cout << 0 <<endl;
            continue;
        }
        else if (k == 2) {
            cout << 1 << endl;
            continue;
        }
        else {
            // 2 common
            ll ans = 0;
            ll com2 = (k*(k-1)/2)%mod;
            // 1 common
            ll com1 = (k*(powM(k-1, n, mod) +mod - (k-1))) %mod;
            // 3 col
            ll ck3 = (((((k*(k-1)) %mod) * (k-2)) %mod) * invmod(6,mod))%mod;
            ll col3 = (ck3 * ((powM(3,n,mod) - 3*powM(2, n, mod) + 3 + 3*mod)%mod))%mod;
            cout<<(com2+com1+col3)%mod<<endl;
        }
    }
    
}

