#include<bits/stdc++.h>
#define pb push_back
#define rep(i,a,b) for(int i=(int)a;i<(int)b;++i)
#define rrep(i,a,b) for(int i=(int)a;i>=(int)b;--i)
#define ab(a) (a<0)?(-1*a):a
#define pc putchar_unlocked
#define gc getchar_unlocked
#define ll long long int
#define mset(a,b,c) rep(i,0,b) a[i]=c
#define F first
#define S second
#define mp make_pair
#define clr(x) x.clear()
#define MOD 1000000007
#define itoc(c) ((char)(((int)'0')+c))
#define pll pair<ll,ll>
#define pii pair<int,int>
#define MAX 100010
#define all(p) p.begin(),p.end()
using namespace std;
inline void rdi(int &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void rdl(ll &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void print(int a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }
inline void prlong(ll a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }

char *c[701];

int main() {
	int n,m,ct; rdi(m); rdi(n);
	while(m and n) {
		ct=0;
		rep(i,0,m) {
			c[i]=new char[701];
			cin>>c[i];
		}
		rep(i,0,m) rep(j,0,n) {
			if(c[i][j]=='F'){
	    			if((!(i>=1 and j>=1) or (i>=1 and j>=1) and (c[i-1][j-1]=='P')) and ((!(i+1 <= m-1 and j >= 1)) or ((i+1)<=m-1) and (c[i+1][j-1]=='P')) and ((!(i>=1 and j+1<=n-1)) or ((i>=1 and j+1<=n-1) and (c[i-1][j+1]=='P'))) and ((!(i+1<=m-1 and j+1<=n-1)) or((j+1)<=n-1) and (c[i+1][j+1]=='P'))) {
	    					c[i][j]='G';
	    					++ct;
						continue;
	    				}
	    			}
	    			if(c[i][j]=='F'){
	    				if((!(i>=2 and j>=2) or (i>=2 and j>=2) and (c[i-2][j-2]!='G')) and ((!(i+2 <= m-1 and j >= 2)) or (i+2 <= m-1 and j >= 2) and (c[i+2][j-2]!='G')) and ((!(i>=2 and j+2<=n-1)) or (i>=2 and j+2<=n-1) and (c[i-2][j+2]!='G')) and ((!(i+2<=m-1 and j+2<=n-1)) or (i+2<=m-1 and j+2<=n-1) and (c[i+2][j+2]!='G'))) {
	    					c[i][j]='G';
	    					++ct;
						continue;
					}
	    			}
		}
		print(ct);
		rdi(m); rdi(n);
	}
}