#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cassert>
using namespace std;

vector<int > X[101];
vector<int > cab;

bool cmp(int a, int b) {
	return a > b;
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t--) {
    	int n,m;
    	scanf("%d%d",&n,&m);
    	
    	for(int i = 0; i < 101; i++) X[i].clear();
    	
    	for(int i = 0; i < n; i++) {
    		int s,e;
    		scanf("%d%d",&s,&e);
    		X[s].push_back(e);
    	}
    	
    	double ans = 0.0;
    	bool full = false;
    	for(int i = 0; i < 101; i++) {
    		
    		if(cab.size() == 1) {
    			ans += 10;
    		} else if(cab.size() == 2) {
    			ans += 19;
    		} else if(cab.size() > 2) {
    			ans += (int)cab.size() * 9.3;
    		}
    		
    		vector<int > tmp;
    		for(int j = 0; j < cab.size(); j++) if(cab[j] != i) {
    			tmp.push_back(cab[j]);
    		}
    		cab = tmp;
    		
    		int cnt = 0;
    		for(int j = 0; j < X[i].size(); j++) {
    			if(X[i][j] == i) {
    				cnt++;
    				continue;
    			}
    			if(cab.size() < m) cab.push_back(X[i][j]);
    		}
    		
    		if(cab.size() + cnt >= m) {
    			full = true;
    		}

    	}
    	assert(!cab.size());
    	
    	printf("%d",(int)(ans+0.5));
    	if(full) {
    		printf(" Cab was full\n");
    	} else {
    		printf("\n");
    	}
    }
}
