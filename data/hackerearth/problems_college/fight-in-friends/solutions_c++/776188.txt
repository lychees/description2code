#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
#define MAXN 1000001
#define M 1000000007
#define LL long long
#define get getchar
#define pc(x) putchar(x)
using namespace std;

pair<int, int > p[MAXN + 1];
vector<int > v[MAXN + 1];
int n;
int vis[MAXN + 1], level[MAXN + 1];
int BFS(int a, int b)
{
    int temp, i;
    for(i=1;i<=n;i++)
        vis[i] = -1;
    queue<int > q;
     q.push(a);
    level[a] = 0;
    while(!q.empty())
    {
        temp = q.front();
        if(temp == b)
            return level[b];
        q.pop();
        for(i=0;i<v[temp].size();i++)
        {
            if(vis[v[temp][i]] == -1)
            {
                q.push(v[temp][i]);
                vis[v[temp][i]] = 1;
                level[v[temp][i]] = level[temp] + 1;
            }
        }
    }
    return -1;
}
int main()
{
    int t, i, j, m, a, b;
    //sc(t);
    t = 1;
    while(t--)
    {
        sc(n);sc(m);sc(a);sc(b);
        for(i=1;i<=m;i++)
        {
            sc(p[i].F);
            sc(p[i].S);
        }
        sort(p + 1, p + m + 1);
        for(i=1;i<=n;i++)
            v[i].clear();
        for(i=1;i<=n;i++)
        {
            for(j = i + 1;j<=n;j++)
            {
                if((!binary_search(p + 1, p + m + 1, MP(i, j))) && (!binary_search(p + 1, p + m + 1, MP(j, i))))
                {
                    v[i].PB(j);
                    v[j].PB(i);
                }
            }
        }
        printf("%d\n",BFS(a, b));
    }
}

