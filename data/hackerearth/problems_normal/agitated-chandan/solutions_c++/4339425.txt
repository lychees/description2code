#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
typedef long l;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > tii;
typedef vector<pair<int,int> > vec_pii;
typedef vector<vector<int> > vec_vec;
#define mp make_pair
#define setbits(n) __builtin_popcount((n))
#define pb push_back
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define min3(a,b,c) (min((c),min((a),(b))))
#define max3(a,b,c) (max((a),max((b),(c))))
#define newline "\n"
bool visited[100005];
int dist[100005];
int n;
vector<vector<pii> > v;
 
int bfs(int x)
{
    for(int i=0;i<=n+1;++i)
    {
        visited[i]=false;
        dist[i] = 0;
    }
    queue<int> q;
    q.push(x);
    visited[x]=true;
    while(!q.empty())
    {
        int x= q.front();
        q.pop();
        for(int i=0;i<v[x].size();++i)
            if(visited[v[x][i].first]==false)
            {
                q.push(v[x][i].first);
                visited[v[x][i].first]=true;
                dist[v[x][i].first] = dist[x] + v[x][i].second;
            }
    }
    // for(int i=0;i<=n;++i)
    // 	cout<<dist[i]<<" ";
    // cout<<newline;
    int mx = dist[1];
    int ix = 1;
    
    for(int i=2;i<=n;i++){
        if(dist[i]>mx){
            mx = dist[i];
            ix = i;
        }
    }
    
    return ix;
}
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        cin>>n;
        v.clear();
        v.resize(n+1);
        for(int i=1;i<n;++i)
        {
            int x,y,z;
            cin>>x>>y>>z;
            v[x].pb(mp(y,z));
            v[y].pb(mp(x,z));
        }
        int temp = bfs(1);
        int temp1 = bfs(temp);
        int c  =  dist[temp1];
        if(c>10000){
            cout<<10000;
        }else if(c>1000){
            cout<<1000;
        }else if(c>100){
            cout<<100;
        }else{
            cout<<0;
        }
 
        cout<<" "<<c<<endl;;
    }
}