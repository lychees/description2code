#include <bits/stdc++.h>
#define llint long long int
using namespace std;
llint upper_bound(llint a)
{
	llint xtra,q=1,temp;
	xtra = a;
	while(xtra)
	{
		xtra /= 10;
		q *= 10;
	}
	q /= 10;
	xtra = a;
	while(q)
	{
		temp = (xtra/q)%10;
		if(temp % 2)
		{
			if(temp == 9)
			{
				q *= 10;
				return upper_bound((xtra/q)*q + 2*q);
			}
			else return ((xtra/q)*q + q);
		}
		q /= 10;
	}
	return a;
}
llint lower_bound(llint a)
{
	llint xtra,q=1,temp;
	xtra = a;
	while(xtra)
	{
		xtra /= 10;
		q *= 10;
	}
	q /= 10;
	xtra = a;
	while(q)
	{
		temp = (xtra/q)%10;
		if(temp % 2)
		{
		
			llint k=0;
			xtra = (xtra/q)*q - q;
			while(q)
			{
				q/=10;
				k += q*8;
			}
			return xtra + k;
			break;
		}
		q /= 10;
	}
	return a;
}
llint gcd(llint a, llint b)
{
	return b ? gcd(b,a%b) : a;
}
int main() 
{
	llint n,a,xtra,i,gcd_no,h,l;
	scanf("%lld",&n);
	for(i=0;i<n;i++)
	{
		scanf("%lld",&a);
		xtra = a;
		while(xtra%2==0 && xtra)
			xtra /= 10;
		if(!xtra) printf("Unlimited Power\n");
		else
		{
			h = upper_bound(a);
			l = lower_bound(a);
			gcd_no = gcd(h-a,a-l);
			printf("%lld/%lld\n",(h-a)/gcd_no,(a-l)/gcd_no);
		}
	}
	return 0;
}