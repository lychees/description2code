#include<bits/stdc++.h>
using namespace std;
inline void inp( long long  &n ) {
    n=0; int ch = getchar(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getchar(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getchar(); }
    n = n * sign;
    }
    inline void inp1( int  &n ) {
    n=0; int ch = getchar(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getchar(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getchar(); }
    n = n * sign;
    }
long long int multiplicative_inverse(long long int a,long long int b)
{
	long long int b0 = b, t, q;
	long long int x0 = 0, x1 = 1;
	if (b == 1) 
	return 1;
	while (a > 1) {
		q = a / b;
		t = b;
		 b = a % b;
		  a = t;
		t = x0;
		 x0 = x1 - q * x0;
		  x1 = t;
	}
	if (x1 < 0) 
	x1 += b0;
	return x1;
}

long long int cr(long long int *n,long long int *a,long long int len)
{
	long long int p, i, prod = 1, sum = 0;

	for (i = 0; i < len; i++) 
	prod *= n[i];

	for (i = 0; i < len; i++) {
		p = prod / n[i];
		sum += a[i] * multiplicative_inverse(p, n[i]) * p;
	}

	return sum % prod;
}
long long func(long long int n,long long int r,long long int MOD)
{
    
    vector< vector<long long> > C;
    C.resize(2);
    for(int i=0;i<2;i++)
    C[i].resize(r+1,0);
    for (long long int i=0; i<=n; i++)
    {
        for (long long int k=0; k<=r && k<=i; k++)
            if (k==0 || k==i)
                C[i&1][k] = 1;
            else
                C[i&1][k] = (C[(i-1)&1][k-1] + C[(i-1)&1][k])%MOD;
    }
    return C[n&1][r];
}

long long solve(long long int n,long long int m,long long int p)
{
    if (n==0 && m==0) return 1;
    long long int ni = n % p;
    long long int mi = m % p;
    if (mi>ni) return 0;
    return solve(n/p, m/p, p) * func(ni, mi, p);
}

long long C(long long int n,long long int r,long long int MOD)
{
    return solve(n, r, MOD);
}
long long prime[100];
int main()
{
    long long n,r,m,i,N,M,k;
    int t;
    inp1(t);
    int xx=0;
    for(int i=2;i<=100;i++)
    {
    	for(int j=2;j<i;j++)
    	{
    		if(i%j==0)
    		goto in;
    	}
    	prime[xx++]=i;
    	in:;
    }
    while(t--)
    {
        inp(N);
        inp(M);
        inp(k);
        n=N-1;
        r=M-1;
        m=k;
        long long int p[101],a[101];
        long long int k=0;
        for(i=0;i<xx;i++)
        {
            if(prime[i]>m)
            break;
            if(m%prime[i]==0)
            p[k++]=prime[i];
        }
        for(i=0;i<k;i++)
        {
            a[i]=C(n,r,p[i]);
        }
        printf("%lld\n",cr(p,a,k));
    }
}
