#include <bits/stdc++.h>
 
using namespace std;
 
#define foru(i,a,b) for(i=a;i<=b;i++)
#define ford(i,a,b) for(i=a;i>=b;i--)
#define N 100010
#define MOD 1000000007
#define sc(n) scanf("%d", &n)
#define sl(n) scanf("%lld", &n)
#define sf(n) scanf("%lf", &n)
#define pc(n) printf("%d\n", n)
#define pl(n) printf("%lld\n", n)
#define pf(n) printf("%lf\n", n)
#define endl "\n"
#define speedup std::ios_base::sync_with_stdio(false)
#define debug(n) cout<<n<<endl
typedef pair<int, int> pp;
typedef map<int, int> mm;
typedef long long int ll;
 
ll a[N];
ll bit[100010];
ll bitPos[100010][2];
int n;

ll sum(int pos){
	ll total = 0;
	while(pos > 0){
		total = (total % MOD + bit[pos] % MOD) % MOD;
		pos = pos - (pos & (-pos));
	}
	return total % MOD;
}

ll sum1(int pos, int index){
	ll total = 0;
	while(pos > 0){
		total = (total % MOD + bitPos[pos][index] % MOD) % MOD;
		pos = pos - (pos & (-pos));
	}
	return total % MOD;
}

void update(int pos){
	while(pos <= 100000){
		bit[pos] = (bit[pos] + 1) % MOD;
		pos = pos + (pos & (-pos)); 
	}
}

void update1(int pos, int index, ll val){
	while(pos <= 100000){
		bitPos[pos][index] = (bitPos[pos][index] % MOD + val % MOD) % MOD;
		pos = pos + (pos & (-pos));
	}
}

int main(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	int i,j,k,t;
	cin >> n;

	foru(i,1,n){
		cin >> a[i];
	}

	ll ans = 0;

	foru(i,1,n){
		ll first = sum1(a[i] - 1,0) % MOD;
		ll second = (sum1(100000, 1) % MOD - sum1(a[i], 1) % MOD) % MOD;
		second += MOD;
		first = (first % MOD + sum(a[i] - 1) % MOD) % MOD;
		second = (second % MOD + ((sum(100000) - sum(a[i]))) % MOD) % MOD;
		update1(a[i], 1, first);
		update1(a[i], 0, second);
		update(a[i]);
		ans = (ans % MOD + first % MOD) % MOD;
		ans = (ans % MOD + second % MOD) % MOD;
	}

	cout << ans;
	return 0;
}

