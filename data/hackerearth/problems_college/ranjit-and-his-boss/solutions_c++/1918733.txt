#include<bits/stdc++.h>
using namespace std;

#define CLR(a,x) memset(a,x,sizeof(a))
#define PB push_back
#define INF 1000000000
#define MOD 1000000007
#define MP make_pair
#define tr(container , it) for(typeof(container.begin()) it=container.begin() ; it!=container.end() ; it++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) FOR(i,0,a)
#define LL long long
#define VI vector < int >
#define PII pair < int , int >
#define N (100005)

int n, x[N], y[N];
vector < VI > vert, hori;
bool check(int p, int q) {
  if(p >= N || q >= N) return false;
  vector < int >::iterator it  = (lower_bound(hori[p].begin(), hori[p].end(), q));
  return (it != hori[p].end() && (*it)==q);
}

int main() 
{
	scanf("%d",&n);
    vert.clear();vert.resize(N);
    hori.clear();hori.resize(N);
    for(int i=0;i<n;i++) {
      scanf("%d%d",&x[i], &y[i]);
      hori[x[i]].PB(y[i]);
      vert[y[i]].PB(x[i]);
    }

    for(int i=0;i<N;i++) {
      sort(vert[i].begin(), vert[i].end());
      sort(hori[i].begin(), hori[i].end());
    }

    int ans = 0;
    for(int i=0;i<N;i++) {
      int sz = hori[i].size();
      for(int j=0;j<sz;j++) {
        int p = i;
        int q = hori[i][j];
        int sz2 = vert[q].size();
        int ind2 = lower_bound(vert[q].begin(), vert[q].end(), p) - vert[q].begin();
        if((sz2 - ind2) > (sz-j)) {
          for(int k=j+1;k<sz;k++) {
            int dis = hori[i][k] - q;
            if(check(p+dis, q) && check(p+dis, q+dis)) {
              ans++;
            }
          }
        } else {
          for(int k=ind2+1;k<sz2;k++) {
            int dis = vert[q][k] - p;
            if(check(p, q+dis) && check(p+dis, q+dis)) {
              ans++;
            }
          }
        }
      }
    }
  printf("%d\n",ans);
  return 0;
}