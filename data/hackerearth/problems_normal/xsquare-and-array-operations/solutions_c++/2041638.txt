#include <bits/stdc++.h>

using namespace std;

typedef long long     LL;
typedef pair<int,int> pii;

double PI  = acos(-1);
double EPS = 1e-7;
int INF    = 1000000000;
LL INFLL   = 1000000000000000000LL;

#define fi            first
#define se            second
#define mp            make_pair
#define pb            push_back

#define input(in)     freopen(in,"r",stdin)
#define output(out)   freopen(out,"w",stdout)

#define MIN(a, b)     (a) = min((a), (b))
#define MAX(a, b)     (a) = max((a), (b))

#define RESET(a, b)   memset(a,b,sizeof(a))
#define ALL(a)        (a).begin(), (a).end()
#define SIZE(a)       (int)a.size()
#define SORT(a)       sort(ALL(a))
#define UNIQUE(a)     (a).erase( unique( ALL(a) ), (a).end() )
#define FOR(a, b, c)  for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a, b, c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a, b)   for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); a++)

int mx[8] = {-1,1,0,0,-1,-1,1,1};
int my[8] = {0,0,-1,1,-1,1,-1,1};

// ----- //

int n;
long long x[500005];
long long nx[500005];

long long go(int l,int lim) {
	if (l > lim || x[l] == INFLL) {
		return 0;
	}
	int r = nx[l];
	return 0LL+((l+1 <= r-1)?x[l]:0) + ((r > lim)?0:x[r]) + go(l+1, r-1) + go(r, lim);
}

int main() {
	int tc;
	scanf("%d",&tc);
	while(tc--) {
		
		scanf("%d",&n);
		FOR(a,1,n) {
			scanf("%lld",&x[a]);
			nx[a] = -1;
		}
		n++;
		x[n] = INFLL;
		vector<int> st;
		st.pb(n);
		FORD(a,n-1,1) {
			//cout << "MEH " << st.back() << " " << a << " " << x[st.back()] << " " << x[a] << endl;
			while(!st.empty() && x[st.back()] < x[a]) {
			//	cout << "POP " << st.back() << " " << x[st.back()] << endl;
				st.pop_back();
			}
			nx[a] = st.back();
			//cout << a << " " << x[a] << endl;
			st.pb(a);
		}
		cout << go(1,n)-INFLL << endl;
	}
}