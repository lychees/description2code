#include<bits/stdc++.h>
using namespace std;

#define LL long long
#define ULL unsigned LL
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define fr(i,l,r) for(int (i) = (l);(i) < (r) ; (i++) )
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> AdjList;

int main(){

    vector<int> a,b;
    int n,temp;
    sc(n);

    bool flag[105];

    fr(i,0,105)flag[i] = false;

    fr(i,0,n){sc(temp);a.pb(temp);}
    fr(i,0,n){sc(temp);b.pb(temp);}
    sort(a.rbegin(),a.rend());
    sort(b.rbegin(),b.rend());
    int sum=0;
    int mode=1;


    fr(k,0,n){

        //fr(i,0,n)cout<<flag[i]<<" ";
        //cout<<endl;
        //cout<<"sum=" <<sum<<"mode ="<<mode<<endl;

        if(mode == 1){

            int index=n;
            fr(j,0,n)if(b[j] < a[k] && !flag[j]){index = j;break;}

            if(index < n){
                flag[index] = true;
                sum += 100;

            }else{
                k--;
                mode = 2;
            }

        }

        if(mode == 2){
            //cout<<"entering";
            int index=n;
            fr(j,0,n)if(b[j] == a[k] && !flag[j]){index = j;break;}

            if(index < n){
                flag[index] = true;
                sum += 50;

            }else{
                k--;
                mode = 3;
            }


        }

        if(mode == 3)break;


    }

    cout<<sum;


return 0;}
