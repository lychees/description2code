def take_input():
    no_of_test_cases = int(raw_input())
    battles = []
    for test_case in range(no_of_test_cases):
        alice_words = raw_input()
        bob_words = raw_input()
        battles.append([alice_words, bob_words])
    return battles


def traverse_and_kill(bigger_list, smaller_list):
    smaller_index = 0
    bigger_index = 0
    while (1):
        try:
            if smaller_list[smaller_index] > bigger_list[bigger_index]:
                bigger_index += 1
            elif smaller_list[smaller_index] == bigger_list[bigger_index]:
                smaller_list[smaller_index] = ' '
                bigger_list[bigger_index] = ' '
                smaller_index += 1
                bigger_index += 1
            else:
                smaller_index += 1
        except IndexError:
            break


def get_winner(battle):
    alice_words = filter(
        lambda x: False if x == ' ' else True,
        list(
            battle[0]))
    bob_words = filter(lambda x: False if x == ' ' else True, list(battle[1]))
    alice_words.sort()
    bob_words.sort()

    if len(alice_words) > len(bob_words):
        traverse_and_kill(alice_words, bob_words)
    else:
        traverse_and_kill(bob_words, alice_words)

    alice_words = filter(lambda x: False if x == ' ' else True, alice_words)
    bob_words = filter(lambda x: False if x == ' ' else True, bob_words)

    if len(alice_words) > 0 and len(bob_words) == 0:
        return 'You win some.'
    elif len(bob_words) > 0 and len(alice_words) == 0:
        return 'You lose some.'
    else:
        return 'You draw some.'


if __name__ == '__main__':
    battles = take_input()
    for battle in battles:
        print get_winner(battle)
