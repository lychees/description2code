#include<bits/stdc++.h>
using namespace std;
long long mod=1000000007;
bool sieve[1000002];
long long int fact[1000002];
int countFact(int n, int p)
{
    int k=0;
   // cout<<n<<" "<<p<<endl;
    while (n>0)
    {
        k+=n/p;
        n/=p;
    }
    return k;
}
inline void init()
{
   for(long long int i=2;i<1000001;i++)
   {
   	 if(sieve[i])
   	 {
    	 	fact[i]=i;
   	 	for(long long int j=i*1LL*i;j<1000001;j+=i)
   	 	{   	 		sieve[j]=0;
   	 		         if(fact[j]==0)
				      fact[j]=i;
   	 	}
   	 }
   }
}
 vector<int> prime;
int main()
{
  for(long long int i=0;i<1000001;i++)  sieve[i]=1;
  fact[1]=1;
  init();
  for(int i=2;i<1000001;i++)
  {
  	if(sieve[i]) prime.push_back(i);
  }
	int t;
	cin>>t;
	while(t--)
	{
		int x,y;
		cin>>x>>y;
		if(x<y)
		{
			cout<<"0"<<endl;
			continue;
		}
		else
		{
		
		long long  resa=1;int c=0;
	
	   for(int i=0;i<prime.size();i++)
	   {	

	         if(prime[i]>x)
	          break;
		         c=countFact(x,prime[i]);
		 		   	resa=(((resa*1LL)%mod)*(c+1))%mod;

		}		
       
	 // cout<<resa<<endl;		
	  long long resb=1;
	   for(int i=0;i<prime.size();i++)
	   {	
	         if(prime[i]>y)
	          break;
		         c=countFact(y,prime[i]);
		 		   	resb=(((resb*1LL)%mod)*(c+1))%mod;
		}		
       
	  //cout<<resb<<endl;		
		
    long long  res=resa-resb;
    if(res<0)
     res+=mod;
	cout<<res<<endl;
		
		
	}
	
	
}
	
	return 0;
}