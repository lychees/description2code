#include <iostream>
#include <string>
#include <string.h>
#include <stack>
#include <cstdlib>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <iomanip>
#include <sstream>
#include <memory.h>
#include <stdio.h>
#include <ctime>
#include <cmath>
#include <cassert>
 
using namespace std;
 
#define LL long long
#define U unsigned
#define pnt pair<int,int>
#define FOR(i,a,b) for (int i=(a); i<(b); ++i)
#define MEMS(a,b) memset((a),(b),sizeof(a))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define ABS(a) (((a)>=(0))?(a):(-(a)))
#define mp make_pair
#define pb push_back
#define ALL(a) a.begin(),a.end()
#define FI(i,b) FOR(i,0,b)
#define V(t) vector < t >
#define sz size()
#define MaxN 200010
#define MOD 1000000007LL
#define DEBUG 1
 
LL dp[18][18][18][18][18];
int mem[18][18][18][18][18];

LL func(int dig, int two, int three, int five, int seven)
{
	if (dig==0)
	{
		if ( (two || three || five || seven) )
			return dp[dig][two][three][five][seven] = 1LL;
		return dp[dig][two][three][five][seven] = 0LL;
	}

	if (mem[dig][two][three][five][seven])
		return dp[dig][two][three][five][seven];

	mem[dig][two][three][five][seven] = 1;
	LL ret = 0;
	for (int i=0 ; i<=9 ; i++)
		ret += func(dig-1, two + (i==2?1:0), three + (i==3?1:0), five + (i==5?1:0), seven + (i==7?1:0));

	dp[dig][two][three][five][seven] = ret;

	return ret;
}

LL solve(LL x)
{
	int qued;
	char num[21];
	sprintf(num, "%lld", x);
	qued = strlen(num);
	
	int two = 0;
	int three = 0;
	int five = 0;
	int seven = 0;

	LL ans = 0;
	for (int i=0 ; i<strlen(num) ; i++)
	{
		int d = num[i] - '0';
		qued--;
		for (int j=0 ; j<d ; j++)
			ans += func(qued, two + (j==2?1:0), three + (j==3?1:0), five + (j==5?1:0), seven + (j==7?1:0));
	
		switch(d)
		{
			case 2:
				two++;
				break;
			case 3:
				three++;
				break;
			case 5:
				five++;
				break;
			case 7:
				seven++;
				break;
			default:
				break;
		}
	}

	return ans;
}

int t;
LL N;

int main()
{
	scanf("%d", &t);
	while (t--)
	{
		scanf("%lld", &N);
		printf("%lld\n", solve(N+1));
	}

	return 0;
}