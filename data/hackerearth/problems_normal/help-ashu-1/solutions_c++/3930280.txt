#include <bits/stdc++.h>
#define ll long long
#define maxn 100005
#define slld(t) scanf("%lld",&t)
#define sd(t) scanf("%d",&t)
#define pd(t) printf("%d\n",t)
#define plld(t) printf("%lld\n",t)
#define fo(i,n) for(long long i=0;i<n;i++)


using namespace std;
ll xyz=10000001;
ll p[100009];
ll odd[1000000];
ll even[1000000];

void init(){


}

void build(ll i,ll s,ll e){

    if(s==e){
        if(p[s]%2)odd[i]+=1;
        else even[i]+=1;
        return;
    }
    build(2*i,s,(s+e)/2);
    build(2*i+1,(s+e)/2+1 ,e);
    odd[i]=odd[2*i]+odd[2*i+1];
    even[i]=even[2*i]+even[2*i+1];


}
ll evencount(ll i,ll s,ll e,ll l,ll r){
    if(e<s || s>r || e<l)return 0;
    if(s>=l && e<=r)return even[i];
    ll mid=(s+e)/2;
    ll temp1=evencount(2*i,s,mid,l,r);
    ll temp2=evencount(2*i+1,mid+1,e,l,r);
    return temp1+temp2;
}
ll oddcount(ll i,ll s,ll e,ll l,ll r){
    if(e<s || s>r || e<l)return 0;
    if(s>=l && e<=r)return odd[i];
    ll mid=(s+e)/2;
    ll temp1=oddcount(2*i,s,mid,l,r);
    ll temp2=oddcount(2*i+1,mid+1,e,l,r);
    return temp1+temp2;
}
void update(ll i,ll s,ll e,ll val,ll posi){
   // cout<<i<<endl;
    if(posi>e || posi<s)return;
    if(s==e && s==posi){
        if(val%2==0){
        	odd[i] = 0;
        	even[i] = 1; 
        }
            else {
                even[i] = 0;
                odd[i] = 1;
            }
            return;
        }
        
    ll mid=(s+e)/2;
    if(posi>= s && posi<=mid)update(2*i,s,mid,val,posi);
    else update(2*i+1,mid+1,e,val,posi);
    odd[i]=odd[2*i]+odd[2*i+1];
    even[i]=even[2*i]+even[2*i+1];
}
void solve(ll t){




}
int main(){
    ll n,t;
    slld(n);
    for(ll i=1;i<=n;i++)slld(p[i]);
     fo(i,1000000){
        odd[i]=0;
        even[i]=0;
    }
    build(1,1,n);
    //for(int i=1;i<=3*n;i++){
      //  cout<<i<<" "<<odd[i]<<" "<<even[i]<<endl;
    //}
    slld(t);
    while(t--){
         ll a,b,c;
    slld(a);
    slld(b);
    slld(c);
    if(a==0){
        update(1,1,n,c,b);
    }
    if(a==1){
        cout<<evencount(1,1,n,b,c)<<endl;;

    }
    if(a==2){
        cout<<oddcount(1,1,n,b,c)<<endl;
    }

    }
}