#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int  MOD=1000000007;
const int  INF= int(1e9);
const int  MAX=10000007;
bool prime[MAX],alpha[MAX];
ll res[MAX];
int pw10[]={10,100,1000,10000,100000,1000000};
int ps= sizeof(pw10)/sizeof(int);
bool check (int x) {
    for(int i=2;i*i<=x;i++) {
        if(x%i==0) {
            return false;
        }
    }
    return true;
}


bool  alphaPrime(int x) {
    for(int i=0;i<ps;i++) {
        int suffix=x%pw10[i];
        if(prime[suffix]) {
            return true;
        }
    }
    return false;
}
    
    
int main()
{
    for(int i=2;i<MAX;i++) {
        prime[i]=1;
    }
    for(int i=2;i<MAX;i++) {
        if(prime[i]) {
            for(int j=i+i;j<MAX;j+=i) {
                prime[j]=false;
            }
        }
    }
    for(int i=1;i<MAX;i++) {
        alpha[i]=prime[i];
    }
          
    for(int i=2;i<MAX;i++) {
        if(!alpha[i] && alphaPrime(i) ) {
            alpha[i]=1;
        }
    }
    for(int i=2;i<MAX;i++) {
        res[i]+=res[i-1]+alpha[i];
    }
    int n;
    scanf("%d",&n);
    while(n--) {
        int l,r;
        scanf("%d %d",&l,&r); 
        ll x = res[r]-res[l-1];
        printf("%lld\n",x);
    }
    
	return 0;

}
