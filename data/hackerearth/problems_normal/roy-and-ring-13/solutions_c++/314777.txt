/* refernce geeks for geeks */
#include<stdio.h>
#include<iostream>
#include<string.h>
#include<algorithm>
#include<math.h>
#include<iomanip>
using namespace std;
#define getchar_unlocked getchar
#define ll long long int
#define mod 1000000007
inline long long int in()
{
   long long int n=0;
   long long int ch=getchar_unlocked();
   long long int sign=1;
   while( ch < '0' || ch > '9' )
   {
   	if(ch=='-')sign=-1; ch=getchar_unlocked();
	   }
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();
   return n*sign;
}
 
void multiply(ll F[2][2], ll M[2][2]);
 
void power(ll F[2][2], ll n);
 
ll fib(ll n)
{
  ll F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0];
}
 
void power(ll F[2][2], ll n)
{
  if( n == 0 || n == 1)
      return;
  ll M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}
 
void multiply(ll F[2][2], ll M[2][2])
{
  ll x =  ((F[0][0]*M[0][0])%mod + (F[0][1]*M[1][0])%mod)%mod;
  ll y =  ((F[0][0]*M[0][1])%mod + (F[0][1]*M[1][1])%mod)%mod;
  ll z =  ((F[1][0]*M[0][0])%mod + (F[1][1]*M[1][0])%mod)%mod;
  ll w =  ((F[1][0]*M[0][1])%mod + (F[1][1]*M[1][1])%mod)%mod;
 
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}
 

int main()
{
  ll t;
  t=in();
  while(t--)
  {
  	ll n,ans=1,f,temp;
  	n=in();
  	//n-=1;
  	if(n==1||n==2||n==3||n==4)
  	cout<<"1\n";
  	else
  	{	
		temp=(n/2);
		if(temp*2!=n)
		temp+=1;
	  	f=fib(temp);
	  	ans=(f*f)%mod;
	  	cout<<ans<<"\n";
	 }
  }
  
  return 0;
}

