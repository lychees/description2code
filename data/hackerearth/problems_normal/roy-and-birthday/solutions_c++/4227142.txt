#include <iostream>
#include <map>
using namespace std;

#define p 1000000007

long long dp[1000001] = {0};

long long fact(long long n){
	if(dp[n]){
		return dp[n];
	}
	dp[n] = (n*fact(n-1))%p;
	return dp[n];
}

long long modexp(long long x){
	int y = p-2;
	long long ans = 1;
	while(y){
		if(y&1){
			ans = (ans*x)%p;
		}
		x = (x*x)%p;
		y >>= 1;
	}
	return ans;
}

int main()
{
    dp[0] = dp[1] = 1;
    long long t,n,v;
    cin >> t;
    char s[1000000];
    map<char, long long>m;
    while(t--){
    	m.clear();
    	cin >> s;
    	n = v = 0;
    	for(long long i = 0; s[i] != '\0'; i++){
    		n++;
    		m[s[i]]++;
    		if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){
    			v++;
    		}
    	}
    	if(n%2 == 0 && v > n/2){
    		cout << -1 << endl;
    		continue;
    	}
    	if(v > n/2 + 1){
    		cout << -1 << endl;
    		continue;
    	}
    	long long ans = (fact(n-v)*fact(n-v+1))%p;
    	ans = (ans*modexp(fact(n-v-v+1)))%p;
    	for(long long i = 'a'; i <= 'z'; i++){
    		ans = (ans*modexp(fact(m[i])))%p;
    	}
    	cout << ans << endl;
    }
    return 0;
}
