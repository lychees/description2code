#include <bits/stdc++.h>
using namespace std;
string s;
struct trie
{
	trie*next[26];
	int mxwt;
	trie()
	{
		mxwt=0;
		for(int i=0;i<26;i++)
		next[i]=NULL;
	}
};
trie*insert(const string&s,int w,int idx,trie*root)
{
	if(idx==s.length())return NULL;
	int cur=s[idx]-'a';
	if(!root->next[cur])
		root->next[cur]=new trie();
	root->next[cur]->mxwt=max(root->next[cur]->mxwt,w);
	root->next[cur]=insert(s,w,idx+1,root->next[cur]);
	return root;
}
int query(const string&s,trie*root)
{
	int idx=0;
	int len=s.length();
	int cur;
	int bstwt=-1;
	while(idx<len)
	{
		cur=s[idx]-'a';
		if(!root->next[cur])return -1;
		bstwt=root->next[cur]->mxwt;
		root=root->next[cur];
		idx++;
	}
	return bstwt;
}
int main()
{
    int n,q,w;
    cin>>n>>q;
	trie *root=new trie();
	while(n--)
	{
		cin>>s>>w;
		root=insert(s,w,0,root);
	}
	while(q--)
	{
		cin>>s;
		cout<<query(s,root)<<"\n";
	}
    return 0;
}
