#include<bits/stdc++.h>

using namespace std;

#define N 500
#define PB push_back
#define MOD 1000000007
#define LL long long int

LL a[N][N], b[N][N], c[N][N];
int n, u, v;
LL k;

void mul(LL e[N][N], LL f[N][N]){
    int i, j, k;
    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            c[i][j] = 0;
        }
    }
    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            for(k = 0; k < n; k++){
                c[i][k] += e[i][j] * f[j][k];
                if(c[i][k] >= MOD){
                    c[i][k] %= MOD;
                }
            }
        }
    }
}

void copymat(LL e[N][N], LL f[N][N]){
    int i, j;
    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            e[i][j] = f[i][j];
        }
    }
}

void print(LL a[N][N]){
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cout<<a[i][j]<<" ";
        }
        cout<<endl;
    }
}

void power(LL a[N][N], LL k){
    int i, j;
    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            b[i][j] = (i == j ? 1 : 0);
        }
    }
    while(k > 0){
        if(k & 1){
            mul(b, a);
            for(i = 0; i < n; i++){
                for(j = 0; j < n; j++){
                    b[i][j] = c[i][j];
                }
            }
        }
        mul(a, a);
        for(i = 0; i < n; i++){
            for(j = 0; j < n; j++){
                a[i][j] = c[i][j];
            }
        }
        //print(b);
        //print(a);
        k /= 2;
    }
}

inline void solve(){
    int i, j;
    cin>>n>>k>>u>>v;
    for(i = 0; i < n; i++){
        for(j = 0; j < n; j++){
            cin>>a[i][j];
        }
    }
    if(k == 0){
        cout<<"0"<<endl;
    }
    else{
        power(a, k);
        printf("%lld\n", b[u][v]);
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
