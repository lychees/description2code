#include<bits/stdc++.h>

using namespace std;
#define ll long long int
#define mq 1000000007
#define pb push_back
#define mk make_pair
#define fi first
#define se second
#define pii pair<ll, ll>

ll fact[1005];
ll dp[1005]; 

ll invmod(ll a) {

	ll x=1, y=a, b=mq-2;
	while (b>0) {
		if(b%2==1) {
			x=(x*a)%mq;
		}
		a=(a*a)%mq;
		b=b/2;
	}

	return x;
}

ll comb(int n, int k) {

	if(k==0 || n-k == 0){
		return 1;
	}

	ll ans=fact[n];
	ans = (ans*invmod(fact[n-k]))%mq;
	ans = (ans*invmod(fact[k]))%mq;
	return ans;

}

int main() {

	vector<int > cube;

	for (int i=1; i*i*i<=6000; i++) {
		cube.pb(i);
	}

	fact[0]=1;

	for(int i=1; i<1005; i++) {
		fact[i]=(i*fact[i-1])%mq;
	}

	int n,k;
	cin>>n>>k;

	dp[0]=1;
	dp[1]=1;

	for(int i =2; i<=n; i++) {

		ll sum =0;
		for(int j=0; j<i; j++ ){

			sum = (sum+ ( ( (comb(i-1, j)*fact[j+1])%mq)*dp[i-1-j])%mq )%mq;
		//	cout<<i<<" "<<j<<" "<< comb(i-1, j)<<" "<<fact[j+1]<<" "<<dp[i-1-j]<<endl;
		//	cout<<sum<<endl;
		}

		dp[i]= sum;
	}

	cout<<(dp[n]*comb(n,k))%mq;
	return 0;
}
