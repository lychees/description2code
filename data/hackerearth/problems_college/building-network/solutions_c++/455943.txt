#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<bits/stdc++.h>
using namespace std;
int i,n,t,A[1001];
long long ans=0;
inline long long solve(int A[],int left, int right)////vector<int> A, int left, int right)
{ if(left==(right-1)) { printf("left %d, right %d\t", A[left],A[right]); return (A[left]+A[right]); }
  if(left==right)  { printf(" mid %d\n", A[right]); return A[right]; }
  int mid=((left+right))/2,L,R;
  L=solve(A,left,mid);
  R=solve(A,mid+1,right);
  printf("left : %d\t midright : %d\nLeft side = %d and right side = %d\n", A[left], A[mid], A[right],L,R);
  ans+=(L+R);
 return ans;
}

int main()
{ scanf("%d", &t);
 while(t--)
 { scanf("%d", &n); int tmp;
   //vector<int> A;
    //memset(A,0,sizeof(A));
   for(i=0,ans=0;i<n;i++)
   { scanf("%d", &tmp);
     A[i]=tmp; //.push_back(tmp);

   }
   std::sort(A , A + n);
    for(i=1;i<n;i+=1)
    { ans+=A[i]+A[0];
    }
        // if(i&1) ans+=(A[i]+A[i-1]);
    //}
    //if(n&1) ans=solve(A,0,n);
    //else ans=solve(A,0,n-1);
 	printf("%lld\n", ans);
 }
return 0;
}
