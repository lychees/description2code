from fractions import gcd
n,k=map(int,raw_input().split())
dp0=[[0 for i in range(62)] for j in range(62)]
dp1=[[0 for i in range(62)] for j in range(62)]
dpp=[[0 for i in range(62)] for j in range(62)]
for i in range(1,1+n):
    dp1[i][1]=(1<<(i-1))
    dp0[i][1]=dp1[i][1]-1
for i in range(1,1+n):
    dpp[i][1]=(1<<(i-1))
for j in range(2,1+k):
    for i in range(j,1+n):
        dp0[i][j]=dp0[i-1][j]+dp1[i-1][j]
        dp1[i][j]=dp0[i-1][j]+dp1[i-1][j]+(1<<(i-j))-dp1[i-j][1]-dp0[i-j][j]
        dpp[i][j]=dpp[i-1][j-1]
m=(1<<n)
l=dp0[n][k]+dp1[n][k]
t=gcd(m,l)
m/=t
l/=t
print str(l)+'/'+str(m)