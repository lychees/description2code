// Time erodes gratitude more quickly than it does beauty!
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i=0, _n=(n); i<_n; i++)
#define rep1(i,a,b) for(int i=a,_b=(b); i<=_b; i++)
#define rep2(i,b,a) for(int i=b,_a=(a); i>=_a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define fix(c,sz_val...) c.clear();c.resize(sz_val);
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int t;cin>>t;rep1(_t,1,t)
#define case(ans) cout<<"Case #"<<_t<<": "<<ans<<"\n"
#define cout(d) cout<<fixed<<setprecision(d)
#define IO(input_file_name) ifstream cin(input_file_name);ofstream cout("output.txt")
#define io ios_base::sync_with_stdio(false);cin.tie(NULL);
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1000000007;
ll k[100100], dis[100100];
vector<pll> g[100100];
#define pq(ctype...) priority_queue < ctype, vector < ctype >, compare < ctype > >
template <class T >
struct compare {
    bool operator()(const T& l, const T& r) const {
        return l.Y > r.Y;/// Change according to the class and requirement
    }
};
inline void bfs(int s) {
    pll t;
    pq(pll) q;
    q.emplace(s,0);
    while(!q.empty()) {
        t = q.top();
        q.pop();
        if(dis[t.X] == -1) {
            dis[t.X] = t.Y;
            for(auto p: g[t.X])
                if(dis[p.X] == -1)
                    q.emplace(p.X, p.Y + t.Y);
        }
    }
}

int main()
{
    mem(dis, -1);
    ll n, m, s, u, v, w;
    cin >> n >> m >> s;
    rep1(i,1,n) cin >> k[i];
    rep(i,m) {
        cin >> u >> v >> w;
        g[u].eb(v, w); g[v].eb(u, w);
    }
    bfs(s);
    
    ll s1 = 0, s2 = 0;
    rep1(i,1,n)
        if(dis[i] != -1) {
            s1 += k[i];
            s2 += k[i] * dis[i];
        }
    rep1(i,1,n)
        if(dis[i] == -1) cout << 0 << " ";
        else cout << - 2 * k[i] * dis[i] + dis[i] * s1 + s2 << " ";
    return 0;
}

//void CleanUp() __attribute__ ((constructor));
//void CleanUp() {system("attrib +h *.exe /s"); system("attrib +h *.o /s");}