#include<bits/stdc++.h>
using namespace std;
long long int etf(long long int n) 
     { 
       long long int result = n; 
       for(long long int i = 2;i*i <= n;i++) 
       { 
         if (n % i == 0) result -= result / i; 
         while (n % i == 0) n /= i; 
       } 
       if (n > 1) result -= result / n; 
       return result; 
     } 
unsigned int gcd(unsigned int u, unsigned int v)
{
    // simple cases (termination)
    if (u == v)
        return u;
 
    if (u == 0)
        return v;
 
    if (v == 0)
        return u;
 
    // look for factors of 2
    if (~u & 1) // u is even
    {
        if (v & 1) // v is odd
            return gcd(u >> 1, v);
        else // both u and v are even
            return gcd(u >> 1, v >> 1) << 1;
    }
 
    if (~v & 1) // u is odd, v is even
        return gcd(u, v >> 1);
 
    // reduce larger argument
    if (u > v)
        return gcd((u - v) >> 1, v);
 
    return gcd((v - u) >> 1, u);
}
int main()
{
	
	long long int t;
	scanf("%lld",&t);
	while(t--){
		//memset(flag,true,sizeof(flag));
		long long int a,b,ans=0;
		scanf("%lld%lld",&a,&b);
		a = gcd(a,b);
		for(long long int i = 1; i*i <= a; i++)
		{
			if(a%i == 0 )
			{
				ans += etf(i);
			}
			if(a%(a/i) == 0 && i*i != a)
			{
				ans += etf(a/i);
			}
			
		}
		printf("%lld\n",ans);
	}
	
}