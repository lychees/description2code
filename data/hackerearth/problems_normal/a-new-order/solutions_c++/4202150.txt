#include<bits/stdc++.h>
using namespace std;
int vis[105][105];
int order[27];
int vis1[27];
int vis2[27];
int vis3[27][27];
string arr[105];
vector<int>v[27];
map<int,char>m;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(false);
    char ch='a';
    for(int i=0;i<26;i++)
    {
        m[i]=ch++;
    }
    fill(order,order+27,0);
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
        for(int j=0;j<arr[i].length();j++)
        {
            vis2[arr[i][j]-'a']=1;
        }
    }
    for(int k=0;k<22;k++)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(vis[i][j]==1||arr[i].length()<=k||arr[j].length()<=k)
                    continue;
                    int l=arr[i][k]-'a';
                    int l1=arr[j][k]-'a';
                if(l!=l1)
                {
                     vis[i][j]=1;
                    if(vis3[l][l1]==0)
                    {
                      vis3[l][l1]=1;
                      v[l].push_back(l1);
                    }
                    vis1[l1]=1;
                }
            }
        }
    }
     int ans=INT_MIN;
      queue<pair<int,int> >q;
    for(int i=0;i<26;i++)
    {
        if(vis1[i]==0&&vis2[i]==1)
        {
          q.push(make_pair(i,0));
           order[i]=0;
         }
    }
     while(!q.empty())
         {
        pair<int,int>p=q.front();
        int x=p.first;
        int y=p.second;
        ans=max(ans,y);
        order[x]=max(order[x],y);
        q.pop();
        for(int j=0;j<v[x].size();j++)
        {
            q.push(make_pair(v[x][j],y+1));
        }
       }
    for(int i=0;i<=ans;i++)
    {
        for(int j=0;j<26;j++)
        {
            if(order[j]==i&&vis2[j]==1)
                cout<<m[j];
       }
        cout<<"\n";
    }
    return 0;
}
