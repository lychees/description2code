#include <iostream>
#include <vector>
#include <utility>
#include <cmath>
#include <limits>
using namespace std;

int main()
{
    int n, X, x1, y1, x2, y2, X2, Y, Y2;
    float highest, current;
    Y = Y2 = numeric_limits<int>::max();
    cin >> X >> n;
    vector<pair<pair<int ,int>, pair<int ,int>>> lines;
    bool intersect;
    while(n--){
    	cin >> x1 >> y1 >> x2 >> y2;
    	lines.push_back(make_pair(make_pair(x1, y1), make_pair(x2, y2)));
    }
    do{
    	intersect = false;
    	highest = 0;
    	vector<pair<pair<int ,int>, pair<int ,int>>>::iterator it;
    	for(auto line = lines.begin(); line != lines.end(); line++){
    		if(line->first.first <= X && line->second.first >= X && Y > min(line->first.second , line->second.second)){
    			current =line->first.second + (X - line->first.first) * ((float)(line->second.second - line->first.second))/(line->second.first - line->first.first);
    			if(highest < current){
    				highest = current;
    				intersect = true;
    				it = line;
    				X2 = line->first.second > line->second.second ? line->second.first : line->first.first;
    				Y2 = min(line->first.second , line->second.second);
    			}
    		}
    	}
    	if(intersect) {
    		X = X2;
    		Y = Y2;
    		it->second.second = it->first.second = 0;
    	}
    }while(intersect);
    
    cout << X << endl;
    
    return 0;
}
