#include<iostream>
#include<algorithm>
using namespace std;

void merge(int a[] ,int l,int mid,int r)
{
	int i,j,k,n1,n2;
	n1 = mid-l+1;  //size of left subarray
	n2 = r-mid;   // size of right subarray
	int left[n1],right[n2];
	for(i=0;i<n1;i++)
	{
		left[i]=a[l+i];
	}
	for(j=0;j<n2;j++)
	{
		right[j] = a[mid+1+j];
	}
	i=0;
	j=0;
	k=l;
	while(i<n1&&j<n2)
	{
		if(left[i]<=right[j])
		{
			a[k]= left[i];
			
			
			i=i+1;
		}
		else
		{
			a[k]=right[j];
			j++;
		}
		k++;
	}
	while(i<n1)
	{
		a[k]=left[i];
		i++;
		k++;
	}
	while(j<n2)
	{
		a[k]=right[j];
		j++;
		k++;
	}
}
void  merge_sort(int arr[] ,int l,int r)
{
	int x;
	if(l<r)
	{
		int mid = (l+r)/2;
		merge_sort(arr,l,mid);
		merge_sort(arr,mid+1,r);
		merge(arr,l,mid,r);
		
	}
}

int main()
{
	int t,k,flag=0;
	cin>>t>>k;
	int a[t];
	int i;
	for(i=0;i<t;i++)
	{
		cin>>a[i];
	}
	merge_sort(a,0,t-1);
	
	for(i=0;i<t-1;i++)
	{
		if(a[i+1]-a[i]>k)
		{
			flag=1;
			cout<<a[i]<<endl;
			break;
		}
	}
	if(flag==0)
	{
		cout<<a[t-1]<<endl;
	}
}