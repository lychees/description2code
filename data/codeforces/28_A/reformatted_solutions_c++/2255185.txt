#include <algorithm>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#define x first
#define y second

typedef pair<int, int> Point;

const int N = 555;

int n, m;
int len[N];
int ans[N];
bool visited[N];
Point a[N];

int dist(const Point &a, const Point &b, const Point &c) {
  return abs(a.x - b.x) + abs(a.y - b.y) + abs(b.x - c.x) + abs(b.y - c.y);
}

bool check(bool flag) {
  memset(visited, 0, sizeof(visited));
  memset(ans, -1, sizeof(ans));
  for (int i = flag; i < n; i += 2) {
    int need = dist(a[(i - 1 + n) % n], a[i], a[(i + 1) % n]);
    flag = false;
    for (int j = 0; j < m; ++j)
      if (!visited[j] && len[j] == need) {
        flag = true;
        visited[j] = true;
        ans[i] = j + 1;
        break;
      }
    if (!flag)
      return false;
  }
  return true;
}

int main() {
  scanf("%d%d", &n, &m);
  for (int i = 0; i < n; ++i)
    scanf("%d%d", &a[i].x, &a[i].y);
  for (int i = 0; i < m; ++i)
    scanf("%d", len + i);
  if (check(0) || check(1)) {
    puts("YES");
    for (int i = 0; i < n; ++i)
      printf("%d%c", ans[i], i < n - 1 ? ' ' : '\n');
  } else {
    puts("NO");
  }
}
