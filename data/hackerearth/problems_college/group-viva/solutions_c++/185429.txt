#include<iostream>
using namespace std;
#define ll long long
#include<cmath>
#include<algorithm>
#define lastNumber 1000000000
ll   gcd( ll a, ll b )
{
    ll     t;
    if ( a < 0 )
        a = -a;

    if ( ! b )
        return a;

    if ( b < 0 )
        b = -b;

    if ( ! a )
        return b;

    t = 0;

    while ( ! ( ( a | b ) & 1 ) )
    {
        a >>= 1;
        b >>= 1;
        ++t;
    }

    while ( ! ( a & 1 ) )
        a >>= 1;

    while ( ! ( b & 1 ) )
        b >>= 1;

    while ( a != b )
    {
        if ( a > b )
        {
            a -= b;

            do
            {
                a >>= 1;
            }
            while ( ! ( a & 1 ) );
        }

        else
        {
            b -= a;

            do
            {
                b >>= 1;
            }
            while ( ! ( b & 1 ) );
        }
    }

    return a << t;
}
ll dcount(ll n) {
    if (n == 1)    // 1 is a tricky number,
        return 1;  // so we'll handle it separately
    ll count = 0;
    ll sqr =(ll)sqrt(n);
    for (ll i = 1; i <= sqr; i++)
        if (n % i == 0)
            count += 2;
    if (sqr * sqr == n)
        count--;
    return count;
}

int main()
{
    ll t;
    ll n,r,x,ans;
    cin>>t;
    while(t--)
    {
        ll temp;
        ans=0;
        cin>>n>>r;
        ans=(n-dcount(r-1));
        temp=gcd(ans,n);
        ans=(ans)/temp;
        ll den=n/temp;
        cout<<ans<<"/"<<den<<endl;

    }
}
