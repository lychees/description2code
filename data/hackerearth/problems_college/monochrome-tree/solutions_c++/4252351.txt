#include <bits/stdc++.h>
#define ll long long
using namespace std;
vector < ll int > v[100010];
ll int a[100010],g[100010],vis[100010],dp[100010][2];
ll int n,m,cnt;

ll int dfs(ll int x,ll int y,ll int par)
{
    ll int i,j,flg=0,tot1=1,tot2=0;
    //cout<<"vis"<<x<<endl;

    if(dp[x][y]!=-1)
        return dp[x][y];

    if(g[x]!=((a[x]+y)%2) )
        {//cout<<"incr"<<y<<endl;
        flg=tot2=tot1=1;
        }

	if(flg==0)
        tot1=1e9;

    if(flg==0)// invert including subtrees
    {
        tot1=2;
        for(i=0;i<v[x].size();i++)
            if(v[x][i]!=par)
                tot1+=dfs(v[x][i],(y+1)%2,x);
    }
    else{
        tot1=1;
    for(i=0;i<v[x].size();i++)
        if( v[x][i]!=par)
            tot1+=dfs(v[x][i],(y+1)%2,x);
    }

    for(i=0;i<v[x].size();i++)// invert this node only
        if(v[x][i]!=par)
            tot2+=dfs(v[x][i],y%2,x);

    return dp[x][y]=min(tot1,tot2);



}
int main()
{
    //freopen("input.txt","r",stdin);

    ll int i,x,y;
    cin>>n;

    for(i=0;i<n-1;i++)
    {
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }

    for(i=1;i<=n;i++)
        dp[i][0]=dp[i][1]=-1;

    for(i=1;i<=n;i++)
        cin>>a[i];

    for(i=1;i<=n;i++)
        cin>>g[i];

    cout<<dfs(1,0,0)<<endl;

    //cout<<cnt<<endl;
}
