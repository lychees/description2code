#include<bits/stdc++.h>
using namespace std;
#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 0x3f3f3f3f
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()
ll derange[101];
ll C[101][101];
void prec(int n)
{
    int i , j;
    derange[0] = 1;
    derange[1] = 0;
    for(i=2;i<=n;i++)
    {
        derange[i] = ((i-1)*(derange[i-1]+derange[i-2]))%MOD;
    }
    for(i=0;i<=n;i++)
    {
        for(j=0;j<=i;j++)
        {
            if(i == j || j == 0)
                C[i][j] = 1;
            else
                C[i][j] = (C[i-1][j] + C[i-1][j-1])%MOD;
        }
    }
}
ll pw(ll a,ll b,ll m)
{
    ll r = 1;
    while(b)
    {
        if(b&1)
            r = (r*a)%m;
        b >>= 1;
        a = (a*a)%m;
    }
    return r;
}
int main()
{
    int n,i;
    scanf("%d",&n);
    assert(1 <= n && n <= 100);
    int l,r;
    scanf("%d%d",&l,&r);
    assert(0 <= l && l <= r);
    assert(0 <= r && r <= n);
    prec(n);
    ll p = 0 , q = 0;
    for(i=0;i<=n;i++)
    {
        ll ways = (derange[i] * C[n][i])%MOD;
        if(l <= i && i <= r)
        {
            p += ways;
            p %= MOD;
        }
        q += ways;
        q %= MOD;
    }
    ll ans = (p * pw(q,MOD-2,MOD))%MOD;
    printf("%lld\n",ans);
    return 0;
}