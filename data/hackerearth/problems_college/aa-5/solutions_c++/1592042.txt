#include <bits/stdc++.h>
using namespace std;
int n, k;
int first_x[3005], first_y[3005], second_x[3005], second_y[3005];
char c[3005];
vector < int > v[3005];
int main() {
    ios_base::sync_with_stdio(0);
    int n,m;
    cin>>n>>m;
    for (int i = 1; i <= n; i++) {
        v[i].resize(n);
        for(int j=0; j<n; j++) v[i][j] = j+1;
    }
    for(int i=1; i<=m; i++) {
      cin>>first_x[i]>>first_y[i]>>second_x[i]>>second_y[i]>>c[i];
      if(first_x[i]>second_x[i]) swap(first_x[i],second_x[i]);
      if(first_y[i]>second_y[i]) swap(first_y[i],second_y[i]);
    }
    int ans = 0;
    for (int i = m; i >= 0; i--) {
        int X1 = first_x[i];
        int Y1 = first_y[i];
        int X2 = second_x[i];
        int Y2 = second_y[i];
        for (int j = X1; j <= X2; j++) {

            vector < int >::iterator lower =
              lower_bound(v[j].begin(), v[j].end(), Y1);
            vector < int >::iterator upper =
              upper_bound(v[j].begin(), v[j].end(), Y2);
            if (lower == v[j].end())
                continue;
            int p1 = (lower - v[j].begin());
            int p2 = (upper - v[j].begin());
            if (c[i]=='b') {
                ans += (p2 - p1);
            }
            v[j].erase(lower, upper);
        }
    }
    cout << n * n - ans;
    return 0;
}
