#include<bits/stdc++.h>

#define gc getchar
#define ii(x) scanf(" %d", &x)
#define ill(x) scanf(" %lld", &x)
#define ll long long
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define set(a,b) memset(a,b,sizeof(a))
#define clinic(a) memset(a,0,sizeof(a))
#define rep(i,a,b) for(i=a;i<b;i++)

using namespace std;

void in(int &x){
    register int c=gc();
    x=0;
    for(;(c<48||c>57);c=gc());
    for(;c>47&&c<58;c=gc()){x=(x<<1)+(x<<3)+c-48;}
}

ll f1[100005],f2[100005],f3[100005],a[100005],n;

void updatef1(ll i, ll val){
	while(i<=n){
		f1[i]+=val;
		i+=(i&-i);
	}
}

void updatef2(ll i, ll val){
	while(i<=n){
		f2[i]+=val;
		i+=(i&-i);
	}
}

void updatef3(ll i, ll val){
	while(i<=n){
		f3[i]+=val;
		i+=(i&-i);
	}
}

ll solvef1(ll i){
	ll ans=0;
	while(i>0){
		ans+=(f1[i]);
		i-=(i&-i);
	}return ans;
}

ll solvef2(ll i){
	ll ans=0;
	while(i>0){
		ans+=(f2[i]);
		i-=(i&-i);
	}return ans;
}

ll solvef3(ll i){
	ll ans=0;
	while(i>0){
		ans+=(f3[i]);
		i-=(i&-i);
	}return ans;
}

int main()
{
	ll q,i,k,s,l,r,sum;
	ill(n);ill(q);
	clinic(f1);clinic(f2);clinic(f3);
	rep(i,1,n+1){
		ill(a[i]);
		updatef1(i,(i)*a[i]);
		updatef2(i,(n-i+1)*a[i]);
		updatef3(i,a[i]);
	}
	while(q--){
		ill(i);
		if(i&1){
			ill(k);ill(l);ill(r);
			sum=0;
			if(k<=l){
				sum=solvef1(r)-solvef1(l-1);
				//cout << solvef1(r) << " " << solvef1(l-1) << " ";
				sum-=(k*(solvef3(r)-solvef3(l-1)));
				//cout << solvef3(r) << " " << solvef3(l-1) << endl;
			}
			else if(k>=r){
				sum=solvef2(r)-solvef2(l-1);
				//cout << solvef2(r) << " " << solvef2(l-1) << " ";
				sum-=((n-k+1)*(solvef3(r)-solvef3(l-1)));
				//cout << solvef3(r) << " " << solvef3(l-1) << endl;
			}
			else{
				sum=(solvef1(r)-solvef1(k-1));
				sum-=(k*(solvef3(r)-solvef3(k-1)));
				sum+=(solvef2(k)-solvef2(l-1));
				sum-=((n-k+1)*(solvef3(k)-solvef3(l-1)));
			}
			cout << sum << endl;
		}else{
			ill(k);ill(s);
			//updatef1(k,-(k-1)*a[k]);updatef2(k,(k-n)*a[k]);updatef3(k,-a[k]);
			updatef1(k,(k)*s);updatef2(k,(n-k+1)*s);updatef3(k,s);
			a[k]+=s;
		}
	}

    return 0;
}