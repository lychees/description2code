/*Sahil Sondhi*/
 
#include <iostream>
#include<vector>
#include<cmath>
#include <iomanip>
#include<string>
#include<algorithm>
#include<sstream>
#include<cstdio>
#include<cstring>
#include<queue>
#include<stack>
#include<list>
#include<map>
#include<cctype>
#include<limits.h>
 
#define scan(x) scanf("%d",&x)
#define forall(i,x,n) for(int i=x;i<n;i++)
#define forl(i,x,n) for(long i=x;i<n;i++)
#define forequal(i,x,n) for(int i=x;i<=n;i++)
#define scanl(x) scanf("%ld", &x)
#define scanll(x) scanf("%lld", &x)
#define minimum(a,b) (a>=b?b:a)
#define maximum(a,b) (a<=b?b:a)
#define scanfloat(x) scanf("%f", &x)
//#define mod 1000000007
#define swap(xxx,yyy) { xxx=xxx+yyy; yyy=xxx-yyy; xxx=xxx-yyy; }
#define MAXARRAY 730000
#define gcd(a,b) __gcd(a,b)
#define LL long long
#define LD long double
//#define sqroot(x) (exp(log(x)/2)) //square root without sqrt function
//#define cbroot(x) (exp(log(x)/3)) //cube root without pow function
#define ULL unsigned long long
/*#define p(x) cout<< x ;
#define ps(x) cout<< x <<" ";
#define ps() cout<<" ";
#define pn(x) cout<< x <<endl;
#define pn() cout<<endl;
*/
#define countbits1(x) __builtin_popcount(x) //counts number of bits in a x that are 1.
 
 
using namespace std;

LL a[1048599];
LL l[1000006],r[1000006];
int main()
{
	int t;
	cin>>t;
	
	while(t--)
	{
		LL n;
		cin>>n;
		forall(i,1,n+1)
		 cin>>a[i];
		int hash[1048599]={0};
		LL left=1,right=2,numl=0,numr=0;

		while( right <= n+1 )
		{
		
			for(int i=right-1;i>=left;i--)
			{
				if(a[i]!=0 && hash[i]==0)
				 {
					r[numr++] = a[i];
					hash[i]=1;
					break;
				 }
				else if(hash[i]==1)
				 break;
			}
		
			forall(i,left,right)
			{
				if(a[i]!=0 && hash[i]==0)
				 {
					l[numl++] = a[i];
					hash[i]=1;
					break;
					
				 }
				else if(hash[i]==1)
				 break;
			}
			
		
			left=left<<1;
			right=right<<1;
		
		
		
		}
		forall(i,0,numr)
		 cout<<r[i]<<endl;
		forall(i,0,numl)
		 cout<<l[i]<<endl;
		 
		cout<<endl;
	}
	
	
   return 0;
}