#include<cstdio>
#include<iostream>
#include<cmath>
using namespace std;

int main()
{	int t;
	long long int z,m,n,sq_rt,ct;
	cin>>t;
	while ( t-- > 0 )
	{	cin>>z>>m>>n;
		sq_rt=sqrt(z);
		ct=0;
		if ( n < m )
		{	m=m^n;
			n=m^n;
			m=m^n;
		}
		for ( int i=1; i <= m && i <= sq_rt; i++ )
		{	if ( z%i == 0 && z/i <= n )
			{	ct++;
				if ( i <= n && z/i <= m && i != z/i )
					ct++;			
			}
		}
		cout<<ct<<endl;
	}
	return 0;
}
/*
Any number Z=x*y
100
1*100
2*50
4*25
5*20
10*10

rest all just mirror images...
all factors <= sqrt(100) * factors >= sqrt(100)
using this property from Sieve of Eratosthenes to reduce search space to O(10^6) and then brute force
*/