#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007

long long mat_power(long long n) {
	
	long long A[2][2]  = {1,1,1,0};
	long long B[2][1] = {1,0};
	long long result[2][2] = {1,0,0,1};
	int multiply[2][2];
	while(n) {
		if(n&1) {
			for(int i=0;i<2;i++) {
				for(int j=0;j<2;j++) {
					multiply[i][j] = 0;
					for(int k=0;k<2;k++) {
						multiply[i][j] = ( multiply[i][j] + (result[i][k]* A[k][j]) )%mod;
 					}
				}
			}
			
			for(int i=0;i<2;i++) {
				for(int j=0;j<2;j++) {
					result[i][j] = multiply[i][j];
				}
			}
		}
		
		
		n>>=1;
		
		for(int i=0;i<2;i++) {
			for(int j=0;j<2;j++) {
				multiply[i][j] = 0;
				for(int k=0;k<2;k++) {
					multiply[i][j] = ( multiply[i][j] + (A[i][k]*A[k][j]) )%mod;
				}
			}
		}
		
		for(int i=0;i<2;i++) {
			for(int j=0;j<2;j++) {
				A[i][j] = multiply[i][j];
			}
		}
	}
	long long ans = ((result[0][0]*B[0][0])%mod+(result[0][1]*B[1][0])%mod)%mod;

	return ans;
}

int main()
{
	int q;
	cin>>q;
	while(q--) {
		long long n;
		cin>>n;
		if(n<=4) {
			cout<<1<<"\n";
			continue;
		}
		n = (n+1)/2;
		n--;
		long long res = mat_power(n);
		res = (res*res)%mod;
		cout<<res<<"\n";
	}
}
