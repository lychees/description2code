#include <iostream>
#include <cmath>
using namespace std;
 
const int MAX=100000;
static int a[1000001],p[100001];
int prime(int n)
{
	int i=2,k=0;
	for (i=2;i<=n;i++) a[i]=0;
	i=2;
	while (i<=n)
	{
		if (a[i]==0)
		{
			p[k++]=i;
			if (i>10000)
			{
				i+=1;
				continue;
			}			
			if (i>=10000)
			{
				i+=1;
				continue;
			}
			int j=i*i;
			
			while (j<=n)
			{
				a[j]=1;
				j+=i;
			}
		}
		i+=1;
	}
	return k;
}
int gcd(int a , int b)
{
   if(b==0) return a;
   a%=b;
   return gcd(b,a);
}

static long long int ans[MAX+1];
long long int eut(int a,int pcount)
{
	int j=0;
	long long int ans=a;
	while (a>=p[j] && j<pcount)
	{
		if (a%p[j]==0)
		{
			ans/=p[j];
			ans*=(p[j]-1);
		}
		while (a%p[j]==0)
			a/=p[j];
		j++;
	}
	if (a!=1)
	{
		ans/=a;
		ans*=(a-1);
	}
	return ans;
}
void init(int pcount)
{
	ans[0]=0;
	for (int i=1;i<MAX+1;i++)
	{
		ans[i]=eut(i,pcount);
		
	}
}
int main()
{
	int pcount,t,n,aa,a,i,b;
	pcount=prime(100000);
	init(pcount);

	cin>>t;
	while (t--)
	{
		cin>>a>>b;
		int g=gcd(a,b);
		aa=0;
		for (i=1;i<=sqrt(g);i+=1)
		{
			if (g%i==0)
			{
				aa+=ans[i];
				if (i!=g/i) aa+=ans[g/i];
			}
			
		}
		cout<<aa<<endl;
	}
	return 0;
}	