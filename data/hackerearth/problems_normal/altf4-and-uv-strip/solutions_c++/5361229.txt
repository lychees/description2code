#include <iostream>
#include <vector>
 
using namespace std;
 
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
 
    int T;
    cin >> T;
    for(int ti = 0; ti < T; ti++){
        int n;
        cin >> n;
        vector<int> a(n);
        vector<int> h(30);
        int total = 0;
        int mask = 0;
        for(int i = 0; i < n; i++){
            string line;
            cin >> line;
            for(int j = 0; j < 30; j++){
                if(line[j] == 'H'){
                    h[j]++;
                    total++;
                    a[i] |= (1 << j);
                }
            }
            mask ^= a[i];
        }
 
        int changes = __builtin_popcount(mask);
        int max_holes = 0;
        for(int i = 0; i < n; i++){
            int holes = total - __builtin_popcount(a[i]);
            for(int j = 0; j < 30; j++){
                if(mask & (1 << j)  and (h[j] - (( a[i] >> j) & 1)) < n - 1){
                    holes++;
                }
            }
            max_holes = max(max_holes, holes);
        }
 
        cout << changes << ' ' << max_holes << '\n';
 
 
 
    }
}