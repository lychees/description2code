#define _CRT_SECURE_NO_WARNINGS
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll; typedef vector<pair<long long,long long> > vpll;
typedef vector<string> vs; typedef long double ld;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

bool check(vector<int> a, vector<int> b) {
	int n = a.size(), m = b.size();
	sort(all(a), greater<int>());
	sort(all(b), greater<int>());
	int sum1 = 0, sum2t = 0;
	int j = m-1;
	rer(k, 1, n) {
		sum1 += a[k-1];
		while(j >= 0 && b[j] <= k * 4) {
			sum2t += b[j];
			-- j;
		}
		int sum2 = sum2t + (j + 1) * (k * 4);
		if(sum1 > sum2) return false;
	}
	return true;
}

int main() {
	int T;
	scanf("%d", &T);
	rep(ii, T) {
		int n, m;
		scanf("%d%d", &n, &m);
		vector<int> a(n), b(m);
		rep(i, n) scanf("%d", &a[i]);
		rep(i, m) scanf("%d", &b[i]);
		vector<vector<int> > ans(n, vector<int>(m));
		rep(i, n) a[i] -= m;
		rep(j, m) b[j] -= n;
		rep(i, n) for(int j = m-1; j >= 0; -- j) {
			a[i] -= 4, b[j] -= 4;
			for(int d = 4; d >= 0; -- d) {
				if(a[i] >= 0 && b[j] >= 0 && check(a, b)) {
					ans[i][j] = d + 1;
					break;
				}
				++ a[i], ++ b[j];
			}
		}
		rep(i, n) {
			rep(j, m) {
				if(j != 0) putchar(' ');
				printf("%d", ans[i][j]);
			}
			puts("");
		}
	}
	return 0;
}