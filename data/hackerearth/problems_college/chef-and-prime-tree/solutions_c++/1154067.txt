#include<stdio.h>
#include<iostream>
#include<cstring>

using namespace std;

bool arr[5000006];
void markMultiples(bool arr[], int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr[ num-1 ] = 1; // minus 1 because index starts from 0.
        ++i;
    }
}

// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0

        memset(arr, 0, sizeof(arr));

        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=1; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
               // printf("%d ", i+1);
                markMultiples(arr, i+1, n);
            }
        }
    }
}

int main()
{
    long long t;
    scanf("%lld", &t);
     SieveOfEratosthenes(5000006);

    while(t--)
    {
      long long a, b;
      scanf("%lld %lld", &a, &b);


    long long ans=0;

        arr[0]=1;
        if(arr[a-1]==1)
          ans=ans+a;
        else
            ans=ans-a;

        if(arr[b-1]==1 && a!=b)
          ans=ans+b;
        else if(arr[b-1]==false && a!=b)
            ans=ans-b;


      while(a!=b)
      {

        if(a>b)
        {
            a=a/2;
            if(arr[a-1]==1 && a!=b)
                ans=ans+a;
            else if(arr[a-1]==0 && a!=b)
                ans=ans-a;

        }
        else
        {
            b=b/2;
            if(arr[b-1]==1 && a!=b)
                ans=ans+b;
            else if(arr[b-1]==0 && a!=b)
                ans=ans-b;

        }
      }

    printf("%lld\n", ans);
    }
}

