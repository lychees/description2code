#include<iostream>
#include<algorithm>
#include<set>
using namespace std;
bool inside(int x1, int y1, int x2, int y2, int x, int y)
{
	return x >= x1 && x <= x2 && y >= y1 && y <= y2;
}
int cnt(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4)
{
	int ans = 0;
	set<pair<int, int> >pts;
	pts.insert(make_pair(x1, y1));
	pts.insert(make_pair(x2, y2));
	pts.insert(make_pair(x1, y2));
	pts.insert(make_pair(x2, y1));
	pts.insert(make_pair(x3, y3));
	pts.insert(make_pair(x3, y4));
	pts.insert(make_pair(x4, y3));
	pts.insert(make_pair(x4, y4));
	pts.insert(make_pair(x1, y3));
	pts.insert(make_pair(x1, y4));
	pts.insert(make_pair(x2, y3));
	pts.insert(make_pair(x2, y4));
	pts.insert(make_pair(x3, y1));
	pts.insert(make_pair(x3, y2));
	pts.insert(make_pair(x4, y1));
	pts.insert(make_pair(x4, y2));
	for (auto it = pts.begin(); it != pts.end(); it++)
	{
		if (inside(x1, y1, x2, y2, (*it).first, (*it).second) && inside(x3, y3, x4, y4, (*it).first, (*it).second)) ans++;
	}
	return ans;
}
int main()
{
	int t;
	cin >> t;
	for (int tt = 1; tt <= t; tt++)
	{
		int x1, y1, x2, y2;
		cin >> x1 >> y1 >> x2 >> y2;
		int x3, y3, x4, y4;
		cin >> x3 >> y3 >> x4 >> y4;
		int have = max(cnt(x1, y1, x2, y2, x3, y3, x4, y4), cnt(x3, y3, x4, y4, x1, y1, x2, y2));
		if (have >= 4)
		{
			cout << "Rectangle" << endl;
		}
		else if (have >= 2)
		{
			cout << "Line" << endl;
		}
		else if (have >= 1)
		{
			cout << "Point" << endl;
		}
		else
		{
			cout << "Apart" << endl;
		}
	}
}