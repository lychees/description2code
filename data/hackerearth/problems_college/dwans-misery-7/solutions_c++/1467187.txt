#include <bits/stdc++.h>
using namespace std;
inline long long inp( )
{
    long long n = 0 , s = 1 ;
    char p = getchar_unlocked( ) ;
    if( p == '-' )
        s = -1 ;
    while( ( p < '0' || p > '9' ) && p != EOF && p != '-' )
        p = getchar_unlocked( ) ;
    if( p == '-' )
        s = -1 , p = getchar_unlocked( ) ;
    while( p >= '0' && p <= '9' )
    {
        n = ( n << 3 ) + ( n << 1 ) + ( p - '0' ) ;
        p = getchar_unlocked( ) ;
    }
    return n * s ;
}
long long int findmaxsum(long long int arr[],long long int n){
long long int incl=arr[0];
long long int excl=0,excl_new;
long long int i;
for(i=1;i<n;i++){
excl_new=(incl>excl)?incl:excl;
incl=excl+arr[i];
excl=excl_new;
}
return ((incl>excl)?incl:excl);
}
int main() {
	long long int t,n,i,a,b,c,d;
    t=inp();//scanf("%lld",&t);
    while(t--){
    n=inp();//scanf("%lld",&n);
    long long ar[n+10];
    for(i=0;i<n;i++)ar[i]=inp();//scanf("%ld",&ar[i]);
    a=findmaxsum(ar,n);
    b=findmaxsum(&ar[1],n-1);
    d=findmaxsum(ar,n-1);
    if((a==b)||(n==1))printf("%lld\n",a);
    else{
        if(a==d){printf("%lld\n",a);continue;}
        c=(d>b)?d:b;
        printf("%lld\n",c);
    }
   }
   return 0;
}
