#include <bits/stdc++.h>
#include <stdio.h>    
#include <string.h>
using namespace std;
#define mod 1000000007

#define llu long long unsigned
#define lld long long
#define ld long
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld%lld",&a,&b)
#define sc3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("%lf%lf",&a,&b)
#define scf3(a,b,c) scanf("%lf%lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a) 
#define swap(a,b,t) t=a;a=b;b=t

#define proi pair <lld,pair<lld,lld> >
#define lim 100003
#define lim2 1005
lld A[lim],R[lim];
proi P[lim];

bool comp(proi a,proi b){
    return a.first<b.first;
}

lld root(lld a){
    while(A[a]!=a){
        A[a]=A[A[a]];
        a=A[a];
    }
    return a;
}

void unionP(lld a,lld b){
    A[a]=b;
}

lld kruskal(lld m){
    lld i,a,b,cost=0;
    for(i=1;i<=m;i++){
        a=root(P[i].second.first);
        b=root(P[i].second.second);
        if(a!=b){
            cost+=P[i].first;
            unionP(a,b);
        }
    }
    return cost;
}

int main(){
    lld t,q,p,T,i,k,j,a,b,a1,a2,b1,b2,pos,count,sum,n,h,m,cost;
    // sc(T);
    T=1;
    while(T--){
        sc2(n,m);
        for(i=1;i<=n;i++) A[i]=i;
        for(i=1;i<=m;i++){
            sc3(a,b,j);
            P[i]=make_pair(j,make_pair(a,b));
        }
        sort(P+1,P+m+1,comp);
        cost=kruskal(m);
        prL(cost);
    }
    return 0;
}