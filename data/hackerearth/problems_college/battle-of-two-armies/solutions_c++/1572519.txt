#include<bits/stdc++.h>
using namespace std;
int Prime[60100010];
int pos[60100010];
long long int ans[1000009];
#define prime(i) ((Prime[i>>5])&(1<<(i&(31))))
#define assign(j) (Prime[j>>5]|=(1<<(j&(31))))
#define LIMIT 1008
#define SLIMIT 50
int i,j,m,n,t,x,k,l,h;
void sieve()
{
ans[0]=-1;
ans[1]=0;
ans[2]=1;
ans[3]=1;
ans[4]=0;
ans[5]=1;
pos[0]=0;
assign(1);
pos[1]=2;
pos[2]=3;
for(k=2,l=3,i=5; i<=SLIMIT; k++,i=3*k-(k&1)-1)
if(prime(k)==0)
{
pos[l++]=i;
ans[i]=1;
for(j=i*i,h=((j+2)/3); j<=LIMIT; h+=(k&1)?(h&1?((k<<2)-3):((k<<1)-1)):(h&1?((k<<1)-1):((k<<2)-1)),j=3*h-(h&1)-1)
assign(h);
}
i=3*k-(k&1)-1;
for(; i<=LIMIT; k++,i=3*k-(k&1)-1)
if(prime(k)==0)
    {
        pos[l++] = i;
        ans[i]=1;
    }
}
int main()
{
      sieve();
      int n;
      int test;
      scanf("%d",&test);
      while(test--)
      {
        int an1=0,an2=0;
        scanf("%d",&n);
        int arr1[n],arr2[n];
        for(int i=0;i<n;i++)
            scanf("%d",&arr1[i]);
        for(int i=0;i<n;i++)
            scanf("%d",&arr2[i]);
        for(int i=0;i<n;i++)
        {
        if(ans[arr1[i]]==0)
        {
            if(ans[arr2[i]]==1)
            {
                if(arr2[i]>arr1[i])
                    an2+=arr2[i]-arr1[i];
                else
                    an1+=arr1[i]-arr2[i];
            }
            else
                an1+=arr1[i];
        }
        else
        {
            if(ans[arr2[i]]==1)
                an2+=arr2[i];
            else
            {
                if(arr2[i]>arr1[i])
                    an2+=arr2[i]-arr1[i];
                else
                    an1+=arr1[i]-arr2[i];
            }
        }
        }
        if(an2>an1)
            printf("The Primes\n");
        if(an2<an1)
            printf("The Composites\n");
        if(an1==an2)
            printf("Tie\n");
      }
   return 0;
}
