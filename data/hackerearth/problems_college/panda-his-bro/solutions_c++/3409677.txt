#include <bits/stdc++.h>
using namespace std;

vector<int> graph[100005];
bool visited[100005];

int maxDistance, maxNode;

void dfs(int n, int distance)
{
	visited[n] = true;
	
	if (maxDistance < distance)
	{
		maxDistance = distance;
		maxNode = n;
	}
	
	for (auto it: graph[n])
	{
		if (!visited[it])
			dfs(it, distance+1);
	}
}

int main()
{
    int n, i, j, x, y;
    
    cin >> n;
    for (i = 0; i < n; i++)
    {
    	cin >> x >> y;
    	graph[x].push_back(y);
    	graph[y].push_back(x);
    }
    
    maxDistance = 0;
    
    dfs(1, 0);
    
    memset(visited, false, sizeof(visited));
    
    dfs(maxNode, 0);
    
    cout << maxDistance;
    
    return 0;
}
