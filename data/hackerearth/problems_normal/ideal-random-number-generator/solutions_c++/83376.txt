
#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdlib>
#include<queue>
#include<map>
#include<set>
#include<string>
#include<sstream>
#include<climits>
#include<vector>
#include<cstring>
#include<stack>

using namespace std;

#define REP(i,s,n)  for (int i=(s),_n=(n);i<=_n;i++)
#define FOR(i,s,n)  for (int i=(s),_n=(n);i<_n;i++)
#define REPD(i,e,s)  for (int i=(e),_s=(s);i>=_s;i--)
#define tr(container, it) \
   for (typeof(container.begin()) it=container.begin(); it!=container.end();it++)
#define ALL(x) x.begin(),x.end()
#define debug(args...)	{dbg,args; cerr<<endl;}
#define PB push_back
#define MP make_pair
#define EPS 1e-8
#define INF (int)(1e9)
typedef long long LL;

// #include<iomanip>

// setbase - cout << setbase (16); cout << 100 << endl; Prints 64
// setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
// setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx

struct debugger {
   template<typename T> debugger& operator , (const T& v) {	
      cerr<<v<<" ";	
      return *this;	
   }
} dbg;

int main() {
   long long a,b,c;
   cin >> a>> b >> c;
   LL ra=2*a*b;
   LL ta=c*c;
   if (a+b<=c) ta=ra;
   else {
      if (a<c) ta-=(c-a)*(c-a);
      if (c>b) ta-=(c-b)*(c-b);
   }
   cout << ta/__gcd(ra,ta) << "/" << ra/__gcd(ra,ta) << endl;
   return 0;
}