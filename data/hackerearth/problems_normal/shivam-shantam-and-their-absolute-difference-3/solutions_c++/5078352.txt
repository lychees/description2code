#include <bits/stdc++.h>
#define ll long long int
#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define pb push_back
#define mk make_pair
#define fi first
#define se second
#define pi pair < int ,int >
using namespace std;
const int MOD = 1e9 + 7;
int dp1[1000001];
int dp2[1000001];
int main() {
//START
int n, d;
si(n);
int a[n], b[n];
for(int i = 0; i < n; i++) si(a[i]);
for(int i = 0; i < n; i++) si(b[i]);
si(d);
memset(dp1, 0, sizeof dp1);
memset(dp2, 0, sizeof dp2);
dp1[0] = 1; dp2[0] = 1;
for(int j = 0; j < n; j++) {
for(int i = 1000000; i >= 0; i--) {
if(dp1[i] != 0 && i+a[j] < 1000001) {
dp1[i+a[j]] = (1LL * dp1[i+a[j]] + dp1[i])%MOD;
}
}
}
for(int j = 0; j < n; j++) {
for(int i = 1000000; i >= 0; i--) {
if(dp2[i] != 0 && i+b[j] < 1000001) {
dp2[i+b[j]] = (1LL * dp2[i+b[j]] + dp2[i])%MOD;
}
}
}
for(int i = 1; i <= 1000000; i++) {
dp2[i] = (1LL * dp2[i] + dp2[i-1])%MOD;
}
ll ans = 0;
for(int i = 0; i < 1000001; i++) {
if(dp1[i] == 0) continue;
int lval = 0;
if(i - d <= 0) {
lval = 0;
} else {
lval = dp2[i-d-1];
}
int rval = 0;
if(i + d > 1000000) {
rval = dp2[1000000];
} else {
rval = dp2[i+d];
}
ans = (ans + (1LL * ((rval - lval + MOD) % MOD)*dp1[i])%MOD)%MOD;
}
cout << ans << endl;
return 0;
}