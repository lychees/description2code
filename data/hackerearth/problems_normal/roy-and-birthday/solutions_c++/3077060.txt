#include<bits/stdc++.h>
#define MAXN 1000005
#define MOD 1000000007
using namespace std;

long long fastPow(long long a, long long n) {
	long long b = a, ret = 1;
	while(n) {
		if(n & 1) ret = (ret * b) % MOD;
		b = (b * b) % MOD;
		n >>= 1;
	}
	return ret;
} 

long long fact[MAXN], inv[MAXN];

void precompute() {
	fact[0] = 1;
	inv[0] = 1;
	fact[1] = 1;
	inv [1] = 1;
	for(int i = 2; i < MAXN; i++) {
		fact[i] = (i * fact[i-1]) % MOD;
		inv[i] = fastPow(fact[i], MOD - 2);
	}
}

int main() {
	
	precompute();
	int T;
	scanf("%d", &T);
	
	while(T--) {
		
		long long rep[27];
		fill(rep, rep + 27, 0);
		
		string s;
		cin >> s;
		int k = s.length(), m = 0;
		
		for(int i = 0; i < k; i++) {
			rep[s[i] - 'a']++;
			if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {
				   m++;
			   }
		}
		
		int n = k - m;
		
		if(n + 1 < m) {
			printf("-1\n");
			continue;
		}
		
		long long ans = (fact[n + 1] * inv[n - m + 1]) % MOD;
		ans = (ans * fact[n]) % MOD;
		
		for(int i = 0; i < 26; i++) {
			if(rep[i]) ans = (ans * inv[rep[i]]) % MOD;
		}
		
		printf("%lld\n", ans);
	}
	return 0;
}