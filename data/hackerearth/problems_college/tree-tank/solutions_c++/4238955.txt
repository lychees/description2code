#include<bits/stdc++.h>
using namespace std;
vector< pair<long long,long long > > v[100005];
vector <  long long int > ve[100005];
long long k;
int n;
long long mid;
long long int size[100005];
int vis[100005];
long long dis[100005];
queue< long long int > q;
int parent[100005];
vector<long long int>xx;
vector<long long>yy;
int visi[100005];
void dfs(long long int ind)
{
	vis[ind]=1;
	size[ind]=1;
	xx.push_back(ind);
	for(int i=0;i<ve[ind].size();i++)
	{
		if(!vis[ve[ind][i]])
		{
			dfs(ve[ind][i]);
			parent[ve[ind][i]]=ind;
			size[ind]+=size[ve[ind][i]];
		}
	}
}
void bfs(long long int ind)
{
	while(!q.empty())
	q.pop();
	q.push(ind);
	visi[ind]=1;
	dis[ind]=0;
	while(!q.empty())
	{
		long long int idx=q.front();
		q.pop();
		for(int o=0;o<ve[idx].size();o++)
		{
			if(!visi[ve[idx][o]])
			{
				visi[ve[idx][o]]=1;
				q.push(ve[idx][o]);
				parent[ve[idx][o]]=idx;
				dis[ve[idx][o]]=dis[idx]+1;
			}
		}
	}
}
long long func()
{
	int i,j;
	long long answ=0;
	for(i=1;i<=n;i++)
	{
		ve[i].clear();
		size[i]=0;
		vis[i]=0;
		dis[i]=0;
	}
	for(i=1;i<=n;i++)
	{
		for(j=0;j<v[i].size();j++)
		{
			long long x,y;
			x=v[i][j].first;
			y=v[i][j].second;
			if(y>mid)
			{
				
			}
			else
			{
				ve[i].push_back(x);
			}
		}
	}
	parent[1]=0;
	for(i=1;i<=n;i++)
	{
		if(!vis[i])
		{
			long long answ2=1E17;
			long long int tt;
			xx.clear();
			dfs(i);
			while(!q.empty())
			q.pop();
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				visi[tt]=0;
				dis[tt]=0;
				parent[tt]=-1;
			}
			bfs(i);
			long long int maxi=-1;int ind;
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				if(dis[tt]>maxi)
				{
					maxi=dis[tt];
					ind=tt;
				}
			}
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				visi[tt]=0;
				dis[tt]=0;
				parent[tt]=-1;
			}
			bfs(ind);
			maxi=-1;
			int idx;
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				if(dis[tt]>maxi)
				{
					maxi=dis[tt];
					idx=tt;
				}
			}
			yy.clear();
			//yy.push_back(idx);
			while(1)
			{
				if(ind==idx)
				{
					yy.push_back(ind);
					break;
				}
				yy.push_back(idx);
				idx=parent[idx];
			}
			for(j=0;j<yy.size();j++)
			{
				tt=yy[j];
				for(int kk=0;kk<xx.size();kk++)
				{
					dis[xx[kk]]=0;
					visi[xx[kk]]=0;
				}
				bfs(tt);
				long long a=0;
				
				for(int kk=0;kk<xx.size();kk++)
				a+=dis[xx[kk]];
				answ2=min(answ2,a);
			}
			answ+=answ2;
			for(j=0;j<xx.size();j+=1)
			visi[xx[j]]=0;
		}
	}
	return answ;
}
long long func1()
{
	int i,j;
	long long answ=0;
	for(i=1;i<=n;i++)
	{
		ve[i].clear();
		size[i]=0;
		vis[i]=0;
		dis[i]=0;
	}
	for(i=1;i<=n;i++)
	{
		for(j=0;j<v[i].size();j++)
		{
			long long x,y;
			x=v[i][j].first;
			y=v[i][j].second;
			if(y>mid)
			{
				
			}
			else
			{
				ve[i].push_back(x);
			}
		}
	}
	parent[1]=0;
	for(i=1;i<=n;i++)
	{
		if(!vis[i])
		{
			long long answ2;
			long long int tt;
			xx.clear();
			dfs(i);
			while(!q.empty())
			q.pop();
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				visi[tt]=0;
				dis[tt]=0;
			}
			bfs(i);
			long long int maxi=-1;int ind;
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				if(dis[tt]>maxi)
				{
					maxi=dis[tt];
					ind=tt;
				}
			}
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				visi[tt]=0;
				dis[tt]=0;
			}
			bfs(ind);
			maxi=-1;
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				if(dis[tt]>maxi)
				{
					maxi=dis[tt];
				}
			}
			long long int c1=-1,c2=-1;
			if(maxi%2==0)
			{
				for(j=0;j<xx.size();j++)
				{
					tt=xx[j];
					if(dis[tt]==(maxi/2))
					c1=tt;
				}
			}
			else
			{
				for(j=0;j<xx.size();j++)
				{
					tt=xx[j];
					if(dis[tt]==(maxi/2))
					c1=tt;
					if(dis[tt]==(maxi+1)/2)
					c2=tt;
				}
			}
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				visi[tt]=0;
				dis[tt]=0;
			}
			long long a1=0,a2=0;
			if(c1!=-1)
			{
				bfs(c1);
				for(j=0;j<xx.size();j++)
				a1+=dis[xx[j]];
				answ2=a1;
			}
			for(j=0;j<xx.size();j++)
			{
				tt=xx[j];
				visi[tt]=0;
				dis[tt]=0;
			}
			if(c2!=-1)
			{
				bfs(c2);
				for(j=0;j<xx.size();j++)
				a2+=dis[xx[j]];
				answ2=min(answ2,a2);
			}
			answ+=answ2;
			for(j=0;j<xx.size();j+=1)
			visi[xx[j]]=0;
		}
	}
	return answ;
}
int main()
{
	scanf("%d %lld",&n,&k);
	int i,j;
	long long a,b,c;
	for(i=1;i<=n-1;i++)
	{
		scanf("%lld %lld %lld",&a,&b,&c);
		v[a].push_back(make_pair(b,c));
		v[b].push_back(make_pair(a,c));
	}
	long long low=0;
	long long high=1e9;
	long long ans=-1;
	if(n<=10000)
	{
		while(low<=high)
		{
			mid=(low+high)/2LL;
			if(func()>k)
			{
				high=mid-1;
			}
			else
			{
				ans=max(ans,mid);
				low=mid+1;
			}
		}
	}
	else
	{
		while(low<=high)
		{
			mid=(low+high)/2LL;
			if(func1()>k)
			{
				high=mid-1;
			}
			else
			{
				ans=max(ans,mid);
				low=mid+1;
			}
		}
	}
	printf("%lld\n",ans);
}