#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define maxm 100005
int sum[maxm];

map<int, long long int> m;
struct trie
{
	int d;
	struct trie *a[2];
};
struct trie * new_node(int x)
{
	struct trie *t = (struct trie *)malloc(sizeof(struct trie));
	t->d = x;
	t->a[0]=t->a[1]=NULL;
	return t;
}

void insert(struct trie *root, int x)
{
	struct trie *t;
	for(int i=30; i>=0; i--)
	{
		int temp = (x>>i)&1;
		
		if(root->a[temp] != NULL)
			root = root->a[temp];
		else
		{
			t = new_node(temp);
			root->a[temp]=t;
			root=t;
		}
	//	x = x>>1;
	}
}

void solve(struct trie *root, int x)
{
	int res = 0;
	
	for(int i=30; i>=0; i--)
	{
		int t = (x>>i)&1;
		//cout<<t<<" ";
		if(root->a[t] != NULL)
		{ //cout<<"if\n";
			res = res<<1;
			res = res|t;
			//cout<<res<<"#\n";
			root = root->a[t];
		}
		else
		{
			//cout<<"else\n";
			t ^= 1;
			res=res<<1;
			res = res|t;
			root = root->a[t];
		}
	}
	
	printf("%d %lld\n", res, m[res]);//cout<<res<<" "<<m[res]<<"\n";
}

int main()
{
    int n, q, temp;
    struct trie *root = new_node(100);
    memset(sum, 0, sizeof(sum));
    sum[0]=m[0]=1;
    scanf("%d", &n);
    int arr[n];
    for(int i=0; i<n; i++)
    	scanf("%d", &arr[i]);
    for(int i=0; i<n; i++)
    {
    	for(int j=maxm; j>=0; j--)
    	{
    		if(sum[j])
    		{
    			sum[j+arr[i]] = 1;
    			m[j+arr[i]] = (m[j+arr[i]]+m[j])%mod;
    		}
    	}
    }
    
    for(int j=maxm; j>0; j--)
    {
    	if(sum[j])
    		insert(root, j);
    }
    
    cin>>q;
    while(q--)
    {
    	scanf("%d", &temp);
    	solve(root, temp);
    }
   
    
    return 0;
}
