#include <bits/stdtr1c++.h>

using namespace std;

struct tri{
	int cor, tam;
	tri( int cor = 0, int tam = 0 ) : cor(cor), tam(tam) { }
	bool operator < ( const tri &a ) const{
		if( cor != a.cor ) return cor > a.cor;
		return tam > a.tam;
	}
};

int main(){
	ios::sync_with_stdio(false);
	multiset < double > az, am;
	int n, cor, tam;
	cin >> n;
	for( int i = 0; i < n; i++ ){
		cin >> cor >> tam;
		if( cor == 1 ) az.insert(tam);
		else am.insert(double(tam)*sqrt(2));
	}
	int ans = 0;
	multiset < double > :: iterator it, i;
	for( i = az.begin(); i != az.end(); i++ ){
		it = am.lower_bound(*i);
		if( it != am.end() ){
			double val = *i;
			double num = *it;
			if( !((val*sqrt(2)) < (num/sqrt(2))) ){
				ans++;
				am.erase(it);
			}
		}
	}

	cout << ans << "\n";
	return 0;
}