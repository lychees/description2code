//Archit Rai
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(c) (c).begin(),(c).end()
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define REP(i,a,b) for(int i=a;i<b;i++)
#define MOD 1000000007
#define endl '\n'
#define PIN(n) printf("%d\n",n)
#define PLLN(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)
typedef long long int ll;
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
	return (a*y)%MOD;
    return y%MOD;
}
//Template ends here
vector<int> graph[100010];
int dp[100010][2];
int ori[100010],des[100010];
void dfs(int src,int p)
{
    REP(i,0,sz(graph[src]))
	if(graph[src][i]!=p)
	    dfs(graph[src][i],src);
    int v1=0,v2=0;
    REP(i,0,sz(graph[src]))
    {
	if(graph[src][i]!=p)
	{
	    v1+=min(dp[graph[src][i]][0],1+dp[graph[src][i]][1]);
	    v2+=min(dp[graph[src][i]][1],1+dp[graph[src][i]][0]);
	}
    }
    if(ori[src]==des[src])
    {
	dp[src][0]=v1;
	dp[src][1]=1+min(v2,v1);
    }
    else
    {
	dp[src][0]=1+min(v1,v2);
	dp[src][1]=v2;
    }
}
int main()
{
    int n;
    si(n);
    REP(i,0,n-1)
    {
	int u,v;
	si(u),si(v);
	graph[u].pb(v);
	graph[v].pb(u);
    }
    REP(i,1,n+1)
	si(ori[i]);
    REP(i,1,n+1)
	si(des[i]);
    dfs(1,-1);
    printf("%d\n",min(dp[1][0],dp[1][1]+1));
    return 0;
}
