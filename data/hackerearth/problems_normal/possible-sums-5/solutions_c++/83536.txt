#include <iostream>
#include<algorithm>
#include<cstring>
using namespace std;
#define MAX 128
char valid[MAX][MAX*MAX];
int main()
{
	int t;
	cin>>t;
	while(t--){
		int n;
		cin >> n;
    	vector < int > a(n+1);
    	a[0]=0;
    	for(int i=1;i<=n;++i)
    		cin >> a[i];
    	sort(a.begin(),a.end());
    	int maxv=a[a.size()-1]*n;
    	int cnt=0;
    	memset(valid,0,MAX*MAX*sizeof(char));//just the first row is enough
    	valid[0][0]=1;
    	for(int i=1;i<=n;++i){
    		for(int sum=0;sum<=maxv;++sum){
    			valid[i][sum]=valid[i-1][sum];
    			if(!valid[i][sum])
    				if(a[i]<=sum) 
    					valid[i][sum]=valid[i-1][sum-a[i]];
    		}
    	}
   	for(int sum=0;sum<=maxv;++sum)
    	if(valid[n][sum]) cnt++;
    cout<<cnt<<endl;
    /*
    vector < bool > flag(maxv*n+1,false);
    flag[0]=true;
    for(int i=1;i<flag.size();++i)
       for(int j=0;j<n;++j)
       	if(a[j]>i) break;
       	else if(flag[i-a[j]]){	
       	 flag[i]=true;
       	 break;
       	}
    
    for(int i=1;i<flag.size();++i)
    if(flag[i]) cnt++;
    */
    
	}
    return 0;
}
