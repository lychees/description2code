//Author : Piyush Agarwal
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000007
#define inp1(a) scanf("%lld",&a);
#define outl(a) printf("%lld\n",a);
#define out(a) printf("%lld ",a);
#define line printf("\n");
#define FOR(i,b,e) for(i=b;i<=e;i++)
#define mp make_pair
#define pb push_back
#define inp2(a,b) scanf("%lld %lld",&a,&b)
#define getcx getchar_unlocked
#define chkbit(s,b) (s & (1<<b))
#define setbit(s,b) (s | (1<<b))
#define clrbit(s,b) (s &= ~(1<<b))
 
/*inline void finp(ll *a )
{
	ll n=0; int ch = getcx(); int sign = 1;
	while(ch < '0' || ch > '9')
	{
	if(ch == '-') sign=-1; ch = getcx();
	}
	while(ch >= '0' && ch <= '9')
	{
	n = (n << 3) + (n << 1) + ch - '0', ch = getcx();
	}
	*a = n * sign;
}*/
ll power(ll b,ll e)
{
	ll x=1;
	while(e>0)
	{
		if(e&1)
			x=x*b;
		b=b*b;
		e=e/2;
	}
	return x;
}  
ll gcd(ll a,ll b)
{
    if(b==0)
          return a;
    return gcd(b,a%b);
}
ll t,i,j,k,l,m,n,w[1000005],sum[1000005];
int main()
{
	ll q;
	inp2(n,q);
	sum[0]=0;
	for(i=1;i<=n;i++)
	{
		inp1(w[i]);
		sum[i]=w[i]+sum[i-1];
	}
	while(q--)
	{
		ll a,b,c,d;
		inp2(a,c);
		inp2(b,d);
		a++;b++;c++;d++;
		if(b<a)
		{
			ll temp=a;a=b;b=temp;
		}
		if(d<c)
		{
			ll temp=c;c=d;d=temp;
		}
		if(a>c)
		{
			ll temp=a;a=c;c=temp;
			    temp=b;b=d;d=temp;
		}
		ll ans;
		if(a<=c)
		{
			if(b<c)
			{
				ans=sum[b]-sum[a-1]+sum[d]-sum[c-1];
			}
			else
			{
				if(d>b)
					ans=sum[d]-sum[a-1];
				else
					ans=sum[b]-sum[a-1];
			}

		}
		printf("%lld\n",ans);
	}
   return 0;
}