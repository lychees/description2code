#include <bits/stdc++.h>
using namespace std ;
#define LL long long int
#define ft first
#define sd second
#define PII pair<int,int>
#define MAXN 111111
#define mp make_pair
#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)
#define sc(x) scanf("%d",&x)
#define scll(x) scanf("%lld",&x)
#define pr(x) printf("%lld\n",x)
#define prll(x) printf("%lld\n",x)
#define pb push_back
#define MOD 1000000007
#define inf INT_MAX/2
#define ASST(X,L,R) assert(X >= L && X <= R)

int t , n , DP[8][2222] , total , N[8] , DP1[2222];
vector<pair<int,int> > A ;
int main(){
    sc(t) ;
    while(t--){
        memset(DP,-1,sizeof DP) ;
        total = 0 ;
        for(int i=1;i<=7;i++){
            DP[i][0] = 0 ;
            sc(n) ;
            N[i] = n ;
            total += n ;
            A.resize(n+1) ;
            for(int j=1;j<=n;j+=1){
                sc(A[j].ft) ;
                sc(A[j].sd) ;
            }
            for(int j=1;j<=n;j++){
                for(int k=j;k<=n;k++){
                    if(DP[i][k-j+1]!=-1){
                        DP[i][k-j+1] = min(DP[i][k-j+1],A[k].sd-A[j].ft) ;
                    }else{
                        DP[i][k-j+1] = A[k].sd-A[j].ft ;
                    }
                }
            }
            A.clear() ;
        }

        int v = N[1] ;
        for(int i=2;i<=7;i++){
            v += N[i] ;
            for(int j=1;j<=v;j++){
                DP1[j] = INT_MAX ;
                for(int k=0;k<=min(j,N[i-1]);k++){
                    if(k <= N[i-1] && j-k <= N[i])
                    DP1[j] = min(DP1[j],DP[i-1][k]+DP[i][j-k]) ;
                }
            }
            for(int j=1;j<=v;j++)
                DP[i][j] = DP1[j] ;
            N[i] = v ;
        }
        total = ceil(total*3.0/4.0) ;
        cout << 7*24*60*60-DP1[total] << endl ;
    }
    return 0 ;//
}
