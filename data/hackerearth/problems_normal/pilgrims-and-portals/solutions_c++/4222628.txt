#include<bits/stdc++.h>
#define ll long long
using namespace std;
ll n,k;
ll dist[10000][10000];
ll dis[10000];
bool visited[10000];
int getMin()
{
    ll min = INT_MAX,min_index;
    for(ll v=1;v <= k;v++)
    {
        if(visited[v] == false && min > dis[v])
        {
            min_index = v;
            min = dis[v];
            
        }
        
        
    }
    return min_index;
    
}
void Dfs()
{
    
    ll v,u;
    for(ll i=0;i<=k;i++)
        visited[i] = false,dis[i] = INT_MAX;
   
    dis[1] = 0; 
    for(ll count = 1; count < k;count++)
    {
        u = getMin();
        visited[u] = true;
        for( v = 1; v <=k ;v++)
        {
            
            if(dist[u][v]!=INT_MAX && visited[v] == false && dis[v] > dist[u][v])
            dis[v] = dist[u][v];
           
                
            
            
        }
    }

}
void floydWarshall()
{
    for(ll k=1;k<=n;k++)
        for(ll i =1;i<=n;i++)
            for(ll j =1;j<=n;j++)
                    if(dist[i][j]>dist[i][k]+dist[k][j])
                        dist[i][j] = dist[i][k] + dist[k][j];
    
}
int main()
{
    ll t,m,a,b,c,ans=0;
    cin>>t;
    while(t--)
    {
       ans =0;
        cin>>n>>m>>k;
      
      for(ll i = 1;i<=n;i++)
        for(ll j = 1;j<=n;j++)
            dist[i][j] = INT_MAX;
        
        for(ll i=1;i<=n;i++)
            dist[i][i] = 0;
            
        for(ll i=1;i<=m;i++)
            {
            cin>>a>>b>>c;
            dist[a][b] = c;
            dist[b][a] = c;
            }
        
        
   
    
    floydWarshall();
    Dfs();
    for(ll i=1;i<=k;i++)
       ans = ans + dis[i];
      cout<<ans<<endl;
   }      
        
    return 0;
    
}