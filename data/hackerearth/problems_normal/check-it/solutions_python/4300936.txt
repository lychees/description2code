def dfs(arr,n):
	check=[]
	stk=[]
	stk.append(0)
	check.append(0)
	while len(stk)!=0:
		front=stk.pop()
		toadd=arr[front]
		for i in toadd:
			if i not in check:
				check.append(i)
				stk.append(i)
	if len(check)==n:
		return True
	else:
		return False
	




t=input()
for i in range(0,t):
	listmp=list(raw_input().split())
	n=int(listmp[0])
	m=int(listmp[1])
	desc=[]
	for j in range(0,m):
		listmp=list(raw_input().split())
		a=int(listmp[0])
		b=int(listmp[1])
		desc.append([a,b])
	Map=[]
	for j in range(0,n):
		Map.append([])
	listmp=list(raw_input().split())
	for j in range(0,n-1):
		Map[desc[int(listmp[j])-1][0]-1].append(desc[int(listmp[j])-1][1]-1)
		Map[desc[int(listmp[j])-1][1]-1].append(desc[int(listmp[j])-1][0]-1)
	
	if dfs(Map,n):
		print "YES"
	else :
		print "NO"