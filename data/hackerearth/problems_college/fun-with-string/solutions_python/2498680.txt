s = raw_input()
T = int(raw_input())

def nth_palindrome(s, n):
    palindrome_count = 0
    for i in xrange(1, len(s)):
        for offset in 0, 1:
            a = i
            b = i + offset
            while a >= 0 and b < len(s):
                if s[a] != s[b]:
                    break
                pal = s[a:b+1]
                a -= 1
                b += 1
        if len(pal) > 1:
            palindrome_count += 1
            if palindrome_count == n:
                return pal

for i in xrange(T):
    cmd, n = raw_input().split()
    n = int(n)

    if cmd == 'Wordrev':
        ss = s.split()
        l = [w[::-1] for w in ss[:n]] + ss[n:]
        print ' '.join(l)
    elif cmd == 'sortword':
        ss = s.split()
        nw = sorted(ss)[:n]
        nws = set(nw)
        l = nw + [w for w in ss if w not in nws]
        print ' '.join(l)
    elif cmd == 'subpalin':
        print nth_palindrome(s, n)
