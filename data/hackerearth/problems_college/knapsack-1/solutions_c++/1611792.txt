#include<stdio.h>
 
// A utility function that returns maximum of two integers
long long int max(long long int a, long long int b) { return (a > b)? a : b; }

//long long int K [4004];
// Returns the maximum value that can be put in a knapsack of capacity W
long long int knapsack(long long int a[],long long int n,long long int k)
{
  if(n==0 || k==0)	
	 return 0;
  if(a[n-1]>k)	
	 return knapsack(a,n-1,k);
  else	 
 return max(a[n-1]+knapsack(a,n,k-a[n-1]),knapsack(a,n-1,k));	 	
}
long long int a [2002];
long long int val [2002];

int main()
{
	
	long long int t, i ,j, k, n;
	
	scanf ("%lld", &t);
	
	while (t--) {
		scanf ("%lld%lld", &n, &k);
		
		for (i = 0; i < n; i++) {
			scanf ("%lld", & val [i]);
			a [i] = val [i];
		}
		 printf("%lld\n", knapsack(a, n, k));
	}

   
    return 0;
}