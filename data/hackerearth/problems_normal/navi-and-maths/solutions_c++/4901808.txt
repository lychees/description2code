#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;
typedef long long int relong;

relong power(relong base, relong exponent, relong modulus)
{
	//cout << base << ", " <<  exponent << ", " << modulus;
    relong result = 1;
    while (exponent > 0) {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
	//cout << ", result: "<< result << endl;
    return result;
}


int main()
{
	//FILE* ss;
	//freopen_s(&ss, "./input00.txt", "r", stdin);
	relong mod = 1000000007;
	relong T, N, l=0, A;
	cin >> T;
	while (l<T) {
		cin >> N;
		vector<relong> v;
	
		for (relong i = 0; i < N; i++) {
			cin >> A;			
			v.push_back(A);
		}
		
		relong p = 1 << N;
        relong ans = INT_MIN;
        for (relong i = 1; i < p; i++) {
            relong mul = 1;
            relong add = 0;
            relong ctr = 0;
            for (relong j = 0; j < N; j++) {
                if ( i & (1<<j) ) {
                    ctr++;
					//cout << "v: "<< v[i] << ", " << v[j] << endl;
                    add = (add + v[j])%mod;
                    mul = (mul * v[j])%mod;
                }
            }
            if (ctr >= 2 ) {				
                relong temp = power(add, mod - 2, mod);
                temp = (temp*mul)%mod;
                ans = max(ans, temp);
            }
        }
		
		
		
		cout << "Case #"<<(l+1)<<": "<< ans <<endl;
		
		l++;
	}

	return 0;
}
