#include "bits/stdc++.h"

using namespace std;

#define TEST(T) int T; cin>>T; while(T--)
#define ll long long
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define ins insert
#define pii pair<int,int>
#define all(V) V.begin(),V.end()
#define clr(V,val) memset(V,val,sizeof(V))
#define rep(X,A,N,C) for(X=A;X<=N;X+=C)
#define rept(X,A,N,C) for(X=A;X>=N;X-=C)
#define sci(X) scanf("%d",&X)
#define scl(X) scanf("%lld",&X)
#define scs(X) scanf("%s",&X)
#define pfi(X) printf("%d",X)
#define pfl(X) printf("%lld",X)
#define pfs(X) printf("%s",X)
#define sp printf(" ")
#define nxt printf("\n")

const int MX=1e6 + 5;

const int INF=1e9;

const int M=1000000007;


            /*************************/
/********** U GOTTA DO WHAT U GOTTA DO ********/
           /*************************/
           
             
int main()
{
	
	TEST(t)
	{
		int n,m;
		sci(n);
		sci(m);
		
		vector<pii> v[n+5];
		
		while(m--)
		{
			int a,b,w;
			sci(a);
			sci(b);
			sci(w);
			
			v[a].pb(mp(b,w));
			v[b].pb(mp(a,w));
			
		}
		
		vector<ll> d(n+5,INF);
		priority_queue<pii,vector<pii>,greater<pii> >pq;
		
		d[1]=0;
		pq.push(mp(0,1));
		
		while(!pq.empty())
		{
			pii p=pq.top();
			pq.pop();
			
			int x=p.F;
			int y=p.S;
			
			int i;
			
			rep(i,0,v[y].size()-1,1)
			{
				int node=v[y][i].F;
				int wt=v[y][i].S;
				
				if(d[y]+wt<d[node])
				{
					d[node]=d[y]+wt;
					pq.push(mp(d[node],node));
				}
			}
		}
		
		int q;
		sci(q);
		
		while(q--)
		{
			int a,b;
			sci(a);
			sci(b);
			
			ll chk=b-d[a]*2;
			
			if(chk>=0) pfl(chk);
			else printf("0");
			
			nxt;
		}
	}
	
}