#include<iostream>
using namespace std;
bool used[107][107];
int a[107][107];
void dfs(int x, int y)
{
	used[x][y] = true;
	if (a[x + 1][y] == 1 && !used[x+1][y])
	{
		dfs(x + 1, y);
	}
	if (a[x][y + 1] == 1 && !used[x][y + 1])
	{
		dfs(x, y + 1);
	}
}
int main()
{
	int t;
	cin >> t;
	for (int tt = 1; tt <= t; tt++)
	{
		for (int i = 0; i < 107; i++)
		{
			for (int j = 0; j < 107; j++)
			{
				used[i][j] = false;
			}
		}
		int n;
		cin >> n;
		for (int i = 1; i <= n; i++)
		{
			for (int j = 1; j <= n; j++)
			{
				cin >> a[i][j];
			}
		}
		dfs(1, 1);
		if (used[n][n] && a[1][1] == 1 && a[n][n] == 1)
		{
			cout << "POSSIBLE" << endl;
		}
		else
		{
			cout << "NOT POSSIBLE" << endl;
		}
	}

}