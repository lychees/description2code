#include <iostream>
#include <cassert>
#include <cstdio>
#include <algorithm>
using namespace std;

static int a[1000001],p[100001];
int prime(int n)
{
	int i=2,k=0;
	for (i=2;i<=n;i++) a[i]=0;
	i=2;
	while (i<=n)
	{
		if (a[i]==0)
		{
			p[k++]=i;
			if (i>=10000)
			{
				i+=1;
				continue;
			}
			int j=i*i;
			
			while (j<=n)
			{
				a[j]=1;
				j+=i;
			}
		}
		i+=1;
	}
	return k;
}
int main()
{
	int pcount;
	pcount=prime(1000000);
	int ans[1000001],i,j,k,an,n;
	for (i=0;i<1000001;i++) ans[i]=0;
	scanf("%d",&n);
//	cin>>n;
	assert(n<=100000);
	for (i=0;i<n;i++){
		scanf("%d",&a[i]);
//		 cin>>a[i];
		 if (i>=2) if (a[i]<=a[i-1]) cout<<i<<" "<<a[i-1]<<" "<<a[i]<<endl;
			assert(a[i]<=100000);	
	}
	for (i=n-1;i>=0;i--)
	{
		j=a[i];
		k=0; 
		an=1;
		while (k<pcount && j>=p[k]*p[k] )
		{
			if (j%p[k]==0)
			{
				ans[p[k]]+=1;
				an=max(an,ans[p[k]]);
			}
			while (j%p[k]==0)
				j/=p[k];
			k+=1;
		}
		if (j!=1)
		{
			ans[j]+=1;
			an=max(an,ans[j]);
		}
		j=a[i];
		k=0;
		while (k<pcount && j>=p[k]*p[k] )
		{
			if (j%p[k]==0)
			{
				ans[p[k]]=an;
			}
			while (j%p[k]==0)
				j/=p[k];
			k+=1;
		}
		if (j!=1)
		{
			ans[j]=an;
		}
	//	cout<<an<<endl;
	}
	an=ans[2];
	for (i=2;i<1000001;i++) an=max(an,ans[i]);
	cout<<an<<endl;
	
    return 0;
}
