#include <iostream>

#define lsb(x) ((x) & (-(x)))
using namespace std;

const int NMAX = 1500000;

int aib[NMAX + 1];

int st, dr;
int where[NMAX + 1];

inline void update (int pos, int val) {
	for (; pos <= NMAX; pos += lsb(pos))
		aib[pos] += val;
}

inline int query (int pos) {
	int ans = 0;
	for (; pos; pos -= lsb(pos))
		ans += aib[pos];
		
	return ans;
}

int main()
{
	int n = 0, m = 0;
	cin >> n >> m;
	
	st = 500000;
	dr = st - 1;
	
	int x;
	while (n--) {
		cin >> x;
		
		update(++ dr, 1);
		where[x] = dr;
	}
	
	n = dr - st + 1;
	
	char l;
	int aux;
	
	long long int sum = 0;
	while (m--) {
		cin >> x >> l;
		
		aux = query(where[x]) - 1;
		
		if (n - aux - 1 < aux)
			aux = n - aux - 1;
		sum += aux;
	
		update(where[x], -1);
		if (l == 'l') {
			update(-- st, 1);
			where[x] = st;
		}
		else {
			update(++ dr, 1);
			where[x] = dr;
		}
	}
	
	cout << sum << '\n';
    return 0;
}
