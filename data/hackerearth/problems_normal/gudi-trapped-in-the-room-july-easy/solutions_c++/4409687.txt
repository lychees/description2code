#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
string opA ( string x, int h ) {
    if(!h)return x;
    return   x.substr ( x.size()-h ) +x.substr ( 0,x.size()-h );
}
string opB ( string x, int a ) {
    rep ( i,x.size() ) {
        if ( i&1 ) {
            char &c=x[i];
            c+=a;
            if ( c>'9' ) c-=10;
        }
    }
    return x;
}
int main() {
    ios_base::sync_with_stdio ( false );
//     cout<< atoi ( "000" ) <<" "<<atoi ( "00" ) <<endl;
    inrep {
        vector<bool> found ( 1000000 );
        string s;
        cin>>s;
        int a,h;
       
        cin>>a>>h;
         a%=10;
        h%=s.size();
        vector<string> c={s};
//         cout<<s<<endl;
        found[atoi ( s.c_str() )]=1;
        while ( c.size() ) {
            vector<string> nc;
            for ( string &s: c ) {
                    string b=opA ( s,h );
                    int x=atoi ( b.c_str() );
                    if ( !found[x] ) {
                        found[x]=1;
                        nc.push_back ( b );
                    }
                 b=opB ( s,a );
                 x=atoi ( b.c_str() );
                if ( !found[x] ) {
                    found[x]=1;
                    nc.push_back ( b );
                }
            }
            swap ( c,nc );
        }
        int i=0;
        while ( !found[i] ) i++;
        string s2=to_string ( i );
        while ( s2.size() <s.size() ) s2='0'+s2;
        cout<<s2<<endl;
    }
//     cout<<t<<endl;

}
