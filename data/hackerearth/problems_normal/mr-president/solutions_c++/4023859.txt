#include <iostream>
#include <utility>
#include <set>

using namespace std;

#define lld unsigned long long int
#define ppair pair <lld, lld>

lld n, m, k, mark[1000001], par[1000001], sum;
set < pair <lld, ppair > > se;
set < pair <lld, ppair > > v;
set < pair <lld, ppair > > :: iterator it;
pair <lld, ppair > p;

void mst();
lld find_par(lld);
void uni(lld, lld);

int main()
{
	lld ans, a, b, c, i, j, flag = 0, count = 0, x, y;
	cin >> n >> m >> k;
	
	for (i = 1; i <= n; ++i) {
		par[i] = i;
	}

	for (i = 0; i < m; ++i) {
		cin >> a >> b >> c;
		v.insert(make_pair(c, make_pair(a, b)));
	}

	if (n - 1 > k) {
		cout << -1 << endl;
	} else {
		mst();
	}

	return 0;
}

void mst()
{
	lld x, y, forest = n, cost = 0, res = n - 1;
	for (it = v.begin(); it != v.end() && forest > 1; ++it) {
		x = it->second.first;
		y = it->second.second;
		if (find_par(x) != find_par(y)) {
			uni(x, y);
			--forest;
			cost += it->first;
			if ((cost + res - 1) <= k) {
				res = res - 1;
			}
		}
	}

	if (forest > 1) {
		cout << -1 << endl;
	} else {
		cout << res << endl;
	}
}

lld find_par(lld x)
{
	if (par[x] == x) return x;
	return (par[x] = find_par(par[x]));
}

void uni(lld x, lld y)
{
	lld px, py;
	px = find_par(x);
	py = find_par(y);
	if (px != py) {
		par[px] = py;
	}
}
