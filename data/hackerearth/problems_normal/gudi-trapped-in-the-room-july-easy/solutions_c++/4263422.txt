#include <iostream>
#include <vector>
#include <string>
#include <set>

using namespace std;

void printv(const vector<char>& v)
{
	for(int i=0; i<v.size(); i++) cout << (int)v[i];
}

vector<char> strToVec(const string& s)
{
	vector<char> res = vector<char>(s.size());
	for(int i=0; i<s.size(); i++)
	{
		res[i] = s[i] - '0';
	}
	return res;
}

char sumw(char a, char b)
{
	return (a+b) % 10;
}

char subw(char a, char b)
{
	char c = a - b;
	while(c < 0) c += 10;
	return c;
}

int vtoi(const vector<char>& v)
{
	int m = 1;
	int res = 0;
	for(int i=v.size()-1; i>=0; i--)
	{
		res += v[i] * m;
		m *= 10;
	}
	return res;
}

void rot(vector<char>& v)
{
	int last = v.back();
	for(int i=v.size()-1; i>0; i--)
	{
		v[i] = v[i-1];
	}
	v[0] = last;
}

void rot(vector<char>& v, char c)
{
	for(int i=0; i<c; i++) rot(v);
}

void xa(vector<char>& v, char c)
 {
	 /*for(int i=v.size()-2; i>=0; i-=2)
	 {
		 v[i] = sumw(v[i], c);
	 }*/
	 for(int i=1; i<v.size(); i+=2)
	 {
		 v[i] = sumw(v[i], c);
	 }
 }

int main()
{
	
	int nn;
	cin >> nn;
	for(int kk=1; kk<=nn; kk++)
	{
		
		string n;
		int h, a;
		cin >> n >> a >> h;
		
		int lowest = 99999999;
		vector<char> res;
		
		vector<char> v = strToVec(n);
		
		set<int> cp;
		cp.insert(vtoi(v));
		vector< vector<char> > tc;
		tc.push_back(v);
		
		while(!tc.empty())
		{
			vector<char> v = tc.back();
			tc.pop_back();
			
			int i = vtoi(v);
			if(i < lowest)
			{
				lowest = i;
				res = v;
			}
			cp.insert(i);
			
			vector<char> v1 = v; rot(v1, h);
			vector<char> v2 = v; xa(v2, a);
			int i1 = vtoi(v1);
			int i2 = vtoi(v2);
			if(cp.find(i1) == cp.end()) tc.push_back(v1);
			if(cp.find(i2) == cp.end()) tc.push_back(v2);
		}
		
		printv(res); cout << endl;
		
	}
	
}
