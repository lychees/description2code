//Tanuj Khattar
#include<bits/stdc++.h>

using namespace std;

typedef pair<int,int>   II;
typedef vector< II >      VII;
typedef vector<int>     VI;
typedef vector< VI > 	VVI;
typedef long long int 	LL;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);
const int N = int(4e7);
int P[N/10],len,isP[N];
bool isprime(LL n){
  for(int i=0;i<len && P[i]*1ll*P[i]<=n;i++)
    if(n%P[i]==0)
      return false;
  return true;
}
int main()
{
  isP[1]=1;
  for(int i=2;i*i<N;i++)
    if(!isP[i])
      for(int j=i*i;j<N;j+=i)
        isP[j]=1;
  for(int i=2;i<N;i++)
    if(!isP[i])
      P[len++]=i;
  LL n;sll(n);
  LL ans = n;
  for(int i=0;i<len && P[i]*1ll*P[i] <= n;i++){
    LL x = 1;
    while(x<=n/P[i])
      x = x*P[i];
    ans = min(ans,n - n%x);
  }
  for(LL i=n/2+1;i<=ans;i++){
    if(isprime(i)){
      ans = i;
      break;
    }
  }
  cout<<ans<<endl;
  return 0;
}
