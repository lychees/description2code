#include <bits/stdc++.h>
using namespace std;
#define f first
#define s second
typedef map<string,pair<int,int> >::iterator MapIterator;
int main()
{
	int t,n,q;
    cin>>t;
    while(t--){
    	map<string,pair<int,int> >v;
		pair<int,int>p;
		vector<string>ve;
		string str,s1;
    	cin>>n>>q;
    	for(int i =0;i<n;i++){
    		cin>>str;
    		ve.push_back(str);
    		p.f=0;p.s=0;
    		v[str]=p;
    	}
    	int c,d;
    	for(int i =0;i<q;i++){
    		cin>>str>>c>>d;
    		v[str].f+=((c/(d+1))+(c%(d+1)));
            v[str].s+=c;
    		for(int i =0;i<d;i++){
    			cin>>s1;
    			v[s1].f+=(c/(d+1));
    		}
    	}
    	//for(MapIterator i = v.begin(); i != v.end(); i++){
		//	cout<<i->f<<" => "<<i->s.f<<" "<<i->s.s<<endl;}
		for(int i =0;i<n;i++){
			MapIterator It = v.find(ve[i]);
			if(It->s.f==It->s.s)	    cout<< It->f <<" neither owes nor is owed";
			else if(It->s.f>It->s.s)	cout<< It->f <<" owes "<<It->s.f - It->s.s;
			else                    cout<< It->f <<" is owed "<<It->s.s - It->s.f;
			cout<<"\n";
		}
    }
    return 0;
}