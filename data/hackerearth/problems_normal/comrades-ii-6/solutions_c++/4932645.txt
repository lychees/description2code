#include <iostream>
#include <vector>
using namespace std;
vector<int> a[100005];
int heightof[100005];
void dfs(int at, int height){
	vector<int>::iterator it = a[at].begin();
	heightof[at] = height;
	while(it!=a[at].end()){
		dfs(*(it),height+1);
		it++;
	}
	return;
}
int main()
{
    int t;
    cin>>t;
    while(t--){
    	int n,root,par;
    	cin>>n;
    	for(int i=1;i<=n;i++){
    		a[i].clear();
    	}
    	for(int i=1;i<=n;i++){
    		cin>>par;
    		if(par==0)
    			root = i;
    		else{
    			a[par].push_back(i);
    		}
    	}
    	dfs(root,0);
    	long long sum_heights=0,total=(long long)n*(n-1);
    	total /= 2;
    	for(int i=1;i<=n;i++){
    		sum_heights += (long long)heightof[i];
    	}
    	cout<<sum_heights<<" "<<total-sum_heights<<endl;
    }
    return 0;
}
