#include <bits/stdc++.h>
using namespace std;
long long int dp[20][162][1468];
bool visit[20][162][1468];
string s;
int n;
long long int cal(int index,int dig_sum,int dig_square)
{
if(index==0)
{
return (__gcd(dig_sum,dig_square)==1);
}
long long int ans=0;
if(visit[index][dig_sum][dig_square])
return dp[index][dig_sum][dig_square];
visit[index][dig_sum][dig_square]=true;
for(int i=0;i<=9;i++)
ans=ans+cal(index-1,dig_sum+i,dig_square+i*i);
dp[index][dig_sum][dig_square]=ans;
return ans;
}
long long int fun(int index,int tight,int dig_sum,int dig_square)
{
if(index==n)
{
return (__gcd(dig_sum,dig_square)==1);
}
long long int ans=0;
if(tight==0)
ans=ans+cal(n-index,dig_sum,dig_square);
else
{
for(int i=0;i<=s[index]-49;i++)
ans=ans+fun(index+1,0,dig_sum+i,dig_square+i*i);
ans += fun(index+1, 1, dig_sum + s[index]-48, dig_square+ (s[index]-48)*(s[index]-48));
}
return ans;
}
long long int get(long long int x)
{
stringstream ss;
ss.clear();
ss<<x;
s=ss.str();
n=(int)s.size();
return fun(0,1,0,0);
}
int main()
{
int t;
long long int x,y;
memset(visit,false,sizeof visit);
scanf("%d",&t);
while(t--)
{
scanf("%lld%lld",&x,&y);
long long int ans=get(y)-get(x-1);
cout<<ans<<"\n";
}
return 0;
}
