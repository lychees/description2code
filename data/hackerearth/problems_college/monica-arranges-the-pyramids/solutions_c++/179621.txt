#pragma comment(linker,"/stack:256000000")

#include <cmath> 
#include <ctime> 
#include <iostream> 
#include <string> 
#include <vector> 
#include <algorithm> 
#include <set> 
#include <map> 
#include <cstring> 
#include <cstdlib> 
#include <queue> 
#include <cstdio> 
#include <cfloat>

using namespace std; 

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++) 
#define sz(v) (int)(v).size() 
#define all(v) (v).begin(), (v).end()

map <int, int> h;
set <pair <int, int> > s;

int main() {
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	int t;
	cin >> t;
	REP(_, t) {
		int n, p, x;
		cin >> n >> p;
		h.clear();
		REP(i, n) {
			cin >> x;
			h[x]++;
		}
		s.clear();
		for (map <int, int>::iterator it = h.begin(); it != h.end(); ++it) {
			s.insert(make_pair(it->second, it->first));
		}
		int res = 0;
		while (sz(s) >= p) {
			vector <pair <int, int> > t;
			REP(i, p) {
				t.push_back(*s.rbegin());
				s.erase(t.back());
			}
			REP(i, p) {
				t[i].first--;
				if (t[i].first) s.insert(t[i]);
			}
			++res;
		}
		cout << res << endl;
	}
	/*
	long long w, m, k, L = 0, R = (long long)1e16 + 10;
	cin >> w >> m >> k;
	while (L + 1 < R) {
		long long M = (L + R) / 2, t = 0;
		long long p, i;
		for (p = 10, i = 1; p <= M; p *= 10, i++) {
			if (p >= m) {
				t += (p - max(p / 10, m)) * i;
			}
		}
		t += (M - p / 10) * i;
		if (k <= w / t && t * k <= w) {
			L = M;
		} else {
			R = M;
		}
	}
	cout << L << endl;*/
	return 0;
}