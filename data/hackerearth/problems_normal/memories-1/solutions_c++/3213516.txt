
/* Trico ------------------------> NIT Silchar

“All power is within you; you can do anything and everything.
Believe in that, do not believe that you are weak; do not believe that you are half-crazy lunatics,
as most of us do nowadays. You can do any thing and everything, without even the guidance
of any one. Stand up and express the divinity within you.”

 */
#include<bits/stdc++.h>
#define ll long long
#define pll pair<ll,ll>
#define vl vector<ll>
#define mod 1000000007
#define fori(z,n) for(int i=z;i<n;i++)
#define forj(z,n) for(int j=z;j<n;j++)
#define fork(z,n) for(int k=z;k<n;k++)
#define db(x) cout << (#x) << " = " << x << endl;
#define trico() int t;cin>>t ; while(t--)
#define p_iter vector<pll>::iterator
#define l_iter vector<ll>::iterator
#define forstl(m) for(it=m.begin();it!=m.end();it++)
#define CHECK_BIT(var,pos) ((var) & (1<<(pos)))
const int nax = 1e6 + 5;
const int inf = 1e9 + 5;
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
using namespace std;
static int u=0;
void f_case(){u++;cout<<"Case "<<u<<": ";}
int p1[10005],p2[10005],coder[20];
int main()
{
 //freopen("input.in", "r", stdin);
 trico()
 {
     bool flag;
     ll cnt=0,n,k;
     cin>>n>>k;
     fori(1,k+1)
     cin>>p1[i]>>p2[i];
     fori(1,n+1)
     coder[i]=i;
     ll ml=1<<n;
     for(int i=0;i<ml;i++)
     {

         set<int> s;
         for(int j=0;j<n;j++)
         {
             if(CHECK_BIT(i,j) )
                s.insert(coder[j+1]);
         }
        // for(auto it=s.begin();it!=s.end();it++)
          // cout<<*it<<" ";
       //  cout<<endl;
         if(s.empty())
            continue;
                flag=true;
             forj(1,k+1)
             {
                 if(s.find(p1[j])!=s.end())
                 {
                     if(s.find(p2[j])!=s.end())
                     {


                     flag=false;
                     break;
                     }
                 }
             }
             if(flag)
                cnt++;
         }
         cout<<cnt<<"\n";
     }
 }


