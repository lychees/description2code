
//============================================================================
// Name        : riya.cpp
// Author      : riya1794
//============================================================================

#include<bits/stdc++.h>

using namespace std;

#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))

#define REP(i,a,b) for(LL i=a;i<b;i++)
#define rep(i,b) for(LL i=0;i<b;i++)
#define rep1(i,b) for(LL i=1;i<=b;i++)

#define pdn(n) printf("%d\n",n)
#define pln(n) printf("%ld\n",n)
#define plln(n) printf("%lld\n",n)
#define pn(n) printf("\n")
#define psn(n) printf("%s\n",n)

#define s2ll(n1,n2) scanf("%lld%lld",&n1,&n2)
#define sll(n) scanf("%lld",&n)
#define sl(n) scanf("%ld",&n)
#define sd(n) scanf("%d",&n)
#define ss(n) scanf("%s",n)

#define ass(n,a,b) assert(n>=a&&n<=b)

typedef long long LL;

#define MOD 10000000
vector<LL> adj[1000000];
map<LL,char> m;
int color[1000000];
bool visited[1000000];
char gen[1000000];
LL cnt=0;
LL ans=0;
bool ok = true;
void dfs(LL u, LL c)
{
    visited[u]=true;
    color[u]=c;
    for(int i=0;i<adj[u].size();i++)
    {
        LL v = adj[u][i];
        if(visited[v]==false)
        {
            color[v] = ((c==0)?1 :0);
            dfs(v,color[v]);
        }
        else
        {
            if(color[v]==color[u])
            {
                ok = false;
                return;
            }
        }
    }
}
int main()
{
    LL n,m,a,t,b,x=0;
    char c;
    s2ll(n,m);
    rep1(i,n)
    {
        visited[i]=false;
        color[i]=-1;
    }
    rep1(i,n)
    {
        cin>>gen[i];
    }
    rep(i,m)
    {
        s2ll(a,b);
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    dfs(1,0); //0 for blue;
  //  rep1(i , n) cout<<i<<" = "<<color[i]<<endl;
    if(ok)
    {
        for(LL i=1;i<=n;i++)
        {
            if(gen[i]=='B' && color[i]==1) cnt++;
            if(gen[i]=='G' && color[i]==0) cnt++;
            color[i]=-1; // for next iterartion;
            visited[i]=false;
        }
        dfs(1,1);
        for(LL i=1;i<=n;i++)
        {
            if(gen[i]=='B' && color[i]==1) ans++;
            if(gen[i]=='G' && color[i]==0) ans++;
        }
        ans=min(ans,cnt);
        cout<<ans<<endl;
    }
    else
    cout<<"Not possible";
    return 0;
}
