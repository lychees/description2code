#include<bits/stdc++.h>

using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int max_n = 2e5 + 10;
const int max_m = 2e5 + 10;
const int max_c =  110;

ll fact[max_m], inv[max_m];

ll power(ll a, ll b)
{
	if(b==0)
		return 1;

	ll c = power((a*a)%mod, (b>>1))%mod;

	if(b&1)
		c = (c*a)%mod;

	return c;
}

void precompute()
{
	ll i, j;

	fact[0] = 1;
	inv[0] = 1;

	for(i=1;i<max_m;++i)
	{
		fact[i] = (i*fact[i-1])%mod;
		inv[i] = power(fact[i], mod-2)%mod;
	}
}

ll get_ncr(ll num, ll deno)
{
	ll ret = fact[num];

	ret = (ret * inv[deno])%mod;
	ret = (ret * inv[num - deno])%mod;

	return ret;
}

int main()
{
	ll t, i, j, ans, n, m, num, deno, c;

	scanf("%lld", &t);

	precompute();

	while(t--)
	{
		ans = 0;
		scanf("%lld %lld %lld", &n, &m, &c);

		for(i=0;i<=m;++i)
		{
			num = n - (i * (c+1));
			if(num<0)
				break;
			num += m-1;
			deno = m-1;

			ans = (ans + ((i&1)?-1:1)*( (get_ncr(m, i) * get_ncr(num, deno) )%mod) + mod)%mod;
		}

		printf("%lld\n", ans);
	}

	return 0;
}