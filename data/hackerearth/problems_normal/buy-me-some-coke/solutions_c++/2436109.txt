#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define inrep int t;cin>>t; while(t--)
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL


using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;


const int MOD=1000000007;
template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
ll dp [152][200][200] ;
int total;
int cBegin;
ll getCoins ( int c, int n5,int n10 ) {
    assert(n5<200 && n10<200);
    if ( !c )
        return 0;
    if ( dp[c][n5][n10]!=-1 )
        return dp[c][n5][n10];
    int n1=total-8* ( cBegin-c )-5*n5-10*n10;

    ll b=INFL;
    if ( n1>7 ) {
        ll res= getCoins ( c-1,n5,n10 ) +8;
        if ( res<b )
            b=res;
    }
    if ( n1>12 ) {
        ll res= getCoins ( c-1,n5+1,n10 ) +13;
        if ( res<b )
            b=res;
    }
    if ( n1>17 ) {
        ll res= getCoins ( c-1,n5,n10+1 ) +18;
        if ( res<b )
            b=res;
    }
   
    if ( n5>0 &&n1>2 ) {
        ll res=getCoins ( c-1,n5-1,n10 ) +4;
        if ( res<b )
            b=res;
    }
    if ( n5>1 ) {
        ll res =getCoins ( c-1,n5-2,n10 ) +2;
        if ( res<b )
            b=res;
        if ( n1>7 ) {
            res =getCoins ( c-1,n5-2,n10+1 ) +10;
            if ( res<b )
                b=res;
        }
        if ( n5>2 &&n1>2 ) {
            res =getCoins ( c-1,n5-3,n10+1 ) +6;
            if ( res<b )
                b=res;
        }
        if ( n5>3 ) {
            res =getCoins ( c-1,n5-4,n10+1 ) +4;
            if ( res<b )
                b=res;
        }
    }
    if ( n10>0 ) {
        ll res=getCoins ( c-1,n5,n10-1 ) +1;
        if ( res<b )
            b=res;
        if ( n1>2 ) {
            res=getCoins ( c-1,n5+1,n10-1 ) +4;
            if ( res<b )
                b=res;
        }
    }
    dp[c][n5][n10]=b;
    return b;
}
int main() {
    ios_base::sync_with_stdio ( false );
    int t;
    cin>>t;

    while ( t-- ) {
        rep ( i,152 ) rep ( j,200 ) rep ( k,200 ) dp[i][j][k]=-1;
        int c,n1,n5,n10;
        cin>>c>>n1>>n5>>n10;
        total=n1+5*n5+10*n10;
        cBegin=c;
        if ( total<c*8 ) {
            cout<<-1<<endl;
            continue;
        }
        ll r=   getCoins ( c,n5,n10 );
        cout<<r<<endl;

    }


}
