#include<iostream>
using namespace std;
const int MAXN = 100 + 5 , MAXM = 1e5 + 5;
const long long MOD = 1e9 + 7;
long long dp[MAXN][MAXM];
int a[MAXN];
int main()
{
    int n , k;
    cin >> n >> k;
    long long sum = 0;
    for(int i = 1;i <= n;i ++)
    {
        cin >> a[i];
        sum += a[i];
    }

    long long ans1 = 1ll;
    for(int i = 1;i <= n;i ++)
        ans1 = (ans1 * 2ll) % MOD;

    dp[0][0] = 1;
    for(int i = 1;i <= n;i ++)
        for(int j = 0;j <= k;j ++)
            if(j - a[i] >= 0)
                dp[i][j] = (dp[i - 1][j] + dp[i - 1][j - a[i]]) % MOD;
            else
                dp[i][j] = (dp[i - 1][j]) % MOD;
    long long ans2 = 0;
    for(int j = 0;j < k;j ++)
        ans2 = (ans2 + dp[n][j]) % MOD;

    long long ans3 = 0;
    for(int j = 0;j < k;j ++)
        if(sum - j < k)
            ans3 = (ans3 + dp[n][j]) % MOD;


    ans1 = (ans1 - 2 * ans2 + ans3 + 5 * MOD) % MOD;
    cout << ans1 << endl;
    return 0;
}
