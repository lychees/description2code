#include <bits/stdc++.h>
#define rep(i, a, b) for(int i = (int)a; i < (int)b; i++)
#define RED true
#define BLACK false
#define pb push_back
#define mk make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int, int> ii;
typedef long long ll;
typedef pair<ii, int> iii;
typedef vector<int> vi;
const int N = 1e4 + 7;
const int M = 1e9;
const int inf = 1e9 + 7;
const ll base = 1e18;
const double pi = acos(-1);
const double ep = 1e-9;


int sum[N];
set<char> sp;
string s, x;
int n, k, l, r;

int findUp(int i, int x){
    int lo = i, hi = n, g, res = -1;
    do{
        g = (lo + hi) >> 1;
        if (sum[g] - sum[i-1] >= x){
            res = g;
            hi = g - 1;
        }else lo = g + 1;
    }while (lo <= hi);
    return res;
}

int findDown(int i, int x){
    int lo = i, hi = n, g, res = -1;
    do{
        g = (lo + hi) >> 1;
        if (sum[g] - sum[i-1] <= x){
            res = g;
            lo = g + 1;
        }else hi = g - 1;
    }while (lo <= hi);
    return res;
}

int main(){
    //freopen("in.txt", "r", stdin);
    int test;
    cin >> test;
    while(test -- > 0){
        sp.clear();
        ll res = 0;
        cin >> n >> k >> l >> r;
        cin >> s >> x;
        rep(i, 0, x.size()){
            sp.insert(x[i]);
        }
        sum[0] = 0;
        rep(i, 0, s.size()){
            sum[i+1] = sum[i];
            if (sp.count(s[i]) != 0) sum[i+1]++;
        }
        //cout<<n<<endl;
        //ll res = 0;
        rep(i, 1, n + 1){
            int u = findUp(i, l);
            int v = findDown(i, r);
            if (u != -1 && v != -1){
                res += v - u + 1;

            }
        }
        cout<<res<<endl;
    }



}

