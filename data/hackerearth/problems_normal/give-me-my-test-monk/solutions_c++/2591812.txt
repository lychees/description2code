#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

ll derng[150];
#define MOD 1000000007
ll dp[120][120];
ll fc[120];

ll fac() {
	fc[0] = 1ll;
	for (ll i = 1; i <= 100ll; i++)
		fc[i] = (fc[i-1] * i) % MOD;
}

ll ncr (ll n, ll r) {
	
	if (n < r)
		return 0;
		
	if (n == r || r == 0) {
		return 1;
	}
	
		
	if (dp[n][r] != -1ll)
		return dp[n][r];

	ll m;
	m = (ncr(n-1 , r-1) + ncr (n-1, r)) %MOD;
	dp[n][r] = m;
	return m;
}
	
ll powm(ll p, ll q) {
	ll r = 1LL;
	while (q != 0) {
	        if (q % 2 == 1) {    // q is odd
	            r *= p;
	            r %= MOD;
	            q--;
	        }
	        p *= p;
	        p %= MOD;
	        q /= 2;
	    }
	    return (r%MOD);
}

void pre() {
	derng[0] = 1ll;
	derng[1] = 0ll;

	for (ll i = 2; i <= 110; i++)
		derng[i] =  (  (i-1) * (derng[i-1] + derng[i-2]  )%MOD  )%MOD;
}

int main() {
	pre();
	fac();
	//for (ll i = 0; i < 15; i++)
		//cout <<derng[i]<<endl;
	
	memset(dp, -1, sizeof(dp));

	ll n, l , r;
	cin >> n >> l >> r;
	ll num = 0;
	for (ll  i = l; i <= r; i++)  {
		//cout <<ncr(n,i) <<"**"<<endl;
		num = (num +  ((ncr(n,i)%MOD) * (derng[i]%MOD))%MOD) % MOD;
	}

	
	ll denominv = powm (fc[n], (MOD-2) );
	denominv %= MOD;
	num %= MOD;
	ll ans = (num * denominv) %MOD;
	cout <<ans << endl;
	
	return 0;
}


