#include <iostream>
#include <vector>
#include <algorithm>
#define mod 1000000007
using namespace std;
class node{
public:
	long long ind,value;
};

bool cmp(node a, node b){
	return a.value>b.value;
}
int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		vector<node> v(n);
		for(int i=0;i<n;i++){
			cin>>v[i].value;
			v[i].ind=i;
		}
		sort(v.begin(),v.end(),cmp);
		long long ans = 0;
		if(n==1){
			cout<<0<<endl;
			continue;
		}
		long long mn = min(v[0].ind,v[1].ind);
		long long mx = max(v[0].ind,v[1].ind);
		long long gap = mx-mn-1;
		long long last = v[1].value;
		for(int i=2;i<v.size();i++){
			ans += ((last-v[i].value)*gap)%mod;
			ans%=mod;
			last = v[i].value;
			if(v[i].ind<mn){
				gap+=mn-v[i].ind-1;
				mn = v[i].ind;
			}
			else if( v[i].ind>mx){
				gap+=v[i].ind-mx-1;
				mx = v[i].ind;
			}
			else
				gap--;
		}
		cout<<ans<<endl;
	}
}