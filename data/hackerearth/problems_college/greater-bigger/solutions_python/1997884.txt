def NextPerm(s):
    Len = len(s)
    # char at the end of string
 
    EndChar = s[Len-1]
     
 
    for i in range (Len-2,-1,-1):
 
        # compare with char to left of the last char
 
        c = s[i]
 
        # if smaller, then it has to be substituted
 
        if(c < EndChar):
 
        # left to the char under check is remaining the same and put into buffer
 
            buff = s[:i]
            #print buff
 
            # find next biggest digit on the right starting from end and notice the last char is the smallest)
 
            for j in range(Len-1,i,-1):
 
                # check if the digit is bigger
 
                if(s[j] > c):
 
                    break
 
            # Add the char to buffer
 
            buff = buff + s[j]
             
 
            # book keep the index
            index = j
 
                 
 
            # add remaining chars in ascending order(reverse order) and put also insert C in its index
 
                  
 
            for j in range(Len-1,i,-1):
 
                # check if the the char was used to replace 'c' 
 
                if(j == index):
 
                    # if yes, keep 'c' in its place
 
                    buff = buff + c
 
                else:
 
                    # else copy next char
 
                    buff = buff + s[j]
 
                         
 
            return(buff)
 
             
 
        # last char is stored for the loop process
 
        EndChar = c
 
         
 
        # if char are in descending order its the biggest permutation
 
    return("no answer")
 
for _ in xrange(input()):
	s=raw_input()
		
 	ans=NextPerm(s)
 	print ans
 	