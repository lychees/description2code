#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>
#include <set>
#include "assert.h"
using namespace std;

void solve(){
	int N;
	cin >> N;
	vector<int> P(N);
	vector<int> L(N);
	for(int i=0; i<N; i++){
		cin >> P[i];
	}
	for(int i=0; i<N; i++){
		cin >> L[i];
	}
	vector<pair<int,int>> Q(N);
	for(int i=0; i<N; i++){
		Q[i] = {P[i], L[i]};
	}
	sort(Q.begin(), Q.end());
	for(int i=0; i<N; i++){
		P[i] = Q[i].first;
		L[i] = Q[i].second;
	}
	vector<long long> D(N-1);
	for(int i=0; i+1<N; i++){
		D[i] = P[i+1] - (P[i]+L[i]);
	}
	/*
	for(int i=0; i<N-1; i++){
		cerr << D[i] << " ";
	}
	cerr << endl;
	*/
	
	long long ret = 0;
	vector<bool> used(N-1, false);
	for(int i=0; i<N-1; i++){
		if(used[i] == false){
			ret += (i+1)*D[i];
			used[i] = true;
		}
		if(used[N-2-i] == false){
			ret += (i+1)*D[N-2-i];
			used[N-2-i] = true;
		}
	}

	cout << ret << endl;
}

int main(){
	int T;
	cin >> T;
	while(T--){
		solve();
	}
	return 0;
}