#include<vector>
#include<iostream>
#include<stdio.h>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<math.h>
#include<cstdlib>
#include<ctime>
#include<cstring>
#include<climits>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

#define lli long long int
#define llu unsigned long long int
#define mp make_pair
#define pb push_back
#define F first
#define S second

const double eps = 1e-5;
const lli MOD = 1000000007ll;
const double PI = 3.14159265359;
int INF = 2147483645;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;

string s;
int ans = 0;
int dp[60];

void rec(int l,int sum)
{
    for(int i=l;i<s.length()-1;i++)
    {
        if(l==0)
        {
            if(dp[i]<=dp[s.length()-1] - dp[i] && dp[i]>=sum)
            {
                ans++;
                rec(i+1,dp[i]);
            }
        }
        else if(dp[i]-dp[l-1]<=dp[s.length()-1] - dp[i] && dp[i]-dp[l-1]>=sum)
        {
            ans++;
            rec(i+1,dp[i]-dp[l-1]);
        }
    }
}
int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin>>t;

    while(t--)
    {
        cin>>s;

        ans = 0;

        dp[0] = s[0]-'0';
        for(int i=1;i<s.length();i++)
        {
            dp[i] = s[i] - '0' + dp[i-1];
        }
        rec(0,0);
        cout<<ans+1<<endl;
    }
    return 0;
}
