#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>
#include <set>
#include "assert.h"
using namespace std;

vector<int> prime = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47};

void solve(){
	int N;
	cin >> N;
	vector<int> A(N);
	vector<int> P(N,0);
	for(int i=0; i<N; i++){
		cin >> A[i];
		for(int j=0; j<prime.size(); j++){
			if(A[i] % prime[j] == 0){
				P[i] |= 1<<j;
			}
		}
	}

	vector<vector<int>> dp(N+1, vector<int>( 1<<prime.size(), 0 ));

	for(int i=0; i<N; i++){
		for(int j=0; j<( 1<<prime.size() ); j++){
			dp[i+1][j] = max(dp[i+1][j], dp[i][j]);
			if( (j&P[i]) == 0 ){
				dp[i+1][ j|P[i] ] = max(dp[i+1][ j|P[i] ] ,dp[i][j] + 1);
			}
		}
	}
	int ans = *max_element(dp[N].begin(), dp[N].end());
	cout << ans  << endl;
}

int main(){
	int T;
	cin >> T;
	while(T--){
		solve();
	}
	return 0;
}