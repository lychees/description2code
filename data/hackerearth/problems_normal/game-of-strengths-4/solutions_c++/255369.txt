/* 
 * File:   main.cc
 * Author: vivek
 *
 * Created on April 26, 2014, 6:26 AM
 */

#include <cstdlib>
#include <map>
#include <vector>
#include <iostream>
#include <algorithm>

#define Int long long int
#define UInt unsigned Int 
#define MAX 5000001

using namespace std;
vector<Int> primesvector;

#define MOD 1000000007

void CalculatePrimes() {
    unsigned char prime[MAX] = {0};
    primesvector.push_back(2);
    for (unsigned long long i = 2; i < MAX; ++i) {
        if (!prime[i]) {
            primesvector.push_back(i);
            for (unsigned long long j = i; j < 2000; j += i)
                prime[j] = 1;
        }
    }
}

/*
 * 
 */

int compare(const void * a, const void * b) {
    return ( *(Int*) a - *(Int*) b);
}

Int digitCount(Int n) {
    Int sum;
    while (n) {
        sum++;
        n /= 10;
    }
    return sum;
}

int main(int argc, char** argv) {
    CalculatePrimes();
    Int size = primesvector.size();
    Int tc;
    cin >> tc;
    while (tc--) {
        Int n;
        cin >> n;
        Int boxList[n];

        for (Int i = 0; i < n; i++) {
            cin >> boxList[i];
        }


        qsort(boxList, n, sizeof (Int), compare);
        Int sum = 0;
        Int max = boxList[n - 1];
        for (Int i = 0; i < n; i++) {
            Int temp = boxList[i];
            Int k = i;
            sum += (temp * k - temp * (n - 1 - k));
            if (sum > MOD) {
                sum %= MOD;
            }
        }


        UInt ans = max;
        for (Int i = 0; i < size; i++) {
            Int temp = primesvector.at(i);
            while (sum % temp == 0 && sum != 0) {
                sum = sum / temp;

                ans = (ans % MOD * temp % MOD) % MOD;
            }
            if (sum == 0) {
                break;
            }
        }
        if (sum > 0) {
            ans = (ans % MOD * sum % MOD) % MOD;
        }
        cout << ans << endl;

    }

    return 0;
}

