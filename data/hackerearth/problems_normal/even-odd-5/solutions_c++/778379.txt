#include<stdio.h>
#include<map>
using namespace std;
pair<long long, long long> get_evenodd_count(long long R, long long C)
{	//gives correct result, when R<=C
	long long even_rows = R/2, odd_rows = R - even_rows;
	pair<long long, long long> evenodd_count;
	evenodd_count.second = odd_rows * odd_rows; //odd count
	evenodd_count.first = R * (R+1) / 2 - evenodd_count.second;//even count
	return evenodd_count;
}
int main()
{
	long long t;
    scanf("%lld",&t);
        
    while(t--)
	{
		long long odd=0,even=0;
		long long R,C;
		scanf("%lld %lld",&R,&C);
		if(R<=C)
		{
			pair<long long, long long> evenodd = get_evenodd_count(R,C);
			even = evenodd.first;
			odd = evenodd.second;
		}else{
			pair<long long, long long> evenodd = get_evenodd_count(C,C);
			even = evenodd.first;
			odd = evenodd.second;
			long long small_part = (R-C)/2, big_part = (R-C) - small_part; //they can be equal too!
			if(C%2)
			{
				even += C * big_part;
				odd += C * small_part;
			}else{
				odd += C * big_part;
				even += C * small_part;
			}
		}
		printf("%lld %lld\n",even,odd);	
	}
    return 0;
}