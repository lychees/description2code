#include <stdio.h>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using  namespace  std;

#define all(p) p.begin(), p.end()
#define mp make_pair
#define pb push_back
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define mems(p, v) memset(p, v, sizeof (p))
#define ff first
#define ss second
#define ll long long
#define llu unsigned long long
#define ld long double
#define vll vector<long long int>
#define vi vector<int>
#define pii pair <int, int>
#define pll pair <long long int, long long int>
#define vpii vector<pair<int,int> >
#define psi pair<string,int>
#define pis pair<int,string>
#define nl cout<<"\n"
#define sp cout<<" "
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)

const  int  INF = 0x7f7f7f7f;
int parent[100005], sz[100005];
int fp(int i)
{
    if(parent[i]!=parent[parent[i]])
        parent[i]=fp(parent[i]);
    return parent[i];
}

void dsu(int a, int b)
{
    int pa=fp(a), pb=fp(b);
    if(sz[a]>sz[b])
    {
        sz[pa]+=sz[pb];
        parent[pb]=pa;
    }
    else
    {
        sz[pb]+=sz[pa];
        parent[pa]=pb;
    }
}
int  main ()
{
	ios_base::sync_with_stdio(false);
    //freopen ("input.txt", "r", stdin);
    //freopen ("output.txt", "w", stdout);
    int n,m,t,p[100005],q[100005], ind[100005];
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        rep(i,1,n)
        {
            parent[i]=i;
            sz[i]=1;
            ind[i]=0;
        }
        rep(i, 1, n)
        {
            cin>>p[i];
         //   ind[p[i]]=i;
        }
        rep(i, 1, n)
        {
            cin>>q[i];
            ind[q[i]]=i;
        }
        int x,y;
        rep(i,1,m)
        {
            cin>>x>>y;
            dsu(x,y);
        }
        int f=0;
        rep(i, 1, n)
        {
            if(p[i]==q[i]) continue;
            if(fp(i)!=fp(ind[p[i]])) f=1;
        }
        if(f==1) cout<<"NO\n";
        else cout<<"YES\n";
    }
    return  0;
}
