#include <iostream>
#include <cmath>
#include <vector>
#include<iomanip>
using namespace std;
int sum[1000000];
int main(){
    long long int t;
    ios::sync_with_stdio(false);
    cin>>t;
    unsigned long long int m,n,j,c=0,x,d;
    n=1000000;
    m=1;
    int prime[n];
    //long long int sumar[n];
	register long long int i,k;
    for(i=0;i<n+1;i++){
        prime[i]=1;
       // sumar[i]=0;
    }
    prime[0]=0;
    prime[1]=0;
    long long int z=sqrt(n);
    
    for (i=2; i<=z; i++){
        //sumar[i]=sumar[i-1];
      if (prime[i]){
         //sumar[i]+=i;
          
         for (k=i*i; k<=n; k+=i)
            prime[k]=0;
       }
    }
    register int counter1=0;
    sum[0]=0;
    sum[1]=0;
    for (i=2; i<=1000000; i++){
        //sumar[i]=sumar[i-1];
      if (prime[i]){
      	 	sum[i]=sum[i-1]+1;
         //sumar[i]=counter1;
         }else{
         	sum[i]=sum[i-1];
         }
      //cout<<sum[i]<<" ";
    }
    for(k=0;k<t;k++){
	
		cin>>m>>n;
	    counter1=sum[n]-sum[m-1];
	    //cout<<sum[n];
	    //cout<<sum[m-1];
	    //long long int sumprime=0;
		//if(n!=m)
		/*
		for (i=m; i<=n; i++){
	        //sumar[i]=sumar[i-1];
	      if (prime[i]){
	      	 	counter1++;
	         //sumar[i]=counter1;
	         }
	    }
	    */
	    
	        std::cout << std::fixed;
	        std::cout << std::setprecision(6)<<(float)(counter1)/(n-m+1)<<"\n";
	    //cout<<"sad";
    }
    return 0;
}

//std::cout << std::fixed;
        //cout<<(sumar[n]-sumar[m-1])/n-m+1<<endl;
