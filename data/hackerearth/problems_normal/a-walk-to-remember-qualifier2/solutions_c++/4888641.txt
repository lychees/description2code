//Created By Mayur Agarwal :)

#include <iostream>
#include <stdio.h>
#include <cmath>
#include <vector>
#include <string>
#include <cstring>
#include <set>
#include <algorithm>
#include <map>
#include <iterator>
#include <functional>
#include <queue>
#include <stack>

#define ll long long
#define ind(a) scanf("%d",&a)
#define in(a) scanf("%lld",&a)
#define inc(a) scanf("%c",&a)
#define ins(a) scanf("%s",a)
#define pr(a) printf("%lld\n",a)
#define debug(x) cout << #x << " = " << x << endl
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define pb push_back
#define ff first
#define ss second
#define SIZE 200010
const ll mod = 1000000007L;

using namespace std;
typedef pair<ll, ll>pll;
stack<int>st;
bool stackmember[SIZE];
int low[SIZE], disc[SIZE];
int tim, num;
bool ans[SIZE];
std::vector<int> vec[SIZE];
void dfs(int u)
{
	disc[u] = low[u] = ++tim;
	stackmember[u] = 1;
	st.push(u);

	for (int i = 0; i < vec[u].size(); i++)
	{
		int v = vec[u][i];
		if (disc[v] == -1)
		{
			dfs(v);
			low[u] = min(low[u], low[v]);
		}
		else if (stackmember[v] == 1)
		{
			low[u] = min(low[u], disc[v]);
		}
	}

	if (disc[u] == low[u])
	{
		int num = 0;
		while (st.top() != u)
		{
			int w = st.top();
			st.pop();
			num++;
			ans[w] = 1;
			stackmember[w] = 0;
		}
		int w = st.top();
		st.pop();
		if (num > 0)
		{
			ans[u] = 1;
		}
		else
			ans[u] = 0;
		stackmember[w] = 0;
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	ios_base::sync_with_stdio(0); cin.tie(0);
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int u, v;
		cin >> u >> v;
		vec[u].pb(v);
	}
	MS1(disc);
	for (int i = 1; i <= n; i++)
	{
		if (disc[i] == -1)
		{
			dfs(i);
		}
	}
	for (int i = 1; i <= n; i++)
	{
		cout << ans[i] << " ";
	}
	cout << endl;
	return 0;
}