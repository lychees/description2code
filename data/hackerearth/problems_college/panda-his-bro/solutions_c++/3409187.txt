#include<bits/stdc++.h>

using namespace std;

typedef pair<int,int> ii;
typedef vector<ii> vii;

#define TRvii(c, it) for(vii::iterator it = (c).begin(); it != (c).end(); it++)
#define dfs_white -1
#define dfs_black 1
#define MAX(a,b) ((a) > (b) ? (a) : (b))
int dfs_num[100001];
vii AdjList[100001];
int Distance[100001];
int dfs(int u)
{
    dfs_num[u]=dfs_black;
    TRvii(AdjList[u], v)
    if(dfs_num[v->first] == dfs_white)
    {
        Distance[v->first]=MAX(Distance[v->first],Distance[u]+1);
        dfs(v->first);
    }
}

int main()
{
    int N,i,u,v,k,M=-1,j;
    scanf("%d",&N);
    for(i=1;i<N;i++)
    {
        scanf("%d%d",&u,&v);
        AdjList[u].push_back(make_pair(v,0));
        AdjList[v].push_back(make_pair(u,0));
    }
    memset(dfs_num, dfs_white, sizeof(dfs_num));
    memset(Distance,0 , sizeof(Distance));
    dfs(u);
    for(i=1;i<=N;i++)
    {
        if(Distance[i]>M)
        {
            M=Distance[i];
            j=i;
        }
    }
    memset(dfs_num, dfs_white, sizeof(dfs_num));
    memset(Distance,0 , sizeof(Distance));
    M=-1;
    dfs(j);
    for(i=1;i<=N;i++)
    {
        if(Distance[i]>M)
        {
            M=Distance[i];
            j=i;
        }
    }
    printf("%d",M);
    return 0;

}

