#include <bits/stdc++.h>
#define fix -10000
#define ll long long
using namespace std;

struct node{
  int a,b,c;
};

bool bellman(int n,int m,struct node edge[1005])
{
  long long d[105];
  for(int i=0;i<105;i++)
    d[i]=10000000000;
  d[1]=0;
  if(m==0)
   return false;
  for(int i=1;i<n;i++)
  {
    for(int j=0;j<m;j++)
    {
      int u=edge[j].a;
      int v=edge[j].b;
      int w=edge[j].c;
      if(d[u]+w<d[v])
        d[v]=d[u]+w;
    }
  }

  for(int j=0;j<m;j++)
  {int u=edge[j].a;
      int v=edge[j].b;
      int w=edge[j].c;
    if(d[u]+w<d[v] && d[v]<10000000000/2)
      return true;
  }

  return false;
}

int main()
{
  ios_base::sync_with_stdio(0);
  int t;
  cin>>t;
  while(t--)
  {
    int n,m;
    cin>>n>>m;
    int x,y,c;
    struct node edge[1005];
    for(int i=0;i<m;i++)
    {
      cin>>x>>y>>c;
      edge[i].a=x;
      edge[i].b=y;
      edge[i].c=-1*c;
    }
    
    bool ans=bellman(n,m,edge);
    if(ans)
      cout<<"Yes\n";
    else
      cout<<"No\n";

  }


  return 0;
}
