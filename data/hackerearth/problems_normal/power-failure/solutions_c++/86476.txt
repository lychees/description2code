#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <math.h>
using namespace std;

int  isPrime[100009];
void sieve()
{
    int n = 100009;
    for(int i=3; i<=n; i=i+2)
        isPrime[i] = 1;
    isPrime[2] = 1;


    for(int i=3; i<= sqrt(n); i=i+2)
    {
        if(isPrime[i])
        {
            for(int j=i*i; j<=n; j=j+i)
                isPrime[j] = 0;
        }
    }

}



bool sortIncrease(const int &lhs, const int &rhs )
{
    return lhs > rhs;
}

int main()
{

    sieve();

    //cout<<isPrime[10]<<endl;
    int notest;
    scanf("%d", &notest);
    int n,m;
    int* power = new int[100009];
    while(notest--)
    {
        scanf("%d %d", &n, &m);

        for(int i=0; i<n; i++)
            scanf("%d", &power[i]);

        sort(power, power+n, sortIncrease);

        int k=0;
        int maxmr = m;
        long long ways=0;

        long long  thres = 1000000007;
        long long total=1;
        while(k <n )
        {

            for(int i=power[k]; i <= maxmr; i++)
            {
                if( i >= power[k] && (! isPrime[i]))
                {
                    ways = (ways + 1);

                    if(ways >= thres-100)
                        ways = ways%thres;
                }
            }

            total = total*ways;

            if(total >thres)
                total =total%thres;

            ways = ways-1;

            maxmr =  power[k]-1;
            k++;

        }

        printf("%lld\n", total);

    }



}
