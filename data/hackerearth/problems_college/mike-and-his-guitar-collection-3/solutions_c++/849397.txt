#include <algorithm>
#include <assert.h>
#include <bitset>
#include <cmath>
#include <ctype.h>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <limits.h>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <stdio.h>
#include <string>
#include <string.h>
#include <time.h>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;
typedef pair<int,int> ipair;
typedef vector<int> vi;

#define MAX 1000000007
#define F first
#define S second
#define SZ size()
#define BG begin()
#define EN end()
#define MP(a,b) make_pair(a,b)
#define PB(a) push_back(a)
#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define rev(i,n) for(int i=n;i>=0;i--)
#define take(ar,n) int ar[n]; rep(i,n) cin>>ar[i]
#define MS(a,b) memset(a,b,sizeof(a))
int powr(int n)
{
    if(n==1) return 2;
    else return 2*powr(n-1);
}
int F(int ar[],int a)
{
    sort(ar,ar+a);
    int c=0;
    rep(i,a-1) if(ar[i]!=ar[i+1]) c++;
    return c;
}
int main()
{
    int t;
	scanf("%d",&t);
	while(t--)
    {
        int n;
        cin>>n;
        int ar[n],sum[powr(n)];
        rep(i,n) scanf("%d",ar+i);
        rep(i,powr(n))
        {
            int j=i;
            int flag=0,ptr=0;
            while(j)
            {
                if(j%2==1) flag+=ar[ptr];
                ptr++;
                j=j/2;
            }
            sum[i]=flag;
        }
        cout<<F(sum,powr(n))+1<<endl;
    }
    return 0;
}
