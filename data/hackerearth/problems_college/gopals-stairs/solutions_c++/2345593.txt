#include <iostream>
#define NIL -1ull
using namespace std;



void initiate(unsigned long long* arr,long n){
	
	for(int i=1;i<=n;i++) arr[i]=NIL;	
}

//long long nSteps(unsigned long long* lookup,long n){
//	
//	if(lookup[n]==NIL){
//		if(n==1) lookup[n]=1ull;
//		else if(n==2) lookup[n]=2ull;
//		else if(n==3) lookup[3]=4ull;
//		else lookup[n]=nSteps(lookup,n-1)%1000000007ull+nSteps(lookup,n-2)%1000000007ull+nSteps(lookup,n-3)%1000000007ull;
//	} 
//	return lookup[n];	
//}

long long nSteps(unsigned long long* lookup,long n){
	lookup[1]=1ull;
	lookup[2]=2ull;
	lookup[3]=4ull;
	if(n>3){
		for(int i=4;i<=n;i++)
		lookup[i]=lookup[i-1]%1000000007ull+lookup[i-2]%1000000007ull+lookup[i-3]%1000000007ull;
	} 
	return lookup[n];
	
	
//	if(n==1) return 1;
//	if(n==2) return 2;
//	if(n==3) return 4;
//	int arr[n];
//	return nSteps(n-1)+nSteps(n-2)+nSteps(n-3);
//	
}

int main()
{
	int t;
    cin>>t;
    while(t--){
    	long n;
    	cin>>n;
    	unsigned long long lookup[n+1];
    	initiate(lookup,n);
    	
    	cout<<nSteps(lookup,n)%1000000007ull<<endl;
    }
    return 0;
}
