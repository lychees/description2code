#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>
#include <string>
#include <map>
using namespace std;
bool isPrime[1000010], isAlphaPrime[1000010];
int sumi[1000010];
#define MAX 1000000
void calc() {
	memset(isPrime, true, sizeof(isPrime));
	isPrime[0] = isPrime[1] = false;
	for (long long i = 2; i <= MAX; i++) if (isPrime[i]) for (long long j = i*i; j <= MAX; j += i) isPrime[j] = false;
}

void calcAlpha() {
	char num [10];
	memset(isAlphaPrime, false, sizeof(isAlphaPrime));
	for (int i = 0; i <= MAX; i++) {
		sprintf(num, "%d", i);
		int t = 1, last = 0;
		for (int j = strlen(num)-1; j >=0 ; j--) {
			last  = t*(num[j] - '0') + last;
			t *= 10;
			if (isPrime[last]) isAlphaPrime[i] = true;
		}
		//if ( i < 50) cout << i << " " <<isAlphaPrime[i] <<"\n";
	}
}

int main()
{
	calc();
	calcAlpha();
	memset(sumi, 0, sizeof(sumi));
	int last = 0;
	for (int i = 1; i <= MAX; i++) sumi[i] = sumi[i-1] + isAlphaPrime[i]; 
	int Q;
	//for (int i = 0; i < 20; i++) cout << sumi[i] << " "; cout <<"\n";
	for (cin >> Q; Q; Q--) {
		int L, R; //cin >> L >> R;
		scanf("%d %d", &L, &R);
		int ans = sumi[R] - sumi[L] + isAlphaPrime[L];
		cout << ans <<"\n";
	}
    return 0;
}
