    #include<bits/stdc++.h>
    using namespace std;
     
    int A[1000001];
    void initialize(int n)
    {
        for(int i=0;i<=n;i++)
            A[i]=i;
    }
    int root(int x)
    {
        while(x!=A[x])
        {
            A[x]=A[A[x]];
            x=A[x];
        }
        return x;
    }
    void Merge(int x,int y)
    {
        A[root(x)]=A[root(y)];
    }
    int main()
    {
        int nodes,edges,x,y;
        long long k,c,N=0;
        scanf("%d%d%lld",&nodes,&edges,&k);
            initialize(nodes);
        pair<long long ,pair<int,int> >p[edges];
        for(int i=0;i<edges;i++)
        {
            scanf("%d%d%lld",&x,&y,&c);
            p[i]=make_pair(c,make_pair(x,y));
        }
        sort(p,p+edges);
        N=nodes;
        if(k<(N-1))
        {
            printf("-1\n");
            return 0;
        }
        int n=N-1;
        for(int i=0;i<edges;i++)
        {
            x=p[i].second.first;
            y=p[i].second.second;
            c=p[i].first;
            if(N==0)
            break;
            if(root(x)==root(y))
            continue;
                Merge(x,y);
                N--;
                k-=c;
                if(k>=(N-1))
                n=N-1;
        }
        if(N>1)
        {
        	printf("-1\n");
        }
        else
        printf("%d\n",n);
        return 0;
    }