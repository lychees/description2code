#include <iostream>
#include<vector>
#include <string>
#include <cstdio>
using namespace std;
typedef long long ll;
#define N 100010
class BIT
{
	vector<ll> data;
public:
	BIT(int sz = N) :data(sz){}
	ll query(int l, int r)
	{
		ll ans = 0;
		--l;
		while (l != r)
		{
			if (l<r) ans += data[r], r = (r&(r + 1)) - 1;
			else ans -= data[l], l = (l&(l + 1)) - 1;
		}
		return ans;
	}
	void update(int idx, ll d)
	{

		while (idx<data.size())
		{
			data[idx] += d;
			idx |= idx + 1;
		}
	}
};
ll arr[5][N];
char str[N];
int main()
{
	BIT bts[25];
	int config[5][5];
	int wh[5]{0, 1, 2, 3, 4};
	int n;
	scanf("%d", &n);
	for (int i = 0, k = 0; i<5; ++i)
	{
		for (int j = 0; j<5; ++j)
		{
			config[i][j] = k++;
		}
	}
	for (int i = 0; i<5; ++i)
	{
		for (int j = 0; j<n; ++j) scanf("%lld", &arr[i][j]);
	}
	scanf("%s", str);
	for (int i = 0; i<n; ++i)
	{
		int p = str[i] - 'A';
		for (int j = 0; j<5; ++j)
		{
			bts[config[p][j]].update(i, arr[j][i]);
		}
	}
	int q;
	scanf("%d", &q);
	while (q--)
	{
		char com[5];
		scanf("%s", com);
		if (com[1] == 'e')
		{
			char x, y;
			scanf(" %c %c", &x, &y);
			swap(wh[x - 'A'], wh[y - 'A']);
			for (int i = 0; i<5; ++i) swap(config[i][x - 'A'], config[i][y - 'A']);
		}
		else if (com[1] == 'c')
		{
			int x;
			char c;
			scanf("%d %c", &x, &c);
			--x;
			int pos = str[x] - 'A';
			for (int i = 0; i<5; ++i)
				bts[config[pos][i]].update(x, -arr[wh[i]][x]);
			str[x] = c;
			pos = c - 'A';
			for (int i = 0; i<5; ++i)
				bts[config[pos][i]].update(x, arr[wh[i]][x]);
		}
		else
		{
			ll ans = 0;
			int x, y;
			scanf("%d%d", &x, &y);
			--x, --y;
			for (int i = 0; i<5; ++i)
			{
				ans += bts[config[i][i]].query(x, y);
			}
			printf("%lld\n", ans);
		}
	}
	return 0;
}
