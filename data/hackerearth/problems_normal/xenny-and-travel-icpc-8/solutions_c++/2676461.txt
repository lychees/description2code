#include <bits/stdc++.h>
using namespace std;
#define cin(n) scanf("%d",&n)
#define pb push_back
#define mp make_pair
#define ll long long
#define MAXN 100001
#define mod 1000000007

ll power(ll a,ll b){
    ll ans=1;
    
    while(b){
        if(b&1)
            ans=(ans*a)%mod;
        a=(a*a)%mod;
        b/=2;
    }
    return ans;
}

vector<pair<int,int> >adj[1259];
vector<pair<int,int> >adj2[1259];
vector<pair<int,int> >adj3[1259];
vector<pair<int,int> >adj4[1259];


int n;
vector<int> dijkstra(int s)
{
    vector<int>dis;
    dis.resize(n+1,1000000000);
    dis[s]=0;
    priority_queue<pair<int,int> >pq;
    pq.push(mp(0,s));
    while(pq.size())
    {
        int d=-pq.top().first;
        int u=pq.top().second;
        pq.pop();
        if(dis[u]<d)
            continue;
        for(int i=0;i<adj[u].size();i++)
        {
            int v=adj[u][i].first;

            if(dis[v]>(dis[u]+adj[u][i].second))
            {
                dis[v]=dis[u]+adj[u][i].second;
                pq.push(mp(-dis[v],v));
            }
        }
    }
    return dis;
}

vector<int> dijkstra2(int s)
{
    vector<int>dis;
    dis.resize(n+1,1000000000);
    dis[s]=0;
    priority_queue<pair<int,int> >pq;
    pq.push(mp(0,s));
    while(pq.size())
    {
        int d=-pq.top().first;
        int u=pq.top().second;
        pq.pop();
        if(dis[u]<d)
            continue;
        for(int i=0;i<adj2[u].size();i++)
        {
            int v=adj2[u][i].first;

            if(dis[v]>(dis[u]+adj2[u][i].second))
            {
                dis[v]=dis[u]+adj2[u][i].second;
                pq.push(mp(-dis[v],v));
            }
        }
    }
    //cout<<dis[3]<<"\n";
    //cout<<dis[n]<<"\n";
    return dis;
}


vector<int> dijkstra3(int s)
{
    vector<int>dis;
    dis.resize(n+1,1000000000);
    dis[s]=0;
    priority_queue<pair<int,int> >pq;
    pq.push(mp(0,s));
    while(pq.size())
    {
        int d=-pq.top().first;
        int u=pq.top().second;
        pq.pop();
        if(dis[u]<d)
            continue;
        for(int i=0;i<adj3[u].size();i++)
        {
            int v=adj3[u][i].first;

            if(dis[v]>(dis[u]+adj3[u][i].second))
            {
                dis[v]=dis[u]+adj3[u][i].second;
                pq.push(mp(-dis[v],v));
            }
        }
    }
    //cout<<dis[3]<<"\n";
    //cout<<dis[n]<<"\n";
    return dis;
}


vector<int> dijkstra4(int s)
{
    vector<int>dis;
    dis.resize(n+1,1000000000);
    dis[s]=0;
    priority_queue<pair<int,int> >pq;
    pq.push(mp(0,s));
    while(pq.size())
    {
        int d=-pq.top().first;
        int u=pq.top().second;
        pq.pop();
        if(dis[u]<d)
            continue;
        for(int i=0;i<adj4[u].size();i++)
        {
            int v=adj4[u][i].first;

            if(dis[v]>(dis[u]+adj4[u][i].second))
            {
                dis[v]=dis[u]+adj4[u][i].second;
                pq.push(mp(-dis[v],v));
            }
        }
    }
    //cout<<dis[3]<<"\n";
    //cout<<dis[n]<<"\n";
    return dis;
}
int main()
{
    int m,t,i,j,k,l,c;
    
    //cin(t);
    t=1;
    
    while(t--)
    {
        cin(n);
        
        for(i=1;i<=n;i++)
            adj[i].clear(),adj2[i].clear();
        
        for(i=1;i<=n;i++)
            adj3[i].clear(),adj4[i].clear();
        
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                cin(k);

				if(j==i)
				continue;
                adj[i].pb(mp(j,k));            
                adj3[j].pb(mp(i,k));            
                
               }
        }
        
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                cin(k);
				if(j==i)
				continue;
                adj2[j].pb(mp(i,k));
                adj4[i].pb(mp(j,k));
                
            }
        }
        int u,v;
        cin(u); cin(v);
        vector<int>dis1=dijkstra(u);
        vector<int>dis2=dijkstra2(v);
        vector<int>dis3=dijkstra3(v);
        vector<int>dis4=dijkstra4(u);
        
        int ans=1000000007;
        for(i=1;i<=n;i++){
            if(i==v||i==u)
                continue;
            // cout<<dis2[3]<<"\n";
               
            ans=min(ans,dis1[i]+dis2[i]);
            ans=min(ans,dis3[i]+dis4[i]);
            
        }
        cout<<ans<<"\n";
    }
    return 0;
}