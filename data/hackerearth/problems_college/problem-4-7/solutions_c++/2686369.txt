#include <iostream>
#include <algorithm>
#include <map>
#include <cstring>
using namespace std;


int main() {
	const int maxn = 100100;
int dp[maxn];
char c[maxn];
map<string,int> cost;
    int n, m;
    cin >> n >> m;
    cin >> c;
    for (int i = 0; i < m; i++) {
         string s;
         int cc;
         cin >> s >> cc;
         cost[s] = max(cost[s], cc);
    }
    dp[0] = 1;
    for (int i = 1; i < n; i++) {
         string ss;
         ss += c[i - 1];
         ss += c[i];
         if (cost[ss] != 0) {
              if (i > 1)
                 dp[i] = dp[i - 2] + cost[ss];
             else 
                 dp[i] = cost[ss];
         }
         dp[i] = max(dp[i], dp[i - 1] + 1);
    }
    cout << dp[n - 1] << endl;
    return 0;
}