#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
#define MOD 1000000007
#define pb push_back
#define endl '\n'
#define f first
#define s second
#define forn(i,n) for(int i = 0; i < int(n); i++)
vector<pair<pair<ll,ll>,ll>> graph;
ll ans = 0;
bool cmp(pair<pair<ll,ll>,ll> a, pair<pair<ll,ll>,ll> b)
{
	return a.s < b.s;
}
int size[100005], p[100005];
int find(int a)
{
	if(p[a] != a) p[a] = find(p[a]);
	return p[a];
}
int uni(int a, int b)
{
	a = find(a);
	b = find(b);
	if(a == b) return 0;
	if(size[a] > size[b])
	{
		p[b] = a;
		size[a] += size[b];
		size[b] = 0;
	}
	else
	{
		p[a] = b;
		size[b] += size[a];
		size[a] = 0;
	}
	return 1;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int n,m;
	cin >> n >> m;
	for(int i = 0; i < n; i++)
	{
		size[i] = 1; 
		p[i] = i;
	}
	for(int i = 0; i < m; i++)
	{
		int u,v,w;
		cin >> u >> v >> w;
		u--,v--;
		graph.pb({{u,v},w});
	}
	sort(graph.begin(), graph.end(), cmp);
	for(int i = 0; i < m; i++)
		if(uni((graph[i].f).f, (graph[i].f).s) == 1) ans += graph[i].s;
	cout << ans << endl;
	return 0;
}
