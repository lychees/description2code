#include <iostream>
using namespace std;

long long dp[100][100][100];

long long gcd(long long a, long long b){
	if(a > b){
		swap(a, b);
	}
	if(!a){
		return b;
	}
	return gcd(b%a, a);
}

int n, k;
long long ans, g;

int main()
{
    cin >> n >> k;
    
    dp[1][1][1] = 1;
    dp[1][0][0] = 1;
    for(int i=2;i<=n;++i){
    	for(int j=0;j<i;++j){
    		for(int k=0;k<i;++k){
    			int maxi = max(k+1, j);
    			dp[i][k+1][maxi] += dp[i-1][k][j];
    			dp[i][0][j] += dp[i-1][k][j];
    		}
    	}
    }
    
    for(int i=0;i<100;++i){
    	for(int j=k;j<100;++j){
    		ans += dp[n][i][j];
    	}
    }
    g = gcd(ans, (1LL << n));
    cout << ans / g << "/" << (1LL << n) / g << endl;
    
    
    return 0;
}
