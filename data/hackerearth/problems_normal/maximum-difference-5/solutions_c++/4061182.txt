#include <iostream>
#include <stdio.h>
#include <assert.h>
#include <algorithm>
using namespace std;

int max(int a, int b)
{
	return a >= b ? a : b;
}

/*
int main()
{
    int N;
    scanf("%d", &N);
    int a[N], i;
    for(i=0;i<N;++i)
    {
    	scanf("%d", &a[i]);
    }
    sort(a, a + N);
    int front, end;
    front = end = a[N - 1];
    int c = 1, j = N - 2;
    i = 0;
    long long int ans = 0;
    
    while(i <= j)
    {
    	//printf("%d %d\n", front, end);
    	if(c % 2 == 1)
    	{
    		ans += max(abs(front - a[i]), abs(end - a[i]));
    		if(abs(front - a[i]) == max(abs(front - a[i]), abs(end - a[i])))
    		{
    			front = a[i];
    		}
    		else
    		{
    			end = a[i];
    		}
    		++i;
    	}
    	else
    	{
    		ans += max(abs(front - a[j]), abs(end - a[j]));
    		if(abs(front - a[j]) == max(abs(front - a[j]), abs(end - a[j])))
    		{
    			front = a[j];
    		}
    		else
    		{
    			end = a[j];
    		}
    		--j;
    	}
    	++c;
    }
    //printf("%d %d\n", front, end);
    printf("%d\n", ans);
    
    return 0;
}
*/
#define SIZE 1007
int a[SIZE];

int main()
{
	int N;
	scanf("%d", &N);
	assert(N >= 1 && N <= 1000);
	int i;
	for(i=0;i<N;++i)
	{
		scanf("%d", &a[i]);
		assert(a[i] >= 1 && a[i] <= 100000);
	}
	sort(a, a + N);
	/*
	for(i=0;i<N;++i)
	{
		printf("%d ", a[i]);
	}
	printf("\n");
	*/
	int j = N - 1, d = 1, end = a[0], ans = 0;
	i = 1;
	while(d < N)
	{
		if(d % 2 == 0)
		{
			ans += abs(end - a[i]);
			end = a[i];
			++i;
		}
		else
		{
			ans += abs(end - a[j]);
			end = a[j];
			--j;
		}
		++d;
	}
	d = 1;
	i = 0;
	j = N - 2;
	end = a[N - 1];
	int ans1 = 0;
	while(d < N)
	{
		if(d % 2 == 1)
		{
			ans1 += abs(end - a[i]);
			end = a[i];
			++i;
		}
		else
		{
			ans1 += abs(end - a[j]);
			end = a[j];
			--j;
		}
		++d;
	}
	printf("%d\n", max(ans, ans1));
	return 0;
}
