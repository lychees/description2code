#include <iostream>
#include <algorithm>
#include <cassert>

using namespace std;

bool mysort(long a, long b)
{
	if(a > b)
		return true;
	return false;
}

int main()
{
    long T;
    cin >> T;
    
    for(long t = 0; t < T; t++)
    {
    	vector<long> init;
    	vector<long> final;
    	long initSum = 0, finalSum = 0;
    	long N, X, Y;
    	cin >> N >> X >> Y;
    	
    	for(long n = 0; n < N; n++)
    	{
    		long a, b;
    		cin >> a >> b;
    		initSum += a;
    		finalSum += b;
    		init.push_back(a);
    		final.push_back(b);
    	}
    	
    	//assert(initSum == finalSum);
    	sort(init.begin(), init.end(), mysort);
    	sort(final.begin(), final.end(), mysort);
    	
    	long cost = 0;
    	for(long i = 0; i < N; i++)
    	{
    		if(init[i] > final[i])
    			cost += (-final[i] + init[i]) * Y;
    		else
    			cost += (final[i] - init[i]) * X;
    	}
    	
    	cout << cost << endl;
    }
    
    return 0;
}
