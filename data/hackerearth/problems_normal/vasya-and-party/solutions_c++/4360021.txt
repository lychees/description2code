#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <vector>
#include <queue>
#include <string.h>
using namespace std;
#define s(t) scanf("%d",&t)
#define ll long long int
#define mod 1000000007

vector<int> G[1000008];
int visit[1000008], C[1000008];

int count_maximum;
int maximum;

void dfs(int x)
{

	//printf("%d, ", x );
	visit[x] = 1;

	if( C[x] > maximum)
	{
		maximum = C[x];
		count_maximum = 1;
	}
	else if( C[x] == maximum)
		count_maximum++;

	int i;

	//int maximum = C[x];

	for( i = 0; i < G[x].size(); i++)
	{
		int next = G[x][i];
		if(visit[next] == 0)
		{
			dfs(next);
		}
	}

}

int main()
{
	int n, m, i, j;
	s(n); s(m);


	for( i = 1; i <= n; i ++)
	{
		visit[i] = 0;
		s(C[i]);
	}

	for( i = 1 ; i <= m ; i++)
	{
		int x, y;
		s(x); s(y);

		G[x].push_back(y);
		G[y].push_back(x);
	}

	ll ans = 1;
	for( i = 1; i <= n; i++)
	{
		if(visit[i] == 0)
		{
			count_maximum = 0;
			maximum = 0;
			dfs(i);
			//printf("max %d %d\n", maximum, count_maximum );
			ans *= count_maximum;
			ans %= mod;
		}
	}

	printf("%lld\n",ans );

	return 0;
}