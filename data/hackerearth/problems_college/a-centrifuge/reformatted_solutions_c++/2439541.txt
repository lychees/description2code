#include <bits/stdc++.h>
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, N) for (int I = 0; I < (N); ++I)
#define REPP(I, A, B) for (int I = (A); I < (B); ++I)
#define PER(I, N) for (int I = (N); I >= 0; --I)
#define PERR(I, A, B) for (int I = (A); I >= B; --I)
#define ITR(I, A)                                                              \
  for (__typeof((A).begin()) I = (A).begin(), _##i = (A).end(); I != _##i; ++I)
#define RI(X) scanf("%d", &(X))
#define RII(X, Y) scanf("%d%d", &(X), &(Y))
#define RIII(X, Y, Z) scanf("%d%d%d", &(X), &(Y), &(Z))
#define DRI(X)                                                                 \
  int(X);                                                                      \
  scanf("%d", &X)
#define DRII(X, Y)                                                             \
  int X, Y;                                                                    \
  scanf("%d%d", &X, &Y)
#define DRIII(X, Y, Z)                                                         \
  int X, Y, Z;                                                                 \
  scanf("%d%d%d", &X, &Y, &Z)
#define RS(X) scanf("%s", (X))
#define CASET                                                                  \
  int ___T, case_n = 1;                                                        \
  scanf("%d ", &___T);                                                         \
  while (___T-- > 0)
#define MP make_pair
#define PB push_back
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define LEN(X) strlen(X)
#define PII pair<int, int>
#define VPII vector<pair<int, int>>
#define PLL pair<long long, long long>
#define F first
#define S second
#define LB(X) __builtin_ctz((X))
#define ONES(X) __builtin_popcount((X))
typedef long long LL;
using namespace std;
template <class T> inline void smax(T &x, T y) { x = max((x), (y)); }
template <class T> inline void smin(T &x, T y) { x = min((x), (y)); }
const int MOD = 1e9 + 7;
const int SIZE = 1e2 + 10;
#define LOCALTEST 0 // change this to 1 to perform localtest on "in.txt"
int m, n;
int main() {
  if (LOCALTEST) {
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
  }

  CASET {
    RII(m, n);
    if (n == 0) {
      printf("0\n");
      continue;
    }
    if (m >= n) {
      printf("10\n");
      continue;
    }
    int ans = (n + m - 1) / m;
    int lef = n;
    if (n % m) {
      lef = n - (m - (n % m));
    }
    // printf("toprow time %d, bottom row left %d, final ans ", ans, lef);
    ans += (lef + m - 1) / m;

    printf("%d\n", ans * 5);
  }
  return 0;
}
