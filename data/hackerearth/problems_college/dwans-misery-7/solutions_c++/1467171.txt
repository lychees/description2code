#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
typedef long long ll;
int n;
ll a[25001];
vector<ll> v;
//http://www.geeksforgeeks.org/maximum-sum-such-that-no-two-elements-are-adjacent/
ll solve()
{
  ll incl = v[0];
  int N = v.size();
  ll excl = 0;
  ll excl_new;   
  for (int i = 1; i < N; i++){  
     /* current max excluding i */
     excl_new = (incl > excl)? incl: excl; 
     /* current max including i */
     incl = excl + v[i];
     excl = excl_new;
  } 
   /* return max of incl and excl */
   return ((incl > excl)? incl : excl);
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--){
    	scanf("%d",&n);
    	memset(a,0,sizeof(a));
    	for(int i=0;i<n;i++) scanf("%lld",&a[i]);
    	v.clear();
    	for(int i=0;i<n-1;i++) v.push_back(a[i]);
    	ll ans1 = solve();
    	v.clear();
    	for(int i=1;i<n;i++) v.push_back(a[i]);
    	ll ans2 = solve();
    	ll ans = max(ans1,ans2);
    	printf("%lld\n",ans);
    }
    return 0;
}
