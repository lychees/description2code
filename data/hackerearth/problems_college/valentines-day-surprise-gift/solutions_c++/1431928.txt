#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
typedef long long ll;
const int mod = 1000000007;
ll gcd(ll a ,ll b )
{
	if(b == 0)
	return a;
	return gcd(b,a%b);
}
ll p(ll cur, int n) {
    ll ret = 1;
       while(n){
       if(n & 1) 
            ret = ret * cur % mod;
        n = n>>1;
        cur = cur * cur % mod;
    }
   return ret;
}

ll R(int n) {
    if(n <= 1) return 1;
    if(n == 2) return 1;
    if(n <= 10) {
        ll ans = 1;
        for(int i = 3; i <= n && i < 9; i += 2) {
            ans *= i;
        }
        return ans;
    }
    return p(2, (n + 3) / 4) * R((n + 4) / 5) % mod * R((n + 9) / 10) % mod;
}

int main() {
    int t;
    scanf("%d", &t);
    while(t--) {
        int n,i,j;
        scanf("%d", &n);
        ll r = R(n);
        ll ans = r;
        for(i=1; i<=5; ++i){
         for(j=1 ; j<= 5; ++j){
                 ll a = i * r % mod, b = j * r % mod;
            if(gcd(a, b) == r) ans = max(ans, p(a, b));
        }
        }
        printf("%lld\n", ans);
    }
    
	return 0;
}