#include<bits/stdc++.h>
using namespace std;
#define ll long long
vector<pair<ll,ll> > adj[1000000+1];
bool visited[1000000+1];
vector<ll> order;
void dfs(int s)
{
    visited[s]=true;
    for(ll i=0;i<adj[s].size();i++)
    {
        if(visited[adj[s][i].first]==false)
            dfs(adj[s][i].first);
    }
    order.push_back(s);
}
int main()
{
    ll R,P;
    scanf("%lld%lld",&R,&P);
    order.clear();
    for(ll i=0;i<=R;i++)
        adj[i].clear();
    ll r1,r2,t;
    for(ll i=0;i<P;i++)
    {
        scanf("%lld%lld%lld",&r1,&r2,&t);
        adj[r1].push_back(make_pair(r2,t));
    }
    for(int i=0;i<=R;i++)
        visited[i]=false;
    for(int i=1;i<=R;i++)
    {
        if(visited[i]==false)
            dfs(i);
    }
    //for(int i=0;i<order.size();i++)
   //     cout<<order[i]<<"   ";
    long long di[R+1];
    long long M=0;
    for(long long i=0;i<order.size();i++)
    {
        if(adj[order[i]].size()==0)
            di[order[i]]=0;
        else
        {
            long long d=0;
            for(long long j=0;j<adj[order[i]].size();j++)
            {
                d=max(d,(adj[order[i]][j].second+di[adj[order[i]][j].first]+2));
            }
            di[order[i]]=d;
            M=max(d,M);
        }
    }
    cout<<M<<endl;
    return 0;
}
