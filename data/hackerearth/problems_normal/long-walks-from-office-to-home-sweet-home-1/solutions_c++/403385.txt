#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cmath>

using namespace std;

#define LL long long
#define ll long long
#define PB push_back
#define MP make_pair
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define F first
#define S second
#define MOD 1000000007

int solve();
int main(){
    int test = 1;
    cin>>test;
    while(test--){
        solve();
    }
}
int n;

LL a[51][51];
LL c[51][51];

int power(LL k){
	if(k == 1) {
		for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n; j++){
				c[i][j] = a[i][j];
			}
		}
		return 0;
	}
	if(k == 0){
        for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n; j++){
				c[i][j] = 0;
			}
            c[i][i] = 1;
		}
		return 0;
	}
	LL tmp[n + 1][51];
	power(k / 2);
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			tmp[i][j] = 0;
			for(int k = 1; k <= n; k++){
				tmp[i][j] += c[i][k] * c[k][j];
				if(tmp[i][j] >= MOD) tmp[i][j] %= MOD;
			}
		}
	}
	for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            c[i][j] = tmp[i][j];
        }
    }
    if(k & 1){
	    for(int i = 1; i <= n; i++){
	        for(int j = 1; j <= n; j++){
	    		tmp[i][j] = 0;
	    		for(int k = 1; k <= n; k++){
					tmp[i][j] += c[i][k] * a[k][j];
                    if(tmp[i][j] >= MOD) tmp[i][j] %= MOD;
				}
	        }
	    }
	    for(int i = 1; i <= n; i++){
	        for(int j = 1; j <= n; j++){
	            c[i][j] = tmp[i][j];
	        }
	    }
    }
    return 0;
}

int solve(){
    int u, v;
    LL k;
    cin>>n>>k>>u>>v;
    u++;
    v++;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            sld(a[i][j]);
        }
    }
    power(k);
    cout<<c[u][v]<<endl;
    return 0;
}
