

    #include <bits/stdc++.h>
    #define M 1000000009
    using namespace std;
    long long dp[302][302][2];
    int main()
    {
    	int q,x,y,n;
        string op,ex,res;
        cin >> ex >> op;
        n = (int)ex.size();
        for ( int i = 0; i < n; i++ ) dp[i][i][ex[i]-48] = 1;
        for ( int i = 0; i < n-1; i++ ) {
            if ( op[i] == 'x' ) {
                dp[i][i+1][0] = (dp[i][i+1][0] + (dp[i][i][1]*dp[i+1][i+1][1])%M)%M;
                dp[i][i+1][0] = (dp[i][i+1][0] + (dp[i][i][0]*dp[i+1][i+1][0])%M)%M;
                dp[i][i+1][1] = (dp[i][i+1][1] + (dp[i][i][1]*dp[i+1][i+1][0])%M)%M;
                dp[i][i+1][1] = (dp[i][i+1][1] + (dp[i][i][0]*dp[i+1][i+1][1])%M)%M;
            }
            else if ( op[i] == 'o' ) {
                dp[i][i+1][0] = (dp[i][i+1][0] + (dp[i][i][0]*dp[i+1][i+1][0])%M)%M;
                dp[i][i+1][1] = (dp[i][i+1][1] + (dp[i][i][0]*dp[i+1][i+1][1])%M)%M;
                dp[i][i+1][1] = (dp[i][i+1][1] + (dp[i][i][1]*dp[i+1][i+1][0])%M)%M;
                dp[i][i+1][1] = (dp[i][i+1][1] + (dp[i][i][1]*dp[i+1][i+1][1])%M)%M;
            }
            else if ( op[i] == 'a' ) {
                dp[i][i+1][1] = (dp[i][i+1][1] + (dp[i][i][1]*dp[i+1][i+1][1])%M)%M;
                dp[i][i+1][0] = (dp[i][i+1][0] + (dp[i][i][1]*dp[i+1][i+1][0])%M)%M;
                dp[i][i+1][0] = (dp[i][i+1][0] + (dp[i][i][0]*dp[i+1][i+1][1])%M)%M;
                dp[i][i+1][0] = (dp[i][i+1][0] + (dp[i][i][0]*dp[i+1][i+1][0])%M)%M;
            }
        }
        for ( int i = 3; i <= n; i++ ) {
            for ( int j = 0; j <= n-i; j++ ) {
                int fs = j;
                int sc = i+j-1;
                for ( int k = j; k <= i+j-2; k++ ) {
                    if ( op[k] == 'x' ) {
                        dp[fs][sc][0] = (dp[fs][sc][0] + (dp[fs][k][1]*dp[k+1][sc][1])%M)%M;
                        dp[fs][sc][0] = (dp[fs][sc][0] + (dp[fs][k][0]*dp[k+1][sc][0])%M)%M;
                        dp[fs][sc][1] = (dp[fs][sc][1] + (dp[fs][k][1]*dp[k+1][sc][0])%M)%M;
                        dp[fs][sc][1] = (dp[fs][sc][1] + (dp[fs][k][0]*dp[k+1][sc][1])%M)%M;
                    }
                    else if ( op[k] == 'o' ) {
                        dp[fs][sc][0] = (dp[fs][sc][0] + (dp[fs][k][0]*dp[k+1][sc][0])%M)%M;
                        dp[fs][sc][1] = (dp[fs][sc][1] + (dp[fs][k][0]*dp[k+1][sc][1])%M)%M;
                        dp[fs][sc][1] = (dp[fs][sc][1] + (dp[fs][k][1]*dp[k+1][sc][0])%M)%M;
                        dp[fs][sc][1] = (dp[fs][sc][1] + (dp[fs][k][1]*dp[k+1][sc][1])%M)%M;
                    }
                    else if ( op[k] == 'a' ) {
                        dp[fs][sc][1] = (dp[fs][sc][1] + (dp[fs][k][1]*dp[k+1][sc][1])%M)%M;
                        dp[fs][sc][0] = (dp[fs][sc][0] + (dp[fs][k][1]*dp[k+1][sc][0])%M)%M;
                        dp[fs][sc][0] = (dp[fs][sc][0] + (dp[fs][k][0]*dp[k+1][sc][1])%M)%M;
                        dp[fs][sc][0] = (dp[fs][sc][0] + (dp[fs][k][0]*dp[k+1][sc][0])%M)%M;
                    }
                }
            }
        }
        cin >> q;
        while ( q-- ) {
            cin >> x >> y >> res;
            if ( res == "true" ) cout << dp[x-1][y-1][1] << endl;
            else cout << dp[x-1][y-1][0] << endl;
        }
    	return 0;
    }

