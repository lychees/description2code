#include<bits/stdc++.h>
#define X first
#define Y second
#define mpp make_pair
#define ll long long
#define nl printf("\n")
#define SZ(x) (int)(x.size())
#define pb(x) push_back(x)
#define pii pair<int,int>
#define pll pair<ll,ll>
#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define PL(a) printf("%lld",a)
#define SL(a) scanf("%lld",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define SL2(a,b) scanf("%lld%lld",&a,&b)
#define SL4(a,b,c,d) scanf("%lld%lld%lld%lld",&a,&b,&c,&d)
#define all(v) v.begin(),v.end()
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(ll i=a;i<=n;i++)
ll arr[32005];
ll seg[90000];	
ll mod=1000000007;
bool sieve[1000007];
void siev()
{
	ll i,j;
	memset(sieve,true,sizeof(sieve));
	sieve[0]=sieve[1]=false;
	for(i=2;i<1004;i++)
	{
		if(sieve[i])
		{
			for(j=i;i*j<=1000000;j++)
			{
				sieve[i*j]=false;
			}
		}
	}
}
void init(ll nd,ll l,ll r)
{
	if(l==r)
	{
		if(sieve[arr[l]])
		{
			seg[nd]=1;
			return;
		}
		seg[nd]=0;
		return;
	}
	ll mid=(l+r)/2;
	init(nd*2,l,mid);
	init(nd*2+1,mid+1,r);
	seg[nd]=seg[nd*2]+seg[nd*2+1];	
}
ll quer(ll nd,ll l,ll r,ll a,ll b)
{
	if((r<a)||(l>b))
	return 0;
	if((l>=a)&&(r<=b))
	return seg[nd];
	ll mid=(l+r)/2;
	return (quer(nd*2,l,mid,a,b)+quer(nd*2+1,mid+1,r,a,b));
}
void update(ll nd,ll l,ll r,ll a,ll b)
{
	seg[nd]+=b;
	if(l==r)
	return;
	ll mid=(l+r)/2;
	if(a<=mid)
	update(nd*2,l,mid,a,b);
	else
	update(nd*2+1,mid+1,r,a,b);
	
}


using namespace std;

int main()
{
	siev();
	ll t,n,q,x,y;
	char c;
	SL(t);
	while(t--)
	{
		SL(n);
		fr(i,0,n-1)
		SL(arr[i]);
		init(1,0,n-1);
		SL(q);
		while(q--)
		{
			cin>>c;
			SL2(x,y);
			if(c=='A')
			cout<<quer(1,0,n-1,x-1,y-1)<<endl;
			else
			{
				if(sieve[arr[x-1]]&&!(sieve[y]))
				update(1,0,n-1,x-1,-1);
				if(!(sieve[arr[x-1]])&&sieve[y])
				update(1,0,n-1,x-1,1);
				arr[x-1]=y;
			}
		}
	}
	
}
	