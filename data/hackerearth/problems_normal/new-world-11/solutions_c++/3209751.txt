#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>


#include <fstream>
#include <sys/stat.h>
#include <stdlib.h>
#include <stdio.h>
using namespace std;

#define FOR(i, a, b) for(int i=(a);i<(b);i++)
#define RFOR(i, b, a) for(int i=(b)-1;i>=(a);--i)
#define FILL(A,value) memset(A,value,sizeof(A))
#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define Pi 3.14159265358979

typedef long long Int;
typedef unsigned long long UInt;
typedef vector<int> VI;
typedef pair<int, int> PII;

const int INF = 1000000000;
const int MAX = 100007;
const int MAX2 = 1000000;
const int MAXD = 20;
const int BASE = 1000000007;
const int MOD = 1000000007;

int n, k;
int a[MAX];
int dp[MAX];

bool f(int x)
{
	dp[0] = 0;
	int pos = 0;
	FOR(i,1,n)
	{
		while (a[i] - a[pos] > x) ++pos;
		if (pos == i) return 0;
		dp[i] = dp[pos] + 1;
	}
	if (dp[n - 1] <= k) return 1;
	else return 0;
}

int main()
{
	//freopen("in.txt" , "r" , stdin);
	//freopen("out.txt" , "w" , stdout);

	int t;
	cin >> t;
	FOR(tt,0,t)
	{
		cin >> n >> k;
		FOR(i,0,n)
		{
			scanf("%d" , &a[i]);
		}
		int L = 0;
		int R = INF;
		while (R - L > 1)
		{
			int X = (L + R) / 2;
			if (f(X))
			{
				R = X;
			}
			else
			{
				L = X;
			}
		}
		cout << R << endl;
	}

    return 0;
}
