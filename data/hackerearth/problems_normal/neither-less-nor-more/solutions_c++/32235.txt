#include<iostream>
#include<cstdio>
#include<utility>
#include<algorithm>

using namespace std;

#define LL long long
#define pii pair<int,int>
#define F first
#define S second
#define mp make_pair
#define INF 1000000000000000000LL

pii Exp[20];
int factorize(int n){
    for(int i=0;i<20;i++){
        Exp[i].F=0;
        Exp[i].S=0;
    }
    int k=2,i=0;
    while(k*k<=n){
        if(n%k==0){
            int e=1;
            n/=k;
            while(n%k==0){
                n/=k;
                e++;
            }
            Exp[i++]=mp(k,e);
        }
        else k++;
    }
    if(n!=1) Exp[i]=mp(n,1);
}

LL primeExp(LL n, LL p){
    LL exp = 0;
    n/=p;
    while(n!=0){
        exp+=n;
        n/=p;
    }
    return exp;
}

LL Min(LL n){
    LL finalexp = INF;
    int i=0;
    while(Exp[i].F!=0){
        LL pow = primeExp(n,Exp[i].F);
        finalexp = min(finalexp,pow/Exp[i].S);
        i++;
    }
    return finalexp;
}

LL f(LL k){
    if(k==0) return 0;
    LL left=0, right=INF;
    while(right>left+1LL){
        LL mid = (left+right)/2;
        if(Min(mid)<k) left=mid;
        else right = mid;
    }
    return right;
}

int main(){
    int cases;
    scanf("%d",&cases);
    while(cases--){
        LL A,L,R;
        scanf("%lld %lld %lld", &A,&L,&R);
        factorize(A);
        
        LL n1 = f(L);
        LL n2 = f(R+1);
        
        if(n1==n2) cout<<-1<<endl;
        else cout<<n2-1<<endl;
    }
    //system("pause");
    return 0;
}
