#include<iostream>
#include<cmath>
#include<vector>
#define c cin
#define o cout
//add function that skips number that has been proven composite
using namespace std;
void outVec(const vector<char> &);
int main(){
	long long x,y,z,i,j;
	int t;
	t=1;
	c>>t;
		
	while(t--){
		x=1, y=200;
		//start prime function
		long long tot=0;
		//c>>x>>y;
		vector<bool> a(y+1, true);
		
		long long limc=floor(sqrt(y));
		
		a.at(0)=false;
		a.at(1)=false;
			
		for(i=2; i<=limc; i++){
			if(!a.at(i))
				continue;
			for(j=i*2; j<=y; j+=i)
				a.at(j)=false;
		}
		//end prime function
		string s;
		c>>s;
		vector<char>v;
		for(i=0; i<s.length(); i++){
			if(!(a[(char)s[i]]))
				v.push_back(s[i]);
		}
		if(v.size()==0)
			o<<"NULL\n";
		else
			outVec(v);
	}
	return 0;
}
void outVec(const vector<char> &v){
	int i;
	for(i=0; i<v.size(); i++)
		o<<v[i];
	o<<"\n";
}