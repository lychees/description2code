#include <iostream>
#include <vector>
#include <algorithm>
 
using namespace std;
 
int main()
{
    int testcase;
    cin >> testcase;
    while (testcase--)
    {
        int m, n;
        cin >> m >> n;
        if (n > m)
        {
            cout << "NO" << endl;
            continue;
        }
        vector < pair<int,int> > segm;
        for(int i = 0; i < n; i++)
        {
            int l, r;
            cin >> l >> r;
            if(l <= r)
            {
                segm.push_back(make_pair(l, r));
                segm.push_back(make_pair(l + m, r + m));
            }
            else
                segm.push_back(make_pair(l, r + m));
        }
        sort(segm.begin(), segm.end());
        int i = 0, valid = 0;
        vector<int> samelfset;
        bool flag = true;
        while(true)
        {
            if(samelfset.empty())
            {
                if(i == segm.size())
                    break;
                else
                    valid = segm[i].first;
            }
            while(i < segm.size() && segm[i].first == valid)
            {
                samelfset.push_back(i);
                i++;
            }
            if(!(valid >= segm[samelfset[0]].first && valid <= segm[samelfset[0]].second))
            {
                flag = false;
                break;
            }
            samelfset.erase(samelfset.begin());
            valid++;
        }
 
        if (flag)
            cout<<"YES"<<endl;
        else
            cout<<"NO"<<endl;
    }
}   