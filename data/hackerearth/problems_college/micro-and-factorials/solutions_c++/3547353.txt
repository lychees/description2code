#include <bits/stdc++.h>

typedef long long int ll;

#define mod 1000000007
#define sl(x) scanf("%lld",&x)
#define s(x) scanf("%d",&x)
#define pb push_back
#define mp make_pair
#define INF 1000000000

using namespace std;

ll powr (ll a, ll b)
{
    if (b == 0)
        return 1;
    ll x = powr(a, b/2);
    if (b % 2 == 0)
        return (x*x)%mod;
    else
        return (((x*x)%mod)*a)%mod;
}

#include<iostream>
using namespace std;
#include<vector>

/* This function calculates power of p in n! */
int countFact(int n, int p)
{
    int k=0;
    while (n>0)
    {
        k+=n/p;
        n/=p;
    }
    return k;
}

long long frex[111111],frey[111111];
vector <int> v;

void se(int n)
{
    vector<bool> isPrime(n+1,1);
    for (int i=2; i<=n; i++)
        if (isPrime[i])
        {
            v.pb(i);
            for (int j=2*i; j<=n; j+=i)
                isPrime[j]=0;
        }
}

ll C(int n)
{
    ll ans = 1;
    for (int i = 0; i < v.size(); i++) {
        ans *= (ll)(countFact(n,v[i])+1);
        ans%=mod;
    }
    return ans;
}

int main()
{
    se(100000);
    int t,x,y;
    s(t);
    while(t--) {
        s(x);
        s(y);
        if(y >= x) {
            printf("0\n");
            continue;
        }
        ll ff = C(x);
        ll gg = C(y);
        printf("%lld\n",(ff-gg+mod)%mod);
    }
    return 0;
}
