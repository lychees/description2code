#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)

#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

//FILE* outFile;

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}

pii a[N];
int q[N];
ll ans,D;
bool cal(ll t,int debug=0){
        int top=0,i;ans=0;ll s=D;
        for(i=N-1;i>=0;i--){
            if(i>t||a[i].x==-1)continue;
            break;        
        }
        for(;i>=0;i--){
            if(a[i].x==-1)continue;
            while(top&&a[i].y>=a[q[top]].y)top--;
            q[++top]=i;
        }
        if(debug){
            for(i=1;i<=top;i++)ans+=a[q[i]].x;
            return 1;
        }
        t++;
        //if(debug)cerr<<t<<" "<<q[1]<<" "<<top<<"\n";
        for(i=1;i<=top&&s>0;i++){
            //if(debug)cerr<<q[i]<<","<<a[q[i]].y<<"\t";
            if((t-q[i])>s/a[q[i]].y)return 1;
            s-=1LL*a[q[i]].y*(t-q[i]);
            t=q[i];
        }
        return s<=0;
}
int main(){
    //ios::sync_with_stdio(0);
    //cout<<fixed<<setprecision(10);
    //outFile=fopen("2.txt","w");
    int T,i,j,k,n,m;
    scanf("%d%lld",&n,&D);
    memset(a,-1,sizeof(a));
    for(i=0;i<n;i++){
        int x,y;
        scanf("%d%d%d",&k,&x,&y);
        if(a[k].x==-1)a[k]=mp(x,y);
        else if(a[k].y<y||(a[k].y==y&&a[k].x>x))a[k]=mp(x,y);
    }
    ll l=0,r=1e18;
    while(l<=r){
        ll t=l/2+r/2+((l&1)&&(r&1));
        if(cal(t))r=t-1;
        else l=t+1;
    }
    //DBG(cal(r))
    cal(r+1,1);
    printf("%lld\n",ans);
    /*
    ans=0;ll t=0;
    for(i=1;i<=r+1;i++)ans+=a[i].x,t+=a[i].y;
    cerr<<ans<<" "<<t-D<<"\n";
    //*/
    return 0;
}