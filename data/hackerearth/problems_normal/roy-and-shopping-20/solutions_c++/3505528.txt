#define DEBUG 0
 
#include <algorithm>
#include <functional>
#include <numeric>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <complex>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cassert>
#include <string>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <sstream>

using namespace std;

#if DEBUG
#define GETCHAR getchar
#else
#define GETCHAR getchar_unlocked
#endif
int primes[1000];
int totalP;
void precal(){
	int i,j,numbers[1002];
    
 int limit = 1001;
    for (i=0;i<limit;i++){
        numbers[i]=i+2;
    }

    for (i=0;i<limit;i++){
        if (numbers[i]!=-1){
            for (j=2*numbers[i]-2;j<limit;j+=numbers[i])
                numbers[j]=-1;
        }
    }

    totalP = 0;
    for (i=0;i<limit;i++)
        if (numbers[i]!=-1)
            primes[totalP++] = numbers[i];
}

bool Read(int &x)
{
	char c,r=0,n=0;
	x=0;
		for(;;)
		{
			c=GETCHAR();
				if ((c<0) && (!r))
					return(0);
				if ((c=='-') && (!r))
					n=1;
				else
				if ((c>='0') && (c<='9'))
					x=x*10+c-'0',r=1;
				else
				if (r)
					break;
		}
		if (n)
			x=-x;
	return(1);
}

int main()
{
    int T;
    precal();
    Read(T);
    while(T--)
    {
    	int N;
    	Read(N);
    	int i;
    	int flag=0;
    	if(N%2==0)
    	{
    		printf("%d\n",N-2);
    		continue;
    		
    	}
    	for(i=0;i<totalP;i++)
    	{
    		if(N%primes[i]==0)
    		{
    			flag=1;
    			break;
    		}
    	}
    	if(!flag)
    		printf("0\n");
    	else
    		printf("%d\n",N-primes[i]);
    }
    return 0;
}
