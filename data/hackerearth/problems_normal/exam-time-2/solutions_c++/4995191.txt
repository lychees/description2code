#include <bits/stdc++.h>

using namespace std;

const int MAXN = 1e6;

int phi[MAXN + 1], prime[MAXN / 10];
bool mark[MAXN + 1];

void sieve() {
	int sz = 0;
	phi[1] = 1;
	for (int i = 2; i <= MAXN; i++) {
		if (!mark[i]) {
			phi[i] = i - 1;
			prime[sz++] = i;
		}
		for (int j = 0; j < sz && prime[j] * i <= MAXN; j++) {
			mark[prime[j] * i] = 1;
			if (i % prime[j] == 0) {
				int ll = 0, xx = i;
				while (xx % prime[j] == 0) {
					xx /= prime[j];
					ll++;
				}
				int mm = 1;
				for (int k = 0; k < ll; k++) {
					mm *= prime[j];
				}
				phi[i * prime[j]] = phi[xx] * mm * (prime[j] - 1);
				break;
			} else {
				phi[i * prime[j]] = phi[i] * (prime[j] - 1);
			}
		}
	}
}

int main() {
	sieve();
	int t;
	scanf("%d", &t);
	for (int tt = 1; tt <= t; tt++) {
		int n;
		scanf("%d", &n);
		printf("%d\n", phi[n]);
	}
	return 0;
}