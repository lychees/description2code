/*
Template belongs to : SUMIT KHAITAN
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)
#define FOR(i,a,b)      for(LL i=a;i<b;i++)
#define gcd(a,b)  __gcd(a,b)

#define  VI vector<int>
#define  VL vector<LL>
#define  VC vector<char>
#define  VS vector<string>
#define  pb push_back
#define  sz size

#define MOD       1000000007
#define PI        2*acos(0)


VI g[100001];
int visited[100001]={0};
int colour[100001]={0};
int n;
bool bfs(int v);

bool partition();
int main()
{
     inp_s;
     DRT()
     {
     	
     	
     	int m;
    	cin>>n>>m;
    	 FOR(i,0,100001)
   		 {
   		 	visited[i]=colour[i]=0;
   		 	g[i].clear();
   		 }
    	FOR(i,0,m)
    	{
        	int a,b;
        	cin>>a>>b;
        	a--;
        	b--;
        	g[a].pb(b);
        	g[b].pb(a);
    	}
   		
    	if(!partition())
    		cout<<"NO"<<endl;
    	else
        	cout<<"YES"<<endl;
        	
       // FOR(i,0,n) cout << visited[i] << " " << colour[i] << endl;	
     }

    return 0;
 }
 
 bool partition()
 {
 	FOR(i,0,n)
 	{
 		if(visited[i]==0  && !bfs(i))
 		return false;
 	}
 	return true;
 }

bool bfs(int v)
 {
    queue<int> q;
    int o;
    q.push(v);
    visited[v]=1;
    colour[v]=1;

    while(!q.empty())
    {
   		 o=q.front();
         q.pop();
         
        int l=g[o].size();
        FOR(i,0,l)
        {
        	int d = g[o][i];
            if(visited[d]==0)
            {
                visited[d]=1;
                colour[d]= 3 - colour[o];
          	    q.push(d);
            }
            else if(colour[d] == colour[o] )
            {
                return false;
            }
        }
    }
    
    return true;

}

