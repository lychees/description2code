#include <bits/stdc++.h>
#define ll long long int
#define gt(i) scanf("%lld", &i)

using namespace std;

class tree
{
	ll v;
	list <ll> *adj;
	ll *dp;
	ll dfsu(ll x, bool vis[])
	{
		if(x == v - 1)
			return 1;
		if(vis[x])
			return dp[x];
        vis[x] = true;
		ll ans = 0;
		list <ll> ::iterator pos;
		for(pos = adj[x].begin(); pos != adj[x].end(); pos++) {
			ans += dfsu(*pos, vis);
		}
		dp[x] = ans;
		return ans;
	}
	public:
	tree(ll g)
	{
		v = g;
		adj = new list<ll>[v];
		dp = new ll[v];
		for(ll i = 0; i < v; i++)
            dp[i] = 0;
	}
	void add(ll x, ll y)
	{
		adj[x].push_back(y);
	}
	void prt()
	{
		for(ll i = 0; i < v; i++)
			cout << dp[i] << " ";
		cout << endl;
	}
	void dfs() {
		bool *vis = new bool[v];
		memset(vis, false, sizeof(vis));
		dfsu(0, vis);
		cout << dp[0] << endl;
	}
};

int main()
{
	ll n, i, j, k;
	gt(n);
	tree tt(n);
	ll x, y;
	while(1)
	{
		gt(x);
		gt(y);
		if(x == 0 && y == 0)
			break;
        x--;
        y--;
		tt.add(x, y);
	}
//	tt.prt();
	tt.dfs();
	//tt.prt();
	return 0;
}
