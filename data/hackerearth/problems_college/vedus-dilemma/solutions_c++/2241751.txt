#include <bits/stdc++.h>
using namespace std;

long modu(long a,long b){
    if(a>=b){
        return (a-b);
    }else{
        return b-a;
    }
}

struct node{
    long index;
    long value;
};

long int gcd(long int a,long  int b)
{
    if (a == 0)
        return b;
    return gcd(b%a, a);
}

bool arr(node a,node b){
    if(a.value == b.value){
		return a.index > b.index;
	}
    return (a.value < b.value); 
}
int main(){
          long int t,n,i,p,q;
          cin>>t;
          while(t--){
                  cin>>n;
                  long a[n+1];
                  for(i=0;i<n;i++){
                      cin>>a[i];
                  }
                  struct node amit[n+3];
                  sort(a,a+n);
                  cin>>p>>q;                  
                  long count=0;
                  for(i=0;i<n;i++){
                      long gc = gcd(p,a[i]);//check if they have a divisor in common..
                      if(gc != 1){
                          amit[count].index = a[i];
                          amit[count].value   = modu(a[i],p);
                          count++; 
                     }
                  }
                  
                  if(count<q){
                     cout<<"-1"<<endl; 
                  }else{
                  	long b[q];
                     sort(amit,amit+count,arr);      
                       
                       for(i=0;i<q;i++){
                            b[i]=amit[i].index;   
                        }
                        sort(b,b+q);
                        for(i=0;i<q;i++){
                        	cout<<b[i]<<" ";
                        }
                        cout<<endl;
                  }          
            }
          return 0;
 }