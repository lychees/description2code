#include<bits/stdc++.h>
using namespace std;
int find(int parent[],int idx)
{
    if(parent[idx]==idx)
    return idx;
    parent[idx]=find(parent,parent[idx]);
    return parent[idx];
}
void Union(int parent[],int x,int y)
{
    int px=find(parent,x);
    int py=find(parent,y);
    if(px==py)
    return;
    parent[px]=py;
}
void leader(int parent[],int idx)
{
    int px=find(parent,idx);
    parent[px]=idx;
    parent[idx]=idx;
}
int main()
{
    int n,q,i;
    cin>>n>>q;
    int parent[n];
    for(i=1;i<=n;i++)
    {
        parent[i]=i;
    }
    while(q--)
    {
        int choice;
        cin>>choice;
        if(choice==1)
        {
            int a,b;
            cin>>a>>b;
            Union(parent,a,b);
        }
        else if(choice==2)
        {
            int a;
            cin>>a;
            leader(parent,a);
        }
        else if(choice==3)
        {
            int a;
            cin>>a;
            cout<<find(parent,a)<<endl;
        }
    }
    return 0;
}
