#include <algorithm>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <stdlib.h>
#include <string>
#include <vector>
 
using namespace std;
 
#define LL long long
#define LD long double
 
#define VI vector<int>
 
#define sd(x) x = GetNextInt()
#define slld(x) scanf("%lld",&x)
 
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define PII pair<int,int>
#define PPII pair< PI , PI >
 
#define INF 2000000009
 
#if 0
#define get getchar_unlocked
#else
#define get getchar
#endif
 
int next_int;
char in_char;
 
inline int GetNextInt(){
    in_char = ' ';
    while((in_char < '0') || (in_char > '9')){
        in_char = get();
    }
    next_int = 0;
    while((in_char >= '0') && (in_char <= '9')){
        next_int *= 10;
        next_int += in_char - 48;
        in_char = get();
    }
    return next_int;
}
 
LL PowerMod(LL base,LL power,LL mod){
    LL ret = 1;
    if(base >= mod){
        base %= mod;
    }
    while(power > 0){
        if((power & 1) == 1){
            ret *= base;
            if(ret >= mod){
                ret %= mod;
            }
        }
        power >>= 1;
        base *= base;
        if(base >= mod){
            base %= mod;
        }
    }
    return ret;
}
 
inline bool validchar(char ch){
    if((ch >= 'a') && (ch <= 'z')){
        return true;
    }
    if((ch >= 'A') && (ch <= 'Z')){
        return true;
    }
    if((ch >= '0') && (ch <= '9')){
        return true;
    }
    return false;
}
 
vector<string> GetStringsFromLine(){
    vector<string> ret;
    char ch;
    string s;
    ch = ' ';
    while(true){
        while(!validchar(ch)){
            if(ch == '\n'){
                return ret;
            }
            ch = get();
        }
        s = "";
        while(validchar(ch)){
            s = s + ch;
            ch = get();
        }
        ret.PB(s);
    }
}
 
/* Main Code */
 
#define MAXN 100111
#define MAXX 51
#define MOD 1000000007
 
int nop, prime[MAXN];
int sop[MAXN], dp[MAXN][MAXX];
bool isp[MAXN];
vector<int> pf[MAXN];
 
inline void takemod(int &x){
    if(x >= MOD){
        x -= MOD;
    }
}
 
inline void Pre(){
    int i,j;
    for(i = 3;i < MAXN;i += 2){
        isp[i] = true;
    }
    isp[2] = 2;
    for(i = 3;i * i < MAXN;i++){
        if(isp[i]){
            for(j = i * i;j < MAXN;j += i + i){
                isp[j] = false;
            }
        }
    }
    nop = 0;
    for(i = 2;i < MAXN;i++){
        if(isp[i]){
            prime[nop++] = i;
        }
    }
}
 
inline void Solve(){
    LL i,j,k,l,d,a,b;
    cin>>a>>b;
    d = b - a;
    for(i = 0;i <= d;i++){
        pf[i].clear();
    }
    for(i = 0;i < nop;i++){
        j = prime[i];
        for(k = (a % j == 0 ? 0 : j - (a % j)); k <= d;k += j){
            pf[k].PB(j);
        }
    }
    //cout<<endl<<j<<endl;
    for(i = 0;i <= d;i++)
    {
        j = a + i;
        sop[i] = 0;
        for(k = pf[i].size() - 1;k >= 0;k--)
        {
            l = pf[i][k];
            while(j % l == 0)
            {
                j /= l;
                sop[i]++;
            }
        }
        if(j > 1)
        {
            sop[i]++;
        }
    }
    //for(i = 0;i <= d + 1;i++){
    //cout<<sop[i]<<" ";
 
    for(i = 0;i <= d + 1;i++){
        for(k = 0;k < MAXX;k++){
            dp[i][k] = 0;
        }
    }
    dp[0][0] = 1;
    for(i = 0;i <= d;i++){
        j = sop[i];
        for(k = 0;k < MAXX;k++){
            dp[i + 1][k^j] += dp[i][k];
            dp[i + 1][k] += dp[i][k];
            takemod(dp[i + 1][k ^ j]);
            takemod(dp[i + 1][k]);
        }
    }
    LL ans = 0;
    //cout<<"\n";
    for(k = 1;k < MAXX;k++){
        ans += dp[d + 1][k];
    }
        /*for(i = 0;i <= d+1;i++)
        {
         for(k = 0;k < 10;k++)
         {
                cout<<dp[i][k]<<" ";
         }
        cout<<"\n";*/
 
 
 
    ans %= MOD;
    cout<<ans<<endl;
}
 
int main(){
    Pre();
    int t;
    sd(t);
    while(t--){
        Solve();
    }
    return 0;
}