/*
 * q3.cpp
 *
 *  Created on: Feb 20, 2016
 *      Author: mohib
 */
#include<bits/stdc++.h>
using namespace std;
int euler=1;
vector<int> adj[100101];
pair<int,int> node[100101];
static int assigned[100101],level1[100001];
void dfs(int cur,int pr,int level){
	assigned[cur]=euler++;
	for(int i=0;i<adj[cur].size();i++){
		if(adj[cur][i]!=pr)
			dfs(adj[cur][i],cur,level+1);
	}
    node[cur]=make_pair(assigned[cur],euler-1);
    level1[cur]=level;
}
int main(){
    int n;
    scanf("%d",&n);
    for(int i=0;i<n-1;i++){
    	int a,b;
    	scanf("%d %d",&a,&b);
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    }
    dfs(1,0,1);
    int q;
    scanf("%d",&q);
    while(q--){
    	int ty;
    	scanf("%d",&ty);
    	if(ty==0){
    		int x,y;
    		scanf("%d %d",&x,&y);
    		if(node[x].first<=assigned[y]&&node[x].second>=assigned[y]){
    			printf("YES %d\n",level1[y]-level1[x]+1);
    		}
    		else
    			printf("NO\n");
    	} else {
    		int x,y;
    		scanf("%d %d",&x,&y);
    		swap(x,y);
    		if(node[x].first<=assigned[y]&&node[x].second>=assigned[y]){
    		    			printf("YES %d\n",level1[y]-level1[x]+1);
    		    		}
    		    		else
    		    			printf("NO\n");
    	}
    }
    return 0;
}

