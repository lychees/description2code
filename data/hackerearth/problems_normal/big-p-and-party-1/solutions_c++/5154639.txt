#include <cstdio>
#include <vector>
#include <queue>
using namespace std;
const int MAXN = 100000;
vector <int> v[MAXN];
int vis[MAXN], d[MAXN];
void bfs(int s, int n){
	for (int i = 0; i<n; i++)
		vis[i] = 0, d[i] = -1;
	vis[s] = 1, d[s] = 0;
	queue <int> q;
	q.push(s);
	while (!q.empty()){
		s = q.front();
		q.pop();
		for (int i = 0; i<v[s].size(); i++)
			if (vis[v[s][i]] == 0)
				vis[v[s][i]] = 1,
				d[v[s][i]] = d[s] + 1,
				q.push(v[s][i]);
		vis[s] = 2;
	}
}
int main(){
	int a, b, n, m;
	scanf("%d %d", &n, &m);
	for (int i = 0; i<m; i++)
		scanf("%d %d", &a, &b),
		v[a].push_back(b),
		v[b].push_back(a);
	bfs(0, n);
	for (int i = 1; i<n; i++)
		printf("%d\n", d[i]);
}

