#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
using namespace std;
#define MAX 100002
int mode[5];
int mm[5];  //??i??????
char s[MAX];
int n;
int siz;
int a[5][MAX];  //array
long long int bit[5][5][MAX];  //i????5+'A'???
int q;
char p[MAX];
void add(int i, int j, int x, long long int y){
	while (x < MAX){
		bit[i][j][x] += y;
		x += x&-x;
	}
}
long long int sum(int i,int j,int x){
	long long int res = 0;
	while (x > 0){
		res += bit[i][j][x];
		x -= x&-x;
	}
	return res;
}
int main(){
	scanf("%d", &n);
	for (int i = 0; i <5 ; i++){
		mode[i] = i;
		mm[i] = i;
		for (int j = 0; j < n; j++){
			scanf("%d", &a[i][j]);
		}
	}
	scanf("%s", s);
	siz = strlen(s);
	for (int i = 0; i < siz; i++){
		for (int j = 0; j < 5; j++){
			add(s[i] - 'A', j, i + 1,a[j][i]);
		}
	}
	scanf("%d", &q);
	while (q--){
		scanf("%s", p);
		if (p[1] == 'e'){
			char kari, kari1;
			cin >> kari >> kari1;
			swap(mode[kari - 'A'], mode[kari1 - 'A']);
			mm[mode[kari - 'A']] = kari - 'A';
			mm[mode[kari1 - 'A']] = kari1 - 'A';
			continue;
		}
		if (p[1] == 'c'){
			int d;
			char kari;
			scanf("%d", &d);
			cin >> kari;
			int before = s[d-1] - 'A';
			int after = kari - 'A';
			for (int j = 0; j < 5; j++){
				add(before, j, d, -a[j][d-1]);
				add(after, j, d, a[j][d-1]);
			}
			s[d-1]=kari;
			continue;
		}
		if (p[1] == 's'){
			long long int ans = 0;
			int kari, kari1;
			scanf("%d%d", &kari, &kari1);
			for (int i = 0; i < 5; i++){
				ans += sum(mm[i], i, kari1) - sum(mm[i], i, kari - 1);
			}
			printf("%lld\n", ans);
		}
	}
	return 0;
}