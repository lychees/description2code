#include<iostream>
#include<vector>
#include<cstdio>
#include<math.h>
using namespace std;

int main()
{
    int n,m,size,tempmin;
    long long  int temp;
    scanf("%d%d",&n,&m);
    vector<vector<long long int> > vec(n,vector<long long int>(1));
    vector<vector<long long int> > vecf(n,vector<long long int>(1));
    vector<vector<long long int> > dp(n+1,vector<long long int>(m+1,0));
    for(int i=0;i<n;i++){
    	scanf("%lld",&vec[i][0]);
    	vecf[i][0]=vec[i][0];
    	for(int j=0;j<vec[i][0];j++) {
    		scanf("%lld",&temp);
    	    vec[i].push_back(temp);
    	}
    }
    for(int i=0;i<n;i++){
    	tempmin=vec[i][0];
    	for(int j=2;j<=tempmin;j++) vec[i][j]+=vec[i][j-1];
    }
    for(int i=0;i<n;i++){
    	int l=1;
    	long long int max;
    	if(vec[i][0]<m)
        tempmin=vec[i][0];
    	else
    	tempmin=m;
    	size=vec[i][0];
    	while(l<=tempmin){
    		max=vec[i][l];
    	for(int j=2;j<=(size-l+1);j++){
    		temp=vec[i][j+l-1]-vec[i][j-1];
    		if(temp>max)
    		max=temp;
    	}
        vecf[i].push_back(max);
    	l++;
    	}
    }
    long long int ans=0;
   for(int i=1;i<=n;i++){
   	for(int j=1;j<=m;j++){
   		ans=dp[i-1][j];
    	tempmin=vecf[i-1][0];
   		for(int k=1;k<=tempmin;k++){
   			if(k<=j){
   			if(dp[i-1][j-k]+vecf[i-1][k]>ans)
   			ans=dp[i-1][j-k]+vecf[i-1][k];
   			}
   		}
   		dp[i][j]=ans;
   	}
   }
   printf("%lld",dp[n][m]);
    return 0;
}
