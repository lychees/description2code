/*
Minimizing Path Cost
*/
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <list>
#include <algorithm>
using namespace std;

#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define FOR(i,n) for(i=0;i<n;i++)
#define FORJAS(i,j,n) for(i=j;i<n;i++)
#define FORS(i,n) for(i=1;i<=n;i++)
#define FORJS(i,j,n) for(i=j;i<=n;i++)
#define LEN 105
#define INF 1000000

int graph[LEN][LEN];

int main()
{
	int n,m,q,i,j,k;
	cin>>n>>m;
	string str,u,v;
	map<string,int> vs;
	int cost;
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				if(i==j)
				graph[i][j]=0;
				else
				graph[i][j]=INF;
			}

		}
	for(i=0;i<n;i++)
	{
		cin>>str;
		vs[str]=i;
	}	
	for(i=0;i<m;i++)
	{
		cin>>u>>v>>cost;
		graph[vs[u]][vs[v]]=cost;
		graph[vs[v]][vs[u]]=cost;
	}
	/*for(i=0;i<n;i++)
	{
		graph[i][i]=0;
	}
	*/
	

	for(k=0;k<n;k++)
	{
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				if(graph[i][k]+graph[k][j]<graph[i][j])
					graph[i][j]=graph[i][k]+graph[k][j];
			}
		}
	}
	/*for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				cout<<graph[i][j]<<"\t";
			}
			cout<<endl;
		}*/
	cin>>q;
	for(i=0;i<q;i++)
	{
		cin>>u>>v;
		cout<<graph[vs[u]][vs[v]]<<endl;
	}
	
	return 0;
}