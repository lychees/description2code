/* sourabh1024  */
#include<bits/stdc++.h>

#define si(n)		(scanf("%d",&n))
#define pi(n)		(printf("%d",n))
#define sl(n)		(scanf("%I64d",&n))
#define pl(n)		(printf("%I64d",n))

#define lli long long int
#define ii pair<int,int>
#define vii pair< ii ,int>
#define pb(a) push_back(a)
using namespace std;

lli t,n;
lli arr[100002];
lli BIT[11][100002];
lli cnt[10];

void update(lli dis, lli pos, lli val)
{
	for(int i= pos;i<100002;i+=i&(-i))
	{
		BIT[dis][i]+=val;	
	}
}

lli query(int pos,int dis)
{
	lli ans = 0;
	for(int i=pos;i>0;i-=i&(-i))
	{
		ans+=BIT[dis][i];
	}
	return ans;
}

lli dis_digit[100005];

int main()
{
	cin>>n;
	for(int i=1;i<=n;i++)	
	{
		cin>>arr[i];
		lli t = arr[i];
		for(int i=0;i<10;i++)	cnt[i]=0;
		while(t)
		{
			cnt[t%10]++;
			t/=10;
		}
		int distinct = 0;
		for(int i=0;i<10;i++)
			if(cnt[i])
				distinct++;
		
		update(distinct,i,1);
		dis_digit[i] = distinct;
	}
		
	lli q;
	cin>>q;
	
	while(q--)
	{
		lli t,u,v;
		scanf("%lld %lld %lld",&t,&u,&v);
		if(t==0)
		{
			lli x = arr[u]+ v;
			for(int i=0;i<10;i++)	cnt[i]=0;
			while(x)
			{
				cnt[x%10]++;
				x/=10;
			}
			int distinct = 0;
			for(int i=0;i<10;i++)
				if(cnt[i])
					distinct++;
			if(dis_digit[u]!=distinct)
			{
				update(dis_digit[u],u,-1);
				dis_digit[u] = distinct;
				update(distinct,u,1);
			}
			
			arr[u]+=v;	
		}
		else
		{
			if(t==1)
			{
			lli x = v;
			for(int i=0;i<10;i++)	cnt[i]=0;
			while(x)
			{
				cnt[x%10]++;
				x/=10;
			}
			int distinct = 0;
			for(int i=0;i<10;i++)
				if(cnt[i])
					distinct++;
			if(dis_digit[u]!=distinct)
			{
				update(dis_digit[u],u,-1);
				dis_digit[u] = distinct;
				update(distinct,u,1);
			}
			
			arr[u]=v;	
			}
	
		else
		{
			lli c;
			cin>>c;
			cout<<(query(v,c)-query(u-1,c))<<endl;
		}
	}
	}
	
	return 0;
}
