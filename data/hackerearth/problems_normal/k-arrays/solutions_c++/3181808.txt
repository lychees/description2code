#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007
#define ll long long

int t, n, k, a[10][16];

ll extendedEuclid(ll a, ll b, ll *x, ll *y)	{
    ll t, d;
    if (b == 0)	{
        *x = 1; *y = 0; return a;
    }
    d = extendedEuclid(b, a % b, x, y);
    t = *x; *x = *y; *y = t - (a/b)*(*y);
    return d;
}
ll modInverse(ll a, ll n)  {
    ll x, y;
    extendedEuclid(a, n, &x, &y);
    return (x < 0) ? (x + n) : x;
}

int main() {
    cin >> t;
    while(t--) {
    	cin >> n >> k;
    	for(int i = 0; i < k; ++i)
    		for(int j = 0; j < n; ++j)
    			cin >> a[i][j];
    	int lim = (1<<n);
    	int a1 = -INT_MAX, a2 = INT_MAX, s1 = INT_MAX, s2 = -INT_MAX;
    	for(int i = 1; i < lim; ++i) {
    		ll val = 1;
    		ll sz = __builtin_popcount(i);
    		for(int j = 0; j < n; ++j) {
    			if(i&(1<<j)) {
    				ll x = 0;
    				for(int y = 0; y < k; ++y) {
    					x += a[y][j];
    					x %= MOD;
    				}
    				val *= x;
    				val %= MOD;
    			}
    		}
    		val *= modInverse(sz, MOD);
    		val %= MOD;
    		//cout << modInverse(sz, MOD) << " g " << sz << endl;
    		//cout << "val: " << val << endl;
    		if(val >= a1) {
    			if(val > a1) {
    				s1 = sz;
    				a1 = val;
    			}
    			else {
    				if(sz < s1) {
    					s1 = sz;
    					a1 = val;	
    				}
    			}
    		}
    		if(val <= a2) {
    			if(val < a2) {
    				s2 = sz;
    				a2 = val;
    			}
    			else {
    				if(sz > s2) {
    					s2 = sz;
    					a2 = val;
    				}
    			}	
    		}
    		//cout << a1 << " ffffd " << a2 << endl;
    	}
    	ll finalans1 = (ll)a1^(ll)a2;
    	ll finalans2 = (ll)s1^(ll)s2;
    	cout << finalans1 << " " << finalans2 << '\n';
    }
    return 0;
}
