//Bhulla and Captain Cold
#include<iostream>
#include<algorithm>

#define MIN3(x,y,z) min(x,min(y,z))
#define SIZE 1000000

using namespace std;

int main(){
	int T;
	int N;
	int *cost_0 = new int[SIZE];
	int *cost_1 = new int[SIZE];
	int *cost_2 = new int[SIZE];
	int *mincost_0 = new int[SIZE];
	int	*mincost_1 = new int[SIZE];
	int *mincost_2 = new int[SIZE];
//	if(cost_0==NULL || cost_1==NULL || cost_2==NULL || mincost_0==NULL || mincost_1==NULL || mincost_2==NULL ){
//		cout<<"Error"<<"\n";
//		return 0;
//	}
	cin>>T;
	while(T--){
		cin>>N;
		for(int i=0;i<N;i++){
			cin>>cost_0[i];
			cin>>cost_1[i];
			cin>>cost_2[i];
			if(i==0){
				mincost_0[i]=cost_0[i];
				mincost_1[i]=cost_1[i];
				mincost_2[i]=cost_2[i];
			}
			else{
				mincost_0[i] = min(mincost_1[i-1],mincost_2[i-1]) + cost_0[i];
				mincost_1[i] = min(mincost_0[i-1],mincost_2[i-1]) + cost_1[i];
				mincost_2[i] = min(mincost_0[i-1],mincost_1[i-1]) + cost_2[i];
			}
		}
		cout<<MIN3(mincost_0[N-1],mincost_1[N-1],mincost_2[N-1])<<"\n";
	}
	delete[] cost_0;
	delete[] cost_1;
	delete[] cost_2;
	delete[] mincost_0;
	delete[] mincost_1;
	delete[] mincost_2;
	return 0;
}
