#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define ff first
#define ss second
#define pb push_back
#define pf pop_front
#define IOS ios::sync_with_stdio(false)
bool memo[22][100][1500];
ll dp[22][100][1500];
int gc[1502][1502];
ll F(int dig,int sum1,int sumsq){
    if(dig==0){
        int gcv = gc[sum1][sumsq];
        return (ll)((gcv==1));
    }
    if(memo[dig][sum1][sumsq])
        return dp[dig][sum1][sumsq];
    memo[dig][sum1][sumsq]=1;
    ll ret = 0LL;
    for(int i=0;i<10;i++){
        ret+=F(dig-1,sum1+i,sumsq+i*i);
    }
    dp[dig][sum1][sumsq] = ret;
    return ret;
}

ll solve(ll x){
    ll ans = 0;
    ll sum1 = 0;
    ll sumsq = 0;
    char s[50];
    sprintf(s,"%lld",x);
    int len = strlen(s);
    int remain = len;
    for(int i = 0 ; i < len ; i++){
        remain--;
        int cur_dig = s[i]-'0';
        for(int k = 0 ; k < cur_dig ; k++){
            ans+=F(remain,sum1+k,sumsq+k*k);
        }
        sum1+=cur_dig;
        sumsq = sumsq + cur_dig*cur_dig;
    }
    return ans;

}
int main(){
    
    ll t , a, b;
    scanf("%lld",&t);
    for(int i = 1 ; i <= 1500 ; i++){
        for(int j = 1 ; j <= 1500 ; j++){
            if(gc[i][j]==0){
                gc[i][j] = __gcd(i,j);
                gc[j][i] = gc[i][j];
            }
        }
    }
    memset((memo),(false),sizeof (memo));
    while(t--){    
        scanf("%lld %lld",&a,&b);
        printf("%lld\n",solve(b+1)-solve(a));
    }
    return 0;
}