#include <iostream>
#include <cstring>
using namespace std;
int n;
int lvl[100];
int A[1000005];
int mrk[1000005];
void dfs1(int in,int lv)
{
    if(lvl[lv]==0 && A[in]!=0 && mrk[in] == 0)
    {
        mrk[in]=1;
        cout<<A[in]<<"\n";
        lvl[lv]=1;
    }

    else if(lvl[lv]==0 && A[in]!=0 && mrk[in]==1)
    {
        lvl[in]=1;
    }

    if(2*in<=n) dfs1(2*in,lv+1);
    if(2*in+1<=n) dfs1(2*in+1,lv+1);
}
void dfs2(int in,int lv)
{
    if(lvl[lv]==0 && A[in]!=0 && mrk[in] == 0)
    {
        mrk[in]=1;
        cout<<A[in]<<"\n";
        lvl[lv]=1;
    }
    if(2*in+1<=n) dfs2(2*in+1,lv+1);
    if(2*in<=n) dfs2(2*in,lv+1);
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        memset(mrk,0,sizeof mrk);
        memset(lvl,0,sizeof(lvl));
        cin>>n;
        for(int i=1;i<=n;i++) cin>>A[i];
        dfs2(1,1);
        memset(lvl,0,sizeof(lvl));
        dfs1(1,1);
        if(t>0)
            cout << endl;
    }
    return 0;
}
            
