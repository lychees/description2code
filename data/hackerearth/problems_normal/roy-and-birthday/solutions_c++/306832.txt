#include<cstdio>
#include<cstring>
#include<iostream>
#define MOD 1000000007
using namespace std;
long long f[1000011];
void fact()
{
    f[0] = 1;
    int i = 1;
    while(i<1000011)
    {
        f[i] = f[i-1]*i;
        f[i] = f[i]%MOD;
        i++;
    }
}
long long fast_pow(long long a,long long n)
{
    long long result = 1;
    long long power = n;
    long long value = a;
    while(power>0)
    {
        if(power&1)
        {
            result = result*value;
            result = result%MOD;
        }
        value = value*value;
        value = value%MOD;
        power /= 2;
    }
    return result;
}
long long inv(long long x)
{
    return fast_pow(x,MOD-2);
}
int main()
{
    fact();
    int t;
    scanf(" %d",&t);
    while(t--)
    {
        char str[1000011];
        scanf(" %s",str);
        long long vn = 0, cn = 0;
        int freq[30] = {0};
        int len = strlen(str);
        int i;
        for(i=0;i<len;i++)
        {
            freq[str[i] - 'a']++;
            if(str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u')
            {
                vn++;
            }
            else
            {
                cn++;
            }
        }
        int gap = cn + 1 - vn;
        if(gap< 0)
        {
            printf("-1\n");
        }
        else
        {
            long long c_res = f[cn];
            long long v_res = f[cn+1]*inv(f[gap]);               //(c_count+1)Pv_count = (c_count+1)!/(c_count+1-v_count)!
            v_res %= MOD;
            for(i=0;i<26;i++)
            {
                int tmp = i+'a';
                if(tmp == 'a' || tmp == 'e' || tmp == 'i' || tmp == 'o' || tmp == 'u')
                {
                    v_res = v_res*inv(f[freq[i]]);
                    v_res %= MOD;
                }
                else
                {
                    c_res = c_res*inv(f[freq[i]]);
                    c_res %= MOD;
                }
            }
            //printf("%lld %lld\n",v_res, c_res);
            printf("%lld\n",(v_res*c_res)%MOD);
        }
    }
    return 0;
}