/* Little Modification of Tester's solution */
#include<bits/stdc++.h>
using namespace std;
int main()
{
	int n;
	cin >> n;
	map<string, vector<int>> m;
	map <string, vector<int>>::iterator it;
	vector<int>::iterator sz;
	string s;

	for ( int i = 0; i < n; i++ ) {
		cin >> s;
		for (int j = 0; j < s.size(); j++) {
			string s1("");
			for ( int k = j; k < s.size(); k++ ) {
				s1.push_back(s[k]);
				m[s1].push_back(i);
			}
		}
	}
	
	for(it = m.begin(); it != m.end(); ++it){
		sz = unique((it->second).begin(),(it->second).end());
		(it->second).resize(distance((it->second).begin(),sz));
	}
		
	int q;
	cin >> q;
	while (q--) {
		register int l,r;
		scanf("%d%d",&l,&r);
		cin >> s;
		l--; r--;
		int ans;
		int idx2 = upper_bound(m[s].begin(),m[s].end(),r) - m[s].begin();
		int idx1 = lower_bound(m[s].begin(),m[s].end(),l) - m[s].begin();
		ans = idx2-idx1;
		printf("%d\n", ans);
	}
    return 0;
}