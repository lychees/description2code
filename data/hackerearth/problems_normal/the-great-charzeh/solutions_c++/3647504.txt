#include<iostream>
#include<algorithm>
#include<vector>
#include<string.h>
using namespace std;

int a[605],b[605],f[605],mt[605],n,m;
vector< int >v[305];
bool used[605];

bool try_kuhn(int u) {
    int i,temp;
    if(used[u]) return false;
    used[u]=true;
    for(i=0;i<v[u].size();i++) {
        temp=v[u][i];
        if(mt[temp]==-1 || try_kuhn(mt[temp])) {
            mt[temp]=u;
            return true;
        }
    }
    return false;
}

bool match() {
    int i,j,cnt=0;
    for(i=0;i<=n+m-2;i++) mt[i]=-1;
    for(i=0;i<n;i++) {
        for(j=0;j<n;j++) used[j]=false;
        try_kuhn(i);
    }
    for(i=0;i<=n+m-2;i++) {
        if(mt[i]!=-1) cnt++;
    }
    if(cnt==n) return true;
    return false;
}

bool check(int mid) {
    int i,j;
    for(i=0;i<n;i++) {
        v[i].clear();
        for(j=0;j<n;j++) {
            if(f[i+a[j]]<=b[mid]) v[i].push_back(j);
        }
    }
    if(match()) return true;
    return false;
}

int main()
{
    int i,j,temp,low,high,mid;
    cin>>n>>m;
    for(i=0;i<n;i++) cin>>a[i];
    for(i=0;i<=n+m-2;i++) cin>>f[i],b[i]=f[i];
    sort(b,b+n+m-1);
    low=0; high=n+m-2;
    while(high-low>=10) {
        mid=(high+low)/2;
        if(check(mid)) high=mid;
        else low=mid+1;
    }
    for(i=low;i<=high;i++) {
        if(check(i)) {
            cout<<b[i];
            return 0;
        }
    }
}
