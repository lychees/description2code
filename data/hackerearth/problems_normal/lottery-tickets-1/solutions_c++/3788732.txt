#include <bits/stdc++.h>
using namespace std;
int n;
vector<pair<pair<long long , long long >, double > > p;
bool comp(pair<pair<long long , long long >, double > p1, pair<pair<long long, long long >, double > p2){
	if(p1.first.first != p2.first.first){
		return (p1.first.first < p2.first.first);
	}else{
		return (p1.first.second < p2.first.second);
	}
}
map<pair<int, long long >, double > mp;
double func(int x, long long st, long long en){
	if(x==n){
		return 0;
	}
	if(mp.find(make_pair(x, en)) != mp.end()){
		return mp[make_pair(x, en)];
	}
	double ans=0;
	if(en<=p[x].first.first){
		ans = func(x+1, p[x].first.first, p[x].first.second)+p[x].second;
	}
	ans = max(ans, func(x+1, st, en));
	mp[make_pair(x, en)] = ans; 
	return ans;
}
int main()
{
    int t, x, y;
    double p1;
    cin>>t;
    while(t--){
    	mp.clear();
    	p.clear();
	    cin>>n;
	    for(int i=0; i<n; i++){
	    	cin>>x>>y>>p1;
	    	p.push_back(make_pair(make_pair(x, y), ((double)p1/100.0)));
	    }
	    sort(p.begin(), p.end(), comp);
	    
	    double ans=func(0, 0, 0);
	    printf("%.2f\n", ans);
    }
    return 0;
}
