#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <stack>
#include <queue>
#include <list>
#include <deque>
#include <string>
#include <iomanip>
#include <numeric>
#include <functional>
#include <string.h>
#include <new>
#include <utility>
#include <cassert>
# define maxi 102
using namespace std;
vector<int>temp_input;
char adj[maxi][maxi];
vector<vector<int> >adj_v(maxi);
int point[maxi];
vector<int>c_c;
vector<int>p_v;
void dfs(int u)
{
     point[u]=1;
     c_c.push_back(u);
     for(int j=0;j<adj_v[u].size();++j)
          if(!point[adj_v[u][j]] )
             dfs(adj_v[u][j]);
}
//Print result
void lsmall(int K)
{
     for(int i=0;i<K;++i)
                  cout<<temp_input[i]<<" ";
             cout<<endl;
}
int main()
{
    int K,ip;
    string rows[109];
    scanf("%d",&K);
    for(int i=0;i<K;++i)
    {
            scanf("%d",&ip);
            temp_input.push_back(ip);
    }
    
    for(int i=0;i<K;++i)
               cin>>rows[i];
    
    
    for(int i=0;i<K;++i)
         for(int j=0;j<rows[i].size();++j)
             adj[i][j]=rows[i][j];
    
 
    for(int i=0;i<K;++i)
    for(int j=0;j<K;++j)
     if(adj[i][j]=='Y')
         adj_v[i].push_back(j);  
                        
            for( int i = 0 ; i <K ; ++i )
            {   
                if( !point[ i ] )
                { 
                  
                    dfs( i ); 
                    for(int x=0;x<c_c.size();++x)
                    {
                            p_v.push_back(temp_input[c_c[x]]);
                    }
                    sort(c_c.begin(),c_c.end());
                    sort(p_v.begin(),p_v.end());
                    for(int x=0;x<c_c.size();++x)
                    {
                            temp_input[c_c[x]]=p_v[x];
                    }
                    c_c.clear();
                    p_v.clear();
                    
                }
            }
            lsmall(K);
    
    return 0;
}
 