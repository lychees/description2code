N = int(raw_input())
my_map = []
for i in range(N):
    my_map.append([val for val in raw_input().split()])

for i in range(N):
    for j in range(N):
        if my_map[i][j] == 'S':
            start = (i, j)
        if my_map[i][j] == 'E':
            end = (i, j)


visited = [start,]


def bfs():
    count = 0
    temp = [start]
    while temp != []:
        new_temp = []
        for val in temp:
            x = val[0]
            y = val[1]
            if (x, y) == end:
                return count
            if x > 0:
                if my_map[x-1][y] in ('P', 'E') and (x-1, y) not in visited:
                    new_temp.append((x-1, y))
            if y > 0:
                if my_map[x][y-1] in ('P', 'E') and (x, y-1) not in visited:
                    new_temp.append((x, y-1))
            if x < N-1:
                if my_map[x+1][y] in ('P', 'E') and (x+1, y) not in visited:
                    new_temp.append((x+1, y))
            if y < N-1:
                if my_map[x][y+1] in ('P', 'E') and (x, y+1) not in visited:
                    new_temp.append((x, y+1))
        # print temp
        count += 1
        temp = list(new_temp)
        visited.extend(new_temp)


print bfs()
