#include <iostream>
#include<vector>
#include<climits>
using namespace std;
#define maxsize 100000

int arr[maxsize];
int size[maxsize];

void join(int,int);
int root(int a);

int main()
{
    
    int n;
    cin>>n;
    vector <int> vc[n+1];
    int E[n+1];
    
    for(int i=1;i<=n;i++){
    	cin>>E[i];
    	size[i]=1;
    	arr[i]=i;
    }
    
    int k;
    cin>>k;
    
    while(k--){
    	int i,j;
    	cin>>i>>j;
    	join(i,j);
    	
    }
    for(int i=1;i<=n;i++){
    	vc[root(i)].push_back(i);
    }
    
    long long ans=1;
   	long long mod=1000000007;
    for(int i=1;i<=n;i++){
    	int tempmin=INT_MAX;
    	long long int occ=1;
    	for(int j=0;j<vc[i].size();j++){
    		if(E[vc[i][j]]<tempmin){
    			tempmin=E[vc[i][j]];
    			occ=1;
    		}
    		else if(E[vc[i][j]]==tempmin)
    			occ++;
    	}
    	ans=ans*occ%mod;
    }
    cout<<ans;
    return 0;
}
int root(int a){
	while(a!=arr[a]){
		arr[a]=arr[arr[a]];
		a=arr[a];
	}
	return a;
}
void join(int a,int b){
	int root_a=root(a);
	int root_b=root(b);
	if(size[root_a]<size[root_b]){
		arr[root_a]=arr[root_b];
		size[root_b]+=size[root_a];
	}
	else{
		arr[root_b]=arr[root_a];
		size[root_a]+=size[root_b];
	}
}