#include <iostream>
#include <cmath>
#include <vector>
using namespace std;
typedef signed long long ll;
int main()
{
    int t;
    ll L,R,Lsum, Rsum;
    scanf("%d",&t);
    vector<ll> v;
    v.push_back(1);
    v.push_back(3);
    v.push_back(4);
    v.push_back(8);
    v.push_back(9);
    v.push_back(15);
    v.push_back(16);
    for(ll i=1;;i++){
    	ll tmp = v[v.size()-2];
    	//v.push_back(tmp+3*i+1);
    	//v.push_back(tmp+3*i+2);
    	if (v.size()&1) v.push_back(tmp+7+2*i);
    	else v.push_back(v[v.size()-1]+1),i--;
    	if (v.size()>15000000) break;
    }
    //for(int i=0;i<20;i++) cout << v[i] << " ";
    //cout << endl;
    double x;
    ll y,tmp,tmp2;
    int ct = 0;
    while(cin>>L>>R){
    	//scanf("%lld%lld",&L,&R);
    	ct++;
    	if (R<L){
    		cout << "0\n";
    		continue;
    	}
    	
    	if (L==1) Lsum=0;
    	else{
    		L--;
    
    		
    		x = (-1.0+sqrt(1.0+8.0*L-8.0))*0.5;
    		y = floor(x+0.5)+1;
    		while (y*(y+1)/2+1<L) y++;
    		while (y*(y+1)/2+1>L) y--;
    		//cout << y << " :" << "\n";
    		Lsum = v[y];
    		tmp = y*(y+1)/2+0;
    		tmp2 = L-tmp+1;
    		if (tmp2&1) Lsum -= (y+1);
    		
    	}
    		
    		x = (-1.0+sqrt(1.0+8.0*R-8.0))*0.5;
    		y = floor(x+0.5)+5;
    		//cout << y << " :" << "\n";
    		while (y*(y+1)/2+1<R) y++;
    		while (y*(y+1)/2+1>R) y--;
    		Rsum = v[y];
    		tmp = y*(y+1)/2+0;
    		tmp2 = R-tmp+1;
    		if (tmp2&1) Rsum -= (y+1);
    		
    		
    //	cout << y << ", " << Rsum << " " << Lsum << ": "; 
    	printf("%lld\n",Rsum-Lsum);
    }
    if (ct<t) printf("%lld\n",Rsum-Lsum);
    return 0;
}
