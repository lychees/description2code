#include <iostream>
#include <vector>
#include <cstdlib>

using namespace std;

int dfs(vector< vector <bool> >& graph, vector<bool>& visited, int root, int n, int k, int *ans)
{	
	int i, j, sum, temp;
	visited[root] = true;
	sum = 1;
	for(i = 0; i < n; i++)
		if(graph[root][i] && !visited[i])
			sum += dfs(graph, visited, i, n, k, ans);
	if(sum >= k)
	{
		ans[0] += 1;
		return 0;
	}
	else
		return sum;
}

int main()
{
	int n, k, i, j;
	int *ans = (int*)malloc(sizeof(int));
	ans[0] = 0;
	cin >> k >> n;
	vector< vector <bool> > graph(n, vector <bool> (n, false));
	for(i = 2; i <= n; i++)
	{
		cin >> j;
		graph[i - 1][j - 1] = true;
		graph[j - 1][i - 1] = true;
	}
	vector <bool> visited(n, false);
	i = dfs(graph, visited, 0, n, k, ans);				//check root
	if(i > k)
		ans[0] += 1;
	cout << ans[0] << endl;
	return 0;
}