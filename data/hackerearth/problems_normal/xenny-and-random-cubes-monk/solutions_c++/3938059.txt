#include <bits/stdc++.h>

using namespace std;

#define endl '\n'
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define rep(i, a, b) for(int i=a;i<b;++i)
#define SZ(x) ((int)(x).size())

typedef vector<int> VI;
typedef long long LL;
typedef pair<int,int> PII;

template<typename TH>
void debug_vars(const char* data, TH head){
	cerr << data << "=" << head << "\n";
}

template<typename TH, typename... TA>
void debug_vars(const char* data, TH head, TA... tail){
	while(*data != ',') cerr << *data++;
	cerr << "=" << head << ",";
	debug_vars(data+1, tail...);
}

char dice[11][7];
string P;

LL dp[11][1<<10];

int n, k;

const int MOD = 1000000007;

LL solve(int pos, int mask){
	if(pos >= k){
		return 1;
	}

	if(dp[pos][mask] != -1) return dp[pos][mask];
	
	LL answer = 0LL;
	rep(i, 0, n){
		if(mask & (1<<i)) //Already used this dice
			continue;
		
		int c = 0;
		rep(j, 0, 6){
			if(dice[i][j] == P[pos]){
				c++;
			}
		}

		//debug_vars("pos, c", pos, c);

		answer += (c*solve(pos+1, mask|(1<<i))) % MOD;
		answer %= MOD;
	}

	return dp[pos][mask] = answer;
}

int main(){
	ios::sync_with_stdio(false); cin.tie(0);	

	cin>>n>>k;

	rep(i, 0, n){
		rep(j, 0, 6){
			cin>>dice[i][j];
		}
	}

	cin>>P;

	memset(dp, -1, sizeof(dp));

	cout<<solve(0, 0)<<endl;

	return 0;
}





















