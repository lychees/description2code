#include<bits/stdc++.h>
using namespace std;
const int MOD = 1e9 + 7;
long long int maxx(long long int a,long long int b,long long int c)
{
	long long int ans = 0;
	ans = max(a,b);
	ans = max(ans,c);
	return ans; 
}
long long int dp[202][202];
long long int solve(long long int N,long long int K)
{
//	static int tgt = K;
//	if(tgt > K)
//		return 0;
	if(dp[N][K] != -1)
		return dp[N][K];
	if(K == 0)
		return 0;
	if(K > N)
		return 0;
	if(N == K)
		return 1;
	else
	{
		dp[N-K][K] = solve(N-K,K);
		dp[N][K + 1] = solve(N,K + 1);
		dp[N][K] = dp[N-K][K] + dp[N][K + 1];
		return dp[N][K];
	}
}

int main()
{
	ios_base::sync_with_stdio(0);
	long long int ans = 0,T,N,K;
	
	cin >> T;
	while(T--)
	{
		for(int i = 0;i <= 200;i++)
		{
			for(int j = 0;j <= 200;j++)
				dp[i][j] = -1;
		}
		cin >> N >> K;
		long long int ans = solve(N,K);
		cout << ans << endl;
	}
	return 0;
}