
#include <iostream>
#include <fstream>
using namespace std;
#include<stdlib.h>

void Merge(int *A,int *L,int leftCount,int *R,int rightCount) {
	int i,j,k;
	i = 0; j = 0; k =0;

	while(i<leftCount && j< rightCount) {
		if(L[i]  < R[j]) A[k++] = L[i++];
		else A[k++] = R[j++];
	}
	while(i < leftCount) A[k++] = L[i++];
	while(j < rightCount) A[k++] = R[j++];
}

void MergeSort(int *A,int n) {
	int mid,i, *L, *R;
	if(n < 2) return;
	mid = n/2;  // find the mid index.

	// create left and right subarrays
	// mid elements (from index 0 till mid-1) should be part of left sub-array
	// and (n-mid) elements (from mid to n-1) will be part of right sub-array
	L = (int*)malloc(mid*sizeof(int));
	R = (int*)malloc((n- mid)*sizeof(int));

	for(i = 0;i<mid;i++) L[i] = A[i]; // creating left subarray
	for(i = mid;i<n;i++) R[i-mid] = A[i]; // creating right subarray

	MergeSort(L,mid);  // sorting the left subarray
	MergeSort(R,n-mid);  // sorting the right subarray
	Merge(A,L,mid,R,n-mid);  // Merging L and R into A as sorted list.
        free(L);
        free(R);
}
int main()
{
    int t;
    cin>>t;
    for(int z=0;z<t;z++)
    {
    	long long int ne=0,zr=0,pos=0,mine=10,mipo=10,bo=0,mi=1,ma=1,b,tine=10;
    	int n;
    	cin>>n;
    	int a[n];
    	for(int i=0;i<n;i++)
    	{
    		cin>>a[i];
    		b=a[i];
    		if(b<0)
    		{
    			bo=1;
    			if(abs(b)<tine)
    			{
    				mine=b;
    				tine=abs(b);
    			}
    		}

    		else
    		{
    			if(b<mipo)
    			{
    				mipo=b;
    			}
    		}

    	}
    	MergeSort(a,n);
        if(n==1)
        {
            mi=a[0];
            ma=a[0];
        }
        else{

    	for(int i=0;i<n;i++)
    	{
    		if(a[i]<0)
    		{
    			ne++;
    		}
    		else if(a[i]==0)
    			zr++;
    		else
    			pos++;
    	}
    	if(ne%2==0)
    	{
    		for(int i=0;i<n;i++)
    			{
    				if(a[i]!=0)
    					ma*=a[i];
    			}
    			if(bo==1)
    				mi=ma/mine;
    			else
    				mi=mipo;
    	}
    	else
    	{
    		for(int i=0;i<n;i++)
    			{
    				if(a[i]!=0)
    					mi*=a[i];
    			}

    			if(zr!=0&&pos==0)
    				ma=0;
    			else
    				ma=mi/mine;
//cout<<mine;
    	}}
    	if(zr==n)
    	cout<<"0 0"<<endl;
    	else
    	cout<<ma<<" "<<mi<<endl;

    }
}
