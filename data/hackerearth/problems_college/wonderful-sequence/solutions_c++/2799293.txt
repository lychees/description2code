#include <cstdio>
#include <iostream>
#include <string>
#define MAX 1e5+100
using namespace std;
typedef long long int int32;

int32 input[(int)MAX];

int longestIncreasingSubsequence(int N) 
{
    int L[N];
    L[0] = 1;

    int maxLength;
    for (int u = 1; u < N; u++) 
    {
        maxLength = 0;
        for (int v = 0; v < u; v++) {
            if (input[u] - input[v] >= u - v && L[v] > maxLength) {
                maxLength = L[v];
            }
        }
 
        L[u] = maxLength + 1;
    }
 
    maxLength = L[0];
    for (int i = 1; i < N; i++) {
        if (L[i] > maxLength) {
            maxLength = L[i];
        }
    }
 
    return maxLength;
}

int32 Process(int N)
{
    return N - longestIncreasingSubsequence(N);
}

int main()
{
    int T,N;
    cin >> T;
    while(T--)
    {
        cin >> N;
        for(int i = 0; i < N; ++i)
            cin >> input[i];

        cout << Process(N) << endl;
    }
    return 0;
}
