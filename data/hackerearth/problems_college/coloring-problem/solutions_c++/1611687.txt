#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <queue>
using namespace std;
typedef long long ll;
#define mod 1000000007

int V, graph[200][200];

bool bicolorable(int src){
    int color[V];
    for(int i=0;i<V;i++){
        color[i] = -1;
    }
    color[src] = 1;

    queue<int> q;
    q.push(src);
    while(!q.empty()){
        int u = q.front();
        q.pop();

        for(int v=0;v<V;v++){
            if(graph[u][v]==1 && color[v]==-1){
                color[v] = 1 - color[u];
                q.push(v);
            }
            else if(graph[u][v]==1 && color[v]==color[u]){
                return false;
            }
        }
    }
    return true;
}

int main(){
    ios::sync_with_stdio(false);
    #ifdef DEBUG
    freopen("input.txt", "r", stdin);
    #endif // DEBUG

    int t,e,a,b;
    cin>>t;
    while(t--){
        cin>>V;
        for(int i=0;i<V;i++)
            for(int j=0;j<V;j++)
                graph[i][j] = 0;
        cin>>e;
        for(int i=0;i<e;i++){
            cin>>a>>b;
            graph[a][b] = 1;
            graph[b][a] = 1;
        }
        if(bicolorable(0))
            cout<<"BICOLORABLE.\n";
        else
            cout<<"NOT BICOLORABLE.\n";
    }

    return 0;
}
