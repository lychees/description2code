#include <bits/stdc++.h>
using namespace std;
int const m = 1000000007;
long long int F[2][2];
void initialize(){
	F[0][0] = 1; F[0][1] = 1; F[1][0] = 1; F[1][1] = 0;
}
void matrixmult(long long int A[2][2], long long int B[2][2]){
	long int C[2][2] = { { 0, 0 }, { 0, 0 } };
	for (int i = 0; i<2; i++)
		for (int j = 0; j<2; j++)
			for (int k = 0; k<2; k++)
			{
		C[i][j] += ((A[i][k] * B[k][j]) % m);
		C[i][j] %= m;
			}
	for (int i = 0; i<2; i++)
		for (int j = 0; j<2; j++)
			A[i][j] = C[i][j];
}
 
void power(long long int A[2][2],long long int n){
	if (n == 1)
		return;
	if (n == 2){
		matrixmult(A, A);
		return;
	}
	if (n % 2 == 0){
		power(A, n / 2);
		matrixmult(A, A);
		return;
	}
	if (n % 2 != 0){
		long long int C[2][2];
		for (int i = 0; i<2; i++)
			for (int j = 0; j<2; j++)
				C[i][j]=A[i][j];
		power(A, n / 2);
		matrixmult(A, A);
		matrixmult(A, C);
		return;
	}
}
 
 
long long int Fib(long long int n){
	
		initialize();
		if(n==1)return 1;
		power(F, n-1);
		return F[0][0];
	
}
 
int main()
{
  int T;
  cin>>T;
  while(T--){
  	long long int n;
  	cin>>n;
  	cout<<Fib(n)<<endl;
  }}
 