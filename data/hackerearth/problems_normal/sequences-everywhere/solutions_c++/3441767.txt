#include <bits/stdc++.h>

using namespace std;

#define s(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define f first
#define sc second
#define pb push_back
#define mp make_pair
#define LM 100000000000000000

typedef long long int ll;

int main()
{
    ll l,r,i,j,ans1[50],ans[50],prod[50],sl,sr,dl,dr,tl,tr,fl,fr,fx;
    sl(l);
    sl(r);
    l--;
    ll sum = 2;
    prod[0] = 1;
    prod[1] = 1;
    prod[2] = 2;
    for(i = 3; sum < 100000000000000000LL; i++) {
        ll nxt = __gcd(sum,i);
        sum /= nxt;
        sum *= i;
        prod[i] = sum;
    //    cout<<i<<" "<<prod[i-1]<<endl;
    }
    prod[42] = prod[41];
    for(i = 1; i <= 42; i++) {
        ans1[i] = 1;
        for(j = 1; j < i; j++) {
            if(i%j != 0) {
                ans1[i] += ans1[j];
                break;
            }
        }
        //cout<<i<<" "<<ans[i]<<endl;
    }
    ans1[1] = 0;
    memset(ans,0,sizeof(ans));
    for(i = 41; i >= 1; i--) {
        if(r/prod[i-1] > 0) {
            //cout<<i<<" "<<r/prod[i-1]<<endl;
            ans[i] += r/prod[i-1];
            for(j = 1; j < i ; j++) {
                ans[j] -= ans[i];
               // cout<<j<<" "<<ans[i]<<endl;
            }
        }
        //cout<<i<<" "<<ans[i]<<endl;
    }
    ll ansr = 0;
    for(i = 1; i <= 41; i++) {
        //cout<<i<<" "<<ans1[i]+1<<endl;
        ansr += (ans1[i]+1)*ans[i];
    }
    if(r >= 2) {
        ansr -= 2;
    }
    memset(ans,0,sizeof(ans));
    for(i = 41; i >= 1; i--) {
        if(l/prod[i-1] > 0) {
            //cout<<i<<" "<<l/prod[i-1]<<endl;
            ans[i] += l/prod[i-1];
            for(j = 1; j < i ; j++) {
                ans[j] -= ans[i];
               // cout<<j<<" "<<ans[i];
            }
        }
        //cout<<i<<" "<<ans[i]<<endl;
    }
    ll ansl = 0;
    for(i = 1; i <= 41; i++) {
        //cout<<i<<" "<<ans1[i]+1<<endl;
        ansl += (ans1[i]+1)*ans[i];
    }
    if(l >= 2) {
        ansl -= 2;
    }
    printf("%lld\n",ansr-ansl);
    return 0;
}
