#include<bits/stdc++.h>
using namespace std;
struct mo {
	int a;
	int b;
	long long int c;
}adj[100001];
struct mo1 {
	int pr;
	int deg;
}seg[50001];
int par(int x){
	if (x!=seg[x].pr)
	return seg[x].pr=par(seg[x].pr);
	return x;
}
void Union(int x,int y){
	if (seg[x].deg>seg[y].deg)
	     seg[y].pr=x;
	else
	if (seg[x].deg<seg[y].deg)
	    seg[x].pr=y;
	else
	   seg[x].pr=y,seg[y].deg++;
}
bool cmp(mo a,mo b){
	if (a.c>b.c)
	   return false;
	if(a.c==b.c){
		int x=min(a.a,a.b);
		int z=max (a.a,a.b);
		int z1=max (b.a,b.b);
		int y=min(b.a,b.b);
		if (x<y)
		   return false;
		if (x==y&&z<z1)
		   return false;
	}
	return true;
}
static int deg[50001];
int main()
{
	int t;
	scanf ("%d",&t);
	while (t--){
    int n,m;
    long long sum=0;
    scanf ("%d %d",&n,&m);
    for (int i=0;i <m;i++){
    	scanf("%d %d %lld",&adj[i].a,&adj[i].b,&adj[i].c);
    }
    sort (adj,adj+m,cmp);
    
    for (int i=1;i <=n;i++)
       seg[i].pr=i,seg[i].deg=0,deg[i]=0;
    for (int i=0;i<m;i++){
    	int x=par(adj[i].a);
    	int y=par(adj[i].b);
    	if (x!=y){
    		Union(x,y);
    		deg[adj[i].a]++;
    		deg[adj[i].b]++;
    		sum+=adj[i].c;
    	}
    }
    printf ("%lld\n",sum);
    for (int i=1;i <=n;i++)
        printf ("%d ",deg[i]);
    printf ("\n");
	}
    return 0;
}
