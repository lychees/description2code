#include <bits/stdc++.h>
//#include <iostream>
//#include<map>
//#include<string>
//#include<stdlib.h>
using namespace std;
map<char,int>m;
 int dp[5000001];
int main()
{
  string str;
  getline(cin,str);
  //cin>>str;
  int len=str.length();
 
  for(int i=0;i<11;i++)
  {
  	   m[str[i]]++;
  }
   if((m['h']+m['H']==2) and (m['a']+m['A']==2) and (m['c']+m['C']==1) and (m['k']+m['K']==1) and (m['e']+m['E']==2) and (m['r']+ m['R']==2) and ( m['t']+m['T']==1) )
    dp[0]=1;
  int L=0,R=11;
  while(R<len)
  {
       m[str[L]]--;
       m[str[R]]++;
       L++;
       R++;
  if((m['h']+m['H']==2) and (m['a']+m['A']==2) and (m['c']+m['C']==1) and (m['k']+m['K']==1) and (m['e']+m['E']==2) and (m['r']+ m['R']==2) and ( m['t']+m['T']==1) )
    dp[L]=1;
    //cout<<"dp["<<L<<"]="<<dp[L]<<endl;

  }
  for(int i=0;i<len;i++)
  {if(i)
  dp[i]+=dp[i-1];
  }
  int count=0,t;
  scanf("%d",&t);
  while(t--)
  {
  	count=0;
    scanf("%d%d",&L,&R);
  L--,R--;
  int ans;
 
  if((R-L+1)>=11)
  {
  	R=R-11+1;
  	if(L>0)
  count=dp[R]-dp[L]+dp[L]-dp[L-1];
  else
  count=dp[R]-dp[L]+dp[L];
  }
  printf("%d\n",count);
  //cout<<count<<endl;
  }
return 0;
}
