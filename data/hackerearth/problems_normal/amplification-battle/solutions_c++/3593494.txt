/*
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
	ABHINANDAN AGARWAL
	MNNIT ALLAHABAD
	CSE
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
#define wl(n) while (n--)
#define MOD 1000000007
//-------------
ll c,a,b;
map<ll,int>m;
int doit(ll cur)
{
	if (cur>=c)
		return 0; // current user surely loses. 
	ll i ;
	map<ll,int>::iterator it=m.find(cur);
	if (it!=m.end())
		return it->se;

	int ret=0;
	if (cur>1+c/b)
		ret=1;
	else
	{  

		for (i=a;i<=b;i++)
		{
			/*if (a<i&&i<b)
				continue;*/
			if (cur>1+c/i)
			{
				ret=1;
				break;
			}
			if (doit(i*cur)==0)
				{
					ret=1;
					break;
				}
		}
	}
	/*if (doit(a*cur)==0||doit(b*cur)==0) // alternate method.. may be incorrect.
		ret=1;*/
	return m[cur]=ret;
}
int main()
{
	int t;
	sc(t);
	//FILE *f=fopen("yok.txt","w");
	int cas=1;
	wl(t)
	{
		
		/*m.clear();
		scanf("%lld%lld%lld",&a,&b,&c);
		int ans=doit(1);
		if (ans)
			printf("Adam\n");
		else
			printf("Bob\n");
		//fprintf(f,"case %d successfully executed!\n",cas++);*/
		scanf("%lld%lld%lld",&a,&b,&c);
		ll cur=1;int ans=0;
		while (cur<c)
		{
			ans^=1;
			//cur*b>=c
			if (ans==1)
			{	
				if (cur>=c/b+(c%b>0?1:0))
					break;
				cur*=b;

			}
			else{
				 //cur*=a;
				if (cur>=c/a+(c%a>0?1:0))
				 	break;
				 cur*=a;
			}
			

		}
		if (ans)
			printf("Adam\n");
		else
			printf("Bob\n");

	}
	//fclose(f);

	return 0;

}