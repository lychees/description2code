/*
#########################################
#        Syed Omar Ali                  #
#        Aligarh Muslim University      #
#        III Year                       #
#########################################
*/
#include<bits/stdc++.h>

using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;

#define rep(n) for(ll i=0; i<(n); i++)
#define wl(n) while(n--)
#define mem(x,val) memset((x),(val),sizeof(x));
#define vl vector<ll>
#define vb vector<bool>
#define vvl vector<vl >
#define vvb vector<vb >
#define all(x) (x.begin(),x.end())
#define sz(x) ((ll)x.size())
#define pb push_back
#define em(x) (!x.empty())
#define MAX INT_MAX*INT_MAX
#define MIN INT_MIN*INT_MIN
#define MOD 1000000007
#define pr pair<ll,ll>
#define mp make_pair
#define F first
#define S second
#define sl(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
#define t() ll tst,test=1; sl(tst); while(tst--)

template<class T1> void deb(T1 e1) {
    cout << e1 << endl;
}

template<class T1,class T2> void deb(T1 e1, T2 e2) {
    cout << e1 << " " << e2 << endl;
}
vector<list<pair<ll,ll> > >adj;
vector<bool> visited;
vector<ll> level;
ll BFS(ll start);
int main(){
    t(){
        adj.clear();
        visited.clear();
        level.clear();
        list<pair<ll,ll> >l;
        ll N;
        sl(N);
        for(ll i=0;i<N;i++){
            adj.pb(l);
            visited.pb(false);
            level.pb(0);
        }
        ll u,v,w;
        N--;
        wl(N){
            sl(u);sl(v);sl(w);
            u--;v--;
            adj[u].pb(mp(v,w));
            adj[v].pb(mp(u,w));
        }
        if(visited.size()==0 || visited.size()==1){
            cout << "0 0" << endl;
            continue;
        }
        BFS(0);
        ll maxm = 0;
        ll maxi;
        for(ll i=0;i<level.size();i++){
            if(maxm<level[i]){
                maxm = level[i];
                maxi = i;
            }
        }
        N = visited.size();
        visited.clear();
        level.clear();
        for(ll i=0;i<N;i++){
            visited.pb(false);
            level.pb(0);
        }
        BFS(maxi);
        maxm = 0;
        for(ll i=0;i<level.size();i++){
            if(maxm<level[i]){
                maxm = level[i];
                maxi = i;
            }
        }
        if(maxm<= 100)
            cout << "0 ";
        else if(maxm>100 && maxm<=1000)
            cout << "100 ";
        else if(maxm>1000 && maxm<=10000)
            cout << "1000 ";
        else
            cout << "10000 ";
        cout << maxm << endl;
    }
    return 0;
}
ll BFS(ll start){
    level[start] = 0;
    visited[start] = true;
    ll left = 1,right = 0;
    queue<ll > q;
    q.push((start));
    while(!q.empty()){
        ll u = q.front();
        q.pop();
        for(list<pair<ll,ll> > :: iterator i = adj[u].begin();i!=adj[u].end();i++){
            ll v = (*i).first;
            ll weight = (*i).second;
            if(!visited[v]){
                visited[v] = true;
                level[v] = level[u] + weight;
                if(level[v]%2==0)
                    left++;
                else
                    right++;
                q.push(v);
            }
        }
    }
    return max(left,right);
}
