#include<iostream>
#include<math.h>
#include<list>
#include<cstring>
#include<algorithm>
using namespace std;

long convert(char *a,int l,int b)
{
long ans=0;
for(int i=0;i<l;i++)
 { //cout<<a[i]<<endl;
    ans+=(a[i]-48)*(long)pow(b,l-1-i);            
  }     
return ans;        
}


int main()
{

//string b1,b2;

char b2[10000]; 
char b3[10000];

cin>>b2;
cin>>b3; 
 
long num2=convert(b2,strlen(b2),2);
long num3=convert(b3,strlen(b3),3);

list<long> l2;
list<long> l3;
 
for(int i=0;i<strlen(b2);i++)
 {
     l2.push_back((long)pow(2,i)^num2);
     
 }
for(int i=0;i<strlen(b3);i++)
 {
    int p=(int)pow(3,strlen(b3)-1-i); 
                         
    if(b3[i]=='0')
      {
       l3.push_back(num3+p);
       l3.push_back(num3+2*p);
       }
    if(b3[i]=='1')
      {
       l3.push_back(num3-p);
       l3.push_back(num3+p);
       }
    if(b3[i]=='2')
      {
       l3.push_back(num3-p);
       l3.push_back(num3-2*p);
       }      
}
l2.sort();
l3.sort();
list<long> common;

set_intersection(l2.begin(), l2.end(), l3.begin(), l3.end(), back_inserter(common));

list<long>::iterator it;
/*
it=l2.begin();

while(it!=l2.end())
{
cout<<*it<<endl;                       
it++;
}
cout<<"-----------"<<endl;

it=l3.begin();

while(it!=l3.end())
{
cout<<*it<<endl;                       
it++;
}
cout<<"-----------"<<endl;

*/
it=common.begin();

while(it!=common.end())
{
cout<<*it<<endl;                       
it++;
}

//cout<<num2<<":"<<num3<<endl;
 
return 0;
}
