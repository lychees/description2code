#include<bits/stdc++.h>

using namespace std;

typedef struct node
{
	struct node *next;
	int data;
}node;

int vis[5000005];
node *a[5000005];
void addedge(int i,int j)
{
	node *temp=(node *)malloc(sizeof(node));
	temp->data=j;
	temp->next=a[i];
	a[i]=temp;
}
void dfs(int from,int i)
{
	vis[from]=i;
	node *temp=a[from];
	while(temp)
	{
		if(vis[temp->data]==0)
		{
			dfs(temp->data,i);
		}
		temp=temp->next;
	}

}
int main()
{
	set< pair<int ,int>  > sss;
	int m;
	cin>>m;
	int n;
	cin>>n;
	int ne=m;
	while(n--)
	{
		int i,j;
		cin>>i>>j;
		pair<int ,int> aaa;
		aaa=make_pair(i,j);
		
		sss.insert(aaa);

		aaa=make_pair(j,i);
		sss.insert(aaa);
		addedge(i,j);
		addedge(j,i);
	}
	int no;
	cin>>no;
	int i=1;
	int k=1;
	while(i<=ne)
	{
		if(vis[i]==0)
		{
			dfs(i,k);
			k++;
		}
		i++;
	}
	while(no--)
	{
		int a,b;
		cin>>a>>b;
		pair<int ,int> aaa;

		aaa=make_pair(a,b);

		if(sss.find(aaa) != sss.end())
			cout<<"Direct Connection"<<endl;

		else
		{
			if(vis[a]==vis[b])
				cout<<"Indirect Connection"<<endl;
				
			else
				cout<<"No Connection"<<endl;
		}
	}
	return 0;

}


