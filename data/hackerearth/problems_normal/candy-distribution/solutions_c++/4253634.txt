//Template by @sai krishna
#include <map>
#include <set>
#include <queue>
#include <cmath>
#include <stack>
#include <vector>
#include <cstdio>
#include <bitset>
#include <sstream>
#include <cassert>
#include <cstring>
#include <utility>
#include <iterator>
#include <iostream>
#include <algorithm>
#include <functional>
using namespace std;
#define rep(i,a,n) for(int i=a;i<n;i++)
#define srt(x) sort(x.begin(),x.end())
#define clear(x,val) memset(x,val,sizeof x)
#define rl(x) scanf("%lld",&x)
#define ri(x) scanf("%d",&x)
#define gc getchar_unlocked
#define pi2 pair<pii,int>
#define pii pair<int,int>
#define MOD 1000000007
#define LL long long
#define MAX 100000001
#define ss second
#define INF 1<<32
#define ff first
map<LL,LL>memo;
LL powMod(LL a,LL b)
{
	LL x=1,y=a;
	while(b)
	{
		if(b&1)
		x*=y;
		if(x>MOD)x%=MOD;
		y*=y;
		if(y>MOD)y%=MOD;
		b>>=1;
	}
	return x;
}
std::vector<long long> divisors(LL n)
{
	std::vector<LL> v;
	for(int i=2;i<=sqrt(n);i++)
	{
		if(n%i==0)
		{
			v.push_back(i);
			if(i!=n/i)
				v.push_back(n/i);
		}
	}
	return v;
}
LL solve(LL N)
{
	if(N<=2)return 1;
	map<LL,LL>::iterator it=memo.find(N);
	if(it!=memo.end())return it->ss;
	LL n=N-1;
	LL res=1;
	std::vector<long long> div=divisors(n);
	for(int i=0;i<div.size();i++)
	{
		LL d=div[i];
		LL tmp=powMod(solve(d),n/d);
		res+=tmp;
		res%=MOD;
	}
	memo.insert(pii(N,res));
	return res;
}
int main()
{
	LL n;
	rl(n);
	cout<<solve(n)<<endl;
}   