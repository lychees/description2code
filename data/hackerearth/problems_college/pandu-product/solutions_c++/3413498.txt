#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(i= a ; i < b ; ++i)
#define rep(i,n) FOR(i,0,n)
#define INF INT_MAX
#define ALL(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#define pb push_back
#define sz(x) int(x.size())
#define mp make_pair
#define fill(x,v) memset(x,v,sizeof(x))
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pd(n) printf("%lf ",n);
#define pdl(n) printf("%lf\n",n);
#define pin(n) printf("%d\n",n)
#define pln(n) printf("%lld\n",n)
#define pl(n) printf("%lld ",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define scan(v,n) vector<int> v;rep(i,n){ int j;si(j);v.pb(j);}
#define mod (int)(1e9 + 7)
#define ll long long int
#define TRACE
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
ll modpow(ll a,ll n,ll temp){ll res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;} 
vector<ll> f1,f2;
ll checkmod(ll a)
{
	if(a<0)
	{
		a=-a;
		a%=mod;
		a*=(mod-1);
		a%=mod;
	}
	else
		a%=mod;
	return a;
}
int main()
{
	ll n,flag=0,calc,i,sz,sz1,val,vit,sz2,c1,c2,ans,flag1=1;
	sl(n);
	rep(i,n)
	{
		sl(val);
		if(val<0)
			f1.pb(val);
		else if(val>0)
			f2.pb(val);
		else
			flag++;
	}
	assert(n>=2);
	sort(f1.begin(), f1.end());
	sort(f2.begin(), f2.end());
	sz1=f1.size();
	sz2=f2.size();
	c1=c2=-(ll)((ll)mod*(ll)mod);
	if(sz2>=2)
	{
		c1=f2[sz2-1]*f2[sz2-2];
		flag1=0;
	}
	if(sz1>=2)
	{
		//printf("hie\n");
		c2=f1[0]*f1[1];
	}
	else if(sz1==1 && sz2==1)
	{
		//printf("hie1\n");
		if(flag!=0)
			c1=0;
		else
			c1=f1[0]*f2[0];
	}
	else if(flag1)
	{
		if(sz1==1 || sz2==1)
			c1=0;
		else if(flag!=0)
			c1=0;
	}
	ans=max(c1,c2);
	//trace1(c1);
	pln(ans);
	return 0;
}