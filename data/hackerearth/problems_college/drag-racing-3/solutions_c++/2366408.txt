#include<bits/stdc++.h>
using namespace std;

std::vector<int> adj[32769];
bool is_visited[32769];
string name[32769];
std::map<string, int> driver_code;
int eliminated = 0;

void bfs(int cur) {
	is_visited[cur] = true;

	queue<int> q;
	q.push(cur);

	while(!q.empty()) {
		cur = q.front();
		q.pop();
		eliminated++;
		//cout << name[cur] << " is eliminated\n";

		for(int i = 0 ; i < adj[cur].size() ; i++) {
			int next = adj[cur][i];
			//cout << "next = " << name[next] << endl;
			if(!is_visited[next]){
				is_visited[next] = true;
				
				q.push(next);
			}
		}
	}
}

int main() {
	int players, v1, v2, j = 0, winner, i, total;
	string a, b;
	scanf("%d",&players);
	total = pow(2, players);

	for(i = total - 1 ; i ; i--) {
		cin >> a >> b;

		if(driver_code.find(a) == driver_code.end() ){
			name[j] = a;
			driver_code[a] = v1 = j;
			j++;
		}
		if(driver_code.find(b) == driver_code.end()) {
			name[j] = b;
			driver_code[b] = v2 = j;
			j++;
		}

		v1 = driver_code[a];
		v2 = driver_code[b];
		//printf("v1 = %d v2 = %d\n",v1, v2 );
		//cout << name[v1] << "  " << name[v2] << "  \n";
		adj[v1].push_back(v2);
	}

	for(i = 0; i < total ; i++) {
		if(!is_visited[i])
			bfs(i);

		//printf("out = %d 	",eliminated );	cout << "cur = " << name[i] << endl;
		if(eliminated == total){
			cout << name[i] << endl;
			return 0;
		}
	}

	for(i = 0 ; i < players ; i++) {

	}
}