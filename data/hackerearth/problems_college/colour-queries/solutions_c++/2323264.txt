#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <memory.h>
#include<cstring>
using namespace std;
int bl[102][102];
int arr[102][102];
int n,m,q;
int dfs(int a,int b,int d)
{
    bl[a][b]=1;

    if(b-1>0)
    {
        if(bl[a][b-1]!=1 && abs(arr[a][b]-arr[a][b-1])<=d)
            dfs(a,b-1,d);
    }
    if(b+1<=m)
    {
        if(bl[a][b+1]!=1 && abs(arr[a][b]-arr[a][b+1])<=d)
            dfs(a,b+1,d);
    }
    if(a-1>0)
    {
        if(bl[a-1][b]!=1 && abs(arr[a][b]-arr[a-1][b])<=d)
            dfs(a-1,b,d);
    }
    if(a+1<=n)
    {
        if(bl[a+1][b]!=1 && abs(arr[a][b]-arr[a+1][b])<=d)
            dfs(a+1,b,d);
    }
    return 0;
}
int main() {
	ios_base::sync_with_stdio(0);

	cin >> n >> m >> q;
	for(int i=1;i<=n;i++)
    {
       for(int j=1;j<=m;j++)
      {
         cin >> arr[i][j];
      }
    }
        for(int i=1;i<=q;i++)
    {
        int cnt=0;
      memset(bl,0,sizeof(bl));
        int val1,val2,d;
        cin >> val1 >> val2 >> d;
        dfs(val1,val2,d);
        for(int i=1;i<=n;i++)
    {
       for(int j=1;j<=m;j++)
      {

          if(bl[i][j]==1)
            cnt++;
    }

    }
    cout << cnt << endl;
    }
}
