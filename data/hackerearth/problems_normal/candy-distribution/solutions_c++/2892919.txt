#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007

map<long long, long long> M;

long long mod(long long N)
{
	if(N>=MOD)
		N%= MOD;
	
	return N;
}

long long power(long long N, long long expo)
{
	long long ans = 1;
	
	N = mod(N);
	
	while(expo)
	{
		if(expo%2)
			ans = mod(ans*N);
		
		N = mod(N*N);
		expo/= 2;
	}
	
	return ans;
}

long long solve(long long N)
{
	if(N==1 || N==2)
		return 1;
	
	if(M.count(N))
		return M[N];
	
	int x = (int)sqrt(N-1);
	long long ans = 1;
	
	for(int i=2; i<=x; i++)
	{
		if((N-1)%i==0)
		{
			ans = mod(ans + power(solve((N-1)/i), i));
			
			if(i*i!=(N-1))
				ans = mod(ans + power(solve(i), (N-1)/i));
		}
	}
	
	return M[N] = ans;
}

int main()
{
    long long N;
    scanf("%lld", &N);
    
    printf("%lld\n", solve(N));
    
    return 0;
}
