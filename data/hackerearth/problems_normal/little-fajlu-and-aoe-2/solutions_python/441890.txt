def defeat_power(food,gold,s,p,c,tp):
    sam = 0
    temp = -1
    res = -1
    while sam*100 <= food:
        pal = 0 
        while ((pal*125 + 100*sam) <= food) and (pal*50<=gold):
            food_left = (food-100*sam - 125*pal)
            gold_left = (gold-50*pal)
            cha = min(food_left/50,gold_left/100)
            temp = max(temp,(s*sam+p*pal+c*cha))
            pal +=1
        sam += 1
    if temp>tp:
        res = temp-tp
    return res
        
t = int(raw_input())
req_power = []
for tc in range(0,t):
    inputs = raw_input()
    numbers = inputs.split(' ')
    f = int(numbers[0])
    g = int(numbers[1])
    s = int(numbers[2])
    p = int(numbers[3])
    c = int(numbers[4])
    tp = int(numbers[5])
    req_power.append(defeat_power(f,g,s,p,c,tp))

for req in req_power:
    print req    