#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <iterator>
#define ll long long int
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
using namespace std;

bool func_name1(const pair<ll,ll>&p1,const pair<ll,ll>&p2)
{
	if(p1.first<p2.first)
	return 1;
	else
	return 0;
}

bool func_name2(const pair<ll,ll>&p1,const pair<ll,ll>&p2)
{
	if(p1.second==p2.second)
	{
		if(p1.first<p2.first)
		return 1;
		else
		return 0;
	}
	else
	{
		if(p1.second>p2.second)
		return 1;
		else
		return 0;
	}
}

bool ispossible(ll bal,vector<pair<ll,ll> >&p,vector<pair<ll,ll> >&l)
{
	ll flag=1,i;
	for(i=0;i<p.size();i++)
	{
		if(bal>=p[i].first)
		bal=bal+(p[i].second-p[i].first);
		else
		{
			flag=0;
			break;
		}
	}
//	cout<<"bal="<<bal<<endl;
	if(flag==1)
	{
		for(i=0;i<l.size();i++)
		{
			if(bal>=l[i].first)
			bal=bal+(l[i].second-l[i].first);
			else
			{
				flag=0;
				break;
			}
		}
	}
//	cout<<"bal="<<bal<<endl;
	return flag;
}

ll binary_search(ll low,ll high,vector<pair<ll,ll> >&p,vector<pair<ll,ll> >&l)
{
	ll mid;
	while(high-low>1)
	{
		mid=low+(high-low)/2;
		if(ispossible(mid,p,l))
		high=mid;
		else
		low=mid;
//		cout<<low<<" "<<mid<<" "<<high<<endl;
	}
//	if(high==low)
	return high;
}



int main()
{
	ll n,t,x,tt,ans;
	cin>>n;
	vector<pair<ll,ll> >p;
	vector<pair<ll,ll> >l;
	while(n--)
	{
		cin>>t>>x;
		if(x-t>=0)
		p.pb(mp(t,x));
		else
		l.pb(mp(t,x));
		tt+=t;
	}
   
   sort(p.begin(),p.end(),func_name1);
   sort(l.begin(),l.end(),func_name2);
   
 /*  	for(int i=0;i<p.size();i++)
	cout<<p[i].first<<"  "<<p[i].second<<endl;
	cout<<endl<<endl;
	
	for(int i=0;i<l.size();i++)
	cout<<l[i].first<<"  "<<l[i].second<<endl; */
   
   ans=binary_search(0,tt,p,l);
   cout<<ans<<endl;
   
   return 0;
}