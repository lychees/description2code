#include <iostream>
#include <vector>
#include <map>
using namespace std;

int setDigits(long long x)
{
    int digs = 0;
    while(x > 0)
    {
        digs += (x & 1);
        x >>= 1;
    }
    return digs;
}

void taskMain()
{
    int T;
    cin >> T;
    while(T--)
    {
        int N;
        cin >> N;
        map< int, vector<long long> > m;
        for(int i = 0; i < N; i++)
        {
            long long x;
            cin >> x;
            int xBits = setDigits(x);
            map< int, vector<long long> >::iterator found = m.find(xBits);
            if(found == m.end())
            {
                vector<long long> V;
                V.push_back(x);
                m.insert(pair< int, vector<long long> >(xBits, V));
            }
            else
                m[xBits].push_back(x);
        }

        for(map< int, vector<long long> >::iterator it = m.begin(); it != m.end(); it++)
        {
            vector<long long> &V = it->second;
            for(unsigned long i = 0; i < V.size(); i++)
                cout << V[i] << " ";
        }

        cout << "\n";
    }
}


int main()
{
    taskMain();
    return 0;
}
