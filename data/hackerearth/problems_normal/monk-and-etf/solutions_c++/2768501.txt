#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<fstream>
#include<map>

#define MOD 1000000007
#define MAX 10000019
#define identity 0
#define ll long long
#define slld(t) scanf("%lld",&t)
#define sd(t) scanf("%d",&t)
#define plld(t) printf("%lld\n",t)
#define DBUG(x) cout<<x<<endl;
#define pcc pair<char,char>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define tr(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define mp(a,b) make_pair(a,b)

using namespace std;

ll segment[100020];
ll storage[100020];
bool sieveprime[MAX/2+5];
ll prime[664595];

int x=0;
void precalc_prime()
{
	
	prime[x++]=2;
	
	int MAX_2=MAX/2+3;
	
	for(int i=1;i<=MAX_2;i++)
		sieveprime[i]=0;
		
	double SQRT_MAX=sqrt(MAX);
	
	for(int i=3;i<=SQRT_MAX;i+=2)
		if(!sieveprime[i/2])
		{	
			for(int j=i*i;j<=MAX;j+=2*i)
				sieveprime[j/2]=1;
			prime[x++]=i;
		}
		
	for(int i=SQRT_MAX+1;i<=MAX;i+=2)
		if(!sieveprime[i/2]) prime[x++]=i;		
}

int main()
{
	precalc_prime();
	ll t;
	slld(t);
	while(t--){
		
	
		ll 	m,n,k;
		
		slld(m);slld(n);slld(k);
		
		for(ll i=m;i<=n;i++) {storage[i-m]=i; segment[i-m]=i;}
		
		ll lim=(n-m)+10;
		
		ll i=0;
		
		ll pp=4;
		
		while(pp<=n)
		{
			for(ll j=prime[i]*(ceil(double(m)/prime[i]));j<=n;j+=prime[i])
			{
				segment[j-m]-=segment[j-m]/prime[i];
				
				while(storage[j-m]%prime[i]==0) storage[j-m]/=prime[i];
			}
			i++;
			pp=prime[i]*prime[i];
		}
		
		ll ans=0;
		for(ll j=m;j<=n;j++) 
		{
			if(storage[j-m]==1){
				ll my=segment[j-m];
				if(my%k==0) ans++;
			}
			else{
				ll my=segment[j-m]-segment[j-m]/storage[j-m];
				if(my%k==0) ans++;
			}
		}
		
		printf("%.6lf\n",double(ans)/(n-m+1));
	}
}