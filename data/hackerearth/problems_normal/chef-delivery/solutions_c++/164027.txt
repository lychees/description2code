#include "stdio.h"
#include "stdlib.h"
#define lli long long int
#define max(a,b) (a)>(b)?(a):(b)

int n,m,p[1024],cost[1024], idx[1024];
lli dp[1024][1024];
lli solve()
{  
    int i, j;

    for (i = 0; i <= m; ++i)
        dp[0][i] = 0;
    for (i = 0; i <= n; ++i)
        dp[i][0]=0;

//    printf("I have %d lit of petrol\n",m );

    for (i = 1; i <= n; ++i)
    {
        for (j = 1; j <= m; ++j)
        {
            if(idx[i]-p[i] > j)  //if car i can never be fueled up by given amount of petrol,car i is not selected
            {
    //            printf("car %d cannot be fueled up ever\n",idx[i] );
                dp[i][j] = dp[i-1][j];
            }
            else    //car to fueled by idx[i]-p[i] litres of petrol
            {
                if(dp[i-1][j] > cost[i] + dp[i-1][j-(idx[i]-p[i])])
                {
//                    printf("car %d is not fueled\n",i );
                    dp[i][j] = dp[i-1][j];
                }
                else
                {
  //                  printf("car %d is fueled by %d lit\n",idx[i],idx[i]-p[i] );
                    dp[i][j] = cost[i] + dp[i-1][j-(idx[i]-p[i])];                    
                }

//                dp[i][j] = max(dp[i-1][j], cost[i] + dp[i-1][j-(idx[i]-p[i])]);
            }
        }
    }
/*

    for (i = 0; i <= n; ++i)
    {
        for (j = 0; j <= m; ++j)
        {
            printf("%d ",dp[i][j] );
        }
        printf("\n");
    }
*/
    return dp[n][m];
}

int main()
{
    int t, a[1024], b[1024];
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d %d",&n,&m);
        for (int i = 1; i <= n; ++i)
        {
            scanf("%d",&a[i]);
        }
        for (int i = 1; i <= n; ++i)
        {
            scanf("%d",&b[i]);
        }

        lli ans = 0;
        int j = 1;
        for (int i = 1; i <= n; ++i)
        {
            if(a[i] < i)
            {
                p[j] = a[i];
                cost[j] = b[i];
                idx[j] = i;
                j++;
            }
            else
            {
  //              printf("car %d is already selected\n",i );
                ans += b[i];
            }
        }
//        printf("ans is %lld\n",ans );
        j--;
        n = j;
  //      printf("n is %d\n",n );
/*
        for (int i = 1; i <= j; ++i)
        {
            printf("%d ",p[i] );
        }
        printf("\n");
        for (int i = 1; i <= j; ++i)
        {
            printf("%d ",cost[i] );
        }
        printf("\n");
        
*/


        printf("%lld\n",ans+solve() );

    }
    return 0;
}    