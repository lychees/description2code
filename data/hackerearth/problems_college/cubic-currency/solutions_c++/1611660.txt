#include<stdio.h>
#include<vector>
using namespace std;
 
// Returns the count of ways we can sum  S[0...m-1] coins to get sum n
unsigned long long  count( int C[], int n, int k )
{ vector<vector<unsigned long long> > table(n+1, vector<unsigned long long>(k+1, 1));

    for (int i = 0; i <= n; ++i)
    {
        for (int j = 0; j <= k; ++j)
        {
            if (i < 0 || j < 0) // Impossible, for illustration purpose
            {
                table[i][j] = 0;
            }
            else if (i == 0 || j == 0) // Very Important
            {
                table[i][j] = 1;
            }
            else
            {
                // The recursion. Be careful with the vector boundary
                table[i][j] = table[i][j-1] + 
                    (i < C[j] ? 0 : table[i-C[j]][j]);
            }
        }
    }

    return table[n][k];
}
 
int main()
{
    int i,n,j,t;
    int arr[21];
    for(i=0;i<21;i++)
    arr[i]=(i+1)*(i+1)*(i+1);
    scanf("%d",&t);
    while(t--)
    {
    scanf("%d",&n);
    if(n==0){
    printf("0\n");
    continue;}
    int m = sizeof(arr)/sizeof(arr[0]);
    printf("%llu\n", count(arr,n,m));
    }
    return 0;
}