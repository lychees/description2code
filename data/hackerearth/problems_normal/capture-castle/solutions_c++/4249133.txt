#include <bits/stdc++.h>
using namespace std;

typedef struct Node
{
	int x1,y1;
}Node;
int isValid(int x,int y,int m,int n)
{
	return (x>=0&&x<m&&y>=0&&y<n);
}
int main()
{
	long long test,m,n,i,j,x,y,t,index1,index2;
	long long row[]={1,-1,0,0};
	long long col[]={0,0,1,-1};
	cin>>test;
	while(test--)
	{
		cin>>m>>n;
		long long a[m][n],dp[m][n];
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				cin>>a[i][j];
				dp[i][j]=INT_MAX;
			}
		}
		dp[0][0]=a[0][0];
		cin>>x>>y>>t;
		x--;y--;
		queue<Node> q;
		Node nd;
		nd.x1=0;
		nd.y1=0;
		q.push(nd);
		index1=0;
		index2=0;
		while(!q.empty())
		{
			q.pop();
			for(i=0;i<4;i++)
			{
				if(isValid(index1+row[i],index2+col[i],m,n)&&dp[index1+row[i]][index2+col[i]]>dp[index1][index2]+a[index1+row[i]][index2+col[i]])
				{
					dp[index1+row[i]][index2+col[i]]=dp[index1][index2]+a[index1+row[i]][index2+col[i]];
					nd.x1=index1+row[i];
					nd.y1=index2+col[i];
					q.push(nd);
				}
			}
			nd=q.front();
			index1=nd.x1;
			index2=nd.y1;
		}
		if(dp[x][y]>t)
		cout<<"NO"<<endl;
		else
		{
			cout<<"YES"<<endl;
			cout<<t-dp[x][y]<<endl;
		}
	}
    return 0;
}
