#include <bits/stdc++.h>

using namespace std;

#define mp make_pair
#define f first
#define s second

int x[]={1,-1,0,0},y[]={0,0,1,-1};
int n,sx,sy,ex,ey,dis[31][31];
char si[31][31];
bool vis[31][31];

bool check(int p,int q){
    return (p >= 0 && p < n && q >= 0 && q < n);
}

void bfs(int p,int q)
{
    vis[p][q] = true;
    queue<pair<int,int> >pq;
    dis[p][q] = 0;

    pq.push(mp(p,q));

    while(!pq.empty()){
        int u = pq.front().f;
        int v = pq.front().s;
        pq.pop();

        for(int i = 0; i < 4; i++){
            int px = u + x[i],py = v + y[i];
            if(check(px,py) && si[px][py] == 'P' && !vis[px][py]){
                dis[px][py] = dis[u][v] + 1;
                vis[px][py] = true;
                pq.push(mp(px,py));
            }
        }
    }
    //cout << "yes" << endl;
}



int main()
{
    scanf("%d",&n);

    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++)
            scanf(" %c",&si[i][j]);
    }

    for(int i = 0 ; i < n; i++){
        for(int j = 0 ; j < n; j++){
            if(si[i][j] == 'S') si[i][j] = 'P',sx = i,sy = j;
            if(si[i][j] == 'E') si[i][j] = 'P',ex = i,ey = j;
        }
    }

    bfs(sx,sy);

    printf("%d\n",dis[ex][ey]);

    return 0;
}
