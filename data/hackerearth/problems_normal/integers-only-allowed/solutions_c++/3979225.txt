#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cctype>
#include <cstdlib>
#include <bitset>
#include <vector>
#include <list>
#include <deque>
#include <queue>
#include <map>
#include <set>
#include <stack>
#include <cmath>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <complex>
#include <functional>
#include <climits>
#include <cassert>
#include <iterator>
#include <math.h>
#include <time.h>
#include <string.h>

#define bit(n) (1<<(n))
#define inf 1000000000
#define eps 1e-9
#define PI 3.1415926535897932385
#define pb push_back
#define sz size()
#define mp make_pair
#define cl clear()
#define all(a) a.begin(),a.end()
#define fill(ar,val) memset(ar,val,sizeof(ar))
#define MIN(a,b) if(a>(b)) a=(b)
#define MAX(a,b) if(a<(b)) a=(b)
#define sqr(x) ((x)*(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define MOD 1000000007
#define bsize 200000
const int N = 1000005;

using namespace std;
 // ==================================================================//
 
 int n;
 long long int s;
 int bord;
 int x[1<<20],y[1<<20];
 int gcd(int a,int b)
{
	a=abs(a);
	b=abs(b);		
	while (a&&b)a>b?a-=b:b-=a;
	return a+b;
}

 
int main()
{
    // * Faster Input *//
    
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    // * ========================================================== * //
    
    cin >> n;
    for(int i=0;i<n;i++)
    {
        cin >>x[i] >> y[i];
    }
    x[n] = x[0];
    y[n] = y[0];
    
    for(int i=0;i<n;i++)
    {
        s+=1ll * x[i+1] * y[i] - 1ll*x[i]*y[i+1];
    }
    for(int i=0;i<n;i++)
    {
            bord += gcd(y[i+1]-y[i] , x[i+1]-x[i]);
    
    }
    cout << (s+2-bord)/2 << endl;
 
    return 0;
}
