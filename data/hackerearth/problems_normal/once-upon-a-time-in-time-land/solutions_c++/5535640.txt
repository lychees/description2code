#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
#define LL long long 
using namespace std;
LL dp[100005];
LL get_time(int A[], int st, int K, int N) {
	int time = 0;
	if (st >= N) return 0;
	//cout<<st<<endl;
	if (dp[st]) return dp[st];
	time = max(get_time(A, st+K+1, K,N) + A[st], get_time(A, st+1, K,N));
	dp[st] = time;
		//cout<<st<<" "<<time<<endl;

	return dp[st];
}
LL get_time2(int A[], int st, int K, int N) {
	LL time = 0,mx;
	int i,j;
	dp[0] = max((LL)A[0], dp[0]);
	mx = dp[0];
	for (i=1;i<=K;i++) {
		mx = max((LL)A[i], mx);
		dp[i] = mx;
	}
	for (i=K+1;i<N;i++) {
		//cout<<A[i] + dp[i-(K+1)]<<" "<<dp[i-1]<<endl;
		dp[i] = max((LL)A[i] + dp[i-(K+1)], dp[i-1]);
	}
	 // for (i=0;i<N;i++) 
	 // 	cout<<dp[i]<<" ";
	 // cout<<endl;
	return dp[N-1];
}
int main()
{
    int T,N,A[100005],K,i;

    
    scanf("%d", &T);
    while (T--) {
    	cin>>N>>K;
    	for (i=0;i<N;i++)
    		cin>>A[i];
    	memset(dp, 0, sizeof(dp));
    	cout<<get_time2(A,0,K,N)<<endl;
    }
    return 0;
}
