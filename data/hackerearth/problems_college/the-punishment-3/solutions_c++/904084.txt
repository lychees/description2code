#include<iostream>
#include<string>
#include<stdio.h>
using namespace std;

int power(int a, int b)
{
    int prod = 1;
        while(b--)
        {
        prod *= a;
        }
        return prod; 
}

//int to string
string int2str(int num)
{
  string str = "";
  int digit, rem, temp;
  rem = num;
  int ct=0;
  while(rem>0)
  {
  rem=rem/10;
  ct++;
  }
  rem=num;
  while(rem>0)
  {
  temp = power(10,ct-1);
  digit = rem/temp;
  rem-= (digit * temp);
  str += (digit + '0');
  ct--;
  }
return str;
}

int str2int(string str)
{
    int num = 0;
    int len = str.length();
    int digit;
    for(int i = 0; i < len; i++)
    {
    digit = str[i]-'0';
    num = (num*10) + digit;
    }
    return num;
}

string reverse(string a)
{
int len = a.length();
string rev="";
while(len--)
rev += a[len];
return rev;
}
string zeropad(string a, int digits)
{
int diff = digits - a.length();
string rem = "";
while(diff--)
rem+='0';
rem+=a;
return rem;
}
string add(string a, string b)
{
int lena, lenb;
lena = a.length();
lenb = b.length();
if(lena>lenb)
b = zeropad(b,lena);
else
a = zeropad(a,lenb);
int len = a.length();

string arev = reverse(a);
string brev = reverse(b);

int sum, carry,total,dig;
string tot = "";
char chf;
int tpa,tpb;
carry = 0;
for(int i = 0; i<len; i++)
{
tpa = arev[i]-'0';
tpb = brev[i]-'0';

sum = tpa + tpb+carry;
carry = sum/10;
dig = sum%10;
chf = dig + '0';
tot += chf;
}
if(carry!=0)
{
chf = carry+'0';
tot+=chf;
}
tot = reverse(tot);
return tot;        
}

string multDig(string a, int b)
{
int sum, carry,dig,rem;
string ar = reverse(a);
int len = a.length();
carry=sum=0;
string total = "";
for(int i = 0; i<len; i++)
{
dig = ar[i]-'0';
sum = (dig*b)+carry;
carry=sum/10;
rem = sum%10;
total+=(rem+'0');        
}
if(carry!=0)
total+=(carry+'0');

a = reverse(total);
return a;
}
string multiply(string a, string b)
{
string larger, smaller;
int lena = a.length();
int lenb = b.length();
int dig;
if(lena>lenb)
{
larger = a;
smaller = b;
}
else
{
larger = b;
smaller = a;
}

string tot="";
string ans;
smaller = reverse(smaller);
string zeros = "";
for(int i = 0; i<smaller.length(); i++)
{
 dig = smaller[i]-'0';
 ans = multDig(larger, dig);
 ans+=zeros;
 zeros+='0';
 tot = add(tot, ans);        
}
return tot;
}

string multiply9s(int a,int b)
{
int d1,d2,i;
if(a>b)
{
d1=a;
d2=b;
}
else
{
d1=b;
d2=a;
}    
string fin = "";
for(i = 0; i<d2-1; i++)
fin+='9';
fin+='8';
for(i = 0; i<d1-d2; i++)
fin+='9';
for(i=0;i<d2-1;i++)
fin+='0';
fin+='1';
   
   return fin;
}
int main()
{
int T,n,k;
scanf("%d",&T);
string a, b, tot;
while(T--)
{
scanf("%d %d",&n,&k);
a = "";
b = "";

tot = multiply9s(k,n-k);
/*
for(int i = 1; i<=k;i++)
a+='9';
for(int i = k+1;i<=n;i++)
b+='9';


tot = multiply(a,b);*/
cout<<tot<<"\n";
} 

    return 0;
}
