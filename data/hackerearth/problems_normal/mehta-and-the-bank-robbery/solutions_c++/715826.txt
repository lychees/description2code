//Program: b
//Author: gary
//Date: 20/09/2014
#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <algorithm>
using namespace std;
#define SZ(x) ( (int) (x).size() )
#define dbg(x) cerr << #x << " = " << x << endl;
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef long long ll;
typedef pair<int, int> pii;
// const int INF = 1e9;
const int MAX_N = 2000 + 1;

int primes[] = {1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29};

int N, W;
ll dp[2][MAX_N][11];
pair<int, int> items[MAX_N];

void checkmax(ll& a, ll b){ if(a < b) a = b;}

int main(){
  scanf("%d%d", &N, &W);
  for(int i = 0; i < N; i++) scanf("%d%d", &items[i].first, &items[i].second);
  sort(items, items + N);
  for(int i = 1; i <= N; i++){
    int c = items[i - 1].first, w = items[i - 1].second;
    int p = i & 1;
    for(int j = 0; j <= W; j++){
      for(int k = 0; k <= 10; k++){
	dp[p][j][k] = 0;
	checkmax(dp[p][j][k], dp[1 - p][j][k]);
	if(j >= w){
	  checkmax(dp[p][j][k], dp[1 - p][j - w][k] + c);
	  if(k > 0)
	    checkmax(dp[p][j][k], dp[1 - p][j - w][k - 1] + 1LL * c * primes[k]);
	}
      }
    }
  }
  printf("%lld\n", dp[N & 1][W][10]);
  return 0;
}
