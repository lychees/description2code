//Created By Mayur Agarwal :)

#include <iostream>
#include <stdio.h>
#include <cmath>
#include <vector>
#include <string>
#include <cstring>
#include <set>
#include <algorithm>
#include <map>
#include <iterator>
#include <functional>
#include <queue>

#define ll long long
#define ind(a) scanf("%d",&a)
#define in(a) scanf("%lld",&a)
#define inc(a) scanf("%c",&a)
#define ins(a) scanf("%s",a)
#define pr(a) printf("%lld\n",a)
#define debug(x) cout << #x << " = " << x << endl
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define pb push_back
#define ff first
#define ss second
#define SIZE 1000010
const ll mod = 1000000007L;

using namespace std;
typedef pair<ll, ll>pll;
ll ar[SIZE], pre[SIZE];
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	ios_base::sync_with_stdio(0); cin.tie(0);
	ll n, k;
	cin >> n >> k;
	for (int i = 1; i <= n; i++)
	{
		cin >> ar[i];
		pre[i] = (pre[i - 1] + ar[i]) % mod;
	}
	ll ans = 0;
	ll temp = 0;
	for (ll i = 1; i <= k; i++)
	{
		ans = (ans + ((i * i) % mod * ar[i] % mod)) % mod;
		temp = (temp + ((2 * i - 1) * ar[i]) % mod) % mod;
	}
	cout << ans << " ";
	for (ll i = 2; i <= n - k + 1; i++)
	{
		ans = (ans - temp + mod) % mod;
		ans = (ans + ((k * k) % mod * ar[i + k - 1] % mod) % mod) % mod;
		temp = (temp + ((2 * k + 1) * ar[i + k - 1] % mod) % mod) % mod;
		temp = (temp - ar[i - 1] + mod) % mod;
		temp = (temp - (2 * (pre[i + k - 1] - pre[i - 1] + mod) % mod) + mod) % mod;
		cout << ans << " ";
	}
	cout << endl;
	return 0;
}