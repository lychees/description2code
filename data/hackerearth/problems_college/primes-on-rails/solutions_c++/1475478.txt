#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
bool a[1000006];
int generateprimes(int upto)
{
	int primecount=0;
	int i,j;
	for(i=1;i<=upto;i++) a[i]=1;
	a[0]=0;
	a[1]=0;
	for(i=2;i<=upto;i++)
	{
		primecount++;
		j=2*i;
		while(j<=upto) {a[j]=0;j+=i;}
		i++;
		while(i<=upto && a[i]==0) i++;
		i--;
	}
	return primecount;
}
struct train
{
	int start;
	int stop;
}t[100007];
bool comparison(train A,train B)
{
	return (A.start<B.start);
}
int main()
{
	generateprimes(1000000);
	int platform[100005];
	int n,h,m,s,i,j;
	cin>>n;
	for(i=0;i<n;i++)
	{
		scanf("%d %d %d",&h,&m,&s);
		t[i].start=(h*3600+m*60+s);
		if(a[t[i].start])
		{
			t[i].stop=t[i].start+300;
		}
		else if(t[i].start&1) t[i].stop=t[i].start+180;
		else t[i].stop=t[i].start+120;
	}
	sort(t,t+n,comparison);
	/*for(i=0;i<n;i++)
	{
		cout<<t[i].start<<' '<<t[i].stop<<endl;
	}*/
	platform[0]=t[0].stop;
	int maxsize=1,pstart=0,pend=0;
	for(i=1;i<n;i++)
	{
		for(j=pstart;j<=pend;j++) if(platform[j]<=t[i].start) {platform[j]=t[i].stop;break;}
		if(j==(pend+1)) {pend++;platform[pend]=t[i].stop;} 
	}
	cout<<pend+1<<endl;
}
/*
5


8 41 3
16 58 30
21 47 8
11 57 9
20 25 53
*/
