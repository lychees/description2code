#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof((x)))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define x first
#define y second

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;


inline int nxt() {
    int a;
    scanf("%d", &a);
    return a;
}

inline int sum(long long v) {
    int ret = 0;
    while (v) {
        ret += int(v % 10);
        v /= 10;
    }
    return ret;
}

int a[100];
const int N = 100000;
int dp[N];
const int mod = 1000000007;
int n, k;

void read() {
    n = nxt();
    k = nxt();
    for (int i = 0; i < n; ++i) {
        a[i] = nxt();
    }
}

void gen() {
    n = rand() % 5 + 1;
    k = rand() % 10 + 1;
    for (int i = 0; i < n; ++i) {
        a[i] = rand() % 5 + 1;
    }
}

int solve() {
    memset(dp, 0, k * sizeof(int));
    dp[0] = 1;
    for (int i = 0; i < n; ++i) {
        for (int j = k - 1; j >= a[i]; --j) {
            dp[j] += dp[j - a[i]];
            if (dp[j] >= mod) {
                dp[j] -= mod;
            }
        }
    }
    int pw2 = 1;
    for (int i = 0; i < n; ++i) {
        pw2 = pw2 * 2 % mod;
    }
    int ans = pw2;
    long long sum  = 0;
    for (int i = 0; i < n; ++i) {
        sum += a[i];
    }
    if (sum < 2 * k) return 0;
    for (int i = 0; i < k; ++i) {
        ans -= 2 * dp[i];
        while (ans < 0) ans += mod;
    }
    return ans;
}

int solveTest() {
    int ans = 0;
    for (int i = 0; i < (1 << n); ++i) {
        int s[2];
        clr(s);
        for (int j = 0; j < n; ++j) {
            if (i & (1 << j)) {
                s[1] += a[j];
            } else {
                s[0] += a[j];
            }
        }
        if (s[0] >= k && s[1] >= k) {
            ++ans;
        }
    }
    return ans;
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);


    read();
    int ans = solve();
    cout << ans << "\n";
    return 0;
}