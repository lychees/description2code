/*
Author :Akash Kumar
IIITD
*/
#include<bits/stdc++.h>
using namespace std;

long long int mod_pow(long long int a, long long int b,long long int mod)
{
	long long int ans=1;
	while(b)
	{
		int r=b%2;
	
		if(r!=0)
		ans=(ans*a)%mod;
		
		a=(a*a)%mod;
		
		b/=2;
	}	
	return ans;
}

long long gcdf(long long a,long long b)
{
	if(a==0)
	return b;
	return gcdf(b%a,a);	
}

long long min1(long long a,long long b)
{
	return a>b?b:a; 	
}

long long max1(long long a,long long b)
{
	return a<b?b:a; 	
}

long long int fact(long long int n)
{
	long long int ans=n,mod=1000000007;
	for(int i=1;i<=n-1;i++)
	{
		ans=(ans*i)%mod;
	}
	
	return ans;
}

struct node{
int s,e,v;
};

/*bool comp(struct node less,struct node more)
{
	if(less.val=more.val)
	return less.ind<more.ind;
	return less.val<more.val;	
}
*/

int count(long long int a[],long long int m,long long int n )
{
    long long int ar[m+1][n+1];
      
	  for(int i=0;i<=n;i++){
        ar[m][i]=0;
      }
      
      for(int i=0;i<=m;i++){
        ar[i][0]=1;
      }
      
      for(int i=m-1;i>=0;i--){
        for(int j=1;j<=n;j++){
          if(j>=a[i])
            ar[i][j]=ar[i][j-a[i]]+ar[i+1][j];
            else
              ar[i][j]=ar[i+1][j];
            }
    }
    
    return ar[0][n];
}
	 
int main() {
int t;
	cin >> t;

    for(;t>0;t--){
   		string s;
   		cin>>s;
   		
   		stack<int> st;
		int count = 0,i,a,b;
 
		for(i = s.length()-1;i>=0;--i){
			if(s[i] == 'X'){
				st.push(1);
                ++count;
			}
			else if(s[i] == 'A'){
                a = st.top();
				st.pop();
				a += st.top();
				st.pop();
				st.push(a);
			}
			else{
				a = st.top();
				st.pop();
				a = max(a, st.top());
				st.pop();
				st.push(a);
 
			}
		}
		
		vector<int> r(count);
		
		for(int i =0;i<count;i++)
			cin>>r[i];
		
		sort(r.begin(),r.end(),greater<int>());
		
		int ans = 0;
 		for(int i = 0;i<st.top();i++){
			ans+=r[i];
		}
		cout<<ans<<endl;
 
    }
		
	
return 0;
}