#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <set>
#include <queue>
#include <functional>
#include <string>
#include <sstream>
#include <ctime>
#include <bitset>
#include <cstdlib>
#include <stack>
#include <iomanip>

using namespace std;

#define     For(i,a,b)        for (i=a; i<b; i++)
#define     FoR(i,a,b)        for (i=a; i<=b; i++)
#define     Rep(i,a)          for (i=0; i<a; i++)
#define     FIT(it,v)         for (it=(v).begin(); it!=(v).end(); ++it)
#define     ALL(v)            (v).begin(),(v).end()
#define     Set(a,x)          memset((a),(x),sizeof(a))
#define     Sort(x)           sort(ALL(x))
#define     SF                scanf
#define     PF                printf

#define 	EPS  		1e-8
#define 	PI			acos(-1)
#define 	MAXN 		1005
#define 	MOD 		1000000007
#define 	INF 		1000000000
#define 	X 			first
#define 	Y 			second

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> ii;
typedef pair<double, double> dd;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<dd> vdd;

int dp[1200][1200], dx, dy;
int Xs[] = { 0, 1, 1 };
int Ys[] = { 1, 0, 1 };

int go(int x, int y){
	if (x == dx && y == dy) return 1;
	if (~dp[x][y]) return dp[x][y];
	int nx, ny, i;
	ll ans = 0;
	Rep(i, 3){
		nx = x + Xs[i], ny = y + Ys[i];
		if (nx <= dx && ny <= dy)
			ans = (ans + go(nx, ny)) % MOD;
	}

	return dp[x][y] = ans;
}

int main(){
	int t, a, b, c, d;
#ifndef ONLINE_JUDGE
	freopen("c:\\acm_inp\\test.in", "r", stdin);
	//freopen("C:\\acm_inp\\.out", "w", stdout);
#endif

	cin >> t;
	Set(dp, -1);
	dx = 1100, dy = 1100;
	go(1, 1);

	while (t--){
		cin >> a >> b >> c >> d;
		cout << go(1100-(c-a), 1100-(d-b)) << endl;
	}

	return 0;
}


