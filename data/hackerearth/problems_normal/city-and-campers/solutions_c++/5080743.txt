#include <iostream>
#include<climits>
#include<cstring>

using namespace std;
 
#define maxsize 100000
 
int arr[maxsize+1];
int size[maxsize+1];
int freq[maxsize+1];
int tempmax=1;
int tempmin=1;
int k;
 
int root(int a){
	while(a!=arr[a]){
		arr[a]=arr[arr[a]];
		a=arr[a];
	}
	return a;
}
void join(int a,int b){
	int root_a=root(a);
	int root_b=root(b);
	if(size[root_a]<size[root_b]){
		arr[root_a]=arr[root_b];
		size[root_b]+=size[root_a];
		freq[size[root_b]]++;
		if(size[root_b]>tempmax){
			tempmax=size[root_b];
		}
		freq[size[root_a]]--;
		if(size[root_a]==tempmin && freq[size[root_a]]==0){
			
				int i;
				for(i=tempmin;freq[i]!=0;i++);
				tempmin=freq[i];
			
		}
		size[root_a]=-1;
	}
	else{
		arr[root_b]=arr[root_a];
		size[root_a]+=size[root_b];
		if(size[root_a]>tempmax){
			tempmax=size[root_a];
		}
		freq[size[root_b]]--;
		if(size[root_b]==tempmin){
			if(freq[size[root_b]]==0){
				int i;
				for(i=tempmin;freq[i]!=0;i++);
					tempmin=freq[i];
			}
		}
	}
	k--;
}
 
int main()
{
    int n,q;
 	cin>>n>>q;
 	memset(freq,0,sizeof(freq));
 	freq[1]=n;
    k=n;
    
    for(int i=1;i<=n;i++)
    {
    	size[i]=1;
    	arr[i]=i;
    }	
    while(q--)
    {
 
    	int a,b;
    	cin>>a>>b;
 		if(root(a)!=root(b))
 		{
 			join(a,b);
 		}
 		if(k==1)
 		{
 				cout<<"0"<<endl;
 				continue;
 		}
 		cout<<tempmax-tempmin<<endl;
    }
    return 0;
}