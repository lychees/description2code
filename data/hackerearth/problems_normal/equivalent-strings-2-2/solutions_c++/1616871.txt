#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v; ll w; };

ll MOD = 1000000009;
ll _MOD = 1000000009;
double EPS = 1e-10;
int INF = INT_MAX / 2;

vector<vector<ll> > f(string& A) {
	int n = A.length();
	vector<vector<ll> > a(n + 1, vector<ll>(26));
	ll x = 1;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 26; j++)
			a[i + 1][j] = a[i][j];
		int j = A[i] - 'a';
		a[i + 1][j] = (a[i + 1][j] + x) % MOD;
		x = x * 2 % MOD;
	}
	return a;
}

vector<ll> g(vector<ll>& x, vector<vector<ll> >& a, int i, int k) {
	int N = a.size() - 1;
	vector<ll> v(26);
	for (int j = 0; j < 26; j++)
		v[j] = (a[i + k][j] - a[i][j] + MOD) % MOD * x[N - i] % MOD;
	sort(v.begin(), v.end());
	return v;
}

int main() {
	vector<ll> x(100001);
	x[0] = 1;
	for (int i = 1; i <= 100000; i++)
		x[i] = x[i - 1] * 2 % MOD;
	int T; cin >> T;
	while (T--) {
		string A, B; cin >> A >> B;
		vector<vector<ll> > a = f(A), b = f(B);
		int Q; cin >> Q;
		while (Q--) {
			int i, j, k; scanf("%d%d%d", &i, &j, &k);
			i--; j--;
			printf(g(x, a, i, k) == g(x, b, j, k) ? "yes\n" : "no\n");
		}
	}
}