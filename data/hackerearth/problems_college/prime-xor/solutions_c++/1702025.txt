// codechef MAY CHALLENGE MATCHSTICKS.....
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <deque>
#include <vector>
#include <string>
#include <bitset>
#include <complex>
#include <climits>
#define MAX 1000005

typedef long long ll;
typedef unsigned long long ull;
using namespace std;

int sieve[MAX],primes[MAX],p[MAX];
/*int read()
{
    register int ch = getchar_unlocked();
    int a = 0;
    for(;(ch<48 || ch>57);ch = getchar_unlocked());
    for(;ch>47 && ch<58;ch = getchar_unlocked())
    {
        a = (a<<1) + (a<<3) + ch - 48;
    }
    return a;
}
inline void fastwrite(int a){
register char c;
char snum[20];
int i=0;
do{
snum[i++]=a%10+48;
a=a/10;
}while(a!=0);
i=i-1;
while(i>=0)
putchar_unlocked(snum[i--]);
putchar_unlocked('\n');
}*/
int main()
{
    int i,j,test,m,n,k=0,sqt,factor;
    memset(sieve,0,sizeof(sieve));
    sieve[0]=sieve[1]=1;
    for(i=2;i<MAX;i++)
    {
        if(sieve[i]==0)
        {
            p[k++]=i;
            for(j=2;j*i<MAX;j++)
                sieve[i*j]=1;
        }
    }
    scanf("%d",&test);
    ll ans,even,odd;
    //test=read();
    while(test--)
    {
        ans=even=odd=0;
        scanf("%d %d",&m,&n);
        //m=read();n=read();
        if(n<=MAX)
        {
            for(i=m;i<=n;i++)
            {
                if(sieve[i]==0){
                    if(i%2==0)
                        even++;
                    else
                        odd++;
                }
            }
            ans=even*odd;
            printf("%lld\n",ans);
        }
        else
        {
            sqt=(int)pow(n,0.5);
            sqt++;
            memset(primes,0,sizeof(primes));
            for(i=0;i<k && p[i]<sqt;i++)
            {
                factor=m/p[i];
                if(m%p[i]!=0)
                    factor++;
                for(j=factor;j*p[i]<=n;j++)
                    primes[(p[i]*j)-m]=1;
            }
            for(i=m;i<=n;i++)
            {
                if(primes[i-m]==0){
                    if(i%2==0)
                        even++;
                    else
                        odd++;
                }
            }
            ans=even*odd;
            printf("%lld\n",ans);
            //cout<<"sqt= "<<sqt<<endl;
        }
    }
    return 0;
}
