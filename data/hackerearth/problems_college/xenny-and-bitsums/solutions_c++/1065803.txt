#include <bits/stdc++.h>
using namespace std;
long long int getLeftmostBit (long long int n)
{
   int m = 0;
   while (n  > 1)
   {
      n = n >> 1;
      m++;
   }
   return m;
}
long long int getNextLeftmostBit (long long int n,long long int m)
{
   long long int temp = 1 << m;
   while (n  < temp)
   {
      temp = temp >> 1;
      m--;
   }
   return m;
}
 
long long int _countSetBits(long long int n,long long int m);
 
long long int countSetBits(long long int n)
{
   int m = getLeftmostBit (n);
 
   return _countSetBits (n, m);
}
 
long long int _countSetBits(long long int n,long long int m)
{
    if (n == 0)
       return 0;
    m = getNextLeftmostBit(n, m);
    if (n == ((long long int)1<<(m+1))-1)
        return (long long int)(m+1)*(1<<m);
 
    n = n - (1<<m);
    return (n+1) + countSetBits(n) + m*(1<<(m-1));
}
int main()
{
	long long int t,a,b;
	cin>>t;
	while(t--) {
		cin>>a>>b;
		cout<<countSetBits(b)-countSetBits(a-1)<<endl;
	}
    return 0;
}
