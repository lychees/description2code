#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const int N=int(sqrt(1e9))+3;
vector <int> pri;
int h[N]={0},test,x,mod,n;
int power(ll x,int y,int mod){
	ll ans=1;
	for(;y>0;y>>=1){
		if (y&1) ans=ans*x%mod;
		x=x*x%mod;
	}
	return ans;
}
int muy(int x){
	int ans=x;
	for(auto i:pri){
        if (i*i>x) break;
        if (x%i==0){
            ans=ans/i*(i-1);
            while (x%i==0) x/=i;
            //printf("%d %d %d\n",x,i,ans);
        }
	}
	if (x>1) ans=ans/x*(x-1);
	return ans;
}
int main()
{
	for(int i=2;i<N;i++) if (!h[i]){
		pri.push_back(i);
		for(int j=i+i;j<N;j+=i) h[j]=1;
	}
    scanf("%d",&test);
    while (test--){
    	scanf("%d%d%d",&x,&mod,&n);
    	if (__gcd(x,mod)!=1){
    		printf("-1\n");
    		continue;
    	}
    	int y=power(x,muy(mod)-1,mod);
    	ll ans=1LL*(n/2)*(x+y)+((n%2)?x:0);
    	printf("%lld\n",ans);
    }
}
