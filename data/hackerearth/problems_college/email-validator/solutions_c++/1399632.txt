//fast i/o is taken from codechef posts
#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<cstring>
#include<utility>
#include<climits>
#include<queue>
#include<bitset>
#include<set>
#include<sstream>
#include<utility>
#include <iomanip> 
 
using namespace std;
#define gc getchar_unlocked
 
#define mp make_pair
#define srt sort
 
inline long long int scanlli()
{
 long long int n=0,c=gc();
while(c<'0'||c>'9')
c=gc();
while(c<='9'&&c>='0'){
n=n*10+c-'0';
c=gc();}
return n;
}
 
int main()
{

long long int i,j,arr[100005],k,sum=0,count=0,n,t,pos1,pos2,dummy,flag1,flag2,flag3,len;
char a[100005],temp;
unsigned long long int sum1;
t=scanlli();
while(t--)
{
	count=0;
	pos1=-1;pos2=-1;
	scanf("%s",a);
	len=strlen(a);
	for(i=0;i<len;i++)
	{
		if(a[i]=='@')
		{
			pos1=i;
		}
	}
	for(i=0;i<pos1;i++)
	{
		dummy=(int)a[i];
		if((dummy<=90 && dummy>=65 ) || ( dummy>=97 && dummy<=122 )|| (dummy>=48 && dummy<=57)  || dummy == 95)
		{
			flag1=1;
		}
		else
		{
			flag1=0;
			break;
		}
	}
	for(i=pos1+1;i<len;i++)
	{
		if(a[i]=='.')
		{
			pos2=i;
		}
	}
	for(i=pos1+1;i<pos2;i++)
	{
		dummy=(int)a[i];
		
		if(dummy==45 || (dummy<=90 && dummy>=65) || (dummy>=97 && dummy<=122) || (dummy>=48 && dummy<=57))
		{
			flag2=1;
		}
		else 
		{
			flag2=0;
			break;
		}
		
	    if( (dummy<=90 && dummy>=65) || (dummy>=97 && dummy<=122 ))
		{
			count++;
		}
		
	}
	for(i=pos2+1;i<len;i++)
	{
		dummy=(int)a[i];
		if( (dummy>=97 && dummy<=122) )
		{
			flag3=1;
		}
		else 
		{
			flag3=0;
			break;
		}
		
	}
//	printf("%lld \n",count);
	//printf("%lld %lld %lld %lld %lld\n",pos1,flag1,pos2,len-pos2,flag2);
	if(pos1>=1 && pos1<=16 && flag1==1 && flag2==1 && pos2-pos1<=17  && len-pos2>=2 && pos2-pos1>=1&&flag3==1 &&len-pos2<=11 && count>=1&& pos1!=-1 && pos2!=-1)
	{
		printf("YES\n");
	}
	else
	{
		printf("NO\n");
	}
	

}





return 0;
}
