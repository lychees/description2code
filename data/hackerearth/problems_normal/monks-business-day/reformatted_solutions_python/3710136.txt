INF = -10**9


def blmf(G, n, m):
    distance = [INF]*(n+1)
    distance[1] = 0
    cycle = False
    for k in xrange(n-1):
        for i in xrange(1, n+1):
            for j in G[i]:
                if distance[j] < distance[i]+G[i][j]:
                    # print i,j,G[i]
                    distance[j] = distance[i]+G[i][j]
                    # print distance
    # print distance
    for i in xrange(1, n+1):
        for j in G[i]:
            if distance[j] < distance[i]+G[i][j]:
                # distance[j[0]]=distance[i]+j[1]
                distance[j] = distance[i]+G[i][j]
                if distance[j] > 0:
                    cycle = True
                # print distance
                    return cycle
    # print distance

    return cycle


t = input()
while t != 0:
    n, m = map(int, raw_input().split())
    G = {i: {} for i in xrange(1, n+1)}
    for i in xrange(m):
        x, y, z = map(int, raw_input().split())
        if y not in G[x]:
            G[x][y] = z
        else:
            G[x][y] = max(G[x][y], z)
        # G[y].append((x, z))
    if blmf(G, n, m):
        print "Yes"
    else:
        print "No"
    t -= 1
