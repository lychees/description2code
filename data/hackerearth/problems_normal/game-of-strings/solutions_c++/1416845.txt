#include<iostream>
#include<cstring>
#include<cstdlib>
#include <bits/stdc++.h>
using namespace std;
 
/* Returns length of LCS for X[0..m-1], Y[0..n-1] */
int L[5001][5001];
void lcs( char *X, char *Y, int m, int n )
{
 
   /* Following steps build L[m+1][n+1] in bottom up fashion. Note
      that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */
   for (int i=0; i<=m; i++)
   {
     for (int j=0; j<=n; j++)
     {
       if (i == 0 || j == 0)
         L[i][j] = 0;
       else if ((X[i-1] == Y[j-1])&&!(X[i-1]=='a'||X[i-1]=='e'||X[i-1]=='i'||X[i-1]=='o'||X[i-1]=='u'||X[i-1]=='A'||X[i-1]=='E'||X[i-1]=='I'||X[i-1]=='O'||X[i-1]=='U'))
         L[i][j] = L[i-1][j-1] + 1;
       else
         L[i][j] = max(L[i-1][j], L[i][j-1]);
     }
   }
 	cout<<L[m][n];
}
 
/* Driver program to test above function */
int main()
{
  char X[5000],Y[5000];
  scanf("%s%s",X,Y);
  int m = strlen(X);
  int n = strlen(Y);
  lcs(X, Y, m, n);
  return 0;
}