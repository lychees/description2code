//#include "stdafx.h"
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
//#include<cmath>
using namespace std;

bool isPrime(long long x) {
	if (x <= 1)
		return false;
	if (x == 2)
		return true;
	if (x % 2 == 0)
		return false;
	long long t = 3;
	long long lim = sqrt(x) + 1ll;
	while (t <= lim) {
		if (x%t == 0)
			return false;
		t += 2;
	}
	return true;
}

int main() {
	vector<int> nonFibo;
	int lo;
	int hi;
	lo = hi = 1;
	int t = lo;
	while (true) {
		hi = hi + lo;
		lo = hi - lo;
		if(hi>1000001)
		break;
		int lim = hi - lo - 1;
		int count = 1;
		for (int i = 0; i<lim; i++) {
			nonFibo.push_back(lo + count);
			count++;
		}
	}
	
	int tc;
	cin >> tc;
	while (tc--) {
		int n;
		cin >> n;
		long long sum = 0;
		vector<int>::iterator it = lower_bound(nonFibo.begin(), nonFibo.end(), n);
		for (vector<int>::iterator itt = nonFibo.begin(); itt != it; itt++) {
			sum += *itt;
		}
		if (isPrime(sum)) {
			cout << "Tic\n";
		}
		else if (sum % 2) {
			cout << "Toe\n";
		}
		else {
			cout << "Tac\n";
		}
	}//
}