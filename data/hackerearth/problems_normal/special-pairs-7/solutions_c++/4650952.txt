#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <sstream>
#include <set>
#include <iomanip>
#include <list>
#include <stack>
#include <queue>
#include <bitset>
#include <numeric>
#include <functional>

#include <cstdio>
#include <cmath>
#include <climits>
#include <cstring>
#include <cctype>
#include <cstdlib>



using namespace std;

#define tr(x) cout << x << endl;
#define tr2(x, y) cout << x << " " << y << endl;
#define tr3(x, y, z) cout << x << " " << y << " " << z << endl;
#define tr4(w, x, y, z) cout << w << " " << x << " " << y << " " << z << endl;
#define tr6(a, b, w, x, y, z) cout << a << " " << b << " " << w << " " << x << " " << y << " " << z << endl;

#define ll long long
#define fastIO  ios::sync_with_stdio(false); cin.tie(0);
inline int in() { int x; scanf("%d", &x); return x; }
inline long long inL() { long long x; scanf("%lld", &x); return x; }

const int N = 1e6 + 9;
int a[N];
int cnt[N*10];
int dp[1234567][22];

int main(){
#ifdef __APPLE__
    const clock_t begin_time = clock();
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
#endif
    fastIO
    
    int t = in();
    
    while (t--) {
        
        memset(dp, 0, sizeof(dp));
        memset(cnt, 0, sizeof(cnt));
        
        int n = in();
        
        for (int i = 0; i < n; i++) {
            a[i] = in();
            cnt[a[i]]++;
        }
        
        
        for (ll msk = 0; msk < (1ll<<20); msk++) {

            dp[msk][0] = cnt[msk];
            
            if (msk&1) dp[msk][0] += cnt[msk^1];
            
            for (int i = 1; i <= 20; i++) {
                dp[msk][i] = dp[msk][i - 1];
                
                if (msk & (1ll<<i)) {
                    dp[msk][i] += dp[msk^(1ll<<i)][i - 1];
                }
            }
            
        }
        
        ll ans = 0;
        
        for (int i = 0; i < n; i++) {
            ans += dp[((1ll<<20) - 1) ^ a[i]][20];
        }
        
        cout << ans << endl;
    
        
        
        
    }
    
    
    
#ifdef __APPLE__
    cout << endl;
    cout << "Time : ";
    cout << float( clock () - begin_time ) / CLOCKS_PER_SEC << endl;
    
#endif
    return 0;
}