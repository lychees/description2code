
#include <iostream>
#include <vector>
#include <cmath>
#include <string>
#include <string.h>
#include <stack>
#include <algorithm>
#include <malloc.h>
#include <map>
#include <iomanip>
#include <queue>
#include <list>

#define FOR(i,j) for(int i=0;i<j;i++)
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%ld",&n)
#define sll(n) scanf("%lld",&n)
#define sf(n) scanf("%f",&n)
#define p(n) printf("%d\n",n)
#define pl(n) printf("%ld\n",n)
#define pll(n) printf("%lld\n",n)
#define pn printf("")
#define MOD 1000000007
#define VI vector<int>

using namespace std;

list<int> adj[100010];
int visited[100010];
//int totalComponents[100010];
int tc = 0;

void DFS(int s, int selected)
{
	visited[s] = 1;
	tc++;

	if(adj[s].empty())
		return;	
	//totalComponents[selected]++;
	while(!adj[s].empty())
	{
		int z = adj[s].front();
		adj[s].pop_front();
		if(!visited[z])
			DFS(z, selected);		
	}
}


int main()
{
	int t;
	//s(t);
	//while(t--)
	//{
		int n, m, u, v;
		s(n);
		s(m);

		for(int i=0;i<m;i++)
		{
			s(u);
			s(v);
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		int components = 0;
		long long int p = 1;
		
		for(int i=0;i<n;i++)
		{
			tc = 0;
			if(!visited[i])
			{
				components++;
				DFS(i, i);
				for(int i=1;i<=tc;i++)
				{
					p = p*i;
					p = p%MOD;
				}
			}
		}

		printf("%lld\n",p);
	
		return 0;
}
