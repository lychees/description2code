#include <bits/stdc++.h>
using namespace std;
vector<int>groups;
long long dp[205][205];

long long solve(int n,int m){
	if(n == 0)return 1;

	if(n < 0)return 0;


	if(dp[n][m] != -1)return dp[n][m];


	if(m <= 0 && n >= 1)return 0;



	return dp[n][m] = (solve(n,m-1) + solve(n - groups[m - 1],m));
}
int main()
{
     int t;
   cin >> t;
   int n,k;
   while(t--){
   	cin >> n >> k;
   	memset(dp,-1,sizeof(dp));
   	for(int i = k;i <= n;i++){
   		groups.push_back(i);
   	}
   cout << solve(n,n - k +1) << endl;
   	groups.clear();
   }
    return 0;
}
