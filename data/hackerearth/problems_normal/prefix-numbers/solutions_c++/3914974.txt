#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<vector>
#include<string>
#include<cstring>
#include<unordered_map>
#include<cassert>
#include<cmath>

//code by cl3488

#define dri(X) int (X); scanf("%d", &X)
#define drii(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define driii(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define pb push_back
#define mp make_pair
#define rep(i, s, t) for ( int i=(s) ; i <(t) ; i++)
#define fill(x, v) memset (x, v, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define why(x) cerr << #x << ": " << (x) << endl;
#define whisp(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define exclam cerr << "!!\n"
typedef long long ll;
using namespace std;
typedef pair<int, int> pii;
const ll inf = (ll)1e9 + 70;
const ll mod = (1LL << 32);
const int maxn = 252;

ll a[maxn][maxn];

void init(){
  rep(i, 0, maxn){
    rep(d, 1, 10){
      int g = 10 * i + d;
      if(g % d == 0){
	a[i][g % maxn]++;
      }
    }
  }
}

ll ans[maxn][maxn];
ll temp[maxn][maxn];

void pw(ll n){
  if(n == 0){
    rep(i,0,maxn){
      rep(j,0,maxn){
	ans[i][j] = 0;
	if(i==j)ans[i][j] = 1;
      }
    }
    return;
  }
  pw(n /2);
  fill(temp, 0);
  rep(i,0,maxn)rep(j,0,maxn)rep(k,0,maxn){temp[i][j] += ans[i][k] * ans[k][j]; temp[i][j] %= mod;}
  rep(i,0,maxn)rep(j,0,maxn) ans[i][j] = temp[i][j];
  if(n % 2 == 1){
    fill(temp, 0);
    rep(i,0,maxn)rep(j,0,maxn)rep(k,0,maxn){temp[i][j] += ans[i][k] * a[k][j]; temp[i][j] %= mod;}
    rep(i,0,maxn)rep(j,0,maxn)ans[i][j] = temp[i][j];
  }
  return;
}

int main(){
  init();
	if (fopen("i.txt", "r")) freopen("i.txt", "r", stdin);
	ll n; cin >> n;
	pw(n);
	ll e = 0;
	rep(i,0,maxn){
	  e += ans[0][i];
	  e %= mod;
	}
	cout << (e+mod)%mod << "\n";
	return 0;
}
