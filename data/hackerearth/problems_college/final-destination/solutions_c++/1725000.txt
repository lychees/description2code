#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;

int visited [1000001] = {0};


int main ()
{
	int t, i, a, b, ml, dv, sd, sb, count, a1, flag;
	scanf ("%d", &t);
	
	while (t--) {
		flag = 0;
		for (i = 1; i < 1000001; i++) {
			visited [i] = 0;
		}
		scanf ("%d%d%d%d%d%d", &a, &b, &ml, &dv, &sd, &sb);
		queue <pair <int, int> > q;
		pair <int, int> q1;
		q.push (make_pair (a, 0));
		count = 100001;
		flag = 1;
		while (!q.empty ()) {
			//printf ("sdjcsnc ");
			q1 = q.front ();
			q.pop ();
			if (q1.first == b) {
				flag = 0;
			//	printf ("%d ", q1.second);
				count = min (count, q1.second);
				break;
			}
			if (visited [q1.first]) {
				continue;
			}
			visited [q1.first] = 1;
			a1 = q1.first;
			if (a1 * ml <= 1000000 && ml > 1 && a1 * ml >= 2) {
				q.push (make_pair (a1 * ml, q1.second + 1));
			}
			if (a1 + sd <= 1000000 && sd > 0 && a1 + sd >= 2) {
				q.push (make_pair (a1 + sd, q1.second + 1));
			}
			if (a1 / dv >= 2 && dv > 1 && a1 / dv <= 1000000) {
				q.push (make_pair (a1 / dv, q1.second + 1));
			}
			if (a1 - sb >= 2 && sb > 0 && a1 - sb <= 1000000) {
				q.push (make_pair (a1 - sb, q1.second + 1));
			}
		}
		if (flag == 1) {
			printf ("-1\n");
			continue;
		}
		//q.clear ();
		printf ("%d\n", count);
	}
	
	return 0;
}