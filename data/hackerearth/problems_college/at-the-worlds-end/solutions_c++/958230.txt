#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>

#include<iomanip>
#include<cstring>
#include<sstream>

#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;

#define PB push_back
#define MP make_pair
#define FF first
#define SS second
int x[500][500];
int dp[500][500];
int N,M;
bool fs(int s)
	{
	dp[0][0]=s;
	int i,j;
	for(i=1;i<N;i++)
		{
		if(dp[i-1][0]<=0)
			dp[i][0]=0;
		else
			dp[i][0]=dp[i-1][0]+x[i][0];
		}
	for(j=1;j<M;j++)
		{
		if(dp[0][j-1]<=0)
			dp[0][j]=0;
		else
			dp[0][j]=dp[0][j-1]+x[0][j];
		}
	for(i=1;i<N;i++)
		{
		for(j=1;j<M;j++)
			{
			if(dp[i-1][j]<=0 && dp[i][j-1]<=0)
				dp[i][j]=0;
			else
				dp[i][j]=max(dp[i-1][j],dp[i][j-1])+x[i][j];
			}
		}
/*	for(i=0;i<N;i++)
		{
		for(j=0;j<M;j++)
			{
			printf("%d %d",dp[i][j],x[i][j]);
			}
		printf("\n");
		}
*/
	return dp[N-1][M-1]>0;
	}
int bs(int low,int high)
	{
	int mid;
	while(low+1<high)
		{
		mid=(low+high)/2;
		if(fs(mid)==true)
			{
			high=mid;
			}
		else{
			low=mid+1;
			}
		}
	int i;
	for(i=min(low,high);i<=max(low,high);i++)
		if(fs(i)==true)
			break;
//	if(fs(i)==true)
	return i;
//	else
//	return -1;
	}
int main()
{
int T;
int i,j,k;
scanf("%d",&T);
while(T--)
	{
	scanf("%d %d",&N,&M);
	for(i=0;i<N;i++)
		{
		for(j=0;j<M;j++)
			scanf("%d",&x[i][j]);
		}
	//fs(1);
	printf("%d\n",bs(1,1000*2000));
	}
return 0;
}