#include <iostream>
#include <vector>

using namespace std;

vector<int> val ; 

int root (int node)
{
	while(node != val[node])
	{
		int temp = val[node] ; 
		val[node] = val[val[node]] ; 
		node = temp ; 
	}
	return node ;
}


int unio (int a , int b)
{
	int root_a = root(a) , root_b = root(b) ; 
	if(root_a != root_b)
	{
		val[root_a] = root_b ;
	}
}

void set(int node)
{
	int root_a = root(node) ; 
	val[root_a] = node ; 
	val[node] = node ;
}

int main()
{
    int n , q ; 
    scanf("%d%d",&n,&q) ;
    
    for(int i = 0 ; i <= n ; i++)
    {
    	val.push_back(i) ; 
    }
    
    while(q--)
    {
    	int type ;
    	scanf("%d",&type) ; 
    	
    	switch(type)
    	{
    		int temp, a , b;
    		case 1 :
    			 
    			scanf("%d%d",&a,&b) ;
    			unio(a,b) ;
    			break ; 
    		case 2 :
    			
    			scanf("%d",&temp) ;
    			set(temp) ;
    			break ; 
    		case 3 :
    			
    			scanf("%d",&temp) ;
    			printf("%d\n",root(temp)) ; 
    			break ;
    	}
    	
    }
    
    return 0;
}
