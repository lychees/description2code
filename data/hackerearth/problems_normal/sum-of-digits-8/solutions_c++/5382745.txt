#include<bits/stdc++.h>
using namespace std;
long long A,B,S;
long long mod_pow[16];
long long memo[16][136],mini_res=-1;

long long rec(long long prefix,int digits,int sum)
{
   	if(sum<0) 
   	return 0;
   
   	long long mini=prefix;
   	long long maxi=prefix+ mod_pow[digits]-1;
   	if(mini>B || maxi<A) 
   	return 0;
   
   	if(digits==0)
   	{
      	if(sum>0) 
      	return 0;      
      	if(mini_res==-1 )
      	mini_res=prefix;
      	return 1;
   	}
   	
   	bool flg=(mini>=A && maxi<=B);
   	
   	if(flg && memo[digits][sum]!=-1)
   	return memo[digits][sum];
   	
   	long long ret=0;
  	for(int dig=0;dig<10;dig++) 
    {
    	long long temp=prefix+(dig* mod_pow[digits-1]);
    	ret+=rec(temp,digits-1,sum-dig);   
    }
    if(flg)
    memo[digits][sum]=ret;
    return ret;
}
int main() 
{
   	mod_pow[0]=1;
   	for(int i=1;i<=15;i++)
   	mod_pow[i]=(mod_pow[i-1]*10);
   
	cin>>A>>B>>S;
	memset(memo,-1,sizeof(memo));
	cout<<rec(0,15,S)<<endl;
	cout<<mini_res<<endl;
}