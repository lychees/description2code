#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>

using namespace std;
const int N=100045;
int n,m,q;
int a,b;
int p;
int num[N],low[N];
int cnt;
bool isb[N];
map<pair<int,int >,int > mp;
vector<int> e[N];
bool vis[N];
void dfs(int u,int p){
vis[u]=1;
num[u]=low[u]=cnt++;
for(int i=0;i<e[u].size();i++){
        int v=e[u][i];
if(!vis[v]){
    dfs(v,u);
    if(num[u]<low[v]){
        int idx=mp[make_pair(min(u,v),max(u,v))];
        isb[idx]=1;
    }
    low[u]=min(low[u],low[v]);


}else{
if(v!=p){
    // back edge
    low[u]=min(low[u],num[v]);
}

}

}




}

int main(){
//freopen("in.txt","r",stdin);
//freopen("out.txt","w",stdout);
scanf("%d %d",&n,&m);
for(int i=0;i<m;i++){
    scanf("%d %d",&a,&b);
    e[a].push_back(b);
    e[b].push_back(a);
    mp[make_pair(min(a,b),max(a,b))]=i;
}
for(int i=1;i<=n;i++){
    if(!vis[i]){
        dfs(i,i);

    }

}

scanf("%d",&q);
while(q--){
scanf("%d",&p);
if(isb[--p]){puts("Unhappy");}else{
    puts("Happy");

}

}



return 0;}
