#include <iostream>
#include <vector>
#include <string.h>
using namespace std;
vector <int>g[100005];
int visit[100005];
char gender[100005];
char color[100005];
int n,m,u,v;
int flag=1;
void dfs(int node,char cur_col);
int main()
{
    cin>>n>>m;
    int i,j,k;
    memset(gender,0,sizeof(gender));
    memset(visit,0,sizeof(visit));
    memset(color,0,sizeof(color));
    for(i=1;i<=n;i++)
    	cin>>gender[i];
    for(j=1;j<=m;j++)
    {
    	cin>>u>>v;
    	g[u].push_back(v);
    	g[v].push_back(u);
    }
    flag=1;
    dfs(1,'P');
    int ans1=0,ans2=0;
    if(flag)
    {
    	for(i=1;i<=n;i++)
    	{
    		if(gender[i]=='B' && color[i]=='P')	ans1++;
    		else if(gender[i]=='G' && color[i]=='B')	ans1++;
    	}
    	memset(visit,0,sizeof(visit));
    	memset(color,0,sizeof(color));
    	dfs(1,'B');
    	for(i=1;i<=n;i++)
    	{
    		if(gender[i]=='B' && color[i]=='P')	ans2++;
    		else if(gender[i]=='G' && color[i]=='B')	ans2++;
    	}
    	printf("%d\n",min(ans1,ans2));
    }
    else
    	printf("Not possible\n");
	return 0;
}

void dfs(int node,char cur_col)
{
	char nxt_col;
	int i,j,v;
	if(visit[node]==1)	return;
	color[node]=cur_col;
	visit[node]=1;
	for(i=0;i<g[node].size();i++)
	{
		v=g[node][i];
		if(v==node) continue;
		if(visit[v]==1)
		{
			if(cur_col==color[v])
			{
				flag=0;
				return;
			}
		}
		else
		{
			if(cur_col=='B')
				nxt_col='P';
			if(cur_col=='P')
				nxt_col='B';
			color[v]=nxt_col;
			dfs(v,nxt_col);
		}
	}
}