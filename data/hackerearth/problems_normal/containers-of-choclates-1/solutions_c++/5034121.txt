/*  tommy_trash   */

#include<bits/stdc++.h>
using namespace std;

#define repi(a,b,c) for(int i=a; i<b; i+=c)
#define ll long long
vector<vector<int> > v;
int t,T,n,arr[200005],visited[200005],level[200005];
ll ans=0,ans1,ans2;
   queue<int> q;

int bfs(int s)
{
    q.push(s);
    visited[s]=true;
    level[s]=0;
    int top;
    ans1=1;ans2=0;
    while(!q.empty())
    {
        top=q.front();
        q.pop();
        for(vector<int>::iterator it=v[top].begin(); it!=v[top].end(); it++)
        {
            if(visited[*it]==false)
            {
                visited[*it]=true;
                level[*it]=level[top]+1;
                if(level[*it]%2==0) ans1++;
                else ans2++;
                q.push(*it);
            }
        }
    }

    return max(ans1,ans2);
}


int main()
{
    cin>>T;
    while(++t<=T)
    {
        cin>>n;
        v.clear();
        v.resize(200005);
        memset(visited, 0, 200005);
        memset(level,-1,200005);
        ans=0;

        repi(0,2*n,2)
        {
            cin>>arr[i]>>arr[i+1];
            v[arr[i]].push_back(arr[i+1]);
            v[arr[i+1]].push_back(arr[i]);
        }

        repi(0,2*n,1)
        {
            if(visited[arr[i]]==false)
            ans+=bfs(arr[i]);
        }

        cout<<"Case "<<t<<": "<<ans<<endl;
    }
    return 0;
}
