#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
using namespace std;
int main()
{int n,m,a,b;
 cin>>n>>m>>a>>b;
 vector<int> V[n+1];
 bool G[1001][1001];
 for(int i=1;i<=n;i++)
 	{for(int j=1;j<=n;j++)
 		G[i][j]=1;
 	 }		
 
 int x,y;
 for(int i=1;i<=m;i++)
 	{cin>>x>>y;
 	 G[x][y]=0;
 	 G[y][x]=0;
 	}
 /*for(int i=1;i<=n;i++)
 	{for(int j=1;j<=n;j++)
 		cout<<G[i][j];
 	 cout<<endl;}*/		
 for(int i=1;i<=n;i++)
 	{
 	 for(int j=i;j<=n;j++)
 	 	{
 	 	if(G[i][j]==1&& i!=j)
 	 		{V[i].push_back(j);
 	 		 V[j].push_back(i);
 	 		// cout<<i<<j<<endl;
 	 		}
 	 	}
 	}
 int d[n+1];
 bool disc[n+1];
 for(int i=1;i<=n;i++)
 	{disc[i]=0;
 	 d[i]=-1;}
 queue<int>Q;
 Q.push(a);
 d[a]=0;
 disc[a]=1;
 while(!Q.empty())
 	{int x=Q.front();
 	 Q.pop();
 	 for(int i=0;i<V[x].size();i++)
 	 	{
 	 	if(!disc[V[x][i]])
 	 		{
 	 		 disc[V[x][i]]=1;
 	 		 Q.push(V[x][i]);
 	 		 d[V[x][i]]=d[x]+1;
 	 		}
 	 	
 	 	}
 	}
 /*for(int i=1;i<=n;i++)
 	cout<<d[i]<<endl;*/	
 cout<<d[b]<<endl;
 return 0;			
}