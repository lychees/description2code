#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cstring>
#include <fstream>
#include <ctime>
#define LL long long
#define ULL unsigned long long
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FO(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define FOD(i,a,b) for(int i=a;i>b;i--)
#define FORV(i,a) for(typeof(a.begin()) i = a.begin(); i != a.end(); i++)
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define debug cout << "YES" << endl

using namespace std;

typedef pair<LL,LL>II;
typedef pair<int,II>PII;
template<class T> T gcd(T a, T b) {T r; while(b!=0) {r=a%b;a=b;b=r;} return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }

const double PI = 2*acos(0.0);
const double eps = 1e-9;
const int infi = 1e9;
const LL Linfi = (LL) 1e18;
const LL MOD = 1000000007;
const int c1 = 11;
const int c2 = 13;
#define maxn 100009

int n;
int a[maxn], p[maxn];

int sang(int n){
    memset(p,0,sizeof(p));
    FOR(i,2,sqrt(n)){
        if(p[i] == 0){
            for(int j = i*i; j <= n; j += i)
                p[j] = i;
        }
    }
    FOR(i,1,n) if(p[i] == 0) p[i] = i;
}

int phantich(int n){
    int ans = 0;
    while(n != 1){
        int tmp = p[n];
        n /= tmp;
        ans++;
    }
    return ans;
}

void solve(){
    sang(100005);
    FOR(i,1,n){
        if(a[i] == 1) a[i] = 0;
        else a[i] = phantich(a[i]);
    }
    int ans = 0;
    FOR(i,1,n) ans ^= a[i];
    //cout << ans << endl;
    if(ans > 0) cout << "ALICE" << endl;
    else cout << "BOB" << endl;
}

int main() {
    ios::sync_with_stdio(false);
    #ifndef ONLINE_JUDGE
    //freopen("test.in", "r", stdin);
    //freopen("test.out", "w", stdout);
    #endif
    cin >> n;
    FOR(i,1,n) cin >> a[i];

    solve();


    return 0;
}
