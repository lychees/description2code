#include<bits/stdc++.h>
using namespace std;
std::vector<int> adj[100001];
static int c[100001],r[100001],dp[100001][3];
int dfs(int cur,int pr,int inv){
	if(dp[cur][inv+1]!=-1)
	   return dp[cur][inv+1];
	int ans3 = 1,ans4 = 1,ans1=0,ans2=2;
	//if((c[cur]!=r[cur]&&inv==1)||(inv==-1&&c[cur]==r[cur]))
	//	ans=1;
	//else
	// 	ans1 = 0,ans2 = 2;
    for(int i=0;i<adj[cur].size();i++){
    	if(adj[cur][i]==pr)
    	    continue;
    	if((c[cur]!=r[cur]&&inv==1)||(inv==-1&&c[cur]==r[cur])){
    		ans3 += dfs(adj[cur][i],cur,inv);
    		ans4 += dfs(adj[cur][i],cur,inv*-1);
    	} else {
    		ans1 += dfs(adj[cur][i],cur,inv);
    		ans2 += dfs(adj[cur][i],cur,inv*-1);
    	}
    }
    if((c[cur]!=r[cur]&&inv==1)||(inv==-1&&c[cur]==r[cur]))
    	dp[cur][inv+1] = min(ans3,ans4);
    else
    	dp[cur][inv+1] = min(ans1,ans2);
	return dp[cur][inv+1];
}
int main(){
    for(int i=0;i<100001;i++)
    	for(int j=0;j<3;j++)
    		dp[i][j]=-1;
	int n;
	scanf("%d",&n);
	for(int i=0;i<n-1;i++){
		int a,b;
		scanf("%d %d",&a,&b);
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	for(int i=1;i<=n;i++)
		scanf("%d",&c[i]);
	for(int i=1;i<=n;i++)
		scanf("%d",&r[i]);
	printf("%d\n",dfs(1,-1,1));
	return 0;
}