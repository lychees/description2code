#include<bits/stdc++.h>
using namespace std;
#define fr(i,n) for(int i=0;i<n;i++)
#define fr1(i,n) for(int i=1;i<=n;i++)
#define ll long long
#define pii pair<int,int>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define MOD 1000000007
#define MAX 1000000000000002
#define INF 100005

struct trie{
	trie* nxt[26];
	int w;
	int en;
};
trie* getnode(){
	trie* temp=(trie*)malloc(sizeof(trie));
	temp->en=1;
	temp->w=-1;
	fr(i,26){
		temp->nxt[i]=NULL;
	}
	return temp;
}


void insert(trie* root,string s,int w1){
	trie* curr=root;
	fr(i,s.length()){
		int in=s[i]-'a';
		if(curr->nxt[in]==NULL){
			curr->nxt[in]=getnode();
			curr->nxt[in]->w=w1;
		}
		else{
			curr->nxt[in]->w=max(curr->nxt[in]->w,w1);
		}
		curr=curr->nxt[in];
	}
	curr->en=-1;
}

int search(trie* root,string s){
	trie* curr=root;
	int ans=-1;
	fr(i,s.length()){
		int in=s[i]-'a';
		if(curr->nxt[in]!=NULL){
			ans=curr->nxt[in]->w;
		}
		else {
			ans=-1;
			return ans;
		}
		curr=curr->nxt[in];
	}
	return ans;
}

int main(){
	int n,q;
	cin>>n>>q;
	string s;
	int we;
	trie* root=getnode();
	fr(i,n){
		cin>>s;
		cin>>we;
		insert(root,s,we);
	}
	fr(i,q){
		cin>>s;
		cout<<search(root,s)<<endl;
	}
	return 0;
}