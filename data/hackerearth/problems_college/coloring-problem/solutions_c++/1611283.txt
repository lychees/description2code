#include<iostream>
#include<vector>
using namespace std;
vector<int> vec[201];
int visit[201];
int color[201];
int dfs(int node)
{
   visit[node] = 1;
    for(int i = 0 ;i < vec[node].size(); ++i ){
        int v = vec[node][i];
                  if(!visit[v])
                  {
                       if(color[node]==1)
                        color[v]=2;
                       else
                        color[v]=1;
                        dfs(v);
                  }
                  else {
                       if(color[node]==color[v])
                            return 0;

                  }

    }
      return 1;

}
int main(){

            int t;
            cin >> t;
            while(t--)
            {
                for(int i = 0; i <= 200 ; ++i ){
                        color[i] = 0;
                           visit[i] = 0;
                    vec[i].clear();
                }
                  int n;
                  cin >> n;
                     int e;
                     cin >> e;
                     while(e--)
                     {
                         int u , v;
                         cin >> u >> v;
                         vec[u].push_back(v);
                         vec[v].push_back(u);
                     }
                   color[0] = 1;
            if(dfs(0))
                cout << "BICOLORABLE." << endl;
            else
                cout <<"NOT BICOLORABLE." << endl;
            }
            return 0;


}
