#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long int
#define MX 1000010
#define MAX 256

bool hasAnagramSubstring(const string& src, const string& target)
{
    if(target.size() > src.size()) return false;

    int srcLen = src.size(), targetLen = target.size();
    int targetCount[128] = {0}, count[128] = {0}, i, j;
    //initialize
    for(i = 0; i < target.size(); ++i){
        ++targetCount[target[i]];
        ++count[src[i]];
    }
    //loop
    i = 0;
    while(true){
        //check if substring is an anagram
        for(j = 0; j < targetLen; ++j){
            if(count[target[j]] != targetCount[target[j]]) break;
        }
        if(j == targetLen) return true;
        //slide window
        if(i + 1 + targetLen > srcLen) break;
        --count[src[i]];
        ++count[src[i + targetLen]];
        ++i;
    }

    return false;
}

int main()
{
    int t;
    string s, p;
    bool tr;

    cin >> t;
    while(t--) {
        cin >> p;
        cin >> s;
        tr = hasAnagramSubstring(s, p);
        if(tr == true) {
            cout << "YES\n";
        } else {
            cout << "NO\n";
        }
    }
    return 0;
}
