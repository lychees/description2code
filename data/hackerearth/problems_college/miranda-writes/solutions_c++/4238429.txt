#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define pii pair<int,int>
#define pll pair<ll,ll>
#define PB push_back
#define MP make_pair
#define B 15
#define N 401
#define inf 1000000007

int s[N][N], cities[B], d[B][B], dp[(1 << B)][B];

int main(){
	int n, m, k, i, j, c, x, y, z, ans;

	scanf("%d%d%d", &n, &m, &k);

	for(i = 1; i <= n; i++){
		for(j = 1; j <= n; j++)
			s[i][j] = inf;
		s[i][i] = 0;
	}

	while(m--){
		scanf("%d%d%d", &i, &j, &c);
		s[i][j] = s[j][i] = min(c, s[i][j]);
	}

	m = k;

	for(i = 0; i < m; i++)
		scanf("%d", &cities[i]);

	for(k = 1; k <= n; k++)
		for(i = 1; i <= n; i++)
			for(j = 1; j <= n; j++)
				s[i][j] = min(s[i][j], s[i][k] + s[k][j]);

	for(i = 0; i < m; i++)
		for(j = 0; j < m; j++)
			d[i][j] = s[cities[i]][cities[j]];

	for(i = 0; i < (1 << m); i++)
		for(j = 0; j < m; j++)
			dp[i][j] = inf;

	for(i = 0; i < m; i++)
		dp[(1 << i)][i] = s[1][cities[i]];

	for(i = 1; i < (1 << m); i++){
		if((i & (i - 1)) == 0)
			continue;

		for(j = 0; j < m; j++){
			if((i & (1 << j)) == 0)
				continue;

			k = i ^ (1 << j);

			for(x = 0; x < m; x++)
				dp[i][j] = min(dp[i][j], dp[k][x] + d[x][j]);
		}
	}

	i = (1 << m) - 1;

	for(j = 0, ans = inf; j < m; j++)
		ans = min(ans, dp[i][j] + s[cities[j]][n]);

	if(m == 0)
		ans = s[1][n];

	printf("%d\n", ans);

	return 0;
}
