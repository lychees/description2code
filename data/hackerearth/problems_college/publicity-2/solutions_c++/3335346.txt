#include <iostream>
#include <vector>
#include<queue>
using namespace std;

void bfs(vector<bool> &vis,vector<vector<int> > &g,int beg){
	queue<int> q;q.push(beg);//vis[beg]=true;
	int c;
	while(!q.empty()){
		c=q.front();q.pop();
		vis[c]=true;
		for(int i=0;i<g[c].size();i++){
			if(!vis[g[c][i]])
				q.push(g[c][i]);
		}
	}
}
void solve(){
	int a,b,n,e;cin >> n;cin >> e;
	if(e==0){
		cout << n << endl;return;	
	}
	vector<vector<int> > v(n,vector<int>(0));vector<bool> vis(n,false);
	for(int i=1;i<=e;i++){
		cin >> a;cin >> b;
		v[a].push_back(b);v[b].push_back(a);
	}
	int ans=0;
	for(int i=0;i<n;i++){
		if(!vis[i]){
			ans++;bfs(vis,v,i);
		}
	}
	cout << ans << endl;
}

int main()
{
	int t;cin >> t;
	for(int i=1;i<=t;i++)
		solve();
    return 0;
}
