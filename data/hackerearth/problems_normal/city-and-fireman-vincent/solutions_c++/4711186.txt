#include<bits/stdc++.h>
using namespace std;
#define unvisited 0
#define process 1
#define visited 2
#define mx 1005
#define mod 1000000007
vector<list<int> >graph(mx);
int main(){
	int res=1,cnt=1,x,y,k,n,a[mx]={0},state[mx]={unvisited},mn=100000000;
	cin >> n;
	for(int i=0;i<n;i++) cin >> a[i];
	cin >> k;
	while(k--){
		cin >> x >> y;
		graph[x].push_back(y);
		graph[y].push_back(x);
	}
	for(int i=1;i<=n;i++){
		mn=100000000;
		if(state[i]==unvisited){
			queue<pair<int,int> >q;
			q.push(make_pair(i,a[i-1]));
			state[i]=process;
			while(!q.empty()){
				int index=q.front().first;
				int val=q.front().second;
				if(val<mn){
					mn=val;
					cnt=1;
				}
				else if(val==mn)++cnt;
				q.pop();
				list<int>::iterator it=graph[index].begin();
				for(;it!=graph[index].end();++it){
					if(state[*it]==unvisited){
						state[*it]=process;
						q.push(make_pair(*it,a[(*it)-1]));
					}
				}
				state[index]=visited;
			}
			res=((res%mod)*(cnt%mod))%mod;
			cnt=0;
		}
	}
	cout << res << endl;
	return 0;
}