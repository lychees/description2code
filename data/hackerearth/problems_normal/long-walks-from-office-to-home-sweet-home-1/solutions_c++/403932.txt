#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define sd(x) scanf("%d",&x)
#define sfd(x) scanf("%d",&x)
#define pf printf

#define LL long long
#define ll long long
#define LD long double
#define ld long double
#define PB push_back
#define pb push_back
#define MP make_pair
#define mp make_pair
#define F first
#define S second

typedef pair<int,int> PII;
typedef vector<int> VI;

#define pii pair<int,int>
#define vi vector<int>
#define fr(i,n) for( int i=0; i<=n; i++)
#define frm(i,m,n) for(int i=m; i<=n; i++)
#define maxn 100
#define mod 1000000007

LL getpow(LL a,LL b){
    LL ret=1LL;
    LL inter=a;
    while(b){
        if(b&1){
            ret *= inter;
            ret %= mod;
        }
        inter *= inter;
        inter %= mod;
        b = b>>1;
    }
    return ret;
}
int n;
LL arr[maxn][maxn];
LL tem[maxn][maxn];
LL tem2[maxn][maxn];
LL pres[maxn][maxn];
LL ans[maxn][maxn];
void mul()
{

   for(int i=0;i<n;i++)
   {
      for(int j=0;j<n;j++)
      {
         tem2[i][j] = ans[i][j];
      }
   }
   memset(ans,0,sizeof(ans));
   for(int i=0;i<n;i++)
   {
      for(int j=0;j<n;j++)
      {
         for(int k=0;k<n;k++)
         {
            ans[i][j] += (tem2[i][k] * tem[k][j])%mod;
            ans[i][j] %=mod;
         }
         //cout<<ans[i][j]<<endl;
      }
   }
}
void sq()
{
   memset(pres,0,sizeof(pres));
   for(int i=0;i<n;i++)
   {
      for(int j=0;j<n;j++)
      {
         for(int k=0;k<n;k++)
         {
            pres[i][j] += (tem[i][k] * tem[k][j])%mod;
            pres[i][j] %=mod;
         }
      }
   }
}
void cp()
{
   for(int i=0;i<n;i++)
   {
      for(int j=0;j<n;j++)
      {
         tem[i][j] = pres[i][j];
      }
   }
}
int u,v;
LL k;
void in()
{
   memset(ans,0,sizeof(ans));
   memset(arr,0,sizeof(arr));
   memset(tem,0,sizeof(tem));
   memset(pres,0,sizeof(pres));
   memset(tem2,0,sizeof(tem2));
   sd(n);cin>>k;sd(u);sd(v);
   for(int i=0;i<n;i++)
   {
      for(int j=0;j<n;j++)
      {
         cin>>arr[i][j];
         pres[i][j] = arr[i][j];
         if(i==j)
            ans[i][j]=1;
         else
            ans[i][j]=0;
      }
   }
   //sd(k);
   if(k==0)
   {
      cout<<0<<endl;
      return;
   }
   while(k)
   {
      if(k&1)
      {
         cp();
         mul();
      }
      cp();
      sq();
      k/=2;
   }
   //sd(u);sd(v);
   /*for(int i=0;i<n;i++)
      {for(int j=0;j<n;j++)
         cout<<ans[i][j];
      cout<<endl;}*/
   cout<<ans[u][v]<<endl;
}

int main()
{
   int t = 1;
   cin>>t;
   while(t--){
    in();
   }
   return 0;
}
