
#include <bits/stdc++.h>

#define FOR(i,b,e) for(int i=(b); i <= (e); ++i)
#define FORD(i,b,e) for(int i=(b); i >= (e); --i)
#define SIZE(c) (int) (c).size()
#define FORE(i,c) FOR(i,0,SIZE(c)-1)
#define FORDE(i,c) FORD(i,SIZE(c)-1,0)
#define PB push_back
#define MP make_pair
#define ST first
#define ND second

using namespace std;

typedef long long int LLI;
typedef pair < int , int > PII;
typedef pair < LLI , LLI > PLL;

typedef vector < int > VI;
typedef vector < bool > VB;
typedef vector < PII > VP;
typedef vector < LLI > VL;
typedef vector < PLL > VPL;

typedef vector < VI > VVI;
typedef vector < VL > VVL;
typedef vector < VB > VVB;
typedef vector < VP > VVP;

const int MOD = 1000000007;
const int INF = 2000000001;
const LLI LLINF = 1000000000000000001LL;

typedef __int128_t typ;

typ hAfter(typ h, typ days)
{
    if (days > 2LL * LLINF)
        days = 2LL * LLINF;

    return h - days * (days + 1) / 2;
}

/*************************************************************************/

int main()
{
    ios_base::sync_with_stdio(0);

    LLI n, h;
    cin >> n >> h;

    VL T(n);
    FORE(i,T) cin >> T[i];
    //------------------------------------

    LLI x = 0;
    for(int i = 1; i <= 1000000; ++i) {
        x += T[(i-1)%n];

        if(h-(LLI)i*(i+1)/2 <= x) {
            cout << i << "\n";
            return 0;
        }
    }

    //-------------------------------------

    typ sum = 0,
        maxH = 0;


    FORE(i,T)
    {
        sum += T[i];
        maxH = max(maxH, sum);
    }

    LLI L = -1, R = LLINF;

    while (R - L > 1)
    {
        LLI mid = (L + R) / 2;

        if (sum * mid + maxH < hAfter(h, typ(n) * (mid + 1)))
            L = mid;
        else
            R = mid;
    }


    typ nowPos = (L + 1) * sum;
    typ days = (L + 1) * n;

    int it = 0;

    while (nowPos < hAfter(h, days))
    {
        nowPos += T[it]; it = (it + 1)%n;
        days++;
    }

    cout << LLI(days);

    return 0;
}

/*************************************************************************/

