#include<bits/stdc++.h>
using namespace std;
vector<int> adj[100005];
int count1=0;
int intime[100005],outtime[100005],visited[100005];
int dfs(int temp)
{
    intime[temp]=++count1;
    visited[temp]=1;
    for(int i=0;i<adj[temp].size();i++)
    {
        if(visited[adj[temp][i]]==0)
        {
            dfs(adj[temp][i]);
        }
    }
    outtime[temp]=++count1;
}
int main()
{
   ios_base::sync_with_stdio(false);
	cin.tie(false);

    int n;
    cin>>n;
    for(int i=0;i<n-1;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u-1].push_back(v-1);
        adj[v-1].push_back(u-1);

    }
     fill(intime,intime+100005,0);
      fill(outtime,outtime+100005,0);
        fill(visited,visited+100005,0);
         dfs(0);
//for(int i=0;i<n;i++)
  //  cout<<i<< " "<<intime[i]<<" "<<outtime[i]<<"\n";
    int q;
    cin>>q;
    while(q--)
    {
        int a,b,c;
        cin>>a>>b>>c;
        if(a==0)
        {
            if(intime[c-1]>intime[b-1] && outtime[c-1]<outtime[b-1])
                cout<<"YES"<<"\n";
            else
                cout<<"NO"<<"\n";
        }
        else
        {
         if(intime[c-1]<intime[b-1] && outtime[c-1]>outtime[b-1])
                cout<<"YES"<<"\n";
            else
                cout<<"NO"<<"\n";
        }
        }
    }

