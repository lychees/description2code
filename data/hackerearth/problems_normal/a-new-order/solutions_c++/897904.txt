#include <bits/stdc++.h>
#define sp(z) setprecision(z)
#define sv(z) sort(z.begin(),z.end())
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double 
#define si(z) scanf("%d",&z)
#define sl(z) scanf("%Ld",&z)
#define sd(z) scanf("%Lf",&z)
#define sc(z) scanf("%c",&z)
#define fre(y,q,s) for(int y=q;y>=s;y--)
#define fr(y,q,s) for(int y=q;y<s;y++)
#define f(y,z) for(int y=0;y<z;y++)
#define fe(y,z) for(int y=1;y<=z;y++)
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
vector<string> v;
vector<vector<int> > vt;
vector<int> v1;
ll in[26];
int arr[26];
bool chk[26];
void bfs()
{
	bool fl;
	int r=0,x,y;
	f(i,26)
		if(in[i]==0 && chk[i])
			v1.pb(i);
	while(v1.size())
	{
		x=v1[0];
		v1.erase(v1.begin());
		f(i,vt[x].size())
		{
			y=vt[x][i];
			arr[y]=arr[x]+1;
			in[y]--;
			if(in[y]==0)
				v1.pb(y);
		}
	}
	f(i,26)
	{
		fl=false;
		f(j,26)
		{
			if(arr[j]==i && chk[j])
			{
				fl=true;
				cout<<(char)('a'+j);
			}
		}
		if(fl)
			cout<<endl;
	}
}
int main()
{
	ll n,c=0;
	char c1,c2;
	bool fl;
	string s;
	sl(n);
	f(i,26)
		vt.pb(v1);
	f(i,n)
	{
		cin>>s;
		f(j,s.length())
			chk[s[j]-'a']=true;
		c=lmax(c,s.length());
		v.pb(s);
	}
	f(i,c)
	{
		fe(j,n-1)
		{
			if(v[j].length()<i || v[j-1].length()<i)
				continue;
			fl=true;
			for(int k=0;k<i;k++)
			{
				if(v[j][k]!=v[j-1][k])
				{
					fl=false;
					break;
				}
			}
			if(fl)
			{
				c2=v[j][i];c1=v[j-1][i];
				if(c1!=c2)
				{
					vt[c1-'a'].pb(c2-'a');
					in[c2-'a']++;
				}
			}
		}
	}
	bfs();
	return 0;
}