#include "bits/stdc++.h"

using namespace std;

#define REP(i,n) for(int(i)=0;(i)<(int)(n);(i)++)
#define _REP(i,a,b) for((i)=(a);(i)<(int)(b);(i)++)

typedef long long LL;

int N, M, cnt;
int dp[123][123];
bool visited[123][123];

int dirx[] = {0, 1};
int diry[] = {1, 0};

void dfs(int x, int y) {
    visited[x][y] = true;
    cnt++;
    for (int i = 0; i < 2; i++) {
        int nx = x + dirx[i];
        int ny = y + diry[i];
        if (nx < 0 || ny < 0 || visited[nx][ny] || dp[nx][ny] == 0) continue;
        dfs(nx, ny);
    }
}

int main () {
    //freopen("in.txt", "r", stdin);
    
    int t; cin >> t;
    while (t--) {
        memset(visited, 0, sizeof(visited));
        memset(dp, 0, sizeof(dp));
        int N; cin >> N;
        REP(i,N) REP(j,N) cin >> dp[i][j];
        
        dfs(0, 0);
        
        if (visited[N-1][N-1]) cout << "POSSIBLE" << endl;
        else cout << "NOT POSSIBLE" << endl;
    }
    return 0;
}