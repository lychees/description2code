nmq = raw_input()
nmq = nmq.split()
nmq = map(int, nmq)
matrix = []
for i in range(nmq[0]):
    line = raw_input()
    line = line.split()
    line = map(int, line)
    matrix.append(line)
for i in range(nmq[2]):
    colour = [['w']*nmq[1] for _ in range(nmq[0])]
    xyd = raw_input()
    xyd = xyd.split()
    xyd = map(int, xyd)
    colour[xyd[0]-1][xyd[1]-1] = 'b'
    count = 1
    stack = [[xyd[0]-1, xyd[1]-1]]
    while len(stack) > 0:
        current = stack.pop()
        if current[0]-1 >= 0:
            top = [current[0]-1, current[1]]
            if (abs(matrix[top[0]][top[1]] - matrix[current[0]]
                    [current[1]]) <= xyd[2]) and colour[top[0]][top[1]] == 'w':
                stack.append(top)
                count += 1
                colour[top[0]][top[1]] = 'b'
        if current[1]+1 < int(nmq[1]):
            right = [current[0], current[1]+1]
            if (abs(matrix[right[0]][right[1]] - matrix[current[0]]
                    [current[1]]) <= xyd[2]) and colour[right[0]][right[1]] == 'w':
                stack.append(right)
                count += 1
                colour[right[0]][right[1]] = 'b'
        if current[0]+1 < int(nmq[0]):
            bottom = [current[0]+1, current[1]]
            if (abs(matrix[bottom[0]][bottom[1]] - matrix[current[0]]
                    [current[1]]) <= xyd[2]) and colour[bottom[0]][bottom[1]] == 'w':
                stack.append(bottom)
                count += 1
                colour[bottom[0]][bottom[1]] = 'b'
        if current[1]-1 >= 0:
            left = [current[0], current[1]-1]
            if (abs(matrix[left[0]][left[1]] - matrix[current[0]]
                    [current[1]]) <= xyd[2]) and colour[left[0]][left[1]] == 'w':
                stack.append(left)
                count += 1
                colour[left[0]][left[1]] = 'b'
    print count
