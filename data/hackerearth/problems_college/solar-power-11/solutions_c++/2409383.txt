#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <climits>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define REP(i, n) for (int i = 0; i < (int)(n); ++i)
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef long long LL;
typedef vector<LL> VLL;

const int M = 1000000007;

int main()
{
    #ifndef ONLINE_JUDGE
        freopen("in.txt","r",stdin);
        //freopen("out.txt","w",stdout);
    #endif
    int t;
    S(t);

    while(t--) {
        int n,k;
        scanf("%d%d",&n,&k);
        vector< VLL > e(n+1, VLL(n+1, k));
        vector< VLL > a(n+1, VLL(n+1, k)); // sum
        rep(i,0,n+1) e[i][0] = e[0][i] = a[i][0] = a[0][i] = 0;
        rep(i,1,n+1) rep(j,1,n+1) a[i][j] = (a[i][j]+a[i][j-1])%M;

        /*rep(i,0,n+1) {
            rep(j,0,n+1) cout<<a[i][j]<<" ";
            cout<<"\n";
        }*/
        int q;
        S(q);
        while(q--) {
            char ch;
            scanf("\n%c",&ch);
            if(ch=='s') {
                //cout<<"sum\n";
                int x,y,z;
                scanf("%d%d%d",&x,&y,&z);

                LL diff = ((z-1)*e[x][y])%M;
                e[x][y] = (e[x][y]*z)%M;
                rep(j,y,n+1) a[x][j] = (a[x][j]+diff)%M;
            }
            else if(ch=='m') {
                //cout<<"measure\n";
                int x1,y1,x2,y2;
                scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
                LL ans = 0;
                rep(r,x1,x2+1) {
                    ans = (ans + a[r][y2] - a[r][y1-1])%M;
                }
                printf("%lld\n", ans);
            }
            /*rep(i,0,n+1) {
            rep(j,0,n+1) cout<<e[i][j]<<" ";
            cout<<"\n";
            }
            rep(i,0,n+1) {
            rep(j,0,n+1) cout<<a[i][j]<<" ";
            cout<<"\n";
            }*/
        }
    }

    return 0;
}
