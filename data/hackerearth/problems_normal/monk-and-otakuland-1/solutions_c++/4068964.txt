/* * * * * * * * * * * *
 * :Krishna (MRoy)     *
 * :JU                 *
 * :mkroy.cs@gmail.com *
 * * * * * * * * * * * */
#include <bits/stdc++.h>

using namespace std;

typedef long long          	ll;
typedef long long unsigned 	llu;
typedef double             	dl;
typedef pair<int,int>      	pii;
typedef pair<ll,ll>     	pll;
typedef vector<int>        	vi;
typedef vector<ll>        	vl;
typedef map<int,int> 		mii;
typedef map<ll,ll>         	mll;
typedef map<string,int>    	msi;
typedef map<char,int>      	mci;
typedef pair<int,pii>      piii;
typedef vector<pii>         vpii;
typedef vector<piii>        vpiii;
//~ Define
#define pi                  acos(-1.0)
#define S                   second
#define F                   first
#define pb                  push_back
#define MP                  make_pair
#define P                   push
#define mem(a,b)            memset(a,b,sizeof a)
#define all(v)              v.begin(),v.end()
#define vsort(v)            sort(v.begin(),v.end())
#define gcd(a,b)            __gcd(a,b)
//~ Input
#define I(a)                scanf("%d",&a)
#define I2(a,b)             scanf("%d%d",&a,&b)
#define I3(a,b,c)           scanf("%d%d%d",&a,&b,&c)
#define L(a)                scanf("%lld",&a)
#define L2(a,b)             scanf("%lld%lld",&a,&b)
#define L3(a,b,c)           scanf("%lld%lld%lld",&a,&b,&c)
#define D(a)                scanf("%lf",&a)
//~ Output
#define nl                  puts("")
#define sp                  printf(" ");
#define SP                  cout<<" ";
#define tcase(cs)           printf("Case %d:",++cs)
#define TC(cs)              cout<<"Case "<<++cs<<":"
#define PI(a)               printf("%d",a)
#define PL(a)               printf("%lld",a)
#define PD(a)               printf("%lf",a)

template <class T> inline T BMOD(T p,T e,T m)
{
    T ret=1;
    while(e)
    {
        if(e&1) ret=(ret*p)%m;
        p=(p*p)%m;
        e>>=1;
    }
    return (T)ret;
}
template <class T> inline T MODINV(T a,T m)
{
    return BMOD(a,m-2,m);
}
template <class T> inline T isPrime(T a)
{
    for(T i=2; i<=sqrt(double(a)); i++)
    {
        if(a%i==0)
        {
            return 0;
        }
    }
    return 1;
}
template <class T> inline T lcm(T a, T b)
{
    return (a/gcd(a,b))*b;
}
template <class T> inline T power(T a, T b)
{
    return (b==0)?1:a*power(a,b-1);
}

#define READ(in)    freopen("in.in","r",stdin)
#define WRITE(out)  freopen("out.out","w",stdout)

//~ cout << fixed << setprecision(20) << Ans << endl;
//~ priority_queue<piii,vpiii, greater<piii> >pq; //for dijkstra

/******************************Let's GO*********************************/

char s[200010];
int n,q,Ans,sv[200000*4+10],tr[4*200000+10];

void ini(int p,int l,int r)
{
    if(l==r)
    {
        tr[p]=(s[l]=='>')?1:0;
        return ;
    }
    int md=(l+r)/2;
    ini(2*p,l,md);
    ini(2*p+1,md+1,r);
    tr[p]=tr[p*2]+tr[p*2+1];
}
void lazzy(int p,int l,int r)
{
    if(sv[p])
    {
        tr[p]=r-l+1-tr[p];
        sv[p]=0;
        if(l!=r)
        {
            sv[2*p]=!sv[p*2];
            sv[2*p+1]=!sv[p*2+1];
        }
    }
}
void update(int p,int l,int r,int x,int y)
{
    if(l>=x && r<=y)
    {
        sv[p]=!sv[p];
    }
    lazzy(p,l,r);
    if(l>y || r<x) return;
    if(l>=x && r<=y) return;
    int md=(l+r)>>1;
    update(2*p,l,md,x,y);
    update(2*p+1,md+1,r,x,y);
    tr[p]=tr[p*2]+tr[p*2+1];
}
int query(int p,int l,int r,int x,int y)
{
    lazzy(p,l,r);
    if(l>y || r<x) return 0;
    if(l>=x && r<=y)
    {
        return tr[p];
    }
    int md=(l+r)>>1;
    return query(2*p,l,md,x,y)+query(2*p+1,md+1,r,x,y);
}
int main()
{
//    ios_base::sync_with_stdio(false);
//    cin.tie(NULL);
    cin>>n>>q;
    scanf("%s",s+1);
    ini(1,1,n);
    while(q--)
    {
        int r,l,t;
        cin>>r>>l>>t;
        if(r==1)
        {
            update(1,1,n,l,t-1);
        }
        else
        {
            if(l>t)
            {
                Ans=query(1,1,n,t,l-1);
            }
            else
            {
                Ans=t-l-query(1,1,n,l,t-1);
            }
            cout<<Ans<<endl;
        }
    }
    return 0;
}
