#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define fast ios_base::sync_with_stdio(false)
#define endl "\n"
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define tr(container, it) \
for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define type(container) \
typeof(container.begin())

vector<vector<pair<int,int> > > v(100000);

bool cmp(const pair<int,int> &a,const pair<int,int> &b)
{
  return a.second<b.second;
}
int main()
{
    set<int> s;
    map<int,int> m;

    ll int n,arr[100005];
    cin>>n;
    for(int i=0;i<n;i++)
    {
     cin>>arr[i];
    }
    ll int a[105][105];
    memset(a,0,sizeof(a));
    for(int i=0;i<n;i++)
    {
        for(int j=i;j<n;j++)
        {
            if(j==0)
            a[i][j]=arr[i];
            else
                a[i][j]=a[i][j-1] + arr[j];
        }

    }
    for(int i=0;i<n;i++)
    {
        for(int j=i;j<n;j++)
        {
            v[a[i][j]].pb(mp(i,j));
            //cout<<a[i][j]<<" ";
        }
       // cout<<endl;

    }
    for(int i=0;i<100000;i++)
    {
        int flag=0;

        sort(all(v[i]),cmp);
       /*for(int j=0;j<v[i].size();j++)
           {

            cout<<i<<" "<<v[i][j].first<<" "<<v[i][j].second<<" ";
            flag=1;
           }
           if(flag)
        cout<<endl;*/
    }

    /*vector<pair<int,int> >v1;
    type(v1) it4=upper_bound(all(v[75]),mp(v[75][0].second,0));
    cout<<it4-v[75].begin()<<endl;
    cout<<v[75].size()-(it4-v[75].begin())+1<<" gh "<<endl;*/
   vector<pair<int,int> > :: iterator y;

    for(int i=0;i<100000;i++)
    {
        int cnt=1,j=1, last=0;
    if(v[i].size()>=1)
    last=v[i][0].second;

        //if(i==315)
           // cout<<"f ";
        //cout<<"f ";

       for(;j<v[i].size();j++)
          {
              if(v[i][j].first>last)
              {
                  cnt++;
                  last=v[i][j].second;
              }
          }

            //cnt=v[i].size()-(y-v[i].begin())+1;






      if(v[i].size()>=1)
      m[i]=cnt;
    }
    //cout<<m[75]<<" "<<m[90]<<" fg ";

   int na=0;
   map<int,int> ::iterator it1=m.begin();
   for(;it1!=m.end();it1++)
    na=max(na,it1->second);

    it1=m.begin();
    for(;it1!=m.end();it1++)
     {
        if(it1->second==na)
        s.insert(it1->first);
     }

   cout<<na<<endl;
  set<int> ::iterator it=s.begin();
  for(;it!=s.end();it++)
       cout<<*it<<" ";

   cout<<endl;
    return 0;
}
