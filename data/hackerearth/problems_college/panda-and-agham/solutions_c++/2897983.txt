/*
Author :Akash Kumar
IIITD
*/
#include<bits/stdc++.h>
using namespace std;

long long int mod_pow(long long int a, long long int b,long long int mod)
{
	long long int ans=1;
	while(b)
	{
		int r=b%2;
	
		if(r!=0)
		ans=(ans*a)%mod;
		
		a=(a*a)%mod;
		
		b/=2;
	}	
	return ans;
}

long long gcdf(long long a,long long b)
{
	if(a==0)
	return b;
	return gcdf(b%a,a);	
}

long long min1(long long a,long long b)
{
	return a>b?b:a; 	
}

long long max1(long long a,long long b)
{
	return a<b?b:a; 	
}

long long int fact(long long int n)
{
	long long int ans=n,mod=1000000007;
	for(int i=1;i<=n-1;i++)
	{
		ans=(ans*i)%mod;
	}
	
	return ans;
}

struct node{
	string s;
	int val;
};

bool comp(struct node less,struct node more)
{
	return less.val<more.val;	
}


long long int arr[100001],n,k;

int cal(long long int x){
	int count=1;
	long long int lastpos=arr[0];
	for(int i=1;i<n;i++){
		if(arr[i]-lastpos>=x){
			 count++;
            
			if( count==k)
			  return 1;
              lastpos=arr[i];
		  }
	  }
	  return 0;
  }
  
 int bsearch(){
	 long long start=0,end=arr[n-1];
	while(start<end){
		long long int mid=(start+end)/2;
		if(cal(mid)==1)
		    start=mid+1;
		else
		    end=mid;
		}
		return start-1;
	}
	 
int main(){
	int t;
	cin>>t;
	
	for(;t>0;t--){
		cin>>n>>k;
		
		for(int i=0;i<n;i++)
		  cin>>arr[i];
		  
        sort(arr,arr+n);
		cout<<bsearch()<<"\n";
     }
 }