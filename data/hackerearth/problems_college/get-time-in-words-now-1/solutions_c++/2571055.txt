#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <deque>
#include <cassert>

using namespace std;

#ifdef WIN32
	#define I64 "%I64d"
#else
	#define I64 "%lld"
#endif

typedef long long ll;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define all(s) s.begin(), s.end()
#define sz(s) (int(s.size()))
#define fname "a"
#define ms(a,x) memset(a, x, sizeof(a))
#define forit(it,s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++it)

string names[30] = {"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "quarter", "sixteen", "seventeen", "eighteen", "nineteen", "twenty", "twenty one", "twenty two", "twenty three", "twenty four", "twenty five", "twenty six", "twenty seven", "twenty eight", "twenty nine", "half"};


int main()
{
	#ifdef LOCAL
	freopen(fname".in", "r", stdin);
	freopen(fname".out", "w", stdout);
	#endif

	int n, m;
	scanf("%d%d", &n, &m);

	if (m == 0)
		printf("%s o' clock\n", names[n - 1].c_str());
	else if (m == 15 || m == 30)
		printf("%s past %s\n", names[m - 1].c_str(), names[n - 1].c_str());
	else if (m == 45)
		printf("%s to %s\n", names[60 - m - 1].c_str(), names[n % 12].c_str());
	else if (m < 30)
		printf("%s %s past %s\n", names[m - 1].c_str(), m == 1 ? "minute" : "minutes", names[n - 1].c_str());
	else
		printf("%s %s to %s\n", names[60 - m - 1].c_str(), (60 - m) == 1 ? "minute" : "minutes", names[n % 12].c_str());

	return 0;
}
