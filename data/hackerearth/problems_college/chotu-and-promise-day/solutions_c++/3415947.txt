#include <iostream>
#include <stdio.h>
#include <cmath>
#include <vector>
#define ll long long 
using namespace std;
vector<bool> is_prime(1000001);
void sieve_atkins()
{
    ll int n=1000000;
    is_prime[2] = true;
    is_prime[3] = true;
    for (ll int i = 5; i <= n; i++)
    {
        is_prime[i] = false;
    }
    ll int lim = ceil(sqrt(n));
    for (ll int x = 1; x <= lim; x++)
    {
        for (ll int y = 1; y <= lim; y++)
        {
            ll int num = (4 * x * x + y * y);
            if (num <= n && (num % 12 == 1 || num % 12 == 5))
            {
                is_prime[num] = true;
            }
            num = (3 * x * x + y * y);
            if (num <= n && (num % 12 == 7))
            {
                is_prime[num] = true;
            }
 
            if (x > y)
            {
                num = (3 * x * x - y * y);
                if (num <= n && (num % 12 == 11))
                {
                    is_prime[num] = true;
                }
            }
        }
    }
    for (ll int i = 5; i <= lim; i++)
    {
        if (is_prime[i])
        {
            for (ll int j = i * i; j <= n; j += i)
            {
                is_prime[j] = false;
            }
        }
    }
}
int main()
{
    int t;
    long int d,n,p=0,i;
    scanf("%d",&t);
    float res;
    sieve_atkins();
    while(t--)
    {
    	scanf("%ld%ld",&n,&d);
    	if(n%d!=0)
    	{
    		printf("0\n");
    	}
    	else
    	{
    		res=n/d;
    		for(i=2;i<=n/d;i++)
    		{
    			if(is_prime[i]==true&&(n/d)%i==0)
    			{
    				res*=(1.0-(1.0/(float)i));
    			}
    		}
    		p=(long int)res;
    		printf("%ld\n",p);
    	}
    }
    return 0;
}