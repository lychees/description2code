/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

LL ar[100001];
pair<LL,LL>seg[400001];
void insert(int idx, int s, int e, int p, int v){
    if(s == e){
        seg[idx] = mp(v, p);
        return;
    }
    int mid = (s + e) / 2;
    if(p <= mid) insert(idx * 2 + 1, s, mid, p, v);
    else insert(idx * 2 + 2, mid + 1, e, p, v);
    seg[idx] = max(seg[idx * 2 + 1], seg[idx * 2 + 2]);
}
pair<LL,LL> query(int idx, int s, int e, int st, int ed){
    if(s == st && e == ed) return seg[idx];
    int mid = (s + e) / 2;
    if(ed <= mid) return query(idx * 2 + 1, s, mid, st, ed);
    else if(st > mid) return query(idx * 2 + 2, mid + 1, e, st, ed);
    else {
        return max(query(idx * 2 + 1, s, mid, st, mid), query(idx * 2 + 2, mid + 1, e, mid + 1, ed));
    }
}
pair<LL,LL> go(int l, int r, int n){
    if(l == r) return mp(ar[l], 0);
    if(l+1 == r) return mp(max(ar[l], ar[r]), max(ar[l], ar[r]));

    pair<LL,LL> p = query(0, 0, n-1, l, r);
    if(p.yy == l){
        pair<LL,LL>pp = go(l+1, r, n);
        return mp(ar[l], pp.yy+ar[l]);
    } else if(p.yy == r){
        pair<LL,LL>pp = go(l, r-1, n);
        return mp(ar[r], pp.yy+ar[r]);
    } else {
        pair<LL,LL> pl = go(l, p.yy-1, n), pr = go(p.yy+1, r, n);
        return mp(p.xx, pl.yy+pr.yy+p.xx+p.xx);
    }
}
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int T; cin >> T;
    while(T--){
        int n; cin >> n;
        REP(i, n) {
            cin >> ar[i];
            insert(0, 0, n-1, i, ar[i]);
        }
        pair<LL,LL> pp = go(0, n-1, n);
        cout << pp.yy << endl;
    }
}
