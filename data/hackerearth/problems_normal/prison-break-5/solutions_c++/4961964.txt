#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>

#define ll long long int
#define maxN 200
#define maxVal 1e8
#define minVal -1e8
#define mod 1e9+7

#define gcd(a,b) __gcd(a,b)

using namespace std;
int a[25][25],n;
bool v[25][25];
int bfs(int x,int y)
{
    if((x==n)&&(y==n))
        return 1;
    int ans = 0;
    if(x>1)
    {
        if((v[x-1][y] == false)&&(a[x-1][y]==0))
        {
            v[x-1][y]=true;
            ans = ans+bfs(x-1,y);
            v[x-1][y]=false;
        }
    }
    if(x<n)
    {
        if((v[x+1][y] == false)&&(a[x+1][y]==0))
        {
            v[x+1][y]=true;
            ans = ans+bfs(x+1,y);
            v[x+1][y]=false;
        }
    }
    if(y>1)
    {
        if((v[x][y-1] == false)&&(a[x][y-1]==0))
        {
            v[x][y-1]=true;
            ans = ans+bfs(x,y-1);
            v[x][y-1]=false;
        }
    }
    if(y<n)
    {
        if((v[x][y+1] == false)&&(a[x][y+1]==0))
        {
            v[x][y+1]=true;
            ans = ans+bfs(x,y+1);
            v[x][y+1]=false;
        }
    }
    return ans;
}
int main()
{
    int t,ans,i,j;
    ios::sync_with_stdio(false);
    cin >> t;
    while(t--)
    {
        ans =0;
        cin >> n;
        for(i=1;i<=n;i++)
            for(j=1;j<=n;j++)
              cin >> a[i][j];
        memset(v,false,sizeof(v));
        if((a[1][1]==1)&&(a[n][n]==1))
        cout << 0 << endl;
        else{
                v[1][1] = true;
        ans = bfs(1,1);
        cout << ans << endl;
        }
    }
}



