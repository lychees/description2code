#include <iostream>
#include <cstdlib>
#include <cstdio>

using namespace std;

void solve()
{
	int N;
	scanf("%d",&N);
	
	long ptr[N][N][N];
	long real[N][N][N];
	
	for(int i = 0; i < N; i++)
		for(int j = 0; j < N; j++)
			for(int k = 0; k < N; k++)
				scanf("%ld",&ptr[i][j][k]);
				
	for(int i = 0; i < N; i++)
	{
		for(int j = 0; j < N; j++)
		{
			for(int k = 0; k < N; k++)
			{
				if(i == 0)
				{
					if(j == 0)
					{
						if(k == 0)
							real[i][j][k] = ptr[i][j][k];
						else 
							real[i][j][k] = ptr[i][j][k] - ptr[i][j][k-1];
					}
					else
					{
						if(k == 0)
							real[i][j][k] = ptr[i][j][k] - ptr[i][j-1][k];
						else
						{
							real[i][j][k] = (ptr[i][j][k]-ptr[i][j-1][k]) - (ptr[i][j][k-1]-ptr[i][j-1][k-1]);
						}
					}
				}
				else
				{
					if(j == 0)
					{
						if(k == 0)
							real[i][j][k] = (ptr[i][j][k] - ptr[i-1][j][k]);
						else
						{
							long a = (ptr[i][j][k] - ptr[i-1][j][k]);
							long b = (ptr[i][j][k-1] - ptr[i-1][j][k-1]);
							real[i][j][k] = (a - b);
						}
					}
					else
					{
						if(k == 0)
						{
							long a = (ptr[i][j][k] - ptr[i-1][j][k]);
							long b = (ptr[i][j-1][k] - ptr[i-1][j-1][k]);
							real[i][j][k] = (a-b);
						}
						else
						{
							long a, b, c, d;
							a = (ptr[i][j][k] - ptr[i-1][j][k]);
							b = (ptr[i][j-1][k] - ptr[i-1][j-1][k]);
							c = (ptr[i][j][k-1] - ptr[i-1][j][k-1]);
							d = (ptr[i][j-1][k-1] - ptr[i-1][j-1][k-1]);
							real[i][j][k] = (a-b) - (c-d);
						}
					}
				}
			}
		}
	}
	
	
	for(int i = 0; i < N; i++)
		for(int j = 0; j < N; j++)
		{
			for(int k = 0; k < N; k++)
				printf("%ld ",real[i][j][k]);
			printf("\n");
		}
	
}

int main()
{
	int t;
	cin >> t;
	while(t--)
		solve();
	
}