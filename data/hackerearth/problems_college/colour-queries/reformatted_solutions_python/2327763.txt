def dis(arr, x, y, x1, y1):
    return abs(arr[x][y] - arr[x1][y1])


total_count = 0


def fun(arr, x, y, d, aux, n, m, visited):
    global total_count
    aux[x][y] = 1
    visited[x][y] = 1
    if (x >= 1 and x < n and y >= 0 and y < m):
        if (dis(arr, x, y, x - 1, y) <= d):
            if aux[x - 1][y] == 0:
                total_count += 1
                # aux[x-1][y]=1
            if visited[x-1][y] == 0:
                fun(arr, x - 1, y, d, aux, n, m, visited)

    if (x >= 0 and x < n and y >= 1 and y < m):
        if (dis(arr, x, y, x, y - 1) <= d):
            if aux[x][y - 1] == 0:
                # aux[x][y - 1] = 1
                total_count += 1
            if visited[x][y-1] == 0:
                fun(arr, x, y - 1, d, aux, n, m, visited)

    if (x < n - 1 and x >= 0 and y >= 0 and y < m):
        if (dis(arr, x, y, x + 1, y) <= d):
            if aux[x + 1][y] == 0:
                # aux[x + 1][y] = 1
                total_count += 1
            if visited[x+1][y] == 0:
                fun(arr, x + 1, y, d, aux, n, m, visited)

    if (x >= 0 and x < n and y < m - 1 and y >= 0):
        if (dis(arr, x, y, x, y + 1) <= d):
            if aux[x][y + 1] == 0:
                # aux[x][y + 1] = 1
                total_count += 1
            if visited[x][y+1] == 0:
                fun(arr, x, y + 1, d, aux, n, m, visited)
    return


def count(arr, n, m):
    i = 0
    cnt = 0
    while i < n:
        j = 0
        while j < m:
            if arr[i][j] == 1:
                cnt += 1
            j += 1
        i += 1
    return cnt


n, m, q = raw_input().split()
n = int(n)
m = int(m)
q = int(q)
mat = []
N = n
M = m
Q = q
while n > 0:
    n -= 1
    row = raw_input().split()
    row = map(int, row)
    mat.append(row)
while q > 0:
    q -= 1
    total_count = 0
    n = N
    m = M
    aux = [[0 for x in range(m)] for x in range(n)]
    visited = [[0 for x in range(m)] for x in range(n)]
    x, y, d = raw_input().split()
    x = int(x)
    y = int(y)
    d = int(d)
    fun(mat, x-1, y-1, d, aux, n, m, visited)
    print total_count+1
