
#include <bits/stdc++.h>

#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b); i>=_b; i--)
#define REP(i,a) for(int i=0,_a=(a); i<_a; i++)
#define EACH(it,a) for(__typeof(a.begin()) it = a.begin(); it != a.end(); ++it)

#define DEBUG(x) { cout << #x << " = "; cout << (x) << endl; }
#define PR(a,n) { cout << #a << " = "; FOR(_,1,n) cout << a[_] << ' '; cout << endl; }
#define PR0(a,n) { cout << #a << " = "; REP(_,n) cout << a[_] << ' '; cout << endl; }

#define sqr(x) ((x) * (x))
using namespace std;

const long long oo = 1000111000111000111LL;

int n, k, a[511];
long long f[511][511], sum[511];

int main() {
    ios :: sync_with_stdio(false);
    while (cin >> n >> k) {
        FOR(i,1,n) {
            cin >> a[i];
            sum[i] = sum[i-1] + a[i];
        }
        FOR(j,1,k) {
            FOR(i,1,n) {
                if (i < j) {
                    f[j][i] = oo;
                    continue;
                }

                if (j == 1) {
                    f[j][i] = sum[i] * sum[i] * (k-1LL);
                }
                else {
                    f[j][i] = oo;
                    FOR(ii,1,i-1) if (f[j-1][ii] != oo) {
                        f[j][i] = min(f[j][i],
                                f[j-1][ii] + sqr(sum[i] - sum[ii]) * (k-1LL)
                                - 2*(sum[i] - sum[ii]) * sum[ii]);
                    }
                }
            }
//            PR(f[j], n);
        }
        cout << f[k][n] << endl;
    }
    return 0;
}

