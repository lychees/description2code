#include <iostream>
#include <map>
#include <vector>
#include <sstream>

typedef long int custom;
using namespace std;
//map < int, string > output;
string output[61];
map<custom , int> stored_values;
inline void output_console(){

    for (int i = 0; i < 61; ++i) {
        cout<<output[i];
    }

}

inline int find_value(custom number){
    try {
        int no_ones = stored_values.at(number);
        return no_ones;
    }catch (const std::out_of_range& oor) {
        return -1;
    }
}

inline void calculate_no_ones(custom number){
    int no_ones = 0, test = find_value(number);
    if (test == -1){
        no_ones = __builtin_popcount (number);
        stored_values.insert({number, no_ones});
    }else{
        no_ones = test;
    }
    output[no_ones] = output[no_ones].append(to_string(number)+ " ");
}

int main() {
    int t, n;
    custom number;
    scanf("%d", &t);
    while (t--){
        scanf("%d", &n);
        int j = 61;
        while (j--){
            output[j]="";
        }
        while (n--) {
            scanf("%ld", &number);
            int no_ones = __builtin_popcount (number);
            output[no_ones] = output[no_ones].append(to_string(number)+ " ");
        }
        for (int i = 0; i < 61; ++i) {
            cout<<output[i];
        }
        cout<<endl;
    }
    return 0;
}