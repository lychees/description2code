#include <bits/stdc++.h>
using namespace std;

typedef struct Node
{
	int x1,y1;
}Node;

int main()
{
	long long test,m,n,i,j,x,y,t,index1,index2;
	cin>>test;
	while(test--)
	{
		cin>>m>>n;
		long long a[m][n],dp[m][n],visited[m][n];
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				cin>>a[i][j];
				visited[i][j]=0;
				dp[i][j]=0;
			}
		}
		dp[0][0]=a[0][0];
		visited[0][0]=1;
		cin>>x>>y>>t;
		x--;y--;
		queue<Node> q;
		Node nd;
		nd.x1=0;
		nd.y1=0;
		q.push(nd);
		index1=0;
		index2=0;
		while(!q.empty())
		{
			q.pop();
			if(index1-1>=0)
			{
				if((visited[index1-1][index2]&&dp[index1-1][index2]>dp[index1][index2]+a[index1-1][index2])||(!visited[index1-1][index2]))
				{
						dp[index1-1][index2]=dp[index1][index2]+a[index1-1][index2];
						nd.x1=index1-1;
						nd.y1=index2;
						q.push(nd);
						visited[index1-1][index2]=1;
				}
			}
			if(index1+1<m)
			{
				if((visited[index1+1][index2]&&dp[index1+1][index2]>dp[index1][index2]+a[index1+1][index2])||(!visited[index1+1][index2]))
				{
						dp[index1+1][index2]=dp[index1][index2]+a[index1+1][index2];
						nd.x1=index1+1;
						nd.y1=index2;
						q.push(nd);
						visited[index1+1][index2]=1;
				}
			}
			if(index2+1<n)
			{
				if((visited[index1][index2+1]&&dp[index1][index2+1]>dp[index1][index2]+a[index1][index2+1])||(!visited[index1][index2+1]))
				{
						dp[index1][index2+1]=dp[index1][index2]+a[index1][index2+1];
						nd.x1=index1;
						nd.y1=index2+1;
						q.push(nd);
						visited[index1][index2+1]=1;
				}
			}
			if(index2-1>=0)
			{
				if((visited[index1][index2-1]&&dp[index1][index2-1]>dp[index1][index2]+a[index1][index2-1])||(!visited[index1][index2-1]))
				{
						dp[index1][index2-1]=dp[index1][index2]+a[index1][index2-1];
						nd.x1=index1;
						nd.y1=index2-1;
						q.push(nd);
						visited[index1][index2-1]=1;
				}
			}
			nd=q.front();
			index1=nd.x1;
			index2=nd.y1;
		}
		if(dp[x][y]>t)
		cout<<"NO"<<endl;
		else
		{
			cout<<"YES"<<endl;
			cout<<t-dp[x][y]<<endl;
		}
	}
    return 0;
}
