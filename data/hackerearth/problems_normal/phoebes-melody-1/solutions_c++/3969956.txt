#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(ll i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return r;
}
int main(){

   int t;
   si(t);
   while(t--){
      int n,k;
      si(n);
      si(k);
    int v[201010];
    int dp[201010]={0};

     fr(i,0,n){
       si(v[i]);
     //  pos[in]=i;
     }
     int found=0;
     int diff,diffl,diffr;
    fr(i,0,n){
    	found=0;
       int l=i-k,r=i+k;
      diff=INT_MAX;
      diffl=INT_MAX;
      diffr=INT_MAX;
       while(l>=0&&r<n){
             if(v[l]<v[i]){
                diff=i-l;
                found=1;
                break;
             }
             if(v[r]<v[i]){
                diff=r-i;
                found=1;
                break;
             }
         l--;
         r++;
       }
       if(!found){

          while(l>=0){
            if(v[l]<v[i]){
                diffl=i-l;
                found=1;
                break;
             }
             l--;
          }

            while(r<n){
              if(v[r]<v[i]){
                 diffr=r-i;
                 found=1;
                 break;
              }
              r++;
            }

          }
   // printf("i=%d diffl=%d diffr=%d diff=%d l=%d r=%d\n",i,diffl,diffr,diff,l,r);
          dp[i]=min(diff,min(diffl,diffr));

       }



    int ans=0;
    fr(i,0,n){
    //	printf("dp[%d]=%d ",i,dp[i]);
      if(dp[i]<INT_MAX)
        ans+=dp[i];
    }
    //pln;

    pi(ans);pln;
   }



return 0;
}
