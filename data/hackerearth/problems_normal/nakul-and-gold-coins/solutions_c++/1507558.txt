#include<bits/stdc++.h>

#define ll long long int
using namespace std;
int a[1000001];
vector<int> p;
ll L,R;
void seive(){
	memset(a,0,sizeof a);
    a[1]=1;
	for(int i=2; i<1000001; i++){
		if(!a[i]){
			p.push_back(i);
			for(int j=2; i*j<1000001; j++){
				a[i*j]=1;
			}
		}	
	}
}
int main(){
    seive();
    int t;
	scanf("%d",&t);
	int sz=p.size();
	/*fact[1] = 1;
	fact[2] = 2;
	fact[3] = 2;
    for(int i=4;i<=1000000;i++){   
		ll fact[i]=1;
		for(int j=0; j<sz; j++){
			ll prime=p[j];
			int val=prime;
			ll count=0;
			if(prime>i) break;
			else{
				while(i>=prime){
					count = count + i/prime;
					prime*=val;
				}
			} 
			count++;
			fact[i]*=count;
		}
    }*/
	while(t--){
		scanf("%lld%lld",&L,&R);
		if (L==R){
			int fact=1;
			bool ok = true;
			for(int j=0; j<sz; j++){
				if (L%p[j]) continue;
				int q3 = L/p[j];
				if (a[q3]!=1) break;
				ok = false;
			}
			//cout << fact << ":";
			if (ok) cout << "1\n";
			else cout << "0\n";
			continue;
		}
		ll cnt = 0;
        for(int i=0;i<sz;i++){
        	//int pp = p[i];
        	int q1 = L/p[i];
        	int q2 = R/p[i];
        	if (L%p[i]) q1++;
        	q1 = max(q1,p[i]+1);
        	if (q2==p[i]) q2--;
        	//cout << q1 << ", " << q2 << endl;
        	if (q1<=q2) {
        		cnt += (int)  (upper_bound(p.begin(),p.end(),q2)-lower_bound(p.begin(),p.end(),q1));
        		//if (L%q1) cnt++;
        	}
        }
			cout << cnt << "\n";

        
    }
}