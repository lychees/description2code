#include <bits/stdc++.h>
using namespace std;

const int MX = 1000000;
bool isPrime[MX+7], mark[MX+7];
int ans[MX+7];

void sieve(){
	int SQ = sqrt(MX) + 1;
	isPrime[2] = true;
	for( int i = 3 ; i <= MX ; i += 2 ){
		if(!mark[i]){
			mark[i] = isPrime[i] = true;
			if( i <= SQ ){
				for( int j = i * i ; j <= MX ; j += i ){
					mark[j] = true;
				}
			}
		}
	}
}

int isSuffixPrime(int num){
	int arr[10], pos = 0;
	while(num){
		arr[pos++] = num % 10 ;
		num /= 10;
		int cur = 0 ;
		for( int j = pos - 1 ; j >= 0  ; j-- ) 
			cur = cur * 10 + arr[j];
		if(isPrime[cur]){
			return 1 ;
		}
    }
    return 0;
}

void generate(){
	for( int i = 2 ; i <= MX; i++ ) {
    	ans[i] = ans[i-1] + isSuffixPrime(i);
    }
}

int main() {
	sieve();
    generate();
    int Q;
    scanf("%d",&Q);
    while(Q--){
    	int l , r ;
    	scanf("%d %d",&l, &r);
    	printf("%d\n",ans[r] - ans[l-1]);
    }
}
