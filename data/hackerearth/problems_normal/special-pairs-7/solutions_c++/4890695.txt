/*--.--.--.--.--.--.--.--.--.--.--.--.--*
 *  	By-Rohit Singh					 *
 *    CS , MNNIT Allahabad               *
 *		rohitmnnit1459@gmail.com         *
 *--.--.--.--.--.--.--.--.--.--.--.--.--*/

#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <set>
#include <limits.h>
#include <assert.h>
//#include <unordered_map> 
using namespace std;

#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define null NULL
#define ll long long
#define llu unsigned long long
#define MAX 1<<20 + 1
#define mod 100000007
#define inf 100000000
#define pp pair <int, int>

typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <ldb, ldb> pdd;
const db PI = 3.141592653589793238;
//**********************************************HAPPY CODDING*****************************************************//
int arr[MAX], dp[MAX][21], freq[MAX];

void solve()  {

	int bit, mask;
	for (mask = 0 ; mask < (1 << 20) ; mask++)  {
		dp[mask][0] = freq[mask];
		if (mask & 1)  {
			dp[mask][0] += dp[mask^1][0];
		}
		for (bit = 1 ; bit <= 20 ; bit++)  {
			dp[mask][bit] = dp[mask][bit-1];
			if (mask & (1<<bit))  {
				dp[mask][bit] += dp[mask ^ (1<<bit)][bit-1];
			}
		}
	}
}
int main()  {

	int t, n, i;
	long ans;
	scanf("%d", &t);
	while (t--)  {
		scanf("%d", &n);
		for (i = 0 ; i < n ; i++)  {
			scanf("%d", &arr[i]);
			++freq[arr[i]];
		}
		solve();
		ans = 0;
		for (i = 0 ; i < n ; i++)  {
			ans += dp[((1<<20)-1)^arr[i]][19];
			freq[arr[i]] = 0;
		}
		printf("%ld\n", ans);
	}
	return 0;
}