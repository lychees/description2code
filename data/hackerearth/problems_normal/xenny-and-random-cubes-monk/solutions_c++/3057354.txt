#include<stdio.h>
#include<string>
#include<string.h>
#include<iostream>
using namespace std;

int n,k,cubes[11][26],dp[11][1<<10];
const int MOD = (1e+9)+7;
string s;


int get_count(int a)
{
    int cnt=0;
    while(a)
    {
        cnt += a&1;
        a = a/2;
    }
    return cnt;
}

int solve(int pos, int mask)
{
    if(pos == k)
        return 1;

    if(dp[pos][mask] != -1)
        return dp[pos][mask];

    int ways = 0;
    for(int i=0;i<n;++i)
    {
        if(mask & (1<<i))
            continue;

        if(cubes[i][s[pos]-'a'] > 0)
            ways = (ways + (cubes[i][s[pos]-'a']*solve((pos+1),(mask|(1<<i))))%MOD)%MOD;
    }
    dp[pos][mask] = ways;
    return ways;
}

int main()
{
    //int n;
    char c;
    scanf("%d%d",&n,&k);
    memset(dp,-1,sizeof dp);
    for(int i=0;i<n;++i)
        for(int j=0;j<6;++j)
        {
            cin>>c;
            cubes[i][c-'a']++;
            //printf("%d ",c-'a');
        }
    cin>>s;
    
    printf("%d",solve(0,0));
    return 0;
}

