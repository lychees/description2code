
cmdResult = []


def makeAndTestSym(matrixSize):
    matrix = []

    i = 0
    while i < matrixSize:
        line = raw_input()
        # values = line.split()
        row = [value for value in line]
        matrix.append(row)
        i = i+1
    return matrix


def checkMatrix(mat):
    # this could be optomized
    symResult = "NO"
    hTest = horzonalTest(mat)
    vTest = verticalTest(mat)
    if (hTest == vTest):
        symResult = "BOTH"
    else:
        if (hTest):
            symResult = "HORIZONTAL"
        if (vTest):
            symResult = "VERTICAL"
    return symResult


def horzonalTest(mat):

    size = len(mat[0])
    for i in range(0, int(size/2)):
        for j in range(0, size):
            if (mat[i][j] != mat[size-1-i][j]):
                return False
    return True


def verticalTest(mat):

    size = len(mat[0])
    for i in range(0, int(size/2)):
        for j in range(0, size):

            if (mat[j][i] != mat[j][size-1-i]):
                return False
    return True


testCount = int(raw_input())
tcnt = 1

while (tcnt <= testCount):
    sizeInput = int(raw_input())
    mat = makeAndTestSym(sizeInput)
    cmdResult.append(checkMatrix(mat))
    tcnt = tcnt + 1

for res in cmdResult:
    print(res)
