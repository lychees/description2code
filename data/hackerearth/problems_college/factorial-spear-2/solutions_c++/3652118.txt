#include<bits/stdc++.h>
using namespace std;
# define ll long long
inline void write(ll n)
 {
    if(n<0){
    n=-n;
    putchar_unlocked('-'); }
    int i=21;
    char output_buffer[22];
    output_buffer[21]='\n';
    do
    {
    output_buffer[--i]=(n%10)+'0';
    n/=10;
    } while(n);
    do
    {
    putchar_unlocked(output_buffer[i]);
    }  while(++i<22);
    }
inline int read_int(){
	int ip=getchar_unlocked(),ret=0,flag=1;
	for(;ip<'0'||ip>'9';ip=getchar_unlocked())
	if(ip=='-')
	{
		flag=-1;ip=getchar_unlocked();
		break;
		}
for(;ip>='0'&&ip<='9';ip=getchar_unlocked())
ret=ret*10+ip-'0';
return flag*ret;
}
bool hsh[10001001];
int facts[10001001],cnt[10001001];
int pre[10001001];
int primes[25];
set <int>::iterator it;
int factorise(int n)
{
    int ind=0;
    while(n>1)
    {
        if(!cnt[facts[n]])
            cnt[facts[n]]++,primes[ind++]=facts[n];
        else
            cnt[facts[n]]++;
        n/=facts[n];
    }
    int ret=0;
    for(int i=0;i<ind;i++)
        ret+=cnt[primes[i]],cnt[primes[i]]=0;
    return ret;
}
void sieve(int n)
{
    int i,a;
    for(i=1;i<=n;i++)
        hsh[i]=true;
    hsh[1]=false;
    for(i=2;i<=n;i++)
    if(hsh[i])
    {
        facts[i]=i;
        a=2;
        while(a*i<=n)
            hsh[a*i]=false,facts[a*i]=i,a++;
    }
    pre[1]=0;
    for(i=2;i<=n;i++)
    pre[i]=pre[i-1]+factorise(i);
}
int main()
{
    ofstream cout("b.txt");
    sieve(5000000);
    cin.sync_with_stdio(false);
    int t,n,i;
    t=read_int();
    while(t--)
    {
        n=read_int();
        write(pre[n]);
    }
    return 0;
}
