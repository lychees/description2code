#include <iostream>
#include <algorithm>
#include <unordered_map>
using namespace std;

//unordered_map<int,char> m;
unordered_map<char,int> revm;

bool myfunc(string s1,string s2)
{
	int i=0;
	while(i<(int)(s1.length()) && i<(int)(s2.length()))
	{
		if(s1[i]==s2[i])
		{}
		else
		{
			//cout<<"s1["<<i<<"]="<<s1[i]<<" s2["<<i<<"]="<<s2[i]<<endl;
			if(revm.find(s1[i])->second < revm.find(s2[i])->second)
			{return true;}
			else
			{return false;}
		}
		i++;
	}
	if(s1.length()<s2.length())
	return true;
	else
	return false;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	char l[26];
    	for(int i=0;i<26;i++)
    	{
    		cin>>l[i];
    		//m[i]=l[i];
    		revm[l[i]]=i;
    	}
    	
    	int n;
    	cin>>n;
    	string s[n];
    	for(int i=0;i<n;i++)
    	{cin>>s[i];}
    	
    	sort(s,s+n,myfunc);
    	for(int i=0;i<n;i++)
    	{cout<<s[i]<<endl;}
    	revm.clear();
    }
    return 0;
}