/*template created by */
#include <bits/stdc++.h>
#define SI set<int> 
#define VI vector<int> 
#define ull unsigned long long 
#define inint(a) scanf("%d",&a)
#define input(a) cin>>a
#define ll long long 
#define print(a) cout<<a
#define printn(a) cout<<a<<"\n"
#define f first
#define s second
#define len(s) s.length()
#define range(a,b,n) for(int i=a;i<b;i+=n)

ull mulmod(ull a,ull b,ull c){
    ull x = 0,y=a%c;
    while(b > 0){
        if(b%2 == 1){
            x = (x+y)%c;
        }
        y = (y*2)%c;
        b /= 2;
    }
    return x%c;
}
ull pow(ull a, ull b, ull c){
    ull x = 1, y = a;
    
    while(b>0){
        if(b&1) x = mulmod(x,y,c);
        y = mulmod(y,y,c);
        b >>= 1;
    }
    
    return x;
}
bool Miller(ull p,int iteration){
    if(p<2){
        return false;
    }
    if(p!=2 && p%2==0){
        return false;
    }
    ull s=p-1;
    while(s%2==0){
        s/=2;
    }
    for(int i=0;i<iteration;i++){
        ull a=rand()%(p-1)+1,temp=s;
        ull mod=pow(a,temp,p);
        while(temp!=p-1 && mod!=1 && mod!=p-1){
            mod=mulmod(mod,mod,p);
            temp *= 2;
        }
        if(mod!=p-1 && temp%2==0){
            return false;
        }
    }
    return true;
}using namespace std;
inline int sumdig(int n){
	int ans = 0;
	while(n){
		ans += n % 10;
		n /= 10;
	}
	return ans;
}
int main()
{
	vector<bool> isPrime(10000000, true);
	isPrime[0] = isPrime[1] = false;
	for(int i = 2 ; i * i <= 1000000; i++){
		if(isPrime[i]){
			for(int j = 2 * i ; j <= 1000000; j += i){
				isPrime[j] = false;
			}
		}
	}
	vector<ll> ans(1000000);
	for(int i = 1 ; i <= 1000000; i++){
		
		int t = 0; 
 		int val = i;
		for(int j = 2 ; j * j <= val; j++){
			if(isPrime[j] && val % j == 0){
				int pos = 0;
				while(val % j == 0){pos++;val /= j;}
				t += pos * sumdig(j);
			}
		}
		if(val != 1){
			t += sumdig(val);
		}
		if(t == sumdig(i))ans[i] = ans[i - 1] + 1;
		else ans[i] = ans[i - 1];
		//if(i <= 10 )cout << ans[i] << " " ;
	}
    int t;
    inint(t);
    while(t--){
        int l, r;
        inint(l);
        inint(r);
        cout << ans[r] - ans[l - 1] << "\n";
    }      
    return 0;
}