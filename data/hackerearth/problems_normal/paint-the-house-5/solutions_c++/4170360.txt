#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
bool comp(const pair<pair<long long,long long>,long long> &a,const pair<pair<long long,long long>,long long> &b)
{
	if(a.first.first==b.first.first )
	{
		if(a.first.second==b.first.second)
		return a.second<b.second;
		else
		return a.first.second>b.first.second;
	}
	else
	return a.first.first<b.first.first;
}
int main()
{
	long long int n,t,x,y,d,i,ct,cx,cy,cost;
	cin>>n>>d;
	vector<pair<pair<long long,long long>,long long> > v;;
	for(i=0;i<n;i++)
	{
		cin>>t>>x>>y;
		v.push_back(make_pair(make_pair(t,y),x));
	}
	sort(v.begin(),v.end(),comp);
	ct=v[0].first.first;
	cx=v[0].second;
	cy=v[0].first.second;
	cost=cx;
	for(i=0;i<v.size();i++)
	{
		if(d==0)
		break;
		if(v[i].first.first!=ct &&v[i].first.second>cy)
		{
			d=d-cy*(v[i].first.first-ct);
			if(d<=0)
			break;
			ct=v[i].first.first;
			cy=v[i].first.second;
			cx=v[i].second;
			cost+=cx;
		}
	}
	cout<<cost<<endl;
}
