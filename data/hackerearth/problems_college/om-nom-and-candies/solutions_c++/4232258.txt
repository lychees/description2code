#include <bits/stdc++.h>
using namespace std;
int a[100003];
char prime[100003];
long long ans[100003];
void SieveOfEratosthenes(int n)
{
    memset(prime, 1, sizeof(prime));
 
    for (int p=2; p*p<=n; p++)
    {
        if (prime[p] == 1)
        {
            for (int i=p*2; i<=n; i += p)
                prime[i] = 0;
        }
    }
 
}
long long primeFactors(int n)
{
	if(prime[n] == 1){
		return (ans[n] = a[1] + a[n]);
	}
	int m = n;
    long long max = -1;
    if(n%2 == 0){
    	max = ans[m/2];
    }
    while (n%2 == 0)
    {
        n = n/2;
    }
 
    for (int i = 3; i <= sqrt(n); i = i+2)
    {
    	if(n%i == 0){
    		if(max < ans[m/i]){
    			max = ans[m/i];
    		}
    	}
        while (n%i == 0)
        {
            n = n/i;
        }
    }

    if (n > 2){
       	if(max < ans[m/n]){
       		max = ans[m/n];
       	}
    }
    return (ans[m] = max + a[m]);
}
int main()
{
	long i,n;
	SieveOfEratosthenes(100001);
	cin >> n;
	for(i = 1;i <= n;i++){
		cin >> a[i];
	}
	ans[1] = a[1];
	cout << a[1] << " ";
	for(i = 2;i <= n;i++){
		cout << primeFactors(i) << " ";
	}
}