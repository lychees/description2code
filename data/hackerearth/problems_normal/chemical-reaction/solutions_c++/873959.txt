/** * Created By : Anurag Singh
    * singhanurag50@gmail.com*/
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<cassert>
#include<sstream>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
using namespace std;
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)

#define all(c) c.begin(),c.end()
#define tr(c, itr) for(itr = (c).begin(); itr != (c).end(); itr++)
#define present(container, element) (container.find(element) != container.end()) //for set,map,etc
#define cpresent(container, element) (find(all(container),element) != container.end()) //for vectors
//#define sz(a) int((a).size())]
//#define clr(a) memset(a,0,sizeof(a))
#define ini(a) memset(a,-1,sizeof(a))

#define sd(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define sd2(n,m) scanf("%d%d",&n,&m)
#define ss(s) scanf("%s",s);
#define pd(n) printf("%d\n",n)
#define pd2(n,m) printf("%d %d\n",n,m)
#define sdc(n) scanf("%c",&n)
#define pn printf("\n")
#define max_pos(arr,n) distance(arr, max_element(arr, arr + n))

typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef vector<long long > VLL;
typedef vector<VI> VVI;
typedef long long LL;
#define MOD 1000000007
#define EPS 0.0000001
VLL f(99999,-1);LL fib(int n){if(f[n]==-1){if(n<=1)f[n]=n;else f[n]=fib(n-1)+fib(n-2);}return f[n];}
int gcd(int a, int b){if(!b)return a;else return gcd(b, a%b);}
LL mpow(LL a, LL n)
{LL ret=1;LL b=a;while(n) {if(n&1)
    ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
return (LL)ret;}
#define N 500000
#ifdef ONLINE_JUDGE
 inline void inp( int &n )
 {
    n=0;
    int ch=getchar_unlocked();int sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar_unlocked();}
    while(  ch >= '0' && ch <= '9' )
            n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();
    n=n*sign;
  }
#else
inline void inp(int &n){
 cin>>n;
}
#endif
VI st;
void buildst(int idx,int ss,int se){
    if(ss==se){
        st[idx]=1;
        return ;
    }
    int mid=(ss+se)>>1;
   buildst(2*idx+1,ss,mid);
   buildst(2*idx+2,mid+1,se);
   st[idx]=st[2*idx+1]+st[2*idx+2];
}

void update(int idx,int ss,int se,int i){
    if(ss==se){
        st[idx]=0;return;
    }
    int mid=(ss+se)>>1;
    if(mid>=i) update(2*idx+1,ss,mid,i);
        else update(2*idx+2,mid+1,se,i);
    st[idx]=st[2*idx+1]+st[2*idx+2];
}

int query(int i,int ss,int se,int idx){
    if(ss==se)
        return ss;
    int mid=(ss+se)>>1;
    return st[2*idx+1]>=i?query(i,ss,mid,2*idx+1):query(i-st[2*idx+1],mid+1,se,2*idx+2);
}

char str[N][15];
int main()
{
    int t,n,i,j,a,prev,x;
    char *s;

    sd(t);
    assert(t<=10);
    while(t--){
        sd(n);
        assert(n<=1000000);
        VI arr(n);
        rep(i,n)
            ss(str[i]);
        rep(i,n){
            inp(arr[i]);}
   int size=(ceil)(log2(n))+1;
   st.resize(1<<size);
        buildst(0,0,n-1);
        int MAX=-1;
        for(i=1;i<n;i++){
            sd(a);
            int x=query(a,0,n-1,0);

            MAX=max(arr[x],MAX);
            printf("%s %d\n",str[x],MAX);
            update(0,0,n-1,x);
        }
        int x=query(1,0,n-1,0);
        MAX=max(arr[x],MAX);
        printf("%s %d\n",str[x],MAX);
        update(0,0,n-1,x);
    }
    return 0;
}
