#include<bits/stdc++.h>
using namespace std;
#define sz 1000
typedef pair<int,int> pii;

set<pair<int,pii> > alledges;
bool visit[sz];
vector<int> bellman(int start,int ver)
{
    for(int i=0;i<=ver;i++)
        visit[i]=false;
    vector<int> vec(ver+2,100000000);
    vec[start]=0;
    for(int i=1;i<=ver;i++)
    {
        
        for(set<pair<int,pii> >::iterator it = alledges.begin();it != alledges.end();++it)
        {
            int x=(*it).first;
            int d=(*it).second.first;
            int y=(*it).second.second;
            if(vec[x]!=100000000)
            	vec[y]=min(vec[y],vec[x]+d);
        }
    
    }
    return vec;
}


int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		alledges.clear();
	    int n;
	    cin>>n;


		int q;
	    cin>>q;

	    int x,y,d;
	    for(int i=0;i<q;i++)
	    {
	        cin>>x>>y>>d;
	        d=d*(-1);
	        alledges.insert(make_pair(x,make_pair(d,y)));
	    }

	    int src=1;

	    vector<int> vec=bellman(src,n);


	    int negcycle=0;
	    for(int i=1;i<=n;i++)
	    {
	        
	        for(set<pair<int,pii> >::iterator it = alledges.begin();it != alledges.end();++it)
	        {
	            int x=(*it).first;
	            int d=(*it).second.first;
	            int y=(*it).second.second;
	            if(vec[x]!=100000000)
	            	if(vec[y]>vec[x]+d)
	            		negcycle=1;
	        }
	    
	    }
	    if(negcycle==1)
	    	cout<<"Yes\n";
	    else
	    	cout<<"No\n";
	}


}
