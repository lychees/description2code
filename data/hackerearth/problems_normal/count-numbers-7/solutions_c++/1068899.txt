#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <algorithm>
#include <cstdio>

using namespace std;

long long gcd(long long a, long long b){
	if(b==0) return a;
	return gcd(b, a%b);
}

long long lcm(long long a, long long b){
	if(a<b) swap(a,b);
	if(b==1) return a;
	return a * (b/gcd(a,b));
}

long long bit_count(long long x){
	long long ret = 0;
	while(x>0){
		x -= x&-x;
		ret++;
	}
	return ret;
}


long long calc(vector<int> &K, long long x){
	long long n = K.size();
	long long ret = 0;
	for(long long i=1; i<(1LL<<n); i++){
		long long lcm_ = 1LL;
		for(long long j=0; j<n; j++){
			if( (i>>j) & 1LL ){
				lcm_ = lcm(lcm_, K[j]);
				
			}
			if(lcm_ > x) break;
		}
		long long bits = bit_count(i);
		long long sgn = (bits%2==0)?-1:1;
		ret += sgn * x / lcm_;
	}
	return ret;
}

int main(){
	int k,T;
	cin >> k >> T;
	vector<int> K(k);
	for(int i=0; i<k; i++){
		cin >> K[i];
	}
	for(int $=0; $<T; $++){
		int a,b;
		cin >> a >> b;
		a--;
		long long ans = 0;
		ans = calc(K, b) - calc(K, a);
		cout << ans << endl;
	}
	return 0;
}