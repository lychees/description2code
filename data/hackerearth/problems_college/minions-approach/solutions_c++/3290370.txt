#include<bits/stdc++.h>
using namespace std;

const int N=1e5+5;

vector<bool>isPrime(N);
vector<int>primes;

void sieve() {
  isPrime[0]=isPrime[1]=true;
  for(int i=2;i<N;i++) {
    if(isPrime[i]==false) {
      for(int j=2*i;j<N;j+=i) {
        isPrime[j]=true;
      }
    }
  }
  for(int i=2;i<N;i++) {
    if(isPrime[i]==false) {
      primes.push_back(i);
    }
  }
  return;
}
int phi(int n) {
  if(n<2) {
    return 0;
  }
  if(isPrime[n]==false) {
    return n-1;
  }
  if(n&1==0) {
    int m=n>>1;
    return !(m&1)?phi(m)<<1:phi(m);
  }
  for(vector<int> :: iterator it=primes.begin();it!=primes.end()&&* it<N;it++) {
    int m=* it;
    if(n%m) {
      continue;
    }
    int o=n/m;
    int d=__gcd(m,o);
    return d==1?phi(m)*phi(o):phi(m)*phi(o)*d/phi(d);
  }
}
int main() {
  sieve();
  vector<int> ephi(N);
  for(int i=1;i<N;i++) {
    ephi[i]=phi(i);
  }
  int tt;
  scanf("%d",&tt);
  while(tt--) {
    int n;
    scanf("%d",&n);
    if(isPrime[ephi[n]]==false) {
      puts("Correct");
    } else {
      puts("Incorrect");
    }
  }
  return 0;
}
