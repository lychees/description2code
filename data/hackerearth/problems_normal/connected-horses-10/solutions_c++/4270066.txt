#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
int vis[1000009];
long long cnt=0,q;
int T,n,m,a,c;
long long pdt = 1;
pair<int,int> b;
long long fact[1000009];
int pres[1009][1009];

void dfs(pair<int,int> a)
{
	vis[pres[a.first][a.second]] = 1;
	cnt+=1;
	b = make_pair(a.first-2,a.second-1);
	if(a.first>2 && a.second>1 && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first-2,a.second+1);
	if(a.first>2 && a.second<m && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first+2,a.second-1);
	if(a.first<n-1 && a.second>1 && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first+2,a.second+1);
	if(a.first<n-1 && a.second<m && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first-1,a.second-2);
	if(a.first>1 && a.second>2 && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first+1,a.second-2);
	if(a.first<n && a.second>2 && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first+1,a.second+2);
	if(a.first<n && a.second<m-1 && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);
    b = make_pair(a.first-1,a.second+2);
	if(a.first>1 && a.second<m-1 && pres[b.first][b.second] && !vis[pres[b.first][b.second]])
		dfs(b);

}
int main()
{
    //freopen("file1.txt","r",stdin);
    fact[0] = 1;
    for(int i=1;i<1000009;i++)
        fact[i] = ((i*fact[i-1])%MOD+MOD)%MOD;
    cin>>T;
    while(T--)
    {

    	cin>>n>>m>>q;
        pair<int,int> coor[q+9];
    	pdt = 1;
    	for(int i=1;i<=n;i++)
            for(int j=1;j<=m;j++)
                pres[i][j] = 0;
    	for(int i=1;i<=q;i++)
    	{
    		vis[i] = 0;
    		cin>>a>>c;
    		pres[a][c] = i;
    		coor[i] = make_pair(a,c);
    	}


    	for(int i=1;i<=q;i++)
    	{
    		cnt = 0;
    		if(!vis[i])
    		{
    			dfs(coor[i]);
    			pdt = ((pdt*fact[cnt])%MOD+MOD)%MOD;
    		}
    	}
    	cout<<pdt<<endl;

    }
}
