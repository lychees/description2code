#include <iostream>
#include <cstdlib>
using namespace std;

long randPartition(long a[],long start1,long end1);

void quickSort(long a[],long start,long end0)
{
	if (start < end0)
	{
		long i = randPartition(a,start,end0);
		quickSort(a,start,i-1);
		quickSort(a,i+1,end0);
	}
}

long randPartition(long a[],long start1,long end1)
{
	long pivot = start1 + rand()%(end1 - start1);
	//swap a[end] with [pivot]
	long temp = a[end1];
	a[end1] =  a[pivot];
	a[pivot] = temp;

	//now partitioning
	long i = start1;
	for(int j = start1; j < end1 ; j++)
	{
		if(a[j] > a[end1])
		{
			long temp1 = a[j];
			a[j] = a[i];
			a[i] = temp1;
			i++;
		}
	}

	//swapping pivot with its correct position
	long temp2 = a[end1];
	a[end1] = a[i];
	a[i] = temp2;

	return i;
}

int main()
{
    int testCases;
    cin >> testCases;

    while(testCases--)
    {
    	long size0;
    	cin >> size0;
    	long arr[size0];

    	for(int i = 0; i < size0; i++)
    	{
    		cin >> arr[i];
    	}
    	//cin >> endl;

    	//using quick sort algo
    	quickSort(arr,0,size0-1);

    	//printing the sorted array
    	for(int j = 0; j < size0; j++)
    	{
    		cout << arr[j] << " ";
    	}
    	cout << endl;
    }

    return 0;
}
