#include <stdio.h>
#include<bits/stdc++.h>
#define MOD 10000007
using namespace std;
void multiply(long long F[5][5], long long M[5][5], long long temp[5][5]);

void power(long long F[5][5], long long n);

/* function that returns nth Fibonacci number */
long long fib(long long n)
{
  long long F[5][5] = {{1,1,0,0,0},{2,0,1,0,0},{3,0,0,1,0},{2,0,0,0,1},{1,0,0,0,0}};
  long long M[5][5] = {{214,83,35,19,1},{83,35,19,1,2},{35,19,1,2,3},{19,1,2,3,2},{1,2,3,2,1}};
  if (n == 0)
    return 0;
  power(F, n);
  long long temp[5][5];
  multiply(M,F,temp);
  return temp[0][0]%MOD;
}

/* Optimized version of power() in method 4 */
void power(long long F[5][5], long long n)
{
  if( n == 0 || n == 1)
      return;
  long long M[5][5] = {{1,1,0,0,0},{2,0,1,0,0},{3,0,0,1,0},{2,0,0,0,1},{1,0,0,0,0}};


  power(F, n/2);
  long long temp[5][5];
  multiply(F, F, temp);

  if (n%2 != 0)
     multiply(temp, M,temp);
     for(int i=0;i<5;i++)
     {
         for(int j=0;j<5;j++)
         {
             F[i][j] = temp[i][j];
         }
     }
}

void multiply(long long F[5][5], long long M[5][5],long long temp[5][5])
{
    long long Mult[5][5];
    long long sum = 0;
  for ( long long c = 0 ; c < 5 ; c++ )
    {
      for ( long long d = 0 ; d < 5 ; d++ )
      {
        for ( long long k = 0 ; k < 5 ; k++ )
        {
          sum = (sum+ ((F[c][k])*(M[k][d])));
        }

        Mult[c][d] = sum;
        sum = 0;
      }
    }
    for(long long  i=0;i<5;i++)
    {
        for(long long  j=0;j<5;j++)
        {
            temp[i][j] = Mult[i][j]%MOD;
        }
    }
}

/* Driver program to test above function */
int main()
{
  long long t;
  scanf("%lld",&t);
  while(t--)
  {
      long long n;
      scanf("%lld",&n);
      switch(n)
      {
          case 1: printf("1\n");break;
          case 2: printf("2\n");break;
          case 3: printf("3\n");break;
          case 4: printf("2\n");break;
          case 5: printf("1\n");break;
          case 6: printf("19\n");break;
          case 7: printf("35\n");break;
          case 8: printf("83\n");break;
          case 9: printf("214\n");break;
      }
      if(n >= 10)
      {
          printf("%lld\n",fib(n-9)%MOD);
      }
  }
  return 0;
}
