/*
 Created by Saidolda Bayan.
 Copyright (c) 2015 Bayan. All rights reserved.
 LANG: C++
 */
#include <bits/stdc++.h>

#define _USE_MATH_DEFINES
#define y1 lalka
#define right napravo
#define left nalevo
#define pb push_back
#define mp make_pair
#define f first
#define s second

using namespace std;
using pii = pair<int, int>;
using ll = long long;

const int INF = (int)1e9+7, mod = (int)1e9+9, pw = 31, N = (int)1e5+123, M = (int)2e6+123;
const double eps = 1e-11;
const long long inf = 1e18;
struct node{
    pii a[M];
    int l, r;
    inline void clear(){
        l = r = 0;
    }
    inline int size(){
        return r - l;
    }
    inline void push(pii x){
        a[r++] = x;
    }
    inline void pop(){
        l++;
    }
    pii front(){
        return a[l];
    }
}q;
int t;
int n, m, **used, sz = 0;
char c, **a;
pii dir[8] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {1, 1}, {-1, 1}, {-1, -1}, {1, -1}};
inline bool in (int x, int y){
    return x > 1 && y > 1 && x < n && y < m;
}
bool check(int x, int y){
    q.clear();
    q.push(mp(x, y));
    used[x][y] = sz;
    bool ok = 1;
    while(q.size()){
        pii now = q.front();
        q.pop();
        if(a[now.f][now.s] == c) continue;
        if(!in(now.f, now.s)) {ok = 0;continue;}
        for(auto to : dir){
            if(used[to.f + now.f][to.s + now.s] == sz) continue;
            used[to.f + now.f][to.s + now.s] = sz;
            q.push(mp(to.f + now.f, to.s + now.s));
        }
    }
    return ok;
    /*
    if(a[x][y] == c) return 1;
    if(!in(x, y)) return 0;
    used[x][y] = sz;
    bool ok = 1;
    for(auto to : dir){
        if(used[to.f + x][to.s + y] == sz) continue;
        ok &= check(to.f + x, to.s + y);
    }
    return ok;*/
}
void solve(){
    scanf("%d%d", &n, &m);
    a = new char *[n+3];
    used = new int*[n + 3];
    for(int i=1; i<=n; i++){
        a[i] = new char[m+3];
        used[i] = new int[m + 3];
        scanf("\n");
        for(int j=1; j<=m; j++){
            scanf("%c", &a[i][j]);
        }
    }
    for(c = 'a' ; c <= 'z'; c++){
        sz ++;
        for(int i=2; i<n; i++){
            for(int j=2; j<m; j++){
                if(a[i][j] != c && used[i][j] != sz){
                    if(check(i, j)){
                        puts("NO");
                        return;
                    }
                }
            }
        }
    }
    delete a;
    delete used;
    puts("YES");
}
int main ()
{
//    ios_base::sync_with_stdio(0);cin.tie(NULL);
#ifndef DEBUG
    //freopen(".in","r",stdin);
    //freopen(".out","w",stdout);
#endif
//    setrlimit(200);
    scanf("%d", &t);
    while(t--){
        solve();
    }
    return 0;
}
