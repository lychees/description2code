#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pl;

#define sl(x) scanf("%lld",&x)
#define pl(x) printf("%lld\n",x);
#define sf(x) sort(x.begin(),x.end(),func)
#define s(x) sort(x.begin(),x.end())
#define pb push_back
#define all(v) v.begin(),v.end()
#define rs(v) { s(v) ; r(v) ; }
#define r(v) {reverse(all(v));}
#define mp make_pair
#define F first
#define S second
#define f(i,n) for(int i=0;i<n;i++)
#define fab(i,a,b) for(int i=a;i<=b;i++)

const ll mod = 1000000007;
const ll inf = LLONG_MAX;
const ll ninf = LLONG_MIN;
const ld eps = 1e-10;
const ll N = 1000005;
const ll LOGN = log2(N);
ll t, n, m, L, R;
ll a[255][255];
ll s[255][255];
ll getsum(ll x1, ll y1, ll x2, ll y2)
{
    return s[x2][y2] - (x1 ? s[x1 - 1][y2] : 0) - (y1 ? s[x2][y1 - 1] : 0)  + (x1*y1 ? s[x1 - 1][y1 - 1] : 0);
}
int main()
{
    sl(t);
    while(t--)
    {
        sl(n);
        sl(m);
        sl(L);
        sl(R);
        f(i, n) f(j, m) sl(a[i][j]);
        f(i, n) f(j, m) s[i][j] = 0;
        f(i, n) f(j, m) s[i][j] = (i ? s[i - 1][j] : 0) + (j ? s[i][j - 1] : 0) - (j*i ? s[i - 1][j - 1] : 0) + a[i][j];
        ll ans = 0;
        f(i, n)
        {
            for(ll j = i; j < n; j++)
            {
                ll ptr1 = 0, ptr2 = 0;
                ll x1, x2;
                f(k, m)
                {
                    while(getsum(i,k,j,ptr1) < L && ptr1 < m)
                    {
                        ptr1++;
                    }
                    x1 = ptr1;
                    while(getsum(i,k,j,ptr2) <= R && ptr2 < m)
                    {
                        ptr2++;
                    }
                    ptr2--;
                    x2 = ptr2;
                    if(x1 == m) continue;
                    ans += x2 - x1 + 1;
                }
            }
        }
        pl(ans);
    }
    return 0;
}
