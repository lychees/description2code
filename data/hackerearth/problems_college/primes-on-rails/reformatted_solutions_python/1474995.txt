def primes(n):
    if n == 2:
        return [2]
    elif n < 2:
        return []
    s = range(3, n+1, 2)
    mroot = n**0.5
    half = (n+1)/2 - 1
    i = 0
    m = 3
    while (m <= mroot):
        if s[i]:
            j = (m*m-3)/2
            s[j] = 0
            while (j < half):
                s[j] = 0
                j += m
        i += 1
        m = 2*i+3
    return [2]+[x for x in s if x]


p = set(primes(100000))
n = int(raw_input())
arr = []
dep = []
for i in xrange(n):
    h, m, s = map(int, raw_input().split())
    st = h*60*60 + m*60 + s
    en = st
    if st in p:
        en += 300
    elif st % 2 != 0:
        en += 180
    else:
        en += 120
    arr.append(st)
    dep.append(en)
arr.sort()
dep.sort()
need = 1
res = 1
i = 1
j = 0
while (i < n and j < n):
    if arr[i] < dep[j]:
        need += 1
        i += 1
        res = max(res, need)
    else:
        need -= 1
        j += 1
print res
