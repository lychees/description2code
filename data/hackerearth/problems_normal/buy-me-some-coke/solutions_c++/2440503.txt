#include <iostream>
#include <algorithm>
#include <climits>
typedef long long ll;
using namespace std;

ll nn,a,b,c;
ll sm;
int dp[200][200][60];

int func(int n,int a,int b)
{
	if(n==0)
		return 0;
	if(dp[n][a][b])
		return dp[n][a][b];
	dp[n][a][b] = INT_MAX;
	int o = sm-5*a-10*b-8*(nn-n);
	
	if(a>=2)
		dp[n][a][b] = min(dp[n][a][b],func(n-1,a-2,b)+2);
	if(b>=1)
		dp[n][a][b] = min(dp[n][a][b],func(n-1,a,b-1)+1);
	if(a>=1&&o>=3)
		dp[n][a][b] = min(dp[n][a][b],func(n-1,a-1,b)+4);
	if(b>=1&&o>=3)
		dp[n][a][b] = min(dp[n][a][b],func(n-1,a+1,b-1)+4);
	if(o>=8)
		dp[n][a][b] = min(dp[n][a][b],func(n-1,a,b)+8);
	return dp[n][a][b];
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	for(int i=0;i<200;++i)
    		for(int j=0;j<200;++j)
    			for(int k=0;k<60;++k)
    				dp[i][j][k]=0;
    	cin>>nn>>a>>b>>c;
    	sm = a+5*b+10*c;
    	if(8*nn>sm)
    	{
    		cout<<-1<<endl;
    		continue;
    	}
    	cout<<func(nn,b,c)<<endl;
    }
    return 0;
}
