def canPalindrome(freq):
    
    oddcount = 0
    for c in freq:
        if freq[c] % 2 != 0:
            oddcount += 1
        if oddcount > 1:
            return False
    return True



inp = raw_input()
freq = {}
for c in inp:
    if c not in freq:
        freq[c] = 0
    freq[c] += 1

if canPalindrome(freq):
    res = []
    if len(inp) % 2 == 0:
        for c in freq:
            res.extend([c] * (freq[c] / 2))
        res.sort()
        print "%s%s" % ("".join(res), "".join(res[::-1]))
    else:
        odd = ""
        for c in freq:
            if freq[c] % 2 != 0:
                odd = c
                freq[c] -= 1
            res.extend([c] * (freq[c] / 2))
        res.sort()
        print "%s%s%s" % ("".join(res), odd, "".join(res[::-1]))
else:
    print "-1"