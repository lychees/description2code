#include <bits/stdc++.h>
#define sd(x) scanf("%d", &x)
#define forn(i, n) for(int i = 1; i<=n; i++)
#define ii pair<int,int>
#define vi vector<int>
#define vii vector< ii >
#define MOD 1000000007


using namespace std;

// Disjoint Set Library
vi ds;
vi size;
int numSets=0;
void init(int N)
{
    numSets = N;
    ds.assign(N, 0);
    size.assign(N,1);
    for (int i = 0; i < N; i++)
        ds[i] = i;
}

int find_set(int i)
{
    return (ds[i] == i) ? i : (ds[i] = find_set(ds[i]));
}

bool is_same_set(int i, int j)
{
    return find_set(i) == find_set(j);
}

void union_set(int i, int j)
{
    if (!is_same_set(i, j))
    {
        int x = find_set(i), y = find_set(j);
        numSets--;
        ds[x] = y;
        size[y] += size[x];
    }
}

int set_size(int i)
{
    return size[find_set(i)];
}
long long int fac(int n)
{
    if(n==1) return 1;
    return (n * fac(n-1))%MOD;
}

int main(int argc, char *argv[])
{
    int n, k;
    scanf("%d%d", &n, &k);
    init(n);
    while(k--)
    {
        int t1, t2;
        scanf("%d%d", &t1, &t2);
        union_set(t1, t2);
    }

    long long int s = 1;
    for(int i = 0; i<n; i++)
    {
        if(ds[i] == i)
        {
            s = (s*fac(size[i]))%MOD;
        }
    }
    printf("%Ld\n", s);

    return 0;
}


/*

   int t;
   sd(t);
   forn(i, t)
   {
// solve
// printf("Case #%d: %d", i, result);
}

*/


