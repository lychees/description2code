#include<bits/stdc++.h>
using namespace std;

const int N=110;

int primes[N];
int composites[N];
bool isPrime[100000];

int main() {
  isPrime[0]=isPrime[1]=true;
  for(int i=2;i<100000;i++) {
    if(isPrime[i]==false) {
      for(int j=2*i;j<100000;j+=i) {
        isPrime[j]=true;
      }
    }
  }
  int tt;
  scanf("%d",&tt);
  while(tt--) {
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++) {
      scanf("%d",composites+i);
    }
    for(int i=0;i<n;i++) {
      scanf("%d",primes+i);
    }
    for(int i=0;i<n;i++) {
      if(isPrime[composites[i]]==true&&isPrime[primes[i]]==false) {
      	int res=min(primes[i],composites[i]);
        primes[i]-=res;
        composites[i]-=res;
      } else if(isPrime[composites[i]]==true) {
        primes[i]=0;
      } else if(isPrime[primes[i]]==false) {
        composites[i]=0;
      } else {
      	int res=min(primes[i],composites[i]);
        primes[i]-=res;
        composites[i]-=res;
      }
    }
    int sumPrimes=0;
    int sumComposites=0;
    for(int i=0;i<n;i++) {
      sumPrimes+=primes[i];
      sumComposites+=composites[i];
    }
    if(sumPrimes==sumComposites) {
      puts("Tie");
    } else if(sumPrimes>sumComposites) {
      puts("The Primes");
    } else {
      puts("The Composites");
    }
  }
  return 0;
}
