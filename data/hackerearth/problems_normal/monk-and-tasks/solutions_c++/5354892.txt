#include <iostream>
#include<vector>
#include<algorithm>
#include<cmath>
int set_bits(int);
using namespace std;
int c[1000000];
void merge(int a[], int low, int high, int mid)
{
	int i,j,k;
	
	    i = low;
	    k = low;
	    j = mid+1;
	 while (i <= mid && j <= high)
	    {
	        if (set_bits(a[i] )<= set_bits(a[j]))
	        {
	            c[k] = a[i];
	            k++;
	            i++;
	        }
	        else
	        {
	            c[k] = a[j];
	            k++;
	            j++;
	        }
	    }
	    while (i <= mid)
	    {
	        c[k] = a[i];
	        k++;
	        i++;
	    }
	    while (j <= high)
	    {
	        c[k] = a[j];
	        k++;
	        j++;
	    }
	    for (i = low; i < k; i++)
	    {
	        a[i] = c[i];
	    }
	 
	
	
}
	 void mergesort(int a[], int low, int high)
	{
	    int mid;
	    if (low < high)
	    {
	        mid=(low+high)/2;
	        mergesort(a,low,mid);
	        mergesort(a,mid+1,high);    
	        merge(a,low,high,mid);
	    }
	    return;
	}

int main()
{
int a,i=0,j=0,n,t,temp,min;
cin>>t;
while(t--)
{

  cin>>n;
  int*a=new int[n];
  int*b=new int[n];
  for(i=0;i<n;i++)
  cin>>a[i];
  mergesort(a,0,n-1);
  for(i=0;i<n;i++)
  cout<<a[i]<<" ";
  cout<<"\n";

}
	return 0;
}
int set_bits(int a)
{
	int count=0;
	while(a)
	{
		if(a&1)
		{
			count++;
		}
		a=a>>1;
	}
	return count;
}
