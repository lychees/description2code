#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>
#include<assert.h>
 
 
using namespace std;
 
 
const double pi=acos(-1.0);
const double eps=1e-11;
 
 
#define ll long long int
#define scl(x) scanf("%lld",&x)
#define printl(x) printf("%lld\n",x)
#define print(x) printf("%d\n",x)
#define DEBUG(x) cout<<"Value of "<<#x<<" is "<<x<<endl
#define mp(A,B) make_pair(A,B)
#define pb(X) push_back(X)
#define INF 1000000000
#define MOD 1000000007
#define SET(x,y) memset(x,y,sizeof(x))
#define endl "\n"
#define f first
#define s second
#define gc getchar
 
 
inline void sc(int &x)
{
	register int c = gc();
	x = 0;
	int neg = 0;
    for(; ((c<48 || c>57) && c != '-');c=gc())
		;
	if(c=='-')
	{
		neg = 1;
		c = gc();
	}
	for(; c>47 && c<58 ; c = gc()) {
		x = (x<<1) + (x<<3) + c - 48;
	}
	if(neg)
    	x = -x;
}
void printArr(ll* cc, int n)
{
	for(int i=1;i<=n;i++)
		cout<<cc[i]<<" ";
	cout<<endl<<endl;
}
ll ar[100003],fin[100003];
int p[100003];
bool visited[100003];
int main()
{
	int k,n,i,j,c,counter;
	ll t;
	sc(n);scl(t);
	for(i=1;i<=n;i++)
	{
		visited[i]=false;
		scl(ar[i]);
	}
	for(i=1;i<=n;i++)
		sc(p[i]);
	for(i=1;i<=n;i++)
	{
		if(!visited[i])
		{
			vector< pair<int,int> > v;
			c=p[i];
			int prev=i;
			while(c!=i)
			{
				v.pb(mp(c,prev));
				visited[c]=true;
				prev=c;
				c=p[c];
			}
			v.pb(mp(i,prev));
			visited[i]=true;
			int len=v.size();
			counter=t%len;
			for(k=0;k<len;k++)
			{
				if(counter==0&&k==0)
				{
					fin[v[0].s]=ar[v[len-1].f];
					continue;
				}
				fin[v[k].s]=ar[v[(k+counter-1)%len].f];
			}
		}
	}	
	for(i=1;i<=n;i++)
		printf("%lld ",fin[i]);
	printf("\n");
	return 0;
}