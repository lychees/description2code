#include<bits/stdc++.h>
using namespace std;
//custom
#define endl ('\n')
#define space (" ")
#define __ ios_base::sync_with_stdio(false);cin.tie(0);
//utils
#define SET(a,b) (memset(a,b,sizeof(a)))
//for vectors
#define pb push_back
#define mp make_pair
typedef vector<int> vi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;
//data types
typedef long long ll;
//loops
#define REP(i,a,b) \
    for(int i = int(a);i <= int(b);i++)
#define MEMSET_INF 127 //2bill
#define MEMSET_HALF_INF 63 //1bill

#ifdef DEBUG
    #define debug(args...) {dbg,args; cerr<<endl;}
    #define _
#else
    #define debug(args...)  // Just strip off all debug tokens
    #define _ ios_base::sync_with_stdio(false);cin.tie(0);
#endif 
struct debugger
{
    template<typename T> debugger& operator , (const T& v)
    {    
        cerr<<v<<" ";    
        return *this;    
    }
} dbg;

const int MAXN = 1e6+5;
bool primes[MAXN+1];
int dp[MAXN+1];
// bool alpha_primes[MAXN+1];

int main(){
    _
    int q,l,r;
    cin>>q;

    primes[0] = primes[1] = 1;
    REP(i, 2, sqrt(MAXN)){
        if(!primes[i]){
            for(int j = 2*i; j <= MAXN; j += i){
                primes[j] = 1;
            }
        }
    }

    dp[0] = 0;
    REP(i, 1, MAXN){
        for(int j = 1; j < i && j <= 1e6; j *= 10){
            if(!primes[i] || !primes[i%j]){
                debug(i, j, primes[i], primes[i%j])
                primes[i] = 0;
                dp[i]++;
                break;
            }
        }
        // if(i > 20)break;
        dp[i] += dp[i-1];
    }

    while(q--){
        cin>>l>>r;
        cout<<dp[r]-dp[l-1]<<endl;
    }

    return 0;
}