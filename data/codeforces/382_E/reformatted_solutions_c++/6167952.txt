#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
using namespace std;
#define sqr(_) ((_) * (_))

typedef long long LL;

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair
#define pb push_back

const int MAXN = 50 + 5, MOD = (int)1e9 + 7;

int n, m, f[MAXN][MAXN][2], c[MAXN][MAXN], I[MAXN];

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif

  cin >> n >> m;
  I[1] = 1;
  for (int i = 2; i <= n; ++i)
    I[i] = MOD - (LL)MOD / i * I[MOD % i] % MOD;
  c[0][0] = 1;
  for (int i = 1; i <= n; ++i)
    for (int j = 0; j <= i; ++j)
      c[i][j] = j ? (c[i - 1][j] + c[i - 1][j - 1]) % MOD : 1;

  f[0][0][1] = f[1][0][0] = 1;
  for (int i = 2; i <= n; ++i)
    for (int j = 0; j < i; ++j)
      for (int a = 0; a <= j / 2; ++a)
        for (int b = 0; b <= (i - j - 1) / 2; ++b)
          for (int lj = 0; lj <= 1; ++lj)
            for (int lk = 0; lk <= 1; ++lk)
              f[i][a + b + (!lj | !lk)][(!lj | !lk)] =
                  ((LL)f[i][a + b + (!lj | !lk)][(!lj | !lk)] +
                   (LL)f[j][a][lj] * f[i - 1 - j][b][lk] % MOD * i % MOD *
                       c[i - 1][j] % MOD * I[2]) %
                  MOD;

  cout << ((LL)f[n][m][0] + f[n][m][1]) * I[n] % MOD << endl;
  fclose(stdin);
  fclose(stdout);
  return 0;
}
