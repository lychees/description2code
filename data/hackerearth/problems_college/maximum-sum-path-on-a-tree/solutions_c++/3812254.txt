#include<bits/stdc++.h>
using namespace std;
long long value[50005];
long long parent[50005];
long long n;
long long ans;
long long dfs(long long u,vector<vector<long long> > &adjlist);
int main()
{
   int t;
   std::ios::sync_with_stdio(false);
   cin>>t;
   while(t--)
   {
      cin>>n;
      memset(value,0,sizeof(value));
      memset(parent,-1,sizeof(parent));
      long long i;
      for(i=1;i<=n;i++)
        cin>>value[i];
      vector<vector<long long> > adjlist(n+1);
      for(i=0;i<n-1;i++)
      {
          long long src,dest;
          cin>>src>>dest;
          adjlist[src].push_back(dest);
          adjlist[dest].push_back(src);
      }
      ans=0;
      dfs(1,adjlist);
      cout<<ans<<"\n";
   }
   return 0;
}
long long dfs(long long u,vector<vector<long long> > &adjlist)
{
    long long tmp,max1=0,max2=0,v;
    for(long long j=0;j<adjlist[u].size();j++)
    {
        v=adjlist[u][j];
        if(v!=parent[u])
        {
            parent[v]=u;
            tmp=dfs(v,adjlist);
            if(tmp>max1)
            {
                max2=max1;
                max1=tmp;
            }
            else if(tmp>max2)
                max2=tmp;
        }
    }
    ans=max(ans,value[u]+max1+max2);
  //  cout<<u<<" "<<value[u]+max1<<" "<<ans<<"\n";
    return (value[u]+max1);
}
