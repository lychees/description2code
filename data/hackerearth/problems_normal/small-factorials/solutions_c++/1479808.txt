#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
#define loop(s, e) for(int i = s; i <= e; i++)
typedef unsigned long long type;
#define CHAR_TO_INT(c) (int)(c-'0')
#define INT_TO_CHAR(i) (char)(i+'0')

int main()
{
	int t,n[100], max = 0;
	vector <string> s;
	
	int carry; 
	scanf("%d", &t);
	loop(0,t-1){
		scanf("%d", &n[i]);
		if(max < n[i]) max = n[i];
	}
	
	//max is between [1,100]
	
	s.push_back("1"); // 0!
	s.push_back("1"); // 1!
	loop(2, max){
		int val;
		string str = "\0", tmp; //Factorial as a string format. push_back them starting 1 to max
		carry = 0;
		tmp = s.at(i-1); // Use last result.
		for(int j = 0; j < tmp.size(); j++){
			val = (i * CHAR_TO_INT(tmp[j])) + carry;
			str.push_back(INT_TO_CHAR(val%10)); //Compose str 
			carry = val/10;
		}
		
		while(carry > 0){
			str.push_back(INT_TO_CHAR(carry%10)); //Compose str 
			carry /= 10;
		}
		//cout << str << endl;
		s.push_back(str); // Push into Array of results to store i!.
		//str.erase();
	}
	loop(0,t-1){
		string str = s.at(n[i]);
		reverse(str.begin(), str.end());
		cout << str << endl;
	}
    return 0;
}
