#include<bits/stdc++.h>


#define _fast ios_base::sync_with_stdio(false);cin.tie(0);
#define LL long long int
#define s(a) scanf("%d",&a)
#define sll(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define w(t) while(t--)
#define f(i,n) for(i=0;i<n;i++)
#define fd(i,n) for(i=n-1;i>=0;i--)
#define p(a) printf("%d",a)
#define pll(a) printf("%lld",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define ent printf("\n")
#define maxn 100000
#define mod 1000000007

bool comp(const int& a, const int& b)
{
    return a<b?false:true;//min_heap
}

using namespace std;

typedef pair<int,int> P;
bool isPrime[100005];
int prime[100001],k;
void sieve(int N) {

    for(int i = 0; i <= N;++i) {
        isPrime[i] = true;
    }
    isPrime[0] = false;
    isPrime[1] = false;
    for(int i = 2; i * i <= N; ++i) {
         if(isPrime[i] == true) {
             // Mark all the multiples of i as composite numbers
             for(int j = i * i; j <= N ;j += i)
                 isPrime[j] = false;
        }
    }
    k=0;
    for(int i=2;i<=N;i++)
    {
        if(isPrime[i])
        {
        prime[k]=i;
        k++;}
    }
}
int main()
{
    sieve(100001);
    LL calc=0,calc1=1;
    LL calc2=1;
    int t,x,y,i;
    s(t);
    w(t)
    {
        calc=0;
        calc1=calc2=1;
        s(x);
        s(y);
        for(i=0;i<k;i++)
        {
            calc=0;
            int z=prime[i];
            while(z<=x)
            {
                calc+=x/z;
                z=z*prime[i];
            }
            calc1*=(calc+1);
            calc=0;
            z=prime[i];
            while(z<=y)
            {
                calc+=y/z;
                z=z*prime[i];
            }
            calc2*=(calc+1);
            calc1%=mod;
            calc2%=mod;
        }
        if(y>=x)
            cout<<"0\n";
        else
        {
            if(calc1>=calc2)
            {
                cout<<calc1-calc2;
            }
            else
                cout<<mod+calc1-calc2;
            ent;
        }
    }
    return 0;
}
