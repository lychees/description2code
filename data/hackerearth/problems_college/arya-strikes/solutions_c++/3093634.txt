#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

bool B[1010][1010], V[1010][1010];

void solve() {
	int N;
	cin >> N;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			int temp;
			cin >> temp;
			if (temp) {
				B[i][j] = true;
			}
		}
	}

	V[0][0] = true;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			if (!B[i][j]) continue;
			if (i > 0) {
				V[i][j] = V[i][j] or V[i - 1][j];
			}
			if (j > 0) {
				V[i][j] = V[i][j - 1] or V[i][j];
			}
		}
	}

	if (V[N - 1][N - 1]) cout << "POSSIBLE\n";
	else {
		cout << "NOT POSSIBLE\n";
	}

	memset(V, false, sizeof V);
	memset(B, false, sizeof B);
}

int main() {
	int T;
	cin >> T;
	while (T--) solve();
	return 0;
}