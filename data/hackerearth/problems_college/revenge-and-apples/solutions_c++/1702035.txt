#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int main() {
	vector<char*> cell(2000);
	rep(i, 2000) cell[i] = new char[2001];
	int T;
	scanf("%d", &T);
	rep(ii, T) {
		int N, M;
		scanf("%d%d", &N, &M);
		rep(i, N)
			scanf("%s", cell[i]);
		vector<vi> dp(N+1, vi(M, -1));
		dp[0][0] = 0;
		rep(i, N) {
			int dx = i % 2 == 0 ? 1 : -1;
			int x = -1;
			for(int j = dx == 1 ? 0 : M-1; 0 <= j && j < M; j += dx) {
				char c = cell[i][j];
				if(c == '#') {
					x = -1;
				}else {
					amax(x, dp[i][j]);
					if(x != -1)
						x += c - '0';
				}
				dp[i+1][j] = x;
			}
		}
		int ans = *max_element(all(dp[N]));
		if(ans == -1) ans = 0;
		printf("%d\n", ans);
	}
	return 0;
}
