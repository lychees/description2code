#include <stdio.h>
#include<iostream>
#include<math.h>
#include<memory.h>
#include <stdlib.h>
using namespace std;

#define llu long long unsigned
#define lld long long
#define ld long
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("lld",&a,&b)
#define sc3(a,b,c) scanf("lld%lld",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("lf",&a,&b)
#define scf3(a,b,c) scanf("lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a)
#define popcount __builtin_popcountll
#define swap(a,b,t) t=a;a=b;b=t


#define lim 1000003
#define lim2 3003
// lld P[lim],A[lim],B[lim],C[lim],D[lim],visited[lim];
// char str[lim];
// map<string,lld> M,Mn;
// map<lld,lld>::iterator it;
// std::ios::sync_with_stdio(false);
// string s1,s2;
// multiset<lld> S;
// set<lld> S;
// vector<lld> vid;
// vector<int> vi;
// lld dp[2005][2005];
// bool dp[5005][5005];
// priority_queue<PA> Q;

using namespace std;
const long long mod = 1000000007;

long long f[1111];
long long g[1111];
long long h[1111];

long long pow(long long a, int p)
{
    long long ans = 1;
    while(p)
    {
        if (p % 2) ans = ans * a % mod;
        a = a * a % mod;
        p /= 2;
    }
    return ans;
}
int main(void)
{
    int t,n,m;

    f[0] = 1;
    for (int i=1; i<=1000; i++)
        for (int j=1; j<=4; j++)
            if (i - j >= 0) f[i] = (f[i] + f[i-j]) % mod;

    for (cin >> t; t; t--)
    {
        cin >> n >> m;
        for (int i=1; i<=m; i++) g[i] = pow(f[i], n);

        memset(h, 0, sizeof(h));
        h[1] = 1;
        for (int i=2; i<=m; i++)
        {
            h[i] = g[i];
            long long tmp = 0;
            for (int j=1; j<i; j++)
                tmp = (tmp + h[j] * g[i-j]) % mod;
            h[i] = (h[i] - tmp + mod) % mod;
        }
        cout << h[m] << "\n";
    }

    return 0;
}

