#include<stdio.h>
#include<string.h>
#include<vector>
#include<math.h>
#include<algorithm>
using namespace std;
#ifndef ONLINE_JUDGE
inline int getchar_unlocked(){return getchar();}
#endif 
inline void in(int &x){register int c=getchar_unlocked();x = 0;int neg=0;for(;((c<48||c>57)&&c!='-');c=getchar_unlocked());if(c=='-'){neg=1;c=getchar_unlocked();}for(;c>47&&c<58;c=getchar_unlocked()){x=(x<<1)+(x<<3)+c-48;}if(neg)x=-x;}

#define M 1000
#define inf 0x3f3f3f3f
int nx,ny;
int link[M],lx[M],ly[M],slack[M];    //lx,ly???,nx,ny???x??y?????
int visx[M],visy[M],w[M][M];
struct node
{
	int x,y;
}t;
int DFS(int x)
{
    visx[x]=1;
    for (int y=1;y<=ny;y++)
    {
        if (visy[y])
            continue;
        int t=lx[x]+ly[y]-w[x][y];
        if (t==0)       //
        {
            visy[y]=1;
            if (link[y]==-1||DFS(link[y]))
            {
                link[y] = x;
                return 1;
            }
        }
        else if (slack[y] > t)  //???????slack ????
            slack[y] = t;
    }
    return 0;
}
int KM()
{
    int i,j;
    memset (link,-1,sizeof(link));
    memset (ly,0,sizeof(ly));
    for (i = 1;i <= nx;i ++)            //lx?????????????
        for (j = 1,lx[i] = -inf;j <= ny;j ++)
            if (w[i][j] > lx[i])

                lx[i] = w[i][j];

    for (int x=1;x <= nx;x ++)
    {
        for (i = 1;i <= ny;i ++)
            slack[i] = inf;
        while (1)
        {
            memset (visx,0,sizeof(visx));
            memset (visy,0,sizeof(visy));
            if (DFS(x))    
                break;

            int d=inf;
            for (i = 1;i <= ny;i ++)
                if (!visy[i]&&d> slack[i])
                    d = slack[i];
            for (i = 1;i <= nx;i ++)
                if (visx[i])
                    lx[i] -= d;
            for (i = 1;i <= ny;i ++)
                if (visy[i])
                    ly[i] += d;
                else
                    slack[i] -= d;
        }
    }
    int res = 0;
    for (i = 1;i <= ny;i ++)
        if (link[i] > -1)
            res += w[link[i]][i];
		return res;
}
int main()
{
	int n,t;
	in(t);
	for (int k=1;k<=t;k++)
	{
		in(n);//scanf("%d",&n);
		for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)in(w[i][j]);//scanf("%d",&w[i][j]);
		nx=ny=n;
		printf("%d\n",KM());
			
	}
	return 0;
}
