'''
# Read input from stdin and provide input before running code

name = raw_input('What is your name?\n')
print 'Hi, %s.' % name
'''
import sys
A = raw_input("").split(" ")
people = (int)(A[0])
n_bond = (int)(A[1])
knowledge = raw_input("").split(" ")
dp = {}
playing = {}
ans = 1

for i in range(people):
    dp.setdefault(i+1, set([]))
    playing.setdefault(i+1, 0)

for i in range(n_bond):
    con = raw_input("").split(" ")
    a = (int)(con[0])
    b = (int)(con[1])
    dp[a].add(b)
    dp[b].add(a)


def dfs(person, network, knowledge, playing):
    visited, stack = set(), [person]
    while stack:
        vertex = stack.pop()
        if vertex not in visited:
            visited.add(vertex)
            stack.extend(network[vertex]-visited)
    max = -sys.maxint

    count = 0
    obj_count = {}
    if len(visited) == 1:
        playing[visited.pop()] = 1
        return 1
    for i in range(len(visited)):
        poop = visited.pop()
        playing[poop] = 1
        value = (int)(knowledge[poop-1])
        if max < value:
            max = value
        if value not in obj_count:
            obj_count.setdefault(value, 1)
        else:
            obj_count[value] += 1
    return obj_count[max]


for i in range(people):
    if playing[i+1] == 0:
        n_ways = dfs(i+1, dp, knowledge, playing)
        ans *= n_ways
        ans = ans % (10**9+7)

print ans % (10**9+7)
