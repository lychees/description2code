#include <iostream>
#include <vector>
using namespace std;

int main()
{
	int t=0;
	cin>>t;
	while(t--)
	{
		int n,p;
		cin>>n>>p;
		vector<int> sp(n,0);
		vector<int> ft(n,0);
		for(int i=0;i<n;i++)
		{
			int x,y;
			cin>>x>>y;
			sp[i] = x;
			ft[i] = y;
		}
		
		vector<vector<int>> dp(n+1,vector<int>(p+1,0));
		for(int i=0;i<=n;i++)
		{
			for(int j=0;j<=p;j++)
			{
				if(i==0 || j==0)
					dp[i][j] = 0;
				else if(ft[i-1] <= j)
				{
					dp[i][j] = max(sp[i-1] + dp[i-1][j-ft[i-1]], dp[i-1][j]);
				}
				else
					dp[i][j] = dp[i-1][j];
			}
		}
		
		// int opti_prof = 0;
		// int opti_cost = 0;
		// for(int j=0;j<=p;j++)
		// {
		// 	if( dp[n][j] > opti_prof || (dp[n][j] == opti_prof && j < opti_cost) ) {
		// 	    opti_prof = dp[n][j];
		// 	    opti_cost = j;
		// 	}
		// }
		// int i = n;
		// int j = p;
		// int maxProfit = dp[n][p];
		// while (j >= 0 && (maxProfit == dp[i][j]))
		// 	j -= 1;
		// j += 1;
		// cout<<j<<" "<<maxProfit<<endl;
		int minspend=0;
   		
   		for(int i=0;i<=p;i++)
   		{
   			if(dp[n][minspend]-minspend<dp[n][i]-i)
   				minspend=i;
   		}
   		
   		cout<<minspend<<" "<<dp[n][minspend]-minspend+p<<endl;
	}
    // cout << "Hello World!" << endl;
    return 0;
}
