#include <bits/stdc++.h>
#include<climits>
using namespace std;

int prime[10001];

int gcd(int a , int b)
{
	if(a>b)
	{
		if(b==0)
			return a;
		else
			return gcd(b,a%b);
	}
	else
	{
		if(a==0)
			return b;
		else
			return gcd(a,b%a);
	}
}
int main() {
	//memset(prime,1,10001*sizeof(int));
	for(int i=0;i<=10000;i++)
		prime[i]=1;
	prime[1]=prime[0]=0;
	for(int i=2;i<10001;i++)
	{
		if(prime[i]==1)
			for(int j=2;j*i<10001;j++)
			{
				prime[i*j]=0;			
			}
	}
	
	int n,k,x;
	cin>>n>>k;
	int arr[n][n],dp[n][n];
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>arr[i][j];
			x=arr[i][j];
			if(prime[x]==1)
				dp[i][j]=0;
			else if ( gcd(x,k)!=1)
				dp[i][j]=-1;
			else
			{
				int m=x+k;
				int count=1;
				while(m<=10000)
				{
					if(prime[m]==1)
					{
						dp[i][j]=count;
						break;
					}
					else
					{
						m=m+k;
						count++;
					}
				}
				if(m>10000)
					dp[i][j]=-1;
			}
		}
	}

	int mini=INT_MAX,p=1,q=1,sum=0;
	for(int i=1;i<n-1;i++)
	{
		for(int j=1;j<n-1;j++)
		{
			if(dp[i][j]==-1 || dp[i-1][j-1]==-1 || dp[i-1][j+1]==-1 || dp[i+1][j-1]==-1 || dp[i+1][j+1]==-1)
				continue;
			sum=dp[i][j]+dp[i-1][j-1]+dp[i-1][j+1]+dp[i+1][j-1]+dp[i+1][j+1];
			if(sum<mini)
			{
				mini=sum;
				p=i;
				q=j;
			}
		}
	}
	if(mini!=INT_MAX)
	{
		cout<<"yes"<<endl;
		cout<<mini<<endl;
		cout<<p+1<<" "<<q+1<<endl;
	}
	else
		cout<<"no"<<endl;
	return 0;
}