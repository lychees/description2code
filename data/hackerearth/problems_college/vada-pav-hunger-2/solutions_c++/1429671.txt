//!!!!!!!!! NEVER GIVE UP !!!!! NEVER !!!!!!!! 
/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <utility>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <queue>
#include <sstream>
#include <iomanip>
#include <limits>
using namespace std;
//cout << fixed << setprecision(4);
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imx numeric_limits<int>::mx()
#define imin numeric_limits<int>::min()
#define lmx numeric_limits<ll>::mx()
#define lmin numeric_limits<ll>::min()
int mx = 0 ;
const int MAX = 1004; 
vector<int>G[MAX];
int color[MAX];
struct node{
	int v ;
	int step ; 
};
int bfs(int source)
{
    queue<node>Q;
    node A ;
    A.v = source ;
    A.step = 0 ; 
    color[source]=1; 
    Q.push(A);
   while(!Q.empty())
   {   
   	   int u = Q.front().v;
   	   int step = Q.front().step;
   	   if(step>mx)
   	   	 mx = step ;    	  
   	   Q.pop();
   	   for(int i=0;i<G[u].size();i++)
   	   { 
   	   	   node A ;
   	   	   A.v = G[u][i] ;
   	   	   A.step = step + 1 ; 
   	   	  if(!color[G[u][i]])
            { color[G[u][i]]=1;  
            	Q.push(A);              
            }
   	   }       
   }    
}

int main()
{ 
         #ifdef _WIN32 
           freopen("input.txt", "r", stdin);
          #endif // LOCAL_USER   
geti(n);

rep(i,n-1)
{   int u,v; 
	scanf("%d %d",&u,&v);	
	G[u].push_back(v);
	G[v].push_back(u);
}
mem(color,0);
bfs(1);
int ans = 2*(n-1) - mx ;
//cout<<mx<<" ";
cout<<ans<<endl ; 
return 0 ; 
}