#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <iomanip>
#define MAXN 1010

using namespace std;

const double PI = acos(-1);
const double EPS = 1e-8;

struct point {
    double x,y;
    point() {}
    point(double x, double y) : x(x), y(y) {}

    point operator + (point p) { return point(x + p.x, y + p.y); }
    point operator - (point p) { return point(x - p.x, y - p.y); }

    bool operator < (point p) const {
        if (x != p.x) return x < p.x;
        return y < p.y;
    }
};

double dot(point a, point b) { return a.x * b.x + a.y * b.y; }
double cross(point a, point b) { return a.x * b.y - a.y * b.x; }

double arg(point a) { 
    double angle = atan2(a.y, a.x);
    if (angle < 0) angle += 2 * PI;
    return angle;
}

point rotate(point p, double a) {
    return point(p.x * cos(a) - p.y * sin(a),
                 p.x * sin(a) + p.y * cos(a));
}

int n;
point p[MAXN];
vector<point> lower,upper;

void calc_hull() {
    upper.push_back(p[0]);
    lower.push_back(p[0]);
    for (int i = 1; i < n; i++) {
        point c = p[i];
        while (upper.size() > 1) {
            point a = upper[(int)upper.size()-2];
            point b = upper.back();
            if (cross(a-b, c-b) > 0) break;
            upper.pop_back();
        }
        upper.push_back(c);
        while (lower.size() > 1) {
            point a = lower[(int)lower.size()-2];
            point b = lower.back();
            if (cross(a-b, c-b) < 0) break;
            lower.pop_back();
        }
        lower.push_back(c);
    }

    n = 0;
    for (int i = 0; i < upper.size(); i++)
        p[n++] = upper[i];
    for (int i = (int)lower.size()-2; i >= 0; i--)
        p[n++] = lower[i];
    n--;
    //note this adds leftmost point twice, p[0] and p[n]
}

double ans = 1e9;

double calc(double a) {
    double minx = 1e9;
    double miny = 1e9;
    double maxx = -1e9;
    double maxy = -1e9;
    for (int i = 0; i < n; i++) {
        point pt = rotate(p[i], a);
        minx = min(minx, pt.x);
        maxx = max(maxx, pt.x);
        miny = min(miny, pt.y);
        maxy = max(maxy, pt.y);
    }
    return max(maxx - minx, maxy - miny);
}

double goslow(double l, double r) {
    for (int i = 0; i < 70; i++) {
        double ll = (2 * l + r) / 3;
        double rr = (l + 2 * r) / 3;
        if (calc(ll) > calc(rr)) l = ll;
        else r = rr;
    }
    return calc(l);
}

int main() {
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> p[i].x >> p[i].y;
    }

    //sort(p,p+n);

    //calc_hull();

    for (double a = 0; a < PI; a += PI/201) {
        ans = min(ans, goslow(a,a+PI/201));
    }

    cout << fixed << setprecision(4) << ans << '\n';
}
