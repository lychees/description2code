#include <stdio.h>
#include <cmath>

double dp[3005];
//double dis[3005][3005];

double f[3005];
struct c{
	double x;
	double y;
}n[3005];

double d (int a, int b)
{
	return (double)sqrt ((n[a].x - n[b].x)*(n[a].x - n[b].x) + (n[a].y - n[b].y)*(n[a].y - n[b].y));
}

double cal (int node)
{
	if (dp[node] != -1) return dp[node];
	double max = -1000000000000000;
	for (int i = 1; i < node ; i++)
	{
		double temp = cal (i);
		if (temp + f[node] - d(node,i) > max) max = temp + f[node] - d(node,i);
	}

	return dp[node] = max;
}

int main ()
{
	int N;
	scanf ("%d",&N);
	for (int i = 2 ; i <= N ; i++) dp[i] = -1;
	dp[1] = f[1];
	for (int i = 1 ; i <= N ; i++){
		scanf ("%lf %lf %lf",&n[i].x, &n[i].y, &f[i]);
	}

	double ans;
	ans = cal (N);

	printf ("%lf\n",ans+f[1]);
	
	return 0;
}
