#include <iostream>
using namespace std;
#include <vector>
#include <algorithm>

int get_max_overlap(vector<int>& start_time, vector<int>& end_time)
{
	sort( start_time.begin(), start_time.end() );
	sort( end_time.begin(), end_time.end() );

	int i = 0, j = 0;	
	int max_overlap = 0;
	int current_overlap = 0;
	while( i < start_time.size() && j < end_time.size() )
	{
		if( start_time[i] < end_time[j] )
		{
			current_overlap++;
			max_overlap = max( current_overlap, max_overlap);
			i++;
		}
		else
		{
			current_overlap--;
			j++;
		}
	}
	return max_overlap;
}

int main()
{
    int t,n;
    cin >>t;
    for( int i=0; i<t; i++)
    {
    	cin>>n;
    	vector<int> st(n), en(n);
    	for(int j=0; j<n; j++)
    	{
    		cin>>st[j]>>en[j];
    	}
    	cout<<get_max_overlap(st,en)<<endl;
    }
    return 0;
}
