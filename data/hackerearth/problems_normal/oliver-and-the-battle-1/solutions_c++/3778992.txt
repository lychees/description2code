#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int mat[1005][1005];
int vis[1005][1005];
int n,m;


int bfs( int x1 , int y1)
{
	queue<pair< int , int > > q;
	q.push(make_pair(x1,y1));
	vis[x1][y1]= 1;
	int ans1 = 1;
	int x , y;
	pair< int , int > u,v;
	while(!q.empty()) {
		
		u = q.front();
		q.pop();
		
		x = u.first;
		y = u.second;
		for( int i=-1;i<=1;i++) {
			for( int j=-1;j<=1;j++) {
				if(x+i >=0 && x+i<n && y+j >=0 && y+j <m) {
				if(!vis[x+i][y+j] && mat[x+i][y+j]) {
					vis[x+i][y+j] = 1;
					
					q.push(make_pair(x+i,y+j));
					ans1++;
				//	cout<<x+i<< " "<<y+j<<" "<<ans1<<endl;
				}
				}
			}
		}
		
	}
	return ans1;
	
}
int main()
{
	
	int t;
	cin>>t;
	while(t--) {
		cin>>n>>m;
		memset(vis,0,sizeof(vis));
		memset(mat,0,sizeof(mat));
		for( int i=0;i<n;i++) {
			for( int j=0;j<m;j++) {
				cin>>mat[i][j];
			}
		}
		
		int ans = 0 , sol = 0;
		for( int i=0;i<n;i++) {
			for( int j =0;j<m;j++) {
				
				if(!vis[i][j] && mat[i][j]) {
					int hh = bfs(i,j);
				//	cout<<hh<<endl;
					ans = max(ans,hh);
					sol++;
				}
			}
		}
		cout<<sol<<" "<<ans<<endl;
	}
    return 0;
}
