#include <iostream>
#include <cstdio>
#include <queue>
#include <vector>
using namespace std;

typedef pair <int, int> ii;

const int Inf = 1000000000;
const int Maxn = 505;

int m;
vector <ii> neigh[Maxn];
int source;
int dist[Maxn];
int q;

int main()
{
    scanf("%d", &m);
    while (m--) {
    	int a, b, c; scanf("%d %d %d", &a, &b, &c);
    	neigh[a].push_back(ii(b, c));
    	neigh[b].push_back(ii(a, c));
    }
    scanf("%d", &source);
    fill(dist, dist + Maxn, Inf); dist[source] = 0;
    priority_queue <ii> Q; Q.push(ii(0, source));
    while (!Q.empty()) {
    	int v = Q.top().second, d = -Q.top().first; Q.pop();
    	if (d != dist[v]) continue;
    	for (int i = 0; i < neigh[v].size(); i++) {
    		ii u = neigh[v][i];
    		if (d + u.second < dist[u.first]) {
    			dist[u.first] = d + u.second;
    			Q.push(ii(-dist[u.first], u.first));
    		}
    	}
    }
    scanf("%d", &q);
    while (q--) {
    	int v; scanf("%d", &v);
    	if (dist[v] == Inf) printf("NO PATH\n");
    	else printf("%d\n", dist[v]);
    }
    return 0;
}
