#include<stdio.h>
#include<vector>

using namespace std;

typedef long long ll;
typedef vector<ll> vll;

const ll SZ = (1e+6);

ll l,r,k;
ll primes[SZ+2];
vll primefact[SZ+2];

ll getphi(ll val, vll &prime)
{
    ll res = val;
    for(ll i=0;i<prime.size();++i)
    {
        while(val%prime[i]==0)
            val /= prime[i];

        res = res/prime[i]*(prime[i]-1);
    }
    if(val>1)
        res = res/val*(val-1);
    return res;
}

void sieve()
{
    primes[1]=1;
    for(ll i=2;i<=SZ;++i)
    {
        if(primes[i]==0)
        {
            for(ll j=i*2;j<=SZ;j+=i)
                primes[j]=1;
        }
    }
}

int main()
{

    sieve();
    int t;
    scanf("%d",&t);

    while(t--)
    {
        scanf("%lld%lld%lld",&l,&r,&k);

        for(ll i=l;i<=r;++i)
            primefact[i-l].clear();

        for(ll i=2;i<=SZ;++i)
        {
            if(primes[i])
                continue;

            ll start = (l+i-1)/i*i;

            for(ll j=start;j<=r;j+=i)
                primefact[j-l].push_back(i);
        }

        ll ans = 0;

        for(ll i=l;i<=r;++i)
        {
            if(getphi(i,primefact[i-l])%k == 0)
            {
                //printf("%lld\t",getphi(i,primefact[i-l]));
                ans++;
            }
        }
        printf("%f\n",(float)ans/(float)(r-l+1));
    }
    return 0;
}
