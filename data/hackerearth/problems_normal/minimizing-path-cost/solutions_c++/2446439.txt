#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <string>
#include <utility>
#include <map>
using namespace std;
vector<vector<long long int> > v;
map<string,long long int> m;
///pair<long long int,long long int> p;
//long long int cs[101][101];
/*long long int dfs(long long int a,long long int b)
{
	long long int dist=1e9;
	long long int p;
	v[a].at(0).first=1;
	long long int sz=v[a].size();
	for(p=1;p<sz;p++)
	{
		if(v[a].at(p).first==b)
		{
		//	cout<<v[a].at(p).first<<"^";
			dist=min(dist,v[a].at(p).second);
			
		}
		else if(v[v[a].at(p).first].at(0).first==0)
		{
		//	cout<<v[a].at(p).first<<"-";
		//	if(cs[v[a].at(p).first][b]==0)
		//	{
				dist=min(dist,v[a].at(p).second+dfs(v[a].at(p).first,b));
		//	}
		//	else
		//	dist=min(dist,v[a].at(p).second+cs[v[a].at(p).first][b]);
		}
	}
	v[a].at(0).first=0;
	
	return dist;
} */
int main()
{
    long long int n,k,q,i,j;
    long long int d;
    string str,str1;
    cin>>n>>k;
    v.resize(n+1);
   // p.first=0;
   // p.second=0;
    for(i=0;i<=n;i++)
    v[i].resize(n+1,1e9);
    for(i=1;i<=n;i++)
    {
    	cin>>str;
    	m[str]=i;
    }
    for(i=1;i<=k;i++)
    {
    	cin>>str>>str1>>d;
    	v[m[str]][m[str1]]=d;
    	v[m[str1]][m[str]]=d;
    //	p.first=m[str];
    ///	v[m[str1]].push_back(p);
    //	p.first=m[str1];
    //	v[m[str]].push_back(p);
    }
    for(i=0;i<=n;i++)
    v[i][i]=0;
    for(j=1;j<=n;j++)
    {
    for(i=1;i<=n;i++)
    {
    for(k=1;k<=n;k++)
   		v[i][k]=min(v[i][k],v[i][j]+v[j][k]);
    }
    }
    cin>>q;
    while(q--)
    {
    	d=1e9;
    	cin>>str>>str1;
    		
    	cout<<v[m[str]][m[str1]]<<"\n";
    }
    return 0;
}
