#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("draft.inp","r",stdin)
#define OUTPUT freopen("draft.out","w",stdout)
#define FOR(i,l,r) for(auto i=l;i<=r;i++)
#define REP(i,l,r) for(auto i=l;i<r;i++)
#define FORD(i,l,r) for(auto i=l;i>=r;i--)
#define REPD(i,l,r) for(auto i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=1e5+10;

int n,x,a[N][2]={0},B[4][N<<1];
ll p2[3];
ll power(int x,int y){
    ll ans=1;
    while (y){
        if (y%2) ans=ans*x%MOD;
        x=1LL*x*x%MOD;
        y>>=1;
    }
    return ans;
}
void add(int *B,int n,int x,int v){
    while (x<=n){
        B[x]+=v;
        x+=x&-x;
    }
}
int get(int *B,int x){
    int tmp=0;
    while (x){
        tmp+=B[x];
        x-=x&-x;
    }
    return tmp;
}
int main(){
    scanf("%d",&n);
    ll ans=0;
    FOR(i,1,n<<1) {
        scanf("%d",&x);
        a[x][a[x][0]>0]=i;
    }
    FOR(i,1,n){
        FORD(j,1,0){
            ans=(ans+get(B[0],2*n)-get(B[0],a[i][j]))%MOD;
            FOR(k,1,3) ans=(ans+get(B[k],a[i][j]))%MOD;
            add(B[0],2*n,a[i][j],1);
        }
        add(B[1],2*n,1,1);add(B[1],2*n,a[i][0],-1);
        add(B[2],2*n,a[i][0],1);add(B[2],2*n,a[i][1],-1);
        add(B[3],2*n,a[i][1],1);
    }
    cout<<power(2,n-1)*(ans+MOD)%MOD;
}
