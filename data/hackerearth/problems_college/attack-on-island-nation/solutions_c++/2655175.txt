#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<queue>
#define MAX 10000000
#define pp pair<int,int>
using namespace std;
long int d[100001];
priority_queue< pp,vector<pp >,greater<pp > >Q;
vector<int>x;
vector<vector<pp > >G(100001);
int main() {
     int N,M,u,w,v,r;long long int sum;
    cin>>N>>M;
    for(int i=1;i<=N;i++)
        {
        d[i]=MAX;
        G[i].clear();
    }
    while(M--)
        {
        cin>>u>>v>>r;
        G[u].push_back(pp(v,r));
        G[v].push_back(pp(u,r));
    }    
    long int  s=1;
    d[s]=0;
    Q.push(pp(d[s],s));
    while(!Q.empty())
        {
        u=Q.top().second;        
        w=Q.top().first;
       // cout<<"vertex"<<u<<"- "<<w<<endl;
        x.push_back(Q.top().second);
        Q.pop();
        
        for(vector<pp >::iterator it=G[u].begin();it!=G[u].end();++it)
            {
            v=it->first;
            w=it->second;
         //   cout<<"adj of "<<v<<" weight from V is "<<w<<endl;
            
            if(!(find(x.begin(),x.end(),v)!=x.end())&&d[v]>w)
                {
                d[v]=w;//cout<<d[v]<<" "<<endl;
                Q.push(pp(d[v],v));
            }
        }                    
    }
  /*  for(vector<int>::iterator itr=x.begin();itr!=x.end();++itr)
        cout<<itr->first<<" ";
    cout<<endl;*/
    sum=0;
    for(int i=1;i<=N;i++)
        {
        if(d[i]!=0&&d[i]!=MAX)
            sum+=d[i];
       // cout<<d[i]<<" ";
    }
    cout<<sum;
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    return 0;
}
