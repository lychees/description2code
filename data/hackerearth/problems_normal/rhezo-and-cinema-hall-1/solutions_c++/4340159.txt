#include <bits/stdc++.h>
#define ll long long
#define MY_LONG_MAX (((1ll<<62))|((1ll<<62)-1))
#define MY_LONG_MIN (1ll<<63)
#define mod 1000000007
using namespace std;
ll int n,m,k;//n*m matrix & atleast k people should be seated
ll int dp[501][11][501][3];
ll int myfind(ll int x,ll int y,ll int z,ll int f)
{
	if(x==n)
	{
		if(z>=k)
		return 1;
		return 0;
	}
	if(dp[x][y][z][f]==-1)
	{
		ll int t1=0,t2=0,ans=0;
		//inclusion
		if((y+2)<m)
		{
			if(f==0)
			t1=myfind(x,y+2,min(z+1,k),1);
			else
			t1=myfind(x,y+2,min(z+1,k),2);
		}
		else
		{
			if(f==0)
			t1=0;
			else
			t1=myfind(x+1,0,min(z+1,k),0);
		}
		//exclusion
		if((y+1)<m)
		t2=myfind(x,y+1,z,f);
		else
		{
			if(f<=1)
			t2=0;
			else
			t2=myfind(x+1,0,z,0);
		}
		ans=(t1+t2)%mod;
		dp[x][y][z][f]=ans;
	}
	return dp[x][y][z][f];
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin>>n>>m>>k;
	ll int i,j,k1;
	for(i=0;i<=n;i++)
	{
		for(j=0;j<=m;j++)
		{
			for(k1=0;k1<=k;k1++)
			{
				dp[i][j][k1][0]=-1;//not yet been calculated - no people in a row
				dp[i][j][k1][1]=-1;//not yet been calculated - 1 person in a row
				dp[i][j][k1][2]=-1;//not yet been calculated - more than 1 person
			}
		}
	}
	ll int ans=0;
	ans=myfind(0,0,0,0);
	cout<<ans<<endl;
	return 0;
}
