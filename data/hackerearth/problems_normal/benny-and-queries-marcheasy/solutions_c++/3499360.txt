/*
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
	ABHINANDAN AGARWAL
	MNNIT ALLAHABAD
	CSE
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
#define wl(n) while (n--)
#define MOD 1000000007
//-------------
int n,q;
int A[500000+10];
struct node
{
	node *x[2];
	vector<int>m;
};
node gaand[1000000];
int poop=0;
node head;
void init(node &al)
{
	al.x[0]=al.x[1]=NULL;
	al.m.clear();
}
int ind;
void ins(node &al,int cur,int num)
{
	int bi=(((1<<cur)&num)>>cur);
	if (al.x[bi]==NULL)
	{
		al.x[bi]=&gaand[poop++];
		init(*(al.x[bi]));

	}
	(al.x[bi])->m.pb(ind);
	if (cur>0)
		ins(*(al.x[bi]),cur-1,num);

}
int isin(node &al,int l,int r)
{
	vector<int>::iterator it1,it2;
	it1=lower_bound(al.m.begin(),al.m.end(),l);
	//it2=upper_bound(al.m.begin(),al.m.end(),r);
	if (it1==al.m.end()||*it1>r)
		return 0;
	return 1;
}
int getans(node &al,int cur,int num,int l,int r)
{
	if (cur<0)
		return 0;
	int bi=(((1<<cur)&num)>>cur);
	int ret=0;

	if((al.x[!bi]!=NULL)&&isin(*(al.x[!bi]),l,r))
	{	
		//printf("%d complement \n",cur);
		ret=(1<<cur)+getans(*(al.x[!bi]),cur-1,num,l,r);
	}
	else
	{
		//printf("%d not complement \n",cur);
		ret=getans(*(al.x[bi]),cur-1,num,l,r);
	}
	//printf("for index %d , ret is %d\n",cur,ret);
	return ret;
}
int main()
{
	sc2(n,q);
	int i,j;
	init(head);
	for(i=1;i<=n;i++)
	{
		sc(A[i]);
	}
	for (i=1;i<=n;i++)
	{
		ind=i;
		ins(head,22,A[i]);

	}
	wl(q)
	{
		int l,r,d;
		sc2(l,r);sc(d);
		int ans=getans(head,22,d,l,r);
		printf("%d\n",ans);
	}


	return 0;

}