#include <bits/stdc++.h>
using namespace std;
 
int adja[1000002];
int counti[1000002];
int vis[1000002];
bool b;
int st;
int dfs(int v, int counti[], int vis[])
{
	if (vis[v] && counti[v] == 0)
	{
		b = 1;
		st = v;
		return counti[v];
	}
	if (vis[v])
		return counti[v];
	vis[v] = 1;
	int s = 0;
	if (adja[v] != -1)
		s = dfs(adja[v], counti, vis);
 
	counti[v] = s + 1;
	return counti[v];
}
void fix(int v, int counti[], int k)
{
	long long int w = 1;
	while (w <= k)
	{
		counti[v] = k;
		w++;
		v = (adja[v]);
	}
	return;
}
#if 0
#define get getchar_unlocked
#else
#define get getchar
#endif
int next_int;
char in_char;
inline int GetNextInt(){
	in_char = ' ';
	while ((in_char < '0') || (in_char > '9')){
		in_char = get();
	}
	next_int = 0;
	while ((in_char >= '0') && (in_char <= '9')){
		next_int *= 10;
		next_int += in_char - 48;
		in_char = get();
	}
	return next_int;
}
int main()
{
	long long int t, n;
	t = GetNextInt();
	while (t--)
	{
		n = GetNextInt();
 
		memset(counti, 0, sizeof(counti));
		memset(vis, 0, sizeof(vis));
		memset(adja, -1, sizeof(adja));
 
		long long int x;
		for (int i = 0; i<n; i++)
		{
			x = GetNextInt();
			adja[i] = x;
		}
 
		int ver;
		int max = -1;
		for (int i = 0; i<n; i++)
		{
			st = -1;
			b = 0;
			if (counti[i] == 0)
			{
 
				int x = dfs(i, counti, vis);
				if (b)
					fix(st, counti, counti[st]);
	
				if (x>max)
				{
					max = x;
					ver = i;
				}
			}
		}
		printf("%d\n", ver);
 
	}
}