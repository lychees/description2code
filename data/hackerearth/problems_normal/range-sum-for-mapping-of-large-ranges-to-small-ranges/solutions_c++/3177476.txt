#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007

/************************************************************************************************/
static struct IO {char tmp[1 << 10];char cur;inline char nextChar()
{ return cur = getc_unlocked(stdin); }inline char peekChar() { return cur; }
inline operator bool() { return peekChar(); }inline static bool isBlank(char c)
{ return (c < '-' && c); }inline bool skipBlanks()
{ while (isBlank(nextChar())); return peekChar() != 0; }
inline IO& operator >> (char & c) { c = nextChar(); return *this; }
inline IO& operator >> (char * buf) {if (skipBlanks()) {if (peekChar()) {*(buf++) = peekChar();
while (!isBlank(nextChar())) *(buf++) = peekChar();} *(buf++) = 0; } return *this; }
inline IO& operator >> (string & s) {if (skipBlanks()) {	s.clear(); s += peekChar();
while (!isBlank(nextChar())) s += peekChar(); }return *this; }
inline IO& operator >> (double & d) { if ((*this) >> tmp) sscanf(tmp, "%lf", &d); return *this;	}
#define defineInFor(intType) inline IO& operator >>(intType & n) { if (skipBlanks()) { \
int sign = +1; if (peekChar() == '-') { sign = -1; n = nextChar() - '0'; } else \
n = peekChar() - '0'; while (!isBlank(nextChar())) { n += n + (n << 3) + peekChar() - 48; } \
n *= sign; } return *this; }
defineInFor(int)defineInFor(unsigned int)defineInFor(long long)
inline void putChar(char c) { putc_unlocked(c, stdout); }inline IO& operator << (char c) { putChar(c); return *this; }
inline IO& operator << (const char * s) { while (*s) putChar(*s++); return *this; }
inline IO& operator << (const string & s) { for (int i = 0; i < (int)s.size(); ++i) putChar(s[i]); return *this; }
char * toString(double d) { sprintf(tmp, "%lf%c", d, '\0'); return tmp; }
inline IO& operator << (double d) { return (*this) << toString(d); }
#define defineOutFor(intType) inline char * toString(intType n) { char * p = (tmp + 30); \
if (n) { bool isNeg = 0; if (n < 0) isNeg = 1, n = -n; while (n) *--p = (n % 10) + '0', n /= 10; \
if (isNeg) *--p = '-'; } else *--p = '0'; return p; } inline IO& operator << (intType n) { return (*this) << toString(n); }
defineOutFor(int)defineOutFor(long long)
#define endl ('\n')
#define cout __io__
#define cin __io__
} __io__;
/**************************************************************************************************/

vector<int> par;

int find(int x) {
	if(par[x] != x) {
		par[x] = find(par[x]);
	}
	return par[x];
}

void merge(int a, int b) {
	int x = find(a);
	int y = find(b);
	if(x != y) {
		par[x] = y;
	}
}

int main()
{
    int t, n, q, a, b;
    cin >> t;
    while(t--) {
    	cin >> n >> q;
    	par.resize(n+1, 0);
    	long long int ans = 1, temp;
    	map<int, int> freq;
    	vector<int> subs;
    	for(int i = 1; i<=n; ++i) {
    		par[i] = i;
    	}
    	while(q--) {
    		cin >> a >> b;
    		merge(a, b);
    	}
    	
    	for(int i = 1; i<=n; ++i) {
    		int x = find(i);
    		if(freq.find(x)==freq.end()) {
    			subs.push_back(x);
    		}
    		freq[x]++;
    	}
    	
    	for(int i = 0; i<subs.size(); ++i) {
    		temp = freq[subs[i]]*(freq[subs[i]]-1)/2;
    		if(temp == 0) temp++;
    		temp %= MOD;
    		ans *= temp;
    		ans %= MOD;
    	}
    	cout << ans << endl;
    }
    return 0;
}
