#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define mod 1000000007
#define INF 1000000000
#define pb push_back
#define ff first
#define ss second
#define pii pair<ll,ll> 
#define mp make_pair
#define set(x,y) memset(x,y,sizeof(x))
#define MAXN 100005
#define PI 3.14159265358979323846

// GCD ALgorithm
ll gcd(ll a,ll b){if (a==0)return b;return gcd(b%a,a);}
// Modular Exponentiation
ll power(ll a,ll b,ll m){ll ans=1;while(b>0){if(b%2!=0){ans=(ans*a)%m;}a=(a*a)%m;b>>=1;}return ans;}
//Fast Input
inline void sf(ll *a){char c=0;while(c<33)c=getc(stdin);*a=0;while(c>33){*a=(*a)*10+c-'0';c=getc(stdin);}}

vector<ll> v,v1[1000006];
ll sum,cnt,x,y,w,vis[1000006],par[1000006],n,m,k,i,len;
pair<ll,pii> p[1000006];

ll root(ll x)
{
	while(x!=par[x])
	{
		par[x]=par[par[x]];
		x=par[x];
	}
	return x;
}

void unon(ll x,ll y)
{
	ll xx=root(x);
	ll yy=root(y);
	par[xx]=par[yy];
}

void dfs(ll x)
{
	vis[x]=1;
	for(ll i=0;i<v1[x].size();i++)
	{
		if(!vis[v1[x][i]])
			dfs(v1[x][i]);
	}
}

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);
	cin>>n>>m>>k;
	for(ll i=1;i<=n;i++)
		par[i]=i;
	set(vis,0);
	for(ll i=1;i<=m;i++)
	{
		cin>>x>>y>>w;
		v1[x].pb(y);
		v1[y].pb(x);
		p[i]={w,{x,y}};
	//	vis[x]=1;
	//	vis[y]=1;
	}
	dfs(1);
	for(ll i=1;i<=n;i++)
	{
		if(!vis[i])
		{
			cout<<"-1"<<endl;
			return 0;
		}
	}
	sort(p+1,p+m+1);
	for(ll i=1;i<=m;i++)
	{
		pair<ll,pii> pp=p[i];
		x=p[i].ss.ff;
		y=p[i].ss.ss;
		w=p[i].ff;
		if(root(x)!=root(y))
		{
			unon(x,y);
			v.pb(w);
		}
	}
	sum=0;
	len=v.size();
	for(ll i=0;i<v.size();i++)
	{
		sum+=v[i];
	}
	i=v.size()-1;
	cnt=0;
	while(sum>k && i>=0)
	{
		sum=sum-v[i]+1;
		cnt++;
		i--;
	}
	if(sum>k)
		cout<<"-1"<<endl;
	else
	cout<<cnt<<endl;
	return 0;
}