#include <cstdio>
#include <algorithm>
#include <map>
using namespace std;
const int inf=2000009;
const int mod=1e9+7;
int tree[inf];
int rnk[inf];
int cnt=0;
map<long long,int> mp;
int res;
int calc()
{
	long long sol=1,sel=2;
	int k=res;
	while(k)
	{
		if (k&1)
			sol=(sol*sel)%mod;
		k>>=1;
		sel=(sel*sel)%mod;
	}
	return sol;
}
int root(int a)
{
	return tree[a]==a?a:tree[a]=root(tree[a]);
}
int main()
{
	int n,k,a,b;
	scanf("%d%d",&n,&k);
	res=n;
	while(k--)
	{
		scanf("%d%d",&a,&b);
		a--;
		if (mp.find(a)==mp.end())
		{
			tree[cnt]=cnt;
			mp[a]=cnt++;
		}
		if (mp.find(b)==mp.end()){
			tree[cnt]=cnt;
			mp[b]=cnt++;
		}
		a=root(mp[a]),b=root(mp[b]);
		if (a!=b)
		{
			if (rnk[a]<rnk[b])
				swap(a,b);
			tree[b]=a;
			if (rnk[a]==rnk[b])++rnk[a];
			--res;
		}
		printf("%d\n",calc());
	}
}