#include<bits/stdc++.h>
using namespace std;
 string all[1048576];
 int done[1048576]={0};
int main()
{
    ios::sync_with_stdio(false);
    int N,Q,K,L;
   
    cin>>N>>K>>L>>Q;
    assert(1<=N && N<=100000 && 1<=K && K<=5 && 1<=L && L<=15 && 1<=Q && Q<=100000);
    int i,j,id,attr;
    string name;
    map<string,int> allnames;
    for(i=0;i<N;i++)
    {
        id=0;
        cin>>name;
     //   cout<<name<<endl;
        assert(name.length()>=1 && name.length()<=10);
        for(j=0;j<name.length();j++)
            assert(name[j]>='a' && name[j]<='z');
      /*  if(allnames.find(name)!=allnames.end())
        {
            cout<<" at "<<i<<endl;
            return 0;
        }*/
        assert(allnames.find(name)==allnames.end());
     
        allnames.insert(pair<string,int>(name,1));
        for(j=0;j<K;j++)
        {
            cin>>attr;
            assert(0<=attr && attr<=L);
            id=(id*(L+1))+attr;
        }
        assert(all[id].length()==0);
      /*  if(done[id]!=0)
        {
            cout<<done[id]<<" "<<i;
            return 0;
        }*/
        assert(done[id]==0);
        done[id]=i;
        all[id]=name;
    }
    while(Q--)
    {
        id=0;
        for(i=0;i<K;i++)
        {
            cin>>attr;
            id=(id*(L+1))+attr;
        }
        if(all[id].length()==0)
        {
            cout<<"You cant fool me :P";
        }
        else
        {
            cout<<all[id];
        }
        cout<<endl;
    }
    return 0;
}