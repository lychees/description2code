G = dict()
t = input()
MOD = 1000000007


def mMult(a, b):
    res = [[0, 0], [0, 0]]
    res[1][0] = (a[1][0]*b[0][0]+a[1][1]*b[1][0]) % MOD
    res[1][1] = (a[1][0]*b[0][1]+a[1][1]*b[1][1]) % MOD
    res[0][0] = (a[0][0]*b[0][0]+a[0][1]*b[1][0]) % MOD
    res[0][1] = (a[0][0]*b[0][1]+a[0][1]*b[1][1]) % MOD
    return res


def mVec(A, v):
    res = [0, 0]
    res[0] = (A[0][0]*v[0]+A[0][1]*v[1]) % MOD
    res[1] = (A[1][0]*v[0]+A[1][1]*v[1]) % MOD
    return res


def compG(n):
    mat = [[1, 1], [1, 0]]
    v = [1, 1]
    n -= 1
    while n > 0:
        if n % 2:
            v = mVec(mat, v)
        mat = mMult(mat, mat)
        n /= 2
    return v[0]


for n in range(t):
    print compG(input()-1)
