#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <ctime>
#include <list>
#include <string>
#include <map>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <iostream>
#include <bitset>
#include <sstream>
#include <iterator>
#include <numeric>

#define PI (2 *  acos(0.0))
#define eps 1e-7
#define sf scanf
#define pf printf
#define ab(a) (((a) > 0) ? (a) : -(a))

using namespace std;

vector < int > ve[100];
int cost[100];


int dfs(int a , int cnt)
{
    cost[a] = cnt;
    int len = ve[a].size();
    for(int i = 0 ; i < len ; ++i)
    {
        if(cost[ve[a][i]] == -1) dfs(ve[a][i] , cnt + 1);
    }
}



int main()
{
    int t , n , a , b;
    cin >> t ;
    cin >> n ;
    while(n--)
    {
        cin >> a >> b ;
        ve[a].push_back(b);
    }
    cin >> n ;
    while(n--)
    {
        cin >> a >> b ;
        memset(cost , -1 , sizeof(cost));
        dfs(a , 0);
        if(cost[b] == 1) cout << "Direct Connection" << endl;
        else if(cost[b] > 1) cout << "Indirect Connection" << endl;
        else cout << "No Connection" << endl;
    }
    return 0;
}



