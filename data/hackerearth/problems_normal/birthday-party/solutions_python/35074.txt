# HackerEarth - May Challenge
# Birthday Party

def issubsetsum(nums, sumval) :
    if sumval < 0 : return False

    for i in range(len(nums)) :
    	if nums[i] == sumval : return True
    
    subsum = []
    for i in range(len(nums)) : subsum.append([False] * (sumval + 1))
    for i in range(len(nums)) : subsum[i][0] = True
    for j in range(1, sumval + 1, 1) :
        if j == nums[0] : subsum[0][j] = True
        else : subsum[0][j] = False
    for i in range(1, len(nums), 1) :
        for j in range(1, sumval + 1, 1) :
            if j < nums[i] : subsum[i][j] = subsum[i - 1][j]
            else : subsum[i][j] = subsum[i - 1][j] or subsum[i - 1][j - nums[i]]
    return subsum[len(nums) - 1][sumval]


no_of_tc = input()
while no_of_tc > 0 :
	line = raw_input()
	no_of_persons = int(line.split(' ')[0])
	validsetcount = int(line.split(' ')[1])

	validset = [0] * validsetcount
	line = raw_input()
	for i in range(validsetcount) : validset[i] = int(line.split(' ')[i])

	persons = [0] * no_of_persons
	line = raw_input()
	for i in range(no_of_persons) : persons[i] = int(line.split(' ')[i])

	persons_in_family = 1
	proper_family_count = 0
	for i in range(1, no_of_persons, 1) :
		if persons[i] == persons[i - 1] : persons_in_family += 1
		else :
			if issubsetsum(validset, persons_in_family) : proper_family_count += 1
			persons_in_family = 1
	if issubsetsum(validset, persons_in_family) : proper_family_count += 1
	print proper_family_count

	no_of_tc -= 1