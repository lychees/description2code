#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
    int n;
    cin >> n;
    
    vector<int> coin;
    int number;
    
    while (cin >> number) {
    	vector<int>::iterator it = find(coin.begin(), coin.end(), number);
    	if (it == coin.end()) coin.push_back(number);
    }
    
    int coins = coin.size();
    if (coins > 0) {
    
	    long long table[n+1][coins];
	    
	    for (int i = 0; i < coins; i++) table[0][i] = 1;
	    
	    for (int i = 1; i <= n; i++) {
	    	if (i%coin[0] == 0) table[i][0] = 1;
	    	else                table[i][0] = 0;
	    }
	    
	    for (int i = 1; i < coins; i++) {
	    	for (int j = 1; j <= n; j++) {
	    		if (j < coin[i]) table[j][i] = table[j][i-1];
	    		else             table[j][i] = table[j][i-1] + table[j-coin[i]][i];
	    	}
	    }
	    
	    cout << table[n][coins-1] << endl;;
    }
    else cout << 0 << endl;
    
    return 0;
}
