#include<iostream>
using namespace std;
int t, n, res = 0;
void dfs(int i, int j, int **&arr)
{

	if (i>n || j>n || i<1 || j<1)
		return;
	arr[i][j] = 2;
	if (i == n&&j == n)
		res++;
	if (arr[i + 1][j] == 0)
		dfs(i + 1, j, arr);
	if (arr[i][j - 1] == 0)
		dfs(i, j - 1, arr);
	if (arr[i - 1][j] == 0)
		dfs(i - 1, j, arr);
	if (arr[i][j + 1] == 0)
		dfs(i, j + 1, arr);
	arr[i][j] = 0;
}
int main()
{
	cin >> t;
	while (t--)
	{
		res = 0;
		cin >> n;
		int **arr;
		arr = new int *[n + 2];
		for (int i = 0; i <n + 2; i++)
			arr[i] = new int[n + 2];
		for (int i = 1; i <= n; i++)
		{
			for (int j = 1; j <= n; j++)
				cin >> arr[i][j];
		}
		dfs(1, 1, arr);
		cout << res << endl;
	}

}
