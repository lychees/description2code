#include <iostream>
using namespace std;

int a[1000000];

int part(int a[],int l,int h)
{
	int k=l;
	while(l<h)
	{
		while(a[k]<=a[h] && k<h)
		h--;

		if(a[k]>a[h])
		{
			int t=a[k];
			a[k]=a[h];
			a[h]=t;
			k=h;
			l++;
		}

		while(a[k]>=a[l] && k>l)
		l++;

		if(a[k]<a[l])
		{
			int t=a[k];
			a[k]=a[l];
			a[l]=t;
			k=l;
			h--;
		}
	}
	return k;
}

void qsor(int a[],int l,int h)
{
	if(l<h)
	{
		int k=part(a,l,h);

		qsor(a,l,k-1);
		qsor(a,k+1,h);
	}
}



bool bs(int a[],int l,int h,int item)
{
	if(l<=h)
	{
	int m=(l+h)/2;
	if(item==a[m])
	return 1;
	else if(item<a[m])
	bs(a,l,m-1,item);
	else
	bs(a,m+1,h,item);
	}

	else
	{
		return 0;
	}
}


int main()
{
    int n,q;
    cin>>n>>q;

    for(int i=0;i<n;i++)
                cin>>a[i];

    qsor(a,0,n-1);
    
    while(q--)
    {
    	int item;
    	cin>>item;

    	if(bs(a,0,n-1,item))
    	cout<<"YES"<<endl;
    	else
    	cout<<"NO"<<endl;
    }
    return 0;
}
