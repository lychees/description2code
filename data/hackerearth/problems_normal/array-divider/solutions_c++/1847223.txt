/*
***************************************************************************************************************

							Author : Yash Sadhwani

						PATIENCE IS ABOVE PERFECTION !!!!

**************************************************************************************************************
*/
#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define sd(x) scanf("%lf",&x)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mod 1000000007
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807
#define ub(X,v) upper_bound(X.begin(),X.end(),v)
#define lb(X,v) lower_bound(X.begin(),X.end(),v)



//qsort(ww,cc,sizeof(tp),compare);
/*int compare(const void *a,const void *b){
	ll y=((((tp*)a)->w)-(((tp*)b)->w));
	if(y>0)return 1;
	else if(y==0)return 0;
	else return -1;
}

//return true if in correct positions
bool way(ii x,ii y){
	return x.first<y.first or x.first==y.first and x.second<y.second;
}

//return false if in correct positions
struct OrderBy
{
    bool operator() (ii a, ii b) { return a.S < b.S; }
};
priority_queue<ii, std::vector<ii >, OrderBy> Q;


ll modpow(ll base, ll exponent,ll modulus){
	if(base==0&&exponent==0)return 0;
	ll result = 1;
	while (exponent > 0){
		if (exponent % 2 == 1)
		    result = (result * base) % modulus;
		exponent = exponent >> 1;
		base = (base * base) % modulus;
	}
	return result;
}

#define getchar_unlocked getchar
using namespace std;
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c<'0'||c>'9'){
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return x;
}

*/


#define MAXN 510
#define MAXK 310
#define ls (node<<1)
#define rs ((node<<1)+1)
#define ii pair<int,int>
#define F first
#define S second



int N,K;

int arr[MAXN];

int sums[MAXN];

ll dp[MAXN][MAXK];



inline void ReadInput(void){
	si(N); si(K);
	for(int i=1;i<=N;i++){
		si(arr[i]);
		sums[i]=sums[i-1]+arr[i];
        //cout<<sums[i]<<" ";
	}
    //cout<<endl;
}

inline void solve(void){
	for(int i=1;i<=N;i++){
		for(int k=1;k<=K;k++){
            if(k>i)break;
            ll bar=sums[i]-sums[k-1];
            bar*=bar;
			dp[i][k]=dp[k-1][k-1]+bar;
			for(int j=i-1;j>=0 and k!=1;j--){
				if(j<k)break;
				ll foo=sums[i]-sums[j];
				foo*=foo;
				dp[i][k]=min(dp[j][k-1]+foo,dp[i][k]);
			}
		}
	}
    /*for(int i=1;i<=N;i++){
        for(int j=1;j<=K;j++){
            cout<<dp[i][j]<<" ";
        }
        cout<<endl;
    }*/
    //cout<<dp[N][K]<<endl;
	ll ans=(K*dp[N][K])-(sums[N]*1LL*sums[N]);
	cout<<ans;
}

inline void Refresh(void){
	
}

int main()
{	
	ios_base::sync_with_stdio(false);
	ReadInput();
	solve();
    return 0;
}


//A man got to have a code