// {{{ Headers
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <cassert>
#include <cctype>
#include <cmath>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

#include <algorithm>
#include <deque>
#include <functional>
#include <iterator>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <fstream>
#include <iostream>
#include <sstream>

#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;
// }}}

typedef long long int64;
const int INF = 0x3f3f3f3f;
template <class T> inline int len (const T &a) { return a.size (); }

int64
div (int64 n) {
    int64 odd = 0, even = 0;
    for (int64 i = 1; i * i <= n; i++) {
        if (n % i == 0) {
            even += i;
            even += n / i;
            if (i & 1) odd += i;
            if ((n / i) & 1) odd += (n / i);
        }
        if (i * i == n) {
            even -= i;
            if (i & 1) odd -= i;
        }
    }
    if (n & 1) return 8 * even;
    return 24 * odd;
}

int
main () {
#ifdef LOCALHOST
    freopen ("test.in", "r", stdin);
    // freopen ("test.out", "w", stdout);
#endif
    int T;
    scanf ("%d", &T);
    while (T--) {
    	// no idea
        int64 n;
        scanf ("%lld", &n);
        int64 ret = div (n);
        printf ("%lld\n", ret);
    }

    return 0;
}

