
"""
Given an array a of N integers a1, a2, a3, ... aN you have to find the longest
 alternating sub-sequence of this array .

An alternating sequence b1, b2 ... bk, k>=1 is a sequence that has the 2
following properties:
1.|b1|<|b2|<|b3|<.....<|bk|
2. The signs alternate between adjacent elements, i.e, if b1 > 0 then b2<0,
b3 >0 and so on. Alternatively, if b1<0, then b2>0, b3<0 and so on.
"""


def longestAlternateInc(A):
    N = len(A)
    T = [1 for i in xrange(N)]
    for i in xrange(1, N):
        for j in xrange(i):
            if abs(A[i]) > abs(A[j]):
                # if signs alterate
                if A[i] ^ A[j] < 0:
                    T[i] = max(T[i], T[j] + 1)
    # print T
    return max(T)


if __name__ == '__main__':
    N = input()
    A = map(int, raw_input().split())
    print longestAlternateInc(A)
