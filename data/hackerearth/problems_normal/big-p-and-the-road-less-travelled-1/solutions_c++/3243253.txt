#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e4+3;
bool vis[MAXN];
long long dp[MAXN];
vector<int> adj[MAXN],rev[MAXN];
int ar[MAXN];
stack<int> st;
void DFS(int s) {
	vis[s]=true;
	for(int i=0;i<(int)adj[s].size();i++) {
		if(!vis[adj[s][i]])
			DFS(adj[s][i]);
	}
	st.push(s);
}
int main() {
	int n;
	cin>>n;
	for(int i=1;;i++) {
		int x,y;
		scanf("%d%d",&x,&y);
		if(!x and !y)
			break;
		adj[x].push_back(y);
		rev[y].push_back(x);
	}
	memset(vis,false,sizeof(vis));
	memset(dp,0,sizeof(dp));
	DFS(1);
	int c=1;
	while(!st.empty()) {
		ar[c++]=st.top();
		st.pop();
	}
	dp[1]=1;
	for(int i=1;i<c;i++) {
		int val=ar[i];
		for(int j=0;j<(int)rev[val].size();j++)
			dp[val]+=dp[rev[val][j]];
	}
	cout<<dp[n]<<endl;
	return 0;
}