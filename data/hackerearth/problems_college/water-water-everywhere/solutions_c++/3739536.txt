#include <bits/stdc++.h>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef long long ll;

#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,it) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++) 
#define present(c,val) ((c).find(val) != (c).end()) 
#define cpresent(c,val) (find(all(c),val) != (c).end()) 
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define FOR(i, x, y) for(int i= (x); i<= (y); ++i)
#define FORR(i, y, x) for(int i= (y); i>= (x); --i)

#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define debug(var) cerr<<#var<<" = "<<(var)<<endl;
#define debugarr(var,n) cerr<<#var<<" = { ";rep(i,n) cerr<<var[i]<<" ";cerr<<"}"<<endl; 
#define debugmat(var,m,n) cerr<<#var<<" = \n";rep(i,m) {rep(j,n) cerr<<var[i][j]<<" ";cerr<<endl;}
#define sci(var) scanf("%d",&(var))
#define scll(var) scanf("%lld",&(var)) 
#define MOD ((int)1e9+7)

struct node{
	int i,j,k;
	bool operator<(const node& n1)const {
		return k>n1.k;
	}
};

int main() {
	int n;cin>>n;
	node edges[n-1];
	rep(i,n-1) cin>>edges[i].i>>edges[i].j>>edges[i].k;
	sort(edges,edges+n-1);
	vector<ii> adj[n+1];
	int q;cin>>q;
	ll ans[q];
	rep(i,q) {
		ans[i]=0;
		int m,x;cin>>m;
		while(m--) {
			cin>>x;
			adj[x].pb(ii(i,1));
		}
	}
	int par[n+1];rep(i,n+1) par[i]=i;
	rep(i,n-1) {
		node n1=edges[i];
		int p1=n1.i,p2=n1.j;
		while(p1!=par[p1]) p1=par[p1];
		while(p2!=par[p2]) p2=par[p2];
		if(p1==p2) continue;
		par[p2]=p1;
		sort(adj[p1].begin(),adj[p1].end());
		sort(adj[p2].begin(),adj[p2].end());
		int i1=0,i2=0,x1=adj[p1].size(),x2=adj[p2].size();
		while(i1<x1 && i2<x2) {
			if(adj[p1][i1].first == adj[p2][i2].first) {
				ans[adj[p1][i1].first]+=(ll)adj[p1][i1].second*(ll)adj[p2][i2].second*n1.k;
				adj[p1][i1].second+=adj[p2][i2].second,i1++,i2++;
			}
			else if(adj[p1][i1].first < adj[p2][i2].first) i1++;
			else adj[p1].pb(adj[p2][i2]),i2++;
		}
		while(i2<x2) adj[p1].pb(adj[p2][i2]),i2++;
		adj[p2].erase(adj[p2].begin(),adj[p2].end());
	}
	rep(i,q) cout<<ans[i]<<endl;
	return 0;
}