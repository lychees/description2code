#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <deque>
#include <cassert>

using namespace std;

#ifdef WIN32
	#define I64 "%I64d"
#else
	#define I64 "%lld"
#endif

typedef long long ll;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define all(s) s.begin(), s.end()
#define sz(s) (int(s.size()))
#define fname "a"
#define ms(a,x) memset(a, x, sizeof(a))
#define forit(it,s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++it)
#define MAXN 200002

int n;
vector <int> g[MAXN];
vector <int> a;
int ans;

inline void dfs(int v, int depth)
{
	ans = max(ans, depth);
	for (int i = 0; i < sz(g[v]); ++i)
	{
		int v2 = g[v][i];
		dfs(v2, depth + 1);
	}
}

int main()
{
	#ifdef LOCAL
	freopen(fname".in", "r", stdin);
	freopen(fname".out", "w", stdout);
	#endif

	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
	{
		int p;
		scanf("%d", &p);
		if (p == -1) 
		{
			a.pb(i);
			continue;
		}
		--p;
		g[p].pb(i);
	}

	for (int i = 0; i < sz(a); ++i)
		dfs(a[i], 1);

	printf("%d\n", ans);

	return 0;
}
