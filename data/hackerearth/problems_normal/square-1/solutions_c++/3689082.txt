#include <bits/stdc++.h>

using namespace std;

const int inf = 1e9 + 100501;
const int maxn = 1050;

int n;
long double x[maxn], y[maxn], best = inf;
 
bool equals(long double x, long double y) { 
    return fabsl(x-y) < 1e-9; 
}
 
long double f(long double a, long double b) {
    assert(equals(a*a + b*b, 1));
    long double mn = inf, mx = -inf;
    for(int i=0; i<n; i++) {
        long double t = x[i] * a + y[i] * b;
        mx = max(mx, t);
        mn = min(mn, t);
    }
    return mx - mn;
}
 
long double f(long double alpha) {
    long double a = cosl(alpha);
    long double b = sinl(alpha);
    long double f1 = f(a, b);
    long double f2 = f(-b, a);
    long double nb = max(f1, f2);
    if (nb < best) {
        best = nb;
    }
    return nb;
}
 
int main() { 
    scanf("%d", &n);
    for(int i=0; i<n; i++) cin >> x[i] >> y[i];
    int K = 98;
    for(int i=0; i<K+2; i++) {
        long double l = M_PI / 2 / K * i;
        long double r = l + M_PI / K;
        for(int j=0; j<150; j++) {
            long double m1 = (l * 21 + r * 20) / 41;
            long double m2 = (l * 20 + r * 21) / 41;
            if (f(m1) < f(m2)) r = m2;
            else l = m1;
        }
    }
    cout.precision(4);
    cout << fixed << best << '\n';
    return 0;
}