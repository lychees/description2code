#include<bits/stdc++.h>

using namespace std;

#define scan(x) scanf("%d",&x)
#define print(x) printf("%d\n",x)
#define scanll(x) scanf("%lld",&x)
#define printll(x) printf("%lld\n",x)


int p[100000+5];
int tree[100000*55+5];
void update(int i,int si,int sj,int q){
	if(si==sj){
		tree[i]=1;
	}
	else{
		int mid=(si+sj)/2;
		if(q<=mid){
			update(2*i,si,mid,q);
		}
		else{
			update(2*i+1,mid+1,sj,q);
		}
		tree[i]=(tree[2*i]*p[sj-mid]+tree[2*i+1])%3;
	}
}
int query(int i,int si,int sj,int qi,int qj){
	if(si==qi and sj==qj){
		return tree[i];
	}
	int mid=(si+sj)/2;
	if(qj<=mid)return query(2*i,si,mid,qi,qj);
	else if(mid+1<=qi) return query(2*i+1,mid+1,sj,qi,qj);
	else return
		(query(2*i,si,mid,qi,mid)*p[qj-mid]
		+query(2*i+1,mid+1,sj,mid+1,qj))%3;
}
int main()
{
	p[0]=1;
	for(int i=1;i<=100000;++i){
		p[i]=(p[i-1]*2)%3;
	}
	//fre;
	int N,l,r,c;
	string S;
	cin>>N>>S;
	for(int i=1;i<=N;++i){
		if(S[i-1]=='1'){
			update(1,1,N,i);
		}
	}
	int Q;
	cin>>Q;
	while(Q--){
		scan(c);
		if(c==0){
			scan(l);
			scan(r);
			l++;
			r++;
			print(query(1,1,N,l,r));
		}
		else{
			scan(l);
			l++;
			update(1,1,N,l);
		}
	}
}
