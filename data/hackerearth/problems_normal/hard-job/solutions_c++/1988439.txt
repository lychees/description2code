/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = int(1e9) + 7;
int bit[1500111];
int pos[1500111];

void update(int pos, int val) {
  for (int i = pos; i <= 1500001; i += i & -i)
    bit[i] += val;
}

int get(int pos) {
  int res = 0;
  for (int i = pos; i > 0; i -= i & -i)
    res += bit[i];
  return res;
}

void solve(int test_num) {
  int N, Q;
  cin >> N >> Q;
  int L = 500001, R = L + N;
  for (int i = 0, x; i < N; i++) {
    cin >> x;
    pos[x] = L + i;
    update(L + i, 1);
  }
  ll res = 0;
  while (Q-- > 0) {
    int x;
    char type;
    cin >> x >> type;
    const int rank = get(pos[x]);
    res += min(rank - 1, N - rank);
    update(pos[x], -1);
    if (type == 'l')
      pos[x] = --L;
    else
      pos[x] = R++;
    update(pos[x], 1);
  }
  cout << res << endl;
}

void solve() {
#ifdef AZN
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  //scanf("%d", &T);
  //cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
