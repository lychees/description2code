#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
using namespace std;
int dp[200][200],t[200][200],arr[200],col[200][200],n,k;
int mcm_dp(int l,int r){
	if(dp[l][r]!=-1)
	{	
		return dp[l][r];
	}
	if(l==r){
		return dp[l][r]=0;
	}
	int res=INT_MAX;
	int pos=l;
	for(int j=l;j<r;j++){
		int temp=mcm_dp(l,j)+mcm_dp(j+1,r);
		temp=temp+t[col[l][j]][col[j+1][r]];
		if(temp<res)
		{
			res=temp;
			pos=j;
		}
	}
	return dp[l][r]=res;
}
int main()
{
    int test,i,j;
    scanf("%d",&test);
    while(test--)
    {
    	scanf("%d%d",&n,&k);
    	for(i=0;i<n;i++){
    		scanf("%d",arr+i);
    	}
    	for(i=0;i<n;i++){
    		for(j=0;j<n;j++){
    			dp[i][j]=-1;
    		}
    	}
    	for(i=0;i<n;i++){
    		col[i][i]=arr[i];
    		for(j=i+1;j<n;j++){
    			col[i][j]=(col[i][j-1]+arr[j])%k;
			}
    	}
    	for(i=0;i<k;i++){
    		for(j=0;j<k;j++){
    			scanf("%d",&t[i][j]);
			}
    	}
    	printf("%d\n",mcm_dp(0,n-1));
    	
    }
    return 0;
}
