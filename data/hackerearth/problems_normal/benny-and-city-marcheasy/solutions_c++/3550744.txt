#include <cstdio>
#include <algorithm>

using namespace std;

const int N = 25, D = 1 << 20, inf = 1e9;
int n, m, c, curr, a[N][N], b[N][D], sol = -inf;

void dfs(int i, int c, int s)
{
    if (i > m) b[curr][c] = s; else
    dfs(i + 1, c << 1, s),
    dfs(i + 1, c << 1 | 1, s + a[curr][i]);
}

int main()
{
    scanf("%d %d %d", &n, &m, &c);
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++) scanf("%d", &a[i][j]);
    for (int i = 1; i <= n; i++) curr = i, dfs(1, 0, 0);
    for (int k = 0; k < 1 << m; k++)
    {
        int s = 0, z;
        for (int i = 0; i < m; i++) if (!(k >> i & 1)) s++;
        z =- c * s;
        for (int i = 1; i <= n; i++) z += max(b[i][k], -c);
        sol = max(sol, z);
    }
    printf("%d", sol);
    return 0;
}
