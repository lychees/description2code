def bin_search(lst, low, high, key):
    if key > lst[-1]:
        return -2
    elif key < lst[0]:
        return 0
    if low <= high:
        mid = low + (high - low) // 2
        if lst[mid] == key and (mid == len(lst) - 1 or lst[mid + 1] > key):
            return mid
        elif lst[mid] < key and (mid == len(lst) - 1 or lst[mid + 1] > key):
            return mid + 1
        elif lst[mid] < key:
            low = mid + 1
        elif lst[mid] > key:
            high = mid - 1
        return bin_search(lst, low, high, key)
    return -2


t = int(raw_input())
inp = raw_input().split()
l = [None] * t
l[0] = int(inp[0])
for i in range(1, len(inp)):
    l[i] = l[i - 1] + int(inp[i])
t = int(raw_input())
while t > 0:
    t -= 1
    q = int(raw_input())
    print(bin_search(l, 0, len(l), q) + 1)
