#include <bits/stdc++.h>
using namespace std;

int dp[2][510][510], pw[510];
const int Mod = 1000000007;

void ck(int &a, int b) {
    a += b;
    if (a >= Mod) a -= Mod;
}

int main() {
    pw[0] = 1;
    for (int i = 1; i <= 500; i++) {
        pw[i] = pw[i - 1] + pw[i - 1];
        if (pw[i] >= Mod) pw[i] -= Mod;
    }
    memset(dp, 0, sizeof(dp));
    int n, K;
    scanf("%d%d", &n, &K);
    dp[0][0][0] = 1;
    int now = 0;
    for (int i = 0; i < n; i++) {
        now = 1 - now;
        memset(dp[now], 0, sizeof(dp[now]));
        for (int j = 0; j <= K; j++) {
            for (int k = 0; k <= i; k++) {
                if (dp[1 - now][j][k] == 0) continue;
                ck(dp[now][j][k], (long long)dp[1 - now][j][k] * pw[k] % Mod);
                int dx = pw[i + 1] - pw[k];
                if (dx < 0) dx += Mod;
                ck(dp[now][j + 1][i + 1], (long long)dp[1 - now][j][k] * dx % Mod);
            }
        }
    }
    int ans = 0;
    for (int k = 0; k <= n; k++) {
        ck(ans, dp[now][K][k]);
    }
    printf("%d\n", ans);
    return 0;
}