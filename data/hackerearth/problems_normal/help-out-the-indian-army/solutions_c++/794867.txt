#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long ll;

struct CH {
	ll s;
	ll e;
};

ll maxx(ll a, ll b) {
	if(a>b) return  a;
	return b;
}

ll minx(ll a, ll b) {
	if(a<b) return  a;
	return b;
}

bool comp(CH a, CH b) {
	return a.s<b.s;
}

int main()
{
    ll N,S,E,x,p;
    cin>>N>>S>>E;
    vector<CH> arr;
    for(int i=0;i<N;i++) {
    	CH ch;
    	cin>>x>>p;
    	ch.s=x-p;
    	ch.e=x+p;
    	arr.push_back(ch);
    }
    sort(arr.begin(),arr.end(),comp);
    vector<CH> arr2;
    arr2.push_back(arr[0]);
    int j=0;
    bool flg2=false;
 	for(int i=0;i<N;i++) {
 		if(arr[i].s<=arr2[j].e) {
 			arr2[j].e=maxx(arr2[j].e,arr[i].e);
 			flg2=true;
 		} else {
 			j++;
 			flg2=false;
 			arr2.push_back(arr[i]);
 		}
 	}
 	j++;
 	//for(int i=0;i<j;i++) {
 	//	cout<<arr2[i].s<<" "<<arr2[i].e<<endl;
 //	}
 	ll sum=E-S;
 //	cout<<sum<<endl;
 	for(int i=0;i<j;i++) {
 		if(S<=arr2[i].s && E>=arr2[i].e) {
 			sum-=arr2[i].e-arr2[i].s; //cout<<sum<<1<<endl;
 		} else if(S>=arr2[i].s && E<=arr2[i].e) {
 			sum=0;	break;
 		} else if(S>=arr2[i].s && S<=arr2[i].e)  {
 			sum-=minx(arr2[i].e,E)-S; //cout<<minx(arr2[i].e,E)<<2<<endl;
 		} else if(E>=arr2[i].s && E<=arr2[i].e) {
 			sum-=E-arr2[i].s; //cout<<sum<<3<<endl;
 			break;
 		}
 	}
 	cout<<sum<<endl;
    return 0;
}
