#include <bits/stdc++.h>
using namespace std;



int root(int s,int a[])
{
	int i=s;
	while(a[i]!=i)
	{
		i=a[a[i]];
	}
	return i;
}

void uni(int s1,int s2,int a[],int size[])
{
	int root1=root(s1,a);
	int root2=root(s2,a);
	//cout<<root1<<root2<<size[root1]<<size[root2];
	if(root1!=root2)
	{
		if(size[root1]<=size[root2])
		a[root1]=root2,size[root2]+=size[root1],size[root1]=0;
		else
		a[root2]=root1,size[root1]+=size[root2],size[root2]=0;
	}
		//cout<<a[root1]<<a[root2]<<size[root1]<<size[root2];
}

bool find(int u,int v,int a[])
{
	if(root(u,a)==root(v,a))
	return true;
	return false;
}

int main()
{
    //cout << "Hello World!" << endl;
    int t;
    cin>>t;
    while(t--)
    {
    	
    	int a[1000005],size[1000005];
		vector< pair<int,int> >equ,unequ; 
    	int n,k;
    	cin>>n>>k;
    	for(int i=0;i<=n;i++)
    	a[i]=i,size[i]=1;
    	
    	for(int i=0;i<k;i++)
    	{
    		int x,y;char ch;
    		cin>>x>>ch;
    		if(ch=='=')
    		{
    		cin>>y;
    		equ.push_back(make_pair(x,y));	
    		uni(x,y,a,size);
    		}
    		else
    		{
    		cin>>ch>>y;	
    		unequ.push_back(make_pair(x,y));
    		}
    	}
    	int flag=0;
    	for(int i=0;i<equ.size();i++)
    	{
    		if(!find(equ[i].first,equ[i].second,a))
    		{
    		flag=1;	
    		cout<<"NO\n";
    		break;
    		}
    		
    	}
    	if(!flag)
    	{
    	for(int i=0;i<unequ.size();i++)
    	{
    		if(find(unequ[i].first,unequ[i].second,a))
    		{
    		flag=1;	
    		cout<<"NO\n";
    		break;
    		}
    		
    	}
    
    	}
    		if(!flag)
    	cout<<"YES\n";//cout<<a[1]<<a[2]<<a[3]<<"\n";
    }
    return 0;
}
