#include <bits/stdc++.h>
using namespace std;
#define MAXN 305
int n,m;
int a[MAXN];
int f[2*MAXN];
int job[MAXN][MAXN];
int seen[MAXN];
int match[MAXN];
bool dfs(int v,int s[],int mat[])
{
	for(int i=0;i<n;i++)
	{
		if(job[v][i]&&s[i]==0)
		{
			s[i]=1;
			if(mat[i]<0||dfs(mat[i],s,mat))
			{
				mat[i]=v;
				return true;
			}
		}
	}
	return false;
}
bool valid(int F)
{
	memset(job,0,sizeof(job));
	memset(seen,0,sizeof(seen));
	memset(match,-1,sizeof(match));
	for(int i=0;i<n;i++)
	for(int j=0;j<n;j++)
	{
		if(f[a[i]+j]<=F)
			job[i][j]=1;
	}	
	int ans=0;
	for(int i=0;i<n;i++)
	{
		memset(seen,0,sizeof(seen));
		if(dfs(i,seen,match))
			ans++;
	}	
	return (ans==n);
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	cin>>n>>m;
	for(int i=0;i<n;i++)
		cin>>a[i];
	for(int i=0;i<n+m-1;i++)
		cin>>f[i];
	int lo=0,hi=1e9;
	int ans=1e9;
	while(lo<=hi)
	{
		int mid=(lo+hi)>>1;
		if(valid(mid))
		{
			ans=mid;
			hi=mid-1;
		}
		else lo=mid+1;
	}
	cout<<ans<<endl;

	return 0;
}