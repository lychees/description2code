#include <bits/stdc++.h>

using namespace std;

#define MAX 100005
#define INF 1000000007
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define ll long long

int dp[(1<<13)][12][12], arr[12], n, cost[12];

int solve(int mask, int first, int second){
	if(dp[mask][first][second] != -1)
		return dp[mask][first][second];
	int pos = __builtin_popcount(mask), ans = INF;
	if(pos == n){
		//cout<<"hello\n";
		return 0;
	}
	for(int i=0 ; i<n ; i++)
		if(((1<<i) & mask) == 0)
			ans = min(ans, (arr[i] ^ arr[first] ^ arr[second]) * cost[pos]+ solve(mask | (1<<i), i, first));

	dp[mask][first][second] = ans;

	return ans;
}

int main(){
	int t;
	scanf("%d", &t);

	while(t--){
		scanf("%d", &n);	
		
		memset(dp, -1, sizeof(dp));
	
		for(int i=0 ; i<n ; i++)
			scanf("%d", &arr[i]);
		for(int i=0 ; i<n ; i++)
			scanf("%d", &cost[i]);
		
		int ans = INF;

		for(int i=0 ; i<n ; i++){
			for(int j=0 ; j<n ; j++){
				if(i == j)
					continue;
				ans = min(ans, solve((1<<i) | (1<<j), i, j)); 
			}
		}

		printf("%d\n", ans);
	}	

	return 0;
}