from pickle import POP
Enter_Test_Case = ""
Enter_Alice_Words = ""
Enter_Bob_Words = ""
A_value = ord('a')
Z_value = ord('z')

RESULTS = ["You lose some.", "You draw some.", "You win some."]

class WordFight():
    def __init__(self):
        self.sentence = None
        self.total = 0
    def reset(self, speak):
        self.sentence = [0]*26
        self.total = 0
        for l in speak:
            c = ord(l.lower())
            if c < A_value or c > Z_value:
                continue
            self.sentence[c - A_value] += 1
    
    def fight(self, b):
        for i in xrange(26):
            res = self.sentence[i] - b.sentence[i]
            if res > 0:
                self.total += 1
            elif res < 0:
                b.total += 1
        if self.total > 0 and b.total == 0:
            return 2
        elif self.total == 0 and b.total > 0:
            return 0
        else:
            return 1
    
def readTestCases():
    t = raw_input(Enter_Test_Case)
    return int(float(t))
def readAliceAndBodSays():
    alice = raw_input(Enter_Alice_Words)
    bob   = raw_input(Enter_Bob_Words)
    return alice, bob

def startFighting():
    t = readTestCases()
    bob = WordFight()
    alice = WordFight()
    for i in xrange(t):
        aliceSays, bobSays = readAliceAndBodSays()
        alice.reset(aliceSays)
        bob.reset(bobSays)
        result = alice.fight(bob)
        print RESULTS[result]

if __name__ == "__main__":
    startFighting()