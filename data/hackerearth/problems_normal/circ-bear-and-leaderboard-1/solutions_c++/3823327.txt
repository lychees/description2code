//      go_on
#include <bits/stdc++.h>
using namespace std;


//      LOOPS AND MEM
#define mz(a) memset(a,0,sizeof(a))
#define md(a,m,n) memset(a,-1,sizeof(a[0][0])*m*n);
#define mmin1(a) memset(a,-1,sizeof(a))
#define minf(a) memset(a,MEMSET_INF,sizeof(a));
#define f(i,a,n) for(int i=a;i<=n;++i)
#define fs(i,a,n) for(int i=a;i<n;++i)
#define fl(i,n,a) for(int i=n;i>=a;--i)


//       I/O
#define i(n) cin>>n
#define is(n) scanf("%s",n)
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define o(n) cout<<n
#define p(n) printf("%d",n)
#define pl(n) printf("%lld",n)
#define os cout<<" "
#define on cout<<"\n"


//       CONTAINERS
typedef vector <int> vi;
typedef pair<int, int> pii;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(a)  a.begin(),a.end()
//#define fv(i,v) for(auto i = v.begin();i !=v.end(); ++i)


//        DEF AND INIT
#define ll long long int
#define M 1000000007
#define eps 1e-15
#define SZ 500008
//vector<pair<int, pii> >v;
//map<string,int> MP;
//map<string,int>::iterator it;
/*
        freopen("in", "r", stdin);
        freopen("out", "w", stdout);
*/
map<ll,ll> MP;
set<ll> s;
set<ll>::iterator it;
map<ll,ll>::iterator it1;
vector< pair< ll,ll > > bit(SZ);
void update1(ll idx,ll val)
{
    while(idx<SZ)
    {
      //  o(idx);os;
        bit[idx].ff+=1;
        bit[idx].ss+=val;
        idx+=idx&(-idx);
    }
}

void update2(ll idx,ll val)
{
    while(idx<SZ)
    {
      //  o(idx);os;
        bit[idx].ff-=1;
        bit[idx].ss-=val;
        idx+=idx&(-idx);
    }
}

ll query1(ll idx)
{
    ll ans=0;
    while(idx>0)
    {
        ans+=bit[idx].ff;
        idx=idx&(idx-1);
    }
    return ans;
}

ll query2(ll idx)
{
    ll ans=0;
    while(idx>0)
    {
        ans+=bit[idx].ss;
        idx=idx&(idx-1);
    }
    return ans;
}

ll a[SZ],p[SZ],r[SZ];
int main()
{
  //  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    ll n,q,x,y,s1,s2,z;
    ll ans=0;
    i(n);i(q);
    f(i,0,q-1)
    {
        i(p[i]);i(r[i]);
        a[p[i]-1]+=r[i];
        s.insert(a[p[i]-1]);
    }
    ll j=1;
    for(it=s.begin();it!=s.end();++it)
    {
        MP[*it]=j;
        ++j;
    }
    f(i,0,500004)
    {
        bit[i].ff=0;
        bit[i].ss=0;
    }
    mz(a);
    f(i,0,q-1)
    {
        x=z=0;
        if(a[p[i]-1])
        {
            s1=query1(MP[a[p[i]-1]]);
            s2=query1(500002);
            x=a[p[i]-1]*(s2-s1+1);
      //      on;o("x: ");o(x);on;
            update2(MP[a[p[i]-1]],a[p[i]-1]);
            if(MP[a[p[i]-1]]-1)
                z=query2(MP[a[p[i]-1]]-1);
        }
        a[p[i]-1]+=r[i];
        s1=query1(MP[a[p[i]-1]]);
        s2=query1(500002);
        y=a[p[i]-1]*(s2-s1+1);
    //    on;o("y: ");o(y);on;
        update1(MP[a[p[i]-1]],a[p[i]-1]);
        if(MP[a[p[i]-1]]-1)
            ans=ans+query2(MP[a[p[i]-1]]-1)+y-x-z;
        else
            ans=ans+y-x-z;
        o(ans);on;
    }
    return 0;
}















