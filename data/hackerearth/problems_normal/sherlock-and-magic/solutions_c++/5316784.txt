#include <stdio.h>
 
typedef struct 
{
    int x;
    int y;
    int skip;
    char direc;
}magic_grid;
 
magic_grid thief[50];
 
 
int main()
{
    int test_case=0,test=0,criminal=0,i=0,j=0,num=0;
    int count=0,flag=0;
	scanf("%d",&test_case);
	if(test_case < 1)
		return 0;
                
                
  	for(test=0;test<test_case;test++)            
	{
 
		count=0;
		criminal=0;
		scanf("%d",&criminal);
		
			
 
		for(i=0;i<criminal;i++)
		{
			scanf("%d %d %c",&thief[i].x,&thief[i].y,&thief[i].direc);
			//printf("X=%d,Y=%d,Dir=%c\n",thief[i].x,thief[i].y,thief[i].direc);
 
			thief[i].x=thief[i].x*2;
			thief[i].y=thief[i].y*2;
			thief[i].skip =0;
		}	
			
			for(num=0;num <4000;num++)
			{
				for(i =0;i <criminal ; i++)
				{
				if('N' == thief[i].direc)
					thief[i].y++;
				else if ('S' == thief[i].direc)
					thief[i].y--;
				else if('E' == thief[i].direc)
					thief[i].x++;
				else 
					thief[i].x--;
				}	
				
				for(i=0;i<criminal;i++)
				{
					if(thief[i].skip == 1)
						continue;
					for(j=i+1;j<criminal;j++)
					{
						
						if((thief[i].x == thief[j].x) && (thief[i].y == thief[j].y) &&  thief[j].skip==0)
						{
							thief[j].skip = 1;
							flag = 1 ;
							count++;
						}
						
					}
					if(flag == 1)
					{
						thief[i].skip = 1;
						flag=0;
						count++;
					}
					
				}
					
			}
			printf("%d\n",criminal - count);
	}
	return 0;
}