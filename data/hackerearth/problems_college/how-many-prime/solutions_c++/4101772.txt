#include<bits/stdc++.h>
using namespace std;
bool prime[1000001];
void SieveOfEratosthenes()
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    memset(prime, true, sizeof(prime));

    for (int p=2; p*p<=1000000; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*2; i<=1000000; i += p)
                prime[i] = false;
        }
    }

}

int main()
{
    SieveOfEratosthenes();
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int left,right,n,t1,t2;
        left=1;
        scanf("%d",&n);
        right=n-1;t1=-1;t2=-1;
        while(left<right)
        {
            if(prime[left]==true&&prime[right]==true)
            {
                if(left+right==n)
                {
                   /* if(t1*t2<left*right)
                    {
                        t1=left;
                        t2=right;
                    }*/
                    t1=left;
                    t2=right;
                    right--;
                    left++;
                }
                else if(left+right>n)
                    right--;
                else
                    left++;
            }
            /*else if(left+right==n)
            {
                right--;
                left++;
            }*/
            else if(left+right>=n)
            {
                right--;
            }
            else
            {
                left++;
            }
        }
        
        printf("%d %d\n",t1,t2);
    }
    return 0;
}
