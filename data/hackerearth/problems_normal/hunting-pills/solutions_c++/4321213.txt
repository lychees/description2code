#include<bits/stdc++.h>
using namespace std;
int N,M;
vector<int>g[1009];
vector<int>grev[1009];
int cost[1009];
bool   vis[1009];
stack<int>ST;
int cnt=0;
void dfs1(int curr)
{
    vis[curr]=true;
    for(int i=0;i<(int)g[curr].size();++i)
    {
        if(!vis[g[curr][i]])
            dfs1(g[curr][i]);
    }
    ST.push(curr);
    return;
}
void dfs2(int curr)
{
    vis[curr]=1;
    //printf("vertex is %d \n",curr);
    cnt+=cost[curr];
    for(int i=0;i<(int)grev[curr].size();++i)
    {
        if(!vis[grev[curr][i]])
            dfs2(grev[curr][i]);
    }
    return;
}
int main()
{
    int tc;scanf("%d",&tc);
    while(tc--)
    {
        scanf("%d %d",&N,&M);
        for(int i=0;i<N;++i)
            scanf("%d",&cost[i]);
            for(int i=0;i<N;++i)
            g[i].clear(),grev[i].clear();
        for(int i=0;i<M;++i)
        {
            int u,v;
            scanf("%d %d",&u,&v);
            g[u].push_back(v);
            grev[v].push_back(u);
        }
        while(ST.size()>0)
        ST.pop();
        memset(vis,0,sizeof vis);
        for(int i=0;i<N;++i)
            if(!vis[i])
                dfs1(i);
        memset(vis,0,sizeof vis);
        //cout<<ST.size()<<endl;
        int ans=0;
        while(ST.size()>0)
        {
            int curr=ST.top();
            ST.pop();
            cnt=0;
            if(vis[curr]==false)
            {
               // puts("ddv");
                dfs2(curr);
                ans=max(ans,cnt);
               // puts("rer");
            }
            ans=max(ans,cnt);
        }
        printf("%d\n",ans);
    }
    return 0;
}
