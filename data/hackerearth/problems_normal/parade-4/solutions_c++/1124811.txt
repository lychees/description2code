#include <iostream>
#include <iomanip>
#include <algorithm>
#include <cmath>
#include <assert.h>
#include <stdio.h>
#include <ctime>
#include <cstdlib>
#include <utility>
#include <string.h>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>

#define inf (999999999999LL)
#define pii pair<int,int>
#define pip pair<int,pii>
#define pll pair<long long,long long>
#define eps 1e-8
 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

#define pb push_back
#define mod 1000000007
#define maxn 100100

using namespace std;

int tira[1010];

int nnext[1010];
int cor[1010];

int al[1010];
int foi[1010];

int dp[1010][1010];

main(){

		int te;
		scanf("%d",&te);
		while(te--){

			int n,m;
			scanf("%d%d",&n,&m);

			int cmax = 0;

			for(int i=0;i<n;i++) foi[i] = 0;

			for(int i=0;i<n;i++){
				int nt;
				scanf("%d%d",&nt,al+i), al[i]--;
				nnext[i] = nt-1;
				if(nt) foi[nt-1] = 1;
			}

			int maior = 0;
			for(int i=0;i<n;i++) if(!foi[i]) maior = i;

			for(int i=n-1;i>=0;i--){
				cor[i] = al[maior];
				cmax = max(cmax,cor[i]);
				maior = nnext[maior];
			}

			//debug("cores: ");
			//for(int i=0;i<n;i++) debug("%d ",cor[i]);
			//debug("\n");

			

			for(int i=0;i<=n;i++)
				dp[i][0] = 1;

			for(int k=1;k<=n;k++){

				dp[n][k] = 0;

				for(int i=0;i<1000;i++) tira[i] = 0;

				long long soma = 0;

				for(int i=n-1;i>=0;i--){
					soma += dp[i+1][k-1] - tira[cor[i]];
					soma = (soma+mod)%mod;
					//if(soma < 0)soma += mod;
					//if(soma >= mod) soma -= mod;
					tira[cor[i]] = dp[i+1][k-1];
					dp[i][k] = soma;
					//debug("dp[%d][%d] = %d\n",i,k,dp[i][k]);
					
				}

			}

			long long ans = 0;

			for(int i=1;i<=m;i++) ans = (ans + dp[0][i]) % mod;

			printf("%lld\n",ans);

		}

}
