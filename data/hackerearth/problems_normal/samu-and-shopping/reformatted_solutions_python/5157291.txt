def minCostIter():
    # Space optimized iterative version
    # Here i is the current i, j is the lastColumn selected
    dp = [0] * (3)  # denotes the last row

    for j in xrange(3):
        dp[j] = L[N - 1][j]

    for i in xrange(N - 2, -1, -1):
        T = [0] * 3
        for j in xrange(3):
            minVal = 10**9
            for k in filter(lambda x: x != j, range(3)):
                if k != j:
                    minVal = min(minVal, dp[k])
            T[j] = L[i][j] + minVal
        dp = T[:]

    return min(dp)


if __name__ == '__main__':
    for _ in xrange(input()):
        N = input()
        L = []
        for m in xrange(N):
            L.append(map(int, raw_input().split()))

        print minCostIter()
