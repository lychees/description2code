#include <iostream>
#include <vector>
#include <limits>

using namespace std;

long long neginf = numeric_limits<long long>::min();

struct Girl {
	long long f, a, calc;
};

long long readint() {
    long long result = 0;
    char ch = getchar_unlocked();
    while(true) {
        if(ch >= '0' && ch <= '9') break;
        ch = getchar_unlocked();
    }
    result = ch-'0';
    while(true) {
        ch = getchar_unlocked();
        if(ch < '0' || ch > '9') break;
        result = result*10 + (ch-'0');
    }
    return result;
}

int main() {
	int t, n;
	long long large, large2;
	t = readint();
	while(t--) {
		n = readint();
		vector<Girl> girls(n);
		long long sumf = 0, suma = 0;
		for(int i = 0; i < n; i++) {
			girls[i].f = readint();
			girls[i].a = readint();
			sumf += girls[i].f;
			suma += girls[i].a;
		}
		large = large2 = neginf;
		for(Girl &g : girls) {
			g.calc = g.f - suma + g.a;
			if(g.calc > large2) {
				if(g.calc > large) {
					large2 = large;
					large = g.calc;
				}
				else
					large2 = g.calc;
			}
		}
		cout << large + large2 + suma << endl;
	}
	return 0;
}