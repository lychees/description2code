#include<iostream>
using namespace std;

int testc, m, n;
int cx, cy, tlimit;
int grid[1005][1005], visited[1005][1005];

int issafe(int x, int y){
	if(x>=0 && x<m && y>=0 && y<n)
		return 1;
	return 0;
}
void findpath(int x, int y, int counter){
	
		if(!issafe(x, y))
			return ;
		
		counter = counter - grid[x][y];
			
		if(counter<visited[x][y])
			return ;
		if(visited[x][y] == -1 || counter>visited[x][y])	
			visited[x][y] = counter;
		
		findpath(x+1, y, counter);
		findpath(x-1, y, counter);
		findpath(x, y+1, counter);
		findpath(x, y-1, counter);
			
}

int main(){
	
	cin>>testc;
	while(testc--){
		
		cin>>m>>n;
		for(int i = 0; i<m; i++)
			for(int j =0; j<n; j++){
				cin>>grid[i][j];
				visited[i][j] = -1;
			}
		cin>>cx>>cy;
		cin>>tlimit;
		
		findpath(0, 0, tlimit);	
		
		if(visited[cx-1][cy-1] == -1)
			cout<<"NO\n";
		else cout<<"YES\n"<<visited[cx-1][cy-1]<<endl;
	}	
}