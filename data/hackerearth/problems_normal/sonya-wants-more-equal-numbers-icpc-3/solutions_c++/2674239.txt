#include <bits/stdc++.h>
int dp[105][100005];
using namespace std;
int main(){ios::sync_with_stdio(false);
    int n;
    cin >> n;
    int A[n+1];
    for(int i=1;i<=n;++i)
        cin >> A[i];
    for(int i=1;i<=n;++i){int f=0;
        for(int j=i;j<=n;++j){f+=A[j];int count=0;
            dp[j][f]=max(dp[j][f],dp[i-1][f]+1);
            for(int k=j+1;k<=n;++k){
                if(A[k]==f)
                    count++;
                    dp[k][f]=max(dp[k][f],dp[i-1][f]+count+1);


            }
        }
    }
    int ans=0;
    int index=0;
    vector<int> V;
    for(int i=0;i<100005;++i){int f=ans;
        ans=max(dp[n][i],ans);
        if(f!=ans){
            index=V.size();
            V.push_back(i);
        }
        else if(dp[n][i]==ans){
            V.push_back(i);
        }

    }
    cout << ans << endl;
    for(;index<V.size();++index){
       cout << V[index] << " ";

    }
    cout << endl;
    return 0;



}
