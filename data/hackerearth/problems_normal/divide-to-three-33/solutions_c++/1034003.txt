#include <cmath>
#include <ctime>
#include <iostream>
#include <cstring>
#include <vector>
#include<cstdio>
#include<cstdlib>
#include<set>
#include<queue>
#include<map>
#include<algorithm>
#include<sstream>
#include<bitset>
#define REP(i,n,incr) for((i)=0;(i)<(int)(n);(i)+=(incr))
#include<stack>
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define sz(x) ((int)((x).size()))
#define For(i,a,b) for(int i=(a);i<(b);i++)

using namespace std;

int getSum(int *arr,int n,int num){
    n--;
    int sum=0;
    while(num!=0){
        int x=num&1;
        if(x==1)
        sum+=arr[n];
        n--;
        num=num>>1;

    }
    return sum;
}
int getdiff(int s1,int s2,int s3){
    vector<int> v(3);
    v[0]=s1;v[1]=s2;v[2]=s3;
    sort(v.begin(),v.end());
    return v[2]-v[0];
}
int getMax(int n,int *arr){
    int limit=1<<n;
    int mxnum=(1<<n)-1;
    int diff=1<<20,set;
    For(i,0,limit){
        int s1=getSum(arr,n,i);
        //cout<<i<<" "<<s1<<endl;
        int s2=0,s3=0;
        For(j,0,limit){
            if((i&j)==0){
                s2=getSum(arr,n,j);
               // cout<<"bit"<<(mxnum&(~(i^j)))<<endl;
                s3=getSum(arr,n,(mxnum&(~(i^j))));
               // cout<<i<<" "<<j<<" "<<s1<<" "<<s2<<" "<<s3<<endl;
                int tmp=getdiff(s1,s2,s3);
                if(tmp<diff){
                    diff=tmp;
                    set=max(s1,max(s2,s3));
                }
            }

        }
    }
    return set;
    //return set;
}

int main()
{

int n;cin>>n;
int arr[n];
For(i,0,n)cin>>arr[i];
cout<<getMax(n,arr)<<endl;
}
