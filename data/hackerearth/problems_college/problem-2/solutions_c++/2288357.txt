#define _CRT_SECURE_NO_WARNINGS
//#pragma comment(linker, "/STACK:200000000")

#include <bits/stdc++.h>

using namespace std;

#define Cplusplus
//#define LOCAL
//#define FAST_INPUT

#define pb push_back
#define mp make_pair
#define y1 lalalalala
#define index lalalalalala
#define show(a, i) cout << " a[ " << i << " ] = " << a[i] << endl;
#define all(x) x.begin(), x.end()
#define vi vector<int>
#define pii pair<int, int>
#define ll unsigned long long

const int cs = 0x486A1;
const int up = 151;

int n;
vector<int> u, s;
vector<int> v[up];

void init(int n)
{
    for(int i = 1 ; i < up ; i ++)
        v[i].clear();
    fill(u.begin(), u.end(), 0);
    fill(s.begin(), s.end(), 0);
    string s;

    for(int i = 1 ; i <= n ; i ++)
    {
        cin >> s;

        for(int j = 0 ; j < s.size() ; j ++)
            if(s[j] == 'Y')
                v[i].pb(j + 1);
    }
}

void dfs(int x)
{
    for(auto i : v[x])
        if(!u[i])
            dfs(i);

    u[x] = 1;

    for(auto i : v[x])
    {
        assert(u[i]);
        s[x] += s[i];
    }

    if(s[x] == 0)
        s[x] = 1;
}
int main()
{
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif // LOCAL

#ifdef Cplusplus
    ios_base:: sync_with_stdio(0);
    cin.tie(0);
#endif // C

    u.resize(up);
    s.resize(up);
    
    cin >> n;
    
    while(cin >> n)
    {
        assert(n > 0);
        init(n);

        for(int i = 1 ; i <= n ; i ++)
            if(!u[i])
                dfs(i);

        int res = 0;

        for(auto i = 1 ; i <= n ; i ++)
            res += s[i];

        cout << res << endl;
    }

    ///cout << "Elapsed time is: " << clock() / CLOCKS_PER_SEC << endl;
    return 0;
}

int getint()
{
    char ch;
    int res = 0, neg = 1;

    while(ch > '9' || ch < '0')
    {
        ch = getchar();

        if(ch == '-')
        {
            neg = -1;
            ch = getchar();
            break;
        }
    }

    while(ch >= '0' && ch <= '9')
    {
        res = (res << 3) + (res << 1) + ch - '0';
        ch = getchar();
    }

    return res * neg;
}
