#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <iostream>
#include <sstream>
#include <algorithm>
#include <climits>
#include <string>
#include <vector>
#include <utility>
#include <map>
#include <bitset>
#include <stack>
#include <queue>
#include <set>
#define fr(a) freopen(a,"r",stdin)
#define fw(a) freopen(a,"w",stdout)
#define rep(i,a,b,c) for(int i=a;i<b;i+=c)
#define repe(i,a,b,c) for(int i=a;i<=b;i+=c)
#define reset(a) memset(a,0,sizeof(a))
#define nl printf("\n")
#define ri(a) scanf("%d",&a)
#define rll(a) scanf("%lld",&a)
#define rllu(a) scanf("%llu",&a)
#define wi(a) printf("%d",a)
#define wll(a) printf("%lld",a)
#define wllu(a) printf("%llu",a)
using namespace std;
typedef long long int ll;
typedef unsigned long long int llu;
typedef long double lf;
typedef pair<ll,ll>pii;
typedef vector<int> vi;
typedef vector<ll> vii;

struct node{
    ll t,cost,speed;
    bool operator< (const node rhs) const{
        if(t<rhs.t) return true;
        if(t>rhs.t) return false;
        if(speed>rhs.speed) return true;
        if(speed<rhs.speed) return false;
        if(cost<rhs.cost) return true;
        return false;
    }
};

ll n,d;
node peo[100007];

int main(){
    //fr("paint.txt");
    //fw("out.txt");

    cin >> n >> d;
    for(ll i=0;i<n;i++)
        cin >> peo[i].t >> peo[i].cost >> peo[i].speed;
    sort(peo,peo+n);

    ll curArea, totalCost, curSpeed, prevT;
    curArea = totalCost = 0;
    prevT = peo[0].t;
    curSpeed = 0;

    for(ll i=0;i<n;i++){
        curArea += curSpeed*(peo[i].t - prevT);

        if(curArea>=d) break;
        prevT = peo[i].t;
        if(peo[i].speed>curSpeed){
            curSpeed = peo[i].speed;
            totalCost+=peo[i].cost;
        }

        //cout << i << "\tcurArea: " << curArea << endl;
        //cout << "curSpeed: " << curSpeed << endl;

    }

    cout << totalCost << endl;

    return 0;
}




