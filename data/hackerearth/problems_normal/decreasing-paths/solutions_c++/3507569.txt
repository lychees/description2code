#include<iostream>
using namespace std;

long long N;
long long **arr;
long long **arr_np;

int mod=1000000007;

long long
NP (long long i, long long j)
{
  if (arr_np[i][j] != -1)
    return arr_np[i][j];

  long long x = 0;
  if ((i - 1 >= 0) && (arr[i - 1][j] < arr[i][j]))
    x  =  (x + 1 + NP (i - 1, j))%mod;
  if ((i + 1 < N) && (arr[i + 1][j] < arr[i][j]))
    x = (x+1 + NP (i + 1, j))%mod;
  if ((j - 1 >= 0) && (arr[i][j - 1] < arr[i][j]))
    x = (x+1 + NP (i, j - 1))%mod;
  if ((j + 1 < N) && (arr[i][j + 1] < arr[i][j]))
    x =(x+ 1 + NP (i, j + 1))%mod;

  arr_np[i][j] = x%mod;
//cout<<"np"<<i<<j<<" = "<<x<<endl;
return arr_np[i][j];
}

int
main ()
{
  cin >> N;
  arr = new long long *[N];
  arr_np = new long long *[N];

  for (long long i = 0; i < N; i++)
    {
      arr[i] = new long long[N];
      arr_np[i] = new long long[N];
    }

  for (long long i = 0; i < N; i++)
    {
      for (long long j = 0; j < N; j++)
	{
	  cin >> arr[i][j];
	  arr_np[i][j] = -1;
	}
    }

  long long ans = N*N;
  for (long long i = 0; i < N; i++)
    {
      for (long long j = 0; j < N; j++)
	{
	  ans = ans + NP (i, j);
          ans = ans%mod;
	}
    }
 cout<<ans%mod<<endl;
}

