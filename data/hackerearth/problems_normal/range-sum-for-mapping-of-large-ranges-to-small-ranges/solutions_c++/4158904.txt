#include<bits/stdc++.h>
//zone
using namespace std;
void dfs(int src, int mrk[], vector<int> v[], int &sum)
{
    mrk[src] = 1;
    sum = sum + 1;
    //cout<<sum<<endl;
    for(int i = 0 ; i < v[src].size(); i++)
    {
        if(!mrk[v[src][i]])
        {
            dfs(v[src][i],mrk,v,sum);
        }
    }
}
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
    int n;
    int k;
    cin >> n >> k;
    vector<int>grp;
    int mrk[n + 1];
    memset(mrk,0,sizeof(mrk));
    vector<int> v[n + 1];
    int x,y;
    int i;
    for(i = 0 ; i < k ; i++)
    {
        cin >>x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    int sum = 0;
    for(i = 1 ; i <= n ; i++)
    {
        sum = 0;
        if(!mrk[i])
        {
        //cout<<i<<"-->"<<endl;
        dfs(i,mrk,v,sum);
        //cout<<sum<<endl;
        grp.push_back(sum);
        }
    }
   // cout<<grp.size()<<endl;
    long long int suma = 1;
    long long int res = 1;
    for(i = 0 ; i < grp.size(); i++)
    {
    //    cout<<grp[i]<<endl;
        if(grp[i] == 1)
        {
            suma = suma * 1;
        }
        else
        {
            grp[i] = grp[i] % 1000000007;
            res = ((grp[i] * ((grp[i] - 1)))/2)%1000000007;

            suma = suma * res;
            //cout<<suma<<endl;
            suma = suma % 1000000007;
        }

    }
    cout<<suma<<endl;
    }
    return 0;
}
