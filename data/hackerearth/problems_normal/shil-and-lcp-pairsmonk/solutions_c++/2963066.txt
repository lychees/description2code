/*
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
#include <assert.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-8
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512

const int N = 1000005;

using namespace std;

int n;
vector<string> v;
vector<pair<int, int> > events;
int l[N],r[N];
long long ans[N];
long long CUR;

void remove_block(int l,int r)
{
	int span=r-l+1;
	long long pairs=1ll*span*(span-1)/2;
	CUR-=pairs;
}

void add_block(int l,int r)
{
	int span=r-l+1;
	long long pairs=1ll*span*(span-1)/2;
	CUR+=pairs;
}

int lcp(string st1,string st2)
{
	for (int i=0;i<min(st1.size(),st2.size());i++)
		if (st1[i]!=st2[i])
			return i;
	return min(st1.size(),st2.size());
}

int M;

int main(){
	//freopen("beavers.in","r",stdin);
	//freopen("beavers.out","w",stdout);
	//freopen("F:/in.txt","r",stdin);
	//freopen("F:/output.txt","w",stdout);
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	
	cin>>n;
	for (int i=1;i<=n;i++)
	{
		string st;
		cin>>st;
		v.push_back(st);
		M=max(M,(int)st.size());
	}
	
	sort(v.begin(),v.end());
	
	for (int i=0;i+1<v.size();i++)
	{
		events.push_back(make_pair(lcp(v[i],v[i+1]),i));
	}
	
	sort(events.begin(),events.end());
	reverse(events.begin(),events.end());
	
	for (int i=0;i<v.size();i++)
	{
		l[i]=i;
		r[i]=i;
	}
	
	int prev=1e6;
	
	for (int i=0;i<events.size();i++)
	{
		int cur=events[i].first;
		for (int j=cur+1;j<=prev;j++)
			ans[j]=CUR;
		prev=cur;
		int id1=events[i].second;
		int id2=id1+1;
		remove_block(l[id1],id1);
		remove_block(id2,r[id2]);
		add_block(l[id1],r[id2]);
		r[l[id1]]=r[id2];
		l[r[id2]]=l[id1];
	}
	
	for (int i=0;i<=prev;i++)
		ans[i]=CUR;
	
	for (int i=0;i<=M;i++)
		ans[i]=ans[i]-ans[i+1];
	
	for (int i=0;i<=M;i++)
	{
		if (i)
			cout<<" ";
		cout<<ans[i];
	}
	cout<<endl;
	
	return 0;
}