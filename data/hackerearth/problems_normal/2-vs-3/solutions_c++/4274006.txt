#include <iostream>
using namespace std;
#define N 100005
int sgt[N<<2];
int pos[N];
int L[N<<2],R[N<<2];
int pw(int a,int b)
{
	if(b==0) return 1%3;
	if(b%2==0) return pw(a*a%3,b/2);
	return pw(a,b-1)*a%3;
}
void recomp(int nd,int l,int r)
{
	int m = (l+r)/2;
	sgt[nd] = (sgt[nd+nd]*pw(2,r-m)%3 + sgt[nd+nd+1]%3)%3;
}
char str[N];
void build(int nd,int l,int r)
{
	L[nd] = l,R[nd] = r;
	if(l==r)
	{
		sgt[nd] = str[l]-'0';
		pos[l] = nd;
	}
	else
	{
		int m = (l+r)/2;
		build(nd+nd,l,m);
		build(nd+nd+1,m+1,r);
		recomp(nd,l,r);
	}
}
int query(int nd,int l,int r,int x,int y)
{
	if(l>=x && y>=r) return sgt[nd];
	int m = (l+r)/2;
	int ans=0;
	if(m>=x)
	{
		ans = query(nd+nd,l,m,x,y)%3;
	}
	if(y>m)
	{
		ans = ans * pw(2,min(y,r)-m)%3 + query(nd+nd+1,m+1,r,x,y);
		ans%=3;
	}
	return ans;
}
void flip(int idx)
{
	if(str[idx]=='0') str[idx]='1';
	else return;
	idx = pos[idx];
	sgt[idx]  = 1;
	while(idx>1)
	{
		idx>>=1;
		recomp(idx,L[idx],R[idx]);
	}
}
int main()
{
    int n;
    scanf("%d%s",&n,str);
    int q;
    scanf("%d",&q);
    build(1,0,n-1);
    while(q--)
    {
    	int t;
    	scanf("%d",&t);
    	if(t==0)
    	{
    		int l,r;
    		scanf("%d%d",&l,&r);
    		printf("%d\n",query(1,0,n-1,l,r));
    	}
    	else
    	{
    		int idx;
    		scanf("%d",&idx);
    		flip(idx);
    	}
    }
    return 0;
}
