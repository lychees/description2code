# making my second attempt

def rangeBitwiseAnd(m, n):
    shift = 0
    # find the common left header (or, same prefix) of m and n
    while m != n:
        m >>= 1  # shift to right by 1 bit
        n >>= 1
        shift += 1
    # then shift back to left to form the final result
    # (the remaining bits are not the same, so definitely result in 0 after AND)
    return m << shift


t = int(raw_input())
for i in range(t):
    str = raw_input()
    str = str.split()
    a = int(str[0])
    b = int(str[1])
    output = rangeBitwiseAnd(a, b)
    # for j in range (a, b+1, 1):
    # output=output&a

    print(output)
# end of program
