#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<vector>
#include<string>
#include<cstring>
#include<unordered_map>
#include<cassert>
#include<cmath>

//code by cl3488

#define dri(X) int (X); scanf("%d", &X)
#define drii(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define driii(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define pb push_back
#define mp make_pair
#define rep(i, s, t) for ( int i=(s) ; i <(t) ; i++)
#define fill(x, v) memset (x, v, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define why(d) cerr << (d) << "!\n"
#define whisp(X, Y) cerr << (X) << " " << (Y) << "#\n"
#define exclam cerr << "!!\n"
typedef long long ll;
using namespace std;
typedef pair<int, int> pii;
const ll inf = (ll)1e9 + 70;
const ll mod = 1e9 + 7;
const int maxn = 1e5 + 1000;

double p[maxn];
double ptemp[maxn];

char pp[maxn];

int main(){
	if (fopen("input.txt", "r")) freopen("input.txt", "r", stdin);
	dri(T);
	rep(Tc, 0, T){
		driii(M, N, K);
		K -= M; N--;
		if (K < 0 || K > N * M){
			cout << "0.000" << " " << "0" << "\n";
			continue;
		}
		rep(i, 0, N*M + 1){
			p[i] = 0;
		}
		p[0] = 1.0;
		rep(rr, 0, M){
			rep(i, 0, N * M + 1){
				ptemp[i] = 0.0;
				rep(roll, 0, N + 1){
					if (i - roll >= 0) ptemp[i] += (1.0 / (N + 1)) * p[i - roll];
				}
			}
			rep(i, 0, N*M + 1){
				p[i] = ptemp[i];
			}
		}

		double ans = p[K];
		
		sprintf(pp, "%.3e", ans);
		rep(i, 0, 5) cout << pp[i];
		cout << " ";
		int w = stoi(pp + 7);
		cout << w << "\n";
	}
	return 0;
}