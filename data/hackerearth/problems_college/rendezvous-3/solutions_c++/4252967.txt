#include <bits/stdc++.h> 
using namespace std;

#define rep(i,a,b) for(int i=(a);i<(b);i++)
#define ll unsigned long long int
#define M 1000000007


int parent[(int)1e6];

int get_parent(int i) {
	if (parent[i] != i) {
		parent[i] = get_parent(parent[i]);
	}
	return parent[i];
}

bool check_cycle(int u, int v) {
	if (get_parent(u) == get_parent(v)) return true;
	return false;
}

void add_node(int u, int v) {
	parent[get_parent(v)] = get_parent(u);
}

int main() {
    std::ios::sync_with_stdio(false);
    int n, m;
    cin >> n >> m;
    vector<pair<int, pair<int, int>>> g;
    rep(i, 0, m) {
    	int u, v, c;
    	cin >> u >> v >> c;
    	g.push_back(make_pair(c, make_pair(u, v)));
    }
	sort(g.begin(), g.end());
	ll count = 0, ans = 0;
	rep(i, 1, n+1) parent[i] = i;
	rep(i, 0, m) {
		if (count == n-1) break;
		auto p = g[i];
		int u, v, c;
		u = p.second.first;
		v = p.second.second;
		c = p.first;
		if (check_cycle(u, v)) continue;
		add_node(u, v);
		ans += c;
		count++;
	}
	
	cout << ans << endl;
    return 0;
}
