#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long int
#define s(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define sd(x) scanf("%lf", &x)
#define mod 1000000007
#define get getchar_unlocked

ll a[7][7] = {
                {0, 0, 1, 0, 1, 1, 0},
                {1, 0, 0, 0, 0, 0, 0},
                {0, 1, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 1, 1, 0},
                {0, 0, 0, 1, 0, 0, 0},
                {0, 0, 0, 0, 0, 1, 1},
                {0, 0, 0, 0, 0, 0, 1}
            };

void mul(ll a[7][7], ll b[7][7], ll c[7][7])
{
    int i, j, k;
    for (i = 0; i < 7; ++i) {
        for (j = 0; j < 7; ++j) {
            c[i][j] = 0;
            for (k = 0; k < 7; ++k)
                c[i][j] = (c[i][j] + a[i][k]*b[k][j])%mod;
        }
    }
}

void power(ll n, ll ans[7][7])
{
    int i, j;
    if (!n) {
        for (i = 0; i < 7; ++i) {
            for (j = 0; j < 7; ++j)
                ans[i][j] = (i == j);
        }
        return;
    }
    ll tmp[7][7];
    power(n>>1, tmp);
    mul(tmp, tmp, ans);
    if (n & 1) {
        for (i = 0; i < 7; ++i) {
            for (j = 0; j < 7; ++j)
                tmp[i][j] = ans[i][j];
        }
        mul(a, tmp, ans);
    }
}

int main()
{
    int t;
    ll n;
    s(t);
    ll ans[7][7];
    while (t--) {
        sl(n);
        if (n == 0)
            printf("1 1\n");
        else if (n == 1)
            printf("3 3\n");
        else if (n == 2)
            printf("3 7\n");
        else {
            power(n-2, ans);
            printf("%lld ", (ans[3][0]*7 + ans[3][1]*3 + ans[3][2] + ans[3][3]*3 + ans[3][4]*3 + ans[3][5]*3 + ans[3][6])%mod);
            printf("%lld\n", (ans[0][0]*7 + ans[0][1]*3 + ans[0][2] + ans[0][3]*3 + ans[0][4]*3 + ans[0][5]*3 + ans[0][6])%mod);
        }
    }
    return 0;
}
