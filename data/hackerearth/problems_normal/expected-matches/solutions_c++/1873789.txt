#include <bits/stdc++.h>

using namespace std;

int N, M;
double P[1001][1001];
double dp[2][1001][1001];
double tmp[1001][1001];

int main()
{
    int TEST;
    scanf("%d", &TEST);
    while(TEST--)
    {
        scanf("%d%d", &N, &M);
        for(int i=1; i<=N; i++)
            for(int j=1; j<=M; j++)
                scanf("%lf", P[i]+j);
        double ans=0.0;
        for(int t=0; t<2; t++)
        {
            memset(dp, 0, sizeof dp);
            for(int i=1; i<=N; i++)
                for(int j=1; j<=M; j++)
                {
                    if(i==1)
                    {
                        if(j==1)
                        {
                            dp[0][i][j]=P[i][j];
                            dp[1][i][j]=1.0-P[i][j];
                        }
                        else
                        {
                            dp[0][i][j]=dp[0][i][j-1]*P[i][j];
                            dp[1][i][j]=dp[0][i][j-1]*(1.0-P[i][j]);
                        }
                    }
                    else if(j==1)
                    {
                        dp[0][i][j]=dp[1][i-1][j]*P[i][j];
                        dp[1][i][j]=dp[1][i-1][j]*(1.0-P[i][j]);
                    }
                    else
                    {
                        dp[0][i][j]=(dp[0][i][j-1]+dp[1][i-1][j])*P[i][j];
                        dp[1][i][j]=(dp[0][i][j-1]+dp[1][i-1][j])*(1.0-P[i][j]);
                    }
                }
            for(int i=1; i<=N; i++)
                ans+=dp[0][i][M]*(i+M-1);
            for(int i=1; i<=N; i++)
                for(int j=1; j<=M; j++)
                    tmp[i][j]=1.0-P[i][j];
            for(int i=1; i<=N; i++)
                for(int j=1; j<=M; j++)
                    P[j][i]=tmp[i][j];
            swap(N, M);
        }
        printf("%.6f\n", ans);
    }
    return 0;
}
