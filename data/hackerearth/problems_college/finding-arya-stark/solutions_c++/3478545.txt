#include <bits/stdc++.h>

#include<vector>
#include<iostream>
#include<stdio.h>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<math.h>
#include<cstdlib>
#include<ctime>
#include<cstring>
#include<climits>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

#define forn(i, n) for (int i = 0; i < int(n); i++)
#define lli long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<lli,lli>
#define pb push_back

const double EPS = 1e-24;
const lli mod = 1000000007ll;
const double PI = 3.14159265359;
int INF = 2147483645;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;
typedef vector< int > vi;
typedef vector< vi > vvi;
vvi gr;
vi visit;
vi depth;
vector< pi > tim;
int timer=0;
void dfs(int i,int dpth){
int n = gr[i].size();
visit[i]=1;
tim[i].first=timer;
depth[i]=dpth;
for(int j=0;j<n;j++){
	if(!visit[gr[i][j]])
		{
			timer++;
			dfs(gr[i][j],dpth+1);
		}
	}
tim[i].second = timer;
} 
int main()
{
ios::sync_with_stdio(false);	
cin.tie(NULL);
int n,a,b,q,c;
scanf("%d",&n);
gr.resize(n+1);
tim.resize(n+1);
depth.resize(n+1);
visit.resize(n+1);
for(int i=0;i<n-1;i++){
	scanf("%d %d",&a,&b);
	gr[a].pb(b);
	gr[b].pb(a);
}
dfs(1,0);
scanf("%d",&q);
for(int i=0;i<q;i++){
	scanf("%d %d %d",&c,&b,&a);
	if(!c){
		a=a^b;
		b=a^b;
		a=a^b;
	}
	if(tim[b].first>=tim[a].first && tim[b].second<=tim[a].second)
		printf("YES %d\n",depth[b]-depth[a]+1);
	else
		printf("NO\n");
}
}
  
           
