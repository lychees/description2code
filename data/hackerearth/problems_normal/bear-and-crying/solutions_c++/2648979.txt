#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
 
#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)
 
#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<ll>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
 
#define GI(x)     scanf("%d",&x)
 
#define FOR(i,a,b)      for(int i=(int)(a);i<(int)(b);i++)
#define RFOR(i,a,b)     for(int i=(int)(b)-1;i>=(int)(a);i--)
 
#define MOD       1000000007
#define EPS       1E-10
#define INF       1000000000000000
#define MAXN      100005
#define PI  acos(-1)
 
#define CASE(x)   cout << "Case #" << x << ": ";

ll power(ll a,ll n)
{
    ll p;
    if(n==0)
        return 1;
    if(n%2==0)
    {
        p=power(a,n/2);
        return (p*p)%MOD;
    }
    else
        return (a*power(a,n-1))%MOD;
}

int main()
{
	string s;
	ll ans, p, cnt[MAXN], sum[MAXN];
	vector <ll> v;
	cin >> s;
	if (s[0] == '_')
		cnt[0] = 1;
	else
		cnt[0] = 0;
	for (ll i = 1; i < (ll)s.size(); i++)
	{
		if (s[i] == '_')
			cnt[i] = cnt[i - 1] + 1;
		else
			cnt[i] = cnt[i - 1];
	}
    for (ll i = 0; i < (ll)s.size(); i++)
	{
		if (s[i] == ';')
		{
		    v.pb(i);
		}
	}
	ll len = sz(v);
	sum[len - 1] = 0;
	for (ll i = len - 2; i >= 0; i--)
    {
		p = cnt[v[i + 1]] - cnt[v[i]];
		sum[i] = (power(2, p) * (1 + sum[i + 1] + len - i - 2)) % MOD - (len - i - 1);
	}
	for (ll i = 0; i < len; i++)
		ans = (ans + sum[i]) % MOD;
	cout << ans << endl;
	return 0;	
}
