#include <bits/stdc++.h>
using namespace std;
long long composite[1000004];
	bool ht[1000004];
	long long phi[1000004];
	long long ans[1000004];
int main() {
	// your code goes here\
	ios::sync_with_stdio(false);
		int i,j;

	memset(ht,0,sizeof(ht));
	
            for(i=0;i<=1000003;++i)
                phi[i] = i;


            for(i=2;i<=1000003;++i)
            {
                    if(composite[i]==0)
                    {
                            phi[i]= i-1;

                            for(j=2*i;j<=1000003;j=j+i)
                            {
                                    composite[j]=1;
                                    phi[j]= (phi[j]/i)*(i-1);

                            }
                    }

            }
				
			for(int x=0;x<=1000003;x++){
				if(ht[phi[x]]==1){
					phi[x] = 0;	
				}
				else{
					ht[phi[x]] = 1;
				}
			}
			int index = 0,y;
			for(y=0;y<=1000003;y++){
				while(index <= phi[y]){
					ans[index++] = y;
				}
			}
			int t;
			cin >> t;
			while(t--){
				int n;
				cin >> n;
				long long sum = 0;
				while(n--){
					long long inp;
					cin >> inp;
					 if(inp >= 999983)
					 sum += ans[index-1];
					 else
					 sum += ans[inp];
				}
				
				cout << sum << endl;
			}
	return 0;
}