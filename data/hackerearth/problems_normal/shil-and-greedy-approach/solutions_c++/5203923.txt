#include <bits/stdc++.h>
using namespace std;
int vis[10000011];
int n,s0,s1;
#define mp make_pair
#define pii pair<int,int>
void BFS(int in)
{
	queue<pair<int,int> > q;
	q.push(mp(in,0));
	//cout << q << "  " << step << endl;
	while(!q.empty())
	{
		
		pii tp = q.front();q.pop();
		if(vis[tp.first])
			continue;
		vis[tp.first]=true;
		//cout << tp.first << "  " << tp.second << endl;
		if(tp.first ==s1 || tp.first ==s0)
			{
				cout << tp.second;
				return;
			}
		int i=0,c;
		for(i=0;i<n-1;i++)
		{
			c = tp.first^(1<<i)^(1<<(i+1));
			if(!vis[c])q.push(mp(c,tp.second+1));
		}
		for(i=0;i<n-2;i++)
		{
			c = tp.first^(1<<i)^(1<<(i+1))^(1<<(i+2));
			if(!vis[c])q.push(mp(c,tp.second+1));
		}
	}
}
int main()
{
    string s;
    cin >> n;
    cin >> s;

    memset(vis,0,sizeof(vis));
	
	int in=0;
    for(int i=0;i<n;i++)
    {
    	if( s[i]=='W' )
    		in += 1<<(n-i-1);
    }
    s1 = (1<<n) -1;
    s0 = 0;
    
    BFS(in);
    //cout << min(steps[s0],steps[s1]);
    return 0;
}
