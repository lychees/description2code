#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;

int const NN = 4e5 + 5;

ll const MAX = 1000000000000000000ll;

ll H[NN], L[NN], T[NN];

ll MX(ll i, ll l, ll r, ll x, ll y){
    if(x > r or y < l)
        return -MAX;
    if(x <= l and r <= y)
        return T[i];
    
    ll m = (l + r)>>1;
    return max(MX(2*i, l, m, x, y), MX(2*i+1, 1+m, r, x, y));                        
}

void UP(ll i, ll l, ll r, ll idx, ll val){
    if(idx > r or idx < l)
        return;
    if(l == r)
        T[i] = max(T[i], val);    
    else                 {
        ll m = (l + r)>>1;
        UP(2*i, l, m, idx, val);
        UP(1 + 2*i, 1+m, r, idx, val);        
        T[i] = max(T[2*i], T[1+2*i]);
    }
}

int main(){
    ll n;
    scanf("%lld",&n);
    map<ll,ll> mm;
    
    ll ans = -MAX;
    
    for(ll i=1;i<=n;++i)
        scanf("%lld%lld",&H[i],&L[i]),mm[L[i]], ans = max(ans, H[i]);
        
    ll val = 1;
    for(map<ll,ll>::iterator it = mm.begin(); it != mm.end(); ++it){
        it->second = val++;    
    }
    for(ll i=1;i<=n;++i)
        L[i] = mm[L[i]];
        
    memset(T, 0, sizeof T);   
    
    for(ll i=1;i<=n;++i){
        ll pre = MX(1, 1, n, 1, L[i]);
        ll val = pre + H[i];
        ans = max(ans, val);
        UP(1, 1, n, L[i], val);
    }
    printf("%lld\n",ans);
    return 0;
}