//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000007
#define INF 2000000000
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

const int N=1e6+10;
ll m[N][2]={{0}},freq[N]={0};

ll solve(int N,string s,char ch)
{ 
  ll ans=0;
  int d;
  for(int i=0;s[i];i++)
  {
    if(i==0)
    {
      if(s[i]==ch)
      freq[i]=1;
      else
      freq[i]=0;
      if(freq[i]>=N)
      {
        d=freq[i]-N;
        if(s[i]!=ch)
        {
          ans+=m[d][0];
          ans++;
        }
        else if ( s[i]==ch && N!=0)
        {
          ans+=m[d][0];
          ans++;
        }
      }
      if(s[i]==ch)
      m[freq[i]][1]++;
      else
      m[freq[i]][0]++;
      
    }
    else
    {
      if(s[i]==ch)
      freq[i]=freq[i-1]+1;
      else
      freq[i]=freq[i-1];
      if(freq[i]>=N)
      {
        d=freq[i]-N;
        if(s[i]!=ch)
        {
          ans+=m[d][0];
          ans++;
        }
        else if ( s[i]==ch && N!=0)
        {
          ans+=m[d][0];
          ans++;
        }
      }
      if(s[i]==ch)
      m[freq[i]][1]++;
      else
      m[freq[i]][0]++;
    }
  }
  return ans;  
}

int main()
{
  int t,M,N;
  si(t);
  while(t--)
  { 
    memset(m,0,sizeof(m));
    si(M);
    si(N);
    string s;
    cin>>s;
    char ch='R';
    pl(solve(M,s,ch));
    memset(m,0,sizeof(m));
    ch='K';
    pl(solve(N,s,ch));nl;
  }
}