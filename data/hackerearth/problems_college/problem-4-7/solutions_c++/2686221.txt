#include<stdio.h>
#include<stdlib.h>      //malloc
#include<string.h>      //memset
#include<stdbool.h>
#include<math.h>
#include<iostream>
#include<cstdio>
#include<vector>
#include<queue>
#include<algorithm>     //sort()
#include<cmath>         //abs()
#include<set>
using namespace std;
#define MOD 1000000007
#define SIZE 100005
#define dump(x) printf(#x" = %lld\n",x);
#define INF 200005
typedef long long int ll;
#define max(x,y) ((x) > (y) ? (x) : (y))
#define min(x,y) ((x) < (y) ? (x) : (y))
#define abs(x) ((x) < 0 ? (-(x)) : (x))
#define CONTEST 1
#define EPSILON 8.33e-3
#define LIMIT 5000000
ll scan(void){
    int n=0;
    bool flag = false;
    char ch = getchar_unlocked();
    while((ch<'0'||ch>'9') && ch!='-')
        ch = getchar_unlocked();
    if(ch=='-'){
        flag = true;
        ch = getchar_unlocked();
    }
    while(ch>='0'&&ch<='9'){
        n = (n<<3)+(n<<1)+ch-'0';
        ch = getchar_unlocked();
    }
    if(flag)
        n = -n;
    return n;
}
void print(ll n){
    int i=0;
    char num[20];
    do{
        num[i++] = n%10+'0';
        n/=10;
    }while(n);
    i--;
    while(i>=0)
        putchar_unlocked(num[i--]);
    putchar_unlocked('\n');
}
int main(void){
    ll n,m,i;
    n=scan();m=scan();
    char s[SIZE];
    scanf("%s",s);
    int points[26],points2[26][26];
    for(i=0;i<26;i++)
        points[i] = 1;
    while(m--){
        char x[3];
        scanf("%s",x);
        int p ;
        p = scan();
        if(strlen(x)==1){
            points[x[0]-'a'] = p;
        }else{
            points2[x[0]-'a'][x[1]-'a'] = p;
        }
    }
    ll dp[SIZE] = {0};
    dp[1] = points[s[0]-'a'];
    for(i=2;i<=n;i++){
        char ch = s[i-1];
        char prev = s[i-2];
        dp[i] = max(dp[i-1]+points[ch-'a'], points2[prev-'a'][ch-'a']+dp[i-2]);
    }
    printf("%lld\n",dp[n]);
    return 0;
}