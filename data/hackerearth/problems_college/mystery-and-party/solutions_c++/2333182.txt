#include <iostream>
#include <algorithm>
using namespace std;

int swap(int ar[], int i, int j) {
	int temp = ar[i];
	ar[i] = ar[j];
	ar[j] = temp;
}

int quickfind(int ar[], int left, int right, int e) {
	int pivot = ar[right];
	int middle = left;
	for (int i = left; i < right; i++) {
		if (ar[i] < pivot) swap(ar, i, middle++);
	}
	swap(ar, right, middle);
	if (middle == e) return ar[middle];
	else if (middle < e) return quickfind(ar, middle+1, right, e);
	else if (middle > e) return quickfind(ar, left, middle-1, e);
}

int main()
{
    int tests;
    cin >> tests;
    
    while (tests-- > 0) {
    	int n, k;
    	cin >> n >> k;
    	
    	int ar[n];
    	for (int i = 0; i < n; i++) cin >> ar[i];
    	
    	//sort(ar, ar+n);
    	
    	cout << quickfind(ar, 0, n-1, k-1) << endl;
    }
    return 0;
}
