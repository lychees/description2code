#include <iostream>
#include <cstdio>
#include <cmath>
#include <map>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <deque>
#include <string>
#include <set>
#include <limits.h>
#include <stdlib.h>
#include <string.h>

#define inp(x) scanf("%d",&x)
#define inp_l(x) scanf("%lld",&x)
#define inp_d(x) scanf("%lf",&x)
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define MAX 100000

using namespace std;

typedef long long int ll;
typedef vector <int> VI;
typedef vector <long long int> VLL;
typedef pair<int,int> PI;
typedef pair<ll,ll> PLL;

ll mod(ll x) {
	return ((x % MOD) + MOD) % MOD;
}

void update(ll *cnt, int x, ll val) {
	for( ; x <= MAX; x += x & (-x)) {
		cnt[x] = mod(cnt[x] + val);
	}
}

ll findCount(ll *cnt, int pos) {
	ll ans = 0ll;

	for(; pos > 0; pos -= pos & (-pos)) {
		ans = mod(ans + cnt[pos]);
	}

	return ans;
}

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(0);

	int n, i;
	cin >> n;

	int a[n];

	ll cnt[100001], dp[100001], cnt1[100001];

	for(i = 0; i < n; i++) {
		cin >> a[i];
		dp[i] = 0ll;
	}

	for(i = 0; i <= 100000; i++) {
		cnt[i] = cnt1[i] = 0ll;
	}

	ll ans = 0ll;

	for(i = 0; i < n; i++) {
		ll count1 = 1 + findCount(cnt, a[i] - 1), count2 = 1 + findCount(cnt1, MAX) - findCount(cnt1, a[i]);
		count1 = mod(count1);
		count2 = mod(count2);

		update(cnt, a[i], count2);
		update(cnt1, a[i], count1);

		ans = mod(ans + count1 + count2 - 1);
	}

	cout << mod(ans - n) << endl;

	return 0;
}

