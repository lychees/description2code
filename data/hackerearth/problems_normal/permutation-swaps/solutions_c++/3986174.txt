#include<bits/stdc++.h>
using namespace std;
int parent[100003];
int rank1[100003];
int find1(int x)
{
    if(parent[x]==x)
        return x;
        parent[x]=find1(parent[x]);
        return parent[x];

}
void union1(int x,int y)
{
    int px=find1(x);
    int py=find1(y);
    if(rank1[px]>rank1[py])
    {
        parent[py]=px;
    }
    else if(rank1[px]<rank1[py])
    {
        parent[px]=py;
    }
    else
    {
        parent[px]=py;
        rank1[py]++;
    }
}
int main()
{
    int t,n,m,arr1[100003],arr2[100003],a,b;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        int i;
        for(i=1;i<=n;i++)
        {
            scanf("%d",&arr1[i]);
            parent[i]=i;
        }
        for(i=1;i<=n;i++)
        {
            scanf("%d",&arr2[i]);
            rank1[i]=0;
        }
        for(i=0;i<m;i++)
        {
            cin>>a>>b;
            union1(arr1[a],arr1[b]);
        }
        int ans=0,flg=0;
        for(i=1;i<=n;i++)
        {
            if(arr1[i]!=arr2[i])
            {
                if(find1(arr1[i])!=find1(arr2[i]))
                {
                    flg=1;
                    break;
                }
            }
        }
        if(flg==0)
            cout<<"YES"<<endl;
        else
            cout<<"NO"<<endl;
    }
return 0;
}
