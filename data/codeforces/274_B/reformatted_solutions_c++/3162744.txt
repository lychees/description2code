#include <algorithm>
#include <map>
#include <math.h>
#include <queue>
#include <set>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <vector>
using namespace std;
typedef long long ll;

const int inf = 1 << 29;

#define N 100010

vector<int> e[N];
ll ans, val[N];
ll U[N], D[N];
void dfs(int u, int pre) {
  for (int i = 0; i < (int)e[u].size(); i++) {
    int v = e[u][i];
    if (v == pre)
      continue;
    dfs(v, u);
    U[u] = max(U[u], U[v]);
    D[u] = max(D[u], D[v]);
  }
  val[u] += U[u] - D[u];
  if (val[u] < 0)
    U[u] -= val[u];
  else
    D[u] += val[u];
}
int main() {

  int n, x, y;
  scanf("%d", &n);
  for (int i = 1; i < n; i++) {
    scanf("%d%d", &x, &y);
    e[x].push_back(y);
    e[y].push_back(x);
  }
  for (int i = 1; i <= n; i++) {
    scanf("%d", &x);
    val[i] = x;
  }
  dfs(1, 1);
  printf("%I64d\n", U[1] + D[1]);
}
