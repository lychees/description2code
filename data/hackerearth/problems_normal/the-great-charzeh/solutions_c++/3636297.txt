#include <bits/stdc++.h>
using namespace std;

vector<int> ch[305];
int match[305];
int a[305], f[605];
bool vis[305];
int n, m;

bool dfs(int at)
{
	if (vis[at]) return false;
	vis[at] = true;
	for (int u: ch[at]) if (match[u] == -1 || dfs(match[u]))
	{
		match[u] = at;
		return true;
	}
	return false;
}

bool can(int val)
{
	for (int i = 0;i < n;i++) ch[i].clear(), match[i] = -1;
	for (int i = 0;i < n;i++) for (int j = 0;j < n;j++) if (f[j+a[i]] <= val)
		ch[i].push_back(j);
	for (int i = 0;i < n;i++)
	{
		for (int j = 0;j < n;j++) vis[j] = false;
		if (dfs(i)) continue;
		return false;
	}
	return true;
}

int main()
{
	scanf("%d%d", &n, &m);
	for (int i = 0;i < n;i++) scanf("%d", a+i);
	for (int i = 0;i < n+m-1;i++) scanf("%d", f+i);
	int lo = 0, hi = 1000000005;
	while (lo+1 < hi)
	{
		int mid = (lo+hi) >> 1;
		if (can(mid)) hi = mid;
		else lo = mid;
	}
	printf("%d\n", hi);
	return 0;
}
