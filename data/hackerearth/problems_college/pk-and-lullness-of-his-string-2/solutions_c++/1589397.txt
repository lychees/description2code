#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
typedef long long ll;
ll f[100005];
void fact()
{
ll i=0;
f[0]=1;
for(i=1;i<100001;i++)
{
f[i]=(f[i-1]*i)%mod;
}
}
ll power(ll a, ll b)
{
ll x=1,y=a;
while(b > 0)
{
if(b%2 == 1)
{
x=(x*y);
if(x>mod) x%=mod;
}
y = (y*y);
if(y>mod) y%=mod;
b /= 2;
}
return x;
}
 
 
ll InverseEuler(ll n)
{
return power(n,mod-2);
}
 
ll C(ll n, ll r)
{
return (f[n]*((InverseEuler(f[r]) * InverseEuler(f[n-r])) % mod)) % mod;
}
 
int main(){
  ll t,i,n;
  char s[100002];
  ll f[100001],b[100001];
  fact();
  scanf("%lld",&t);
  while(t--){
    scanf("%s %lld",s,&n);
    ll lcn=0;       
    for(i=0;s[i]!='\0';i++){
       if(s[i]=='l')
         lcn++;
       f[i]=lcn;
    }
    i--;
    lcn=0;
    for(;i>=0;i--){
       if(s[i]=='l')
         lcn++;
       b[i]=lcn;
    }    
    ll ans=0;
    for(i=0;s[i]!='\0';i++){
        if(s[i]=='u' && f[i]>=n/2 && b[i]>=n/2)
             ans=(ans+(C(f[i],n/2)*C(b[i],n/2))%mod)%mod;
    }
    printf("%lld\n",ans%mod);
 }
 return 0;
} 