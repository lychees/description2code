#include <stdio.h>
#include <math.h>

const long MAX = 1001;
long long gcdArr[MAX][MAX]={0};
long long dp[MAX][MAX][2]={0};
long long play(long long A,long long B,int chance);
long long gcdr ( long long a, long long b );
void init_gcdArr(long long len);
int res[MAX]={0};
int main()
{
    long long T,A,B;
	scanf("%lld",&T);
	init_gcdArr(T);
	for(long long i=0;i<T;i++)
	{		
		scanf("%lld",&A);
		scanf("%lld",&B);
		if(A==1 && B==1)
		{
			printf("Draw\n");
			continue;
		}
		if(!play(A,B,0))
			printf("Arjit\n");
		else
			printf("Chandu Don\n");						
		
	}
	
    return 0;
}
void init_gcdArr(long long len)
{
	for(long long i=1;i<=len;i++)
		for(long long j=1;j<=len;j++)
		{
			if(gcdArr[i][j]==0)
			{
				gcdArr[i][j]=gcdArr[j][i]=gcdr(i,j);
			}
		}
}
long long play(long long A,long long B,int chance)
{
	if(dp[A][B][chance]!=0)
		return dp[A][B][chance];
	if(A == 1)
	{		
		return dp[A][B][chance]=1;
	}
	if(B == 1)
	{
		return dp[A][B][chance]=0;
	}
	
	if(chance)
	{
		if(gcdArr[A][B]>1)
		{			
			return dp[A][B][chance] = play(A/gcdArr[A][B],B,chance^1) || play(A-1,B,chance^1);
		}
		else
		{
			return dp[A][B][chance] = play(A-1,B,chance^1);
		}
	}
	else
	{
		if(gcdArr[A][B]>1)
		{			
			return dp[A][B][chance] = play(A,B/gcdArr[A][B],chance^1) && play(A,B-1,chance^1);
		}
		else
		{
			return dp[A][B][chance] = play(A,B-1,chance^1);			
		}
	}
	
}
long long gcdr ( long long a, long long b )
{
  if ( a==0 ) return b;
  return gcdr ( b%a, a );
}  	
		