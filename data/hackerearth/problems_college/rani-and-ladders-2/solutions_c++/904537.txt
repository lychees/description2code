#include<iostream>
#include<vector>
#include<queue>
#define INF 1e9
#include<map>
using namespace std;
int main()
{
	  int t,n,e,a,b,i,j;
	  cin>>t;
	  while(t--)
	  {
  		  cin>>n;
       vector<int> ad[n+1];
       cin>>e;
		map<int,int> lad;
	       while(e--)
         {
         	  cin>>a>>b;
         	  ad[a].push_back(b);
         	lad[a]=1;
		 }
         int color[n+1],dist[n+1];
         for(i=0;i<=n;i++)
         {
         	 color[i]=-1;
         	 dist[i]=INF;
         }
          for(i=1;i<=n;i++)
            {
            	  if(ad[i].size()==0)
            	  {
  	            	  for(j=i+2;j<=i+12 && j<=n;j++)
  	            	   ad[i].push_back(j);

  	            }
            }
         int s=1;
         color[s]=0;
         dist[s]=0;
         queue<int> q;
         q.push(s);
         while(!q.empty())
          {
          	int u=q.front();
          	   q.pop();
          	  if(color[u]==1)
          	  continue;
          	  for(i=0;i<ad[u].size();i++)
          	    {
          	    	   int v=ad[u][i];
    	          	  if(color[v]==-1)
    	          	     {
     	          	    	  color[v]=0;
     	          	    	  dist[v]=dist[u];
     	          	    	  if(lad.count(u)==0)
     	          	    	  	dist[v]+=1;
     	          	    	  q.push(v);
     	          	    }
    	          }
    	          color[u]=1;
          }
        cout<<dist[n]<<endl;
  	}
  	return 0;
}