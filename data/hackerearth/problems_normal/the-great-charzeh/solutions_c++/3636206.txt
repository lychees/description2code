#include<stdio.h>
#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
#include<memory.h>
#include<map>
#include<set>
#include<queue>
#include<list>
#include<sstream>
#include<cstring>
#define mp make_pair
#define pb push_back      
#define F first
#define S second
#define SS stringstream
#define sqr(x) ((x)*(x))
#define m0(x) memset(x,0,sizeof(x))
#define m1(x) memset(x,63,sizeof(x))
#define CC(x) cout << (x) << endl
#define pw(x) (1ll<<(x))
#define buli(x) __builtin_popcountll(x)
#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)
#define M 1000000007
#define N 999

#define TASK "1"

using namespace std;
typedef pair<int,int> pt;

int n, m;
int a[N], ff[N];
int e[N][N];

int f[N], q[N];



int rec(int x) {
	if (f[x]) return 0;
	f[x] = 1;
	for (int i = 0; i < n; i++) if (e[x][i] && q[i] == -1) {
		q[i] = x;
		return 1;
	}
	for (int i = 0; i < n; i++) if (e[x][i] && rec(q[i])) {
		q[i] = x;
		return 1;
	}
	return 0;
}

int main(){
	#ifdef home
		freopen(TASK".in","r",stdin);	
		freopen(TASK".out","w",stdout);
	#endif		
	ios::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 0; i < n; i++) cin >> a[i];
	for (int i = 0; i < n + m - 1; i++) cin >> ff[i];

	int l = 0;
	int r = 1e9 + 5;
	while (l < r) {
		int mid = (l + r) / 2;

		for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) {
			e[i][j] = (ff[a[j] + i] <= mid);
		}

		for (int i = 0; i < n; i++) q[i] = -1;
		int ok = 1;

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) f[j] = 0;
			if (!rec(i)) {
				ok = 0;
				break;
			}
		}
		if (ok) r = mid; else l = mid + 1;
	}
	cout << l << endl;

	return 0;
}