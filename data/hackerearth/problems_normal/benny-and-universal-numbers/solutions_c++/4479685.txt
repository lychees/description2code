//#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
//#include <unordered_map>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define SZ(x) (int)(x.size())
#define rep(i,a,b) for(int i=a;i<b;i++)
#define per(i,a,b) for(int i=b-1;i>=a;i--)
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)
 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 1000010


template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}
 
//FILE* outFile;
 
//inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}


int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=ans*(ll)a%mod;
        a=(ll)a*a%mod;b>>=1;
    }
    return ans;
}

int p[110],v[10][10],a[15];
struct P{
    ll w;
    int x,y;
}q[N];
int main(){
    //freopen("A.in","r",stdin);
    //freopen("A.out","w",stdout);
    //freopen("1.txt","w",stdout);
    //srand(time(0));
    int T=30,j,k,i,ca=0,m,n;
    p[0]=p[1]=1;
    rep(i,2,100){
        if(!p[i])for(j=i+i;j<100;j+=i)p[j]=1;
    }
    rep(i,0,10)
        rep(j,0,10){
            k=i*10+j;
            if(p[k]==0){
                v[i][j]=1;
            }
        }
    //FOREACH(it,v)cerr<<it->x<<" "<<it->y<<"\n";
    int ok=1;
    rep(i,0,15){
        scanf("%d",&a[i]);
    }
    int top=0;
    q[top++]={0,0,0};
    vector<ll>ans;
    while(top){
        ll w=q[top-1].w;
        i=q[top-1].x,j=q[top-1].y;top--;
        if(i)ans.pb(w);
        if(j==15)continue;
        k=w%10;
        ll c;
        for(int r=j==0?1:0;r<10;r++){
            c=w*10+r;
            if(c%(j+1)==a[j]){
                top++;
                //assert(top<=N);
                q[top-1]={c,i|(w>0&&v[k][r]),j+1};
            }
        }
    }
    DBG(SZ(ans))
    //assert(SZ(ans)<=N);
    sort(all(ans));
    scanf("%d",&n);
    ll l,r;
    while(n--){
        scanf("%lld%lld",&l,&r);
        j=lower_bound(all(ans),l)-ans.begin();
        k=upper_bound(all(ans),r)-ans.begin()-1;
        printf("%d\n",k-j+1);
    }
    //cerr<<1.*clock()/CLOCKS_PER_SEC<<"s\n";
    return 0;
}