#include <stdio.h>
#include <stdlib.h>
int compare(const void *a, const void *b)
{
	if (*(int *)a > *(int *)b)
		return 1;
	else if(*(int *)a == *(int *)b) 
		return 0;
	else
		return -1;
} 
 int main()
{
	int T, N, skill, num, M;
	int i, j, sum, mask; 
	long long limit, low_limit;
	int *a; 
	long long *m;
 	scanf("%d", &T);
	while(T--) {
		scanf("\n%d", &N);
		a = (int *)malloc(sizeof(int) * N);
		sum = 0;
		num = N;
 
		while (num--) {
			scanf("%d", &a[num]);
			sum += a[num];
		}
		qsort((void *)a, N, sizeof(int), compare);
		
		M = sum/2;		
	
		if(N%2) {
			num = N/2 + 1;
			//low_limit = pow(2, num -1);
			low_limit = 1ULL << (num -1);
		} else {
			num = N/2;
		}
	
		limit = 1ULL << num;
		
		m = (long long *)calloc((M + 1), sizeof(long long));
		m[0] = 1;
		
		for (i = 0; i < N ; i++) 
			for (j = M; j >= a[i]; j--) {
				if(m[j-a[i]])
					m[j] |= (m[j-a[i]] << 1); 
			}
		
		for (i = M; i >= 0 ; i--) {
			if ((m[i] & limit) || ((N%2 != 0) && (m[i] & low_limit))) {
				printf("%d %d\n", i, sum - i);
				break;
			}
		}
		free(a);
		free(m);
			
		
	}
}