//Wegilant java challenge
#include<iostream>
#include<stdio.h>
using namespace std;
#define read() freopen("Wegilent.in","r",stdin)
int main()
{
    //read();
    long long int n,m;
    cin>>n>>m;
    while(m-->0)
    {
        int temp;
        cin>>temp; cin>>temp;
    }
    /*if(n<=0)
    {cout<<"0"<<"\n";
    return 0; }
*/
    long long int out=(n-2)*2; 
    //Starting and ending will have its degree 1, so it will be connect with n-2 nodes.
    //So (n-2)*2.
    out+=(n-3)*(n-2);
    //The remaining nodes(n-2) will have its degree 2, so connected with n-3 nodes. 
    //Finally divided by 2 to ignore (a,b) (b,a). But why its not working? 
    cout<<out/2;
    //cout<<n*(n-1)/2-(n-1);
}
