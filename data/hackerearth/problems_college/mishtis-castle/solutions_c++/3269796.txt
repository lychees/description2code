#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int max_temp = 0;



void rec(int arr[100][100], int n, int row, int col, int sum, long long int dp[100][100]){
	for (int i = 1; i < n; i++){
		dp[i][0] = dp[i - 1][0] + arr[i][0];
	}

	for (int i = 1; i < n; i++){
		dp[0][i] = dp[0][i - 1] + arr[0][i];
	}

	for (int i = 1; i < n; i++){
		for (int j = 1; j < n; j++){
			dp[i][j] = max(dp[i - 1][j] + arr[i][j], dp[i][j - 1] + arr[i][j]);
		}
	}
	
	// sum = sum + arr[row][col];

	// if (row == n - 1 && col == n - 1){
	// 	return max(dp[row - 1][col] + arr[row][col], dp[row][col - 1] + arr[row][col]);
	// 	// if (sum > max_temp){
	// 	// 	max_temp = sum;
	// 	// }
	// 	// return;
	// }
	// else if (row == n - 1){
	// 	dp[row][col] = 
	// 	rec(arr, n, row, col + 1, sum);
	// }
	// else if(col == n - 1) {
	// 	rec(arr, n , row + 1, col, sum);
	// }
	// else {
	// 	dp[row][col] = max(dp[row - 1][col] + arr[row][col], dp[row][col - 1] + arr[row][col]);
	// 	rec(arr, n, row, col + 1, sum);
	// 	rec(arr, n , row + 1, col, sum);
	// }	
}

int main()
{
    // cout << "Hello World!" << endl;
    int t = 0;
    cin >> t;
    while (t--){
    	max_temp = 0;
		static int arr[100][100];
		static long long int dp[100][100];
    	int n = 0, c = 0;
    	cin >> n >> c;
    	for (int i = 0; i < n; i++){
    		for (int j = 0; j < n; j++){
    			cin >> arr[i][j];
    		}
    	}
    	rec(arr, n, 0, 0, 0, dp);
    	long long int temp = dp[n - 1][n - 1] - c;
    	if (temp < 0){
    		cout << -1 << endl;
    	}
    	else {
    		cout << temp << endl;
    	}
    }
    
    return 0;
}
