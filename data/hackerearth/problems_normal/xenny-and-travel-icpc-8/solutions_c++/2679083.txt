#include <bits/stdc++.h>
using namespace std;

#define sd(x) scanf("%d",&x)
#define N 1251

int n;
int ro[N][N],ra[N][N];

vector<int> djikstra(int root, int a[N][N], int no){
	int graph[N][N];
	for(int i=0;i<n;i++)for(int j=0;j<n;j++)graph[i][j]=a[i][j];
	vector<int> dist(n,1e9);
	dist[root]=0;	
	bool visited[N];
	int u,m;
	memset(visited,0,sizeof(visited));
	for(int i=0;i<n-1;i++){
		m=1e9;
		for(int j=0;j<n;j++){
			if(!visited[j] && dist[j]<=m){
				m=dist[j];
				u=j;
			}
		}
		visited[u]=1;
		for(int v=0;v<n;v++){
			if(dist[u]!=1e9 && dist[u]+graph[u][v]<dist[v]){
				dist[v]=dist[u]+graph[u][v];
			}
		}
	}
	return dist;
}

int main(){
    int u,v,ans=1e9;
    sd(n);
    vector<int> rau,rav,rou,rov;
    for(int i=0;i<n;i++){
    	for(int j=0;j<n;j++)sd(ro[i][j]);
    }
    for(int i=0;i<n;i++){
    	for(int j=0;j<n;j++)sd(ra[i][j]);
    }
    sd(u);sd(v);u--;v--;
    ra[u][v]=ra[v][u]=ro[u][v]=ro[v][u]=1e9;
    rou=djikstra(u,ro,v);
    rau=djikstra(u,ra,v);
    for(int i=0;i<n;i++){
    	for(int j=0;j<i;j++)swap(ro[i][j],ro[j][i]);
    }
    for(int i=0;i<n;i++){
    	for(int j=0;j<i;j++)swap(ra[i][j],ra[j][i]);
    }
    rov=djikstra(v,ro,u);
    rav=djikstra(v,ra,u);
    for(int i=0;i<n;i++){
    	if(i!=u && i!=v){    		
    		ans=min(ans,min(rau[i]+rov[i],rou[i]+rav[i]));
    	}
    }    
    cout<<ans;
    return 0;
}