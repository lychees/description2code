#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ(a) (int)(a.size())
#define bitcount __builtin_popcountll
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define LET(it,container) __typeof(container.begin()) it(container.begin())
#define ITER(it,container) for(__typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define BS(vec,val) (int)(lower_bound(vec.begin(),vec.end(),val) - vec.begin())
#define PREC cout << setprecision(10) << fixed;
#define FI ios_base::sync_with_stdio(0); cin.tie(NULL);

#define DB(x) cerr << #x << ": " << x << " ";
//#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

#define LL long long
const int MOD = 1e9 + 7;
const int INF = 1e9 + 9;
const int MX = 1e6 + 5;

int pre[MX];
int main()
{
	int t;
	cin >> t;
	LL n,m1,m2;
	while(t--)
	{
		cin >> n >> m1 >> m2;
		for(int i=0;i<=n;i++) pre[i] = 0;
		pre[0] = 0;
		if(m1 <= n)
			pre[m1] = 1;
		if(m2 <= n)
			pre[m2] = 1;

		for(int i=0;i<=n;i++)
		{
			if(i < m1 && i < m2)
				pre[i] = 0;
			if(i > m1)
			{
				if(pre[i-m1] == 0)
					pre[i] = 1;
			}
			if(i > m2)
			{
				if(pre[i-m2] == 0)
					pre[i] = 1;
			}
		}	
		cout << pre[n] << endl;
	}

	return 0;
}
