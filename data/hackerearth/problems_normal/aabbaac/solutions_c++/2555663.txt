#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>

using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;

const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;

#define mp make_pair
#define pb push_back
#define X first
#define Y second

#define dbg(x) { cerr << #x << " = " << x << endl; }

// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;

#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()

template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);

#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;

#define NAME "cell"

void solve(){
	int n, q;
	cin >> n >> q;
	vector<string> s(n);
	vector<LL> a(n);
	forn(i, n) cin >> s[i];
	a[0] = s[0].length();
	for (int i = 1; i < n; i++) a[i] = 2 * a[i - 1] + s[i].length();

	string res;
	LL x;

	forn(k, q){
		cin >> x;

		if (x < a[0]){
			res += s[0][x];
			continue;
		}

		int pos = 0;
		for (int i = 1; i < n; i++)
			if (x < a[i]){
				pos = i;
				break;
			}

		for (int i = pos; i >= 0; i--){
			if (i == 0){
				res += s[0][x];
				break;
			}
			if (x < a[i - 1]) continue;
			if (x >= 2 * a[i - 1]){
				res += s[i][x - 2 * a[i - 1]];
				break;
			}
			x = 2 * a[i - 1] - x - 1;
		}
	}
	cout << res << endl;
}

int main()
{
    //START
    //freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    //freopen("input.txt", "r", stdin); //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
	int test;
	cin >> test;
	while (test--){
		solve();
	}

    //END                             
    return 0;
}
/*******************************************
*******************************************/

template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif