#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <memory.h>
#include <string>
#define f first
#define s second
#define ll long long int
#define MAX 10005

using namespace std ;

typedef pair<ll , int> p ;
bool mark[MAX] ;
vector<p> adj[MAX] ;

int N , M ;

ll prim(int x)
{
    priority_queue<p , vector<p> , greater<p> > Q ;

    int y ;

    ll mC = 0 ;

    p pii ;

    Q.push(make_pair(0 , x)) ;

    while(!Q.empty())
    {
        pii = Q.top() ;

        Q.pop() ;

        x = pii.s ;

        if(mark[x])
            continue ;

        mC += pii.f ;

        mark[x] = true ;

        int z = adj[x].size() ;

        for(int i = 0 ; i < z ; i++)
        {
            y = adj[x][i].s ;

            if(!mark[y])
                Q.push(adj[x][i]) ;
        }
    }

    return mC ;
}

int main()
{
    ios_base::sync_with_stdio(false) ;

    cin.tie(0) ;
    
    int test ;
    
    cin >> test ;
    
    while(test--)
    {
    	memset(mark , false , sizeof(mark)) ;
    	
    	for(int i = 0 ; i < MAX ; i++)
    	  adj[i].clear() ;

    cin >> N >> M ;

    ll w , x , y ;

    for(int i = 0 ; i < M ; i++)
    {
        cin >> x >> y ;

        adj[x].push_back(make_pair(1 , y)) ;
        adj[y].push_back(make_pair(1 , x)) ;
    }

    ll mC = prim(1) ;

    cout << mC << endl ;
    
    }

    return 0 ;
}
