/*
ID: ashish1610
PROG:
LANG: C++
*/
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define MOD 1000000007
vector<int>adj[505];
ll len[505][505];
ll cst[505][505];
int main()
{
ios_base::sync_with_stdio(false);
int t;
cin>>t;
assert(t>=1 && t<=5);
while(t--)
{
memset(len,0,sizeof(len));
memset(cst,0,sizeof(cst));
for(int i=0;i<=504;++i)
adj[i].clear();
ll n,m,x,y,tmp,tmp1,b;
cin>>n>>m>>b;
assert(n>=1 && n<=500);
assert(m>=n-1 && m<=min(2000LL, (n*(n-1))/2));
assert(b>=1 && b<=1000);
for(int i=0;i<m;++i)
{
cin>>x>>y>>tmp>>tmp1;
assert(x>=1 && x<=n);
assert(y>=1 && y<=n);
assert(tmp>=1 && tmp<=500);
assert(tmp1>=1 && tmp1<=100000);
adj[y].push_back(x);
cst[x][y]=tmp;
len[x][y]=tmp1;
}
ll dp[n+1][b+1];
for(int i=1;i<=n;++i)
{
for(int j=0;j<=b;++j)
{
if(i==1)
dp[i][j]=0;
else
dp[i][j]=INT_MAX;
}
}
for(int i=2;i<=n;++i)
{
for(int j=1;j<=b;++j)
{
ll tmp_cst=INT_MAX;
for(int k=0;k<adj[i].size();++k)
{
int u=adj[i][k];
if(j>=cst[u][i])
tmp_cst=min(tmp_cst,dp[u][j-cst[u][i]]+len[u][i]);
}
dp[i][j]=min(dp[i][j],tmp_cst);
}
}
int q;
cin>>q;
assert(q>=1 && q<=100000);
while(q--)
{
int dest,bc;
cin>>dest>>bc;
assert(dest>=1 && dest<=n && bc>=1 && bc<=b);
assert(dest<=n && bc<=b);
if(dp[dest][bc]==INT_MAX)
cout<<"-1\n";
else
cout<<dp[dest][bc]<<endl;
}
}
return 0;
}