#include <iostream>
#include<map>
#include<algorithm>
using namespace std;

int ar[15],n;
map<int,int> taste[1<<15];


int taste_val(int idx,int cover,int last)
{
	if(taste[cover].count(last))
	{
		return taste[cover][last];
	}
		
	if(cover==(1<<n)-1)
	{
		return 0;
	}
	
	if(idx==0)
	{
		int res = 0;
		for(int i=0;i<n;++i)
			{
				res = max(res,taste_val(idx+1,cover|(1<<i),ar[i]));
			}
		return taste[cover][last] = res;
	}
	else
	{
		int res = 0;
		for(int i=0;i<n;++i)
			{
			if(!(cover&(1<<i)))
					{
					res = max(res,taste_val(idx+1,cover|(1<<i),ar[i])+(idx+1)*abs(ar[i]-last));
					}
			}
		return taste[cover][last] = res;
	}
}



int main()
{
	int t;
	cin >> t;
	while(t--)
	{
		for(int i=0;i<(1<<15);++i)
			taste[i].clear();
		cin >> n;
		for(int i=0;i<n;++i)
			cin >> ar[i];
		cout << taste_val(0,0,0) << endl;
	}
	return 0;
}