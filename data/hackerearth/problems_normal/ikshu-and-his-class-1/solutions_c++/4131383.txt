#include<iostream>
#include<vector>
#define mod 1000000007
using namespace std;
int parent[100001],r[100001];
int find(int x)
{
	if(x!=parent[x])
	parent[x]=find(parent[x]);
	return parent[x];
}
void merge(int x,int y)
{
	int p=find(x);
	int q=find(y);
	if(p!=q)
	{
		if(r[p]>r[q])
		{
			parent[q]=p;
			r[p]=r[q]+r[p];
		}
		else if(r[p]<r[q])
		{
			parent[p]=q;
			r[q]=r[p]+r[q];
		}
		else
		{
			parent[q]=p;
			r[p]=r[p]+r[q];
		}
	}
}
int main()
{
	long int n,k,a,b,i;
	cin>>n>>k;
	long long int fact[100001];
	fact[0]=1;
	for(i=1;i<=100000;i++)
	fact[i]=(i*fact[i-1])%mod;
	vector<long> v;
	for(i=0;i<n;i++)
	{
		parent[i]=i;
		r[i]=1;
	}	
	while(k--)
	{
		cin>>a>>b;
		merge(a,b);
	}
	for(i=0;i<n;i++)
	{
		if(r[i]>1 && parent[i]==i)
		v.push_back(r[i]);
	}
	long long int ans=1;
	for(i=0;i<v.size();i++)
	ans=(ans*fact[v[i]])%mod;
	cout<<ans<<endl;
}