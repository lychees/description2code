/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-9
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256
#define right adsgasgadsg
#define free adsgasdg
 
using namespace std;

vector<vector<long long> > mult(vector<vector<long long> > a,vector<vector<long long> > b)
{
 vector<vector<long long> > res;
 res.resize(a.size());
 for (int i=0;i<res.size();i++)
 {
  res[i].resize(a.size());
  for (int j=0;j<res[i].size();j++)
   res[i][j]=0;
 }
 
 for (int i=0;i<a.size();i++)
  for (int j=0;j<a.size();j++)
   for (int k=0;k<a.size();k++)
   {
    res[i][j]+=a[i][k]*b[k][j];
    res[i][j]%=bs;
   }
   return res;
}

vector<vector<long long> > one(long sz)
{
 vector<vector<long long> > v;
 v.resize(sz);
 for (int i=0;i<v.size();i++)
 {
     v[i].resize(sz);
     for (int j=0;j<v[i].size();j++)
      v[i][j]=(i==j);
 }
 return v;
}

set<string> S[4];

long tests;

long bad[1000];
long long n,k;
string st;

long naive()
{
 string st1,st2;
 
 if (n==1)
 {
  return 4-S[1].size(); 
 }
 if (n==2)
 {
  long res=0;
  for (int a=0;a<4;a++)
   for (int b=0;b<4;b++)
   {
    st1=" ";st2=" ";
    st1[0]=a+'a';
    st2[0]=b+'a';
    if (S[1].find(st1)!=S[1].end())continue;
    if (S[1].find(st1)!=S[1].end())continue;
    if (S[2].find(st1+st2)!=S[2].end())continue;
    res++;
   }
   return res;
 }
}

vector<vector<long long> > pw(vector<vector<long long> > a,long long b)
{
 if (b==0)return one(a.size());
 if (b%2)return mult(a,pw(a,b-1));
 return pw(mult(a,a),b/2);
}

long ev(string st)
{
 long res=0;
 for (int i=0;i<st.size();i++)
  res=res*4+st[i]-'a';
 return res;
}

long long ans;

void add(string st)
{
 S[st.size()].insert(st);
 if (st.size()==3)
  bad[ev(st)]=1;
 if (st.size()==2)
  for (int i=0;i<4;i++)
   bad[ev(st)*4+i]=bad[16*i+ev(st)]=1;
 if (st.size()==1)
 {
  long c=st[0]-'a';
  for (int mask=0;mask<64;mask++)
  {
   if (mask/16==c||mask%4==c||mask%16/4==c)
    bad[mask]=1;
  }
 }
}


int main(){
//freopen("knockout.in","r",stdin);
//freopen("knockout.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
 S[0].clear();
 S[1].clear();
 S[2].clear();
 cin>>n>>k;
 for (int i=0;i<64;i++)
  bad[i]=0;
 
 for(int i=0;i<k;i++)
 {
  cin>>st;
  add(st);
 } 
 
 vector<vector<long long> > v;
 v.resize(16);
 for (int i=0;i<16;i++)
 {
  v[i].resize(16);
  for (int j=0;j<16;j++)
   v[i][j]=0;
 }
 
 for (int i=0;i<16;i++)
 {
  for (int j=0;j<4;j++)
  {
   if (bad[i*4+j])continue;
   v[i][(i*4+j)%16]++;
  }
 }
 
 if (n<3)
 {
  cout<<naive()<<endl;
  continue;
 }
 v=pw(v,n-3);
 ans=0;
 for (int i=0;i<64;i++)
 {
  if (bad[i]==0)
   for (int j=0;j<16;j++)
    ans+=v[i%16][j],
    ans%=bs;
 }
 cout<<ans<<endl;
 
}

cin.get();cin.get();
return 0;}

