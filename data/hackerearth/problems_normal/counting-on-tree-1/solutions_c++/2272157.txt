#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}

const int MOD=1000000007;

const int MAXK=101;
vector<vll> beauty;
vi a;
vector<vi> edges;
vector<int> checked;



void fillRek ( int i ) {
    assert ( !checked[i] );
    checked[i]=1;
    int beauty2[MAXK]= {};
    if ( a[i]<MAXK )
        beauty[i][a[i]]+=1;
    //beauty[i][0]+=1;
    for ( int j:edges[i] )

    {
        if ( checked[j] )
            continue;
        fillRek ( j );
        for ( int k=MAXK-1; k>=0; k-- ) {
            ll tmp=0;
            for ( int l=0; l<=k; l++ )
                tmp+=beauty[i][k-l]*beauty[j][l]%MOD;
            beauty[i][k]=(beauty[i][k]+tmp)%MOD;
//             beauty2[k]+=beauty[j][k];
              
        }
//           cout<<j<<"<- "<<i<<": "<<beauty[i]<<endl;
}
//     beauty[i][0]+=1;
//      for ( int  k=1; k<MAXK; k++ )
//          beauty[i][k]= ( beauty[i][k]+beauty2[k] ) %MOD;




//     cout<<i<<": "<<beauty[i]<<endl;

}
void fillBeauty() {
    checked=vi ( a.size(),0 );
    fillRek ( 0 );


}

int main() {
    ios_base::sync_with_stdio ( false );

    inrep {
        int n,k;
        cin>>n>>k;
        a=vi ( n );
        cin>>a;
        beauty=vector<vll> ( n,vll ( MAXK ) );
        edges=vector<vi> ( n );
        rep ( i,n-1 ) {
            int a,b;
            cin >>a>>b;
            a--;
            b--;
            edges[a].push_back ( b );
            edges[b].push_back ( a );
        }
        fillBeauty();
        ll total=0;
        for(int i=0;i<n;i++)
            total=(total+beauty[i][k])%MOD;
        cout<<total<<endl;
    }

}


