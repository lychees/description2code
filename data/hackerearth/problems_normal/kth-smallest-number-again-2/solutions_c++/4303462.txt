#include<iostream>
#include<vector>
#include<algorithm>
#include<utility>
#include<limits.h>
#define ll long long int
using namespace std;

int findd(ll arr[],ll n,ll low,ll high,long long k)
{
	if(low<=high)
	{
		ll mid=(low+high)/2;
		if(k<=arr[mid] && k>arr[mid-1]){
			
			return mid;
		}
		else if(k<=arr[mid] && k<=arr[mid-1])
		
		{
			return findd(arr,n,low,mid-1,k);
		
		}
		else if(k>arr[mid]){
			
			return findd(arr,n,mid+1,high,k);
		}
		
	}
}
int main()
{
	ll t;
	cin>>t;
	while(t--)
	{
		ll n,q;
		cin>>n>>q;
		vector<pair<ll,ll> > input(n);
		for(int i=0;i<n;i++)
		{
			cin>>input[i].first;
			cin>>input[i].second;
		}
		sort(input.begin(),input.end());
		long long minn=input[0].first;
		long long maxx=LLONG_MIN;
		for(int i=0;i<n;i++)
		{
			if(input[i].second>maxx)maxx=input[i].second;
		}
		long long noOfElements[n];
		noOfElements[0]=input[0].second-input[0].first+1;
		long long prev=input[0].second;
		for(int i=1;i<n;i++)
		{
			if(input[i].first<=prev){
				if(input[i].second<=prev)noOfElements[i]=0;
				else{
					noOfElements[i]=input[i].second-prev;
					prev=input[i].second;
				}
			}
			else {
				noOfElements[i]=input[i].second-input[i].first+1;
				prev=input[i].second;
			}
		}
		
		
		for(int i=1;i<n;i++)
		{
			noOfElements[i]+=noOfElements[i-1];
		}
		//for(int i=0;i<n;i++)
		//{
		//	cout<<noOfElements[i]<<" ";
		//}cout<<endl;
		
		
		while(q--)
		{
			long long k;
			cin>>k;
			if(k>noOfElements[n-1])cout<<-1<<endl;
			else{
				ll p=findd(noOfElements,n,0,n-1,k);
				ll diff=noOfElements[p]-k;
				cout<<input[p].second-diff<<endl;
			}
		}
	}
	return 0;
}