#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
#include<map>
#define tr(v,it) for(typeof(v.begin()) it=v.begin();it!=v.end();it++)
using namespace std;
int dp[102][102][502],a[102][102];
int inf=1000000000;
int main()
{
 //   freopen("data.txt","r",stdin);
    //long long k,i,j;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m,K,i,j,k;
        scanf("%d%d%d",&n,&m,&K);
        for(i=0;i<n;i++)
            for(j=0;j<m;j++)
                scanf("%d",&a[i][j]);
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                for(k=0;k<=K;k++)
                {
                    if(a[i][j]>k)
                    {
                        dp[i][j][k]=-inf;
                        continue;
                    }
                    if(i==0&&j==0)
                    {
                        dp[i][j][k]=a[i][j];
                        continue;
                    }
                    if(k==0)
                    {
                        dp[i][j][k]=-inf;
                        continue;
                    }
                    if(i>0&&j>0)
                        dp[i][j][k]=max(dp[i-1][j][k-a[i][j]],max(dp[i-1][j-1][k-a[i][j]],dp[i][j-1][k-a[i][j]]));
                    else if(i>0)
                        dp[i][j][k]=dp[i-1][j][k-a[i][j]];
                    else if(j>0)
                        dp[i][j][k]=dp[i][j-1][k-a[i][j]];
                    if(dp[i][j][k]>0)dp[i][j][k]+=a[i][j];
             //       printf("%d %d %d: %d\n",i,j,k,dp[i][j][k]);
                }
            }
        }
        if(dp[n-1][m-1][K]>0)printf("%d\n",dp[n-1][m-1][K]);
        else printf("-1\n");
    }
    return 0;
}
