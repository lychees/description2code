#include <bits/stdc++.h>
#define foru(i, a, b) for(int i = a; i <= b; ++i)
#define ford(i, a, b) for(int i = a; i >= b; --i)
using namespace std;
const int MAXN = 905;
char s[MAXN];
vector<int> v[MAXN];

int GetBit(int bit, int i) {
    return bit >> (i - 1) & 1;
}

void New(vector<int> &v) {
    v.clear(); v.resize(26);
}

void sum(vector<int> &a, vector<int> &b) {
    foru(j, 0, 25) a[j] += b[j];
}

int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int TC; scanf("%d\n", &TC);
    while (TC--) {
        int n; scanf("%d\n", &n);
        foru(i, 1, n + 1) New(v[i]);
        foru(i, 1, n + 1) {
            scanf("%s\n", &s); int len = strlen(s);
            foru(j, 1, len) ++v[i][s[j - 1] - 'a'];
        }
        int n1 = n >> 1, n2 = n - n1;
        int maxbit = (1 << n1) - 1;
        map<vector<int>, int> m;
        foru(bit, 0, maxbit) {
            vector<int> vec; New(vec);
            foru(i, 1, n) if (GetBit(bit, i)) sum(vec, v[i]);
            m[vec] = 1;
        }
        maxbit = (1 << n2) - 1; bool ok = false;
        foru(bit, 0, maxbit) {
            vector<int> vec, v1; New(vec); New(v1);
            foru(i, n1 + 1, n) if (GetBit(bit, i - n1)) sum(vec, v[i]);
            foru(j, 0, 25) v1[j] = v[n + 1][j] - vec[j];
            if (m[v1]) {
                ok = true; break;
            }
        }
        puts(ok ? "YES" : "NO");
    }
    return 0;
}
