#include<iostream>
using namespace std;
const int MAXN = 1e5  + 5;
const int MAXK = 267;
long long dp[MAXK][MAXN];
int a[MAXN];
int n , k;
void calc(int i , int L , int R, int OptL , int OptR)
{
    if(R < L)
        return;

    int M = (L + R) / 2;
    int opt = OptL;
    
    for(int q = OptL;q <= min(M - 1, OptR);q ++)
    {
        long long tmp = dp[i - 1][q] + (long long)(M - q) * (M - q);
        if(tmp < dp[i][M])
        {
            dp[i][M] = tmp;
            opt = q;
        }
    }
    dp[i][M] += (long long)k * k * a[M];
    
    calc(i , L , M - 1 , OptL , opt);
    calc(i , M + 1 , R , opt , OptR);
}


int main()
{

    cin >> n >> k;
    for(int i = 1;i <= n;i ++)
        cin >> a[i];

    
   
    

    /*for(int t = 1;t <= k;t ++)
    {
        for(int i = 1;i <= n;i ++)
        {
            if(t == 1 && i == 1)
                dp[t][i] = 0;
            else
                dp[t][i] = 1e18;
            
            for(int j = 1;j < i;j ++)
                dp[t][i] = min(dp[t][i] , dp[t - 1][j] + (long long)(i - j) * (i - j));
            if(dp[t][i] != 1e18)
                dp[t][i] += k * k * a[i];
        }
        
    }
    */
    
    long long ans = 0x3f3f3f3f3f3f3f3fLL;
    
    long long k2 = min((long long)k , (1LL * n * n + 1LL * (a[1] + a[n]) * k * k)/((long long)1024 * k * k) + 1);
    
    for(int i = 0;i <= n;i ++)
        for(int j = 0;j <= k2;j ++)
            dp[j][i] = 0x3f3f3f3f3f3f3f3fLL;
    dp[1][1] = (long long)a[1] * k * k;
    for(int i = 2;i <= k2;i ++)
        calc(i , 1 , n , 1 , n);
    
    for(int i = 2;i <= k2;i ++)
        ans = min(ans , dp[i][n]);

    cout << ans << endl;
    
    
	return 0;
}	
