#include<bits/stdc++.h>
using namespace std;
class ticket{
public:
    long long s,e, prob;
    ticket(long long st,long long et,long long probt){
    s=st;
    e=et;
    prob=probt;
    }
    bool operator <(const ticket &t )const{
    if(e!=t.e) return e<t.e;
    return s<t.s;
    }
};
int main(){
int t;
cin>>t;
while(t--){
 int n;
 cin>>n;
 vector<ticket> tickets;
 for(int i=0;i<n;i++){
    long long s,e,prob;
    cin>>s>>e>>prob;
    tickets.push_back(ticket(s,e,prob));
 }
 sort(tickets.begin(),tickets.end());
 long long dp[n];
 memset(dp,0,sizeof(dp));
 dp[0]=tickets[0].prob;
 for(int i=1;i<tickets.size();i++){
    long long inclProfit=tickets[i].prob;
    int nonconflicting=-1;
    for(int j=i-1;j>=0;j--) if(tickets[j].e<=tickets[i].s) {nonconflicting=j; break;}
    if(nonconflicting!=-1) inclProfit+=dp[nonconflicting];
    dp[i]=max(inclProfit,dp[i-1]);
 }
 double d=dp[tickets.size()-1]*1.0/100;
 printf("%0.2f\n",d);

}
}
