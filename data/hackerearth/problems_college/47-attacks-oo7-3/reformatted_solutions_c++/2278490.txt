/*
    Author   : Rajdip Saha
    Language : C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <vector>

#define MAX 100000000
#define MOD 1000000007
#define PI 2 * acos(0.0)

typedef struct node node;
typedef long long int ll;
typedef unsigned long long int llu;

using namespace std;

int dirx[] = {-1, 0, 1, 0};
int diry[] = {0, -1, 0, 1};

map<int, int> mp;
map<int, int>::iterator it;

int x[505][505];

void precal() {
  x[1][504] = 3;
  for (int i = 2; i <= 120; i++) {
    if (i & 1) {
      int carry = 0;
      for (int j = 504; j >= 0; j--) {
        x[i][j] = (x[i - 1][j] * 3 + carry) % 10;
        carry = (x[i - 1][j] * 3 + carry) / 10;
      }
      continue;
    }
    int carry = 2;
    for (int j = 504; j >= 0; j--) {
      x[i][j] = (x[i - 1][j] + carry) % 10;
      carry = (x[i - 1][j] + carry) / 10;
    }
  }
}

int main() {
  // freopen("in.txt","r",stdin);
  // freopen("out.txt","w",stdout);
  precal();
  int t, n;
  scanf("%d", &t);
  for (int i = 1; i <= t; i++) {
    scanf("%d", &n);
    if (n > 120) {
      printf("UNABLE TO FIRE\n");
      continue;
    }
    bool flag = false;
    for (int j = 0; j <= 504; j++) {
      if (x[n][j] != 0 || flag) {
        printf("%d", x[n][j]);
        flag = true;
      }
    }
    printf("\n");
  }
  return 0;
}
