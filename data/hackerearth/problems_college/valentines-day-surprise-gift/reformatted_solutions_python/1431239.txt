import math


def powmod(x, y, md):
    if x == 0:
        return 0
    if y == 0:
        return 1
    ans = powmod(x, y//2, md)
    ans = (ans*ans) % md
    if y % 2 == 1:
        ans = (x*ans) % md
    return ans


def Rn(N):
    if N <= 10:
        return R[N]
    n4 = int(math.ceil(N/4.0))
    n5 = int(math.ceil(N/5.0))
    n10 = int(math.ceil(N/10.0))
    calc = (2**n4) % 1000000007
    calc = calc*((Rn(n5)) % 1000000007) % 1000000007
    calc = calc*((Rn(n10)) % 1000000007) % 1000000007
    return calc


R = [1, 1, 1, 3, 3, 15, 15, 105, 105, 105, 105]
T = int(input())
for t in range(T):
    N = int(input())
    rn = Rn(N)
    rn2 = rn*2
    rn3 = rn*3
    rn4 = rn2*2
    rn5 = rn*5
    max_so_far = 0
    combos = [
        [
            rn, rn], [
            rn, rn2], [
                rn, rn3], [
                    rn, rn4], [
                        rn, rn5], [
                            rn2, rn3], [
                                rn2, rn5], [
                                    rn3, rn4], [
                                        rn3, rn5], [
                                            rn4, rn5]]
    for x in combos:
        now = powmod(x[0], x[1], 1000000007)
        # print x[0], x[1], now
        max_so_far = max(max_so_far, now)
        now = powmod(x[1], x[0], 1000000007)
        # print x[0], x[1], now
        max_so_far = max(max_so_far, now)
    print max_so_far
