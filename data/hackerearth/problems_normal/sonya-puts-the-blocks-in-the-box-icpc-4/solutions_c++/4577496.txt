//Sinha Saab
//NARUTO Fan



#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>

#define ll long long int
#define maxN 100
#define maxM 1000
#define maxVal 100000000
#define minVal (ll)-1000000000000000000
#define mod 1000000007LL

#define gcd(a,b) __gcd(a,b)

using namespace std;

ll n,m;
vector<ll> g[maxN+5];
ll csum[maxN+5][maxM+5];
ll dp[maxN+5][maxM+5];

ll compute(ll i,ll p)
{
	if(i==n)
		return 0;
	if(dp[i][p]!=-1)
		return dp[i][p];
	ll j,ans=compute(i+1,p);
	for(j=1;j<=p;j++)
		if(csum[i][j]>0)
			ans=max(ans,csum[i][j]+compute(i+1,p-j));
	return dp[i][p]=ans;
}

int main()
{
    ll i,j,k,p,x;
    scanf("%lld%lld",&n,&m);
    for(i=0;i<n;i++)
    	for(j=0;j<=m;j++)
    		csum[i][j]=minVal;
    for(i=0;i<n;i++)
    {
    	scanf("%lld",&p);
    	for(j=0;j<p;j++)
    	{
    		scanf("%lld",&x);
    		g[i].push_back(x);
    		if(j!=0)
    			g[i][j]+=g[i][j-1];
    	}
    	csum[i][0]=0;
    	for(j=1;j<=m;j++)
    	{
    		for(k=0;(k+j)<=p;k++)
    		{
    			x=g[i][k+j-1];
    			if(k!=0)
    				x=x-g[i][k-1];
    			csum[i][j]=max(csum[i][j],x);
    		}
    	}
    }
    memset(dp,-1,sizeof(dp));
    printf("%lld\n",compute(0,m));
    return 0;
}