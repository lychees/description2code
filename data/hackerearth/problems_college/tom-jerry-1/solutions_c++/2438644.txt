#include <iostream>
#include<algorithm>
using namespace std;

bool isSubsetSum(int c[], int n, int sum)
{
    
    bool subset[sum+1][n+1];
 
   
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;
 
    
    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;
 
   
     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >=c[j-1])
           subset[i][j] = subset[i][j] || subset[i - c[j-1]][j-1];
       }
     }
     
 
     return subset[sum][n];
}
int main()
{
     int t;
     cin >>t;
     while(t--)
     {
     	int mx[10005]={0},n,k,a[10005],b[10005],c[10005]={0},sum=0,kx=0,kx1=0,kx2=0;
     	int d[10005]={0},e[10005]={0};
     	cin >>n >>k;
     	for(int i=0;i<n;i++)
     	 {cin >>a[i];mx[a[i]+100]=1;}
     	for(int i=0;i<k;i++)
     	 {cin >>b[i];sum+=b[i];}
     	 sum*=-1;
       	for(int i=0;i<k;i++)
       	{
       		mx[b[i]+100]=0;
       	}
       	for(int i=0;i<=205;i++)
       	 {
       	 	if(mx[i]>0)
       	 	 c[kx++]=i-100;
       	 }
       
       	  for(int i=0;i<kx;i++)
       	  {
       	  	if(c[i] < 0 )
       	  		d[kx1++]=-1*c[i];
       	  	else
       	  	  e[kx2++]=c[i];
       	  }
       	 /* cout << d[i] << " ";
       	  cout <<endl;
       	  for(int i=0;i<kx2;i++)
       	   cout << e[i] << " ";
       	  cout <<endl;
       	  cout << sum <<endl;*/
       if(sum < 0)
       {
       	 sum=-sum;
       	if(isSubsetSum(d, kx1, sum))
       	 cout << "YES" <<endl;
       	 else
        	  cout << "NO" <<endl;
       }
       else
       {
       	if(isSubsetSum(e, kx2, sum))
       	 cout << "YES" <<endl;
       	 else
        	  cout << "NO" <<endl;
       }
     }
     return 0;
}