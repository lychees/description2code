#include<bits/stdc++.h>
using namespace std;
#define ll long long
//ll index[10000];
ll tree[1000000];
ll f[1000000];
ll cf[1000000];
ll n;

void build_tree(int n) {
	for(int i = 1 ; i <= n; i++) {
		int r = i;
		int left = i - (i & (-i)) + 1; // right - 2^r + 1
		//cout<<left<<" "<<r<<"\n";
		tree[i] = cf[r]-cf[left-1]; 
	}
}

ll read(int ind) {
	ll sum = 0;
	while(ind > 0) {
		sum += tree[ind];
		ind -= (ind& -ind); 
	}
	return sum;
}

void update(int ind, int val) {
	while(ind <= n) {
		tree[ind] += val;
		ind += (ind & -ind);
	}
}

int main() {
	int t;
	cin>>n;
	int x;
	int ind;
	int freq;
	f[0] = 0;
	for(int i = 1 ; i <= n; i++) {
		cin>>x;
		f[x]++;
	}
	cf[0] = 0;
	for(int i = 1; i <= n; i++) {
		cf[i] = cf[i-1] + f[i];
	}
	build_tree(n);
	/*for(int i = 1 ; i <= n; i++) {
		cout<<tree[i]<<" ";
	}*/
	cout<<"\n";
	int q;
	cin>>q;
	int val;
	int sel;
	int left,right;
	while(q--) {
		cin>>sel;
		if(sel == 0) {
			cin>>left>>right;
			cout<<read(right)-read(left-1)<<"\n";		
		} else if(sel == 2){
			cin>>ind;
			update(ind,1);
		} else {
			cin>>ind;
			update(ind, -1);
		}
	}
	return 0;
}