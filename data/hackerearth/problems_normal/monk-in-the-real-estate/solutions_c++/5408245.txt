 #include<iostream>
 #include<vector>
using namespace std;
static int count=0;
 		bool  vis[10001];
 void dfs(int, vector<int>[]);
 	   int main()
 {
 	int t;
 	cin>>t;
 	while(t--)
 	{
 	int no_roads,count=0,p,y=0,arr[20002];
 	/*for(int s=0;s<10000;s++)
 	{

 	 vis[s]=false;
 }*/ 
 	p=no_roads;
 	cin>>no_roads;
	vector<int> v[10001]; 
 	 int i,j;
 	 for(int q=1;q<=no_roads;q++)
 	 {
	  
	//count++;	      
 	 cin>>i>>j; 
	  arr[y++]=i;
	  arr[y++]=j; 
 	 v[i].push_back(j);
 	 v[j].push_back(i);
 	 //cout<<"jcgj";
}
int max1=arr[0];
for(i=1;i<y;i++)
{
	if(max1<arr[i])
	max1=arr[i];
}
//cout<<y<<endl;
 for(i=1;i<=max1;i++)
 {
 	if(v[i].size()>0)
 	{count++;
 //dfs(i,v);
}
 //arr[p++]=sum;
}
cout<<count<<endl;
 }
}

 /*void dfs(int x,vector<int> v[])
 {
 	
 	vis[x]=true;
 	cout<<x<<" ";
 	//sum+=a[x];
 	//cout<<"kchkhkehjehfkej";
 	count++;
 	//cout<<"\n"<<count<<" ";
 	for(int i=0;i<v[x].size();i++)
 	{
 		 	 	
 		if(vis[v[x][i]]==0)

 		dfs(v[x][i],v);
	 }
	 //return 0;
 }*/
