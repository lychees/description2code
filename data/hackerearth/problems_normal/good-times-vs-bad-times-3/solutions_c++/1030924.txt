#include<bits/stdc++.h>
using namespace std;
int gcd(int a,int b)
{
    if(b==0) return a;
    return gcd(b,a%b);
}
int main()
{
    int MapG[24*60*60]={0};
    int MapB[24*60*60]={0};
    int Primes[17]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59};
    int cnt=24*60*60-1;
    int Sec=58;
    int Min=59;
    int Hr=23;
    int i;
    MapG[cnt--]=1;
    while(1)
    {
        for(i=0;i<17;i++)
        {
            if(Sec%Primes[i]==0 && Min%Primes[i]==0 && Hr%Primes[i]==0)
            {
                MapB[cnt]=MapB[cnt+1]+1;
                MapG[cnt]=MapG[cnt+1];
                break;
            }
            else
            {
                MapB[cnt]=MapB[cnt+1];
                MapG[cnt]=MapG[cnt+1]+1;
            }
        }
        cnt--;
       // printf("%d %d %d : %d %d : %d\n",Hr,Min,Sec,MapB[cnt+1],MapG[cnt+1],cnt+1);
        Sec--;
        if(Sec==-1)
        {
            Sec=59;
            Min--;
            if(Min==-1)
            {
                Min=59;
                Hr--;
                if(Hr==-1)
                    break;
            }
        }
    }
    int T;
    scanf("%d",&T);
    while(T--)
    {
        int HH,MM,SS;
        scanf("%d %d %d",&HH,&MM,&SS);
        int Time=HH*60*60+MM*60+SS;
        //printf("%d\n",Time);
        if(MapB[Time]==0)
        {
            printf("%d:%d\n",0,MapG[Time]);
        }
        else
        {
            int g=gcd(MapB[Time],MapG[Time]);
            printf("%d:%d\n",MapB[Time]/g,MapG[Time]/g);
        }
    }
    return 0;
}
