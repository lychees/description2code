#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli dp1[2][400010];
lli dp2[2][400010];
lli sum[400010];
lli arr[201];
lli brr[201];
#define mod 1000000007
int subset_sum(lli arr[],lli dp[2][400010],lli n)
 {
 	  dp[0][0]=1;
 	  int prs,prv;
 	  prs=1;
 	  prv=0;
 	  for(int i=1;i<=n;i++)
 	   {
 	   	 for(int j=0;j<400010;j++)
 	   	  {
 	   	  	 dp[prs][j]=dp[prv][j];
 	   	  	    if(j-arr[i]>=0 && dp[prv][j-arr[i]]!=0)
 	   	  	     {
 	   	  	     	 dp[prs][j]=(dp[prs][j]+dp[prv][j-arr[i]])%mod;
				 }
			  }
			  swap(prs,prv);
		}
		return 0;
 }
int main()
 {
     lli n;
 	 cin>>n;
 	 for(int i=1;i<=n;i++)
 	  {
 	  	  cin>>arr[i];
	   }
	   for(int j=1;j<=n;j++)
	    {
	    	 cin>>brr[j];
		}
		 int q;
		 cin>>q;
		 subset_sum(arr,dp1,n);
		 subset_sum(brr,dp2,n);
		 sum[0]=dp2[n%2][0];
		 for(int i=1;i<=400010;i++)
		  {
		  	if(i!=0)
		  	sum[i]=sum[i-1];
		  	if(dp2[n%2][i]!=0)
		  	 {
		  	 
		  	 	sum[i]=(sum[i]+dp2[n%2][i])%mod;
		  	 //	 cout<<" sum "<<sum[i]<<" "<<i<<endl;
			   }
		  }
		  long long int ans=0;
		  for(int i=0;i<400010;i++)
		   {
		   	int pm=min(i+q,400009);
		   	  if(dp1[n%2][i]!=0)
		   	   {
		   	   	 //cout<<" using sum "<<i<<endl;
		   	   	      if(i-q>0  )
		   	   	        {
		   	   	        	
		   	   	  	      ans=(ans+((sum[pm]-sum[i-q-1])*dp1[n%2][i])%mod+mod)%mod;
						}
						
						else ans=(ans+((sum[pm])*dp1[n%2][i])%mod+mod)%mod;
						 //cout<<ans<<endl;
							  }
		   }
		 cout<<ans<<endl;
 }
 