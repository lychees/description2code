#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 5;

const int mod = 1e9 + 7;

int ans, n, a[N], q, k;

vector < int > g[N];

void add(int &a, int b)
{
	a += b;
	if (a >= mod) a -= mod;
}

int mult(int a, int b)
{
	return (1ll * a * b) % mod;
}

int dfs(int v, int p, int rt)
{
	if (a[v] < a[rt] || (a[v] == a[rt] && v < rt)) return 0;
	int ans = 1;
	for (auto to : g[v])
		if (to != p)
			ans = mult(ans, dfs(to, v, rt) + 1);
	return ans;
}

int main()
{
  scanf("%d", &n);
  for (int i = 1;i <= n;i++) scanf("%d", &a[i]);
  for (int i = 1, u, v;i < n;i++)
  {
  	scanf("%d%d", &u, &v);
  	g[u].push_back(v), g[v].push_back(u);
  }
	scanf("%d", &q);
	while(q--)
	{
		scanf("%d", &k);
		ans = 0;
		for (int i = 1;i <= n;i++)
			if (a[i] == k)
				add(ans, dfs(i, i, i));
		printf("%d\n", ans);
	}
	return 0;
}