#include <bits/stdc++.h>
using namespace std;

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		int n;
		vector<int> pos, neg;
		cin >> n;
		for (int i = 0; i < n; i++)
		{
			int x;
			cin >> x;
			if (x >= 0)
			{
				pos.push_back(x);
			}
			else
			{
				neg.push_back(x);
			}
		}

		long maxp = LONG_MIN, minp = LONG_MAX, maxn = LONG_MIN, minn = LONG_MAX;
		int np = pos.size(), nn = neg.size();

		sort(pos.begin(), pos.end());
		sort(neg.begin(), neg.end());

		if (np > 0)
		{
			minp = pos[0];
			for (int i = 1; i < np; i++)
			{
				if (minp * pos[i] > minp)
					break;
				else
					minp *= pos[i];
			}

			maxp = pos[np - 1];
			for (int i = np - 2; i >= 0; i--)
			{
				if (maxp * pos[i] < maxp)
					break;
				else
					maxp *= pos[i];
			}

		}

		if (nn > 0)
		{
			if (neg.size() % 2 == 0)
			{
				maxn = neg[0];
				minn = neg[0];
				for (int i = 1; i < nn; i++)
				{
					maxn *= neg[i];
					if (i != nn - 1)
						minn *= neg[i];
				}
			}
			else
			{
				minn = neg[0];
				maxn = neg[0];
				for (int i = 1; i < nn; i++)
				{
					minn *= neg[i];
					if (i != nn - 1)
						maxn *= neg[i];
				}
			}
		}

		long maxans, minans;
		if (np > 0 and nn > 0)
		{
			maxans = max(max(maxp, maxn), maxp*maxn);
			minans = min(min(minp, minn), min(minp*minn, minn*maxp));
		}
		else if (np > 0)
		{
			maxans = maxp;
			minans = minp;
		}
		else if (nn > 0)
		{
			maxans = maxn;
			minans = minn;
		}

		cout << maxans << " " << minans << endl;

	}
	system("pause");
}
