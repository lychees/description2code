#include<stdio.h>
#include<iostream>
#include<cmath>
#include<string>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<stack>
#include<utility>
#define PB push_back
#define MP make_pair
#define LL long long int
#define M 1000000007
using namespace std;


vector<int> v[100002], vrev[100002], ans[100002];
set<int> myset;
vector<int> s;
int vis[100002],vis_rev[100002];
LL a[100002],b[100002];
int k;

void DFS(int i)
{
    //cout<<i<<" ";
    vis[i] = 1;
    int j;
    for(j=0;j<v[i].size();j++)
    {
        if(vis[v[i][j]] == -1)
        {
            DFS(v[i][j]);
        }
    }
    s.PB(i);
    return;
}

void DFSrev(int i)
{
    myset.insert(i);
    vis_rev[i] = 1;
    int j;
    for(j=0;j<vrev[i].size();j++)
    {
        if(vis_rev[vrev[i][j]] == -1)
        {
            DFSrev(vrev[i][j]);
        }
    }
    ans[k].PB(i);
}


int main()
{
    LL ans_final, ans_temp;
        int t,m,i,j,n,temp,x,y;
        cin>>t;

    while(t--)
    {

        cin>>n;
        cin>>m;

        for(i=1;i<=n;i++)
        {
            cin>>a[i];
        }

        for(i=1;i<=n;i++)
        {
            v[i].clear();
            vrev[i].clear();

        }
        s.clear();
        myset.clear();
        for(i=1;i<=m;i++)
        {
            cin>>x>>y;
            x++;
            y++;
            v[x].PB(y);
            vrev[y].PB(x);
        }

        for(i=1;i<=n;i++)
        sort(vrev[i].begin(), vrev[i].end());

        for(i=1;i<=n;i++)
        vis[i] = -1;


        for(i=1;i<=n;i++)
        {
            if(vis[i] == -1)
            {
            //  cout<<i<<endl;
                DFS(i);
    //          cout<<endl;
            }
        }
        for(j=1;j<=n;j++)
        vis_rev[j] = -1;

        k = 0;

        for(i=s.size()-1;i>=0;i--)
        {
            if(vis_rev[s[i]] == -1)
            {
                DFSrev(s[i]);
                k++;
            }
        }
    //  cout<<"here"<<endl;


        int len = k;
/*
        for(i=0;i<len;i++)
        {
            for(j=0;j<ans[i].size();j++)
            cout<<ans[i][j]<<" ";
            cout<<endl;
        }
*/
        LL final_ans = -1;
        LL sum = 0;
        for(i=0;i<len;i++)
        {
            sum = 0;
            for(j=0;j<ans[i].size();j++)
            {
                sum += a[ans[i][j]];
            }
            if(sum > final_ans)
                final_ans = sum;
        }
        for(i=0;i<len;i++)
        ans[i].clear();
        cout<<final_ans<<endl;
    }
    return 0;
}
