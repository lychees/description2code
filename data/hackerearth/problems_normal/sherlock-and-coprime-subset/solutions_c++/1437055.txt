#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <unistd.h>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <set>
#include <string>

#define pb push_back
#define mp make_pair
#define ll long long
#define FOR(i, A, N) for(int (i) = (A); (i) < (N); (i)++)
#define REP(i, N) for(int (i) = 0; (i) < (N); (i)++)

using namespace std;
int n;
int P = 15;
int pr[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47};
int A[55];

int dp[55][1<<15];

int largest(int pos, int prmask) {
	if(pos == n) return 0;
	int& ans = dp[pos][prmask];
	if(ans != -1) return ans;

	ans = largest(pos+1, prmask);
	bool canadd = true;
	REP(i, 15) if((prmask&(1<<i)) && (A[pos] % pr[i] == 0)) canadd = false;

	if(canadd) {
		int nmask = prmask;
		REP(i, 15) if(A[pos] % pr[i] == 0) nmask |= 1<<i;
		ans = max(ans, 1+largest(pos+1, nmask));
	}

	return ans;
}

int main() {
	int T;
	scanf("%d", &T);
	while(T--) {
		memset(dp, -1, sizeof(dp));
		scanf("%d", &n);
		REP(i, n) scanf("%d", A+i);
		printf("%d\n", largest(0, 0));
	}
	return 0;
}
