/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
ll parent[10005];
ll dis[105][105];
struct node
{
	ll a, b, c;
};
node edge[10005];
void ini()
{
	for(ll i=1;i<=10005;i++)
		parent[i]=i;
		memset(dis,-1,sizeof(dis));
		memset(edge,0,sizeof(edge));
}
bool comp(node a,node b)
{
	return a.c<b.c;
}
ll root(ll a)
{
	while(a!=parent[a])
		a=parent[a];
	return a;
}
void uni(ll a,ll b)
{
	ll p=root(a);
	ll q=root(b);
	parent[p]=q;
}
ll kruskal(node edge[],ll ind)
{
	ll mincost=0;
	for(ll i=0;i<ind;i++)
	{
		ll a=edge[i].a;
		ll b=edge[i].b;
		ll c=edge[i].c;
		if(root(a)!=root(b))
		{
			mincost+=c;
			uni(a,b);
		}
	}
	return mincost;
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	ll t;
	cin>>t;
	while(t--)
	{
		ini();
		ll n,m,k;
		cin>>n>>m>>k;
	
		for(ll i=0;i<m;i++)
		{
			ll a,b,c;
			cin>>a>>b>>c;
			dis[a][b]=c;
			dis[b][a]=c;
		}

		for(ll i=1;i<=n;i++)
		{
			for(ll j=1;j<=n;j++)
			{
				if(i==j)
				dis[i][j]=0;
				else if(dis[i][j]==-1)
				dis[i][j]=10000000LL;
			}
		}
		for(ll k1=1;k1<=n;k1++)
		{
			for(ll i=1;i<=n;i++)
			{
				for(ll j=1;j<=n;j++)
				{
					dis[i][j]=min(dis[i][j],dis[i][k1]+dis[k1][j]);
				}
			}
		}
		//cout<<dis[1][5]<<" "<<dis[1][2]<<" "<<dis[2][5]<<endl;
		
		ll ind=0;
		for(ll i=1;i<=k;i++)
		{
			for(ll j=i+1;j<=k;j++)
			{
				edge[ind].a=i;
				edge[ind].b=j;
				edge[ind].c=dis[i][j];
				ind++;
			}
		}
		sort(edge,edge+ind,comp);
		ll ans=kruskal(edge,ind);
		cout<<ans<<"\n";
	}
}

