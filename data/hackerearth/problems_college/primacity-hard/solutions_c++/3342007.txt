#include<bits/stdc++.h>
#define MAX 10000001
std::vector<long long> v[9];
long long s[MAX];
void sieve() {
    long long i,j;
    for ( i = 2 ; i <= MAX ; i++ ) {
        v[s[i-1]].push_back(i-1);
        if(s[i] == 0)
        for ( j = i ; j <= MAX ; j += i) {
            s[j]++;
        }
    }
    /*for ( j = 2 ; j <= MAX ; j++ ) {
        v[s[j]].push_back(j);
    }*/
}
int main () {
    sieve();
    long long t,a,b,k,total =0 ;
    scanf("%lld",&t);
    while ( t-- ) {
        scanf ( "%lld %lld %lld", &a,&b,&k);
        if ( k>8 )
            std::cout<<"0\n";
        else {
            std::vector<long long>::iterator lb_a ,ub_a, lb_b , ub_b;
            lb_a = lower_bound(v[k].begin() , v[k].end() , a);
            ub_a = lower_bound(v[k].begin() , v[k].end() , a);
            lb_b = lower_bound(v[k].begin() , v[k].end() , b);
            ub_b = upper_bound(v[k].begin() , v[k].end() , b);
            if ( lb_b == ub_b && lb_a == ub_a)
                total = lb_b - lb_a ;
            else
                total = lb_b - lb_a + 1;

            std::cout<<total<<"\n";
        }
    }
    return 0;
}
