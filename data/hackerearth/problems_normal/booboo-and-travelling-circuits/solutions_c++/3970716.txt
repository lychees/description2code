#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <map>
#include <assert.h>
#include <cmath>
#include <queue>
#include <set>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define SZ(x) (int)(x.size())
#define rep(i,a,b) for(int i=a;i<b;i++)
#define per(i,a,b) for(int i=b-1;i>=a;i--)
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)
 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 2010


template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}
 
//FILE* outFile;
 
inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}


int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=ans*(ll)a%mod;
        a=(ll)a*a%mod;b>>=1;
    }
    return ans;
}

const int mo=1000000003,M=10001;
int rt,now,a[N][M+2],b[N][M+2],id[M],f[M],L[M],R[M];
ll dp[2][M];
bool cmp(int i,int j){return f[i]<f[j];}
int main(){
    //freopen("A.in","r",stdin);
    //freopen("A.out","w",stdout);
    int j,k,i,ca=0,T,m,n;
    scanf("%d%d",&n,&m);
    int s,P,Q,r,x,y,z,w;
    scanf("%d%d%d%d",&s,&P,&Q,&r);
    scanf("%d%d%d%d",&w,&x,&y,&z);
    rep(i,0,(n*m)){
        s=(1LL*P*s%mo*s+1LL*Q*s+r)%mo;
        a[i/m][i%m+1]=s;
        w=(1LL*x*w%mo*w+1LL*y*w+z)%mo;
        b[i/m][i%m+1]=w;
    }
    rep(i,2,m+1){
        rep(j,2,i){
            if(j*j>i)break;
            if(i%j==0){f[i]=j;break;}
        }
        if(!f[i])f[i]=i;
    }
    f[1]=1;
    rep(i,1,m+1)id[i]=i;
    sort(id+1,id+m+1,cmp);
    rep(i,2,m+1){
        j=i;
        while(j<=m&&f[id[j]]==f[id[i]]){
            j++;
        }
        L[f[id[i]]]=i,R[f[id[i]]]=j-1;
        i=j-1;
    }
    now=0;
    rep(i,1,n){
        ll mi=1e18,mx;
        rep(j,2,m+1){
            int x=id[j],y=f[x];
            if(L[y]==j)mi=1e18;
            dp[1-now][j]=min(mi,dp[now][j]+a[i-1][x]);
            Min(mi,dp[now][j]+b[i-1][x]);
        }
        mi=1e18,mx=1e18;
        per(j,2,m+1){
            int x=id[j],y=f[x];
            if(R[y]==j)mi=1e18;
            Min(dp[1-now][j],mi);
            Min(mi,dp[now][j]+b[i-1][x]);
            Min(mx,dp[now][j]+b[i-1][x]);
        }
        dp[1-now][1]=min(mx,dp[now][1]+a[i-1][1]);
        now=1-now;
    }
    ll ans=dp[now][1];
    rep(i,2,m+1)Min(ans,dp[now][i]);
    printf("%lld\n",ans);
    //cerr<<1.*clock()/CLOCKS_PER_SEC<<"s\n";
    return 0;
}