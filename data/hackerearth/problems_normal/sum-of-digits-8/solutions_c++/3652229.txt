#include<bits/stdc++.h>
using namespace std;
long long s;
long long dp[25][150];
long long go(int idx, int sum) {
	if(idx==0 and sum==s) return 1;
	else if(idx==0) return 0;
	if(dp[idx][sum]!=-1) return dp[idx][sum];
	long long ret=0;
	for(int j=0;j<=9;j++) ret+=go(idx-1,sum+j);
	return dp[idx][sum]=ret;
}
long long compute(vector<int> &A) {
	long long ret=0;
	int lft=(int)A.size();
	int sum=0;
	for(int i=0;i<(int)A.size();i++) {
		lft--;
		int dig=A[i];
		for(int j=0;j<dig;j++) ret+=go(lft,sum+j);
		sum+=dig;
	}
	return ret;
}
int main() {
	memset(dp,-1,sizeof(dp));
	long long a,b;
	cin>>a>>b>>s;
	vector<int> A,B;
	long long copy=a;
	while(a!=0) {
		A.push_back(a%10);
		a/=10;
	}
	a=copy;
	b++;
	copy=b;
	while(b!=0) {
		B.push_back(b%10);
		b/=10;
	}
	b=copy;
	reverse(A.begin(),A.end());
	reverse(B.begin(),B.end());
	long long t1=compute(A);
	long long ans=-t1;
	ans+=compute(B);
	printf("%lld\n",ans);
	t1++;
	long long lo=a,hi=b;
	while(lo<=hi) {
		long long mid=lo+(hi-lo+1)/2;
		vector<int> X;
		long long copy=mid;
		while(copy!=0) X.push_back(copy%10),copy/=10;
		reverse(X.begin(),X.end());
		long long P=compute(X);
		if(P>=t1) hi=mid-1;
		else lo=mid+1;
	}
	printf("%lld\n",hi);
	return 0;
}