#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
typedef long long LL;
using namespace std;
int main()
{
    int t;si(t);
    while(t--)
    {
        int n;si(n);
        vector<string> a;
        int k;
        si(k);
        int ct[k][26]; memset(ct,0,sizeof ct);
        for(int i=0;i<n;i++)
        {
            string s; cin>>s;
            a.PB(s);
            for(int j=0;j<s.size();j++)
                ct[j][s[j]-'a']++;
        }
/*        for(int i=0;i<k;i++)
        {
            long long m=INT_MAX,pos=0;
            for(int j=0;j<26;j++)
            {
                long long ans=0;
                for(int l=0;l<26;l++)
                {
                    long long  diff=abs(j-l)*(ct[i][l]);
                    ans+=diff;
                }
                if(ans<m)
                {
                    m=ans;pos=j;
                }
            }
            char pp=pos+'a';
            cout<<pp;
        }*/
        for(int i=0;i<k;i++)
        {
            string ss;
            for(int j=0;j<n;j++)
                ss+=a[j][i];
            sort(ss.begin(),ss.end());
            if(ss.size()&1) cout<<ss[ss.size()/2];
            else cout<<ss[ss.size()/2-1];
        }
        cout<<endl;
    }
	return 0;
}
