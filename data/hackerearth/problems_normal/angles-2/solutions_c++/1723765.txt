/* Copyright Generation of Miracles
   subset.cpp -- Subset Sum problem
*/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <queue>
#include <limits>

using namespace std;

int main(int argc, char *argv[]) {
  int knows, wants;
  cin >> knows >> wants;
  vector<int> raju(knows);
  vector<int> rani(wants);
  for (int i = 0; i < knows; ++i)
    cin >> raju[i];
  for (int i = 0; i < wants; ++i)
    cin >> rani[i];
  vector<bool> sub(361);
  for (int i = 1; i <= 360; ++i)
    sub[i] =false;
  sub[0] =true;
  for (int i = 0; i < knows; ++i) {
    for (int j = 1; j <= 360; ++j) {
      if (j >= raju[i] && sub[j-raju[i]]) sub[j] =true;
      int temp =raju[i];
      for (int k = 2; (temp%360) > 0; ++k) {
        sub[(temp%360)] =true;
        temp =k*raju[i];
      }
    }
  }
  for (int i = 0; i < wants; ++i) {
    if (sub[rani[i]])
      cout<< "YES"<< endl;
    else
      cout<< "NO"<< endl;
  }
  return 0;
}
