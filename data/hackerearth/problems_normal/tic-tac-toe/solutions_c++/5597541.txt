#include<bits/stdc++.h>
using namespace std;
#define ll	long long int
#define MOD	1000000007
ll pow_mod(ll a, ll b)
{
	ll res=1;
	while(b)
	{
		if(b&1)
			res=(res*a)%MOD;
		a=(a*a)%MOD;
		b>>=1;
	}
	return res;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int t;
	cin>>t;
	assert(t>=1 && t<=100000);
	while(t--)
	{
		ll n;
		cin>>n;
		assert(n>=3 && n<=1000000000 && n&1);
		/*
			Min Value = (n(n-1)(n-1))/4
		*/
		ll minx=((n-1)*(n-1))%MOD;
		minx=(minx*n)%MOD;
		minx=(minx*pow_mod(4,MOD-2))%MOD;
		/*
			Max Value = (n*(n-1)*(2n-1))/6
		*/
		ll maxx=(n*(n-1))%MOD;
		maxx=(maxx*(2*n-1))%MOD;
		maxx=(maxx*pow_mod(6,MOD-2))%MOD;
		/*
			Without using Power by exponentiation
		*/
		/*
			Min Value
		*/
		ll minx1=((n-1)/2)*((n-1)/2)%MOD;
		minx1=(minx1*n)%MOD;
		/*
			Max Value
		*/
		ll maxx1=((n-1)/2);
		ll tmp1=n;
		ll tmp2=2*n-1;
		if(maxx1%3==0)
			maxx1/=3;
		else if(tmp1%3==0)
			tmp1=tmp1/3;
		else
			tmp2=tmp2/3;
		maxx1=(maxx1*tmp1)%MOD;
		maxx1=(maxx1*tmp2)%MOD;
		assert(minx==minx1 && maxx==maxx1);
		cout<<minx<<" "<<maxx<<endl;
	}
	return 0;
}