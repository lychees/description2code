#include <bits/stdc++.h>
using namespace std;
#define MAX 26
int nodes;
class Trie{
	public:
	Trie *child[MAX];
	int prefixes;
	int words;
	int nodes;
	Trie(){
		prefixes=0;
		words=0;
		for(int i=0;i<MAX;i++)
		child[i]=NULL;
	}
	void addword(char *a){
		if(*a=='\0'){
			words++;
			return;
		}
		Trie *t=child[*a-'a'];
		if(t==NULL){
			t=child[*a-'a']=new Trie();
			t->prefixes=1;
		} else
		t->prefixes++;
		t->addword(a+1);
	}
	string s;
   void print(Trie *t){
   	//cout<<"fsf";
   	if(t==NULL)
   	return;
   	if(t->words>0 ){
   		cout<<s<<endl;
   	} 
   	for(int i=0;i<MAX;i++){
   	//	if(t->child[i]!=NULL)
   		s.push_back(i+'a');
   		print(t->child[i]);
   	//	if(t->child[i]!=NULL)
   		s.resize (s.size() - 1);
   	}
   }
};
void countNodes(Trie *t){
	nodes++;
		for(int i=0;i<MAX;i++){
			if(t->child[i]!=NULL){
			//	nodes++;
				countNodes(t->child[i]);
			}
		}
	}
char a[50];
int main()
{
	Trie *t=new Trie();
	int n;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>a;
		t->addword(a);
	}
//	t->print(t);
	countNodes(t);
	cout<<nodes<<"\n";
    return 0;
}
