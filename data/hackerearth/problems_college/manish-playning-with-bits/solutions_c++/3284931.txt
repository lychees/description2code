// ADITYA VARSHNEY

#include <iostream>
#include <bitset>
#include <cmath>
#include <queue>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <climits>

#define pb push_back
#define mp make_pair
#define mod 1000000007

typedef long long int ll;

using namespace std;

#define getcx getchar//_unlocked
#define mod2 4294967296

long long int powr (long long int a, long long int b)
{
if (b == 0)
return 1;
long long int x = powr(a, b/2);
if (b % 2 == 0)
return (x*x)%mod;
else
return (((x*x)%mod)*a)%mod;
}


long long int scanll()
{
    long long int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

int scani()
{
    int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

int main()
{
    ll t,x,i,n,j,m,k;
    t = scanll();
    while(t--) {
        m = scanll();
        n = scanll();

        ll dp[55][12] = {};

        for(j = 2; j <= m; j++) {
            for(i = 1; i <= n ; i++) {
                if(j > i) {
                    dp[i][j] = (1<<i);
                } else if(j == i) {
                    dp[i][j] = ((1<<i)-1);
                } else {
                    for(k = 0; k < j; k++) {
                        dp[i][j] += dp[i-k-1][j];
                    }
                }
         //       cout<<dp[i][j]<<" ";
            }
           // cout<<endl;
        }
        printf("%lld\n", dp[n][m]);
    }
    return 0;
}
