#include <bits/stdc++.h>

using namespace std;

#define endl '\n'
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define rep(i, a, b) for(int i=a;i<b;++i)
#define SZ(x) ((int)(x).size())

typedef vector<int> VI;
typedef long long LL;
typedef pair<int,int> PII;

template<typename TH>
void debug_vars(const char* data, TH head){
	cerr << data << "=" << head << "\n";
}

template<typename TH, typename... TA>
void debug_vars(const char* data, TH head, TA... tail){
	while(*data != ',') cerr << *data++;
	cerr << "=" << head << ",";
	debug_vars(data+1, tail...);
}

class Course{
public:

    int id;
    int z;
    
    int x; //Number of Students
    int e1, e2;
    
    Course(int _id, int _x, int _e1, int _e2) : id(_id), x(_x), e1(_e1), e2(_e2){
        z = x*(e1 + e2);
    }
    
    bool operator<(const Course& other) const {
        if(z != other.z) return z > other.z;
        
        return id > other.id;
    }
    
};

priority_queue<Course> heap;

int main(){
	ios::sync_with_stdio(false); cin.tie(0);
    
    int c, p, n;
    cin>>c>>p>>n;
    
    int k = 0;
    int x;
    
    //debug_vars("c, p, n", c, p, n);
    for(;k<n;++k){
        cin>>x;
        heap.push(Course(k+1, 1, x, 0));
    }
    
    for(;k<c;++k){
        heap.push(Course(k+1, 0, 0, 0));
    }
    
    
    int i = 0;
    while(cin>>x){                    
            Course tmp = heap.top(); heap.pop();
            
            //cout<<"("<<tmp.id<<", "<<tmp.z<<") ";
            cout<<tmp.id<<" ";
            
            heap.push(Course(tmp.id, tmp.x + 1, x, tmp.e1));
            
            i++;
        }
    
    for(;i<p;++i){
        x = 0;        
        Course tmp = heap.top(); heap.pop();            
        //cout<<"("<<tmp.id<<", "<<tmp.z<<") ";
        cout<<tmp.id<<" ";
        heap.push(Course(tmp.id, tmp.x + 1, x, tmp.e1));
            
    }
    cout<<endl;

	return 0;
}





















