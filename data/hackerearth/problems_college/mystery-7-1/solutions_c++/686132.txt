#define _CRT_SECURE_NO_WARNINGS
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <bitset>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll; typedef vector<pair<long long,long long> > vpll;
typedef vector<string> vs; typedef long double ld;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

const char *multitap_alphas[10] = {
	"","","ABC","DEF","GHI","JKL","MNO","PQRS","TUV","WXYZ"
};
const int multitap_lens[10] = { 0,0,3,3,3,3,3,4,3,4 };
int multitap_key[128];
int multitap_idx[128];
void multitap_init() {
	rep(i, 10) {
		const char *p = multitap_alphas[i];
		int k = 0;
		while(*p) {
			multitap_key[*p] = i;
			multitap_idx[*p] = k;
			k ++; ++ p;
		}
	}
}


int main() {
	multitap_init();
	int T;
	scanf("%d", &T);
	char *s = new char[101];
	rep(ii, T) {
		scanf("%s", s);
		for(char *p = s; *p; ++ p)
			*p = '0' + multitap_key[toupper(*p)];
		puts(s);
	}
	return 0;
}
