#include<bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d", &x)
const int maxn = 1000001;
int prime[maxn] = {0};
int sum[maxn] = {0};
int ans[maxn] = {0};
int final[maxn] = {0};

int findsum(int n){
	int sum = 0;
	while(n != 0){
		sum += n%10;
		n = n/10;
	}
	return sum;
}


void sieve(){
	for(int i=2;i<=sqrt(maxn);i++){
		if(prime[i] == 0){
			for(int j =i*i;j<maxn;j+=i)
				prime[j] = i;
		}
	}
}


void preprocess(){
	sieve(); 
	prime[0] = prime[1] = 1;
	for(int i=1;i<maxn;i++){
	
		if(i%10 == 0)
			sum[i] = findsum(i);
		else sum[i] = sum[i-1] + 1;
	}


	ans[0] = 0; ans[1] = 1;
	for(int i=2;i<maxn;i++){
		int summ=0;
		
		if(prime[i] == 0){
			ans[i] = sum[i];
		}
		
		else{

		summ = sum [ prime[i] ] + ans[ i/prime[i]];
		ans[i] = summ;
		}
	}
	
	for(int i=2;i<maxn;i++){
		if(ans[i] == sum[i])
			final[i] = final[i-1] + 1;
		else
			final[i] = final[i-1];
	}

}






int main(){
	preprocess();
	int t; sd(t);
	while(t--){
	int l,r; sd(l); sd(r);
	printf("%d\n",final[r] - final[l-1]);
}
	return 0;
}