#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
 
typedef long long ll;
 
const int mo=1000000007;
 
int pn, prime[500000];
 
void findPrime(int n)
{
	static bool flag[1000005];
	for (int i=2;i<=n;i++) if (!flag[i])
	{
		prime[++pn]=i;
		for (int j=i;j<=n/i;j++) flag[i*j]=true;
	}
}
 
int POW(int base, int exp)
{
	if (!exp) return 1;
	if (exp&1) return (ll)POW(base,exp-1)*base%mo;
	ll tmp(POW(base,exp>>1));
	return tmp*tmp%mo;
}
 
ll n(int p, int e)
{
	return (((ll)POW(p,3*e)+POW(p,3*e-1)-POW(p,2*e-1))%mo+mo)%mo;
}
 
ll N(ll m)
{
	ll ret(1);
	for (int i=1;m>1 && i<=pn;i++) if (m%prime[i]==0)
	{
		int e(0);
		while (m%prime[i]==0) e++, m/=prime[i];
		ret*=n(prime[i],e), ret%=mo;
	}
	if (m>1)
		ret*=n(m%mo,1), ret%=mo;
	return ret;
}
 
int main()
{
	findPrime(1e6);
	int Q;
	scanf("%d",&Q);
	while (Q--)
	{
		ll p;
		scanf("%lld",&p);
		printf("%lld\n",(((p-1)%mo)*((p-1)%mo)+N(p-1))%mo);
	}
	return 0;
}