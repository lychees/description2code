#include <bits/stdc++.h>
using namespace std;
int isprime[5100];
int arr[1000001];
int dp[5001][5001],n;
int recur(int idx, int sol) {
	if(idx >= n) {
		if(isprime[sol] == false) {
		//	cout << sol << endl;
			return 0;
		}
		return -1e9;
	}
	if(dp[idx][sol] != -1) {
		return dp[idx][sol];
	}
	int ans;
	if(isprime[sol] == false) {
		ans = max(recur(idx+1,0), arr[idx]+recur(idx+1,sol+1));
	}
	else {
		ans = arr[idx]+recur(idx+1,sol+1);
	}
	return dp[idx][sol] = ans;
}
void is(int k) {
	memset(isprime,false,sizeof isprime);
	//isprime[0] = true;
	isprime[1] = true;
	for(int i = 2; i*i <= k; i++) {
		if(isprime[i] == false) {
			for(int j = i*2; j <= k; j+=i) {
				isprime[j] = true;
			}
		}
	}
	
}
int main()
{
	memset(dp,-1,sizeof dp);
	is(5001);
	//int n;
	cin >> n;
	for(int i=0 ;i < n; i++) {
		cin >> arr[i];
	}
	int ans = recur(0,0);
	cout << ans << endl;
    //cout << "Hello World!" << endl;
    return 0;
}
