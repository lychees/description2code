#include<bits/stdc++.h>
#define DIST(x1,x2, y1, y2) (((x1-x2)*(x1-x2))+((y1-y2)*(y1-y2)))
#define DIST3D(x1,x2, y1, y2, z1, z2) (((x1-x2)*(x1-x2))+((y1-y2)*(y1-y2)) + ((z1-z2)*(z1-z2)))
#define CLR(a) a.clear()
#define VCLR(a, n) for(int i=0; i<=n+3; i++) a[i].clear()
#define SIZE(a) a.size()
#define ERASE(a, b) memset(a, b, sizeof a)
#define PB(a, b) a.push_back(b)
#define PB2(a,i,b) a[i].push_back(b)
#define LL long long
#define ULL unsigned long long
#define DBG cout<<"I Am Here"<<endl
#define DBGA(a) cout<<a<<endl
#define DBGI(b,a) cout<<b<<' '<<a<<endl
#define DBGL(i,s,e,b) or(int i=s; i<=e; i++) cout<<b<<endl
#define INF 1e9
#define INV 1e-6
#define sll(a) scanf("%I64d", &a)
#define pll(a) printf("%I64d\n", a)
#define si(a) scanf("%d", &a)
#define pii pair<LL,LL>
#define MAX 100006
#define CASE(i) printf("Case %d: ", i);
#define CSH(i) printf("Case #%d: ", i);
#define PI acos(-1)
#define piis pair<int, string>
#define fast1 ios_base::sync_with_stdio(false);
#define fast2 cin.tie(0)


LL MOD = 1000000007;

using namespace std;

LL bigmod(LL b, LL p, LL m)
{
    if(p==0)  return 1;
    if(p%2==0)
    {
        LL x = bigmod(b,p/2,m);
        return (x%m * x%m)%m;
    }
    else return ((b%m)*bigmod(b,p-1,m)%m)%m;
}


LL MODINVERSE(LL a)
{
    return bigmod(a, MOD-2, MOD);
}

int arr[4] = {7,5, 3,2};
int test, vis[1000006], target, csno;
int dp[1000006];

int solve(int tar)
{
    if(tar>=target){
        if(tar==target) return 0;
        if(tar>target)  return 20000000;
    }
    if(vis[tar]==csno) return dp[tar];
    vis[tar] = csno;

    int ret = 20000000;
    for(int i=0; i<4; i++)
    {
        ret = min(ret, 1 + solve(tar + arr[i]));
       // cout<<ret<<endl;
    }
    dp[tar] = ret;
    return dp[tar];
}

int main()
{
    scanf("%d", &test);
    for(csno=1; csno<=test; csno++)
    {
        scanf("%d", &target);
        int ans = 1000000;
        ans = min(ans, solve(0));
        if(ans==1000000)
            printf("-1\n");
        else
            printf("%d\n", ans);
    }
}

