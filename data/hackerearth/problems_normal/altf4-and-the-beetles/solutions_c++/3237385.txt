#include <bits/stdc++.h>
using namespace std;

int main()
{int t;
cin>>t;
 long long int N;
 long long int A,B,C;
 while(t--)
 {cin>>N>>A>>B>>C;
 long long int x,y;
    vector<pair<long long int,long long int> >vec,v;
    for(int i=0;i<N;i++)
    {
    	cin>>x;
    	cin>>y;
    	v.push_back(make_pair(x,y));
    	vec.push_back(make_pair(x,0));
    	vec.push_back(make_pair(y,1));
    }
    N=2*N;
    long long int maxcost=0;
    long long int curoverlap=0;
    
    sort(vec.begin(),vec.end());
    for(int i=0;i<N;i++)
    {
    	if(vec[i].second==0)
    	curoverlap++;
    	else
    	curoverlap--;
    	long long int active=curoverlap;
    	long long int closed=(i-curoverlap+1)/2;
    	long long int rest=N/2-active-closed;
    	long long int cost=active*B+closed*C+rest*A;
    	if(maxcost<cost)
    	{maxcost=cost;
    	
    	}
    }
    
   	
   	cout<<maxcost<<endl;
   
   
 }
    return 0;
}
