#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return r;
}
int dp[1024][1024]={{}};

int main(){

  int t;
  si(t);
  while(t--){
     int n,m,b;
     si(n),si(m),si(b);
     vector< pair<int, pair<int,int> > > g[n+2];
     int u,v,c,l;

     fr(i,0,m){
        si(u),si(v),si(c),si(l);
        g[u].pb(mp(v,mp(c,l)));
     }
     fr(i,0,b+1){
        fr(j,1,n+1){
           dp[i][j]=1e9;
        }
     }
     dp[0][1]=0;//home

     fr(cost,0,b+1){
         fr(i,1,n+1){
           fr(j,0,g[i].size()){
             v=g[i][j].x;
             c=g[i][j].y.x;
             l=g[i][j].y.y;

             if(cost+c<=b){
                dp[cost+c][v]=min(dp[cost+c][v],dp[cost][i]+l);
             }
           }
         }
     }
     //to get the min lenght=>
     fr(cost,1,b+1){
       fr(i,1,n+1){

        // cout<<dp[cost][i]<<" ";
         dp[cost][i]=min(dp[cost][i],dp[cost-1][i]);
         //cout<<dp[cost][i]<<" ";
       }
     //  pln;
     }

     int q;
     si(q);
     int pos,bud;
     while(q--){
        si(pos),si(bud);
       if(dp[bud][pos]!=1e9){
           cout<<dp[bud][pos];pln;
       }
       else{
          pi(-1);pln;
       }

     }

  }

return 0;
}
