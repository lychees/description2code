#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>  
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define block 350
using namespace std;
 
typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

int n,m,d;
ll cnt[200005]={0},ans=0,an[200005],a[100005];

struct node
{
	int l,r,i;
}q[200005];

bool cmp(node x,node y)
{
	if(x.l/block!=y.l/block)
	return x.l<y.l;
	return x.r<y.r;
}

void add(int pos)
{
	cnt[a[pos]]++;
	int l=max(a[pos]-d,0ll);
	int r=a[pos]+d;
	rep(i,l,r)
	if(i!=a[pos])
	ans+=cnt[i];
	//o2(pos,ans);on;
}

void remove(int pos)
{
	
	cnt[a[pos]]--;
	int l=max(a[pos]-d,0ll);
	int r=a[pos]+d;
	rep(i,l,r)
	if(i!=a[pos])
	ans-=cnt[i];
	//o2(pos,ans);on;
}

int main()
{ios_base::sync_with_stdio(false);
cin.tie(0);
cin>>n>>m>>d;
rep(i,0,n-1)
cin>>a[i];
rep(i,0,m-1)
{
	cin>>q[i].l>>q[i].r;
	q[i].l--;q[i].r--;
	q[i].i=i;
}

sort(q,q+m,cmp);
int cl=0,cr=0;
rep(i,0,m-1)
{
	int l=q[i].l,r=q[i].r;
	//o2(l,r);on;
	while(cl<l)
	{
		remove(cl);
		cl++;
	}
	while(cl>l)
	{
		add(cl-1);
		cl--;
	}
	while(cr<=r)
	{
		add(cr);
		cr++;
	}
	while(cr>r+1)
	{
		remove(cr-1);
		cr--;
	}
	an[q[i].i]=ans+r-l+1;
}
rep(i,0,m-1)
{
	ol(an[i]);on;
}
return 0;
}