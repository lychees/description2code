#include <iostream>
#include<vector>
#include<algorithm>
#define MOD 1000000007
using namespace std;
 
long long moduluspower(long long a,long long b, long long c);

int main()
{
    int test;
    	int n;
    	long long arr[20],res,numerator,denominator;
    		vector<long long> vec;
    cin>>test;
   for(int l=0;l<test;l++){
    	cin>>n;
    	for(int i=0;i<n;i++) {
    		cin>>arr[i];
    	}
    	sort(arr,arr+n);
    res=0;
    long long power=pow(2,n);
    	for(int i=1;i<power;i++) {
    		vec.clear();
    		for(int j=0;j<n;j++) {
    			if(i & (1<<j)) {
    				vec.push_back(arr[j]);
    			}
    		}
    		int size1 = vec.size();
    		if(size1%2==0) {
    		//	sort(vec.begin(), vec.end());
    			numerator = 1;
    			 denominator = 1;
    			
    			for(int j=0; j<size1/2;j++) {
    				denominator=denominator * vec[j];
    				denominator=denominator%MOD;
    				numerator=numerator *vec[size1-1-j];
    				numerator=numerator %MOD;
    			}
    			
    			denominator = moduluspower(denominator, MOD-2, MOD);
    			long long result = (numerator * denominator)%MOD;
    			if(result > res)
    				res = result;
    		}
    		
    	}
    	cout<<res<<endl;
    }
}
long long moduluspower(long long a,long long b, long long c)
{
 long long res = 1, i = b, j = a%c;
 while(i)
 {
  if(i & 1) res = res*j%c;
  j = j * j % c;
  i = i/2;        
 }      
 return res;
}

