#include<iostream>

using namespace std ;
long long fast_pow(long long int a,long long int n)
{   long long MOD = 1000000007 ;
    long long result = 1;
    long long power = n;
    long long value = a;
    while(power>0)
    {
        if(power&1)
            {result = result*value;
            result = result%1000000007;}
        value = value*value;
        value = value%1000000007;
        power /= 2;
    }
    return result%MOD;
}

int MMI(long long int n,long long int M)
{
    int i=1;
    while(i<M)
    {
        if(( (long long)i * n ) % M ==1)
            return i;
        i++;
    }
    return -1;
}
int main()
{
    long long fact[100001];
    fact[0]=1;
    int i=1;
    int MOD=1000000007;
    while(i<=100001)
    {
        fact[i]=(fact[i-1]%MOD *i % MOD)%MOD;
        i++;
    }
    int t ;
    cin >> t ;
    while(t--)
{   int n ,k ;
    cin >> n >> k;
    long long int up = fact[k] % MOD ;
    long long i = MOD -2 ;
    long long int down = fast_pow(fact[k-n],i) % MOD ;
    cout << (up*down)%MOD << endl ;
}
    return 0 ;
}
