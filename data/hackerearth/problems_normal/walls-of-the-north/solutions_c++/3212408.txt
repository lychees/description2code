#include <stdio.h>
#include <algorithm>
#include <cstring>
#include <stdlib.h>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <numeric>
#include <utility>
#include <deque>
#include <stack>
#include <bitset>
#include <map>
#include <set>
#include <string>
#include <vector>
#include <queue>
#include <limits>
#include <fstream>
#include <list>
#include <sstream>
#include <iostream>
#include <iomanip>

using namespace std;
#define MAX 100005
#define DEC 0
#define INC 1
int n, a[ MAX ];
int dp[ MAX ][ 2 ];
int solve( int act , int flag ){
    if( act == n ){
        return 0;
    }

    if( dp[act][flag] != -1 )
        return dp[ act ][flag];

    int maxi = 0;
    if( act + 1 < n && a[act] >= a[act + 1] && flag == INC ){
        maxi = max( maxi , 1 + solve(act + 1, !flag) );
    }
    if( act + 1 < n && a[act] <= a[act + 1] && flag == DEC){
        maxi = max( maxi , 1 + solve( act + 1, !flag) );
    }
    maxi = max( maxi , solve( act + 1 , flag ) );
    return dp[act][flag]= maxi;
}

int main(){
    int t;
    scanf("%d" , &t );
    while( t-- > 0 && scanf("%d" , &n ) ){
        //for( int i = 0 ; i < n; ++i )a[i] = 1000000000;
        for( int i = 0 ; i < n && scanf("%d" , &a[i]) ; ++i );
        if( n < 3 ){
            printf("%d\n" , n );
        }else{
            memset(dp , -1 , sizeof(dp ));
            int ans = solve(0,DEC);
            ans = 1 + max( ans , solve(0,INC));
            printf("%d\n" , ans );
        }
    }
    return 0;
}
