#include<bits/stdc++.h>
#include<iterator>
#define pb push_back
#define F first
#define S second
#define mp make_pair
#define lli long long int
#define INF 1000000000000
#define MOD 1000000007
#define FOR(name,initial,final) for(lli name=initial;name<final;name++)
#define rz resize
#define all(x) (x).begin(),(x).end()
using namespace std;
typedef vector<lli> vli;
set<pair<lli,int> > s;
int root(vector<int> &arr,int i)
{
	while(arr[i]!=i)
	{
		arr[i]=arr[arr[i]];
		i=arr[i];
	}
	return i;
}

void initialise(vector<int> &v,vector<lli> &sum,int n)
{
	FOR(i,0,n)
	{
		v[i]=i;
		sum[i]=1;
	}
}

void unions(vector<int> &arr,vector<lli> &sum,int a,int b)
{
	int root_A = root(arr,a);
	int root_B = root(arr,b);
	if(root_A==root_B)
		return;
	s.erase(mp(sum[root_A],root_A));
	s.erase(mp(sum[root_B],root_B));
	if(sum[root_A]<sum[root_B])
	{
		arr[root_A]=arr[root_B];
		sum[root_B]+=sum[root_A];
		//cout<<sum[root_B]<<" indunc"<<endl;
		s.insert(mp(sum[root_B],root_B));
	}
	else
	{
		arr[root_B]=arr[root_A];
		sum[root_A]+=sum[root_B];
		//cout<<sum[root_A]<<" indunc"<<endl;
		s.insert(mp(sum[root_A],root_A));
	}
	
}
int main()
{
	int n,q,a,b;
	cin>>n>>q;
	vector<int> arr(n);
	vector<lli> sum(n);
	initialise(arr,sum,n);
	FOR(i,0,n)
	{
		s.insert(mp(1,i));
	}
	set<pair<lli,int> >::iterator it1,it2,it3;
	while(q--)
	{
		cin>>a>>b;
		unions(arr,sum,a-1,b-1);
		//int root_A = root(arr,a);
		//int root_B = root(arr,b);
		it1=s.begin();
		it2=s.end();
		it2--;
		//cout<<(*it2).S<<' '<<(*it2).F<<endl;
		//cout<<(*it2).F-(*it1).F<<endl;
		lli min_diff=INF;
		/*for(;it1!=s.end();it1++)
		{
			cout<<(*it1).S <<' '<<(*it1).F<<endl;
		}*/
		it3=++s.begin();
		for(;it1!=it2;it1++,it3++)
		{
			//cout<<(*it1).S <<' '<<(*it1).F<<endl;
			//it3 = std::next(it1,1);
			//it1--;
			
			lli val = (*it3).F-(*it1).F;
			if(val<min_diff)
				min_diff=val;
			if(min_diff==0)
				break;
		}
		if(min_diff==INF)
			cout<<0<<endl;
		else
			cout<<min_diff<<endl;

	}


}