#include <iostream>
#include<cstdio>
#include<set>
#include<vector>
#define INF 1000000000
using namespace std;
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,i,j;
        scanf("%d",&n);
        vector < pair < int , int > > adj[n+1];
        int m,x,y,w;
        scanf("%d",&m);
        while(m--)
        {
            scanf("%d%d%d",&x,&y,&w);
            adj[x].push_back(make_pair(y,w));
            adj[y].push_back(make_pair(x,w));
        }
        int distance[n+1];
        fill(distance,distance+n+1,INF);
        distance[1]=0;
        int visited[n+1];
        fill(visited,visited+n+1,0);
        multiset < pair < int , int > > s;
        s.insert(make_pair(0,1));
        while(!s.empty())
        {
            pair < int , int > p=*s.begin();
            s.erase(s.begin());
            int v=p.second;
            int l=p.first;
            if(visited[v]==1)
                continue;
            visited[v]=1;
            for(i=0;i<adj[v].size();i++)
            {
                int e=adj[v][i].first;
                int f=adj[v][i].second;
                if(distance[v]+f<distance[e])
                {
                    distance[e]=distance[v]+f;
                    s.insert(make_pair(distance[e],e));
                }
            }
        }
        int q;
        scanf("%d",&q);
        while(q--)
        {
            int a,k,h;
            scanf("%d%d",&a,&k);
            h=distance[a]*2;
            if(h<=k)
                printf("%d\n",(k-h));
            else
                printf("0\n");
        }
    }
    return 0;
}
