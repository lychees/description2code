//Template

// By Anudeep :)
//Includes
#include <vector> 
#include <queue>
#include <map> 
#include <set>
#include <utility> //Pair
#include <algorithm>
#include <sstream> // istringstream>> ostring stream<<
#include <iostream> 
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <limits>
using namespace std;

//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)

#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define dg(n,s); printf("%s %d",s,n)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()

#define N 411111
int a[N/2];
bool isp[N];
vi primes;
#define M 1000000007
int dp[2][64];

int solve(int n) {
	// cout << n << endl;
	memset(dp, 0, sizeof dp);
	dp[0][0] = 1;
	int cur=1, prev = 0;
	fu(i,1,n){
		rep(XOR,64) {
			dp[cur][XOR] = (dp[prev][XOR] + dp[prev][XOR^a[i-1]]);
			if(dp[cur][XOR] >= M) dp[cur][XOR] -= M;
		}
		swap(cur, prev);
	}
	ll ans = 0;
	fu(i,1,63) ans += dp[n&1][i];
	return (int) (ans%M);
}

void assert(bool f) {
	if(!f) {
		int a = 0;
		cout << 10 / a << endl;
	}
}

ll temp[111111];
void makeFactorArray(ll A, ll B) {
	for(ll i=A; i<=B; i++) temp[i-A] = i, a[i-A] = 0;
	for(int i=0; i<primes.sz; i++) {
		int cur = primes[i];
		for(ll j = (A/cur)*cur; j <= B; j += cur) if(j-A>=0) { while(temp[j-A]%cur==0) a[j-A]++, temp[j-A]/=cur; }
	}
	for(ll i=A; i<=B; i++) if(temp[i-A]>1) a[i-A]++;
}

int main() {
	isp[0] = isp[1] = 1;
	for(int i=2; i*i<=N; i++) if(isp[i]==0) for(int j=i+i; j<N; j+=i) isp[j] = 1;
	rep(i,N) if(isp[i]==0) primes.pb(i);
	int t;
	gi(t);
	while(t--) {
		ll A,B;
		gl(A); gl(B);
		makeFactorArray(A,B);
		memset(dp, -1, sizeof dp);
		printf("%d\n",solve(B-A+1));
	}
	return 0;
}