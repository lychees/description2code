#include <iostream>
#include <cstdio>

#define MAX_NUM  10000
#define MAX_N 500
#define MAX_K 500


int minDropsArray[MAX_K][MAX_N];

void init() {

	for(int s=0; s<MAX_N; s++){
		minDropsArray[0][s]=s+1;
	}

}

int getMinimumDrops(int k, int n){
	//printf("k=%d,n=%d\t",k,n);

	if(n==0)
		return 0;

	if(minDropsArray[k-1][n-1] != 0) {
		//printf("pass\n");
		//printf("\n");
		return minDropsArray[k-1][n-1];
	} else {
		//printf("fail\n");
	}
	//printf("\n");

	int reqdMinDrops = MAX_NUM;
	for (int r=1; r<=n; r++) {
		int curMinDrops1 = getMinimumDrops(k,n-r) + 1;
		int curMinDrops2 = getMinimumDrops(k-1,r-1) + 1;
		int curMinDrops  = std::max(curMinDrops1,curMinDrops2);

		reqdMinDrops = std::min(curMinDrops,reqdMinDrops);
		
	}

	minDropsArray[k-1][n-1]=reqdMinDrops;	
	//printf("k=%d n=%d reqd min drops=%d\n",k, n, reqdMinDrops);

	return minDropsArray[k-1][n-1];
}


int main(int argc, char* argv[]){
	init();	

	int cases;

	scanf("%d",&cases);

	for(int i=0; i<cases; i++){
		int k,n;
		scanf("%d %d", &n, &k);	
		printf("%d\n",getMinimumDrops(k,n));
	}

	return 0;
}
