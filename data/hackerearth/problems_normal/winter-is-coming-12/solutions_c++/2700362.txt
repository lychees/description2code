using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

int test,n,vt;
map<ll,int> f;
ll ans,sum,x;

int main(){
 //   freopen("winter-is-coming-12.inp", "r", stdin);
 //   freopen("winter-is-coming-12.out", "w", stdout);
    ri(test);
    while (test--){
        ri(n);
        f.clear();
        ans=INF;
        sum=0;
        f[0]=0;
        FORE(i,1,n){
            ri(x);
            sum=(sum+x)%n;
            if (f[sum] || sum==0){
                    if (ans>i-f[sum]){
                        vt=i;
                        ans=i-f[sum];
                    }
            }
            f[sum]=i;
        }
        cout << vt-ans+1 << " " << vt << "\n";
    }
}
