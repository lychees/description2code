#include<iostream>
#include<string>
#include<cstdlib>
using namespace std;
struct trie
{
	struct trie *arr[20];
	long long int w;
};
trie *head;
long long int getit(long long int n)
{
	long long int ret = -1;
	trie *t1=head;
	while(n >= 0)
	{
		if(n > 0)
		{

			if(t1->arr[n%10] == NULL) break;
			t1 = t1->arr[n%10];
			n /= 10;
		}
		else if(n==0)
		{
			if(t1->arr[10] == NULL) break;
			t1 = t1->arr[10];
			ret = t1->w;
			n--;
		}
	}
	return(ret);
}
long long int ans(long long int n)
{
	long long int ret=n;
	if(n == 0) return(0);
	long long int x=0,l;
	if(n/2 > 0)
	{
		l = getit(n/2);
		if(l == -1) x += ans(n/2);
		else x += l;
	}
	if(n/3 > 0) 
	{
		l = getit(n/3);
		if(l == -1) x += ans(n/3);
		else x += l;
	}
	if(n/4 > 0)
	{
		l = getit(n/4);
		if(l == -1) x += ans(n/4);
		else x += l;
	}
	if(x > n) ret = x;
	trie *t1=head,*t2;
	while(n >= 0)
	{
		if(n > 0)
		{
			if(t1->arr[n%10] == NULL)
			{
				t2 = (trie*)malloc(sizeof(trie));
				for(int i=0; i<20;i++) t2->arr[i] = NULL;
				t2->w=0;
				t1->arr[n%10] = t2;
			}
			t1 = t1->arr[n%10];
			n /= 10;
		}
		else if(n == 0)
		{
			if(t1->arr[10] == NULL)
			{
				t2 = (trie*)malloc(sizeof(trie));
				for(int i=0;i<20;i++) t2->arr[i] = NULL;
				t2->w = 0;
				t1->arr[10] = t2;
			}
			t1 = t1->arr[10];
			t1->w = ret;
			n--;
		}
	}
	return(ret);
}
int main()
{
	head = (trie*)malloc(sizeof(trie));
	head->w = 0;
	long long int n,i;
	for(i=0;i<20;i++) head->arr[i] = 0;
	cin >> n;
	cout << ans(n) << endl;
	return(0);
}
