#include <iostream>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <climits>
#include <vector>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <algorithm>
#include <limits>
using namespace std;

typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<vi> vvi;
typedef vector<ii> vii;
typedef long long ll;
typedef vector<ll> vll;
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()

#define trace(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define track(a) cerr << #a << ": "; for (auto tmp: a) cerr << tmp << " "; cerr << endl;
#define trackp(a) cerr << #a << ": "; for (auto tmp: a) cerr << "(" << tmp.first << ", " << tmp.second << "), "; cerr << endl;

#define MOD 1000000007
#define MAX 100050

int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin >> t;
    while (t--) {
        string s;
        cin >> s;
        int n = s.size();
        int prevpos[128] = {};
        for (int i = 0; i < 128; i++) prevpos[i] = -1;
        int dp[MAX] = {};
        dp[0] = 1;
        prevpos[s[0]] = 0;
        for (int i = 1; i < n; i++) {
            if (s[i-1] == s[i]) dp[i] = 1;
            else {
                dp[i] = dp[i-1] + 1;
                if (prevpos[s[i]] != -1)
                    dp[i] = min(dp[i], i - prevpos[s[i]]);
            }
            prevpos[s[i]] = i;
        }
        int max_length = 0;
        for (int i = 0; i < n; i++) {
            max_length = max(max_length, dp[i]);
        }
        printf("%d\n", max_length);
    }

}
