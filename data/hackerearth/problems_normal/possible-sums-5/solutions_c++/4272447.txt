//https://www.hackerearth.com/problem/algorithm/possible-sums-5/
#include <bits/stdc++.h>
using namespace std;
vector<vector<bool> > ss(10002,vector<bool>(101,false));
int max_sum,cnt=0;
void ps(vector<int> &v)
{
	int n=v.size();
	for(int i=0;i<=n;i++)
		ss[0][i]=true;
	for(int i=1;i<=max_sum;i++)
	{
		for(int j=1;j<=n;j++)
		{
			ss[i][j]=ss[i][j-1];
			if(i>=v[j-1])
				ss[i][j]=ss[i][j] || ss[i-v[j-1]][j-1];
			
		}
		if(ss[i][n])
			cnt++;
	}
	
}
int main()
{
	int test;
	cin>>test;
	while(test--)
	{
		int n;
		cin>>n;
		max_sum=0;
		cnt=0;
		vector<int> arr(n,0);
		for(int i=0;i<n;i++)
		{
			cin>>arr[i];
			max_sum+=arr[i];
		}
		for(int i=0;i<=max_sum;i++)
		{
			for(int j=0;j<=n;j++)
				ss[i][j]=false;
		}
		ps(arr);
		cout<<cnt+1<<endl;
		
	}
	return 0;
}
