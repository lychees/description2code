def sort_by_one_swap(A):
    N = len(A)
    start = 0
    while start + 1 < N and A[start] < A[start + 1]:
        start += 1
    end = start + 1
    while end + 1 < N and A[end] > A[end + 1]:
        end += 1
    i = end + 1
    while i + 1 < N:
        if not A[i] < A[i + 1]:
            return -1, -1
        i += 1
    if end + 1 < N and A[start] > A[end + 1]:  # even though reversed
        return -1, -1
    return start + 1, end + 1


def check_sorted(A):
    result = True
    for i in range(len(A)-1):
        if A[i] > A[i+1]:
            result = False
    return True if result is True else False


if __name__ == '__main__':
    t = int(raw_input())
    for i in range(t):
        t1 = int(raw_input())
        arr = []
        p = map(eval, raw_input().split())
        for i in range(t1):
            arr.append(p[i])
        if check_sorted(arr):
            print -1, -1
        else:
            temp1, temp2 = sort_by_one_swap(arr)
            print temp1, temp2
