#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define ff first
#define ss second
#define vii vector<ll> :: iterator
#define vli vector<ll> :: iterator
#define miii map<ll,ll> :: iterator 
#define mlli map<ll,ll> :: iterator
#define mm(a,b) memset(a,b,sizeof(a)) 
#define f_i(a,b) fill(a.begin(),a.end(),b)
#define pp pair<ll,ll> 
#define mp make_pair
#define M 1000000007
#define rank rnk
using namespace std;


vector<ll> dst;
vector<ll> rank;





//DISJOll-SETS ta tadan...:D :D :D

	ll make_set(ll x)
	{
		dst[x] = x; rank[x] = 0;
	}
	
	ll find_set(ll x)
	 {
		if (x != dst[x]) 
			dst[x] = find_set(dst[x]);
		return dst[x];
	}
	
	void link(ll x, ll y) 
	{
		if (rank[x] > rank[y])
			dst[y] = x;
		else
		 {
			dst[x] = y;
			if (rank[x] == rank[y]) rank[y]++;
		}
	}

void unionSets(ll x, ll y) {
	link(find_set(x),find_set(y));
	}


//vector<ll> gp[5001] ;
set<ll> ad;

//bool vst[5001];
pair<ll, pp> e[100001] ;


int main()
{
	  ios_base::sync_with_stdio(false);
	  cin.tie(0) ;

	  #ifndef ONLINE_JUDGE
	    freopen("INPUT.txt", "r", stdin);
	  #endif	  


	    ll t,n,m;
	    cin>>t;

	    while(t--)
	    {
	    	cin>>n>>m ;


	    	dst.clear() ;
	    	rank.clear() ;
	    	
	    	for(ll i=0;i<m;i++)
	    	{
	    		cin>>e[i].ss.ff>>e[i].ss.ss>>e[i].ff;
	    	
	    		e[i].ss.ff--;
	    		e[i].ss.ss--;
	    	}
	    	
	    	for(ll i=0;i<n;i++)
	    		dst.pb(i),rank.pb(0) ;

	    	sort(e,e+m);

	    	ad.clear() ;

	    		ll ans=1;

	    	for(ll i=0;i<m;i++)
	    	{
				if(find_set(e[i].ss.ss) == find_set(e[i].ss.ff))
					continue;    //cycle...
	    			
	    			ad.insert(e[i].ss.ss);
	    			ad.insert(e[i].ss.ff);
	    			
	    			unionSets(e[i].ss.ff,e[i].ss.ss) ;

	    		ans=( ans*e[i].ff )%M;

	    	}
			
	    	cout<<ans<<endl;

		 }



}

