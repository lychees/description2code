#include <iostream>
using namespace std;
struct list
{
	int data;
	struct list *next;
};
void print(struct list *p)
{
	while(p!=NULL)
	{
		cout<<p->data;
		p=p->next;
	}
	cout<<endl;
}
int main()
{
	int n,c,t,N;
	struct list *g=NULL,*b=NULL;
	cin>>c;	
	while(c--)
	{
		cin>>N;
		int n=N,n1=N;
		g=NULL;b=NULL;
		while(n--)
		{
			struct list *temp=(struct list *)malloc(sizeof(struct list));
			cin>>temp->data;
			temp->next=NULL;
			if(g==NULL)
			g=temp;
			else
			{
				struct list *t1=g,*t2;
				if(temp->data<t1->data)
				{
					temp->next=t1;
					g=temp;
				}
				else
				{
					int f=0;
					while(t1->next!=NULL)
					{
						t2=t1->next;
						if(temp->data<t2->data)
						{
							temp->next=t2;
							t1->next=temp;
							f=1;
							break;
						}
						t1=t1->next;
					}
					if(f==0)
					t1->next=temp;
				}
			}
		}
		while(n1--)
		{
			struct list *temp=(struct list *)malloc(sizeof(struct list));
			cin>>temp->data;
			temp->next=NULL;
			if(b==NULL)
			b=temp;
			else
			{
				struct list *t1=b,*t2;
				if(temp->data>t1->data)
				{
					temp->next=t1;
					b=temp;
				}
				else
				{
					int flag=0;
					while(t1->next!=NULL)
					{
						t2=t1->next;
						if(temp->data>t2->data)
						{
							temp->next=t2;
							t1->next=temp;
							flag=1;
							break;
						}
						t1=t1->next;
					}
					if(flag==0)
					t1->next=temp;
				}
			}
		}
		n=N;
		int count=0;
		while(n--)
		{
			
			if(g->data%b->data==0 || b->data%g->data==0)
			{
				count++;
			}
			g=g->next;
			b=b->next;
		}
		cout<<count<<endl;
	}

    return 0;
}
