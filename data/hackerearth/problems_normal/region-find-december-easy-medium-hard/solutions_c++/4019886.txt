//its not how good you are...its how good you want to be
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll  long long int
#define inf 100000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)

vector<ll>v[1000001];
ll wt[1000001],dp[1000001],n,k;

void dfs(ll cur,ll par)
{
	for(ll i=0;i<v[cur].size();i++)
	{
		ll x=v[cur][i];
		if(x==par)
		continue;
		dfs(x,cur);
	}
	if(wt[cur]<k)
	dp[cur]=0;
	else
	{
		dp[cur]=1;
		for(ll i=0;i<v[cur].size();i++)
		{
			ll x=v[cur][i];
			if(x==par)
			continue;
			dp[cur]=(dp[cur]*(dp[x]+1))%mod;
		}
	}
}	
int main()
{
	ll i,j,x,y,q,ans;
	cin>>n;
	for(i=1;i<=n;i++)
	cin>>wt[i];
	for(i=1;i<=n-1;i++)
	{
		cin>>x>>y;
		v[x].pb(y);
		v[y].pb(x);
	}
	cin>>q;
	while(q--)
	{
		mem(dp,0);
		ans=0;
		cin>>k;
		dfs(1,-1);
		for(i=1;i<=n;i++)
		{
			ans+=dp[i];
			ans%=mod;
		}	
		mem(dp,0);
		k++;
		dfs(1,-1);
		for(i=1;i<=n;i++)
		{
			ans-=dp[i];
			ans=(ans+mod)%mod;
		}	
		cout<<ans<<endl;
	}
	return 0;
}