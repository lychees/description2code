#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
#include <unordered_map>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;

#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define fst first
#define snd second
ll t, n, m, u, v, q, r, ql, qr, k, l, s, x, y, w, h, c, z, d, b;
const int N = 1e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 62LL;
const bool JUDGE = false;
ll f[2 * N];
vii pos;
int main() {
    csl;
    if (JUDGE) {
        freopen("input.in", "r", stdin);
        freopen("output.out", "w", stdout);
    }
    cin >> t;
    while (t--) {
        cin >> n >> k;
        for (int i = 0; i < n; ++i) cin >> f[i];
        pos.clear();
        pos.push_back(-1);
        for (int i = 0; i < n; ++i) if (f[i] > k) pos.push_back(i);
        ll sol = 0;
        for (int i = 1; i < (int)pos.size(); ++i) {
            sol += 1LL * (pos[i] - pos[i - 1]) * 1LL * (n - pos[i]);
        }
        cout << sol << '\n';
    }
    return 0;
}










