#include<bits/stdc++.h>
#include<time.h>
using namespace std;
#define ll long long int

#define MAX 1450000
#define LIM 1205
#define MAX1 110000
#define LIM1 386
long int Primes[110630];
ll PPrime[10454];

int flagArr[MAX>>6];
#define ifComp(x) (flagArr[x>>6]&(1<<((x>>1)&31)))
#define isComp(x) (flagArr[x>>6]|=(1<<((x>>1)&31)))
int flagArr1[MAX>>6];
#define ifComp1(x) (flagArr1[x>>6]&(1<<((x>>1)&31)))
#define isComp1(x) (flagArr1[x>>6]|=(1<<((x>>1)&31)))

void BitSeive()
{
       ll i,j,k,c,n=0;
       for(i=3;i<LIM;i+=2)
       {
              if(!ifComp(i))
              {
                     for(j=i*i,k=i<<1;j<MAX;j+=k)
                            isComp(j);
              }	
       }
     
         c=2;
         Primes[1]=2;
       for(i=3;i<MAX ;i+=2)
       {
              if(!ifComp(i))
              {
                     Primes[c++]=i;

                     
              }
       }
      
}
void BitSeive1()
{
       ll i,j,k,c,n=0;
       for(i=3;i<LIM1;i+=2)
       {
              if(!ifComp1(i))
              {
                     for(j=i*i,k=i<<1;j<MAX1;j+=k)
                            isComp1(j);
              } 
       }
     
         c=2;
         PPrime[1]=3;
       for(i=3;i<MAX1 ;i+=2)
       {
              if(!ifComp1(i))
              {
                     PPrime[c++]=Primes[i];
                    
              }
       }
      
}


   
int main(int argc, char const *argv[])
{
  ll i,j,k,n,m,s,t,l;

  scanf("%lld",&t);
  
  BitSeive();
  BitSeive1();
  for (l=0; l<t; l++)
  {
     //cin>>n>>m;
     scanf("%lld%lld",&n,&m);
     
    s=(PPrime[n]*PPrime[m])%(1000000007);
      printf("%lld\n",s);
   } 
  
  return 0;
}