//
//  main.cpp
//  MindPlacesHE
//
//  Created by Shashank Shekhar on 07/09/16.
//  Copyright Â© 2016 Shashank Shekhar. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
#include <unordered_map>
#include <map>
#include <set>
#include <queue>
#include <cstring>
#include <sstream>
#include <iterator>
#include <stack>
#define minInt INT_MIN
#define maxInt INT_MAX
#define umaxInt UINT_MAX
#define llminInt LLONG_MIN
#define llmaxInt LLONG_MAX
#define MOD 1000000007
#define mp(a, b) make_pair(a, b)
#define F first
#define S second
#define pb(a) push_back(a)
#define sze(a) (int)(a.size())
#define fr(i,a,N) for (int i =a;i<N;i++)
#define fre(i,a,N) for (int i =a;i<=N;i++)
#define frr(i,a,N) for (int i = a;i>=N;--i)
#define lli long long int
#define ulli  unsigned long long int
#define ui unsigned int
#define pii pair<int,int>
#define vi vector<int>
#define vpii vector<pair<int,int>>
#define vpsi vector<pair<string,int>>
#define print_array(a,n) for(i=0;i<=n;i++) cout<<a[i]<<" ";
using namespace std;

int ar[1000][1000];
int binSearch (int i,int l,int h,int ele) {
    if (l>h) return -1;
    int mid = l+ (h-l)/2;
    if (ar[i][mid] == ele) return mid;
    else if (ele < ar[i][mid])
        return binSearch(i,l,mid-1,ele);
    else return binSearch(i,mid+1,h,ele);
}


int main(int argc, const char * argv[]) {
    // insert code here...
    
    int n,m,q,ele,ans = -1,col = 0;
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >> n>>m;
    fr(i,0,n)
    fr (j,0,m)
    cin >> ar[i][j];
    cin >> q;
    while (q--) {
        cin >>ele;
        fr (i,0,n) {
            ans = -1;
            if (ele < ar[i][0] || ele > ar[i][m-1]) continue;
            ans = binSearch(i,0,m-1,ele);
            if (ans != -1)  {
                col = i;
                break;
            }
            
        }
        if (ans == -1)
            cout << "-1 -1\n";
        else cout << col << " " << ans << "\n";
    }
    return 0;
}
