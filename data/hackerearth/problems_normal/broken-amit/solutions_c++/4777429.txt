#include<bits/stdc++.h>
#define pb push_back
#define PI acos(-1)
#define mp make_pair
#define f first
#define sd(x) scanf("%d",&x)
#define sdl(x) scanf("%lld",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define maxn 100010
#define S second
#define ll long long int
#define inf 1000000014
#define infl (ll)(1e18+1)
#define mod 1000000007
#define sz(x) (int) x.size()
#define pi pair< int,int >
#define pl pair< ll,ll >
#define pii pair<pi,int>
#define pu push
#define trace1(x)  cerr << #x << ": " << x << endl
#define trace2(x, y)  cerr << #x << ": " << x << " | " << #y << ": " << y << endl
using namespace std;
int lov[20];
int decr[20];
ll soi[1<<17+5];
ll vals[1<<17+5][20];
ll dp[1<<17+5];
int main(int argc, char const *argv[])
{
  //freopen("input.txt","r",stdin);
  //freopen("output.txt","w",stdout);
  int n;
  sd(n);
  int ans = 0;
  for (int i = 0; i < n; ++i)
  {
      sd(lov[i]);
      vals[0][i] = lov[i];
      soi[0]+=lov[i];
  }
  for (int i = 0; i < n; ++i)
  {
      sd(decr[i]);
  }
  for(int i=1;i<1<<n;i++)
  {
    int k = __builtin_popcount(i);
    ll ans = -infl;
    int prev = -1;
     for(int j=0;j<n;j++)
     {
        if(i&(1<<j))// can turn this off to get ans
        {
            int x = i^(1<<j);
            if(soi[x]+dp[x] > ans)
            {
                ans = soi[x]+dp[x];
                prev = x;
            }
        }
     }
     dp[i] = ans;
     for(int j=0;j<n;j++)
     {
        if((i&(1<<j))==0)
        vals[i][n-j-1] = vals[prev][n-j-1]-(n-j-1)*decr[n-1-j];
        else
        vals[i][n-j-1] = vals[prev][n-j-1];
        soi[i]+=vals[i][n-j-1];
     }
  }
  //for(int i=0;i<4;i++)
    //cout<<vals[i][0]<<" "<<vals[i][1]<<"\n";
  //for(int i=0;i<4;i++) cout<<dp[i]<<" ";
  cout<<dp[(1<<n)-1]<<'\n';
  return 0;
}