#include<bits/stdc++.h>
using namespace std;
#define lx long long
const int mod = int(1e9+7);
lx c[1001][1001];
lx f[1001];
lx dp[1001];

void faccalc(int n)
{
    f[0]=1;
    for (int i=1;i<=n;i++)
        f[i] = (f[i-1]*i)%mod;
}
void combcalc(int n)
{
    for (int i=0;i<=n;i++)
    {
        for (int j=0;j<=i;j++)
        {
            if (j==0 || j==i)
                c[i][j]=1;
            else
                c[i][j] = (c[i-1][j]+c[i-1][j-1])%mod;
        }
    }
}
void dpcalc(int n)
{
    dp[0]=1;
    for (int i=0;i<n;i++)
        for (int j=0;j<=i;j++)
        {
            lx ways = ((c[i][j]*f[j+1])%mod*dp[i-j])%mod;
            dp[i+1] = (dp[i+1]+ways)%mod;
        }
}
int main()
{
    ios::sync_with_stdio(0);
    //freopen("input.txt","r",stdin);
    int n,k;
    cin>>n>>k;
    faccalc(n);
    combcalc(n);
    dpcalc(n);
    cout<<(dp[n]*c[n][k])%mod;
    return 0;
}
