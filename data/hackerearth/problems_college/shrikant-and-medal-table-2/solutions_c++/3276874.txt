#include <bits/stdc++.h>
using namespace std;

bool cmp (pair < int, pair < int, pair < int, string > > > x, pair < int, pair < int, pair < int, string > > > y ) {
	if (x.first>y.first)
		return true;
	else if (x.first == y.first and x.second.first > y.second.first)
		return true;
	else if (x.first == y.first and x.second.first == y.second.first and x.second.second.first > y.second.second.first)
		return true;
	else if (x.first == y.first and x.second.first == y.second.first and x.second.second.first == y.second.second.first and x.second.second.second < y.second.second.second)
		return true;
	return false;
}

int main () {
	int n;
	cin >> n;
	map < string, vector < int > > mp;
	vector < int > temp(3,0);
	string a, b, c;
	for (int i=0; i<n; i++) {
		cin >> a >> b >> c;

		if (mp.find(a)!=mp.end()) {
			mp[a][0]+=1;
		}
		else {
			mp[a] = temp;
			mp[a][0] = 1;
			//if (mp.find(a)!=mp.end())
		}
		
		if (mp.find(b)!=mp.end()) {
			mp[b][1]+=1;
		}
		else {
			mp[b] = temp;
			mp[b][1] = 1;
			//if (mp.find(a)!=mp.end())
		}
		
		if (mp.find(c)!=mp.end()) {
			mp[c][2]+=1;
		}
		else {
			mp[c] = temp;
			mp[c][2] = 1;
			//if (mp.find(a)!=mp.end())
		}
		
	}
	
	vector < pair < int, pair < int, pair < int, string > > > > v(mp.size());
	int cnt  = 0;
	
	map < string, vector < int > >::iterator it;
	for (it=mp.begin(); it!=mp.end(); it++) {
	//	cout << it->first << " ";
		string key = it->first;
		v[cnt].second.second.second = key;
		v[cnt].first = mp[key][0];
		v[cnt].second.first = mp[key][1];
		v[cnt].second.second.first = mp[key][2];
	//	cnt++;
	//	cout << v[cnt].second.second.second << " ";//= key;
//		cout << v[cnt].first << " ";//
//		cout << v[cnt].second.first << " ";// = mp[key][1];
//		cout << v[cnt].second.second.first  << " ";//= mp[key][2];
//		cout << endl;
		cnt++;
/*		for (int i=0; i<3; i++) {
			cout << mp[key][i] << " ";
		}
		cout << endl;
*/
	}
	sort(v.begin(),v.end(),cmp);
	for (int i=0; i<v.size(); i++) {
		cout << v[i].second.second.second << " ";//= key;
		cout << v[i].first << " ";//
		cout << v[i].second.first << " ";// = mp[key][1];
		cout << v[i].second.second.first  << " ";//= mp[key][2];
		cout << endl;
	}
	return 0;
}