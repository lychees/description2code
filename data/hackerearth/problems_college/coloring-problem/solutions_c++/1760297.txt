#include <iostream>
#include <fstream>
#include <string>

using namespace std;
const string TEST_FILE = "test.txt";
int main()
{
	int numGraphs;
	bool answer = true;
	int sizeAdjacentV = 1;
	int adjacentVertices[200];
	char color[200];
	bool allColored = false;
	bool allSeen = true;
	int adjacencyMatrix[200][200];
	int numVertices;
	int numEdges;
	int nodeOne;
	int nodeTwo;

	cin >> numGraphs;

	while (numGraphs > 0)
	{
		cin >> numVertices;
		if (numVertices == 0)
		{
			break;
		}
		cin >> numEdges;


		for (int i = 0; i < numVertices; ++i)
		{
			for (int j = 0; j < numVertices; ++j)
			{
				adjacencyMatrix[i][j] = 0;
			}
			adjacentVertices[i] = 0;
			if ((i == 0))
			{
				color[i] = 'B';
			}
			else
			{
				color[i] = 'W';
			}
		}

		for (int i = 0 ; i < numEdges; ++i)
		{
			cin >> nodeOne;
			cin >> nodeTwo;
			adjacencyMatrix[nodeOne][nodeTwo] = 1;
			adjacencyMatrix[nodeTwo][nodeOne] = 1;
		}

		while ((!allColored))
		{
			for (int i = 0; i < sizeAdjacentV; ++i)
			{
				allColored = true;
				for (int j = 0; j < numVertices; ++j)
				{
					if(adjacencyMatrix [adjacentVertices[i]][j])
					{
						if (color[j] == 'W')
						{
							if (color[adjacentVertices[i]] == 'B')
							{
								color[j] = 'R';
							}
							else if (color[adjacentVertices[i]] == 'R')
							{
								color[j] = 'B';
							}
							adjacentVertices[sizeAdjacentV] = j;
							++ sizeAdjacentV;
							allColored = false;
						}
						if (color[j] != 'W')
						{
							if (color[j] == color[adjacentVertices[i]])
							{
								answer = false;
							}
						}
					}
				}
			}
		}
		if (answer == true)
		{
			cout << "BICOLORABLE.\n";
		}
		else
		{
			cout << "NOT BICOLORABLE.\n";
		}
		allColored = false;
		answer = true;
		-- numGraphs;
	}
	return 0;
}