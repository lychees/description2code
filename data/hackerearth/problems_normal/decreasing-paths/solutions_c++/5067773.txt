#include<iostream>
using namespace std;
#define mod 1000000007
int arr[1005][1005],n;
long long int dp[1005][1005];
bool visited[1005][1005];
int r[]={1,-1,0,0};
int c[]={0,0,1,-1};
bool issafe(int i,int j)
{
	return (i<=n)&&(i>0)&&(j<=n)&&(j>0);
}
long long int calldfs(int i,int j)
{	
	if(dp[i][j])
	 	return dp[i][j];
	long long int sum=0;
	for(int k=0;k<4;k++)
	{
		if(issafe(i+r[k],j+c[k])&& arr[i][j]>arr[i+r[k]][j+c[k]])
		{
			sum=(sum+calldfs(i+r[k],j+c[k]))%mod;
		}
	}
	return dp[i][j]=sum+1;
}
int main()
{
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		{
			cin>>arr[i][j];
		}
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		{
			dp[i][j]=0;
		}
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		{
			if(!dp[i][j])
			{
				dp[i][j]=calldfs(i,j);
			}
		}
	}
	long long ans=0;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		{
			ans=(ans+dp[i][j])%mod;
		}
	}
	cout<<ans;
}