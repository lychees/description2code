#include<bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define fr(i,r,n) for(int i=r;i<n;i++)
#define s(a) scanf("%d",&a)
#define sf(a) scanf("%lld",&a)
#define sc(a) scanf("%s",&a)
#define p(a) printf("%d\n",a)
#define ll long long

using namespace std;

struct pack{
	int no;
	int first;
	int second;
	ll id;
};
ll a[100005];
pack queries[100005];
int ans[100005];
map<ll,int> mp;
int size;

bool compare(pack a,pack b)
{
	int x=a.first/size;
	int y=b.first/size;
	
	if(x!=y)
	return x<y;
	
	return (a.second/size)<(b.second/size);
}

ll hashh(string s)
{
	int n=s.length();
	ll x=1,ans=0;
	
	f(i,n)
	{
		ans+=x*(s[i]-'a'+2);
		x*=27;		
	}	
	
	fr(i,n,10)
	{
		ans+=x;
		x*=27;
	}
	
	return ans;
}

void add(int i)//,int v)
{
	mp[a[i]]++;
}
void remove(int i)//,int v)
{
	mp[a[i]]--;
}
	
int main()
{
	ios_base::sync_with_stdio(false);
	
	int n,q,l,r;
	string s;
	
	cin>>n;
	
	size=sqrt(n);
	
	f(i,n)
	{
		cin>>s;
		a[i]=hashh(s);	
		//cout<<s<<" "<<a[i]<<endl;
	}
	
	cin>>q;
	
	f(i,q)
	{
		cin>>queries[i].first;
		cin>>queries[i].second;
		cin>>s;
		
		queries[i].first--;
		queries[i].second--;
		queries[i].no=i;
		queries[i].id=hashh(s);
	}
	
	sort(queries,queries+q,compare);
	
	l=0;r=0;
	mp[a[0]]=1;
	
	f(i,q)
	{
		int ff=queries[i].first;
		int fr=queries[i].second;
		
		
		//cout<<"no "<<ff<<" "<<fr<<endl;
		
		while(ff<l)
		{
			add(--l);//,fid);
			//l--;
		}
		
		while(ff>l)
		{
			remove(l++);//,fid);
			//l++;
		}
		
		while(fr>r)
		{
			add(++r);//,fid);
			//r++;
		}
		
		while(fr<r)
		{
			remove(r--);//,fid);
			//r--;
		}
		
		ans[queries[i].no]=mp[queries[i].id];
	}
	
	f(i,q)
	cout<<ans[i]<<endl;
}