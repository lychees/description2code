#include <iostream>
using namespace std;
long long with(long long n)
{
		return ((n*(n+1))/2)+1;
}
#include<bits/stdc++.h>
 long long ar[2000001]={0};
 	long long fast_int()
{
        long long n = 0;
        char c = getchar_unlocked();
        while (!('0' <= c && c <= '9'))
        {
                c = getchar_unlocked(); 
        }
        while ('0' <= c && c <= '9')
        {
                n = (n<<3)+(n<<1) + c - '0';
                c = getchar_unlocked();
        }
        return n;
}
void fast_write(int n)
{
    int temp,zero=0;
    temp=n;
    if(n==0)
    { 
        putchar_unlocked('0');
        putchar_unlocked('\n');
        return;
    }
    while((temp%10)==0)
    { 
        zero++; 
        temp/=10;
    }
    temp=0;
    while(n) 
    { 
        temp=(temp<<3)+(temp<<1)+ n%10; 
        n/=10;
    } 
    while(temp) 
    { 
        putchar_unlocked(temp%10+'0'); 
        temp/=10;
    }
    while(zero--) 
        putchar_unlocked('0');
    putchar_unlocked('\n');
}
int main()
{
   ios::sync_with_stdio(false);
    int i=1;
    for(i=1;i<=2000000;i++)
        ar[i]=with(i);
    ar[0]=1;
    int t;
    t=fast_int();
    while(t--)
    {
        long long n;
       n=fast_int();
        int ans=upper_bound(ar,ar+2000001,n)-ar;
        if(ar[ans-1]>=n)
            ans--;
        fast_write(ans);
        }
    return 0;
}
