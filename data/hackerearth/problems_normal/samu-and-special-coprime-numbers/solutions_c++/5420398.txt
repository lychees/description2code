#include<bits/stdc++.h>
using namespace std;
long long memo[20][170][1460];
int digs[20];
long long solve(int pos,int sum,int sqr)
{
    if(pos==0)
        return __gcd(sum,sqr)==1;
    long long &ret=memo[pos][sum][sqr];
    if(ret!=-1)
        return ret;
    ret=0;
    for(int i=0;i<=9;i++)
        ret+=solve(pos-1,sum+i,sqr+i*i);
    return ret;
}
long long dp(long long n)
{
    int ctr=0;
    long long temp=n;
    while(temp)
    {
        digs[ctr++]=temp%10;
        temp/=10;
    }
    long long ans=0;
    int sum,sqr;
    sum=sqr=0;
    for(int i=ctr-1;i>=0;i--)
    {
      for(int j=0;j<digs[i];j++)
        ans+=solve(i,sum+j,sqr+j*j);
      sum+=digs[i];
      sqr+=digs[i]*digs[i];
    }
    return ans;
}
int main()
{
    int t;
    long long l,r;
    memset(memo,-1,sizeof(memo));
    cin>>t;
    while(t--)
    {
    	cin>>l>>r;
    	cout<<dp(r+1)-dp(l)<<"\n";
    }
    return 0;
}
