#include <bits/stdc++.h>
/*  
 *    Always code as if the guy who ends up maintaining your code will be a
 *    violent psychopath who knows where you live.
 *       ? Rick Osborne
 *           */
using namespace std;
/*Template Part begins, only the important ones. */
#define all(v) v.begin(),v.end()
#define read(a) freopen("a.txt","r",stdin)
#define write(b) freopen("b.txt","w",stdout)
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(min(a,b),min(c,d))
#define max4(a,b,c,d) max(max(a,b),max(c,d))
#define maxall(v) *max_element(all(v))
#define minall(v) *min_element(all(v))
#define pb push_back
#define mk make_pair
#define REV(x) reverse(x.begin(),x.end())
#define SORT(v) sort(all(v))
#define UN(v) SORT(v), (v).earse(unique(all(v)),v.end())
#define common(a,b) SORT(a), SORT(b), a.erase(set_intersection(all(a),all(b),a.begin()),a.end())
#define uncommon(a,b) SORT(a), SORT(b), a.erase(set_symmetric_difference(all(a),all(b),a.begin()),a.end())
#define FILL(a,d) memset(a,d,sizeof(a))
#define LL long long
#define PI 2*acos(0.0)
#define pi pair<int,int>
#define MAXM 2147483647
#define MAXML 9223372036854775807LL
#define MOD 1000000007
LL gcd(LL a, LL b){if(a==0)return(b);else return(gcd(b%a,a));}
LL fastpow(LL a, LL n, LL temp){if(n==0) return(1);if(n==1)return((a*temp)%MOD); if(n&1)temp=(temp*a)%MOD;return(fastpow((a*a)%MOD,n/2,temp));}
/*Template part gets over, finally. */
long long fac[2000113];
long long pow(long long a,int b) {
	if(b == 0) return 1;
	if(b == 1) return a%MOD;
	long long tmp = pow(a,b/2);
	tmp = (tmp*tmp)%MOD;
	if(b%2 == 1)
		tmp = (tmp*a)%MOD;
	return tmp;
}
void solution() { //Processing factorial values, here.
	int i;
	fac[0] = fac[1] = 1;
	for(i=2;i<=2*1000000;i++)
		fac[i] = (fac[i-1]*i)%MOD;
}
long long CatalanNumber(int n) { 
	// C(2n,n)/(n+1) = ((2*n)!)/(n!*(n+1)!) 
	// http://en.wikipedia.org/wiki/Catalan_number
	return ((((fac[2*n]*pow(fac[n],MOD-2))%MOD)*pow(fac[n+1],MOD-2))%MOD)%MOD;
}
int main()
{
	int tc, n;
	solution();
	scanf("%d",&tc);
	while (tc--) {
		scanf("%d",&n);
		printf("%lld\n",CatalanNumber(n));
	}
	return 0;
}