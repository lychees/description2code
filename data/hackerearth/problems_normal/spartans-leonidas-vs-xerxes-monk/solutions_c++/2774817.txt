#include<bits/stdc++.h>
#define X first
#define Y second
using namespace std;
int val,x,y,p,seg[400005],mc,s;
pair<long long,int> ll[400005],rr[400005],con;
inline void add(int l,int r,int idx)
{
    if(l==r)
    {
        if(s==0)
        {
            ll[idx]={val,1};
            rr[idx]={val,1};
        }
        else
        {
            ll[idx]={ll[idx].X+val,1};
            rr[idx]={rr[idx].X+val,1};
        }
        seg[idx]=1;
        return;
    }
    long long mid=(l+r)/2;
    if(p<=mid)
        add(l,mid,idx*2);
    if(p>mid)
        add(mid+1,r,idx*2+1);
    ll[idx]=ll[idx*2];
    rr[idx]=rr[idx*2+1];
    seg[idx]=max(seg[idx*2+1],seg[idx*2]);
    if(rr[idx*2].X<ll[idx*2+1].X)
    {
        if(ll[idx*2].Y==mid-l+1)
            ll[idx].Y=ll[idx*2].Y+ll[idx*2+1].Y;
        if(rr[idx*2+1].Y==r-(mid+1)+1)
            rr[idx].Y=rr[idx*2].Y+rr[idx*2+1].Y;
        seg[idx]=max(seg[idx],rr[idx*2].Y+ll[idx*2+1].Y);
    }
    //printf("%d %d--%d %d %d\n",l,r,ll[idx].Y,seg[idx],rr[idx].Y);

}
inline void sum(int l,int r,int idx)
{
    int mid=(l+r)/2;
    if(x<=l&&r<=y)
    {
        mc=max(mc,seg[idx]);
        if(con.Y==-1||con.X>=ll[idx].X)
            con=rr[idx];
        else if(ll[idx].Y==r-l+1&&con.X<ll[idx].X)
        {
            con.Y+=ll[idx].Y;
            con.X=rr[idx].X;
            mc=max(mc,con.Y);
        }
        else
        {
            con.Y+=ll[idx].Y;
            mc=max(mc,con.Y);
            con=rr[idx];
        }
        return;
    }
    if(y<l||r<x)
        return;
    sum(l,mid,idx*2);
    sum(mid+1,r,idx*2+1);
}
int main()
{
    int t,n,q,i,op;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d",&n,&q);
        s=0;
        for(i=1;i<=n;i++)
        {
            scanf("%d",&val);
            p=i;
            add(1,n,1);
        }
        s=1;
        for(i=0;i<q;i++)
        {
            scanf("%d",&op);
            if(op==0)
            {
                scanf("%d%d",&x,&y);
                mc=0;
                con={-1,-1};
                sum(1,n,1);
                printf("%d\n",mc);
            }
            if(op==1)
            {
                scanf("%d%d",&p,&val);
                add(1,n,1);
            }
        }
    }
}
