#include <iostream>
#include <vector>
using namespace std;

int bit[100001];
long long n, k;
vector<vector<int>> adj;
int not_root[100001];
long long res=0;

void insert(long long i)
{
	while(i<=n)
	{
		bit[i]++;
		i += i & (-i);
	}
		return;
}

void remov(int i)
{
	while(i<=n)
	{
		bit[i]--;
		i += i & (-i);
	}
	return;
}

void dfs(long long i)
{
	int val = min(k/i, n);
	while(val>0)
	{
		res += bit[val];
		val -= val & (-val);
	}
	
	insert(i);
	for(int j=0; j<adj[i].size();++j)
		dfs(adj[i][j]);
	remov(i);
}

int main()
{
	cin>>n>>k;
	adj.resize(n+1);
	
	for(int i=1; i<n; ++i)
	{
		int s, d;
		cin>>s>>d;
		adj[s].push_back(d);
		not_root[d]=1;
	}
	
	for(int i=1;i<=n; ++i)
		if(not_root[i]==0)
		{
			dfs(i);
			break;
		}
	cout<<res;
    return 0;
}