#include<iostream>
#include<vector>
using namespace std;
static int real=65536,number=0;
void dfs(int,vector<int> *,bool *);
int main()
{
 
	int n;
	int m;
	cin>>n;
	cin>>m;
	vector<int> v[n+1];
	bool vis[n+1];
	bool check[n+1];
 
	int x,y;
	for(int i=0;i<m;i++)
	{
		cin>>x;
		cin>>y;
	    check[x]=1;
		v[x].push_back(y);
	}
	int c;
	for(c=1;c<=n;c++)
	{
		if(check[c]==0)
		{
			cout<<"1";
			break;
		}
	}
	if(c!=n+1)
	{
		
	}
	else
	{
	for(int q=1;q<n+1;q++)
	{number=0;
	for(int z=1;z<=n;z++)
	{
		vis[z]=0;
		}
	//	if(v[q].size()>0)
	dfs(q,v,vis);
	if(number<real && number>0)
	real=number;
}
    cout<<"\n"<<real;
	}
	return 0;
}
 
void dfs(int x,vector<int> *v,bool *vis)
{
		vis[x]=1;
		number++;
		int s=v[x].size();
	for(int i=0;i<s;i++)
	{
		if(vis[v[x][i]]==0)
		dfs(v[x][i],v,vis);
	}
}