#include <iostream>
#include <vector>
using namespace std;
int gcd(int a, int b){
	if(b==0) return a;
	return gcd(b,a%b);
}

int main()
{
    int times[86401] = {0};
    int index, i, j ,k, numzeros;
    for(i = 23; i >=0; i--){
    	for(j = 59; j>=0; j--){
    		for(k = 59; k>=0; k--){
    			numzeros = (i==0)? 1:0 + (j==0)?1:0 + (k==0)?1:0;
    			bool good = false;
    			if(numzeros >= 2){
    				if(numzeros == 2 &&(i==1||j==1||k==1)){
    					good = true;
    				}
    				else{
    					good = false;
    				}
					cout << good << endl;
    			}
    			else if(i == 0){
    				good = (gcd(j,k) == 1)? true:false;
    			}
    			else if(j ==0){
    				good = (gcd(i,k) == 1)? true:false;
    			}
    			else if(k ==0){
    				good = (gcd(i,j) == 1)? true:false;
    			}
    			else{
    				good = (gcd(i,gcd(j,k)) == 1)? true:false;
    			}
    			index = 3600*i + 60*j + k;
    			times[index] = times[index+1];
    			if(good){
    				times[index]++;
    			}
    		}
    	}
    }
    int T;
    cin >> T;
    int hours,min,sec;
    int good_time,bad_time,num;
    for(int i =0; i< T; i++){

    	cin >> hours; 
    	cin >> min; 
    	cin >> sec;
    	index = 3600*hours + 60*min + sec;
    	good_time = times[index];
    	bad_time = 86400 - index - good_time;
    	num = gcd(good_time,bad_time);
    	if(good_time != 0 && bad_time != 0){
    	good_time = good_time/num;
    	bad_time = bad_time/num;
    	}
    	cout << bad_time << ":" << good_time << endl;
    }
    return 0;
}
