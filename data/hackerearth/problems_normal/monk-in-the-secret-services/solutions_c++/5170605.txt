#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int>   II;
typedef vector< II >      VII;
typedef vector<int>     VI;
typedef vector< VI > 	VVI;
typedef long long int 	LL;
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))
#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)


const int INF=int(1e7);
const int N=100;
int dist[N][N];
int main()
{
	fast_io;
	int t;cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		for(int i=0;i<n;i++)
			for(int j=0;j<n;j++)
				dist[i][j]=INF;
		for(int i=0;i<n;i++)
			dist[i][i]=0;
		for(int i=0;i<m;i++)
		{
			int x,y,c;
			cin>>x>>y>>c;
			x--,y--;
			if(dist[x][y]>c)
			{
				dist[x][y]=c;
				dist[y][x]=c;
			}
		}
		int s,a,h;
		cin>>s>>a>>h;
		s--,a--,h--;
		//floyd warshall to compute all pairs shortest paths
		for(int k=0;k<n;k++)
			for(int i=0;i<n;i++)
				for(int j=0;j<n;j++)
					dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
		int ans=0;
		for(int i=0;i<n;i++)
		{
			if(i==s||i==a||i==h)
				continue;
			ans=max(ans,dist[s][i]+dist[i][a]+dist[a][i]+dist[i][h]);
		}
		cout<<ans<<"\n";
	}
	return 0;
}