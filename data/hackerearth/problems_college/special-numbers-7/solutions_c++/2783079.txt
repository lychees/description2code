// problem :  
//by Nitish Kumar
//user id : nk17kumar
#include<bits/stdc++.h>
using namespace std;
typedef long long int ll ;
typedef unsigned int ui;
#define br printf("\n")
#define loop(i,k,n) for(int i=k;i<n;i++)
#define loopr(i,k,n) for(int i=k;i>=n;i--)
#define arrin(arrname,size) loop(i,0,size) cin>>arrname[i]
#define fastinput() ios_base::sync_with_stdio(false)
#define rocknroll() int t;cin>>t;while(t--)
#define mod 1000000007
#define loop1(i,k,m) for(int i=k;i<=m;i++)
#define loop2(i,k,m) for(int i=k;i<m;i++)
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define sz(x) ((int)(x).size())
#define each(it,v) for(__typeof((v).begin()) i = (v).begin(); i != (v).end(); ++i)
#define DEBUG(x) cerr << #x << " = " << x << " at line " << __LINE__ << endl;
#define all(o) (o).begin(), (o).end()
#define pq priority_queue 
//	freopen("7.txt","r",stdin);
//  freopen("7out.txt","w",stdout);
//  int memory[500]
//  memset(memory, -1 ,500)

int checkprime(long long x) {
    long long limit = x;
    int numberOfDivisors = 0;

    for (int i = 2; i*i <=(limit); i++)
	 {
        if (x % i == 0)
		 {
            limit = x / i;
            if (limit != i) 
			{
                numberOfDivisors++;
            }
            numberOfDivisors++;
        }     
	 if(numberOfDivisors>0)
	  break;
        
    }
    if(numberOfDivisors==0)
    return(1);
    else
    return(0);
}


int main()
{ 
	fastinput();
	cin.tie(NULL);
	cout.tie(NULL);
	
		int store[10001];
		int k=0;
		loop(i,2,10000000)
		{
			if(checkprime(i))
			store[k++]=i;
			if(k>10000)
			break;
		}
		ll store2[1000];int l=0,count;
		for(ll i=30;i<10000000000;i++)
		{  count=0;
			loop(j,0,10001)
			{
				if(j<=i)
				{
				
				if(i%store[j]==0)
				count++;
				if(count==3)
			{
				store2[l++]=i;
				break;
			}
			}
			else
			break;
			}
			if(l>1000)
			break;
		}
		//loop(i,0,1000)
		//cout<<store2[i]<<" ";
	
	rocknroll()
	{
	int n; cin>>n;
	printf("%lld\n",store2[n-1]);
	
	}
	return 0;
}