#include <bits/stdc++.h>

using namespace std;

const int MAX = 1e5 + 14 ;

pair < int , int > P [ MAX ] ;

int tata [ MAX ] ;
int rang [ MAX ] ;

inline int stramos ( int nod )
{
    int R = nod ;
    for ( ; R != tata [ R ] ; R = tata [ R ] ) ;

    while ( nod != tata [ nod ] )
    {
        int aux = tata [ nod ] ;
        tata [ nod ] = R ;
        nod = aux ;
    }

    return R ;
}

inline void unite ( int a , int b )
{
    a = stramos ( a ) ;
    b = stramos ( b ) ;
    if ( a == b ) return ;

    if ( rang [ a ] < rang [ b ] )
        swap ( a , b ) ;

    rang [ a ] += rang [ b ] ;
    tata [ b ] = a ;

    b = stramos ( b ) ;
    a = stramos ( a ) ;
}

vector < int > sol ;

int main()
{
    ios :: sync_with_stdio ( false ) ;
    //freopen( "input" , "r" , stdin ) ;
    int n , m ;
    cin >> n >> m ;
    for ( int i = 1 ; i <= n ; ++ i )
    {
        tata [ i ] = i ;
        rang [ i ] = 1 ;
    }
    for ( int i = 1 ; i <= m ; ++ i )
    {
        int x , y ;
        cin >> x >> y ;
        P [ i ] = make_pair( x , y ) ;
    }
    for ( int i = m ; i >= 1 ; -- i )
    {
        if ( stramos ( P [ i ].first ) != stramos ( P [ i ].second ) ) {
            unite ( P [ i ].first , P [ i ].second ) ;
        }
        else sol.push_back ( i ) ;
    }
    reverse ( sol.begin ( ) , sol.end ( ) ) ;
    cout << ( int )sol.size ( ) << '\n' ;
    for ( auto x : sol )
        cout << x << '\n' ;
    return 0;
}
