#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;

vector<long long> v;

int pre()
{
    for(int i = 1 ; i < 10000000; i++)
    {
        long long x;
        x=i;x*=i+1;x/=2;
        if(x>1000000000000)
            break;
        v.push_back(x);
    }

}



int main()
{   pre();
    int t;
    scanf("%d",&t);
    while(t--)
    {
        long long l,r;
        scanf("%lld",&l);
        scanf("%lld",&r);
        long long ans = 0;

        for(int i = 0 ; i<v.size(); i++)
        {
            if(v[i] > r)
                break;

            int lb;

            lb = lower_bound(v.begin()+i,v.end(),l-v[i])-v.begin();

            //cout<<i<<"   "<<v[i]<<"  ";
            //cout<<lb<<"   ";

            int rb = lower_bound( v.begin()+i,v.end(),r-v[i] )-v.begin();
            if(r-v[i]!=v[rb])
                rb--;

            //cout<<rb<<endl;
            if(v[i]+v[lb]>=l && v[i]+v[rb]<=r && lb<=rb)
            {   //cout<<"  ansupdated\n\n";
                ans += rb-lb+1;
            }

        }


        cout<<ans<<endl;

    }




    return 0;
}
