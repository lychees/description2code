#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return r;
}
int tc;//sahi hai bhai
int vis[1001][1001]={{}};
double dp[1001][1001];
int x,y,n,w;
double p1,p2;
double fun(int coins,int pts){

  if(!coins){
    return 1.*(pts>=w);
  }
 if(pts>w)pts=w;
 if(vis[coins][pts]==tc)return dp[coins][pts];
   vis[coins][pts]=tc;

  double t1,t2;

   t1=p1*fun(coins-1,pts+x)+(1-p1)*fun(coins-1,pts);
   t2=p2*fun(coins-1,pts+y)+(1-p2)*fun(coins-1,pts);
   dp[coins][pts]=max(t1,t2);

  return dp[coins][pts];
}

double f(int idx, int pts)
{
	if ( pts > w ) pts = w;
	if ( vis[idx][pts] == tc ) return dp[idx][pts];
	vis[idx][pts] = tc;
	if ( idx == n ) {
		if ( pts == w ) return 1.0;
		return 0.0;
	}
	double ans1 = p1*f(idx+1,pts+x) + (1.0-p1)*f(idx+1,pts);
	double ans2 = p2*f(idx+1,pts+y) + (1.0-p2)*f(idx+1,pts);
	dp[idx][pts] = max(ans1,ans2);
	return dp[idx][pts];
}

int main(){
 int t;
  si(t);

  for(tc=1;tc<=t;tc++){
     si(x),si(y),si(n),si(w);
     cin>>p1>>p2;
     p1=p1/100.0;
     p2=p2/100.0;
    cout << setprecision(6) << fixed;
    cout<<fun(n,0)*100.0;pln;

  }

return 0;
}
