#include<stdio.h>
#include<iostream>
#include<math.h>
#include<vector>
#include<map>
#include<string>
#include<queue>
#include<algorithm>
#include<set>
#define PI acos(-1.0)
#define SZ 1000007
#define Fi(a,n) for(int i=a;i<n;i++)
#define Fj(a,n) for(int j=a;j<n;j++)
#define Fk(a,n) for(int k=a;k<n;k++)
#define ri(a) scanf("%d",&a)
#define pb push_back
#define mp make_pair
using namespace std;
typedef vector<int> vi;
typedef vector<vi > vii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<int, pair<ll, ll> > pill;
class comp{
    public:
    comp(){}
    bool operator()(const pill& a, const pill& b) const {
    return a.second.second > b.second.second || (a.second.second == b.second.second && a.first > b.first);
    }
};
int main()
{
    int N, M, u, v, c;
    ri(N); ri(M);
    vector<vector<pair<int, ll> > > g(N+1, vector<pair<int, ll> >());
    Fi(0, M) {
        ri(u); ri(v); ri(c);
        g[u].pb(mp(v, c));
        g[v].pb(mp(u, c));
    }
    priority_queue<pill , vector<pill >, comp> pq;
    vi visit(N+1, 0);
    pq.push(mp(1, mp(0LL, 0LL)));
    ll ans = 0LL;
    while(!pq.empty()) {
        pill t = pq.top();
        pq.pop();
        if(visit[t.first])
            continue;
        //printf("%d %lld %lld\n", t.first, t.second.first, t.second.second);
        ans += t.second.second;
        u = t.first;
        visit[u] = 1;
        Fi(0, g[u].size()) {
            pq.push(mp(g[u][i].first, mp(t.second.first + g[u][i].second, g[u][i].second)));
        }
    }
    printf("%lld\n", ans);
    return 0;
}