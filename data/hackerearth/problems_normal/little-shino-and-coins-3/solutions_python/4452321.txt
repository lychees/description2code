K = int(raw_input())
string = map(lambda x: ord(x) - 97, list(raw_input().strip("\n")))

# number of occurences of each character
occurence = [0] * 26
i = j = distinctcount = noofpairs = 0
strlen = len(string)

while (i <= strlen - K) :
	# i loop
	jtemp = strlen
	while (j < strlen) :		
		# j loop
		# increment j until the distinct count matches K
		if (occurence[string[j]] == 0) :
			distinctcount += 1

		#Stop incrementing occurences once the distinctcount matched K and j has been noted down
		if (jtemp == strlen) :
			occurence[string[j]] += 1

		# once the count matches K, note that j down and increment the noofpairs
		if ( distinctcount == K ) :
			if (jtemp == strlen) :
				jtemp = j
			noofpairs += 1

		# if distinctcount greater than K, break 
		if ( distinctcount > K) :
			distinctcount -= 1
			break
		j += 1

	j = jtemp
	if (j != strlen) :
		occurence[string[j]] -= 1
		if (occurence[string[j]] == 0) :
			distinctcount -= 1
		
	occurence[string[i]] -= 1
	if (occurence[string[i]] == 0) :
		distinctcount -= 1
	i = i + 1

print noofpairs