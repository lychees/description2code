#!/usr/bin/env python
# -*- coding: utf-8 -*-

# https://www.hackerearth.com/july-easy-16/algorithm/gudi-and-the-magical-orbs-july-easy/

T = int(raw_input())
for t in xrange(0, T):
    N, M, K = [int(x) for x in raw_input().split()]
    a = []
    for i in xrange(0, N):
        a.append([int(x) for x in raw_input().split()])
    d = []
    for i in xrange(0, N):
        d.append([])
        for j in xrange(0, M):
            d[i].append(set())

    if a[0][0] <= K:
        d[0][0].add(a[0][0])
    for i in xrange(1, M):
        for k in d[0][i - 1]:
            next_d = k + a[0][i]
            if next_d <= K:
                d[0][i].add(next_d)
    for i in xrange(1, N):
        for k in d[i - 1][0]:
            next_d = k + a[i][0]
            if next_d <= K:
                d[i][0].add(next_d)

    for i in xrange(1, N):
        for j in xrange(1, M):
            for k in d[i - 1][j - 1]:
                next_d = k + a[i][j]
                if next_d <= K:
                    d[i][j].add(next_d)
            for k in d[i][j - 1]:
                next_d = k + a[i][j]
                if next_d <= K:
                    d[i][j].add(next_d)
            for k in d[i - 1][j]:
                next_d = k + a[i][j]
                if next_d <= K:
                    d[i][j].add(next_d)

    if len(d[N - 1][M - 1]) == 0:
        print -1
    else:
        print max(d[N - 1][M - 1])
