#include <bits/stdc++.h>
using namespace std;

int d[1007][1007];

int f(string s1, string s2) {
	int n = (int)s1.size();
	int m = (int)s2.size();
	
	memset(d,0,sizeof(d));
	
	for(int i = 1; i <= n; ++i) d[i][0] = i;
	for(int i = 1; i <= m; ++i) d[0][i] = i;

	for(int i = 1; i <= n; ++i)
		for(int j = 1; j <= m; ++j)
                      // note that std::min({arg1, arg2, arg3}) works only in C++11,
                      // for C++98 use std::min(std::min(arg1, arg2), arg3)
                      d[i][j] = min(d[i - 1][j] + 1, min(d[i][j - 1] + 1, d[i - 1][j - 1] + (s1[i - 1] == s2[j - 1] ? 0 : 1)));
	return d[n][m];
}

void solve() {
	int n1, n2; cin >> n1 >> n2;
	int n, m;
	cin >> n;
	string s, tt;
	cin >> s;
	cin >> m;
	cin >> tt;
	
	
	int dist = f(s, tt);
	
	if(dist == 0) n2 += (10 * m);
	else n1 += (5 * dist);
	
	cout << n1 << "\n";
	cout << n2 << "\n";
	if(n1 > n2) cout << "Swapnil\n";
	else if(n1 < n2) cout << "Friend\n";
	else cout << "Tie\n";
	
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t; cin >> t;
	while(t--) solve();
}
