#include<bits/stdc++.h>
#define long long int long
#define size 100000
#define  mset(a,v) memset(a,v,sizeof(a));
#define input cin>>t; while(t--)

using namespace std;
long a[size],s[size];
int root(long a[],long  i)
{
	while(i!=a[i])
	i=a[i];
	
	return i;
}

bool find(long a[],long i,long j)
{
	long x=root(a,i);
	long  y=root(a,j);
	if(x==y)
	{
		return true;
	}
	else return false;
	
}

void union1(long a[],long s[],long  i,long j)
{
	long x,y;
	if(!find(a,i,j))
	{
		 x=root(a,i);
		y=root(a,j);
		if(s[x]>s[y])
		{
			a[y]=x;
			s[x]+=s[y];
		}
		else
		{
			a[x]=y;
			s[y]+=s[x];
		}
	}
}

int main()
{
	long i,j,n,count=0,k;
	cin>>n;
	cin>>k;
	for(i=1;i<=n;i++)
	{
		a[i]=i;
		s[i]=1;
	}while(k--)
	{
		cin>>i>>j;
		union1(a,s,i,j);
	}
	for(i=1;i<=n;i++)
	{
		if(i==a[i])
		count++;
	}
	
	cout<<count<<"\n";
 return 0;
}
