#include <bits/stdc++.h>
 
using namespace std;
 
int arr[100005];
int size[100005];
int sizeA,sizeB,sizeC;
 
map<int,int> m;
 
int root(int x)
{
	while(arr[x]!=x)
	{
		arr[x] = arr[arr[x]];
		x = arr[x];
	}
 
	return x;
}
 
 
void uni(int a,int b)
{
	int rootA = root(a);
	int rootB = root(b);
		if(rootA!=rootB)
	{
		sizeA = size[rootA];
		sizeB = size[rootB];
		sizeC = size[rootB]+size[rootA];	
		
		if(size[rootA]<size[rootB])
		{	
			arr[rootA] = arr[rootB];
			size[rootB]+=size[rootA];
		}
		else
		{
			arr[rootB] = arr[rootA];
			size[rootA]+=size[rootB];	
		}
 
		m[sizeA]--;
		if(m[sizeA]==0)
		m.erase(sizeA);
		
		
		
		m[sizeB]--;
		if(m[sizeB]==0)
		m.erase(sizeB);
		
		if(m.find(sizeC)!=m.end())
		{
			m[sizeC]++;
		}
		else
			m.insert(pair<int,int>(sizeC,1));
	}
}
 
int main(int argc, char const *argv[])
{
	int n,q;
	cin>>n>>q;
	int src, dest;
	
	for (int i = 1; i <= n; ++i)
	{
		arr[i] = i;
		size[i] = 1;
	}
	
	m.insert(pair<int,int>(1,n));
	map<int,int>::iterator it;
	
	int diff = 0,min = 999999;
 
	while(q--)
	{
		min = 999999;
		diff = 0;
		cin>>src>>dest;
		uni(src, dest);
		
		
 
		if(m.size()==1)
		{
			cout<<0<<endl;
		}
		else
		{
		it = m.begin();
		if(it->second>1)
			cout<<0<<endl;
		else
		{
		diff = it->first;
		++it;
		while(it!=m.end())
		{	
			if(it->second>1)
				{min = 0; break;}
			if(it->first - diff < min)
				min = (it->first - diff);
			diff = it->first;
			++it;
		}
		cout<<min<<endl;
		}
		}
		
	}
	return 0;
}