#include <iostream>
using namespace std;

long long int find_gcd (long long int a,long long int b)
{
    long long int c;

    if ( b == 0 )
        return a;

    else
        while ( b != 0 )
        {
            c = b;
            b = a % b;
            a = c;
        }

        return a;
}

int main()
{
	int arr[100000];
	long long int total,L,P;
    cin>>total;
    for(long int i=0;i<total;i++)
    {
    	cin>>L>>P;
    	long long int count1=0,count=0,tot=0;
    	char c;
    	cin.get(c);
    	for(long int j=0;(j<=P)&&(j<L);j++)
    	{
    		cin.get(c);
    		arr[j]=((int)c)-48;
    		if(arr[j]==1)
    		{
    			count1++;
    			tot++;
    		
    		}
    	}
    	count=count+((count1-1)*count1);
    
    	for(long int j=P+1;j<L;j++)
    	{
    		cin.get(c);
    		arr[j]=((int)c)-48;
    		if(arr[j-P-1]==1)
    			count1--;
    		
    		if(arr[j]==1)
    		{
    			count1++;
    			tot++;
    			count=count+((count1-1)*2);
    		}
    		
    	
    	}
    	count=count+tot;
    	if(count==0)
    		cout<<"0/1"<<endl;
    	else
    	{
    		L=L*L;
    		long long int d=find_gcd(count,L);
    		L=L/d;
    		count=count/d;
    		cout<<count<<"/"<<L<<endl;
    	}
    		
    
    	cin.get(c);
    }
    return 0;
}
