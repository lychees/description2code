#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define MAX 5000
ll prime[]={2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
ll multiply(ll x, ll res[], ll res_size);
 ll factorial(ll n)
{
    ll res[MAX];
 
    // Initialize result
    res[0] = 1;
    ll res_size = 1;
 
    // Apply simple factorial formula n! = 1 * 2 * 3 * 4...*n
    for (ll x=2; x<=n; x++)
        res_size = multiply(x, res, res_size);
 
    
    for (ll i=res_size-1; i>=0; i--)
        {
			cout << res[i];
		}
        cout<<endl;
        return 0;
}


ll multiply(ll x, ll res[], ll res_size)
{
    ll carry = 0;  // Initialize carry
 
    // One by one multiply n with individual digits of res[]
    for (ll i=0; i<res_size; i++)
    {
        ll prod = res[i] * x + carry;
        res[i] = prod % 10;  // Store last digit of 'prod' in res[]
        carry  = prod/10;    // Put rest in carry
    }
 
    // Put carry in res and increase result size
    while (carry)
    {
        res[res_size] = carry%10;
        carry = carry/10;
        res_size++;
    }
    return res_size;
}

int main()
{
	ll n;
	cin>>n;
	for(ll i=0;i<25;i++)
	{
		if(prime[i]<=n)
		{
			factorial(prime[i]);
		}
	}
	return 0;
}
