#include<list>#include<iostream>#include<algorithm>#include<cstdio>#include<vector>#include<cstring>#include<string>#include<cstdlib>#include<math.h>#include<cctype>#include<iomanip>#include<map>#include<set>#include<stack>#include<queue>#include<cassert>#include<sstream>using namespace std;#define L long#define LL long long#define ULL unsigned long long#define D double//#define LD long double//#define G getchar_unlocked//#define P putchar_unlocked#define MOD 1000000007#define MOT 1000000006#define f first#define s second#define pb push_back#define mp make_pair#define pll pair <LL,LL>#define INF ((1<<30)+(1<<29))#define INFF (1000000000000000000LL)LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}LL lcm(LL a,LL b){return a*b/gcd(a,b);}LL modpow(LL n ,LL k,LL mod){LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans%mod;}LL max(LL a,LL b){return (a>b)?a:b;}LL min(LL a,LL b){return (a<b)?a:b;}LL ab(LL a){return (a>0)?a:-a;}LL poww(LL n,LL k){LL ans=1;while(k>0){if(k&1)ans*=n;k>>=1;n*=n;}return ans;}//D max(LD a,LD b){return (a>b)?a:b;}//D min(LD a,LD b){return (a<b)?a:b;}//D ab(D a){return (a>0.0)?a:-a;}inline int max(int a,int b){return (a>b)?a:b;}inline int min(int a,int b){return (a<b)?a:b;}queue<int>Q;int Vis[10005]={};vector<int>V[10005];int cnt=0,k;int dfs(int x){    int sum=1,i;    for(i=0;i<V[x].size();i++)    {        if(Vis[V[x][i]]==0)        {            Vis[V[x][i]]=1;            sum+=dfs(V[x][i]);        }    }    if(sum>=k)    {        sum=0;        cnt++;    }    return sum;}void Clear(){    int i;    for(i=0;i<=10000;i++)    {        Vis[i]=0;    }}int main(){    //ios::sync_with_stdio(false);    int n,i,x,ans=100000,t;    scanf("%d\n%d",&k,&n);    for(i=2;i<=n;i++)    {        scanf("%d",&x);        V[i].pb(x);        V[x].pb(i);    }    //for(i=1;i<=n;i++)    //{    i=1;        //Clear();        Vis[i]=1;        cnt=0;        t=dfs(i);        if(t>=k)            cnt++;        ans=min(ans,cnt);    //}    printf("%d\n",ans);    return 0;}