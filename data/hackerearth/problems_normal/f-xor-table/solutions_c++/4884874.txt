/*
* @problem: f-xor-table
*/

#include <iostream>
#include <cstring>
#include <cstdio>
#include <iomanip>
#include <cmath>
#include <limits.h>
#include <vector>
#include <map>
#include <bitset>
#include <string>
#include <iterator>
#include <set>
#include <utility>
#include <queue>
#include <numeric>
#include <functional>
#include <ctype.h>
#include <stack>
#include <algorithm>
#include <cstdlib>
#define MAX 1000100
#define mod 1000000007LL
#define bitcnt(x) __builtin_popcountll(x)
#define MS0(x) memset(x, 0, sizeof(x))
#define MS1(x) memset(x, -1, sizeof(x))
#define ll long long int
#define mp(x, y) make_pair(x, y)
#define pii pair<int, int>
#define pll pair<ll, ll>
#define in(x) scanf("%lld", &x)
#define ind(x) scanf("%d", &x)
#define ins(x) scanf("%s", x)
#define pr(x) printf("%lld\n", x)
#define prd(x) printf("%d\n", x)
#define prs(x) printf("%s\n", x)
#define pi acos(-1.0)
#define ff first
#define ss second

using namespace std;
char s[MAX];
int n, m, p, x, a[2][MAX];

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("../input.txt", "r", stdin);
		// freopen("../output.txt", "w", stdout);
	#endif
	// ios_base::sync_with_stdio(0);
    // cin.tie(0);
	int t, cur = 0, prev = 1;
	ind(t);
	while(t--)
	{
		ind(n);
		ind(m);
		ind(p);
		ind(x);
		int c = 0;
		ll diff;
		n--;
		ins(s);
		for(int i = 0; i < m; i++)
			a[cur][i] = s[i] - '0';
		while(n)
		{
			if(n & 1)
			{
				cur = 1 - cur;
				prev = 1 - prev;
				diff = (1LL << c) % m;
				diff = (diff * p) % m;
				for(int i = 0; i < m; i++)
				{
					a[cur][i] = (a[prev][i] ^ x);
					a[cur][i] = (a[cur][i] ^ a[prev][(i - diff + m) % m]);
				}
			}
			n >>= 1;
			c++;
		}
		for(int i = 0; i < m; i++)
			printf("%d", a[cur][i]);
		printf("\n");
	}
	return 0;
}