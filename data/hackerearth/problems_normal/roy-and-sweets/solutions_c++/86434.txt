#include <iostream>
#include <cstdio>
#include <cstring>
#include <stack>
#include <sstream>
#include <cctype>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <cassert>
#include <bitset>
#include <deque>
#include <set>
#include <queue>
#include <list>
#include <algorithm>
#include <cstdlib>

#define DEB 1

#define sfi(x) scanf("%d", &x)
#define sfu(x) scanf("%u", &x)
#define sff(x) scanf("%f", &x)
#define sfs(x) scanf("%s", x)
#define sfd(x) scanf("%ld", &x)
#define sfl(x) scanf("%ld", &x)
#define sfc(x) scanf(" %c ", &x)

#define gl(x) getline(std::cin, x)
#define glc(x,len) fgets(x, len, stdin)

#define REP(i,y,x) for(int i = y; i < x; i++)
#define urep(x) for(int __Abga_urep = 0; __Abga_urep < x; __Abga_urep++)

#define MAX 1000001

using namespace std;

typedef vector<int> vi;
typedef long long ll;
typedef vector<ll> vll;
typedef vector<double> vd;
typedef map<int, int> mii;

int main(){
	int N;
	sfi(N);
	int tmp1, tmp2;
	int inp[MAX];
	int maxi[MAX];
	for(int i = 0; i < N; i++) {
		sfi(tmp1); sfi(tmp2);
		inp[tmp1] += tmp2;
	}
	int nmax = 0;
	for(int i = MAX-1; i >= 0; i--) {
		if(nmax < inp[i]) {
			nmax = inp[i];
		}
		maxi[i] = nmax;
	}
	int G;
	unsigned long long res = 0;
	sfi(G);
	for(int i = 0; i < G; i++) {
		sfi(tmp1);
		res = res + maxi[tmp1]/tmp1;
	}
	printf("%llu\n", res*100);

	return 0;
}
