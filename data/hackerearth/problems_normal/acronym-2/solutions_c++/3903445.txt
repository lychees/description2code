#include <stdio.h>
#include <iostream>

#define MIN_KEYS  1
#define MAX_KEYS 10
#define MIN_ELEMENTS   1
#define MAX_ELEMENTS 100

#define ERROR_CODE -1;


bool equals(const char* a, const char* b)
{
  for(int i = 0;
      (a[i] != '\0' ||  b[i] != '\0') && i < MAX_ELEMENTS;
      i++) 
    if (a[i] != b[i])
      return false;

  return true;
}


int main()
{
  // get key word count
  unsigned int numKeys, numWords;
  scanf("%u", &numKeys);

  // check for constraint violation
  if (numKeys < MIN_KEYS || numKeys > MAX_KEYS)
  {
    printf("Too many keys\n");
    return ERROR_CODE;
  }

  // read in key words
  char **keyWords = new char*[numKeys];
  for (unsigned int i = 0; i < numKeys; i++)
  {
    keyWords[i] = new char[MAX_ELEMENTS];
    scanf("%s", keyWords[i]);
  }

  // get number of words in the senctences
  scanf("%u", &numWords);

  // read in word by word
  char **words = new char*[numWords];
  char results[MAX_ELEMENTS*2];
  char validCount = 0;
  char diff = 'a'-'A';
  for (unsigned int i = 0; i < numWords; i++)
  {
    words[i] = new char[MAX_ELEMENTS];
    scanf("%s", words[i]);

    // test for key word
    bool valid = true;
    for (unsigned int n = 0; n < numKeys; n++)
      if (equals(words[i], keyWords[n]))
        valid = false;

    // shorten valid words
    if (valid)
    {
      results[validCount++] = words[i][0] - diff;
      results[validCount++] = '.';
    }
  }

  results[--validCount] = '\0';
  printf("%s\n", results);

  return 0;
}
