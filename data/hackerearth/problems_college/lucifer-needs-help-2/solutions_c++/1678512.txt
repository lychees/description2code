
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <cctype>
#include <utility>
#include <map>
#include <string>
#include <climits>
#include <set>
#include <sstream>
#include <utility>
#include <ctime>
#include <cassert>
#include <fstream>
using namespace std;
typedef long long LL;
#define MS(A) memset(A, 0, sizeof(A))
#define MSV(A,a) memset(A, a, sizeof(A))
#define MAX(a,b) ((a >= b) ? (a) : (b))
#define MIN(a,b) ((a >= b) ? (b) : (a))
#define ABS(a) (((a) > 0) ? (a) : (-a))
#define MP make_pair
#define PB push_back
#define getcx getchar_unlocked
#define INF (int(1e9))
#define INFL (LL(1e18))
#define EPS 1e-12
#define chkbit(s, b) (s & (1<<b))
#define setbit(s, b) (s |= (1<<b))
#define clrbit(s, b) (s &= ~(1<<b))
inline void inp( int &n )
{
n=0; int ch=getcx();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
n=n*sign;
} 
inline void inp1( LL &n )
{
n=0; LL ch=getcx();LL sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
n=n*sign;
}

LL bit[1000010],arr[1000010];
int n;
void update(int idx,LL val)
{
	while(idx<=n)
	{
		bit[idx]+=val;
		idx+=(idx&-idx);
	}
}

LL query(int idx)
{
	LL sum=0;
	while(idx>0)
	{
		sum+=bit[idx];
		idx-=(idx& -idx);
	}
	return sum;
}
int main()
{
	int i,q,a,b;
	LL v;
	inp(n);
	for(i=1;i<=n;i++)
	inp1(arr[i]);
	
	inp(q);
	
	while(q--)
	{
		inp(a);
		inp(b);
		inp1(v);
		//cout<<a<<" "<<b<<" "<<v<<"q "<<q<<endl;
		update(a,v);
		update(b+1,-v);
		
	}
	
	for(i=1;i<=n;i++)
	{
		LL ans=query(i);
		printf("%lld\n",(arr[i]+ans));
	}
	return 0;
}
