#include <iostream>
#include <vector>
#include <cstdio>
#include <iomanip>
#include <cstring>
#include <set>
#include <map>
#include <algorithm>

using namespace std;

typedef long long int LL;
typedef pair<int,int> pii;
#define sd(x) scanf("%d", &x)

#define PB push_back
#define REP(it, x) for(set<int>::iterator it = x.begin(); it != x.end(); it++)


#define K 21234
#define N 312345

set<int> b, app[K], all;
int k;
bool oip = false;

inline bool pos(int v){
	if(b.find(v) != b.end()){
		return false;
	}
	if(oip == true){
		if(all.find(v) != all.end()){
			return false;
		}
	}
	else if(app[k].find(v) != app[k].end()){
		return false;
	}
	if(v == 1){
		return true;
	}
	for(int i = 1; i <= k; ++i){
		REP(j, app[i - 1]){
			if(LL(*j) * v > N){
				break;
			}
			app[i].insert(v * (*j));
			all.insert(v * (*j));
		}
	}
	return true;
}

int main(){
	int n, m, v;
	cin>>n>>k>>m;
	app[0].insert(1);
	while(m--){
		cin>>v;
		b.insert(v);
	}
	for(v = 1; n > 0; ++v){
		if(pos(v) == true){
			n--;
			cout<<v<<" ";
			if(v == 1){
				oip = true;
			}
		}
	}
	cout<<endl;
	return 0;
}
