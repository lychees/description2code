#include<iostream>
#include<stdio.h>
#include<utility>
#include<vector>
#include<cstring>

using namespace std;

vector<long long int> tree[100005];

long long int tim = 1 , intime[100005], outtime[100005];

void bfs(long long int x)
{
    intime[x] = tim;

    if(tree[x].empty())
    {
        outtime[x] = tim;

    }
    else
    {
        long long int out =0;
        tim++;

        for(int i =0 ; i < tree[x].size(); i++)
        {
            bfs(tree[x][i]);
        }

        outtime[x] = tim;

    }
    tim++;

}

int main()
{
    long long int N,A,B,i,Q,T,X,Y;

    scanf("%lld", &N);

    for(i=0;i<N-1;i++)
    {
        scanf("%lld%lld", &A, &B);
        tree[A].push_back(B);
    }

    memset(intime,0,sizeof(intime));
    memset(outtime,0,sizeof(outtime));

    bfs(1);

    scanf("%lld", &Q);

    while(Q--)
    {
        scanf("%lld%lld%lld", &T,&X, &Y);
        if(intime[X]!=0 && intime[Y]!=0)
        {
            if(T == 0)
            {
                if(intime[X] < intime[Y] && outtime[X] > outtime[Y])
                    printf("YES\n");
                else
                    printf("NO\n");
            }
            else
            {
                if(intime[Y] < intime[X] && outtime[Y] > outtime[X])
                    printf("YES\n");
                else
                    printf("NO\n");
            }
        }
        else
            printf("NO\n");
    }



}

