#include<iostream>
using namespace std;
const long long mod = 1000000007;
long long f[1001];
long long g[1001]; //total ways to build wall of n*i
long long h[1001]; //total solod ways to build wall of n*i
 
long long pow(long long a, int p)
{
    long long ans = 1;
    while(p)
    {
        if (p % 2) ans = ans * a % mod;
        a = a * a % mod;
        p /= 2;
    }
    return ans;
}
int main(){
	f[1] = 1;
	f[2] = f[1] + 1;
	f[3] = f[2] + f[1] + 1;
	f[4] = f[3] + f[2] + f[1] + 1;
	for(int i=5;i<=1000;i++){
		f[i] = ((f[i-1] + f[i-2])%mod + (f[i-3] + f[i-4])%mod)%mod; 
	}
	int t,n,m;
	cin>>t;
	while(t--){
		cin>>n>>m;
		for(int i=1;i<=m;i++) g[i]=pow(f[i],n);
		h[1] = 1;
		for(int i=2;i<=m;i++){
			h[i] = g[i];
			long long tmp = 0;
			for(int j=1;j<i;j++){
				tmp = (tmp + h[j]*g[i-j])%mod;
			}
			h[i] = (h[i] - tmp + mod)%mod;
		}
		cout<<h[m]<<endl;
	}
}