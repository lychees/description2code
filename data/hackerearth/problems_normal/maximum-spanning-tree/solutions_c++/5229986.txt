#include<iostream>
#include<bits/stdc++.h>
using namespace std;

vector <pair <int,int> > v[5001];
int weights[5001],pset[5001];

int maxKey(int n)
{
    int u=0,i,pos;
    for(i=1;i<=n;i++)
    {
        if(pset[i]==0 && weights[i]>u)
        {
            u=weights[i];
            pos=i;
        }
    }
    return pos;
}

void maxTree(int n)
{
        int i,j,u;
        for(i=1;i<=n;i++)
        {
            weights[i]=0;
            pset[i]=0;
        }

        weights[1]=10;
        for(i=1;i<=n;i++)
        {
            u=maxKey(n);
            pset[u]=1;

            for(j=0;j<v[u].size();j++)
            {
                if(pset[v[u][j].first]==0 && v[u][j].second>weights[v[u][j].first])
                    weights[v[u][j].first]=v[u][j].second;
            }
        }
}


int main()
{
    int t,n,m,i,j,c,a,b;
    //cin >> t;
    scanf("%d",&t);
    while(t--)
    {
        int sum=0;
       // cin >> n >> m;
        scanf("%d%d",&n,&m);
        for(i=1;i<=n;i++)
        	v[i].clear();

        for(i=1;i<=m;i++)
        {
            //cin >> a >> b >> c;
            scanf("%d%d%d",&a,&b,&c);
            v[a].push_back(make_pair(b,c));
            v[b].push_back(make_pair(a,c));
        }
        maxTree(n);
        for(i=1;i<=n;i++)
            sum+=weights[i];
        sum=sum-10;
        cout << sum << endl;
    }

    return 0;
}
