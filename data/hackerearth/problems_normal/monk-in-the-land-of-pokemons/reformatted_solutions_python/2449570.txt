def count_carryons(food, pokemons):
    carrying = {}
    total = 0
    for f, p in zip(food, pokemons):
        carrying[f] = carrying.get(f, 0) + 1
        if p in carrying and carrying[p] > 0:
            carrying[p] = carrying[p] - 1
        else:
            total += 1
        # total += sum(v for k, v in carrying.iteritems())
    return total


def solve(food, pokemons):
    print count_carryons(food, pokemons)


def execute():
    n = int(raw_input())

    while (n > 0):
        ponds = int(raw_input())
        food = []
        pokemons = []
        while ponds > 0:
            f, p = map(int, raw_input().split())
            food.append(f)
            pokemons.append(p)
            ponds -= 1
        solve(food, pokemons)
        n -= 1


execute()
