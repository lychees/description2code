/************************
     ABHINASH RAI
     NATIONAL INSTITUTE OF TECHNOLOGY, KURUKSHETRA
*************************/

#include <bits/stdc++.h>
#define rep(i,n) for(int i=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int i=(int)(l);(i)<(int)(u);++(i))
#define r_rep(i,l,u) for(int i=(int)(l);(i)>(int)(u);--(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pd(n) printf("%lf ",n);
#define pdn(n) printf("%lf\n",n);
#define pin(n) printf("%d\n",n)
#define pln(n) printf("%lld\n",n)
#define pl(n) printf("%lld ",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define pb push_back
#define sz(x) int(x.size())
#define mod (int)(1e9 + 7)
#define INF INT_MAX
#define inrep int t;si(t); while(t--)

using namespace std;
 
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

ll modpow(ll a,ll n,ll temp){ll res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;}

main()
{
   
   inrep
   {
   	
        int n,m;
        
        si(n);
        
        si(m);
        
        vector<pair<int,int> > edge[n+1];
        
        reu(i,1,m+1)
        {
        	
        	int temp,temp1,temp2;
        	
        	si(temp);
        	
        	si(temp1);
        	
        	si(temp2);
        	
        	edge[temp].push_back(make_pair(temp2,temp1));
        	edge[temp1].push_back(make_pair(temp2,temp));
        	
		}
	  	
	  	int dist[n+1];
	  	
	  	reu(i,1,n+1)
	  	  dist[i] = INF;
	  	
	  	priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > pq;
	  	
	  	pq.push(make_pair(0,1));
	  	
	  	dist[1] = 0;
	  	
	  	while(pq.size() > 0)
	  	{
	  	   
			 int v = pq.top().second;
			 pq.pop();
			 
			 rep(i,edge[v].size())
			 {
			      
			      if(dist[(edge[v][i]).second] > dist[v] + (edge[v][i]).first )
				  {
				      //printf("%d\n",dist[v] + (edge[v][i]).first);
				      dist[(edge[v][i]).second] = dist[v] + (edge[v][i]).first;
				  	  pq.push(make_pair(dist[(edge[v][i]).second],edge[v][i].second));
				  }	
			 	
			 }	
	  		
		}
		
		int q;
		
		si(q);
	//	printf("jjjj");
		while(q--)
		{
			
			int a,k;
			
			si(a);
			
			si(k);
			
			if(-2*dist[a] + k > 0 )
			   printf("%d\n",-2*dist[a] + k);
			else
			   printf("0\n");
			
		}
	  	
   }	
	
}