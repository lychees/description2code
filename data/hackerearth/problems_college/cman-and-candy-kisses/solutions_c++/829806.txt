#include<iostream>
#include<vector>
#define ll long long
using namespace std;
 
#define MOD 1000000007

long long int fact[100001];

long long int pwr(long long int a , long long int b)
{
    if(b==0)
        return 1;
    if(b==1)
        return a;
    if(b%2 == 0)
    {
        long long int temp = pwr(a,b/2);
        return (temp*temp)%MOD;
    }
    else
    {
        long long int temp = pwr(a,b/2);
        temp =  (temp*temp)%MOD;
        return (temp*a)%MOD;
    }
}

long long SmallC(long long int N, long long int R)
{
    long long int a = fact[N];
    long long int b = fact[R];
    long long int c = fact[N-R];
    a = (a*pwr(b,MOD-2) )%MOD;
    a = (a*pwr(c,MOD-2) )%MOD;
    return a;
}

long long Lucas( long long int n,long long int m)
{
    if (n==0 && m==0) return 1;
    long long  int ni = n % MOD;
    long long  int mi = m % MOD;
    if (mi>ni) return 0;
    return Lucas(n/MOD, m/MOD) * SmallC(ni, mi);
}


int main()
{
    fact[0] = 1;
    for(long long int i=1 ; i<=100000 ; i++)
        fact[i] = (fact[i-1]*i)%MOD;
    ll n,r;
    ll t;
    cin>>t;
    while(t--)
    {
    	long long N,R;
        cin>>N>>R;
        long long s=0;
        long long x;
        for(int i=0;i<N;i++)
        {
        	cin>>x;
        	s+=x;
        }
        long long M = R - s;
        cout<<Lucas(M+N-1,N-1)<<"\n";
    }
}