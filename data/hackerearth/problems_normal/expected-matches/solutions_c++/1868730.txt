#include <bits/stdc++.h>

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef vector<int> VI;

#define FOR(i,a,b) for(int (i)=(a);i<(b);++(i))
#define RFOR(i,a,b) for(int (i)=(a)-1;(i)>=(b);--(i))
#define For(i,a,b) for(int (i)=(a);i<(b);++(i))
#define FoR(i,a,b) for(int (i)=(a)-1;(i)>=(b);--(i))
#define INF 1000000001
#define LINF 1000000000000000001ll
#define PB push_back
#define EPS 1e-7
#define X first
#define Y second
#define MP make_pair
#define ITER(itr,c) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define FILL(A,value) memset(A,value,sizeof(A))
#define ALL(V) V.begin(), V.end()
#define y1 safddf
/*
 int t;
 int n;
 const int N=100005;
 int fen[N];
 map<int,int> mapp;
 int a[N];
 int cnt[N];
 int rep[N];

 int get(int r){
 int s=0;
 for(;r>=0;r=(r&(r+1))-1){
 s+=fen[r];
 }
 return s;
 }

 void upd(int r,int v){
 for(;r<N;r|=r+1)
 fen[r]+=v;
 }
 int main() {
 //ios::sync_with_stdio(0);	cin.tie(0);cout.tie(0);
 cin >> t;
 FOR(ttt,0,t)
 {
 cin>>n;
 FILL(mapp,0);
 FILL(fen,0);
 FILL(cnt,0);
 FOR(i,0,n)cin>>a[i];
 FOR(i,0,n)mapp[a[i]]++;
 FOR(i,0,n)rep[i]=mapp[a[i]];
 int cnt=0;
 ITER(it,mapp)it->Y=cnt++;
 FOR(i,0,n)a[i]=mapp[a[i]];

 LL bst = 0;
 RFOR(i,n,0){
 cnt[i]=get(a[i]-1);
 upd(a[i],1);
 bst+=cnt[i];
 }

 LL cur=bst;
 int ind=0;
 RFOR(i,n,0){

 }
 }
 return 0;
 }
 */
int T;
int n, m;
double a[1003][1003];
double dp[1003][1003][2];
int main() {
	cin >> T;
	while (T--) {
		scanf("%d%d",&n,&m);
		FOR(i,0,n)
			FOR(j,0,m)
			scanf("%lf",&a[i][j]);
				
		dp[0][0][0] = a[0][0];
		dp[0][0][1] = 1 - a[0][0];
		FOR(i,1,m)
		{
			dp[0][i][0] = dp[0][i - 1][0] * a[0][i];
			dp[0][i][1] = dp[0][i - 1][0] * (1 - a[0][i]);
		}
		FOR(i,1,n)
		{
			dp[i][0][0] = (dp[i - 1][0][1]) * ( a[i][0]);
			dp[i][0][1] = (dp[i - 1][0][1]) * (1-a[i][0]);
			FOR(j,1,m)
			{
				dp[i][j][0] = dp[i][j - 1][0] * a[i][j]
						+ dp[i - 1][j][1] * a[i][j];
				dp[i][j][1] = dp[i][j - 1][0] * (1 - a[i][j])
						+ dp[i - 1][j][1] * (1 - a[i][j]);
			}
		}
		double ans = 0;
		FOR(i,0,n)
			ans += dp[i][m - 1][0] * (m + i);
		FOR(j,0,m)
			ans += dp[n - 1][j][1] * (n + j);
		printf("%.6lf\n",ans);

	}
}
