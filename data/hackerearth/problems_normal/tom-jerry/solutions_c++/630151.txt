//Prison Break

#include <iostream>

static bool visited[100][100] = {0};
static int paths = 0;
 
void pathCount(bool a[][100], int n, int i, int j)
{
 	if (i == n - 1 && j == n - 1)
 	{
		paths++;
		return; 
	}
	
	visited[i][j] = true;
	
	if (i + 1 < n && !visited[i + 1][j] && !a[i + 1][j])
	{
		pathCount(a, n, i + 1, j);
	}
	
	if (i - 1 >= 0 && !visited[i - 1][j] && !a[i - 1][j])
	{
		pathCount(a, n, i - 1, j);
	}
	
	if (j + 1 < n && !visited[i][j + 1] && !a[i][j + 1])
	{
		pathCount(a, n, i, j + 1);
	}
		
	if (j - 1 >= 0 && !visited[i][j - 1] && !a[i][j - 1])
	{
		pathCount(a, n, i, j - 1);
	}
	
	visited[i][j] = false;
}

int main()
{
	int n;
	std::cin >> n;
	
	bool a[100][100];
	
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
			std::cin >> a[i][j];
	
	pathCount(a, n, 0, 0);
	std::cout << paths << std::endl;
	paths = 0; 
	
	return 0;
}
