#include <iostream>
#include <cstring>
#include <cstdio>
#include <queue>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cmath>
#include <set>
#include <utility>
#include <stack>
#include <cmath>
#include <climits>
#include <cassert>
#define sort(v) sort(v.begin(),v.end())
#define null NULL
#define len(x) (sizeof(x)/sizeof(x[0]))
using namespace std;
typedef long long int ll;

vector<int> graph[111111];
int vis[111111];
int nov = 0, no1 = 0, ans = 0, a, b,t,n;

void dfs(int v,int k)
{
	if(vis[v])
	{
		return;
	}
	nov++;
	no1 = no1 + k;
	k = 1-k;
	vis[v] = 1;
	for(int i=0;i<graph[v].size();i++)
	{
		dfs(graph[v][i],k);
	}
}

int main()
{
	cin>>t;
	for (int tt = 0; tt < t; tt++)
	{
		cin>>n;
		for(int i=0;i<n;i++)
		{
			cin>>a>>b;
			graph[a].push_back(b);
			graph[b].push_back(a);
		}
		ans = 0;
		for(int i=0;i<111111;i++)
		{
			if(graph[i].size()>0)
			dfs(i,0);
			ans = ans + max(nov-no1,no1);
			nov = 0;
			no1 = 0;
		}
		for(int i=0;i<111111;i++)
		{
			vis[i] = 0;
			graph[i].clear();
		}
		cout<<"Case "<<tt+1<<": "<<ans<<"\n";
	}
}
