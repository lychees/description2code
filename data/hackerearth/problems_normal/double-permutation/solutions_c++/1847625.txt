/**/
#define _USE_MATH_DEFINES
#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define For(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define all(v) v.begin(),v.end()
#define V vector
typedef long long ll;
/***********************************************/
/* Dear MinGW compiler:
 * I've wasted time reading the problem and trying to figure out the solution
 * If there's any syntax error and you've any suggestion, please fix it yourself.
 * I hope my code compile and get accepted. KEE O.o
 *      ____________
 *     /  __        \
 *    /  |  |    __  \
 *   /   |  |   |__|  \
 *  (    |__|          )
 *   \                /
 *    \      ___     /
 *     \____________/
 */
const ll mod = 1000000007;
V<int> a;
ll inv(int l,int r){
	if(l == r)
		return 0;
	int md = (l+r)/2;
	ll res = inv(md+1,r) + inv(l,md);
	int j = md+1,i = l;
	V<int> t;
	while(i <= md && j <= r){
		if(a[i] <= a[j])
			t.pb(a[i++]);
		else{
			t.pb(a[j++]);
			res += md-i+1;
		}
	}
	while(i <= md)
		t.pb(a[i++]);
	while(j<=r)
		t.pb(a[j++]);
	For(k,0,t.size())
		a[l+k] = t[k];
	return res;
}
ll pow_mod(ll base,int power){
	if(power<= 0)
		return 1;
	if(power == 1)
		return base%mod;
	if(power&1)
		return (base * pow_mod(base,power-1))%mod;
	return pow_mod((base*base)%mod,power>>1);
}
int main(){
	ios_base::sync_with_stdio(false);
	//cin.tie(nullptr);
	int n;
	cin>>n;
	a.resize(n*2);
	For(i,0,2*n)
	cin>>a[i];
	ll res = 0;
	res = pow_mod(2,n-1) * pow_mod(n,2);
	res %= mod;
	res += (pow_mod(2,n-1))%mod * inv(0,2*n-1)%mod;
	cout<<res%mod<<endl;
	return 0;
}
/**/
