#include <iostream>
#include <bits/stdc++.h>
#define MOD 1000000007
using namespace std;



long long modPow(long long a, long long n)
{
	int r = 1;
	for(long long x = a;n;n>>=1,x=(x*x)%MOD) if(n&1) r = (r*x)%MOD;
	return r;
}
	
long long inv(long long a)
{
	return modPow(a,MOD-2);
}

long long ncr(long long n, long long r)
{
	if(n < r ) return 0;
	if(n-r < r) r = n-r;
	long long ans = 1;
	for(int i=r;i>0;i--)
	{
		ans = (ans*((n-i+1)%MOD))%MOD;
		ans = (ans * inv(i))%MOD;
	}
	return ans;
}


typedef struct teach
{
	vector<int> c;
};




int main()
{
	long long FACT[100005];
	FACT[0] = 1;
	for(int i=1;i<100005;i++)
	{
		FACT[i] = (FACT[i-1] * i)%MOD;
	}
	int n;
	cin>>n;
	vector<teach> t;
	long long sum = 0;
	long long ff = 1;
	for(int i=0;i<n;i++)
	{
		teach temp;
		int tot;
		cin>>tot;
		sum += tot;
		for(int i=0;i<tot;i++)
		{
			int cval;
			cin>>cval;
		//	cout<<"cval: "<<cval<<endl;
			temp.c.push_back(cval);
		}
		sort(temp.c.begin(),temp.c.end());
		int val = 1;
	//	cout<<"size: "<<temp.c.size()<<endl;
		for(int j=1;j<temp.c.size();j++)
		{
			//cout<<"vAL "<<val<<endl;
		//cout<<temp.c[j]<<endl;
			if(temp.c[j] == temp.c[j-1])
			{
				val++;
			}
			else
			{
				//cout<<" vv "<<val<<endl;
				ff = ((ff%MOD)*(FACT[val]%MOD))%MOD;
				val = 1;
			}
		}
		ff = ((ff%MOD)*(FACT[val]%MOD))%MOD;
		t.push_back(temp);
	}
	long long ans = 1;
	for(int i=0;i<n;i++)
	{
		//cout<<ans<<" "<<sum<<" "<<t[i].c.size()<<endl;
		ans = ((ans)%MOD * (ncr(sum,t[i].c.size()))%MOD)%MOD;
		sum -= t[i].c.size();
	}
	
	ans = ((ans)*(ff)%MOD)%MOD;
	cout<<ans<<endl;
    return 0;
}
