from math import ceil


def check_days(time, large):
    leng = len(time)
    cus = 0
    ctr = 1
    for i in range(leng):
        if cus+time[i] <= large:
            cus = cus+time[i]
        else:
            cus = time[i]
            ctr = ctr+1
    return ctr


inp = map(int, raw_input().strip().split())

npro = inp[0]
mday = inp[1]
time = map(int, raw_input().strip().split())


leng = len(time)
max = long(0)
min = 0
for i in range(leng):
    max += time[i]
    if time[i] > min:
        min = time[i]

# if npro==90039 and mday==5:
# xy=0
# while min<max and xy<200:
# if max-min == 1:
# print max
# exit()
# xy+=1
# now=int(ceil((min+max)/2.0))
# days=check_days(time,now)
# if days<=mday:
# max=now
# else:
# min=now
# print min, max, now, 16207200296638833
# exit()

if mday == 1:  # Checking for 1 day solving criteria
    print max
    exit()
days = check_days(time, min)
if days <= mday:  # Checking for least time interval possible per day
    print min
    exit()
# max=int(ceil(float(max)/mday))
# Binary Search
while min < max:
    if max-min == 1:
        print max
        exit()

    now = int(((min+max)/2))
    days = check_days(time, now)
    if days <= mday:
        max = now
    else:
        min = now
