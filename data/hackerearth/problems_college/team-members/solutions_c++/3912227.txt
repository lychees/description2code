#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include<stack>
#include<limits.h>
#include <queue>
#include <map>
#include <cstdlib>
#include <algorithm>
//psyduck
#define ll long long
#define S(x) scanf("%d",&x)
#define Sf(x) scanf("%f",&x)
#define Slf(x) scanf("%lf",&x)
#define Sl(x) scanf("%lld",&x)
#define P(x)  printf("%d\n", x)
#define Pf(x)  printf("%f\n", x)
#define Plf(x)  printf("%lf\n", x)
#define Pl(x)  printf("%lld\n", x)
#define mem(x,i) memset(x,i,sizeof(x))
using namespace std;
ll int dp[1<<15][1000];
ll int rec(ll int mask,ll int mod);
ll int n,k,d;
string s;
int main()
{
    cin >> s>>d>>k;
    n = s.size();
    mem(dp,-1);
    ll int ans = rec(0,0);
    Pl(ans);
}
 
ll int rec(ll int mask,ll int mod)
{
    //cout << mask<<" "<<mod<<endl;
    int i;
    if(dp[mask][mod] != -1){
        return dp[mask][mod];
    }
    if(mask == ((1<<n)-1) && mod == k){
        return 1;
    }
    if(mask == ((1<<n)-1) && mod != k){
        return 0;
    }
    ll int ans = 0;
    int mark[10];
    mem(mark,0);
    for (i = 1; i <= n; i++){
        int y = (1<<(n-i));
        if(mark[s[i-1]-48]){
            continue;
        }
        if(!(mask&y)){
           mark[s[i-1]-48] = 1;
            //cout <<"Asd";
            //cout << s << " " << i << " " << k;
            //cerr << (mod*10+(s[i-1]-48))%k;
            ans = ans + rec(mask|y,(mod*10+(s[i-1]-48))%d);
        }
    }
    return dp[mask][mod] = ans;
}
 