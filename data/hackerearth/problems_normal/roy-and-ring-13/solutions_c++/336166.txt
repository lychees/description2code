#include<cstdio>
#define MOD 1000000007
void matrix_mul(long long a[][2], long long b[][2],long long c[][2])
{
    c[0][0] = a[0][0]*b[0][0] + a[0][1]*b[1][0];
    c[0][0]%=MOD;
    c[0][1] = a[0][0]*b[0][1] + a[0][1]*b[1][1];
    c[0][1]%=MOD;
    c[1][0] = a[1][0]*b[0][0] + a[1][1]*b[1][0];
    c[1][0]%=MOD;
    c[1][1] = a[1][0]*b[0][1] + a[1][1]*b[1][1];
    c[1][1]%=MOD;
}
long long iter_pow(int n)
{
    long long ans[2][2] = {1,0,0,1};    //unit matrix
    long long c[2][2];
    long long b[2][2] = {1,1,1,0};      //fib matrix
    while(n)
    {
        if(n&1)    //if n%2 == 1
        {
            matrix_mul(ans,b,c);
            ans[0][0] = c[0][0];
            ans[0][1] = c[0][1];
            ans[1][0] = c[1][0];
            ans[1][1] = c[1][1];
        }
        matrix_mul(b,b,c);
        b[0][0] = c[0][0];
        b[0][1] = c[0][1];
        b[1][0] = c[1][0];
        b[1][1] = c[1][1];
        n = n>>1;   // n = n/2;
    }
    return (ans[0][1])%MOD;
}
int main()
{
    int q;
    scanf(" %d",&q);
    while(q--)
    {
        int n;
        scanf(" %d",&n);
        n = (n+1)/2;
        long long res = iter_pow(n);
        res *= res;
        res %= MOD;
        printf("%lld\n",res);
    }
    return 0;
}