#include<iostream>
#include<map>
#include<vector>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<cmath>
#include<functional>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<assert.h>
using namespace std;
struct realm
{
	int x;
	int y;
}new_subjects[100010],current_subjects[100010];
bool myFunc(struct realm a,struct realm b)
{
	if(a.x<b.x)
		return true;
	else if(a.x==b.x && a.y<b.y)
		return true;
	else 
		return false;
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int m,n,g,h;
		cin>>m>>n;
		for(int i=0;i<m;i++)
			cin>>new_subjects[i].x>>new_subjects[i].y;
			
		for(int i=0;i<n;i++)
			cin>>current_subjects[i].x>>current_subjects[i].y;
		cin>>g>>h;
		sort(new_subjects,new_subjects+m,myFunc);
		sort(current_subjects,current_subjects+n,myFunc);
		int i,j,good=0,great=0;
		for(i=0,j=0;i<m &&j<n;)
		{
			if(new_subjects[i].x==current_subjects[j].x)
			{
				if(new_subjects[i].y==current_subjects[j].y)
					great++;
				good++;
				j++;	
			}
			else if(new_subjects[i].x>current_subjects[j].x)
			{
				while(new_subjects[i].x>current_subjects[j].x)
					i++;
			}
			i++;
		}	
		if(g==good && h==great)
			cout<<"Great"<<endl;
		else if(g==good)
			cout<<"Good"<<endl;
		else
			cout<<":("<<endl;		
	}
	
	return(0);
}