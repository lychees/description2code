//
//  main.cpp
//  ANeedleInTheHayStackHE
//
//  Created by Shashank Shekhar on 08/09/16.
//  Copyright Â© 2016 Shashank Shekhar. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
#include <unordered_map>
#include <map>
#include <set>
#include <queue>
#include <cstring>
#include <sstream>
#include <iterator>
#include <stack>
#define minInt INT_MIN
#define maxInt INT_MAX
#define umaxInt UINT_MAX
#define llminInt LLONG_MIN
#define llmaxInt LLONG_MAX
#define MOD 1000000007
#define mp(a, b) make_pair(a, b)
#define F first
#define S second
#define pb(a) push_back(a)
#define sze(a) (int)(a.size())
#define fr(i,a,N) for (int i =a;i<N;i++)
#define fre(i,a,N) for (int i =a;i<=N;i++)
#define frr(i,a,N) for (int i = a;i>=N;--i)
#define lli long long int
#define ulli  unsigned long long int
#define ui unsigned int
#define pii pair<int,int>
#define vi vector<int>
#define vpii vector<pair<int,int>>
#define vpsi vector<pair<string,int>>
#define print_array(a,n) for(i=0;i<=n;i++) cout<<a[i]<<" ";
using namespace std;
void createHash(int *ar,string pat) {
    int  sz = sze(pat);
    int k;
    fr (i,0,sz) {
        k = pat[i] - 'a';
        ar[k]++;
    }
}

bool isPre(int *patH,int *tagH) {
    fr(i,0,26) {
     if (patH[i] != tagH[i])
         return false;
    }
    return true;
}
int main(int argc, const char * argv[]) {
    // insert code here...
    
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    string line,pat;
    bool flag = false;
    int t;
    cin >>t;
    while (t--) {
        cin >> pat;
        cin >>line;
        int pl= sze(pat);
        int tl  = sze(line);
        if (pl > tl) {
            cout << "NO\n";
            continue;
        }
        int *patH  = new int[26];
        fill(patH,patH+26,0);
        createHash(patH,pat);
        int *tagH =  new int[26];
        fill(tagH,tagH+26,0);
        createHash(tagH,line.substr(0,pl));
        flag = false;
//        fr(i,0,26)
//        cout << i << " "<< patH[i] << " ";
//        cout << "\n";
//        fr(i,0,26)
//        cout << i << " "<< tagH[i] << " ";
//        cout << "\n";
        fr(i,pl,tl) {
            if (isPre(patH,tagH)) {
                flag = true;
                break;
            } else {
                tagH[int(line[i]) - 'a']++;
                tagH[int(line[i-pl]) - 'a']--;
            }
                
        }
        if (isPre(patH,tagH))
            flag = true;
        
        if (flag) cout << "YES\n";
        else cout << "NO\n";
    }
    return 0;
}
