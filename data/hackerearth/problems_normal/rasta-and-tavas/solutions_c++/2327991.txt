#include<bits/stdc++.h>
#define ll long long int
#define ull unsigned long long
#define pb push_back
#define in     insert
#define all(v) v.begin(),v.end()
#define rep(s,n) for(ll i=s;i<n;i++)
#define rep1(s,n) for(ll i=s;i<=n;i++)
#define TC()      ull t;cin>>t;while(t--)
#define mk make_pair
#define endl '\n'
#define vitr vector<ll>::iterator
#define sitr set<ll>::iterator

using namespace std;
void FastIO(){ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);}
ll n,k,ct;
bool p[1000001];
void seive(ll n)
{
	memset(p,true,sizeof(p));
	
   p[0]=false;
   p[1]=false;
   p[2]=true;
   for(ll i=2;i<n;i+=1)
   {
    	if(p[i]==true)
		for(ll j=2;j*i<n;j++)
    			p[i*j]=false;
   }    
}
ll primeFactors(ll n)
{
    // Print the number of 2s that divide n
    ll sum=0;
    if(n%2==0) sum+=2;
    while (n%2 == 0)
    {
     //   printf("%d ", 2);
        n = n/2;
    }
 
    // n must be odd at this point.  So we can skip one element (Note i = i +2)
    for (ll i = 3; i <= sqrt(n); i = i+2)
    {
        // While i divides n, print i and divide n
        if(n%i==0) sum+=i;
        while (n%i == 0)
        {
            //printf("%d ", i);
            n = n/i;
        }
    }
 
    // This condition is to handle the case whien n is a prime number
    // greater than 2
    if (n > 2) sum+=n;
      //  printf ("%d ", n);

return sum;
}
ll solve(ll n)
{
	 ct=0;ll a;

	for(ll i=2;i<=n;i++)
	{   ll sum=0;
		a=i;
	    sum=primeFactors(a);
		if(sum==k) { //cout<<a<<" ";
		 ct++;}//
	}
}
int main()
{
   FastIO();
   seive(1000001);
    cin>>n>>k;
    solve(n);
    cout<<ct;
    
   return 0;
}
