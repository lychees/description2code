/**
Prashant Gupta(GHOST_YO)
IIITA
**/
#include <bits/stdc++.h>
using namespace std;
#define For(i,a,b) for(i=a;i<b;i++)
#define Ford(i,a,b) for(i=a;i>=b;i--)
#define Rep(i,c) for(__typeof(c.begin()) it(c.begin());i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define modul 1000000007
#define infi 99999999
#define BUG(x) {cout<<#x<<" = "<<x<<endl;}
#define PR(x,a,b) {For(i,a,b+1)cout<<x[i]<<' ';cout<<endl;}
#define FILL(a,x) memset(a,x,sizeof(a));
#define sc(a) scanf("%d", &a)
#define pii pair<int,int>
#define ll long long
#define PI acos(-1)
#define gc getchar
#define pc putchar
#define TIN {cout<<"Time started\n";time_t __t_v=clock();
#define TOUT cout<<"Time Taken : "<<(clock()-__t_v)/(double)CLOCKS_PER_SEC<<"\n";}

inline void scanint(int &x){register int c=0;x=0;int flag=0;for(;((c!=45)&&(c<48||c>57));c=gc());
for(;((c==45)||(c>47&&c<58));c=gc()){if(c==45)flag=1;else x=(x<<1)+(x<<3)+c-48;}if(flag)x=-x;}

#define MAX 10000006
int seive[MAX];

vector<int> vec[30];

void prime()
{
    int i,j;

    for(i = 2; i < MAX; ++i) {
        if(!seive[i]) {
            for(j = i; j < MAX; j += i)
                seive[j]++;
        }
    }
}

int main()
{
    int t,t1,t2,a,b,n,m,i,j,k,l,ans,count,temp,sum,flag;

    //freopen("inp8.txt", "r", stdin);
    //freopen("out8.txt", "w", stdout);

    prime();
    //PR(seive, 2, 12);
    For(i, 2, MAX) {
        vec[seive[i]].pb(i);
    }

    //For(i, 1, 30)
      //  cout << vec[i].size() << endl;

    sc(t);
    while(t--) {
        sc(a), sc(b), sc(k);
        assert((t <= 100000) && (2 <= a && a <= 10000000) && (2 <= b && b <= 10000000) && (a <= b) && (1 <= k && k <= 1000000000));
        if(k > 8) {
            printf("0\n");
            continue;
        }

        count = 0;

        t1 = lower_bound(vec[k].begin(), vec[k].end(), a) - vec[k].begin();
        t2 = lower_bound(vec[k].begin(), vec[k].end(), b) - vec[k].begin();

        count = t2-t1+1;
        if(vec[k][t2] != b)
            count--;

        printf("%d\n", count);// << endl;
    }

    return 0;
}
