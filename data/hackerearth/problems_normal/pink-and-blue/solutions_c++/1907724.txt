#include<cstdio>
#include<iostream>
#include<vector>
#define MAX 100002
using namespace std;

vector< int >adj[MAX];
char arr[MAX];
int n,m;
int visited[MAX];
void DFS(int s,char ch);
char color[MAX];

int main()
{
 cin>>n>>m;
int i,u,v,res1=0,res2=0;

   for(i=1;i<=n;i++)
     cin>>arr[i];

   for(i=1;i<=m;i++)
    {
      cin>>u>>v;
      adj[u].push_back(v);
      adj[v].push_back(u);
    }

 DFS(1,'p');


  for(i=1;i<=n;i++)
  {
    if((arr[i]=='B' && color[i]=='p') || (arr[i]=='G' && color[i]=='b'))
      res1++;
  }

//  memset(visited,0,sizeof(visited));

  for(i=1;i<=n;i++)
    visited[i]=0;

 DFS(1,'b');
   for(i=1;i<=n;i++)
  {
    if((arr[i]=='B' && color[i]=='p') || (arr[i]=='G' && color[i]=='b'))
      res2++;
  }

  if(res1>res2)
   cout<<res2<<endl;
  

  else
   cout<<res1<<endl;

return 0;
 }

/* void DFS(int s,char ch)
 {
    int i,j;
    visited[s]=1;     

     if(ch=='p')
      color[s]='b';

     else
       color[s]='p';

     for(i=0;i<adj[s].size();i++)
     {

       j=adj[s][i];
 
        if(visited==0)
          DFS(j,color[s]);

     }
 return;
 }*/

void DFS(int u,char ch)
{
	visited[u]=1;
	if(ch=='p')
		color[u]='b';
	else
		color[u]='p';
	for(int i=0;i<adj[u].size();i++)
	{
	 int v=adj[u][i];
	if(visited[v]==0)
		DFS(v,color[u]);
	}
	return;
}