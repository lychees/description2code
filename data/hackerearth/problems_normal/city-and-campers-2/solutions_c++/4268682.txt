/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
int m[100005];
int parent[100005];
int sz[100005];
int max_size=1;
void ini(int n)
{
    m[1]=n;
    for(int i=1;i<=n;i++)
    {
        parent[i]=i;
        sz[i]=1;
        if(i!=1)
            m[i]=0;
    }
}
int root(int a)
{
    while(a!=parent[a])
    {
        parent[a]=parent[parent[a]];
        a=parent[a];
    }
    return a;
}
void uni(int a,int b)
{
    int p=root(a);
    int q=root(b);
    if(sz[p]>sz[q])
    {
        parent[q]=p;
        m[sz[p]]--;
        m[sz[q]]--;
        sz[p]+=sz[q];
        m[sz[p]]++;
        max_size=max(max_size,sz[p]);
    }
    else
    {
        parent[p]=q;
        m[sz[p]]--;
        m[sz[q]]--;
        sz[q]+=sz[p];
        m[sz[q]]++;
        max_size=max(max_size,sz[q]);
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n,q;
    cin>>n>>q;
    ini(n);
    while(q--)
    {
        int a,b;
        cin>>a>>b;
        if(root(a)!=root(b))
        uni(a,b);
        int flag=0;
        int index=1;
        for(int i=1;i<=max_size-1;i++)
        {
            if(m[i]>0)
            {
                index=i;
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            cout<<0<<"\n";
            continue;
        }
        flag=0;
       // cout<<max_size<<"\n";
        int ans=INT_MAX;
        for(int i=index;i<=max_size-1;)
        {
            int j=i+1;
            if(m[i]>1)
            {
                flag=1;
                break;
            }
            while(m[j]==0)
                j++;
         //   cout<<j<<" ";
            ans=min(ans,j-i);
            i=j;
        }
        if(flag==1)
            ans=0;
        cout<<ans<<"\n";
    }
}
