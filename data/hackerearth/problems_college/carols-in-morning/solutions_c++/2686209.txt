#include<bits/stdc++.h>
using namespace std;

int main()
{
	string s;
	int t, n, size;
	
	vector<int> v1;
	vector<int>::iterator it;
	
	scanf("%d", &t);
	int flag;
	while(t--)
	{
		scanf("%d", &n);
		vector< vector<int> >v;
		queue< vector<int> > q1;
		cin >> s;
		size = s.length();
		flag = 0;
		v1.clear();
		for(int i = 0; i < size; i++)
				v.push_back(v1);
		
		for(int i = 1; i <= n; i++)
		{
			if(i != 1)
				cin >> s;
			v1.clear();
			
			for(int j = 0; j < size; j++)
			{
				if(s[j] == 'Y')
				{
					v[j].push_back(i);
				}
			}
		}

		/*for(int i = 0; i < v.size(); i++)
		{
			for(int j = 0; j < v[i].size(); j++)
				cout << v[i][j] << ' ';
			cout << endl;
		}*/

		for(int i = 0; i < v.size(); i++)
			q1.push(v[i]);

		//cout << q1.size() << endl;
		for(int i = 1; ; i++)
		{
			int qs = q1.size();
			for(int j = 0; j < qs; j++)
			{
				v1 = q1.front();
				q1.pop();
				
				//for(int p = 0; p < v1.size(); p++)
				//	cout << v1[p] << ' ';
				//cout << endl;


				if(v1.size() == n)
				{
					flag = 1;
					printf("%d\n", i);
					break;
				}
				else
				{
					for(int p = 0; p < v.size(); p++)
					{
						vector<int> v2(10000);
						it = set_union(v[p].begin(), v[p].end(), v1.begin(), v1.end(), v2.begin());
						v2.resize(it - v2.begin());
						q1.push(v2);
					}
				}
			}
			if(flag)
				break;
		}

	}

	return 0;
}