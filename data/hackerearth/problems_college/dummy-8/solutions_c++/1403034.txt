#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define pnl printf("\n");
using namespace std;
int grid[104][104];
int Sx,Sy,Gx,Gy;
vector< pair<int, pair<int,int> > > lasers;
bool blast[5][104][104];
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
int N,M;
bool visited[5][104][104];
int timeR[104][104];
bool isvalid(int x,int y)
{
    if(x>=1 && y>=1 && x<=N && y<=M && grid[x][y]==1)return true; return false;
}
void lasersArea()
{
    int len= lasers.size();
    int Lx,Ly,type,x,y;
    for(int i=0;i<len;i++)
    {
        Lx= lasers[i].second.first;
        Ly= lasers[i].second.second;
        type=lasers[i].first; type++; type%=4; // for first shoot
        for(int j=0;j<4;j++)
        {
            x= Lx+ dx[(type+j)%4];
            y= Ly+ dy[(type+j)%4];
            while( isvalid(x,y))
            {
                blast[j][x][y]=true;
                x+=dx[(type+j)%4];y+=dy[(type+j)%4];
            }
        }
    }
   return;
}

int bfs()
{
    int x,y,x1,y1; bool flag;
    queue< pair<int,int> >que;
    pair<int,int>pa;
    pa=mp(Sx,Sy);
    que.push(pa);
    visited[0][Sx][Sy]=true;
    while(!que.empty())
    {
        pa= que.front(); que.pop();
        x= pa.first; y= pa.second;
        if(x==Gx && y==Gy) return timeR[Gx][Gy];
        flag=false;
        for(int i=0;i<4;i++)
        {
            x1=x+dx[i]; y1=y+dy[i];
            if( isvalid(x1,y1) && !visited[ (timeR[x][y])%4 ][x1][y1] && blast[ (timeR[x][y])%4][x1][y1]==false)
            {
                visited[ (timeR[x][y])%4 ][x1][y1]=true;
                timeR[x1][y1]= timeR[x][y]+1;
                flag=true;
                que.push(mp(x1,y1));
            }
        }
    }
    return -1;
}
int main()
{
      int i,j,t;
      string str;
      scanf("%d",&t);
      for(int tc=1;tc<=t;tc++)
      {
         memset(blast,false,sizeof(blast));
      	 lasers.clear();
      	 memset(visited,false,sizeof(visited));
      	 memset(timeR,0,sizeof(timeR));
         scanf("%d %d",&N,&M);
         for(i=1;i<=N;i++)
         {
             cin>>str;
             for(j=1;j<=M;j++)
             {
                 if(str[j-1]=='.')grid[i][j]=1;
                 else if(str[j-1]=='#')grid[i][j]=0;
                 else if(str[j-1]=='S'){Sx=i, Sy=j; grid[i][j]=1;}
                 else if(str[j-1]=='G'){Gx=i, Gy=j; grid[i][j]=1;}
                 else  grid[i][j]=2;
                 if(str[j-1]=='^')lasers.pb( mp(0,mp(i,j)));
                 if(str[j-1]=='>')lasers.pb( mp(1,mp(i,j)));
                 if(str[j-1]=='v')lasers.pb( mp(2,mp(i,j)));
                 if(str[j-1]=='<')lasers.pb( mp(3,mp(i,j)));
             }
         }
         lasersArea();
         int ans=bfs();
         printf("Case #%d: ",tc);
         if(ans==-1)
         {
             printf("impossible\n");
         }
         else printf("%d\n",ans);
      }
return 0;
}