#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;


template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}

int main() {
    ios_base::sync_with_stdio ( false );
    ll a,b,S;
    cin>>a>>b>>S;
    unsigned long long  digits=1;
    int i=0;
    vll  num ( 150 );
    vll numnew ( 150 );
    ll remainingUpper=0,remaininglower=0;
    while ( digits<b ) {
        digits*=10;
        i++;
    }

    while ( i>0 ) {
        digits/=10;
        i--;
        int da=a/digits%10;
        int db=b/digits%10;
//         cout<<da<<" "<<db<<endl;
        remainingUpper+=db;
        remaininglower+=da;
        if ( db>da ) {
            for ( int i=1; i<db-da; i++ )
                if ( remaininglower+i<=S )
                    num[remaininglower+i]++;
            break;
        }

    }
//     cout<<digits<<endl<<num;
    while ( i>0 ) {
        digits/=10;
        int da=a/digits%10;
        int db=b/digits%10;
//         cout<<da<<" "<<db<<endl;
        i--;
        for ( int i=0; i<10; i++ ) {
            for ( int j=S-i; j>=0; j-- ) {
                numnew[j+i]+=num[j];
            }
        }
//         cout<<digits<<endl<<numnew;
        for ( int i=da+1; i<10; i++ )
            if ( remaininglower+i<=S )
                numnew[remaininglower+i]++;
//          cout<<digits<<endl<<numnew;
        for ( int i=0; i<db; i++ )
            if ( remainingUpper+i<=S )
                numnew[remainingUpper+i]++;
//          cout<<digits<<endl<<numnew;
        for ( int j=0; j<=S; j++ ) {
            num[j]=numnew[j];
            numnew[j]=0;
        }
        remainingUpper+=db;
        remaininglower+=da;
    }
    if ( remaininglower<=S )
        num[remaininglower]++;
    if ( remainingUpper<=S )
        num[remainingUpper]++;
//     cout<<remaininglower<<" "<<remainingUpper<<endl;
     cout<<num[S]<<endl;
    digits=1;
    while(remaininglower<S){
    ll d=a/digits%10;
    ll toadd=min<ll>(9-d,S-remaininglower);
    a+=toadd*digits;
    remaininglower+=toadd;
        digits*=10;
    }
    cout<<a<<endl;
}
