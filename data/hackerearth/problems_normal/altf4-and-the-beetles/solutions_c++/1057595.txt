#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <queue>
using namespace std;
#define rep(i, a, b) for(int i = (int)a; i < (int)b; i++)
#define red(i, a, b) for(int i = (int)a; i > (int)b; i--)
#define pb push_back
#define mk make_pair
#define fi first
#define se second
typedef pair<int, int> ii;
typedef long long ll;
const int N = 1e5 + 7;
const int inf = 1e9 + 7;

vector<int> p, q;
int n;
int a, b, c;

int find1(int x){
    int lo = 0, hi = n - 1, g, res = -1;
    do{
        g = (lo + hi) >> 1;
        if (p[g] > x){
            res = g;
            hi = g - 1;
        }else lo = g + 1;
    }while (lo <= hi);
    return res;
}

int find2(int x){
    int lo = 0, hi = n - 1, g, res = -1;
    do{
        g = (lo + hi) >> 1;
        if (q[g] < x){
            res = g;
            lo = g + 1;
        }else hi = g - 1;
    }while (lo <= hi);
    return res;
}

int main(){
    //freopen("in.txt", "r", stdin);
    int test;
    cin >> test;
    while (test-- > 0){
        p.clear();q.clear();
        ll res = 0;
        scanf("%d", &n);
        scanf("%d%d%d", &a, &b, &c);
        rep(i, 0, n){
            int u, v;
            scanf("%d%d", &u, &v);
            p.pb(u); q.pb(v);
        }
        sort(p.begin(), p.end());
        sort(q.begin(), q.end());
        rep(i, 0, n){

            int u = find1(p[i]), v = find2(p[i]);
            v ++;
            if (u == -1) u = 0;
            else u = n - u;
            //cout<<p[i]<<" "<<u<<" "<<v<<endl;
            ll tmp = (ll) a * u + (ll)c * v + (ll)b * (n - u - v);
            res = max(res, tmp);

            u = find1(q[i]), v = find2(q[i]);
            v ++;
            if (u == -1) u = 0;
            else u = n - u;

            tmp = (ll) a * u + (ll)c * v + (ll)b * (n - u - v);
            res = max(res, tmp);

        }
        cout<<res<<endl;

    }


    return 0;
}
