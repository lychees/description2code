#include<bits/stdc++.h>
#define ll long long
#define ld double
#define f first
#define s second
#define pb push_back
#define M 1000000007
#define MX 1000003
#define INF 10000000000
#define PI 3.141593
#define mmx(a,b) a>b?a:b
#define mmn(a,b) a<b?a:b
using namespace std;
typedef pair<ll,ll> ii;
typedef vector<ll> vv;
ll arr[4000005]={0},a[100005],b[100005];
ll query(ll node,ll l,ll r,ll ql,ll qr)
{
    if(ql<=l&&r<=qr)
        return arr[node];
    ll ch=node<<1,mid=(l+r)>>1,ans=0;
    if(ql<=mid) ans=query(ch,l,mid,ql,qr);
    if(qr>=mid+1) ans+=query(ch+1,mid+1,r,ql,qr);
    return ans;
}
void update(ll node,ll l,ll r,ll ind)
{
    if(l==r&&l==ind)
    {
        arr[node]++;
        return;
    }
    ll ch=node<<1,mid=(l+r)>>1;
    if(ind<=mid) update(ch,l,mid,ind);
    if(ind>=mid+1) update(ch+1,mid+1,r,ind);
    arr[node]=arr[ch]+arr[ch+1];
}
int main()
{
  ll n,ans=0,cnt=0;
  cin>>n;
  for(ll i=0;i<n;i++)
    cin>>a[i];
  for(ll i=0;i<n;i++)
    cin>>b[i];
  for(ll i=n-2;i>=0;i--)
  {
      update(1,0,MX,b[i+1]);
      ans+=query(1,0,MX,1,a[i]-1);
  }
  if(ans%2==0)
  {
      while(ans%2==0)
      {
          ans/=2;
          cnt++;
      }
  }
  for(ll i=3;i*i<=ans;i+=2)
  {
      if(ans%i==0)
      {
          while(ans%i==0)
          {
              ans/=i;
              cnt++;
          }
      }
  }
  if(ans>1)
    cnt++;
  if(cnt>1)
    cout<<"SIMPLE INVERSION";
  else cout<<"MAGIC INVERSION";
}
