#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>

using namespace std;

typedef long long int ll;

vector<int> normalize(char * str, int len, char g) {
	vector<int> vec;
	int count = 0;
	for (int i = 0; i < len; ++i) {
		if (str[i] == g) {
			vec.push_back(count);
			count = 0;
		}
		else ++count;
	}
	vec.push_back(count);
	return vec;
}

ll countLen(const vector<int>& vec, int len) {
	ll sum = 0;
	if (len == 0) {
		for (int i = 0; i < vec.size(); ++i)
			sum += vec[i] * ((ll)vec[i] + 1) / 2;
	} else {
		for (int i = 0; i + len < vec.size(); ++i)
			sum += (vec[i] + 1) * (ll) (vec[i + len] + 1);
	}
	return sum;
}

const int MAXLEN = 1000100;

char buff[MAXLEN];

int main() {
	int T, n, m;
	// freopen("in.in.txt", "r", stdin);
	//freopen("out.out", "w", stdout);
	scanf("%d\n", &T);
	while(T--) {
		scanf("%d %d\n", &n, &m);
		gets(buff);
		int len = strlen(buff);
		printf("%lld %lld\n", countLen(normalize(buff, len, 'R'), n), 
			countLen(normalize(buff, len, 'K'), m));
	}
	return 0;
}