
#include<bits/stdc++.h>
using namespace std;
 void UpperCaseMade(char *a)
 {
    for(int i=0;a[i];i++)
     {
         char c=a[i];
         if(a[i]>=97)
         a[i]-=32;
        //cout<<c;
     }

 }
int main()
{
    vector<string> result;
    map<string,int> wordCount;
   string str;
   //getline(cin,str);
   char word1[1000];
   gets(word1);
   stringstream s(word1);
   char str1[100];


   while(s>>str1)
   {
     UpperCaseMade(str1);
     //cout<<str1;

        wordCount[str1]++;
        if(wordCount[str1]<=1)
            result.push_back(str1);
   }
   vector<string>:: iterator it;
   for(it=result.begin();it!=result.end();it++)
   {
       cout<<*it<<" "<<wordCount.find(*it)->second<<endl;
   }


}




/*char str[1000],str2[1000];
    gets(str);
    gets(str2);
    int length1=strlen(str);
    int length2=strlen(str2);
    int i,j;
    short int ara[1000];
    memset(ara,0,1000*sizeof(short int))
    for(i=0,j=1;j<length1;j++){
        if(str[i]==str[j])
        {
            ara[j]=i+1;
            i++;
        }
    }



}
/*int prime[M>>5];
int ara[M+1];
bool check(int number,int position){
    return (bool)(number & 1<<position);
}
int setPrimality(int number,int position){
   return number= number | (1<<position);
}
void primeGenerator(){
    int x=sqrt(M);
    ara[2]=2;
    int k=1;
    for(int i=3;i<=M;i+=2){
        if(check(prime[i>>5],i&31)==0)
        {

            ara[i]=i;
            //cout<<ara[i];
            for(int j=i*i;j<=M;j+=2*i){
                prime[j>>5]=setPrimality(prime[j>>5],j&31);

            }

        }

    }
}
int ifPrime(long long number){
    if(number==1)
        return 0;
    int x=sqrt(number);
    for(int i=2;i<=x;i++){
        if(ara[i]!=0)
        {
            if(number%ara[i]==0)
                return 0;

        }
    }
    return 1;
}
int main(){
    FILE *pf;
    pf=fopen("testCase.txt","r");
   long long  made,left;
    int test;
     primeGenerator();

    /*if(ifPrime(78)==1)
    cout<<ara[5];

    scanf("%d",&test);
    primeGenerator();

    for(int j=1;j<=test;j++){
             vector<long long> myVector;
    vector<long long>::iterator i1;
   //fscanf(pf,"%d %d",&made,&left);
        scanf("%lld %lld",&made,&left);
    long long divisor=made-left;
    long long dif=made-divisor;
    long long denominator=made;
    printf("Case %d:",j);
if(left>=divisor || made==0)
     printf(" impossible\n");
else{
        int x=sqrt(divisor);
    for(long long  i=1;i<=denominator;i++){
        if(divisor%i==0){
            denominator=divisor/i;

               if(made%denominator==dif )
            myVector.push_back(denominator);

            if(made%i==dif &&  i!=denominator)
                myVector.push_back(i);
            if((denominator==2 || (denominator &1 ==1)) && ifPrime(denominator))
                   {

                       break;
                   }
        }

    }
    sort(myVector.begin(),myVector.end());
    if(myVector.empty())
      {
          printf(" impossible\n");

      }
else{
    for(i1=myVector.begin();i1!=myVector.end();i1++){


    printf(" %lld",*i1);
    }
    printf("\n");
}

        myVector.clear();
    }
}




}*/



