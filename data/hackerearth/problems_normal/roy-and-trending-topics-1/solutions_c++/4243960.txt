#include <iostream>
#include <queue>
#include <functional>
#include <map>
using namespace std;
typedef pair<long int,long int> Pair;
class func1{
	public:
	bool operator () (const Pair &lhs, const Pair &rhs) const
	{
		if(lhs.first < rhs.first)
			return true;
		else if( lhs.first == rhs.first) 
		{
			return (lhs.second < rhs.second)?true:false;
		}
		else return false;
	}
};

int main()
{
    long int n,i,z,p,l,c,s,score;
    priority_queue< Pair, vector<Pair> , func1> pq;
    std::multimap<long int, long int> mp;
    cin >> n;
    int arr[n],zsc[n];
    for(i=0;i<n;i++)
    {
    	cin >> arr[i];
    	cin >> z >> p >> l >> c >> s;
    	score = p*50 + l*5 + c*10 + s*20;
    	zsc[i] = score;
    	mp.insert(make_pair(arr[i],score));
    	pq.push(make_pair(score - z,arr[i]));
    //	cout << "--------" << arr[i] << " " << score - z << endl;
    }
   // for(i=0;i<n;i++)
    //	cout << arr[i] << " " << zsc[i] << endl;
    //cout << endl;
    for(i=0;i<5;i++)
    {
    	cout << pq.top().second << /*" " << pq.top().first << */" " << mp.find(pq.top().second)->second << endl;
    	pq.pop();
    }
   //cout << " --- " <<  mp.find(1003)->second << endl;
    return 0;
}
