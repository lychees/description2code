#include <bits/stdc++.h>
using namespace std;
vector<long int > v[1002];
void BFS(long int n,long int *l,int i)
{
	long int vis[n];
	long int kkk=0;
	while(kkk<n)
	{
		vis[kkk]=0;
		kkk++;
	}
	queue<long int> q;
//	cout<<endl;
	q.push(0);
	q.push(-1);
	long int countt=0;
	vis[0]=1;
	l[0]=0;
	while(!q.empty())
	{
		long int p=q.front();
		q.pop();
//		cout<<p<<" , ";
		if(p!=-1)
		{
//			cout<<p<<"  ";
			l[p]=countt;
			vector<long int >::iterator it=v[p].begin();
			while(it!=v[p].end())
			{
//				cout<<*it<<" "<<vis[*it]<<"\n";
				if(vis[*it]==0)
				{
					q.push(*it);
					vis[*it]=1;
				}
				it++;
			}
		}
		else if(!q.empty() && p==-1)
		{
			q.push(-1);
			countt++;
		}
	}
}
int main()
{
	long int n,c,i=0;
	cin>>n>>c;
	long int a,b,level[n];
//	cout<<n<<"  "<<c<<"\n";
	while(i<c)
	{
		cin>>a>>b;
//		cout<<a<<" "<<b<<" \n";
		v[a].push_back(b);
		v[b].push_back(a);
//		level[i]=-1;
		i++;
	}
	i=0;
	while(i<n)
	{
		level[i]=-1;
		i++;
	}
	BFS(n,level,0);
	i=1;
	while(i<n)
	{
		cout<<level[i]<<"\n";
		i++;
	}
}
