#include <bits/stdc++.h>
using namespace std;
long long dp[200][2100];
long long contsum[1<<20];
long long best[1<<20];
int arr[110];
int main()
{
    ios_base::sync_with_stdio(0);
    int n,m,len;
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
    	cin>>len;
    	contsum[0]=0;
    	for(int j=1;j<=len;j++)
    	{
    		cin>>arr[j];
    		contsum[j]=contsum[j-1]+arr[j];
    	}
    	best[0]=0;
    	for(int j=1;j<=m;j++)
    	best[j]=-1e15;
    	for(int x=1;x<=len;x++)
    	{
    		for(int j=1;x+j-1<=len&&j<=m;j++)
    		{
    			best[j]=max(best[j],contsum[x+j-1]-contsum[x-1]);
    		}
    	}
    	for(int j=0;j<=m;j++)
    	{
    		for(int take=0;take+j<=m;take++)
    		dp[i][j+take]=max(dp[i][j+take],dp[i-1][j]+best[take]);
    	}
    }
    cout<<dp[n][m]<<"\n";
    return 0;
}
