/* Man Mohan Mishra aka m17
   IIIT - Allahabad */
#include <cstdio>
#include <cmath>
#include <cstring>
#include <climits>
#include <cstdlib>
#include <cctype>
#include <iostream>
#include <algorithm>
#include <utility>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <iterator>

#define MOD 1000000007
#define INF 1000000000000000000
#define PI acos(-1)

using namespace std;

long long GCD (long long a,long long b) {
	if (b == 0) return a;
	return(a % b == 0 ? b : GCD(b,a % b));
}

long long POW (long long base,long long exp) {
	long long val;
	val = 1;
	while (exp > 0) {
		if (exp % 2 == 1) {
			val = (val * base) % MOD;
		}
		base = (base * base) % MOD;
		exp = exp / 2;
	}
	return val;
}

char s[25];

int main()
{
	int t;
	scanf("%d",&t);
	while (t --) {
		int n,i,j,k,l,prev_a,prev_b,prev_c,prev_d;
		long long a,b,c,d,ans;
		scanf("%s",s);
		n = strlen(s);
		ans = -1;
		a = 0;
		prev_a = prev_b = prev_c = prev_d = 0;
		for (i = 0; i < 14; i++) {
			if (i >= n || prev_a == -1) {
				prev_a = 0;
				break;
			}
			if (s[0] == '0') {
				prev_a = -1;
			}
			a = a * 10 + (s[i] - '0');
			b = 0;
			for (j = 0; j < 14; j++) {
				if (i + j + 1 >= n || prev_b == -1) {
					prev_b = 0;
					break;
				}
				if (s[i + 1] == '0') {
					prev_b = -1;
				}
				b = b * 10 + (s[i + j + 1] - '0');
				c = 0;
				for (k = 0; k < 14; k++) {
					if (i + j + k + 2 >= n || prev_c == -1) {
						prev_c = 0;
						break;
					}
					if (s[i + j + 2] == '0') {
						prev_c = -1;
					}
					c = c * 10 + (s[i + j + k + 2] - '0');
					d = 0;
					for (l = 0; ; l++) {
						if (i + j + k + l + 3 >= n || prev_d == -1) {
							prev_d = 0;
							break;
						}
						if (s[i + j + k + 3] == '0') {
							prev_d = -1;
						}
						d = d * 10 + (s[i + j + k + l + 3] - '0');
						if (i + j + k + l + 3 == n - 1) {
							if (a <= 1e12 && b <= 1e12 && c <= 1e12 && d <= 1e12) {
								ans = max(ans,a + b + c + d);
							}
						}
					}
				}
			}
		}
		if (ans == -1) {
			printf("unlucky\n");
		} else {
			printf("%lld\n",ans);
		}
	}
	return 0;
}