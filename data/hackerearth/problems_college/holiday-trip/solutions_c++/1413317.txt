#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>

#include<iomanip>
#include<cstring>
#include<sstream>

#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;

#define PB push_back
#define MP make_pair
#define FF first
#define SS second

vector<int> g[2000];
int ans;
int dfs(int cur,int par)
	{
	int i=0;
	int maxd=0;
	for(i=0;i<g[cur].size();i++)
		{
		int n=g[cur][i];
		if(n==par)
			continue;
		int x=dfs(n,cur);
		ans=max(ans,x+maxd);	
		maxd=max(x,maxd);
		}
	return 1+maxd;
	}
int main()
{
ios_base::sync_with_stdio(false);
int T;
cin>>T;
int i,j,k;
int N;
while(T--)
	{
	cin>>N;
	for(i=0;i<N;i++)
		g[i].clear();
	for(i=0;i<N-1;i++)
		{
		cin>>j;
		cin>>k;
		g[j].PB(k);
		g[k].PB(j);
		}
	ans=0;
	k=dfs(0,-1);
	ans=max(ans,k-1);
	cout<<ans+1<<endl;;
	}
return 0;
}