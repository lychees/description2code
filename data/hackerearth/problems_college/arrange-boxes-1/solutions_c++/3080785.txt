#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <bitset>
#include <sstream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <functional>
#include <iomanip>
#include <cstdlib>
typedef long long int ll;
const int mx = 1e5 + 10;
const int inf = 1e9 + 10;
using namespace std;

ll ans = 0;
int u[mx], v[mx], t, n;
void mergeOp(int l, int m, int r){
     int n1 = m - l + 1;
    int n2 = r - m;
    int la[n1 + 1], ra[n2 + 1];
    for(int i = 0; i < n1; i++)la[i] = u[l + i];
    for(int j = 0; j < n2; j++)ra[j] = u[m + j + 1];
    la[n1] = inf;
    ra[n2] = inf;
    int i = 0, j = 0;
    for(int k = l; k <= r; k++){
        if(la[i] <= ra[j]){
            u[k] = la[i];
            i++;
        }
        else{
            ans += 1LL * (n1 - i);
            u[k] = ra[j];
            j++;
        }
    }
}

void merge_sort(int l, int r){
    if(l < r){
        int m = (l + r) >> 1;
        merge_sort(l, m);
        merge_sort(m + 1, r);
        mergeOp(l, m, r);
    }
}

int main(){
    scanf("%d", &t);
    while(t--){
        scanf("%d", &n);
        for(int i = 0; i < n; i++)scanf("%d", &u[i]);
        for(int i = 0; i < n; i++){
            int x;
            scanf("%d", &x);
            v[x] = i;
        }
        for(int i = 0; i < n; i++){
            u[i] = v[u[i]];
            //cout << u[i] <<endl;
        }
        ans = 0;
        merge_sort(0, n - 1);
        printf("%lld\n", ans);
    }
    return 0;
}
