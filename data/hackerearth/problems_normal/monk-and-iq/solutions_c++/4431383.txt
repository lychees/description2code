#include <iostream>
#include <stdio.h>
#include <algorithm>
using namespace std;
# define left(i) i<<1;
# define right(i) (i<<1)+1;
# define parent(i) i>>1;
struct minHeap
{
    int index;
    int value;
    int latestIQ;
};
minHeap h[1000002];
int miq[1000002];
int z[1000002];
int howmany[1000002];
int heapsize=0;
void Heapify(int i)
{
    int l,r,smallest;
    l=left(i);
    r=right(i);
    if(l<=heapsize&&h[i].value>=h[l].value)
    {
        if(h[i].value==h[l].value)
        {
            if(h[i].index>h[l].index)
            {
                smallest=l;
            }
            else
            {
                smallest=i;
            }
        }
        else
        {
            smallest=l;
        }
    }
    else
    {
        smallest=i;
    }
    if(r<=heapsize&&h[smallest].value>=h[r].value)
    {
        if(h[smallest].value==h[r].value)
        {
            if(h[smallest].index>h[r].index)
            {
                smallest=r;
            }
        }
        else
        {
            smallest=r;
        }
    }
    if(smallest!=i)
    {
        swap(h[i],h[smallest]);
        return Heapify(smallest);
    }
}
void buildMinHeap(int n)
{
    heapsize=n;
    int i;
    for(i=1;i<=n;i++)
    {
        h[i].value=z[i];
        h[i].index=i;
        h[i].latestIQ=z[i];
        if(z[i]!=0)
        {
            howmany[i]++;
        }
    }
    for(i=heapsize/2;i>=1;i--)
    {
        Heapify(i);
    }
}

int main()
{
    int p,c,n,i,xi,xliq;
    scanf("%d %d %d",&c,&p,&n);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&z[i]);
    }
    for(i=1;i<=p;i++)
    {
        scanf("%d",&miq[i]);
    }
    buildMinHeap(c);
    /*for(j=1;j<=c;j++)
        {
            printf("index[%d]: %d value[%d]: %d latestIQ[%d]: %d\n",j,h[j].index,j,h[j].value,j,h[j].latestIQ);
        }*/
 //   printf("c is :%d\n",c);
    //printf("\n");
    for(i=1;i<=p;i++)
    {
        xi=h[1].index;
        xliq=h[1].latestIQ;
        printf("%d ",xi);
        howmany[xi]++;
        z[xi]=howmany[xi]*(xliq + miq[i]);
        h[1].latestIQ=miq[i];
        h[1].value=z[xi];
        Heapify(1);
      /*  for(j=1;j<=c;j++)
        {
            printf("index[%d]: %d value[%d]: %d latestIQ[%d]: %d\n",j,h[j].index,j,h[j].value,j,h[j].latestIQ);
        }
        puts("");*/
    }
    return 0;
}
