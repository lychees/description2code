#include <iostream>
#include "memory.h"
using namespace std;


int NN = 0;
int coin = 0, coinleft = 0;
int MatArr1[102][102] = {0};


bool DFSPath(int RR, int CC)
{
	coinleft += MatArr1[RR][CC];
	for(int i = RR; i <= NN; ++i)
	{
		for(int j = CC; j <= NN; ++j)
		{
			if(MatArr1[i][j-1] > MatArr1[i-1][j])
			{
				MatArr1[i][j] +=  MatArr1[i][j-1];
			}
			else
			{
				MatArr1[i][j] +=  MatArr1[i-1][j];
			}
			
		}
		
	}
	

	return true;
}

int main()
{
    int TC = 0;
	cin >> TC;
	for(int T = 1; T <= TC; T++)
	{
		
		NN = 0;
		coin = 0;
		coinleft = 0;

		cin >> NN;
		cin >> coin;
		memset(MatArr1, 0x00, sizeof(MatArr1));
		for(int i = 1; i <= NN; ++i)
			for(int j = 1; j <= NN; ++j)
				cin >> MatArr1[i][j];

		
		if(DFSPath(1,1))
		{

		}

	//	cout << count << endl;
		coinleft = MatArr1[NN][NN];
		if((coinleft >= coin))
			coinleft -= coin;
		else 
			coinleft = -1;

		cout << coinleft << endl;
	
	}
    return 0;
}
