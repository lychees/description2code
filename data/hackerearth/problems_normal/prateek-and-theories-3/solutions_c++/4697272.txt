#include <vector>
#include <iterator>
#include <random>
#include <list>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <set>
#include <queue>
#include<array>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include<fstream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<string.h>
#include<list>
#include<map>
#include<queue>
#include<assert.h>
#define pb push_back
#define all(v) (v).begin(),(v).end()
#define rep(i,a,n) for( int i=(a) ; i < (int)(n) ; i++)
#define sz(v) int(v.size())
#define mp make_pair
#define till(a) while(a--)
#define sf(a) scanf("%d",&a)
#define gc getchar
#define MAX 10000000
using namespace std;
typedef vector<string> vs;
typedef vector<int> vi;
typedef pair<int , int> ii;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
typedef pair<int , int> ii;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int , int> ii;

template<typename t>
t gi() { t x; cin >> x; return x; }
template<typename t>
t gg( t x ) { cin >> x; return x; }

struct Interval {
	int t;
	int x;//x=-1 dep x=1 arr
	bool operator<( const Interval& other )const {
		if (t == other.t)return x < other.x;
		return t < other.t;
	}
	Interval( int s , int a ) {
		t = s , x = a;
	}
};

int main() {
	ios::sync_with_stdio( false );
	int t;
	cin >> t;
	till( t ) {
		int n;
		cin >> n;
		vector<Interval> v;
		rep( i , 0 , n ) {
			int s , e; cin >> s >> e;
			v.push_back( Interval( s , 1 ) );
			v.push_back( Interval( e , -1 ) );
		}
		sort( v.begin() , v.end() );
		int ct = 0;
		int ans = 0;
		for (const auto &p : v) {
			if (p.x == 1)++ct;
			else --ct;
			ans = max( ans , ct );
		}
		cout << ans << endl;
	}
	return 0;
}
