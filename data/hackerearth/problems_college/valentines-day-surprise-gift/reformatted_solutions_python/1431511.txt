def powmod(a, b, r):
    if b == 1:
        return a % r
    half = powmod(a, b/2, r)
    if b % 2 == 0:
        return (half*half) % r
    return (a*((half*half) % r)) % r


R = [1, 1, 1, 3, 3, 15, 15, 105, 105, 105, 105, 24, 24, 48, 48, 48, 48, 96,
     96, 96, 96, 2880, 2880, 2880, 2880, 5760, 5760, 5760, 5760, 11520, 11520]
coprimes = [
    [
        1, 1], [
            1, 2], [
                1, 3], [
                    1, 4], [
                        1, 5], [
                            2, 1], [
                                2, 3], [
                                    2, 5], [
                                        3, 1], [
                                            3, 2], [
                                                3, 4], [
                                                    3, 5], [
                                                        4, 1], [
                                                            4, 3], [
                                                                4, 5], [
                                                                    5, 1], [
                                                                        5, 2], [
                                                                            5, 3], [
                                                                                5, 4]]
T = int(input())
for t in range(T):
    N = int(input())
    max_so_far = 0
    arr = [powmod(p[0]*R[N], p[1]*R[N], 1000000007) for p in coprimes]
    print max(arr)
