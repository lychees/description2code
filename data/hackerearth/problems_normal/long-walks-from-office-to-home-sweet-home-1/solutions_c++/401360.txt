#include <bits/stdc++.h>
using namespace std;

const int mx = 55, mod = 1000000007;
int a[mx][mx], g[mx][mx], res[mx][mx], n;

void matmult(int res[mx][mx], int a[mx][mx], int b[mx][mx]) {
	static int tmp[mx][mx];
	
	for(int i = 0; i < n; ++i) for(int j = 0; j < n; ++j) tmp[i][j] = 0;
	for(int i = 0; i < n; ++i) for(int j = 0; j < n; ++j)
		for(int k = 0; k < n; ++k) tmp[i][j] = (tmp[i][j] + (long long)a[i][k] * b[k][j]) % mod;
	for(int i = 0; i < n; ++i) for(int j = 0; j < n; ++j) res[i][j] = tmp[i][j];
}

void matpow(int res[mx][mx], int a[mx][mx], long long m) {
	for(int i = 0; i < n; ++i) for(int j = 0; j < n; ++j) res[i][j] = (i == j);
	for(; m; m /= 2) {
		if(m & 1) {
			matmult(res, res, a);
		}
		matmult(a, a, a);
	}
}


int main()
{
    int t, u, v;
    long long m;
    scanf("%d", &t);
    while(t--) {
    	scanf("%d %lld %d %d", &n, &m, &u, &v);
    	for(int i = 0; i < n; ++i) for(int j = 0; j < n; ++j) scanf("%d", &g[i][j]);
    	
    	
    	
    	matpow(res, g, m);
    	printf("%d\n", res[u][v]);
    	
    }
    return 0;
}
