//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}
    
ll invMod(ll n){
    return pwr(n, MOD-2);
}


int n, k, special[405], DP[405][1<<16], dist[405][405];
vector<ii> adj[405];

int dp(int now, int mask){

	if(mask == ((1<<k)-1))	return dist[now][n];
	if(DP[now][mask] != -1)	return DP[now][mask];

	int ans = MOD;
	for(int i=0;i<k;i++){
		if((mask>>i) & 1)	continue;
		ans = min(ans, dist[now][special[i]] + dp(special[i], mask|(1<<i)));
	}
	return DP[now][mask] = ans;
}


int main(){

    ios_base::sync_with_stdio(0);

    int e;
    cin>>n>>e>>k;

    for(int i=1;i<=n;i++){
    	for(int j=1;j<=n;j++)
    		dist[i][j] = MOD;
    	dist[i][i] = 0;
    }

    while(e--){
    	int a, b, c;
    	cin>>a>>b>>c;
    	dist[a][b] = min(dist[a][b], c);
    	dist[b][a] = min(dist[b][a], c);
    }

    for(int i=0;i<k;i++)
    	cin>>special[i];

    for(int k=1;k<=n;k++)
    	for(int i=1;i<=n;i++)
    		for(int j=1;j<=n;j++)
    			dist[i][j] = min(dist[i][j], dist[i][k]+dist[k][j]);

    memset(DP, -1, sizeof(DP));
    cout<<dp(1, 0);
    return 0;
}




