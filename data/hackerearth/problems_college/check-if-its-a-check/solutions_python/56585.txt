#!/usr/bin/python

def getCoords(p):
    if p[0] == 'a':
        y = 1
    elif p[0] == 'b':
        y = 2
    elif p[0] == 'c':
        y = 3
    elif p[0] == 'd':
        y=4
    elif p[0] == 'e':
        y=5
    elif p[0] == 'f':
        y=6
    elif p[0] == 'g':
        y=7
    elif p[0] == 'h':
        y=8

    x=p[1]
    return [int(x),int(y)]

def getSlope(p1,p2):
    if p1[0] == p2[0]:
        return int(0)
    elif p1[1] == p2[1]:
        return int(0)
    else:
        return float(p2[1] - p1[1])/float(p2[0] - p1[0])

testCases = int(raw_input())

for case in range(0,testCases):
    kPositions = str(raw_input())
    otherPosition = str(raw_input())
    bKPoint = getCoords(kPositions[0:2])
    wKPoint = getCoords(kPositions[3:]) 
    oType = otherPosition[0]
    oPoint = getCoords(otherPosition[2:])
    m1 = getSlope(oPoint,bKPoint)
    m2 = getSlope(oPoint,wKPoint)
    okDist = abs((((oPoint[1]-bKPoint[1])**2)+((oPoint[0]-bKPoint[0])**2)) ** (0.5))
    wkDist = abs((((wKPoint[1]-bKPoint[1])**2)+((wKPoint[0]-bKPoint[0])**2)) ** (0.5))

    if oType == 'r':
        if (oPoint[0] == bKPoint[0] or oPoint[1] == bKPoint[1]) and okDist <= wkDist:
            print 'check'
            continue
    elif oType == 'b':
        if abs(m1) == 1:
            if m1 != m2:
                print 'check'
                continue
            elif okDist <= wkDist:
                print 'check'
                continue
    elif oType == 'k':
        if ( abs(m1) == 2.0 or abs(m1) == 0.5 ) and ((abs(bKPoint[0] - oPoint[0]) + abs(bKPoint[1] - oPoint[1])) == 3):
            print 'check'
            continue
    elif oType == 'q':
        if ( abs(m1) == 1 or m1 == 0 ):
            if m1 != m2:
                print 'check'
                continue
            elif okDist <= wkDist:
                print 'check'
                continue
    
    print '-1'
