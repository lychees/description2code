#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for (unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for (unsigned   i=0; i<v.size(); i++ )
       in>>v[i];
    return in;
}

const int MAXN=1000001;
vi lpf=[]() {
    vi pfs ( MAXN );
    
    reu ( i,2,MAXN ) {
        if ( !pfs[i] ) {
            pfs[i]=i;
            if ( ( ll ) i*i<MAXN )
                for ( int j=i*i; j<MAXN; j+=i) {
                    if ( !pfs[j] )
                        pfs[j]=i;
                }
        }
    }
    
    return pfs;
}();
int main() {
//     ios_base::sync_with_stdio(false);
   vi cnt(MAXN);
    rep(i,MAXN)cnt[lpf[i]]++;
    inrep{
     int x; scanf("%d",&x);printf("%d\n",cnt[x]);   
    }
}