#include <iostream>
#include <cstdio>
#include <climits>
#include <cstring>
#include <bitset>
#include <vector>
#include <queue>
#include <stack>
#include <string>
#include <set>
#include <list>
#include <cmath>
#include <numeric>
#include <map>
#include <utility>
#include <algorithm>
using namespace std;

#define BUF 1001
#define LEN 400
#define MOD 1000000007
#define PI 3.1415926535
#define lu unsigned long long int
#define ll long long int
#define pp pair<int, int>
#define vp vector< pp >
#define vl vector< ll >
#define vi vector< long int >
#define vvi vector< vi >
#define qi queue< pp >
#define st stack< long int >
#define bt bitset<100>
#define pb(n) push_back(n)
#define setl set<long int>

/*typedef struct
{
	char nm[30];
	int let;
}lead;

bool sortfunc(long int i, long int j)
{
	return i > j;
}

inline int log5(ll n)
{
	int ans = 0;
	while(n>=5)
	{
		n/=5;
		ans++;
	}
	return ans;
}

inline ll powr(ll n)
{
	ll p = 1;
	for (int i = 0; i < n; ++i)
	{
		p *= 10;
	}
	return p;
}*/

int main(int argc, char const *argv[])
{
	int n, mat[BUF][BUF] = {0};
	long int cnt =0;
	scanf("%d", &n);
	while(n--)
	{
		int x,y,r;
		scanf("%d %d %d", &x, &y, &r);
		for (int i = 1; i < 1001; ++i)
		{
			for (int j = 1; j < 1001; ++j)
			{
				if(((i-x)*(i-x) + (j-y)*(j-y) - r*r) <= 0)
					mat[i-1][j-1]++;
			}
		}

	}
	for (int i = 0; i < 1000; ++i)
		for (int j = 0; j < 1000; ++j)
			if(mat[i][j] > 1)
				cnt++;
	printf("%ld\n", cnt);
	return 0;
}