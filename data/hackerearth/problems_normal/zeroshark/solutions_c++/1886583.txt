#include <bits/stdc++.h>
using namespace std;

#define display(arr,s,e) for(i=s; i<=e; i++) cout<<arr[i]<<" ";
#define mset(arr,x) memset(arr,x,sizeof(arr))
#define MOD 1000000007
#define INT_MAX 9223372036854775807
#define INT_MIN -9223372036854775807

#define rep(i,s,e) for(i=s;i<=e;i++)
#define rrep(i,s,e) for(i=s;i>=e;i--)
#define endl "\n"

#define ll long long
#define mid(a,b) ((a)+((b-a)/2))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))

// Useful STL commands:
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define ii pair<int,int>
#define sii set<ii>
#define vii vector<ii>
#define all(c) c.begin(),c.end()
#define si set<int>

// Not useful STL commands:
#define vi vector<int>
#define vvi vector<vi>
#define msi multiset<int>
#define tr(type,c,it) for(type::iterator it=c.begin();it!=c.end();++it)


int gcd(int a, int b)
{
    if( (a == 0) || (b == 0) )
        return a + b;
    return gcd(b, a % b);
}

ll dp[100010][2];


//inline int scan()                           // This does not work for -ve nos. It is only fast input method for integers.
//{
//    char c = getchar_unlocked();
//    int x = 0;
//    while(c < '0' || c > '9'){
//        c = getchar_unlocked();
//    }
//    while(c >= '0' && c <= '9'){
//        x = (x<<1) + (x<<3) + c - '0';
//        c = getchar_unlocked();
//    }
//    return x;
//}


//inline ll lscan()                 // This does not work for -ve nos. It is only fast input method for long long.
//{
//    ll n=0,c=getchar_unlocked();
//    while(c<'0'||c>'9')
//    c=getchar_unlocked();
//    while(c<='9'&&c>='0')
//    {
//        n=n*10+c-'0';
//        c=getchar_unlocked();
//   }
//   return n;
//}

int main()
{

        #ifndef  ONLINE_JUDGE
            freopen("input.txt","r",stdin);
        #endif

        ios_base::sync_with_stdio(false);
        cin.tie(0);

        int  i, T, N;
        dp[0][0] = 1;
        dp[0][1] = 1;

        dp[1][0] = 1;
        dp[1][1] = 1;

        rep(i, 2, 100006)
        {
            dp[i][0] = dp[i-1][1];
            dp[i][1] =( (dp[i-1][0] + dp[i-1][1]) %MOD );
       //     cout<<dp[i][0]<<" "<<dp[i][1]<<endl;
        }

        cin>>T;
        while(T--)
        {
            cin>>N;

            ll res = 0;
            rep(i, 1, N)
            {
                if( (N-i-2)>= 1)
                {
                  //  cout<<"Y ";
                    res =( ( res + ( ( dp[i][1] * dp[N-i-2][1] ) %MOD ) ) %MOD );
                }
            }
            if(N >= 2)
                res =( ( res + dp[N-2][1] ) %MOD );
            if(N >= 3)
                res =( ( res + dp[N-2][1] ) %MOD );
            cout<<res<<endl;
        }

        return 0;
}
