#include <bits/stdc++.h>
#define MAXN 1000000
using namespace std;

int bit[1000001];
void update(int i,int val)
{
    while(i<=MAXN)
    {
        bit[i]+=val;
        i+=(i&-i);
    }
}
int query(int i)
{
    int ret=0;
    while(i>0)
    {
        ret+=bit[i];
        i-=(i&-i);
    }
    return ret;
}
int a[200000];
bool isprime(long long n)
{
	if(n<=0) return false;
	long long limit=sqrt(n);
	for(int i=2;i<=limit;++i)
	{
		if(n%i==0) return false;
	}
	return true;
}
int main()
{
    int n,b;
    long long ans=0;
    scanf("%d",&n);
    for(int i=0;i<n;++i) scanf("%d",&a[i]);
    scanf("%d",&b);
    update(1,1);
    update(a[0],-1);
    for(int i=1;i<n;++i)
    {
    	scanf("%d",&b);
    	ans+=query(b);
    	update(1,1);
    	update(a[i],-1);
    }
    if(isprime(ans)) printf("MAGIC INVERSION\n");
    else printf("SIMPLE INVERSION\n");
    return 0;
}
