#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
#include <functional>
using namespace std;

#define MP(x, y) make_pair(x, y)
#define SET(p) memset(p, -1, sizeof(p))
#define CLR(p) memset(p, 0, sizeof(p))
#define MEM(p, v) memset(p, v, sizeof(p))
#define CPY(d, s) memcpy(d, s, sizeof(s))
#define SZ(c) (int)c.size()
#define PB(x) push_back(x)
#define ff first
#define ss second
#define ll long long
#define ld long double
#define mod 1000000007
#define inf 1061109567
#define pii pair< int, int >
#define pll pair< ll, ll >
#define psi pair< string, int >
#define gc getchar_unlocked
inline void sc(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
inline void sc(ll &x)
{
    register ll c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
int main(int argc, char const *argv[])
{
    int t;
    sc(t);
    while(t--){
        int n,k;
        sc(n);sc(k);
        ll ans = 0;
        int a[n];
        for(int i=0;i<n;i++)
            sc(a[i]);
        stack <int> s;
        for(int i=0;i<n;i++){
            while(!s.empty() && a[s.top()]<=a[i]){
                int x = s.top();
                s.pop();
                int r = i-x;
                int l;
                if(!s.empty()){
                    l = x-s.top();
                }
                else
                    l = x+1;

                if(a[x]>k){
                    ans+=(l*r);
                }
            }
            s.push(i);
        }
        while(!s.empty()){
            int x = s.top();
            s.pop();
            int r = n-x;
            int l;
            if(!s.empty()){
                l = x-s.top();
            }
            else
                l = x+1;
            //cout<<l<<" "<<r<<" "<<a[x]<<endl;
            if(a[x]>k){
                ans+=(l*r);
            }
        }
        printf("%lld\n", ans);
    }
    return 0;
}