

#include <bits/stdc++.h>
#define maxm 1e7
using namespace std;
long long power(long long base, long long exponent, long long modulus)
{
    long long result = 1;
    while (exponent > 0) {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
long long mod = 1000000007;
int main()
{
    //freopen("inp1.txt", "r", stdin);
    //freopen("out1.txt", "w", stdout);
    int t;
    cin >> t;
    assert(1 <= t && t <= 10);
    for (int tt = 1; tt <= t; tt++) {
        int n;
        cin >> n;
        assert(2 <= n && n <= 16);
        vector <long long int > a(n + 1);
        for (int i = 0; i < n; i++) {
            cin >> a[i];
            assert(1 <= a[i] && a[i] <= maxm);
        }
        int p = 1 << n;
        long long ans = INT_MIN;
        for (int i = 1; i < p; i++) {
            long long mul = 1;
            long long add = 0;
            int ctr = 0;
            for (int j = 0; j < n; j++) {
                if (i&1<<j) {
                    ctr++;
                    add = (add + a[j])%mod;
                    mul = (mul * a[j])%mod;
                }
            }
            if (ctr >= 2 ) {
                long long int temp = power(add, mod - 2, mod);
                temp = (temp*mul)%mod;
                ans = max(ans, temp);
            }
        }
        cout << "Case #" << tt << ": " << ans << endl;
    }
}

