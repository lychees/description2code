#include <bits/stdc++.h>

using namespace std;

const int INF = 1e9;

int n, has;
int memo[155][155][305];

int dp(int i, int n1, int n5, int n10) {
    assert(has - n5 * 5 - n10 * 10 - 8 * i == n1);
    int &ans = memo[i][n10][n5];
    if (ans != -1) return ans;
    if (i >= n) return ans = 0;
    ans = INF;
    if (n1 >= 8) {
        ans = min(ans, dp(i + 1, n1 - 8, n5, n10) + 8);
        if (n1 >= 13) ans = min(ans, dp(i + 1, n1 - 13, n5 + 1, n10) + 13);
    }
    if (n1 >= 3 && n5 >= 1) {
        ans = min(ans, dp(i + 1, n1 - 3, n5 - 1, n10) + 4);
    }
    if (n5 >= 2) {
        ans = min(ans, dp(i + 1, n1 + 2, n5 - 2, n10) + 2);
        if (n1 >= 3) ans = min(ans, dp(i + 1, n1 - 3, n5 - 1, n10) + 5);
    }
    if (n10 >= 1) {
        ans = min(ans, dp(i + 1, n1 + 2, n5, n10 - 1) + 1);
        if (n1 >= 3) ans = min(ans, dp(i + 1, n1 - 3, n5 + 1, n10 - 1) + 4);
    }
    return ans;
}

void solve() {
    int n1, n5, n10; cin >> n >> n1 >> n5 >> n10;
    has = n1 + n5 * 5 + n10 * 10;
    memset(memo, -1, sizeof(memo));
    int ans = dp(0, n1, n5, n10);
    if (ans < INF) cout << ans << endl; else cout << -1 << endl;
}

int main() {
#ifdef _LAD_
    freopen("F.txt", "r", stdin);
#endif // _LAD_
    int nTest; cin >> nTest;
    while (nTest--) solve();
    return 0;
}
