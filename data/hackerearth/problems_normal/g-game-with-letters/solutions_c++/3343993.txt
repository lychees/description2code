#include<bits/stdc++.h>
using namespace std;
inline void inp( long long int &n )
{
    n=0; int ch = getchar(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getchar(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getchar(); }
    n = n * sign;
}
    inline void inp( int &n )
{
    n=0; int ch = getchar(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getchar(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getchar(); }
    n = n * sign;
}
string s,s1;
int mark[1001];
bool cmp(pair< int, pair<int,int> > a,pair< int, pair<int,int> > b);
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        vector< pair< int, pair<int,int> > > v;
        for(int i=0;i<=1000;i++)
        {
            mark[i]=0;
        }
        cin>>n;
        cin>>s;
        for(int i=0;i<s.size();i++)
        {
            mark[s[i]]++;
        }
        for(int i=0;i<n;i++)
            {
                cin>>s1;
                int ans=0;
                for(int j=0;j<s1.size();j++)
                {
                    ans+=mark[s1[j]];
                }
                v.push_back(make_pair(ans,make_pair(s1.size(),i+1)));
            }
        sort(v.begin(),v.end(),cmp);
        printf("%d\n",v[0].second.second);
    }
}
bool cmp(pair< int, pair<int,int> > a,pair< int, pair<int,int> > b)
{
    if(a.first==b.first)
    {
        if(a.second.first==b.second.first)
        {
            return a.second.second<b.second.second;
        }
        else
        return a.second.first<b.second.first;
    }
    return a.first>b.first;
}
