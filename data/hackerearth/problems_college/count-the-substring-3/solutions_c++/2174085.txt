// 2015-07-22
#include <bits/stdc++.h>
#include <unordered_map>
#include <array>
#include <forward_list>
#include <unordered_set>
using namespace std;


#ifndef LOCAL
//#define LOCAL
#endif

#define SET_BIT(mask, index) (mask |= (1 << index))
#define TEST_BIT(mask, index) (mask & (1 << index))
#define CLEAR_BIT(mask, index) (mask &= ~(1 << index))
#define TOGGLE_BIT(mask, index) (mask ^= (1 << index))
const int INF = 1000000000;
const double EPS = 1.0e-11;
const int NO_VALUE = -1;
using ii = pair < int, int > ;
using ll = long long;
struct sc { template<class T> inline static T next() { T n; cin >> n; return n; } };

const int MAX_LEN = 1000003;

bool letterTaken[MAX_LEN];


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w+", stdout);
#endif
    int tc = sc::next<int>();
    while (tc--) {
        string s = sc::next<string>();
        
        int x = 0, y = 0, z = 0, j = 0;
        ll result = 0;
        for (int i = 0; i < s.size(); i++) {
            x += (s[i] == 'x');
            y += (s[i] == 'y');
            z += (s[i] == 'z');
            
            while (j <= i && x > 0 && y > 0 && z > 0) {
                x -= (s[j] == 'x');
                y -= (s[j] == 'y');
                z -= (s[j] == 'z');
                j++;
            }
            result += (i - j + 1);
        }
        cout << result << "\n";
    }
    


    return 0;
}
