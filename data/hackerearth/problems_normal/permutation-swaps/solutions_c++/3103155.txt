#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <iostream>
#include <set>
#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <numeric>
#include <cmath>
#include <complex>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vi> vvi;
typedef vector<double> vd;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<pii> vii;
typedef vector<string> vs;

vi pr, r;

int getp(int v) {
  if (pr[v] == v) return v;
  return pr[v] = getp(pr[v]);
}

void join(int a, int b) {
  a = getp(a);
  b = getp(b);
  if (a == b) return;
  if (r[a] > r[b]) swap(a, b);
  pr[a] = b;
  if (r[a] == r[b]) ++r[b];
}

int main() {
  int T;
  cin >> T;
  for (int test = 1; test <= T; ++test) {
    int n, m;
    cin >> n >> m;
    r.assign(n, 0);
    pr.assign(n, 0);
    for (int i = 0; i < n; ++i) pr[i] = i;
    vi p(n), q(n);
    for (int i = 0; i < n; ++i) scanf("%d", &p[i]);
    for (int i = 0; i < n; ++i) scanf("%d", &q[i]);
    for (int i = 0; i < m; ++i) {
      int a,b;
      scanf("%d%d", &a, &b);
      --a; --b;
      join(a, b);
    }
    vvi v(n);
    for (int i = 0; i < n; ++i) v[getp(i)].push_back(i);
    bool ok = 1;
    for (int i = 0; i < n; ++i) {
      vi a, b;
      for (auto j : v[i]) {
        a.push_back(p[j]);
        b.push_back(q[j]);
      }
      sort(a.begin(), a.end());
      sort(b.begin(), b.end());
      if (a != b) {
        ok = 0;
        break;
      }
    }
    if (ok) {
      cout << "YES\n";
    } else cout << "NO\n";
  }
  return 0;
}