#include<bits/stdc++.h>
#define up(j,k,i) for(i=j;i<k;i++)
#define down(j,k,i) for(i=j;i>k;i--)
#define M 1000000007
#define pp(n) printf("%lld\n",ll(n))
#define ps(n) printf("%lld ",ll(n))
#define pd(x,y) printf("%lld %lld\n",ll(x),ll(y))
#define is(n) scanf("%lld",&n)
#define max(x,y) max(ll(x),ll(y))
#define min(x,y) min(ll(x),ll(y))
#define inf LLONG_MAX
#define id(n,m) scanf("%lld%lld",&n,&m)
#define it(n,m,k) scanf("%lld%lld%lld",&n,&m,&k)
#define ss(s) scanf("%s",s)
#define cool 0
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define pll pair<ll,ll> 
#define db cout<<"######\n"
#define null(a) memset(a,0,sizeof(a))
#define neg(a) memset(a,255,sizeof(a))
typedef long double ld;
typedef long long int ll;
using namespace std;
ll i,j,k,z,t,n,m,sum,ans,x,y,maxm=0,minm=inf;
struct node
{
bool cor[26]={};
struct node* edge[26];
};
node *temp;
node *head=new node;
void dfs(string x)
{
if(!(temp->cor[x[0]-'a']))
{ans++;
//cout<<x[0]<<endl;
(temp->cor[x[0]-'a'])=true;
node* temp2=new node;
temp->edge[x[0]-'a']=temp2;
temp=temp->edge[x[0]-'a'];
}
else
{
temp=temp->edge[x[0]-'a'];
}
if(x.size()>1)
dfs(x.substr(1));
else
return;
}
int main()
{
is(n);
while(n--)
{
string s;
cin>>s;
temp=head;
dfs(s);
}
pp(ans+1);
}
