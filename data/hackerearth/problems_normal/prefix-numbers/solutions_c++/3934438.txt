#include <bits/stdc++.h>
using namespace std;
typedef unsigned int ll;
typedef pair<ll, ll> pii;
typedef pair<ll, ll> pll;
typedef vector<ll> vii;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(ll i=0; i<(n); i++)
#define repp(i,a,b) for(ll i=a; i<=(b); i++)
#define repp2(i,b,a) for(ll i=b; i>=(a); i--)
#define fill(a,val) memset(a, (val), sizeof(a))
#define mp make_pair
#define pb push_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define io ios_base::sync_with_stdio(false);cin.tie(NULL);
#define IO(input_file_name) ifstream cin(input_file_name);ofstream cout("output.txt")
#define sc(n) scanf("%d",&n)

ll mod= 1e9 + 7, mod2=1e9+9;

ll I[252][252],temp[252][252],M[252][252],store[252][252];
void copyM(ll M1[][252],ll M2[][252],int m){
  for(int i=0;i<m;++i){
    for(int j=0;j<m;++j){
      M2[i][j]=M1[i][j];
    }
  }
}

void matmul(ll M1[][252],ll M2[][252],int m){
  for(int i=0;i<m;++i){
    for(int j=0;j<m;++j){
      temp[i][j]=0;
      for(int k=0;k<m;++k)
        temp[i][j]=(temp[i][j]+(M2[i][k]*M1[k][j]));
    }
  }
}
void setI(int m){
  for(int i=0;i<m;++i){
    for(int j=0;j<m;++j){
      if(i!=j) I[i][j]=0;
      else I[i][j]=1;
    }
  }
}
void powerM(ll M1[][252],int m,long long n){
  setI(m);
  while(n>0){
    if(n%2==0){
        matmul(M1,M1,m);
        copyM(temp,M1,m);
        n/=2;
    }else{
        matmul(M1,I,m);
        copyM(temp,I,m);
        n-=1;
    }
  }

}

int main(){
  long long n,b,k,x; 
  cin>>n;
  fill(M,0);
  
  rep(i,252) repp(j,1,9){
    if((i*10+j)%j==0){
     //cout<<i<<' '<<j<<endl;   
    M[i][(i*10+j)%252] ++;
    
    }
  }
  powerM(M,252,n);
  ll ans=0;
  rep(i,252)ans+=I[0][i];
  cout<<ans;
  //set m n
/***
 SetI sets Identity
 M is the generated matrix
 output is stored in I
****/
    return 0;
}