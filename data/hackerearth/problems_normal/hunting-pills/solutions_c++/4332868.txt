#include<bits/stdc++.h>
#define max(x,y) (x>y?x:y)
using namespace std;
typedef vector<int> vec;
vec l[100001],r[100001],s,st; 
bool vis[100001];
int mi,ar[10001];
void dfs1(int i)
{
	vis[i]=true;
	for(vec::iterator it=l[i].begin();it!=l[i].end();it++)
		if(!(vis[*it]))
			dfs1(*it);
		s.push_back(i);
}
void dfs2(int i)
{
	vis[i]=true;
	mi+=ar[i];
	vec::iterator it;
	for( it=r[i].begin();it!=r[i].end();it++)
	{
		if(!(vis[*it]))
		{
			dfs2(*it);
		}
	}
	return ;
}
int main()
{
	int n,m,i,j,t;
	scanf("%d",&t);
	while(t--)
	{
	scanf("%d %d",&n,&m);
	for(i=0;i<n;i++)
	{
	scanf("%d",&ar[i]);
	l[i].clear(),r[i].clear();
	}
	for(i=0;i<m;i++)
	{
		int p,q;
		scanf("%d %d",&p,&q);
		l[p].push_back(q);
		r[q].push_back(p);
	}
	memset(vis,false,(n)*sizeof(bool));
	s.clear();
	for(i=0;i<n;i++)
	{
		if(!(vis[i]))
		{
			dfs1(i);
		}
	}
	memset(vis,false,(n)*sizeof(bool));
	int ans=0;
	while(!(s.empty()))
	{
		int source=s.back();
		s.pop_back();
		mi=0;
		if(!(vis[source]))
		{
			dfs2(source);
			ans=max(ans,mi);
		}
	}
	printf("%d\n",ans);
	
	}
	return 0;
}


