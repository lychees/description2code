//---chinmay2------

#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;

#define MOD 1000000007

#define		scan(x)				scanf("%d", &x)
#define		scan2(x,y)			scanf("%d %d", &x, &y)
#define		print(x)			printf("%d", x)
#define		prints(x)			printf("%d ", x)
#define		printn(x)			printf("%d\n", x)

#define		scan_lli(x)			scanf("%lld", &x)
#define		scan2_lli(x,y)		scanf("%lld %lld", &x, &y)
#define		print_lli(x)		printf("%lld", x)
#define		prints_lli(x)		printf("%lld ", x)
#define		printn_lli(x)		printf("%lld\n", x)

#define		for_up(v, s, e)		for (int v=s; v<e; v++)
#define		for_down(v, s, e)	for (int v=s; v>=e; v--)

typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector< pair<int, int> > vpii;

#define pb push_back
#define mp make_pair

#define fs first
#define sc second

#define INF 1234567890

int main()
{
	int N, Q;
	scan2(N, Q);
	
	int D[N];
	for_up (i, 0, N) {
		scan(D[i]);
	}
	
	sort(D, D+N);
	
	int V = D[0];
	
	int cost[V][V];
	
	for_up (i, 0, V) {
		for_up (j, 0, V) {
			cost[i][j] = INF;
		}
		cost[i][i] = 0;
	}
	
	for_up (i, 1, N) {
		for_up (j, 0, V) {
			int u = (j+D[i]) % V;
			cost[j][u] = min(cost[j][u], (j+D[i])/V);
		}
	}
	
	bool visited[V];
    int dist[V];
    
    for_up (i, 0, V) {
        visited[i] = false;
        dist[i] = INF;
    }
    
    dist[0] = 0;
    
    int u;
    
    for_up (j, 0, V) {
        int mn = INF;
        for_up (i, 0, V) {
            if (!visited[i] && dist[i]<mn) {
                u = i;
                mn = dist[i];
            }
        }
        
        visited[u] = true;
        
        for_up (v, 0, V) {
            if (!visited[v]) {
                dist[v] = min(dist[v], dist[u]+cost[u][v]);
            }
        }
    }
    
    while (Q--) {
    	int X;
    	scan(X);
    	
    	int u = X % V;
    	
    	if (X >= 1LL*dist[u]*V+u) puts("YES");
    	else puts("NO");
    }
	
	return 0;
}