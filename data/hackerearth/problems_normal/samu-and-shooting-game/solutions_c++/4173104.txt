#include<bits/stdc++.h>
using namespace std;

const int MAXN=1e3+3;

int n,x,y,w;
double p1,p2,A[MAXN][MAXN];
// long long Not_A[MAXN],Not_B[MAXN],Not_C[MAXN];

// long long not_A(int);
// long long not_B(int);
// long long not_C(int);
double dp(int chance_done,int points_done){
  if(A[chance_done][points_done]!=-1.0)
    return A[chance_done][points_done];
  else{
    if(points_done > w){
      A[chance_done][points_done]=1.0;
      return 1.0;
    }
    if(chance_done==n)
      return(points_done>=w);
      A[chance_done][points_done]=max(p1*dp(chance_done+1,points_done+x)+(1.0-p1)*dp(chance_done+1,points_done),p2*dp(chance_done+1,points_done+y)+(1.0-p2)*dp(chance_done+1,points_done));
      return A[chance_done][points_done];
  }
}

void flush_nots(){
  for(int i=0;i<MAXN;i++)
  for(int j=0;j<MAXN;j++)
  A[i][j]=-1;
  // memset(Not_B,-1,sizeof(Not_B));
  // memset(Not_C,-1,sizeof(Not_C));
}

int main(){
  int t;
  double ans;
  cin>>t;
  std::cout << std::fixed;
    std::cout << std::setprecision(6);
  while(t--){
    flush_nots();
    cin>>x>>y>>n>>w>>p1>>p2;
    p1=p1/100;
    p2=p2/100;
    if(n*max(x,y)<w)
      ans=0.000000;
    else{
      if(n!=1)
        ans=dp(0,0)*100;
      else
        if(x>=w && y>=w)
          ans=max(p1,p2)*100;
        else if(x>=w)
          ans=p1*100;
        else if(y>=w)
          ans=p2*100;
        else
          ans=0.000000;
    }
    // for(int i=0;i<w;i++)
    // cout<<A[i]<<" ";
    cout<<ans<<endl;
  }
  return 0;
}