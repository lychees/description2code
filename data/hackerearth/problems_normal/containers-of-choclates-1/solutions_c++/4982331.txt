#include <bits/stdc++.h>
using namespace std;
#define MAX 20001
int bfs(bool visited[],vector<vector<int> > v,int i)
{
	queue<pair<int,char> > q;
	q.push(make_pair(i,'R'));
	visited[i]=true;
	//cout<<i<<endl;
	int red=0;
	int blue=0;
	red++;
	while(!q.empty())
	{		
		int temp=q.front().first;
		char c=q.front().second;
		q.pop();
		for(int j=0;j<v[temp].size();j++)
		{
			if(!visited[v[temp][j]])
			{
				//cout<<v[temp][j]<<endl;
				visited[v[temp][j]]=true;
				if(c=='R')
				{
					q.push(make_pair(v[temp][j],'B'));
					blue++;
				}
				else
				{
					q.push(make_pair(v[temp][j],'R'));
					red++;	
				}
			}
		}
	}
	return max(red,blue);
}
int main()
{
	int t;
	//cin>>t;
	scanf("%d",&t);
	int k=0;
	while(t--)
	{
		int n;
		scanf("%d",&n);
		vector<vector<int> > v(MAX);
		bool present[MAX]={false};
		for(int i=0;i<n;i++)
		{
			int a,b;
		//	cin>>a>>b;
			scanf("%d%d",&a,&b);
			v[a].push_back(b);
			v[b].push_back(a);
			present[a]=true;
		}
		bool visited[MAX]={false};
		int res=0;
		for(int i=0;i<v.size();i++)
		{
			if(present[i]&&!visited[i])
			res+=bfs(visited,v,i);
		}
		cout<<"Case "<<++k<<": "<<res<<endl;
	}
    return 0;
}
