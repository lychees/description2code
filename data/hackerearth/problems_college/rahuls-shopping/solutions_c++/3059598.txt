//Snorlax//
#include<bits/stdc++.h>

using namespace std;

typedef pair<int,int> II;
typedef vector<II> VII;
typedef vector<int> VI;
typedef vector< VI > VVI;

typedef long long int LL;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))
#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

#define endl '\n'

int sum_digs(int n)
{
    int s = 0;
    while(n!=0){
        s += n%10;
        n/=10;
    }
    return s;
}
int main()
{
    fast_io;
    int n,a;
    cin>>n;
    int ans = 0;
    VI num;
    for(int i=0;i<n;i++)
        cin>>a,num.PB(a);
    int l,b;
    cin>>l>>b;
    double f = l*b;
    for(int i=0;i<SZ(num);i++){
        double tans;
        tans = f*num[i]*sum_digs(num[i]);
        if(num[i]>=1 && num[i]<=10)
            tans=0.75*tans;
        else if(num[i]>=11 && num[i]<=20)
            tans = 0.7*tans;
        else
            tans = 0.8*tans;
        ans += tans;
        /*
        if(tans-floor(tans)>0.5)
            ans += ceil(tans);
        else
            ans += floor(tans);
        */
    }
    cout<<ans<<endl;
    return 0;
}
