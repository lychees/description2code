#include<iostream>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
#include<cstdio>
#include<cstring>

#define sd(x) scanf("%lld",&x)
#define MP make_pair
#define PB push_back
#define MOD 1000000007
#define M 40000000
#define F first
#define S second
#define ll long long
#define LL long long

using namespace std;

LL n, m;

LL vis[200001], val[200001];
vector<LL> v[200001];
LL solve(){
    LL i, ans = 0, x;
    bool va;
    for(i = 0; i < n; i++){
        vis[i] = 0;
    }
    for(i = 0;i < n; i++){
        if(vis[i] == 0){
            if(v[i].size() == 0){
                ans++;
                continue;
            }
            queue<LL> q;
            q.push(i);
            vis[i] = 1;
            val[i] = 0;
            while(!q.empty()){
                x = q.front();

                va = val[x];

                for(LL j = 0; j < v[x].size(); j++){
                    if(vis[v[x][j]] == 0){
                        vis[v[x][j]] = 1;
                        val[v[x][j]] = 1-va;
                        q.push(v[x][j]);
                    }
                    else{
                        if(val[v[x][j]] == va){
                            return -1;
                        }
                    }
                }
                q.pop();
            }
            ans ++;
        }
    }
    return ans;
}
LL power(LL x, LL y){
    if( y == 0){
        return 1;
    }
    LL ans = power(x, y/2);
    ans *= ans;
    if(ans >= MOD){
        ans %= MOD;
    }
    if(y & 1){
        ans *= x;
    }
    if(ans >= MOD){
        ans %= MOD;
    }

    return ans;
}
LL way(){
    LL i, test, x, y, ans;

            cin>>n>>m;
            for(i = 0; i < n; i++){
                v[i].clear();
            }
            for(i = 0; i < m; i++){
                sd(x);
                sd(y);
                v[x].PB(y);
                v[y].PB(x);
            }
            x = solve();
            if(x == -1){
                cout<<"NOT POSSIBLE"<<endl;
                return 0;
            }
            x --;
            if(x == n-1){
                cout<<(power(2, x)-1+MOD)%MOD<<endl;
                return 0;
            }

            cout<<power(2, x)<<endl;
    return 0;
}
int main(){
    LL i, test, x, y, ans;
    cin>>test;
    while(test--){
            way();
    }
    return 0;
}
