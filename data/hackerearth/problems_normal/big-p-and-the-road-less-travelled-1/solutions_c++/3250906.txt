#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define vtr vector
#define MOD 1000000007

#define pii pair<int, int >

#define vi vtr<int > 
#define vc vtr<char > 
#define vll vtr<ll > 
#define vd vtr<double > 

#define vvi vtr<vtr<int > >
#define vvc vtr<vtr<char > >

#define white 2
#define red 1
#define blue 0
#define gray 5
#define black 4

#define mp make_pair
#define pb push_back

#define F(i, begin, end) for(int i = begin; i < end; ++i)
#define RF(i, begin, end) for(int i = begin; i >= end; --i)
#define traverse(graph, it) for(vi::iterator it = graph.begin(); it != graph.end(); it++)

#define sc(n) scanf("%d", &n)
#define scs(n) scanf("%s", n)
#define scll(n) scanf("%lld", &n)
#define scd(n) scanf("%lf", &n)

int n;
vvi graph;
vi dp;

int f(int src) {
	if(src == n)
		return 1;
	
	if(dp[src] != -1)
		return dp[src];

	int steps = 0;
	traverse(graph[src], it) {
		steps += f(*it);
	}

	return dp[src] = steps;
}

int main() {
	sc(n);
	graph.resize(n + 1);
	dp.resize(n + 1, -1);

	int a = -1, b = -1;
	while(a != 0 && b != 0) {
		sc(a); sc(b);
		graph[a].pb(b);
	}

	int steps = 0;
	steps = f(1);
	cout << steps << endl;
	return 0;
}

