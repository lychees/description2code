#include <bits/stdc++.h>
#define LL long long
#define MOD 1000000007

using namespace std;
LL f[100009],inf[100009];

long long _pow(long long A, long long B, long long C)
{
	if(B == 0)
		return 1;
	if(B == 1)
		return A;
	long long D = _pow(A, B >> 1, C);
	D *= D;
	if(D >= C)
		D %= C;

	if(B & 1) {
		D *= A;
		if(D >= C)
			D %= C;
	}

	return D;
}

int main() {
    LL n,j,counter,i,m,a,curr;
    LL res;

	f[0] = 1;

	for(i=1;i<=100004;++i){
	    f[i] = ( f[i-1]*i ) % MOD;
	}

	for(i=100004;i>=1;i--){
	    inf[i] = (_pow(f[i],MOD-2,MOD))%MOD;
	}

    cin>>n;
    vector<LL> vect1;
	vector<LL> vect2;

    counter = 0;
	for(i=1; i<=n; i++){
        cin>>m;
	    counter+=m;
	    vect1.push_back(m);

	    vector<LL> myvector;
            for(j=0; j<m; ++j){
                cin>>a;
                myvector.push_back(a);
            }

	    sort(myvector.begin(),myvector.end());
        curr = 1;

	    for(j=1; j<myvector.size(); ++j){
            if(myvector[j]==myvector[j-1]){
	            curr = curr+1;
	        } else {
	            vect2.push_back(curr);
	            curr = 1;
	        }
	    }
	    vect2.push_back(curr);
	}

    res = f[counter];

	for(i=0; i<vect1.size(); ++i){
	    res = (res * inf[vect1[i]])%MOD;
	}

	for(i=0; i<vect2.size(); ++i){
	    res = (res * f[vect2[i]])%MOD;
	}
	cout<<res<<endl;

	return 0;
}


