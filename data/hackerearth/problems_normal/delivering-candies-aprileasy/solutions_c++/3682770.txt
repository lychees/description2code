#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define eps 1e-9
#define sqr(x) ((x)*(x))
#define SET(a,b) memset((a),(b),sizeof((a)))
#define pw(x) (1ll<<(x))
#define buli(x) __builtin_popcountll(x)
#define endl "\n"

const int MOD = 1e9+7;

typedef long long ll;
typedef vector<int> vi;
typedef map<int,int> mii;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

inline bool EQ(double a,double b) { return fabs(a - b) < 1e-9; }
inline void set_bit(int & n, int b) { n |= pw(b); }
inline void unset_bit(int & n, int b) { n &= ~pw(b); }

inline void check(ll &x) {
	if(x>=MOD)
		x%=MOD;
}
#define int long long
const int MAXN = 1e5+5;
vector< pair<int,ll> > adj[MAXN];
ll d[MAXN];
ll K[MAXN];
const int INF = 1e11+3;
#undef int
int main() {
//	freopen("TASK.in","r",stdin);	
//	freopen("TASK.out","w",stdout);
	#define int long long
	int n,m,s;
	cin>>n>>m>>s;
	for(int i=1;i<=n;i++) scanf("%lld",&K[i]),d[i]=INF;
	for(int i=1;i<=m;i++) {
		int x,y,z;
		scanf("%lld%lld%lld",&x,&y,&z);
		adj[x].pb(mp(y,z));
		adj[y].pb(mp(x,z));
	}
	priority_queue< pair<ll,int> > pq;
	pq.push(mp(0,s));
	d[s]=0;
	while(!pq.empty()) {
		ll dis=-pq.top().ff;
		int ver=pq.top().ss;
		pq.pop();
		if(d[ver]<dis) continue;
		for(int i=0;i<sz(adj[ver]);i++) {
			ll distance=adj[ver][i].ss;
			int vertex=adj[ver][i].ff;
			if(d[vertex]>d[ver]+distance) d[vertex]=distance+d[ver],pq.push(mp(-d[vertex],vertex));
		}
	}
	ll sum=0;
	ll counter=0;
	ll sumK=0;
	for(int i=1;i<=n;i++) {
		if(d[i]==INF) continue;
		else {
			counter++;
			ll temp=d[i];
			temp*=K[i];
			sum+=temp;
			sumK+=K[i];
		}
	}
	for(int i=1;i<=n;i++) {
		if(d[i]==INF) {
			printf("0 ");
			continue;
		}
		ll temp=1;
		temp*=d[i];
		temp*=(sumK-K[i]);
		ll ans=temp+sum;
		ans-=K[i]*d[i];
		printf("%lld ",ans);
	}
	printf("\n");
	return 0;
}