// Tapan Sahni
#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <iomanip>
#include <map>
#include <complex>
#include <set>

#define mod 1000000007
using namespace std;
typedef long long LL;
const int maxn = 5e4 + 10;

typedef pair <int , int> ii;
typedef pair <ii , LL> iii;

int par[maxn] , Rank[maxn] , deg[maxn];
vector <iii> q;
int find(int x) {
    if(par[x] == x) return x;
    int u = find(par[x]);
    par[x] = u;
    return u;
}

void un(int x , int y) {
    int px = find(x) , py = find(y);
    if(Rank[px] > Rank[py]) {
        par[py] = px;
    }
    else if(Rank[py] > Rank[px]) {
        par[px] = py; 
    }
    else {
        par[px] = py;
        Rank[py]++;
    }
    return;
}  
bool way(iii x , iii y) {
    if(x.second != y.second) return x.second < y.second;
    if(x.first.first != y.first.first) return x.first.first > y.first.first;
    return x.first.second > y.first.second;
} 
void refersh() {
    for(int i = 1; i < maxn; i++) Rank[i] = 0 , par[i] = i,deg[i] = 0;
    q.clear(); 
    return;
}
int main() {
    int t ;scanf("%d" , &t);
    while(t-- ){
        refersh();
        int n ,m;
        scanf("%d%d" ,&n ,&m);
        for(int i = 0; i < m; i++) {
            int x , y , c;
            scanf("%d%d%d" ,&x ,&y ,&c);
            if(x > y) swap(x , y);
            q.push_back(make_pair(ii(x , y) , c));
        }
        sort(q.begin() , q.end() , way);
        LL tcst = 0;
        for(int i = 0; i < m; i++) {
            int x = q[i].first.first , y = q[i].first.second , c = q[i].second;
            //cout << x << " " << y << endl;
            if(find(x) != find(y)) {
                un(x , y); tcst += c;
                deg[x]++;
                deg[y]++;
            } 
        }
        printf("%lld\n",tcst);
        for(int i = 1; i <= n; i++) printf("%d ",deg[i]);
        printf("\n");
    }
    return 0;
}
// NEVER QUIT