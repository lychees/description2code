#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
 
using namespace std;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))
 
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
 
const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-9;
const ld pi = ld(3.1415926535897932384626433832795);
 
inline bool in(int i, int j, int n, int m)
{
    return i >= 1 && i <= n && j >= 1 && j <= m;
}
 
inline int myrand()
{
    return (rand() ^ (rand() << 15));
}
 
const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, 1, 0, -1};
 
const int N = 55;
 
int m;

inline void gen()
{
    return;
}
 
inline bool read()
{
	if(!(cin >> m))
		return false;
    return true;
}

int n = 258;

li dp[300][11][11];

const li MOD = li(4294967143);

inline void add(li &a, const li &b)
{
	a += b;
	a %= MOD;
	return;
}

inline void calc()
{
	for(int i = 1; i <= 10; i++)
	{
		dp[1][i][i] = 1;
	}

	for(int i = 1; i < 258; i++)
	{
		for(int f = 0; f <= 10; f++)
		{
			for(int j = 0; j <= 10; j++)
			{
				li cur = dp[i][f][j];
				for(int nj = j - 1; nj <= j + 1; nj += 2)
				{
					if(nj >= 0 && nj <= 10)
					{
						add(dp[i + 1][f][nj], cur);
					}
				}
			}
		}
	}

    return;
}

inline void solve()
{
	li ans = 0;
	for(int f = 0; f <= 10; f++)
	{
		for(int l = 0; l <= 10; l++)
		{
			if(abs(l - f) == 1)
			{
				add(ans, dp[m][f][l]);
			}
		}
	}

	cout << ans << endl;
	return;
}
 
int main()
{
#ifdef _DEBUG
    assert(freopen("input.txt", "rt", stdin));
    assert(freopen("output.txt", "wt", stdout));
#endif
 
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;
 
    srand(int(time(NULL)));

	calc();
 
	int T = 1;
	assert(scanf("%d", &T) == 1);

	forn(i, T)
    {
		//cerr << "TEST == " << i << endl;
        assert(read());
        solve();
    }
 
#ifdef _DEBUG
    cerr << "TIME == " << clock() << " ms" << endl;
#endif
    return 0;
} 