#include <bits/stdc++.h>
using namespace std;
#define MAX 100009
bool check[MAX];
int total;
int dfs(vector<int> v[],int root)
{
    int m,m1=-1,m2=-1;
    check[root]=1;
    for(int i=0;i<v[root].size();i++)
    {
        if(!check[v[root][i]]){
            m = dfs(v,v[root][i]);
            if(m>=m1)
            {
                m2= m1;
                m1 = m;
            }
            else if(m>m2)
                m2=m;
        }
    }
    total = max(total , m1+m2+2);
    return (m1 + 1);
}

inline void fi(int *a)
{
 register char c=0;
 while (c<33) c=getchar_unlocked();
 *a=0;
 int tmp = 0;
 while (c>33)
 {
     if ( c == 45 ) tmp = 1;
     else *a=*a*10+c-'0';
     c=getchar_unlocked();
 }
 if ( tmp == 1 ) *a = 0-(*a);
}

int main()
{
    int n,a,b,t;
    fi(&t);
    while ( t-- ){
    	fi(&n);
        vector<int> v[n+9];
        for ( int i = 0; i < n; i++ ) v[i].clear(), check[i] = false;
        for(int i=0;i<n-1;i++){
        	fi(&a), fi(&b);
            v[a].push_back(b);
            v[b].push_back(a);
        }
        total = 0;
        dfs(v,1);

    	printf("%d\n", total+1);
    }
}
