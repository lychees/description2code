#include <bits/stdc++.h>

using namespace std;

#define ve vector
#define long long long 
ve<long> a[2];
int n, q;
void read() {
	scanf("%d%d", &n, &q);
	a[0].resize(n); a[1].resize(n);
	for (int i = 0; i < n; ++i) scanf("%lld", &a[0][i]);
	for (int i = 0; i < n; ++i) scanf("%lld", &a[1][i]);
	for (int i = 1; i < n; i += 2) swap(a[0][i], a[1][i]);
}

void preprocess() {
	partial_sum(a[0].begin(), a[0].end(), a[0].begin());
	partial_sum(a[1].begin(), a[1].end(), a[1].begin());
}

long process(int t, int l, int r) {
	int ind = 0;
	if (t != (l & 1)) ind = 1;
	return a[ind][r] - (l ? a[ind][l - 1] : 0);
}

int main(void) {
	read();
	preprocess();
	while (q--) {
		int t, l, r; scanf("%d%d%d", &t, &l, &r);
		printf("%lld\n", process(t - 1, l - 1, r - 1));
	}
}