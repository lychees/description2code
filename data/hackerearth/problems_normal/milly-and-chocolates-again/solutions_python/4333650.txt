def binsearch(ar, lo, hi, key):
	while lo <= hi:
		mid = (lo + hi) >> 1
		#print "%d .. %d .. %d" %(lo, mid, hi)
		if key <= ar[mid] and (mid == lo or ar[mid-1] < key):
			break
		elif key > ar[mid]:	
			lo = mid + 1
		else:
			hi = mid - 1
	return mid

N = int(raw_input())
chocs = map(int, raw_input().split())

for i in xrange(1, N):
	chocs[i] = chocs[i] + chocs[i-1]
#print 'chocs =', chocs

Q = int(raw_input())
for _ in xrange(Q):
	q = int(raw_input())
	ans = binsearch(chocs, 0, N-1, q)
	print ans+1
	