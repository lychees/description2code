#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

int daysee[] = {31,28,31,30,31,30,31,31,30,31,30,31};
int dp[33][14][10009];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    int prev = 0;
    REP(years,1,10000)
    {
        REP(months,1,12)
        {
            int q = daysee[months - 1];
            if(months == 2 && years % 4 == 0)
                q += 1;
            REP(days,1,q)
            {
                int check = 0;
                if(days + 1 == months && months + 1 == years % 100 )
                    check = 1;
                dp[days][months][years] = prev + check;
                prev = dp[days][months][years];
            }
        }
    }
    int t;s(t);
    while(t--)
    {
        int ini = 0;
        string sta;
        cin >> sta;
        int days,months,years;
        days = (sta[0] - '0') * 10 + sta[1] - '0';
        months = (sta[3] - '0') * 10 + sta[4] - '0';
        years = (sta[6] - '0') * 1000 + (sta[7] - '0') * (100) + (sta[8] - '0') * (10) + sta[9] - '0';
    //    cout << days << " " << months << " " << years<< endl;
        if(days + 1 == months && months + 1 == years % 100 )
            ini -= 1;
        ini += dp[days][months][years];
        cin >> sta;
        days = (sta[0] - '0') * 10 + sta[1] - '0';
        months = (sta[3] - '0') * 10 + sta[4] - '0';
        years = (sta[6] - '0') * 1000 + (sta[7] - '0') * (100) + (sta[8] - '0') * (10) + sta[9] - '0';
    //    cout << days << " " << months << " " << years << endl;
        int fin = dp[days][months][years];
     //   cout << fin << " " << ini << endl;
        if(fin - ini < 0)
            printf("0\n");
        else
            printf("%d\n",fin - ini);
    }
    return 0;
}
