#include <iostream>
#include <string.h>
#define MAX 100001
using namespace std;
int arr[MAX],size[MAX];
int k,n;
bool ans[MAX];
int root(int);
void unionfind(int,int);
int main(){
	int x,y,temp;
	memset(ans,false,sizeof(ans));
	cin>>n>>k;
	temp=n;
	for(int i=1;i<=n;i++){
		arr[i]=i;
		size[i]=1;
	}
	for(int i=0;i<k;i++){
		cin>>x>>y;
		if(root(x)!=root(y))
			temp--;
		unionfind(x,y);
	}
	/*for(int i=1;i<=n;i++){
		ans[root(i)]=true;
	}
	x=0;
	for(int i=1;i<=n;i++){
		if(ans[i]==true)
			x++;
	}*/
	cout<<temp;
	
	
}

void unionfind(int a,int b){
	int roota=root(a),rootb=root(b);
	if(size[roota]>size[rootb]){
		arr[rootb]=arr[roota];
		size[roota]+=size[rootb];
	}
	else{
		arr[roota]=arr[rootb];
		size[rootb]+=size[roota];
	}
}
int root(int x){
	while(arr[x]!=x){
		arr[x]=arr[arr[x]];
		x=arr[x];
	}
	return x;
}