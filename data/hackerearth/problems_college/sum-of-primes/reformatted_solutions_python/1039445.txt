# Sum of prime number
# import time
import sys
# import os
import math

PRIME_NUMS = [2]


def check_prime(n):
    limit = int(math.sqrt(n))
    idx = 0
    while (PRIME_NUMS[idx] <= limit):
        if n % PRIME_NUMS[idx] == 0:
            return (False)
        idx += 1
    return (True)


def main():
    m_list = []
    n_list = []
    no_case = int(sys.stdin.readline())
    for _ in range(no_case):
        m, n = sys.stdin.readline().split()
        m_list.append(int(m) - 1)
        n_list.append(int(n))

    maxLimit = max(n_list)
    # maxLimit = 1000000
    prime_sets = set()
    prime_sets.add(2)
    prime_sum = [0, 0, 2]
    flage = [1, 0] * (int(maxLimit / 2) + 1)
    for idx in range(2, maxLimit, 2):
        if flage[idx] == 1:
            PRIME_NUMS.append(idx + 1)
            prime_sets.add(idx + 1)
            prime_sum.append(prime_sum[-1] + idx + 1)
            prime_sum.append(prime_sum[-2] + idx + 1)
            for idx_loop in range(idx, maxLimit, idx+1):
                flage[idx_loop] = 0
        else:
            prime_sum.append(prime_sum[-1])
            prime_sum.append(prime_sum[-1])

    result = ""
    for idx in range(no_case):
        current_sum = prime_sum[n_list[idx]] - prime_sum[m_list[idx]]
        if current_sum <= maxLimit:
            if current_sum in prime_sets:
                result += "YES\n"
            else:
                result += "NO\n"
        else:
            if check_prime(current_sum):
                result += "YES\n"
            else:
                result += "NO\n"

    sys.stdout.write(result)


# start_time = time.time()
main()
# print("--- ", time.time() - start_time, " seconds ---")
