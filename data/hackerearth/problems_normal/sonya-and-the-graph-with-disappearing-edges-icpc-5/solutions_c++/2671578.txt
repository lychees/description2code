#include <bits/stdc++.h>

using namespace std;

#define fr(a,b,c) for(int (a) = (b); (a) < (c); ++(a))
#define rp(a,b) fr(a,0,b)
#define fre(a,b) for(int a = adj[b]; ~a; a = ant[a])
#define cl(a,b) memset((a), (b), sizeof(a))
#define sc(a) scanf("%d", &a)
#define sc2(a,b) scanf("%d%d", &a, &b)
#define sc3(a,b,c) scanf("%d%d%d", &a, &b, &c)
#define scs(s) scanf("%s", s)
#define pri(x) printf("%d\n", x)

#define iter(a) __typeof((a).begin())
#define fore(a,b) for(iter(b) a = (b).begin(); a != (b).end(); ++a)

#define st first
#define nd second
#define mp make_pair
#define pb push_back

#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define _ << ", " <<

const int oo = 0x3f3f3f3f;

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector< vi > vii;

#define N 100009
#define M 300009

int an, adj[N], to[M], len[M], ant[M];

void add(int a, int b) {
	to[an] = b; len[an] = oo; ant[an] = adj[a]; adj[a] = an++;
	swap(a, b);
	to[an] = b; len[an] = oo; ant[an] = adj[a]; adj[a] = an++;
}

int n, m, k;
int dist[N];
bool mark[N];

int djik() {
	priority_queue<pii> fila;
	cl(mark, 0);
	cl(dist, 0x3f);
	fila.push(pii(0, 0));
	dist[0] = 0;
	
	while (!fila.empty()) {
		pii aux = fila.top(); fila.pop(); 
		int v = aux.nd, d = -aux.st;
		if (mark[v]) continue;
		mark[v] = 1;
		
		if (v == n-1) return d;
		fre(it, v) if (len[it] > d) {
			int w = to[it];
			if (dist[w] > d+1) {
				dist[w] = d+1;
				fila.push(pii(-d-1, w));
			}
		}
	}
	return -1;
}

int main() {
	while (sc3(n, m, k) == 3) {
		an = 0;
		cl(adj, -1);
		rp(i, m) {
			int a, b;
			sc2(a, b);
			add(a-1, b-1);
		}
		rp(i, k) {
			int t, x;
			sc2(t, x);
			x--;
			len[x+x] = len[x+x+1] = t;
		}
		
		pri(djik());
	}
	return 0;
}




































