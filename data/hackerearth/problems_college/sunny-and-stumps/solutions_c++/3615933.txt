#include<stdio.h>
#include<stdlib.h>
int GCD(int a, int b){
	if (b == 0)
		return a;
	else
		return GCD(b, a%b);
}
int compare ( const void *pa, const void *pb ) {
    const int *a = *(const int **)pa;
    const int *b = *(const int **)pb;
    if(a[0] == b[0]){
        if(a[1]==b[1])
           return a[2]-b[2];
        else
           return a[1] - b[1];
    }
    else
        return a[0] - b[0];
}
int main(){
	int t, n, a, b, c, i, j, z, gcd, temp1, temp2;
	scanf("%d", &t);
	while (t--){
        int **array,**store,z=0;
		scanf("%d", &n);
		array=(int **)malloc(n*sizeof(int *));
		for(i=0;i<n;++i)
		    array[i]=(int *)malloc(3*sizeof(int));
		for (i = 0; i < n; ++i){
			scanf("%d %d %d", &a, &b, &c);
			int gcd1 = GCD(a, b);
			int gcd2 = GCD(b, c);
			int gcd3 = GCD(gcd1, gcd2);
			int a1 = a / gcd3; 
			int b1 = b / gcd3;
			int c1 = c / gcd3;
			array[i][0]=a1;
			array[i][1]=b1;
			array[i][2]=c1;
		}
		qsort(array, n, sizeof array[0], compare);
		store=(int **)malloc(n*sizeof(int *));
		for(i=0;i<n;++i)
		    store[i]=(int *)malloc(3*sizeof(int));
        gcd=GCD(array[0][0],array[0][1]);
        temp1=array[0][0]/gcd;
        temp2=array[0][1]/gcd;
        if(temp1<0){
           temp1=temp1*-1;
           temp2=temp2*-1;
        }
        store[z][0]=temp1;
        store[z][1]=temp2;
        store[z][2]=array[0][2];
        ++z;
		for(i=1;i<n;++i){
            if(array[i][0]==array[i-1][0]&&array[i][1]==array[i-1][1]&&array[i][2]==array[i-1][2])
               continue;
            else{
               gcd=GCD(array[i][0],array[i][1]);
               temp1=array[i][0]/gcd;
               temp2=array[i][1]/gcd;
               if(temp1<0){
                  temp1=temp1*-1;
                  temp2=temp2*-1;
               }
               store[z][0]=temp1;
               store[z][1]=temp2;
               store[z][2]=array[i][2];
               ++z;
            }
	    }
	    qsort(store, z, sizeof store[0], compare);
	    int clength=1,rlength=1;
    for(i=1;i<z;++i){
        //printf("%d\n",clength);
        if((store[i][0]==store[i-1][0])&&(store[i][1]==store[i-1][1]))
           ++clength;
        else{
           if(clength>rlength) rlength=clength;
           clength=1;
        }
    }
    if(clength>rlength) rlength=clength;
    printf("%d\n",rlength);
    free(array);
    free(store);
  }
	return 0;
} 
 