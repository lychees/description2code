key_map = {
	'_': 0,
	'0': 0,
	'.': 1,
	',': 1,
	'?': 1,
	'!': 1,
	'1': 1,
	'a': 2,
	'b': 2,
	'c': 2,
	'2': 2,
	'd': 3,
	'e': 3,
	'f': 3,
	'3': 3,
	'g': 4,
	'h': 4,
	'i': 4,
	'4': 4,
	'j': 5,
	'k': 5,
	'l': 5,
	'5': 5,
	'm': 6,
	'n': 6,
	'o': 6,
	'6': 6,
	'p': 7,
	'q': 7,
	'r': 7,
	's': 7,
	'7': 7,
	't': 8,
	'u': 8,
	'v': 8,
	'8': 8,
	'w': 9,
	'x': 9,
	'y': 9,
	'z': 9,
	'9': 9,
}
def dataStructure():
	num = 1
	char = 'a'
	data = {
		'.': 1,
		',': 2,
		'?': 3,
		'!': 4,
		'_': 1,
		'0': 2,
		'1': 5,
		'2': 4,
		'3': 4,
		'4': 4,
		'5': 4,
		'6': 4,
		'7': 5,
		'8': 4,
		'9': 5,
		}

	for i in range(26):
		if char == 's' or char == 'z':
			data[char] = 4
			num = 1
		else:
			data[char] = num
			num += 1
		if num == 4:
			num = 1
		num = num % 4
		char = chr(ord(char) + 1)
	return data

ds = dataStructure()

cases = int(raw_input())

for case in range(cases):
	counter = 0
	string = raw_input()
	curr = 1
	for i in string:
		if curr != key_map[i]:
			counter += 1
		counter += ds[i]
		curr = key_map[i]
	print counter