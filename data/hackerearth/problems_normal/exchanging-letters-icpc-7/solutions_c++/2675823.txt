/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 1000000007
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif

int freq[2005],lft,rght,n;
LLD dp[2005][2005];
LLD solve(int index,int l)
{
	if(index==n+1)
	{
		if(l==lft)
			return 1;
		return 0;
	}
	LLD &ret=dp[index][l];
	if(ret!=-1)
		return ret;
	ret=0;
	if(freq[index])
	{
		ret+=solve(index+1,l);
		ret+=solve(index+1,l+1);
	}
	else
		ret+=solve(index+1,l);
	return ret%MOD;
}
int main()
{
	int i,j,k,T,sum=0;
	cin>>n>>k>>T;
	REP(i,k)
	{
		int x;
		si(x);
		sum+=x;
		freq[x]++;
	}
	if(sum>T)
	{
		int diff=sum-T+k;
		if(diff%2!=0)
		{
			cout<<0<<endl;
			return 0;
		}
		lft=diff/2;
		rght=k-lft;
	}
	else 
	{
		int diff=T-sum+k;
		if(diff%2!=0)
		{
			cout<<0<<endl;
			return 0;
		}
		rght=diff/2;
		lft=k-rght;
	}
	REP(i,2005)
		REP(j,2005)
			dp[i][j]=-1;
	cout<<solve(0,0)<<endl;

	return 0;
}
