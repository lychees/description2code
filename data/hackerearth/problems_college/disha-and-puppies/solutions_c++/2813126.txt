

    #include<bits/stdc++.h>
    #define ll long long
    #define sc(n) scanf("%d",&n)
    #define pr(n) printf("%d",n)
    #define gc getchar_unlocked
    int read_int() {
      char c = gc();
      while(c<'0' || c>'9') c = gc();
      int ret = 0;
      while(c>='0' && c<='9') {
        ret = 10 * ret + c - 48;
        c = gc();
      }
      return ret;
    }
     
    using namespace std;
    bool dp[2][1000006]={{0}};
    int arr[1003];     
    int main()
    {
    //	freopen("in.txt","r",stdin);
             int n,k;
             ll s=0;
            int t,i,j;
          t=read_int();   
    	 while(t--)
         {
         	  s=0;
             n=read_int();   
             k=read_int();   
             for(i=1;i<=n;i++){
                arr[i]=read_int();   
             	s+=arr[i];
             }
              memset(dp,0,sizeof(dp[0][0])*2*s);
                dp[0][0]=1;
    		  for(i=1;i<=n;i++)
    		  {
    		  	for(j=0;j<=s;j++)
    		  	{
    		  		 if(!j)
    		  		  dp[1][0]=1;
    		  		else
    		  		{
    		  			if(arr[i]<=j)
    		  			{
    					   dp[1][j]=dp[0][j]|dp[0][j-arr[i]];
    		  		    }
    		            else dp[1][j]=dp[0][j]; 		
    		  	    }
    		     }
    			 for(int i=0;i<=s;i++)
    			 {
    			 	dp[0][i]=dp[1][i];
    			 }   
             }
    	     if(dp[1][k])
              printf("Yes\n");
              else
              {
              	int ind1=0,ind2=s;
                 printf("No\n");
             
                for( i=k-1;i>=0;i--)
                {
                	if(dp[1][i]) 
                     {
                	    ind1=i;
    				    break;
                	}
                	
                }
               for( i=k+1;i<=s ;i++)
               {
                	if(dp[1][i]) 
                     {
                	    ind2=i;
    				    break;
                	}
               }
               if(abs(k-ind1)<abs(k-ind2))
                    printf("%d\n",ind1);
                else 
                printf("%d\n",ind2);
    		  }
        }
        return 0;
    }

