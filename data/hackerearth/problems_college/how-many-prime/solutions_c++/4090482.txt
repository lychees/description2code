
#include <bits/stdc++.h>
using namespace std;
 
void SieveOfEratosthenes(int n)
{
    int a[100000],i=0,p;
    map<int,int> m;
    bool prime[n+1];
    memset(prime, true, sizeof(prime));
 
    for (p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
 
    
    for (int p=2; p<=n; p++)
       if (prime[p])
         { a[i]=p; i++;}
         
         for(p=0;p<i;p++)
          { if(m.find(a[p])!=m.end())
             {printf("%d %d\n",m[a[p]],a[p]);
              return ;
             }
          	
          	m[n-a[p]]=a[p];
         
         
          }
          
          printf("-1 -1\n");
          
          
          
}
 
// Driver Program to test above function
int main()
{
    int t,n ;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d",&n);
    SieveOfEratosthenes(n);
    }
    return 0;
}