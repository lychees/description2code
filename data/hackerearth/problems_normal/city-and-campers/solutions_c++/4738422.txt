#include<bits/stdc++.h>
using namespace std;
int i,n,max1,min1,siz[100001],parent[100001];
map<int,int> mp;
void initialize()
{
    for(i=0;i<100001;i++)
    {
        parent[i]=i;
        siz[i]=1;
    }
    mp[1]=n;
}
int find1(int z)
{
    while(parent[z]!=z)
        z=parent[parent[z]];
    return z;
}
void union1(int xparent,int yparent)
{
    int x=find1(xparent);
    int y=find1(yparent);
    if(x!=y)
    {
       if(siz[x]>siz[y])
       {
           mp[siz[x]]--;
           mp[siz[y]]--;
           parent[y]=x;
           int z=siz[x];
           siz[x]=siz[x]+siz[y];
           siz[y]=z+siz[y];
           mp[siz[x]]++;
           if(siz[x]>max1)
            max1=siz[x];
       }
       else if(siz[x]<siz[y])
       {
            mp[siz[x]]--;
           mp[siz[y]]--;
           parent[x]=y;
            int z=siz[x];
           siz[x]=siz[x]+siz[y];
           siz[y]=z+siz[y];
           mp[siz[x]]++;
           if(siz[x]>max1)
            max1=siz[x];
       }
       else
       {
            mp[siz[x]]--;
           mp[siz[y]]--;
           parent[y]=x;
           int z=siz[x];
           siz[x]=siz[x]+siz[y];
           siz[y]=z+siz[y];
           mp[siz[x]]++;
           if(siz[x]>max1)
            max1=siz[x];
       }
    }
}
int main()
{
    int x,y,q;
    cin>>n>>q;
      mp.clear();
     initialize();

  max1=1;
    for(i=0;i<q;i++)
    {
        cin>>x>>y;
        union1(x,y);
        map<int,int>::iterator it;
        for(it=mp.begin();it!=mp.end();it++)
        {
          //  cout<<it->first<<" "<<it->second<<endl;
            if(it->second!=0)
            {
                min1=it->first;
                    break;
            }
        }
        cout<<max1-min1<<endl;
    }
    return 0;
}
