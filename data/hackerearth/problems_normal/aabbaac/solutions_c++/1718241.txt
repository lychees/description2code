#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<unordered_map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y-1);(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define peat(X,Y) for (;(X) < (Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> using vv=vector<vector<T>>;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}

char solve(vector<string> &v,ll n,ll x,ll len){
  //cout<<n<<","<<x<<","<<len<<endl;
  ll l2=len-v[n-1].size();
  if(l2<=x)
    return v[n-1][x-l2];
  l2/=2;
  if(x<l2)
    return solve(v,n-1,x,l2);
  return solve(v,n-1,2*l2-1-x,l2);
}

int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int i,j,k;
  int T;
  cin>>T;
  while(T--){
    ll n,q,x,sum=0;
    cin>>n>>q;
    vector<string> v(n);
    rep(i,n){
      cin>>v[i];
      sum*=2;
      sum+=v[i].size();
    }
    rep(i,q){
      cin>>x;
      //cout<<x<<endl;
      cout<<solve(v,n,x,sum);
    }
    cout<<endl;
  }
  return 0;
}
