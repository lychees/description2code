#include <bits/stdc++.h>
using namespace std;
int n;int arr[20];
int P[20];int dp[20][20][1<<12];
int Recur(int i,int mask,int j,int p)
{
	if(mask==(1<<n)-1)
	return 0;
	else if(dp[i][j][mask]!=-1)
	return dp[i][j][mask];
	else
	{
		int temp=INT_MAX;
		for(int k=0;k<n;k++)
		{
			if(!(mask&(1<<k)))
			{
				temp=min(temp,((arr[k]^arr[i]^arr[j])*P[p])+Recur(k,mask|(1<<k),i,p+1));
			}
		}
		dp[i][j][mask]=temp;
		return temp;
	}
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
	   memset(dp,-1,sizeof(dp));
	   for(int i=0;i<n;i++)
	   scanf("%d",&arr[i]);
	   for(int i=0;i<n;i++)
	   scanf("%d",&P[i]);
	   int ans=INT_MAX;
	   if(n<=2)
	   cout<<"0"<<endl;
	   else
	   {
	   for(int i=0;i<n;i++)
	   {
		   	for(int j=0;j<n;j++)
		   	{
		   		if(i!=j)
		   		{
		   			for(int k=0;k<n;k++)
		   			{
		   			if(k!=i&&k!=j)
		   			{
		   			ans=min(ans,((arr[k]^arr[j]^arr[i])*P[2])+Recur(k,1<<i|1<<j|1<<k,j,3));
		   			//cout<<ans<<endl;
		   			}
		   			}
		   		}
		   	}
	   }
	   cout<<ans<<endl;
	   }
	}
}
