#include<bits/stdc++.h>
using namespace std;
#define ll long long
vector<int> adj[100005];
int cur[100005],req[100005],dp[100005][2];
void dfs(int i,int par)
{
    int j,a,b;
    if(adj[i].size()==1&&adj[i][0]==par)
    {
        if(cur[i]==req[i])
            dp[i][0]=0,dp[i][1]=1;
        else
            dp[i][0]=1,dp[i][1]=0;
        return;
    }
    for(j=0;j<adj[i].size();j++)
        if(adj[i][j]!=par)
            dfs(adj[i][j],i);
    if(cur[i]==req[i])
        a=0,b=1;
    else
        a=1,b=0;
    for(j=0;j<adj[i].size();j++)
        if(adj[i][j]!=par)
        {
            a+=dp[adj[i][j]][0];
            b+=dp[adj[i][j]][1];
        }
    b++;
    dp[i][0]=min(a,b);
    if(cur[i]==req[i])
        a=1,b=0;
    else
        a=0,b=1;
    for(j=0;j<adj[i].size();j++)
        if(adj[i][j]!=par)
        {
            a+=dp[adj[i][j]][1];
            b+=dp[adj[i][j]][0];
        }
    b++;
    dp[i][1]=min(a,b);
}
int main()
{
    int n,i,u,v;
    cin>>n;
    for(i=0;i<n-1;i++)
    {
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for(i=1;i<=n;i++)
        cin>>cur[i];
    for(i=1;i<=n;i++)
        cin>>req[i];
    dfs(1,0);
    cout<<dp[1][0];
    return 0;
}
