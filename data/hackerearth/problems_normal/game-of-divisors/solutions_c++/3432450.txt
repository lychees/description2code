/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>
using namespace std;

namespace stuff {
typedef long long ll;
const vector<int> VALS = { 2, 3, 4, 5, 7, 8, 9, 11, 13, 17, 19, 23, 25, 29 };

void solve(int test_num) {
  int N;
  cin >> N;
  const int P = VALS.size();
  vector<int> divs(N + 1);
  for (int x = 1; x <= N; ++x) {
    for (int i = 0; i < P; ++i) {
      if (x % VALS[i] == 0) {
        divs[x] |= 1 << i;
      }
    }
  }
  vector<bool> dp(1 << P, false);
  for (int mask = (1 << P) - 1; mask >= 0; --mask) {
    for (int x = 1; x <= N; ++x) {
      if ((divs[x] & mask) == divs[x] && !dp[mask]) {
        dp[mask ^ divs[x]] = true;
        break;
      }
    }
  }
  if (dp[0]) {
    cout << "1\n";
  } else {
    cout << "2\n";
  }
}

void solve() {
#ifdef AZN
//make_case();
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
//  scanf("%d", &T);
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << fixed << setprecision(3) << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC) << endl;
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
