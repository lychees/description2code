#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;
typedef pair<ll, ll> pll;
typedef vector<ll> vii;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(ll i=0; i<(n); i++)
#define repp(i,a,b) for(ll i=a; i<=(b); i++)
#define repp2(i,b,a) for(ll i=b; i>=(a); i--)
#define fill(a,val) memset(a, (val), sizeof(a))
#define mp make_pair
#define pb push_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define io ios_base::sync_with_stdio(false);cin.tie(NULL);
#define IO(input_file_name) ifstream cin(input_file_name);ofstream cout("output.txt")
#define sc(n) scanf("%Ld",&n)

ll mod= 1e9 + 7, mod1=1e9+9;
ll base=100005;
ll po[1000],po1[1000],lp[1000][27];

string s,s1;

void lps(ll len, char c){
    string s2="";
    rep(i,len)s2+=s[i];
    s2+=c;
    //cout<<s2<<endl;
    ll ma=0;
    pii p={0,0},p1={0,0};
    rep(i,len){
        p={(p.X+s2[i]*po[i]%mod)%mod,(p.Y+s2[i]*po1[i]%mod1)%mod1};
        p1={(p1.X*base%mod+s2[len-i])%mod,(p1.Y*base%mod1+s2[len-i])%mod1};
        if(p1==p)ma=max(ma,i+1);
    }
    
    lp[len][c-'a']=ma;
    
}

ll n,m,k,dp[205][205][505];

ll solve(ll in, ll len, ll co){
    
    if(in==m)return 0;
    if(dp[in][len][co]!=-1)return dp[in][len][co];
    ll an=0;
    rep(i,26){
        ll c=min(abs(s1[in]-i-'a'),26-abs(s1[in]-i-'a'));
        if('a'+i==s[len] && co-c>=0){
            if(len==n-1)an=max(an,1+solve(in+1,lp[len][i],co-c));
            else an=max(an,solve(in+1,len+1,co-c));
        }
        else if(co-c>=0)an=max(an,solve(in+1,lp[len][i],co-c));
    }
    return dp[in][len][co]=an;
}

int main()
{   io;
   
    po[0]=po1[0]=1;
    repp(i,1,300)po[i]=po[i-1]*base%mod,po1[i]=po1[i-1]*base%mod1;
    
    cin>>n>>m>>k;
    
    cin>>s>>s1;
    ll len=s.size();
    repp(i,1,len)rep(j,26)lps(i,'a'+j);
    //repp(i,1,len){rep(j,26)cout<<lp[i][j]<<' ';cout<<endl;}
    rep(i,205)rep(j,205)rep(k,505)dp[i][j][k]=-1;
    cout<<solve(0,0,k);
    
    return 0;
}