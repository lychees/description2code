#include <bits/stdc++.h>

using namespace std;

const int N = 25, M = 105;

int coins[N], n;
int chests[M], gems[M], m;
int masks[1 << N], masks_sz;
int not_coprime[M];

int main() {
  int nt; scanf("%d", &nt);
  while (nt --> 0) {
    int k; scanf("%d %d %d", &n, &m, &k);
    for (int i = 0; i < n; ++i) scanf("%d", &coins[i]);
    for (int i = 0; i < m; ++i) scanf("%d", &chests[i]);
    for (int i = 0; i < m; ++i) scanf("%d", &gems[i]);

    for (int i = 0; i < m; ++i) {
      not_coprime[i] = 0;
      for (int j = 0; j < n; ++j) {
        if (__gcd(chests[i], coins[j]) != 1) {
          not_coprime[i] |= 1 << j;
        }
      }
    }

    masks_sz = 0;
    for (int i = 0, lim = 1 << n; i < lim; ++i) {
      if (__builtin_popcount(i) == k) {
        masks[masks_sz++] = i;
      }
    }

    int answer = 0;
    for (int mask_idx = 0; mask_idx < masks_sz; ++mask_idx) {
      int mask = masks[mask_idx];
      int now = 0;

      for (int i = 0; i < m; ++i) {
        bool can_open = not_coprime[i] & mask;
        if (can_open) now += gems[i];
      }

      answer = max(answer, now);
    }

    printf("%d\n", answer);
  }
  return 0;
}