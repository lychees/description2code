#include<iostream>
#include<vector>
#include<string.h>

using namespace std;
int arr[10000],pre[10000],dp[100000];
vector<int > mvect;
bool primes[100000];

void SieveOfEratosthenes(int n){

    memset(primes,1,sizeof primes);
    for(int i=2;i*i<=n;i++){

        for(int j=i*i;j<=n;j+=i)primes[j]=0;
    }
    for(int i=2;i<=n;i++)if(primes[i])mvect.push_back(i);
    }

int main(){
int n;
cin>>n;
for(int i=1;i<=n;i++){cin>>arr[i];
pre[i]=pre[i-1]+arr[i];}
SieveOfEratosthenes(n);
for(int i=2;i<=n;i++){
        //cout<<dp[i-1]<<endl;
    dp[i]=dp[i-1];
    for(int j=0;j<mvect.size()&&mvect[j]<=i;j++){
        if(i==mvect[j])dp[i]=pre[i];
        else{
                int pos=i-mvect[j]-1;
            dp[i]=max(dp[i],dp[pos]+pre[i]-pre[pos+1]);
        }
    }
}
cout<<dp[n];
}
