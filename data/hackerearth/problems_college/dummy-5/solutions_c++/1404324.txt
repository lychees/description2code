#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define FL(i,a,b) for(ll i=a;i<b;i++)
#define FOR(i,n) for(ll i=0;i<n;i++)
#define SORTF(x) sort(x.begin(),x.end(),func);
#define SORT(x) sort(x.begin(),x.end())
#define pb(x) push_back(x)
#define SET(v, val) memset(v, val, sizeof(v)) ;
#define RSORT(v) { SORT(v) ; REVERSE(v) ; }
#define ALL(v) v.begin(),v.end()
#define REVERSE(v) { reverse(ALL(v)) ; }
#define UNIQUE(v) unique((v).begin(), (v).end())
#define RUNIQUE(v) { SORT(v) ; (v).resize(UNIQUE(v) - (v).begin()) ; }
#define fill(x,n) memset(x,n,sizeof(x))
#define S(n) scanf("%lld",&n)

ll modulo(ll a,ll b) {
	ll c = 1e9 + 7;
    long long x=1,y=a;
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c;
        b /= 2;
    }
    return x%c;
}
struct node {
	ll a,b,c;
};

vector<node> v;
node pla;
ll n;

ll solve(ll curr, ll a, ll b,ll c) {
	if(a == pla.a && b == pla.b && c == pla.c) {
		return 1;
	}
	if(curr >= n) {
		return 0;
	}
	if(solve(curr + 1, a + v[curr].a, b + v[curr].b , c + v[curr].c) == 1) {
		return 1;
	}
	if(solve(curr + 1, a , b , c) == 1) {
		return 1;
	}
	return 0;
} 

int main() {
	ll t;
	S(t);
	ll j = 1;
	while(t--) {
		S(pla.a);
		S(pla.b);
		S(pla.c);
		S(n);
		ll i;
		v.clear();
		for(i = 0;i < n;i++) {
			node temp;
			S(temp.a);
			S(temp.b);
			S(temp.c);
			v.pb(temp);
		}
		cout << "Case #" << j << ": "; 
		j++;
		if(solve(0, 0, 0 ,0) == 1) {
			cout << "yes\n";
		}else {
			cout << "no\n";
		}
	}
}