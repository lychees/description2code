#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define sz(a) int((a).size())
#define all(a)  a.begin(), a.end()
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;
#define present(c,x) ((c).find(x) != (c).end())
const double eps = 1e-8;
#define EQ(a,b) (fabs((a)-(b))<eps)
inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 1e6+10;
const ll inf = 1e18;

ll power(ll a,ll n){
	if(n==0){
		return 1;
	}
	ll b = power(a,n/2);
	b = b*b%mod;
	if(n%2) b= b*a%mod;
	return b;
}

set <int> B;
int A[N];


int main(){
	FILL(A,-1);
	int n,k,m;
	scanf("%d %d %d",&n,&k,&m);
	REP(i,m){
		int u;scanf("%d",&u);
		B.insert(u);
	}
	int in=2,t=1;
	A[1]=k;
	printf("1 ");
	while(t<n){
		if(present(B,in) || A[in]>=0){
			in++;continue;
		}
		printf("%d ",in);
		REPP(i,1,N){
			if((1ll)*in*i>=N)	break;
			if(A[i]>0){
				ll x = in*i;
				if(A[x]==-1)	A[x]=A[i]-1;
				else A[x] = max(A[x],A[i]-1);
			}
		}
		in++;t++;
	}
	printf("\n");
	return 0;
}

