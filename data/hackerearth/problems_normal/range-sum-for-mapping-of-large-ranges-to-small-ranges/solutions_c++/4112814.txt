#include <bits/stdc++.h>
using namespace std;
long long int Count = 0;
long long int mod = 1000000007;
bool visited[100005]={0};
vector<vector<int> > V(100005);
void dfs(int node)
{
	if(visited[node])
		return;
	visited[node]= true;
	//cout<<node<<" ";
	int answer = 0;
	for(int i=0;i<V[node].size();i++)
	{
		dfs(V[node][i]);
	}
	Count++;
	//return answer;
}
int main()
{
	int test;
	cin>>test;
	while(test--)
	{
		int N,K;
		cin>>N>>K;
		for(int i=0;i<K;i++)
		{
			int x,y;
			cin>>x>>y;
			V[x].push_back(y);
			V[y].push_back(x);
		}
		memset(visited,0,sizeof(visited));
		long long int answer = 1;
		for(int i=1;i<=N;i++)
		{
			if(!visited[i])
			{
				Count = 0;
				dfs(i);
				long long int val = (Count*(Count-1))/2;
				val = val%mod;
				if(Count!=1)
					answer = (answer * val)%mod;
				visited[i] = true;
			}
		}
		cout<<answer<<endl;
		for(int i=0;i<100005;i++)
			V[i].clear();
	}
 
	return 0;
}