#pragma comment(linker, "/STACK:1024000000,1024000000") 
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <assert.h>
#include <cmath>
#define x first 
#define y second 
#define pb push_back 
#define mp make_pair 
#define vi vector<int> 
#define pii pair<int,int> 
#define ll long long 
#define ull unsigned long long 
#define inf 1000000007 
#define mod 1000000007 
#define all(x) x.begin(),x.end() 
#define N 100010
#define pi acos(-1.)
#define DBG(x) cerr<<#x<<"="<<x<<"\n"; 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++) 
using namespace std;

int h,w,n,m;
int dir[][2]={-1,-1,-1,1,1,-1,1,1};
int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=1LL*ans*a%mod;
        b>>=1;a=1LL*a*a%mod;
    }
    return ans;
}
bool in(int x,int y){return x>0&&x<=n&&y>0&&y<=m;}
int main()
{
    //clock_t start=clock();
    int T,i,j,k,ca=0;
    int inv3=pow(3,mod-2);
    scanf("%d%d%d%d",&n,&m,&h,&w);
    ll s=1LL*n*m%mod;
    ll ans=s*(s-1)%mod;
    //DBG(ans)
    ll res=0;
    if(n>w&&m>h)res+=4LL*(n-w)*(m-h)%mod;
    if(n>h&&m>w)res+=4LL*(n-h)*(m-w)%mod;
    //DBG(res)
    ans-=res;
    if(n>m)swap(n,m);
    ll n2=1LL*n*n%mod;
    res=(n*(n2-1)*2LL%mod)*inv3%mod;
    ans-=res*2;
    res=(m-n-1)*(n2-n)%mod;
    ans-=res*2;
    ans%=mod;
    if(ans<0)ans+=mod;
    printf("%lld\n",ans);
    /*
    ans=0;
    for(i=1;i<=n;i++)
        for(j=1;j<=m;j++){
            for(int l=1;l<=n;l++)
                for(int r=1;r<=m;r++){
                    if(l==i&&r==j)continue;
                    int ok=1;
                    for(k=0;k<4;k++){
                        int x=i+dir[k][0]*w,y=j+dir[k][1]*h;
                        if(in(x,y)&&x==l&&y==r){ok=0;break;}
                    }
                    if(!ok)continue;
                    for(k=0;k<4;k++){
                        int x=i+dir[k][0]*h,y=j+dir[k][1]*w;
                        if(in(x,y)&&x==l&&y==r){ok=0;break;}
                    }
                    if(ok==0)continue;
                    if(l+r==i+j||i-j==l-r)ok=0;
                    if(ok)ans++;
                }
        }
        DBG(ans)*/
    return 0;
}