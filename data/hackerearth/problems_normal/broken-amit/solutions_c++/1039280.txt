#include <iostream>
using namespace std;
int part(int a[],int m,int n)
{
	int p=a[m],i=m,j=n+1;
	while(true)
	{
	while(a[++i]<p) if(i>=n) break;
	while(a[--j]>p) if(j<=m) break;
	if(i>=j) break;
		else swap(a[i],a[j]);
	}
	if(j==m) return j;
	swap(a[j],a[m]);
	return j;
}
void sort(int a[],int m,int n)
{
	int q;
	if(n>m)
	{
	q=part(a,m,n);
	sort(a,m,q-1);
	sort(a,q+1,n);
	}
}

int main() {
	int n;
	cin>>n;
	int lv[n],dv[n];
	for(int i=0; i<n;i++)
	{
		cin>>lv[i];
	}
	for(int i=0;i<n;i++)
	{
		cin>>dv[i];
	}
	for(int i=0;i<n;i++)
	{
		dv[i]*=i;
	}
	sort(dv,0,n-1);
	long long int sum=0;
	for(int i=0;i<n;i++)
	{
		sum+=lv[i];
	}
	int y=sum;
	int x=0;
	for(int i=0;i<n;i++) x+=dv[i];
	for(int i=n-1;i>0;i--)
	{
		x=x-dv[i];
		y=y-x;
		sum+=y;		
	}
	cout<<sum;
}




