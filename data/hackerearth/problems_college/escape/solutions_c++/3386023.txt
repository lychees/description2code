       #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <deque>
    #include <list>
    #include <string>
    #include <bits/stdc++.h>
     
    typedef long long int int64;
    typedef long int int32;
    typedef unsigned long long int uint64;
    typedef unsigned long int uint32;
    using namespace std;
     
    int numEscapeRoutes(int i, int j, int map[][21], int freedom){
    	if(i < 0 || i > freedom || j < 0 || j > freedom) return 0;
    	if(i == freedom && j == freedom) return 1;
    	if(map[i][j] == 1) return 0;
    	
    	int numRoutes = 0;
    	map[i][j] = 1;
    	numRoutes += numEscapeRoutes(i + 1, j, map, freedom);
    	numRoutes += numEscapeRoutes(i - 1, j, map, freedom);
    	numRoutes += numEscapeRoutes(i, j + 1, map, freedom);
    	numRoutes += numEscapeRoutes(i, j - 1, map, freedom);
    	map[i][j] = 0;
    	return numRoutes;
    };
     
    int main()
    {
    	ios_base::sync_with_stdio(false);
        int t, n, a, b, c, d;
        int map[21][21];
        cin >> t;
        while(t--){
        	cin >> n;
        	for(int i = 0; i < n; i++){
        		for(int j = 0; j < n; j++){
        			cin >> map[i][j];
        		}
        	}
        	if(map[0][0] == 1 && map[n-1][n-1] == 1){
        		cout << "0\n";
        		continue;
        	}
        	else map[0][0] = 0;
        	
        	cout << numEscapeRoutes(0,0,map, n-1) << endl;
        }
        return 0;
    }