#include<bits/stdc++.h>
#define M 1005
using namespace std;
bool visited[M];
vector <int> adj[M];
long long a[M];
long long m=10001;
int sum=0;
void init(int nodes)
{
 for(int i=1;i<=nodes;i++)
        visited[i]=false;
}
void dfs(int s){
	stack <int> st;
	
	st.push(s);
	visited[s]=true;
	sum++;
	while(!st.empty()){
		int v=st.top();
		st.pop();
		for (int i=0; i<adj[v].size(); i++){
			if (visited[adj[v][i]]==false){
				st.push(adj[v][i]);
			//	cout<<adj[v][i]<<" ";
				sum++;
				visited[adj[v][i]]=true;
			}
		}
	}
//	cout<<sum<<endl;
   m=m>sum?sum:m;

}
int main()
{
    int x, y,t, i,nodes, edges;
     
      
        
    	cin >> nodes; 
    	cin >> edges;  
    for( i = 0;i < edges;++i)
    {
            cin >> x >> y;
        adj[x].push_back(y);
       //adj[y].push_back(x);
    }
    for(i = 1;i<=nodes;i++)
          cin>>a[i];
  
    for(i = 1;i<=nodes;i++)
      {
         	    sum=0;
         	    init(nodes);
      	   // cout<<endl;
      	    dfs(i);
      	    
      	}
      
      cout<<m<<endl;
    
}
