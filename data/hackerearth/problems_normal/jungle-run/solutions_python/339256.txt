from Queue import *

def solve(si,sj):
	global a,v,n
	q=Queue()
	q.put((si,sj))
	v[si][sj]=1
	
	while not q.empty():
		val=q.get()
		v[val[0]][val[1]]=1
		for x in xrange(-1,2):
			for y in xrange(-1,2):
				if (x==0 and y == 0) or (x==1 and y==1) or (x==-1 and y==-1) or (x==-1 and y==1) or (x==1 and y==-1):
					continue
				i=val[0]+x
				j=val[1]+y
				if i<0 or i >= n or j < 0 or j >= n or d[i][j] == -1:
					continue
				d[i][j]=min(d[i][j],d[val[0]][val[1]]+1)
				if v[i][j] == 0:
					q.put((i,j))
					
				
				
n=int(raw_input().rstrip())
v=[[0 for x in xrange(30)] for x in xrange(30)]
d=[[0 for x in xrange(30)] for x in xrange(30)]
a=[]
infi = 2**30		
for x in xrange(n):
		a.append([x for x in raw_input().rstrip().split()])

for i in xrange(n):
	for j in xrange(n):
		if a[i][j] == 'S':
			si=i
			sj=j
		elif a[i][j] == 'E':
			ei=i
			ej=j
			d[i][j] = infi
		elif a[i][j] == 'T':
			d[i][j] = -1
		else:
			d[i][j] = infi

			
solve(si,sj)
print d[ei][ej]
