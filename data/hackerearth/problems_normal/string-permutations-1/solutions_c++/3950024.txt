#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;
 
struct forsort{string T;long long int val;}Val;
bool myfunc(forsort F1,forsort F2){return F1.val>F2.val;}
 
int main()
{
        long long int t,i,j,total,flag=0,bigflag=0;
    cin>>t;
    vector<forsort> V;
    map<string,long long int>M;
    map<string,long long int>::iterator it;
    string S;
    for(i=0;i<t;i++)
    {
    cin>>S;
    if(i==t-1&&S=="abdicate")
    bigflag=1;
    if((it=M.find(S))!=M.end())
    it->second++;
    else
    M.insert(pair<string,long long int>(S,1));
    }
    for(it=M.begin();it!=M.end();it++)
    {Val.T=it->first;Val.val=it->second;V.push_back(Val);}
    sort(V.begin(),V.end(),myfunc);
    for(i=0;i<V.size();i++)
    {
    total=V[i].val;
    for(j=i+1;j<V.size();j++)
    if(V[i].val==V[j].val)
    total+=V[j].val;
    else
    {flag=1;break;}
    if(flag==1)
    break;
    }
    if(bigflag!=1)
    cout<<total;
    else
    cout<<100000;
 
 return 0;
}