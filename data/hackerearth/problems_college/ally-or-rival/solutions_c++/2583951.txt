
#include <bits/stdc++.h>
#include<iostream>
#include<cstdio>
#define gc getchar_unlocked

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
#define pii pair <int ,int >
using namespace std;

pair <int ,int > allies[1000001];
pair <int ,int > enim[1000001];

pii findd ( int i) {

   //if(j == 1) {
     if( allies[i].first == i) {
        return allies[i];
     }
     pii x = findd(allies[i].first);
    allies[i] = make_pair(x.first , (allies[i].second + x.second )%2);
    return allies[i];
}

void uu (int x , int y ,int j) {

    //if(j == 1) {
    pii xset = findd(x);
    pii yset = findd(y);

    if( j == 0) {
        allies[xset.first] = make_pair(yset.first, (xset.second + yset.second )%2);
    }
    else {
        allies[xset.first] = make_pair(yset.first, 1 - ((xset.second + yset.second )%2));
    }
    //allies[xset.first] = make_pair(yset.first, xset.);
}

int main()
{
    int n,t;
    scanf("%d",&n);
    scanf("%d",&t);
    for(int i = 0; i <= n ;i++) {
            allies[i] = make_pair(i , 0);
    }
    while (t--) {
        int q,u,v;
        scanf("%d",&q);
        scanf("%d",&u);
        scanf("%d",&v);
        if(q == 1) {
            pii x,y;
            x = findd(u);
            y = findd(v);
            if(x.first == y.first && (x.second + y.second )%2 == 0) {
                printf("YES\n");
            }
            else {
                 printf("NO\n");
            }
        }
        if (q == 2) {
            pii x,y;
            x = findd(u);
            y = findd(v);
            if(x.first == y.first && (x.second + y.second )%2 == 1) {
                printf("YES\n");
            }
            else {
               printf("NO\n");
            }

        }
        if(q == 3){
            pii xset = findd(u);
            pii yset = findd(v);
            if(xset.first == yset.first && (xset.second + yset.second )%2 != 0) {
                printf("-1\n");
            }
            else
                uu(u,v,0);
        }
        if(q == 4) {
             pii xset = findd(u);
            pii yset = findd(v);
            //cout << xset.first << " " <<  yset.first << " " << (xset.second + yset.second ) << endl;
            if(xset.first == yset.first && (xset.second + yset.second )%2 == 0) {
                printf("-1\n");
            }
            else
                uu(u,v,1);
        }
    }
    return 0;
}