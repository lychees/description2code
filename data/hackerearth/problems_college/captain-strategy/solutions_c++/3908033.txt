#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<vector>
#include<list>
#include<cmath>
#include<map>
#include<queue>
#include<stack>
#include<algorithm>
#include<set>

using namespace std;

typedef long long ll;

#define F first
#define S second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc(t) scanf("%d",&t)
#define G getchar_unlocked
#define P putchar_unlocked
#define For(i,x)    for(i=1;i<=x;i++)
const ll K=1000000007;
//#define MAX 32
const int N=1005;

template<class T,class U> inline T max_(T x,U y){return (x>y?x:y);}
template<class T,class U> inline T min_(T x,U y){return (x<y?x:y);}
template<class T> inline T sqr(T x,T y){return (x-y)*(x-y);}
#define min(x,y) (x<y?x:y)

inline ll inp()
{
    ll x=0;
    char c,sign=1;
    while(((c=G())<'0'||c>'9')&&(c!='-'))
        ;
    if(c=='-')  sign=-1,c=G();
    while(c>='0'&&c<='9')
        x=(x<<1)+(x<<3)+c-'0',c=G();
    return sign*x;
}

inline ll power(ll n,ll p)
{
    ll x=1;
    
    while(p){
        if(p%2)    x=(x*n);
        if(p/=2)    n=(n*n);
    }
    
    return x;
}

ll gcd(ll a,ll b)
{
    if(a<b)
        a=a^b,b=a^b,a=a^b;
    
    ll x;
    
    while(a%b)
        x=a%b,a=b,b=x;
    
    return b;
}

ll a[100005];
vector <ll> v[100005];


ll dfs(ll n)
{
    ll ans=a[n-1];
    
    for(int i=0;i<v[n].size();i++)
        ans=ans+dfs(v[n][i]);
    
    return ans;
}

int main()
{
    ll n,q,i,j,ans;
    
    scanf("%lld%lld",&n,&q);
    
    for(i=0;i<n;i++)
        scanf("%lld",a+i);
    
    for(int k=0;k<n-1;k++){
        scanf("%lld %lld",&i,&j);
        v[i].pb(j);
    }
    
    while(q--){
        
        while((i=G())!='Q'&&i!='U');
        
        if(i=='Q'){
            scanf("%lld",&n);
            
            printf("%lld\n",dfs(n));
        }
        else if(i=='U'){
            scanf("%lld %lld",&i,&j);
            a[i-1]=j;
        }
    }
    
    return 0;
}
