#include <iostream>
#include<utility>
#include<map>
#include<algorithm>

using namespace std;

map< pair<int,long long>, double> dp;
pair< pair<long long, long long>, long long> ar[100];
int n;

double func(int ind, long long tym) {
	
	if (ind == n)
	return 0.0;
	
	if (dp.find(make_pair(ind,tym)) != dp.end()) {
		return dp[make_pair(ind,tym)];
	}
	
	double a,b,c;
	
	long long i,j,k;
	a = 0.0;
	
	if (tym <= ar[ind].first.first) {
		a = max(a, ar[ind].second/100.0 + func(ind + 1, ar[ind].first.second));
	}
	
	a = max(a, func(ind+ 1, tym));
	
	dp.insert(make_pair(make_pair(ind,tym), a));
	return a;
	
}

int main()
{
    long long i,j,k,l,m,t;
    
    cin >> t;
    
    while(t--) {
    	cin >> n;
    	
    	for(i=0;i<n;i++) {
    		cin >> k >> l >> m;
    		ar[i] = make_pair(make_pair(k,l),m);
    	}
    	
    	sort(ar,ar+n);
    	
    	double ans = func(0,0);
    	
    	printf("%.2lf\n",ans);
    	dp.clear();
    }
    
    return 0;
}
