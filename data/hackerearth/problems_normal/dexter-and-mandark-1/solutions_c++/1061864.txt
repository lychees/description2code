#include <iostream>

using namespace std;

#define MOD 1000000007L

static long long dp[1005][1005];

int M;

long long F(int x, int y) {
    if (y < M * (x - y)) {
       return (dp[x][y] = 0);
    }

    if (dp[x][y] != -1) {
       return dp[x][y];
    }

    if (x == y) {
       return (dp[x][y] = 1);
    }

    long long res = (F(x - 1, y) + F(x - 1, y - 1)) % MOD;
    return (dp[x][y] = res);
}

int main() {
    int T, N;
    
    cin >> T;
    while (T--) {
          
          cin >> N >> M;
          for (int i = 0; i <= N; ++i) {
          for (int j = 0; j <= N; ++j) {
              dp[i][j] = -1; }}
          long long res = 0;
          int win = N / 2;
          if (N % 2 == 0) {
          	win++;
          }
          for (int i = N; i >= win; --i) {
              res = (res + F(N, i)) % MOD;
          }
          cout << res << "\n";
    }
    return 0;
}
