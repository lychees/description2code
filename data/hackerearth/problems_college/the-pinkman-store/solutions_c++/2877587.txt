#include <iostream>
#include <string>
#include <queue>
#include <algorithm>
using namespace std;

int A[10004];
int B[10004];
queue< int > Q[2];

int main()
{
	//ios_base::sync_with_stdio(0);
	//cin.tie(0);
    int test;
    int N, T, M;
    int ti;
    string Side;
    cin>>test;
    
    
    //po
    while ( test-- )
    {
        cin>>N>>T>>M;
        for (int i=0; i<M; i++)
        {
            cin >> ti >> Side;
            A[ i ] = ti;
            if ( Side == "lab" ) Q[0].push( i );
            else Q[1].push( i );
        }
        int time = 0;
        int side = 0;
        while ( !Q[0].empty() || !Q[1].empty() )
        {
			int next;
            if(Q[0].empty())
				next = A[Q[1].front()];
			else if(Q[1].empty())
				next = A[Q[0].front()];
			else
                next=min(A[Q[0].front()], A[Q[1].front()] );
              
            time = max(time,next);
            int cnt = 0;
            while ( !Q[side].empty() && A[Q[side].front()]<=time && cnt<N )
            {
                B[ Q[side].front() ] = time + T;
                cnt++;
                Q[side].pop();
            }
            time += T; 
            if(side==1)
				side=0;
			else
				side=1;  
        }
        
        
        //;l
        for (int i=0; i<M; i++) cout << B[i] << endl;
        if (test) cout << endl;
    }
    
    
}

