#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long LL;

const int N = 200005;
const int mod = 1000000007;

LL F[N], IF[N];
vector<int > v;

LL _pow(LL a, LL b) {
  if(!b) return 1;
  if(b == 1) return a;
  if(b == 2) return a * a % mod;
  if(b & 1) {
    return a * _pow(a,b-1) % mod;
  }
  return _pow(_pow(a,b/2),2);
}

void pre() {
  F[0] = 1;
  for(int i = 1; i < N; i++) {
    F[i] = F[i-1] * i % mod;
  }

  IF[N-1] = _pow(F[N-1], mod-2);
  for(int i = N-2; i >= 0; i--) {
    IF[i] = IF[i+1] * (i+1) % mod;
  }
}

LL nCr(int n, int r) {
  if(n < r) return 0;
  return (F[n] * IF[r] % mod) * IF[n-r] % mod;
}

int main() {
  int n;
  pre();
  scanf("%d",&n);

  LL ans = 1;
  int cnt = 1;
  for(int i = 0; i < n; i++) {
    int m;
    scanf("%d",&m);
    v.clear();
    for(int j = 0; j < m; j++) {
      int x;
      scanf("%d",&x);
      v.push_back(x);
    }
    sort(v.begin(), v.end());
    int occ = 1;
    for(int j = 1; j < m; j++) {
      if(v[j] == v[j-1]) occ++;
      else occ = 1;
      ans *= occ;
      ans %= mod;
    }
    if(i) {
      ans *= nCr(cnt + m - 1, cnt - 1);
      ans %= mod;
    }
    cnt += m;
  }

  printf("%lld\n",ans);

  return 0;
}