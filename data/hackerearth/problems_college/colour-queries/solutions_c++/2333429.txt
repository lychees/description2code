
#include<bits/stdc++.h>
using namespace std;
#define sz(a) int((a).size()) 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define pb push_back
#define mp make_pair
#define MOD 1000000007
#define MAX 105
typedef long long LL;
typedef vector < int > vi;
typedef vector < vi > vvi;
typedef pair < int , int > pi;

int n,m ;
int a[MAX][MAX];
int visited[MAX][MAX];
int tmp;
int dx[4] = {-1,0,1,0};
int dy[4] = {0,1,0,-1};

int fun1(int x,  int y , int d){

	visited[x][y] = 1;
	queue< pair<int,int> > Q;
	Q.push(make_pair(x,y));
	int res=1;
	while(!Q.empty()){
		pair<int,int> p = Q.front();
		int  i = p.first ; int j = p.second ;
		Q.pop();
		
		for(int ii=0;ii<4;ii++){
			if((i+dx[ii]>=0 && i+dx[ii]<n) && (j+dy[ii]>=0 && j+dy[ii]<m) && (visited[i+dx[ii]][j+dy[ii]] == 0 ) && ((int)abs(a[i][j] - a[i+dx[ii]][j+dy[ii]])<=d) ){
				Q.push(make_pair(i+dx[ii], j+dy[ii]));
				visited[i+dx[ii]][j+dy[ii]] = 1;
				res++;
			}
		}
	}
	return res ;
}
int main(){

	cin>>n>>m>>tmp;
	int i,j;
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			cin>>a[i][j];
		}
	}

	int x , y ,d;
	while(tmp--){
		memset(visited,0,sizeof(visited));
		cin>>x>>y>>d;
		x--;y--;
		int res = fun1(x , y, d);
		cout<<res<<endl;
	}
	return 0;
}
