#include <cstdio>
#include <iostream>
using namespace std;
typedef long long LLD;
int dr[] = {-1, -1, 0, 0, 1, 1};
int dc[] = {0, 1, -1, 1, -1, 0};
int startR, startC;
int c;
void dfs(int I, int J, int n)
{
  if(n == 0)
  {
    if(startR == I && startC == J) c ++;
    return;
  }
  for(int i = 0; i < 6; i ++)
  {
    dfs(I+dr[i], J+dc[i], n-1);
  }
}
LLD a[30];
int main()
{
  LLD N;
  int t;
  a[0] = 1, a[1] = 0, a[2] = 6;
  for(int n = 0; n < 19; n ++)
  {
    a[n+3] = (-1*((108*n+72+36*n*n)*a[n]+(24*n*n+96*n+96)*a[n+1]+(n*n+5*n+6)*a[n+2]))/(-6*n-9-n*n);
  }
  cin >> t;
  while(t--)
  {
  cin >> N;
  cout << a[N] << endl;
  }
  startR = 400;
  startC = 400;
  /*
  for(int i = 2; i <= 6; i ++)
  {
    c = 0;
    dfs(400, 400, i);
    cout << c <<endl;
  }
  */
  return 0;
}
