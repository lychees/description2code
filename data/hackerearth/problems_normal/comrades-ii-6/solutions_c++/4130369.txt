#include <bits/stdc++.h>
using namespace std;

int eval(vector< vector<int> > &graph, long long &handshakes, long long &bumps, int root, int n = 0) {
	if(graph[root].size() == 0) {
		handshakes += n;
		return 1;
	}
	long long child = 0;
	for(int i = 0; i < graph[root].size(); i++) {
		int x = eval(graph, handshakes, bumps, graph[root][i], n+1);
		bumps += child * x;
		child += x;
	}
	handshakes += n;
	return child + 1;
}

int main()
{
	int t = 1; 
	cin >> t;
	while(t--) {
		int n; cin >> n;
		vector<int> parent(n+1,0);
		int root;
		vector< vector<int> > graph(n+1); 
		
		for(int i = 1; i <= n; i++) {
			cin >> parent[i];
			if(parent[i] == 0)
				root = i;
			else {
				graph[parent[i]].push_back(i);
			}
		}
		
		long long handshakes = 0, bumps = 0;
		eval(graph, handshakes, bumps, root);
		cout << handshakes << " " << bumps << endl;
	}
    return 0;
}
