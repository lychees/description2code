
#include<stdio.h>
#include<stdlib.h>
#include<iostream>
#include<vector>
#include<algorithm>

using namespace std ;


typedef long long LL ;

vector< LL > v ;
#define MAXN 50002


LL inp[MAXN] ;
int parent[MAXN] ;
LL prefix[MAXN] ;
int n ;
int read_inp()
{
  scanf("%d",&n) ;
  for(int i=1;i<=n;i++)
  {
    scanf("%d",&inp[i]) ;
    if(i==1)
        prefix[i]=inp[i] ;
    else
        prefix[i]=prefix[i-1]+inp[i] ;
  }

}





int creat_domin()
{
    parent[n]=n ;
    int curr=inp[n] ;
    v.push_back(n) ;
    for(int i=n-1;i>0;i--)
    {
        if(curr<=inp[i])
        {
            v.push_back(i) ;
            curr=inp[i] ;
             parent[v.size()-1]=i ;
            //paren[i]
        }
        else
        {
            parent[v.size()-1]=i ;
        }
    }
    reverse(v.begin(),v.end()) ;
}
LL dp[MAXN] ;

int logic()
{
    int len=v.size() ;
    for(int i=0;i<len;i++)
    {
        if(i>0)
            dp[v[i]]=dp[v[i]-1] ;
            for(int j=-1;j<i;j++)
            {

                if(j==-1)
                {
                    dp[v[i]]=max(dp[v[i]],inp[v[i]]*(v[i]-1)-prefix[v[i]-1]) ;
                }
                else
                {
                     dp[v[i]]=max(dp[v[i]],dp[v[j]]+ inp[v[i]]*(v[i]-1-v[j])-(prefix[v[i]-1]-prefix[v[j]]));
                }


            }
    }
}


int init1()
{
    for(int i=1;i<=n;i++)
    {

        dp[i]=0;
        prefix[i]=0 ;
        parent[i]=0 ;
    }
}



int main()
{
    int test ;
    scanf("%d",&test) ;
    while(test--)
    {
        read_inp() ;
        creat_domin() ;
        logic() ;
        LL  res=0 ;
        for(int i=0;i<v.size();i++)
        {
            res=max(res,dp[v[i]]) ;

        }
        cout<<res<<endl ;
       // cout<<dp[v.size()-1]<<endl ;
        //for(int i=0;i<v.size();i++)
          //  cout<<v[i]<<endl ;
          //cout<<dp[v[0]]<<endl ;
        v.clear() ;
        init1() ;
        res=0;
    }
}

