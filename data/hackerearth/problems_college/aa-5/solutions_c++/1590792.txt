#include <bits/stdc++.h>   
using namespace std;
   
const int MAXR = 5000;   
   
int N, R, i, sol;   
int a1, b1, a2, b2;
char color[2];   
struct rect {   
    int x1, y1, x2, y2;   
    bool white;   
} ls[MAXR + 1];   
   
void paste( int x1, int y1, int x2, int y2, int id ) {   
    for ( ; id <= R; id++ )   
        if ( x1 < ls[id].x2 && y1 < ls[id].y2 &&   
             x2 > ls[id].x1 && y2 > ls[id].y1 ) {   
            if ( x1 < ls[id].x1 ) { paste( x1, y1, ls[id].x1, y2, id + 1 ); x1 = ls[id].x1; }   
            if ( x2 > ls[id].x2 ) { paste( ls[id].x2, y1, x2, y2, id + 1 ); x2 = ls[id].x2; }   
            if ( y1 < ls[id].y1 ) paste( x1, y1, x2, ls[id].y1, id + 1 );   
            if ( y2 > ls[id].y2 ) paste( x1, ls[id].y2, x2, y2, id + 1 );   
            return ;   
        }   
    sol += ( x2 - x1 ) * ( y2 - y1 );   
}   
   
int main() 
{      
    scanf( "%d %d", &N, &R );   
    ls[0] = ( rect ){ 0, 0, N, N, 1 /* white */ };   
    for ( i = 1; i <= R; i++ ) {   
        scanf( "%d %d %d %d %s", &a1, &b1, &a2, &b2, color);   
        if ( a1 > a2 ) swap( a1, a2 );   
        if ( b1 > b2 ) swap( b1, b2 );   
        a1--; b1--;   
        ls[i] = ( rect ){ a1, b1, a2, b2, color[0] == 'w' };   
    }   
   
    for ( i = R; i >= 0; i-- ) {   
        rect r = ls[i];   
        if ( r.white )   
            paste( r.x1, r.y1, r.x2, r.y2, i + 1 );   
    }   
   
    printf( "%d\n", sol );   
   
    return 0;   
}   

//