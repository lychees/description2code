#include <bits/stdc++.h>

typedef long long int li;

#define Fi(i, st, ft) for(i = st;i <= ft; ++i)
#define Fd(i, st, ft) for(i = st;i >= ft; --i)
#define pb(a, b) a.push_back(b)
#define mod 1000000007
#define MAXN 1500000
#define MX 1450000
#define inf 1000000000000000000ll
const int maxBufSize = (10000000);

using namespace std;

li t , n , q;
li C[2005][2005];
pair<li , li> p[2005];

bool comparison(const pair<li , li> &p1 , const pair<li , li> &p2)
{
	if(p1.first < p2.first) {
		return true;
	} else if(p1.first == p2.first) {
		return (p1.second < p2.second);
	}
	return false;
}

void binomialCoeff()
{
    li i, j , k;
    k = 2000;
    // Caculate value of Binomial Coefficient in bottom up manner
    for (i = 0; i <= 2001; i++)
    {
        for (j = 0; j <= min(i, k); j++)
        {
            if (j == 0 || j == i)
                C[i][j] = 1;
            else
                C[i][j] = (C[i-1][j-1] + C[i-1][j])%mod;
        }
    }
}

int main()
{
	li i , j , a , b , c , d , x1 , y1 , x2 , y2 , ans;
	scanf("%lld" , &t);
	binomialCoeff();
	while(t--) {
		scanf("%lld %lld" , &n , &q);
		Fi(i , 1 , q)  {
			scanf("%lld %lld" , &p[i].first , &p[i].second);
		}
		ans = 1;
		sort(&p[1] , &p[q+1] , comparison);
		x1 = 0 , y1 = 0;
		x2 = n-1 , y2 = n-1;
		Fi(i , 1 , q) {
			x2 = p[i].first , y2 = p[i].second;
			ans = (ans*C[(x2-x1)+(y2-y1)][(x2-x1)])%mod;
			x1 = x2 , y1 = y2;
		}
		x2 = n-1 , y2 = n-1;
		ans = (ans*C[(x2-x1)+(y2-y1)][(x2-x1)])%mod;
		printf("%lld\n" , ans);
	}
	return 0;
}