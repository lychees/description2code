#include <iostream>
using namespace std;

long long dataArray[100005];
int length=0;
int newLength=0;
void swap(int posOne,int posTwo)
{
	 long long temp=dataArray[posOne]^dataArray[posTwo];
	 dataArray[posOne]=temp^dataArray[posOne];
	 dataArray[posTwo]=temp^dataArray[posTwo];
}

void insertValue(int data)
{
	newLength++;
	length++;
	dataArray[length]=data;
	int pos=length;
	while(pos>1 && dataArray[pos/2]<dataArray[pos])
	{
		swap(pos/2,pos);
		pos/=2;
	}
}

void heapfy(int pos,int length)
{
	int left=pos*2;
	int right=pos*2+1;
	int largest=pos;
	if(left<=length && dataArray[largest]<dataArray[left])
	{
		largest=left;
	}
	if(right<=length && dataArray[largest]<dataArray[right])
	{
		largest=right;
	}
	if(largest!=pos)
	{
		swap(pos,largest);
		heapfy(largest,length);
	}
}

long long extractMax()
{
	if(length==0)
	{
		return -1;
	}
	else
	{
		long long result=dataArray[1];
		swap(1,length);
		length--;
		heapfy(1,length);
		return result;
	}
}

long long getResult()
{
	long long first=dataArray[1];
	long long second=dataArray[2];
	long long third=dataArray[3];
	int pos=4;
	for(int i=4;i<=5;i++)
	{
		if(i<=length)
		{
			if(dataArray[i]>third)
			{
				third=dataArray[i];
				pos=i;
			}
		}
	}
	
	for(int i=6;i<=7;i++)
	{
		if(i<=length)
		{
			if(dataArray[i]>second)
			{
				third=dataArray[i];
				pos=i;
			}
		}
	}
	
			second=dataArray[pos/2];
	// cout<<"first is "<<first<<" "<<"second is "<<second<<" "<<"third is "<<third<<endl;
	long long result=first*second;
	result*=third;
	return result;
}

void buildHeap()
{
	for(int i=length/2;i>=1;i--)
	{
		heapfy(i,length);
	}
}

int main()
{
    int num;
    cin>>num;
    for(int i=0;i<num;i++)
    {
    	newLength=length;
    	// buildHeap();
    	int data;
    	cin>>data;
    	insertValue(data);
    	long long result=1;
    	if(length<3)
    	{
    	  	
    	  cout<<-1<<endl;
    	}
    	else
    	{ 
    		long long first=extractMax();
    		long long second=extractMax();
    	    long long third=extractMax();
    		result=first*second*third;
    		insertValue(first);
    		insertValue(second);
    		insertValue(third);
    		cout<<result<<endl;
    	}
    }
	return 0;
}