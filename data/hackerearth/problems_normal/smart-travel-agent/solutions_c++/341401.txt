#include<stdio.h>
#include<vector>
#include<iostream>
#include<limits.h>
#include<algorithm>
#define M 100
#define NIL -1
using namespace std;

int s,d,i,cou=0;
int visited[M],pred[M]={NIL};
vector< pair<int,int> > v[M];
vector< pair<int,int> > q;
int a[M],maxi=INT_MIN;

void storepath(int x,int y)
{
//for(i=0;i<M;i++)
//a[i]=0;
int idx=0;
while(y!=x)
{
a[idx]=y;
idx++;
y=pred[y];
}
a[idx]=x;
cou=idx;

}


void printpath(int x,int y)
{
if(x==y)
printf("%d",x);
else
 {
  printpath(x,pred[y]);
  printf(" %d",y);
 }
}

void DFS(int current,int des,int pw)
{
visited[current]=1;
int t=pw;
vector< pair<int,int> > ::iterator it;
for(it=v[current].begin();it!=v[current].end();it++)
	{       pw=t;
 		int next=it->first;
		if(next==des)
		{
			 if(it->second<pw)
				pw=it->second;
                         pred[des]=current;
			 //printf("%d ",pred[des]);
                         //printpath(s,des);
                         if(pw>maxi)
			 {
			   maxi=pw;	
                          storepath(s,des);
			 }
			
                         //q.push_back(make_pair(pw,current));
			 continue;
                }
 		if(!visited[next])
		{
                    if(it->second<pw)
			pw=it->second;
  			pred[next]=current;
			//printf("%d ",pred[next]);
                    DFS(next,des,pw);
		}
        }
visited[current]=0;
//pred[current]=-1;

}
  

int main()
{

int n,e,x,y,w,i,p;
scanf("%d %d",&n,&e);
while(e--)
{
scanf("%d %d %d",&x,&y,&w);
v[x].push_back(make_pair(y,w));
v[y].push_back(make_pair(x,w));
}

vector< pair<int,int> > ::iterator it;
/*for(i=0;i<n;i++)
{
	for(it=v[i].begin();it!=v[i].end();it++)
		{
  			printf("%d %d %d\n",i,it->first,it->second);
		}
}*/

scanf("%d %d %d",&s,&d,&p);
int z=INT_MAX;
DFS(s,d,z);
for(i=cou;i>=0;i--)
{
printf("%d",a[i]);
if(i!=0)
printf(" ");
}
maxi=maxi-1;
if(p%maxi==0)
maxi=p/maxi;
else
maxi=(p/maxi)+1;
printf("\n%d",maxi);

return 0;
}







