#include <bits/stdc++.h>
using namespace std;
int T,N,M,a,b,c,t,u,v,w;
int parent[100009],deg[100009];
bool comp(pair<int,pair<int,int> > a,pair<int,pair<int,int> > b);
long long kruskals(pair<int ,pair<int,int> > gr[]);
void pr_union(int x,int y);
int root(int x);




int root(int x)
{
	if(x==parent[x])
		return x;
	parent[x] = root(parent[x]);
	return parent[x];

}
void pr_union(int x,int y)
{
	int p = root(x);
	int q = root(y);
	parent[p] = parent[q];
}
bool comp(pair<int,pair<int,int> > a,pair<int,pair<int,int> > b)
{
	if(a.first<b.first)
        return true;
    else if(a.first>b.first)
        return false;
    t = min(a.second.first,a.second.second);
    u = max(a.second.first,a.second.second);
    v = min(b.second.first,b.second.second);
    w = max(b.second.first,b.second.second);
    if(a.first==b.first && t>v)
        return true;
    else if(a.first==b.first && t<v)
        return false;
    else if(a.first==b.first && t==v)
        return (u>w);
}
long long kruskals(pair<int ,pair<int,int> > gr[])
{
	long long sum = 0;
	for(int i=0;i<M;i++)
	{
		a = gr[i].second.first;
		b = gr[i].second.second;
		c = gr[i].first;
		if(root(a)!=root(b))
		{
			sum+=c;
			pr_union(a,b);
			deg[a]++;
			deg[b]++;
		}
	}
	return sum;
}
int main()
{

    long long sum;
    //freopen("file1.txt","r",stdin);
    cin>>T;
    while(T--)
    {
    	cin>>N>>M;
    	sum = 0;
    	for(int i=1;i<=N;i++)
    	{
    	    parent[i] = i;
    	    deg[i]=0;
    	}
    	pair<int,pair<int,int> > gr[M];

    	for(int i=0;i<M;i++)
    	{
    		cin>>a>>b>>c;
    		gr[i] = make_pair(c,make_pair(a,b));
    	}

    	sort(gr,gr+M,comp);
    	sum = kruskals(gr);
    	cout<<sum<<endl;
    	for(int i=1;i<=N;i++)
        {
            cout<<deg[i]<<" ";
        }
        cout<<endl;
    }
}

