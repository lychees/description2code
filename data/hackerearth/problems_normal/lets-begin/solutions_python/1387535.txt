#!/usr/bin/env python

primes = [2, 3, 5, 7]
calc_p = {4:[2, 2], 6:[3, 3]}

def find_primes(X, num):

	output = []

	if X % num == 0:
		output.extend([num]*(X//num))
		return output

	elif X % num in primes:
		output.extend([num]*(X//num) + [X % num])

	elif X % num in calc_p:
		output.extend([num]*(X//num) + calc_p[X%num])

	elif X % num == 1:
		new_X = X - (7 * ((X // 7) - 1) )
		output.extend([num]*(X//num - 1) + find_primes( new_X, primes[primes.index(num) -1] )  )

	return output

tc = int(raw_input())

for i in range(tc):

	X = int(raw_input())

	if X == 1:
		print -1
		
	else:
		output = find_primes(X, primes[-1])
		print len(output)
