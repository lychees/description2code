from math import sqrt


def bs(a, t):
    low = 0
    high = len(a)-1
    while low <= high:
        mid = (low+high)/2
        if t == a[mid]:
            # print mid
            return True
        elif t < a[mid]:
            high = mid-1
        else:
            low = mid+1
    return False


def sieve(n):
    primes = range(3, n+1, 2)
    l = len(primes)
    for base in xrange(l):
        if primes[base] is None:
            continue
        if primes[base] > sqrt(n):
            break
        for i in xrange(base+(base+1)*primes[base], l, primes[base]):
            primes[i] = None
    primes.insert(0, 2)
    return filter(None, primes)


arr = sieve(10000)

art = []
i, j = 0, 0
l = len(arr)

while i < l:
    j = i+1
    while j < l:
        if arr[i]+arr[j] <= 10000:
            art.append(arr[i]+arr[j])
        else:
            break
        j = j+1
    i = i+1
art = list(set(art))
art = sorted(art)
i, j = 0, 0
l = len(art)
while i < l:
    if bs(arr, art[i]) == False:
        art[i] = None
    i = i+1
art = filter(None, art)

for _ in range(input()):
    n = input()
    for item in art:
        if item <= n:
            print item,
        else:
            break
    print""
