#include <bits/stdc++.h>
using namespace std ;
#define LL long long int
#define ft first
#define sd second
#define PII pair<int,int>
#define MAXN 16
#define mp make_pair
#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)
#define sc(x) scanf("%d",&x)
#define pr(x) printf("%lld\n",x)
#define pb push_back
#define MOD 1000000007

int T , N , X[MAXN] , Y[MAXN] , V[1 << MAXN];
double M[MAXN][MAXN] , DP[1 << MAXN];

double dist(int a,int b){
    return sqrt((X[a]-X[b])*(X[a]-X[b])+(Y[a]-Y[b])*(Y[a]-Y[b])) ;
}

double solve(int mask){
    if(mask == 0)
        return 0 ;
    double &ret = DP[mask] ;
    if(V[mask])
        return ret ;
    V[mask] = 1 ;
    ret = 100000000 ;
    for(int i=0;i<N;i++){
        for(int j=i+1;j<N;j++){
                if((mask&(1<<i)) && (mask&(1<<j)))
                ret = min(ret , M[i][j] + solve(((mask^(1<<j))^(1<<i)))) ;
        }
    }
    return ret ;
}

int main(){
    sc(T) ;
    while(T--){
        sc(N) ;
        N = N * 2 ;
        for(int i=0;i<N;i++){
            sc(X[i]) ;
            sc(Y[i]) ;
        }
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                if(i != j)
                    M[i][j] = dist(i,j) ;
                else
                    M[i][j] = 100000000 ;
            }
        }
        printf("%.2lf\n",solve((1<<N)-1)) ;
        memset(V,0,sizeof V) ;
    }
    return 0 ;
}
