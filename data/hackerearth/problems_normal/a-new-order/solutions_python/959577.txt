
Adj = {}
root = {}
def add(a, b):
	if a in Adj:
		Adj[a]["child"].add(b)
	else:
		Adj[a] = {"rank":0, "child":set([b])}
	if b in Adj:
		if b in root:
			del root[b]
		
		return
	else:
		if b in root:
			del root[b]
		Adj[b] = {"rank":0, "child":set()}

def addv(a):
	if a in Adj:
		return
	else:
		Adj[a] = {"rank":0, "child":set()}
		root[a] = ""


def process(words, n):
	
	for woe in words:
		for i in range(len(woe)):
			addv(woe[i])

	lev = 0
	flags = False
	for i in range(n-1):
		
		lev = 0

		while words[i][lev] == words[i+1][lev]:
			lev+=1
			#print lev
			#print len(words[i])
			if len(words[i]) <= lev:
				flags = True
				break

		if flags == True:
			flags = False
			continue

		add(words[i][lev], words[i+1][lev])

'''
['achmopru', 'bn', 'd', 'ev', 'fisx', 'lty']
['achmopru', 'bnv', 'dx', 'e', 'fis', 'lty']
'''
#ans = {"merg":[], "mergAdv":[]}
def mergAdv():

	rank = {}
	
	max = 0
	cur = []
	for ch in root:
		rank[ch] = 0
		cur.append(ch)
		
		while cur:
			current = cur[0]
			del cur[0]
			
			for c in Adj[current]["child"]:
				cur.append(c)
				if c in rank:
					if rank[c] < rank[current]+1:
						rank[c] = rank[current]+1
				else: 
					rank[c] = rank[current]+1
				
				if rank[c] > max:
					max = rank[c]

	top = ["" for x in range(max+1) ]
	
		
	for ch in Adj:
		
		i = rank[ch]
		if top[i] == "":
			top[i] = ch
		else:
			top[i] = "".join(sorted(top[i] + ch))
	
	for i in top:
		if i!="":
			#ans["mergAdv"].append(i)
			print i
	

N = int(raw_input())
words = []
for i in range(N):
	words.append(raw_input())
process(words, N)
mergAdv()

