#include <bits/stdc++.h>
#define ll long long
using namespace std;

ll n;
ll dp[300][300];
ll gra[300][300];

ll rec(int pos, int x, int flag)
{
	ll ans = 0;
	if(pos == n + 1) {
		return 0;
	}
	if(dp[pos][x] != -1) {
		return dp[pos][x];
	}
	ans = gra[pos][x] + rec(pos + 1, x, 0) ;
	ll y = x;
	bool row[n + 2];
	memset(row, false, sizeof row);

	while(y*2 <= n) {
			if(!row[y * 2]) {
				ans = max(ans, rec(pos + 1, 2*y, 0) + gra[pos][2*y]);
			}
			y = y * 2;
			int z = y;
			while((z / 2) >= 1) {
				if(!row[z / 2])
					ans = max(ans, rec(pos + 1, z / 2, 0) + gra[pos][z / 2]);
				z = z / 2;;
				row[z] = true;
			}
			row[y] = true;
	}

	y = x;
	if(flag == 0)
	while(y / 2 >= 1) {
			ans = max(ans, rec(pos + 1, y / 2, 0) + gra[pos][y / 2]);
			y = y / 2;
			int z = y;
			while(z * 2 <= n) {
				if(!row[z * 2]) {
					ans = max(ans, rec(pos + 1, z * 2, 0) + gra[pos][z * 2]);
				}
				z *= 2;
				row[z] = true;
			}
			row[y] = true;
	}
	if(flag == 0)
	return dp[pos][x] = ans;
}


int main()
{
	cin>>n;
	for(int i = 1; i <= n; ++i) {
		for(int j = 1; j <= n; ++j) {
			scanf("%lld", &gra[i][j]);
		}
	}
	memset(dp, -1, sizeof(dp));
	ll ans = 0;
	for(int i = 1; i <= n; ++i) {
			ans = max(ans,gra[1][i]  + rec(2, i , 0) );
	}
	printf("%lld\n", ans);
	return 0;
}