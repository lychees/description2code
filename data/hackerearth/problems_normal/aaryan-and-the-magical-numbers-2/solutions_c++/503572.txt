#include <cstdio>
#include <iostream>
#include <cmath>
#include <string>
#include <cstring>
#include <climits>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <set>


using namespace std;
typedef long long int LL;

#define fr(i,a,b) for(int i = a; i < b; i++)
#define frll(i,a,b) for(LL i = a; i < b; i++)
#define s(x) scanf("%d",&x)
#define sll(x) scanf("%lld",&x)
#define p(x) printf("%d\n",x)
#define pll(x) printf("%lld\n",x)

int p[10] = {0, 0, 1, 1, 0, 1, 0, 1, 0, 0};
LL count1[10] = {1, 2, 2, 2, 3, 3, 4, 4, 5, 6};

LL non_fav_cases(int *arr_n, int size, int i){
	if(i == 0){
		return count1[arr_n[i]]-1;
	}
	LL temp, factor = 1;
	if(arr_n[i] == 0){
		temp = 0;
		factor = 0;
	}
	else temp = count1[arr_n[i]- 1];
	LL val = factor*(temp * pow(6, i));
	if(!p[arr_n[i]])
		val += non_fav_cases(arr_n, size, i-1); 
	else{
		val--;
	}
	//pll(val);
	return val;
}

int *arr_n;

int main(){
    int t; 

	int i;
	char ch;
	//struct arr newArr[100000];
	s(t);
	LL n;
	arr_n = (int*)malloc(25*sizeof(int));
    while(t--){	
		sll(n);
		if(n < 0){
			n = -n;
		}
		LL temp;
		temp = n;
		i = 0;
		if(temp == 0){
			arr_n[i] = 0;
			i++;
		}
		while(temp != 0){
			arr_n[i] = temp % 10;
			temp /= 10;
			i++;
		}
		int size = i;
		/*fr(i, 0, size){
			p(arr_n[i]);
		}*/
		LL ans = 0;
		//if(size == 1)
			//ans = n- non_fav_cases(arr_n, size, size-1);
		//else 
			ans = n- non_fav_cases(arr_n, size, size-1);
		pll(ans);
	}	
    return 0;
}