#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <vector>
#include <list>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <fstream>
#include <ctime>
#include <cassert>
#include <stack>
#include <bitset>
using namespace std;

typedef long long int ll;
typedef pair<int, int > pii;

#define MOD 1000000007
#define pb push_back

list<int> a[2000];
int vis[2000], ind[2000];
int cnt = 0;

void solve()
{
	cnt = 0;
	int n, m, u, v;

	cin>>n>>m;
	for(int i=0;i<2000;i++)
	{
		vis[i] = 0, ind[i] = 0;
		a[i].clear();
	}
	for(int i=0;i<m;i++)
	{
		cin>>u>>v;
		a[u].push_back(v);
		ind[v]++;
	}
	queue<int> q;
	for(int i=1;i<=n;i++)
	{
		if(ind[i] == 0)
		{
			q.push(i);
			cnt++;
			vis[i] = 1;
		}
	}
	while(!q.empty())
	{
		int node = q.front();
		q.pop();
		list<int>::iterator it = a[node].begin();
		for(;it!=a[node].end();it++)
		{
			ind[*it]--;
			if(ind[*it] == 0 && !vis[*it])
			{
				q.push(*it);
				vis[*it] = 1;
				cnt++;
			}
		}
	}
	cout<<cnt<<"\n";
}

int main()
{
	std::ios::sync_with_stdio(false);
	//freopen ("C:\\Users\\Ritesh\\Desktop\\Coding\\Codeforces\\input.txt","r",stdin);
	int t;
	cin>>t;
//	t = 1;
	while(t--)
	{
		solve();
	}
	return 0;
}
