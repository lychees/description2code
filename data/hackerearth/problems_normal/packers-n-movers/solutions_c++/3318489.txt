
/* Trico ------------------------> NIT Silchar

“All power is within you; you can do anything and everything.
Believe in that, do not believe that you are weak; do not believe that you are half-crazy lunatics,
as most of us do nowadays. You can do any thing and everything, without even the guidance
of any one. Stand up and express the divinity within you.”

 */
#include<bits/stdc++.h>
#define ll long long
#define pll pair<ll,ll>
#define vl vector<ll>
#define mod 1000000007
#define fori(z,n) for(int i=z;i<n;i++)
#define forj(z,n) for(int j=z;j<n;j++)
#define fork(z,n) for(int k=z;k<n;k++)
#define db(x) cout << (#x) << " = " << x << endl;
#define trico() int t;cin>>t ; while(t--)
#define CHECK_BIT(var,pos) ((var) & (1<<(pos)))
#define p_iter vector<pll>::iterator
#define l_iter vector<ll>::iterator
#define forstl(m) for(it=m.begin();it!=m.end();it++)
#define bitcnt(x) __builtin_popcountll(x)
const int nax = 1e6 + 5;
const int lax = 1e5 + 5;
const int pax = 2e5 + 5;
const int inf = 1e9 + 5;
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
using namespace std;
static int u=0;
void f_case(){u++;cout<<"Case "<<u<<": ";}
ll dp[1005][20],arr[1005];
 ll m,p;
ll solve(ll pno,ll mno)
{




    if(dp[pno][mno]!=-1)
        return dp[pno][mno];
    if(mno==1)
        return arr[p-1]-arr[pno-1];
 ll x=LONG_MAX;
    fori(pno,p-mno+1)
    {

    if(i+1 <p)
    x=min(x,max(arr[i]-arr[pno-1],solve(i+1,mno-1)));
    }
    return dp[pno][mno]=x;
}
int main()
{
 //freopen("input.in", "r", stdin);
 fori(0,1005) forj(0,20) dp[i][j]=-1;

 cin>>m>>p;
 if(m>p)
    m=p;
 fori(0,p)
 cin>>arr[i];
 fori(1,p)
 arr[i]+=arr[i-1];
 ll mini=LONG_MAX;
 fori(0,p-m+1)
{
if(i+1 < p)
 mini=min(mini,max(arr[i],solve(i+1,m-1)));
}
cout<<mini;
}

