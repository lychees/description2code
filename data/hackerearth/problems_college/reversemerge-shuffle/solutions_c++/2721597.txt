#include<bits/stdc++.h>
#define lim 100005
#define mod 1000000007
#define ll long long
#define Max LONG_LONG_MAX
#define Min LONG_LONG_MIN
using namespace std;
void strrev(char *str)
{
      char *p1, *p2;

      if (! str || ! *str)
         return ;
      for (p1 = str, p2 = str + strlen(str) - 1; p2 > p1; ++p1, --p2)
      {
            *p1 ^= *p2;
            *p2 ^= *p1;
            *p1 ^= *p2;
      }
}

int main()
{ std::ios_base::sync_with_stdio(false);
  //freopen("in.txt","r",stdin);
  ll t,n,i,j,k;
 ll ans=0,req[lim]={0},written[lim]={0},count[lim]={0},seen[lim]={0};
	vector<vector<ll> >available(30);
    char s[lim],res[lim];
	cin>>s;
	strrev(s);
	//cout<<s;
	i=0;
	while(s[i])
	{count[s[i]-'a']++;
	// available[s[i]-'a'][i]++;
	 i++;
    }
    i=0;
    /*while(s[i])
    {
    	if(i>0)
    	{
    	for(j=0;j<26;j++)
    	{
    	  available[j][i]+=available[j][i-1];	
		}
        }
        i++;
	}*/
 /*   for(i=0;i<strlen(s);i++)
    {
    	cout<<available[0][i]<<endl;
	}*/

	for(i=0;i<=26;i++)
	count[i]/=2;
	ll 	len=strlen(s),cur=0;
	for(i=len-1;i>=0;i--)
	{
		//cout<<s[i]<<count[s[i]-'a']<<"  "<<seen[s[i]-'a']<<endl;
		if(seen[s[i]-'a']<count[s[i]-'a'])
		req[i]=count[s[i]-'a']-seen[s[i]-'a'];
		else
		req[i]=0;
		seen[s[i]-'a']++;
	}
 	
	//cout<<endl;
	len/=2;k=0;cur=0;
	while(k<len)
	{
		while(req[cur]<=written[s[cur]-'a'])
		{
            available[s[cur]-'a'].push_back(cur);
            cur++;
		}
		//cout<<cur<<"  "<<s[cur]<<"  "<<available[0]<<endl;
        ll last=Min;
		for(i=0;i<26;i++)
		{
			ll idx=0;
			if(char(i+'a')>=s[cur]) break;
            while(idx<available[i].size() && available[i][idx]>last && written[i]<count[i] &&k<len)
			{
				res[k++]=i+'a';
				//cout<<(char)(i+'a')<<"  "<<cur<<endl;
				written[i]++;
                last=available[i][idx];
                idx++;
            }
		}
        
		res[k++]=s[cur];
	//	cout<<s[cur]<<"  "<<cur<<endl;
		written[s[cur]-'a']++;
      for(i=0;i<30;i++)
      available[i].clear();
		cur++;
    }
    res[k]='\0';
	cout<<res;
  return 0;
}
