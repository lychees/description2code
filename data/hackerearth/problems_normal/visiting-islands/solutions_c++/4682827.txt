#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return (r)%MOD;
}
int vis[1000001]={};
int g[1000001];
int n;
int sz[1000001];

int dfs(int u){
    if(vis[u]){//cycle detected
        if(sz[u]){
            return sz[u];
        }
        else{
            int ct=1;
            int v=g[u];
            while(v!=u){
                ct++;
                v=g[v];
            }
            v=g[u];
            while(v!=u){//update size of each node in the cycle
                sz[v]=ct;
                v=g[v];
            }
            return ct;
        }
    }
    vis[u]=1;
    int c=1+dfs(g[u]);
    if(sz[u]==0){
        sz[u]=c;
    }
    return sz[u];

}


int main(){
    int t;
    si(t);
    while(t--){
      int ind=0,mx=0;
      si(n);
      int v;
      fr(i,0,n){
      	vis[i]=0;
      	sz[i]=0;
         si(v);
         g[i]=v;
      }
    fr(i,0,n){
        if(!vis[i]){
           dfs(i);
        }
    }
    int ans=0;
     fr(i,0,n){
        if(sz[i]>sz[ans]){
            ans=i;
        }
    }
    pi(ans);pln;

    }
return 0;
}
