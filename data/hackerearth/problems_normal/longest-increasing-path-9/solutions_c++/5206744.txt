#include<bits/stdc++.h>
 
using namespace std;

#define mod 1000000000
#define loop(i,a,b) for(int i=a;i<b;i++)
#define all(c) (c).begin(),(c).end()
#define nl cout<<"\n"
#define sz(a) (int)(a).size()
#define len(a) (int)a.length()
#define pb push_back
#define mp make_pair

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;

typedef unsigned long long ull;
typedef long long ll;

const int INF = 2000000000;

ll gcd(ll a, ll b) { int temp; while(b > 0) { temp = a%b; a = b; b = temp; } return a; }
ll lcm(ll a, ll b) { return a/gcd(a,b)*b; }
ll modpow(ll a, ll n) { ll p = 1; while(n) { if (n%2) p = p*a%mod; n/=2; a = a*a%mod; } return p; }

ll f[1000005] = {0};

int main(){
    int t,n,m;
    int dp[101][101];
    cin>>t;
    while(t--){
        memset(dp,0,sizeof(dp));
        cin>>n>>m;
        int a[n+1][m+1];
        loop(i,0,n+1){
            loop(j,0,m+1){
                if(i==0 || j==0){
                    a[i][j] = INF;
                }
                else cin>>a[i][j];
            }
        }
        int ans = 0;
        loop(i,0,n+1){
            loop(j,0,m+1){
                if(i==0 || j==0){
                    dp[i][j] = 0;
                }
                else if(i==1 && j==1){
                    dp[i][j] = 1;
                }
                else{
                    if(dp[i-1][j] == 0 && dp[i][j-1]==0){
                        dp[i][j] = 0;
                    }
                    if(a[i][j] > a[i-1][j] && dp[i-1][j] > 0){
                        dp[i][j] = max(1+dp[i-1][j], dp[i][j]);
                    }
                    if(a[i][j] > a[i][j-1] && dp[i][j-1] > 0){
                        dp[i][j] = max(1+dp[i][j-1], dp[i][j]);
                    }
                }
                if(dp[i][j] > ans) ans = dp[i][j];
            }
        }
        cout<<ans<<endl;
    }
}