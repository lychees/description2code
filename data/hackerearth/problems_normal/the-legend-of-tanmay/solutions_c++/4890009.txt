#include <bits/stdc++.h>
using namespace std;
const int MAX = 1e5 + 5;
typedef long long ll;
#define pb(a)		push_back(a)
#define pp			pop_back()
#define sz			size()
#define pf(a)		printf("%d",a)
#define sf(a)		scanf("%d",&a)
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> node;
int neg, pos, zero;
int ar[20];

ll f_min(ll prod_neg, ll prod_pos) {
	if (neg & 1) {
		if (pos>0)prod_neg *= prod_pos;
	}
	else {
		if (neg == 0 && zero>0)prod_neg = 0;
		else if(neg==0&&zero==0)prod_neg=ar[0];
		else if (neg != 0) {
			prod_neg /= ar[neg - 1];
			prod_neg *= prod_pos;
		}
	}
	return prod_neg;
}
ll f_max(ll prod_neg, ll prod_pos) {
	if (neg & 1) {
		if (neg>1)prod_neg /= ar[neg - 1];
		if (pos == 0 && neg == 1 && zero>0)prod_neg = 0;
		if(pos>0&&neg==1)return prod_pos;
		prod_pos *= prod_neg;
	}
	else {
		if (neg == 0 && pos == 0)prod_pos = 0;
		prod_pos *= prod_neg;
	}
	return prod_pos;
}
int main()
{
	ios::sync_with_stdio(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		neg = 0, pos = 0, zero = 0;
		ll prod_neg = 1, prod_pos = 1;
		for (int i = 0;i<n;i++) {
			cin >> ar[i];
			if (ar[i] == 0)zero++;
			else if (ar[i]<0)neg++, prod_neg *= ar[i];
			else if (ar[i]>0)pos++, prod_pos*=ar[i];
		}
		sort(ar, ar + n);
		cout << f_max(prod_neg, prod_pos) << " " << f_min(prod_neg, prod_pos) << endl;
	}
	return 0;
}
