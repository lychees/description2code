#include <bits/stdc++.h>

using namespace std;

#define frl(a, b, c) for( (a) = (b);( a) < (c); (a++))
#define fru(a, b, c) for( (a) = (b); (a) <= (c); (a++))
#define frd(a, b, c) for( (a) = (b); (a) >= (c); (a--))
#define mst(a, b) memset(a, b, sizeof(a))
#define si(a) scanf("%d", &a)
#define ss(a) scanf("%s", a)
#define sc(a) scanf("%c", &a)

#define pb(a) push_back(a)
#define mp make_pair
#define nwl puts("");
#define sp << " " <<

#define sz size()
#define bg begin()
#define en end()
#define X first
#define Y second

#define vi vector <int>
#define vs vector <string>
#define ll long long int
#define dec int i = 0, j= 0, k = 0;

#define i(n) cin >> n;
#define p(s) cout << s;
#define pau system("pause");
template<class T> string tostring(T value) {ostringstream sout; sout << value; return sout.str();}


vector<long long> v(1040, 0);
int a[4] = {2, 3, 5, 7};
void f(int orgmask, int newmask, int pos){
    //cout << orgmask << " " << newmask <<  " " << pos << endl;
    if(pos == 4){
        bool flag = true;
        for(int i = 0; i < 4; i++){
            if((newmask & (1 << a[i])) && (!(orgmask &( 1 << a[i]))))
                flag = false;
        }
        //cout << newmask << endl;
        if(flag && newmask)
            v[newmask]++;
        return;
    }
    f(orgmask, newmask, pos + 1);
    f(orgmask, newmask | (1 << a[pos]), pos + 1);
}
ll ans = 0;

void f1(int mask, int num, int pos){
    if(pos == 4){
        if(!mask)
            return;

//        if(mask & (1 << 2))
//            cout << "2" << " ";
//        if(mask & (1 << 3))
//            cout << "3" << " ";
//        if(mask & (1 << 5))
//            cout << "5" << " ";
//        if(mask & (1 << 7))
//            cout << "7" << " ";
//        cout << v[mask] << endl;


        if(num%2 == 0){
            if(v[mask] >= 3)
                ans -= (v[mask] * (v[mask]-1) *(v[mask]-2) / 6);
        }
        else{
            //ans += v[mask];
            if(v[mask] >= 3)
                ans += (v[mask] * (v[mask]-1) *(v[mask]-2) / 6);
        }

        return;
    }
    f1(mask, num, pos+1);
    f1(mask | (1 << a[pos]), num+1, pos+1);
}

int main()
{
    int n, dig;
    ll num;
    cin >> n;
    for(int i = 0; i < n; i++){
        int mask = 0;
        cin >> num;
        while(num){
            dig = num % 10LL;
            num /= 10LL;
            if(dig == 2 || dig == 3 || dig == 5 || dig == 7)
                mask |= (1 <<dig);
        }
        f(mask, 0, 0);
    }
    //cout << "haha\n";
    f1(0, 0, 0);
    cout << ans << endl;
}






























