
#include<cstdio>
#include<iostream>
#include<cstring>
#include<sstream>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<stack>
#include<queue>
#include<iomanip>
#include<ctype.h>
#include<complex>
#include<utility>
#include<functional>
#include<bitset>
#include<numeric>
#include<cassert>
#include<climits>
#include <fstream> 
using namespace std;
#define ll  long long 
#define gc getchar_unlocked
#define mod 1000000007
#define pq priority_queue
#define vi vector<int>
#define eps 1e-9
#define inf (1 << 28)
#define  MX 100003
#define pi pair<int ,int >
ll D[1000007];
void fun()
{
    D[0]=1;
    for(int i=1;i<100006;i++)  D[i]=(D[i-1]*i)%mod;    
}
ll expo(ll a,ll b)
{
    ll p=1,q=a; 
    while(b>0)
    {
        if(b%2 == 1) p=(p*q)%mod;        
        q=(q*q)%mod; 
        b/= 2;
    }    
    return p%mod;
}

int main()
{
    fun();
    ll n;
    scanf("%lld",&n);    
    ll arr[n],arr1[n];    
    for(int i=0;i<n;i++) arr1[i]=1;
    
    ll total=0;
    for(ll i=0;i<n;i++)
    {
        scanf("%lld",&arr[i]);
        ll t=arr[i];
        int dp[t];
        map<int,int>mp;
        for(ll j=0;j<arr[i];j++)
        {
           scanf("%d",&dp[j]);
            mp[dp[j]]++;
        }
        for(map<int,int>::iterator it=mp.begin();it!=mp.end();it++) arr1[i]=(arr1[i]*D[it->second])%mod;        
          total=(total+arr[i])%mod;
    }
    ll fct=1;
    for(ll i=0;i<n;i++) fct=(fct*D[arr[i]])%mod;   
    ll val=1;
    for(ll i=0;i<n;i++) val=(val*arr1[i])%mod;    
    ll res=0;
    res=(D[total]*expo(fct,mod-2))%mod;
    res=(res*val)%mod;
    res=res%mod;
    printf("%lld\n",res);
}
