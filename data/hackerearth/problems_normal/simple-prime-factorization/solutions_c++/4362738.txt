#include<iostream>
#include<vector>
#include<map>

using namespace std;


void GetPrimeFactors(vector<bool> &isNotPrime, vector<unsigned int> &factors, unsigned int max)
{
	isNotPrime[0] = isNotPrime[1] = true;
	for (int i = 2; i < max; i++)
	{
		if (isNotPrime[i] == false)
		{
			factors.push_back(i);
			for (int j = 2 * i; j < max; j = j + i)
			{
				isNotPrime[j] = true;
			}
		}
	}

}


int main()
{

	unsigned int t;
	unsigned long max=0;

	cin >> t;
	vector<unsigned long> x(t);

	for (int i = 0; i < t; i++)
	{
		cin >> x[i];
		if (max < x[i])
			max = x[i];
	}
	vector<bool> isNotPrime(1000000+1,false);
	map<unsigned int, unsigned int> exp;
	vector<unsigned int> factors;

	GetPrimeFactors(isNotPrime, factors, 1000000+1);

	for (int i = 0; i < t; i++)
	{
		unsigned int no = x[i];
		for (auto item : factors)
		{
			exp[item] = 0;
			if (item > x[i] || item == no)
				break;
			while ( (x[i] % item == 0) )
			{
				exp[item] += 1;
				x[i] = x[i] / item;
			}

			if (exp[item] || item ==2)
			{
				if (item > 2)
				{
					cout << "*";
				}
				cout << item << "^" << exp[item];
			}

		}
		cout << endl;
	}

	return 0;

}

