#include<bits/stdc++.h>

using namespace std;

int n;
vector< pair<long long, long long> > val;
long long dp[300][300];

long long solve(int idx, int prev){
	if(idx == n+1) return 0;
	if(dp[idx][prev] != -1) return dp[idx][prev];
	//do not choose current element
	long long ans = solve(idx+1, prev);

	//try to choose current element
	if(val[idx].first > val[prev].first && val[idx].second > val[prev].second){
		ans = max(ans, solve(idx+1, idx) + val[idx].second);
	}
	return dp[idx][prev] = ans;
}

int main(){
	int t;cin >> t;
	while(t--){
		cin >> n;
		long long rad, ht;
		val.clear();
		val.push_back(make_pair(0, 0));
		for(int i = 0;i < n;i++) cin >> rad >> ht, val.push_back(make_pair(rad, ht));
		for(int i = 0;i < 300;i++) for(int j = 0;j < 300;j++) dp[i][j] = -1;
		sort(val.begin(), val.end());
		cout << solve(1, 0) << endl;
	}
	return 0;
}