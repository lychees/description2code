
#include<bits/stdc++.h>
#define ll long long int
#define pp pair<int,int> >
#define mp make_pair
#define chk(a)	cout<<#a<<" : "<<a<<"\n";
#define chk2(a,b) cout<<#a<<" : "<<a<<", "<<#b<<" : "<<b<<"\n";
#define chk3(a,b,c) cout<<#a<<" : "<<a<<", "<<#b<<" : "<<b<<", "<<#c<<" : "<<c<<"\n";
#define chk4(a,b,c,d) cout<<#a<<" : "<<a<<", "<<#b<<" : "<<b<<", "<<#c<<" : "<<c<<", "<<#d<<" : "<<d<<"\n";
#define M 1000000007
#define F first
#define S second
using namespace std;
ll powe(ll a,ll b)
{
	ll ans=1;
	while(b)
	{
		if(b&1)
			ans=(ans*a)%M;
		b=b/2;
		a=(a*a)%M;
	}
	return ans;
}

ll gcde(ll a,ll b)
{
	if(b==0)
		return a;
	return gcde(b,a%b);
}
int p[100009],q[100009],vis[100009];
vector<int> gph[100009];
vector<int> vs,pos,v;
void dfs(int u)
{
    v.push_back(p[u]);;
    vis[u]=1;
    pos.push_back(u);
    vector<int>::iterator it;
    for(it=gph[u].begin();it!=gph[u].end();it++)
    {
        if(!vis[*it])
            dfs(*it);
    }
}
int main()
{
    int t,n,m,x,y,i,j;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        memset(vis,0,sizeof(vis));
        v.clear();
        vs.clear();
        pos.clear();
        for(i=0;i<100002;i++)
            gph[i].clear();
        for(i=1;i<=n;i++)
        {
            cin>>p[i];
        }
        for(i=1;i<=n;i++)
        {
            cin>>q[i];
        }
        for(i=1;i<=m;i++)
        {
            cin>>x>>y;
            gph[x].push_back(y);
            gph[y].push_back(x);
        }
        int fl=0;
        for(i=1;i<=n;i++)
        {
            if(!vis[i] and p[i]!=q[i])
            {
                dfs(i);
                sort(v.begin(),v.end());
                for(j=0;j<pos.size();j++)
                    vs.push_back(q[pos[j]]);
                sort(vs.begin(),vs.end());

                for(j=0;j<vs.size();j++)
                {
                    if(vs[j]!=v[j])
                    {
                        fl=1;
                        break;
                    }
                }
                v.clear();
                vs.clear();
                pos.clear();
                if(fl)
                    break;
            }
        }
        if(fl)
                cout<<"NO\n";
            else
                cout<<"YES\n";
    }

	return 0;
}
