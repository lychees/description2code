#include <iostream>
#include <iomanip>
#include <algorithm>
#include <cmath>
#include <assert.h>
#include <stdio.h>
#include <ctime>
#include <cstdlib>
#include <utility>
#include <string.h>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <complex>

#define inf (999999999999LL)
#define pii pair<int,int>
#define pip pair<int,pii>
#define pll pair<long long,long long>
#define eps 1e-8
 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

#define pb push_back	
#define maxn 2*500500
#define mod 1000000007
#define sq(x) ((x)*(x))

using namespace std;

void update(int *T,int idx,int val){
	idx++;
	while(idx < maxn){
		T[idx] += val;
		idx += idx&-idx;
	}
}

int sum(int *T,int idx){
	idx++;
	int ret = 0;
	while(idx){
		ret += T[idx];
		idx -= idx&-idx;
	}
	return ret;
}

int R[2*500500];
int L[2*500500];
char side[maxn];
int cur[maxn];

main(){

		int n,q;
		scanf("%d%d",&n,&q);

		int cl=0, cr=0;

		for(int i=0;i<n;i++){
			int u;
			scanf("%d",&u), u--;
			side[u] = 'r';
			cur[u] = i;
			update(R,i,1);
			cr++;
		}

		long long ans = 0;

		while(q--){
		
			int u,r;
			char ch;
			scanf("%d %c",&u,&ch) ,u--;

			if(side[u] == 'r'){
				int t = sum(R,cr) - sum(R,cur[u]);
				r =  min(t,n-t-1);
			}
			else{
				int t = sum(L,cr) - sum(L,cur[u]);
				r = min(t,n-t-1);
			}
			//debug("r %d\n",r);
			ans += r;

			if(side[u] == 'r')
				update(R,cur[u],-1);
			else
				update(L,cur[u],-1);
			if(ch == 'r'){
				update(R,cr,1); cr++; side[u] = 'r'; cur[u] = cr-1;}
			else{
				update(L,cl,1); cl++; side[u] = 'l'; cur[u] = cl-1;}

		}

		cout << ans << endl;

}
