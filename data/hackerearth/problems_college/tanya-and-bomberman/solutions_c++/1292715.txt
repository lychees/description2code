#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;
//vector<pair<long long,long long> > v;
int main()
{
    ios::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--){
    	int k,p;
    	long long x,y;
    	cin>>k>>p;
    	map<long long, vector<long long> > mpx,mpy;
    	//v.clear();
    	for(int i=0;i<p;i++){
    		cin>>x>>y;
    		mpx[x].push_back(y);
    		mpy[y].push_back(x);
    	}
    	vector<pair<int,long long> > mpsize;
    	for(auto it=mpx.begin();it!=mpx.end();it++){
    		mpsize.push_back(make_pair((it->second).size(),it->first));
    	}
    	for(auto it=mpy.begin();it!=mpy.end();it++){
    		mpsize.push_back(make_pair((it->second).size(),it->first));
    	}
    	sort(mpsize.rbegin(),mpsize.rend());
    	long long tot = 0,ans = 0;
    	for(int i=0;i<mpsize.size();i++){
    		tot += mpsize[i].first;
    		ans++;
    		if (tot>=p) break;
    	}
    	cout << ans*k << "\n";
    }
    return 0;
}
