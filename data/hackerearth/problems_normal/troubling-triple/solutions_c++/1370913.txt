#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
long long n,k;
long long s[2001];
vector<long long> v[2001];
//unordered_map<pair<int, int>, int> mp;
int main()
{
    scanf("%lld%lld",&n,&k);
    for(int i=0;i<n;i++)
    	scanf("%lld",&s[i]);
    long long ans = 0;
    /*for(int i=0;i<n;i++){
    	for(int j=i+1;j<n;j++){
    		if (s[i]*s[j]>k) mp[{i,j}] = 1;
    	}
    }*/
    for(int i=0;i<n;i++){
    	for(int j=i;j<n;j++){
    		v[i].push_back(s[j]);
    	}
    	sort(v[i].begin(),v[i].end());
    }
    for(int i=0;i<n;i++){
    	if (s[i]>k) continue;    
    	for(int j=i+1;j<n-1;j++){
    		if (s[i]*s[j]>k) continue;
    		/*for(int c=j+1;c<n;c++){
    			if (s[i]*s[j]*s[c]<=k) ans++;
    			
    		}*/
    		long long tmp = k/(s[i]*s[j]);
    		
    		//long long tmp2 = lower_bound(v[j+1].begin(),v[j+1].end(),tmp)-v[j+1].begin()+1;
    		//if (v[j+1][tmp2-1]>tmp) tmp2--;
    		//cout << i << " " << j << " " << tmp << " " << tmp2 << endl;
    		long long tmp2 = upper_bound(v[j+1].begin(),v[j+1].end(),tmp)-v[j+1].begin();
    		//v[j+1].size()-tmp2
    		ans += tmp2;
    	}
    }
    printf("%lld\n",ans);
    return 0;
}
