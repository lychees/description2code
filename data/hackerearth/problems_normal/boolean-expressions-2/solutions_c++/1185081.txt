#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = acos(-1.0);

vector <int> a, op; 
//dp1 true dp2 false
int dp1[500][500], dp2[500][500];

void read() {
	string s, t;
	cin >> s >> t;
	for(int i = 0; i < sz(s); i++) a.pb(s[i] - '0');
	for(int i = 0; i < sz(t); i++) {
		if(t[i] == 'o') op.pb(0);
		else if(t[i] == 'a') op.pb(1);
		else op.pb(2);
	}
}

int calc1(int l, int r);
int calc2(int l, int r);

int calc1(int l, int r) {
	if(l == r) return a[l]==1;
	int &res = dp1[l][r];
	if(res != -1) return res;
	res = 0;
	for(int i = l; i < r; i++) {
		int x1 = calc1(l, i);
		int x2 = calc2(l, i);
		int y1 = calc1(i+1, r);
		int y2 = calc2(i+1, r);
		if(op[i] == 0) {
			res = (res + 1ll * x1 * y1 % mod) % mod;
			res = (res + 1ll * x1 * y2 % mod) % mod;
			res = (res + 1ll * x2 * y1 % mod) % mod;
		} else if(op[i] == 1) {
			res = (res + 1ll * x1 * y1 % mod) % mod;
		} else {
			res = (res + 1ll * x2 * y1 % mod) % mod;
			res = (res + 1ll * x1 * y2 % mod) % mod;
		}
	}
	return res;
}

int calc2(int l, int r) {
	if(l == r) return a[l]==0;
	int &res = dp2[l][r];
	if(res != -1) return res;
	res = 0;
	for(int i = l; i < r; i++) {
		int x1 = calc1(l,   i);
		int x2 = calc2(l,   i);
		int y1 = calc1(i+1, r);
		int y2 = calc2(i+1, r);
		if(op[i] == 0) {
			res = (res + 1ll * x2 * y2 % mod) % mod;
		} else if(op[i] == 1) {
			res = (res + 1ll * x2 * y1 % mod) % mod;
			res = (res + 1ll * x1 * y2 % mod) % mod;
			res = (res + 1ll * x2 * y2 % mod) % mod;
		} else {
			res = (res + 1ll * x2 * y2 % mod) % mod;
			res = (res + 1ll * x1 * y1 % mod) % mod;
		}
	}
	return res;
}

int main() {

	#ifdef LOCAL
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
	#endif

	memset(dp1, -1, sizeof dp1);
	memset(dp2, -1, sizeof dp2);

	read();

	int q, l, r;
	string temp;

	cin >> q;

	while(q--) {
		cin >> l >> r >> temp;
		int x = 1;
		if(temp == "false") x = 0;
		l--; r--;
		if(x) printf("%d\n", calc1(l, r));
		else printf("%d\n", calc2(l, r));
	}

	return 0;
}















