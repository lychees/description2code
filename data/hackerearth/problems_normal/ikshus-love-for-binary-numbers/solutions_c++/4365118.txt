using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
void solve();
int main()
{
  int t=1;
//  cin>>t;
  while(t--)
  solve();
  return 0;
}
ll dp0[65],dp1[65];
void solve()
{
     dp0[0]=1;
     ll n,k,i,j;
     ll sum=1,tot,h;
     cin>>n>>k;
     for(i=1;i<=k-1;i++) 
     {
        dp0[i]=dp0[i-1]+dp1[i-1];
        dp1[i]=dp0[i-1]+dp1[i-1];
     } 
     for(i=k;i<=n;i++)
     {
        dp0[i]=dp0[i-1]+dp1[i-1];;
        for(j=i-k+1;j<=i-1;j++)
          dp1[i]+=dp0[j];
     }
     for(i=1;i<=n;i++)
       sum+=dp1[i];
     tot=(1LL<<n);
     sum=tot-sum;
     h=__gcd(sum,tot);
     cout<<sum/h<<'/'<<tot/h;
} 



























