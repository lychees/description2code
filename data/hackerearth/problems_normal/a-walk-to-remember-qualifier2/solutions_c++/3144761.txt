#include <bits/stdc++.h>
// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#include <time.h>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define dbl long double
#define pi 3.14159265358979323846
using namespace std;
// mylittledoge

#ifdef DONLINE_JUDGE
	// palindromic tree is better than splay tree!
	#define lld I64d
#endif

int N,M;
vector< vector<int> > G;
vector<int> dep,up,par,idx;
stack<int> st;
int idx_cur =0;
vector< vector<int> > comp;
vector<bool> in_st;

void DFS(int R) {
	idx[R] =up[R] =idx_cur++;
	st.push(R);
	in_st[R] =true;
	ALL_THE(G[R],it) {
		if(par[*it] == -1) {
			par[*it] =R;
			dep[*it] =dep[R]+1;
			DFS(*it);}
		if(in_st[*it]) up[R] =min(up[R],up[*it]);}
	if(up[R] == idx[R]) {
		vector<int> v;
		while(st.top() != R) {
			v.push_back(st.top());
			in_st[st.top()] =false;
			st.pop();}
		v.push_back(st.top());
		in_st[R] =false;
		st.pop();
		comp.push_back(v);}
	}

int main() {
	cin >> N >> M;
	G.resize(N);
	for(int i =0; i < M; i++) {
		int x,y;
		cin >> x >> y;
		G[--x].push_back(--y);}
	dep.resize(N);
	par.resize(N,-1);
	up.resize(N);
	idx.resize(N);
	in_st.resize(N,false);
	for(int i =0; i < N; i++) if(par[i] == -1) {
		par[i] =i;
		dep[i] =0;
		DFS(i);}

	vector<int> ans(N,1);
	for(int i =0; i < (int)comp.size(); i++) if(comp[i].size() == 1) ans[comp[i][0]] =0;
	for(int i =0; i < N; i++) cout << ans[i] << " ";
	cout << "\n";}

// look at my code
// my code is amazing
