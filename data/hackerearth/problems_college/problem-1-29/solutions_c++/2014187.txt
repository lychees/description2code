#include<iostream>
#include<cstring>
#include<queue>
using namespace std;

int Ar[60][60],N,visited[100][100];

void bfs()
{
    memset(visited,0,sizeof(visited));
    queue<int> Qx,Qy;
    Qx.push(1);
    Qy.push(1);
    visited[1][1]=1;
    int i,j;
    while(!Qx.empty())
    {
        i=Qx.front();
        j=Qy.front();
        Qx.pop(),Qy.pop();
        if(Ar[i+1][j]==1&&!visited[i+1][j])
        {
            visited[i+1][j]=1;
            Qx.push(i+1),Qy.push(j);
        }
        if(Ar[i][j+1]==1&&!visited[i][j+1])
        {
            visited[i][j+1]=1;
            Qx.push(i),Qy.push(j+1);
        }
    }
    if(visited[N][N])
        cout<<"POSSIBLE\n";
    else cout<<"NOT POSSIBLE\n";
}
int main()
{
    int T;
    cin>>T;
    while(T--)
    {
        cin>>N;
    for(int i=0;i<=N+1;i++)
        Ar[0][i]=-1,Ar[N+1][i]=-1,Ar[i][0]=-1,Ar[i][N+1]=-1;
    for(int i=1;i<=N;i++)
        for(int j=1;j<=N;j++)
            cin>>Ar[i][j];
    bfs();
    }
}

