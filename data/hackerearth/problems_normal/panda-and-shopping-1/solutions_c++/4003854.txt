#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll t[4*100005];
int a[100005];
int c[100005];
void build(int v,int l,int r)
{
	if(l==r)
	{
		t[v] = a[l];
		return;
	}
	int mid = (l+r)/2;
	build(2*v,l,mid);
	build(2*v+1,mid+1,r);
	t[v] = max(t[2*v],t[2*v+1]);
}
void update(int v, int l,int r, int ind,ll val)
{
	if(l==r){
		t[v] = val;
		return;
	}
	int mid = (l+r)/2;
	if(ind<=mid)update(2*v,l,mid,ind,val);
	else update(2*v+1,mid+1,r,ind,val);
	t[v] = t[2*v];
	if(t[2*v] < t[2*v+1])t[v] = t[2*v+1];
}
ll query(int v, int l, int r, int lo,int hi)
{
	if(lo>hi)return 0;
	if(l==lo && r==hi)return t[v];
	ll fir,sec;
	int mid = (l+r)/2;
	fir = query(2*v,l,mid,lo,min(hi,mid));
	sec = query(2*v+1,mid+1,r,max(lo,mid+1),hi);
	if(fir>sec)return fir;
	return sec;
}
int b[100005];
ll l[100005];
int main()
{
    //cout << "Hello World!" << endl;
    int n;
    scanf("%d",&n);
    int ra = 1;
    map<ll,int> rank;
    int i;
    set<ll> s;
    set<ll>::iterator I;
    for(i=1;i<=n;i++){
    scanf("%d%lld",&b[i],&l[i]);
    s.insert(l[i]);
    }
    for(I=s.begin();I!=s.end();I++)
    rank[*I] = ra++;
    for(i=1;i<=n;i++)
    c[i] = rank[l[i]];
    ll ans = 0;
    for(i=1;i<=n;i++)
    {
    	ll cur = query(1,0,n,0,c[i]);
    //	printf("for rank %d max is %lld\n",c[i],cur);
    	
    	if(b[i] >0){
    		cur += b[i];
    		update(1,0,n,c[i],cur);
    	}
    	if(cur>ans)ans = cur;
    }
    printf("%lld\n",ans);
    return 0;
}
