#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int main()
{
   // printf("Hello World!\n");
   int t;
   scanf("%d",&t);
  for(int ii = 0;ii<t;ii++)
   {
   	ll n,k;
   	scanf("%lld%lld",&n,&k);
  
   	
   	if(k>n)
   	{
   		printf("0\n");
   		continue;
   	//	return 0;
   	}
   	if(k==n)
   	{
   		printf("-1\n");
   		continue;
   	//	return 0;
   	}
   	n = n-k;
  // 	printf("%d %d\n",n,k);
   	int ans = 0;
   	vector<ll> fa;
   	fa.push_back(1);
   //	printf("factoring %d \n",n);
   	for(ll j = 2;j*j <=n;j++)
   	{
		if(n%j==0)
		{
			//	printf("divisible by %d\n",j);
			int l = fa.size();
		//	printf("current size is  %d \n",l);
			vector<ll> cur;
			ll tm = j;
			while(n%j==0)
			{
			
				n/=j;
				cur.push_back(tm);
			//	printf("pushed power %d\n",tm);
				tm*=j;
			}
			int ii;
		//	printf("hence multiply %d new \n",cur.size());
			for(ii = 0;ii<cur.size();ii++)
			{
				int jj;
				for(jj=0;jj<l;jj++){
				fa.push_back(fa[jj] * cur[ii]);
			//	printf("pushed %d\n",fa[jj] * cur[ii]);
				}
			}
		}
   	}
   	if(n!=1)
   	{
   		int l = fa.size();
   		for(int i = 0;i<l;i++)
   		fa.push_back(n * fa[i]);
   	}
   	sort(fa.begin(),fa.end());
   	for(int i = 0;i<fa.size();i++){
   	if(fa[i] > k)ans++;
  // 	printf("%d ",fa[i]);
   	}
   //	printf("\n");
  // if(ans==0)ans = -1;
   	printf("%d\n",ans);
   }
    return 0;
}
