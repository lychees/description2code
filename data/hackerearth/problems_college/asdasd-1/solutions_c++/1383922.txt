/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
vector<int> primes;
int lim=10000000;
int a[10000010];
int cnt[10000010];
void sieve(){
	a[0]=1; a[1]=1; a[2]=0;
	for(int i=2;i*i<=lim;i++){
		if(a[i]==0){
			for(int j=i*i;j<=lim;j+=i)
				a[j]=1; 
		}
	}
	f(i,10000001) if(a[i]==0) primes.pb(i);
}
int eval(int a,int b){
	int ans=0,x;
	if(a%2==0 && b%2==0) ans++;
	while(a%2==0) a/=2;
	x=primes[0];
	for (int i = 0; x*x <= a; i++){
        if(a%x==0 && b%x==0) ans++;
        while (a%x == 0) a/=x;
        x=primes[i+1];
    }
    if(a>1 && b%a==0) ans++;
    return ans;
}

int main(){
	int t,a,b;
	sieve();
	si(t);
	while(t--){
		si(a);si(b);
		a=lpow(2,a)-1;
		b=lpow(2,b)-1;
		printf("%d\n",eval(a,b));
	}
	return 0;
}