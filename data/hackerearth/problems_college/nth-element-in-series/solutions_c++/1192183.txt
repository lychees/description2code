#include <stdio.h>
#define MOD 1000000007
#define LL long long 
using namespace std;
 
long long T[5][5] = {
					1,1,1,2,1,
					1,0,0,0,0,
					0,1,0,0,0,
					0,0,1,0,0,
					0,0,0,1,0
					};
 
LL mat[5][5] = { 0 };
 
void copy(LL temp[][5], LL mat[][5])
{
	for (int i = 0; i < 5; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			temp[i][j] = mat[i][j];
		}
	}
}
 
void multiplyMatrix(LL mat1[][5], LL mat2[][5])
{
	LL temp[5][5] = {0};
 
	for (int i = 0; i < 5; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			for (int k = 0; k < 5; k++)
			{
				temp[i][j] += (mat1[i][k] * mat2[k][j])%MOD;
				
				if (temp[i][j] >= MOD)
					temp[i][j] -= MOD;
			}
		}
	}
 
	copy(mat1, temp);
}
 
void power(int n)
{
	if (n == 0)
		return ;
 
	if (n & 1)
	{
		power(n - 1);
		multiplyMatrix(mat, T);
		return;
	}
 
	// if n is even
	power(n / 2);
	multiplyMatrix(mat, mat);
}
 
void mult(LL f[5])
{
	LL ans = 0;
	for (int i = 0; i < 5; i++)
	{
		ans += (mat[0][i] * f[i])%MOD;
 
		if (ans >= MOD)
			ans -= MOD;
 
	}
 
	printf("%lld\n", ans);
}
 
int main()
{
	long long f[5];
	int t, n;
	scanf("%d", &t);
	while (t--)
	{
		for (int i = 4; i>=0; i--)
			scanf("%lld", &f[i]);
		
		scanf("%d", &n);
 
		if (n < 5)
			printf("%lld\n", f[4-n]);
		
		else
		{
			for (int i = 0; i < 5; i++)
			{
				for (int j = 0; j < 5; j++)
				{
					if (i == j)
						mat[i][j] = 1;
					else mat[i][j] = 0;
				}
			}
			power(n-4);
			mult(f);
		}
	}
	return 0;
}