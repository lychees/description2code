#include <bits/stdc++.h>
using namespace std;
vector<int>v[1600];
int weight[1600];
#define MOD 1000000007
long long int dp[1550][1550];
map<int,int>m;
void dfs(int u,int par)
{
    for(int i=1;i<=weight[u];i++)
    dp[u][i]=1;
    for(int i=0;i<v[u].size();i++)
    {
        int node=v[u][i];
        if(node==par)
        continue;
        dfs(node,u);
        for(int k=1;k<=weight[u];k++)
        dp[u][k]=(dp[u][k]*(dp[node][k]+1))%MOD;
    }
}
int main()
{
	int n,x,u,v1,q;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
	scanf("%d",&weight[i]);
	m[weight[i]];
	}
	for(int i=1;i<=n-1;i++)
	{
	    scanf("%d%d",&u,&v1);
	    v[u].push_back(v1);
	    v[v1].push_back(u);
	    
	}
	int index=1;
	map<int,int>::iterator it;
	for(it=m.begin();it!=m.end();it++)
	{
	    int temp=it->first;
	    m[temp]=index++;
	}
	for(int i=1;i<=n;i++)
	{
	    weight[i]=m[weight[i]];
	}
	dfs(1,0);
	long long int ans[1550];
	memset(ans,0,sizeof ans);
	for(int k=1;k<=1500;k++)
	{
	    
	    for(int i=1;i<=n;i++)
	    {
	        
	        ans[k]=(ans[k]+dp[i][k]-dp[i][k+1]+MOD)%MOD;
	    }
	}
	scanf("%d",&q);
	while(q--)
	{
	    
	    scanf("%d",&x);
	    it=m.find(x);
	    if(it==m.end())
	    cout<<"0\n";
	    else
	    {
	        x=m[x];
	        cout<<ans[x]<<"\n";
	    }
	    
	}
	return 0;
	
	
	
}