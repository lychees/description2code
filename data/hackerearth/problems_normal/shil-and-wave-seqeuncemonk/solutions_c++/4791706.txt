#include<bits/stdc++.h>
using namespace std;
#define pii pair<int,int>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define N 100005
#define ll long long 
#define mod 1000000007
int bit[N];
ll dp[N][2];
int arr[N];
void update1(int ind,int n)
{
    while(ind<=n)
    {
      bit[ind]++;
      ind+=(ind&-ind);
    }
}
ll query1(int ind)
{
     ll val=0;
    while(ind>0)
    {
      val+=bit[ind];
      ind-=ind&-ind;
    }
    return val;
}
void update2(int ind,ll val,int type,int n)
{
    while(ind<=n)
    {
       dp[ind][type]=(dp[ind][type]+val)%mod;
       ind+=(ind&-ind);
    }
}
ll query2(int ind,int type)
{
    ll val=0;
    while(ind>0)
    {
       val=(val+dp[ind][type])%mod;
       ind-=ind&-ind;
    }
    return val;
}
int main()
{
  int n,i;
  ll a,b,ans=0,val1,val2;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
    scanf("%d",&arr[i]);
  for(i=1;i<=n;i++)
  {
      a=query1(arr[i]-1);
      b=query2(arr[i]-1,1);
      val1=(a+b)%mod;
      //cout<<a<<" "<<b<<" ";
      a=query1(N-1)-query1(arr[i]);
      b=query2(N-1,0)-query2(arr[i],0);
      if(a<0)
        a+=mod;
      if(b<0)
        b+=mod;
      val2=(a+b)%mod;
      //cout<<a<<" "<<b<<"\n";
      update1(arr[i],N-1);
      update2(arr[i],val1,0,N-1);
      update2(arr[i],val2,1,N-1);  
      ans=(ans+val1+val2)%mod;
  } 
  printf("%lld\n",ans);
  return 0;
}