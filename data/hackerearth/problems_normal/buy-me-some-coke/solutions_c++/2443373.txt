#include <iostream>
using namespace std;
#include<cstring>
#define INF 1e9
int dp[605][405][155];
int DFS(int remain, int n1, int n5, int n10){
	if (n1 < 0 or n5 < 0 or n10 < 0)
		return INF;
	n1 = min(n1, 600);
	n5 = min(n5, 400);
	n10 = min(n10, 150);
	if (remain == 0)
		return 0;
			if (dp[n1][n5][n10]!=-1)
			return dp[n1][n5][n10];
	   else{
		int &res = dp[n1][n5][n10];
		res = INF;
		//8
		res = min(res, DFS(remain - 1, n1 - 8, n5, n10) + 8);
		res = min(res, DFS(remain - 1, n1 - 3, n5 - 1, n10) + 4);

		//10
		res = min(res, DFS(remain - 1, n1 + 2, n5, n10 - 1) + 1);
		res = min(res, DFS(remain - 1, n1 + 2, n5 - 2, n10) + 2);

		//13
		res = min(res, DFS(remain - 1, n1 - 3, n5 + 1, n10 - 1) + 4);

		//18
		res = min(res, DFS(remain - 1, n1 - 3, n5 - 3, n10 + 1) + 6);
	}
	return dp[n1][n5][n10];
}
int main(){
	int t;
	cin>>t;
	while (t--){
	 memset(dp,-1, sizeof(dp));
		int C, n1, n5, n10;
		scanf("%d %d %d %d", &C, &n1, &n5, &n10);
		int total = n1 * 1 + n5 * 5 + n10 * 10;
		if (total < C * 8){
			puts("-1");
			continue;
		}
		printf("%d\n", DFS(C, n1, n5, n10));
	}
	return 0;
}