#include <stdio.h>
#include <vector>
#include <algorithm>
#define m 1000000007
using namespace std;

inline long long int fast_input(void)
{
	char t;
	long long int x=0;
	long long int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
    while(t>=48 && t<=57)
    {
        x=(x<<3)+(x<<1)+t-48;
        t=getchar();
    }
	if(neg)
		x=-x;
	return x;
}

inline void fast_output(long long int x)
{
	char a[20];
	long long int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

vector<int> adjlist[100001];

bool visited[100001];

int dfs(int s)
{
    int curr=1;
	visited[s] = true;
	for(int i = 0; i < adjlist[s].size(); i++)
	{
		if(!visited[adjlist[s][i]])
			curr+=dfs(adjlist[s][i]);
	}
	return curr;
}

long long int x[100001];

void make()
{
    int i;
    x[0]=1;
    x[1]=1;
    for(i=2;i<100001;i++)
    {
        x[i]=x[i-1]*i;
        if (x[i]>m) x[i]%=m;
    }
}

int main()
{

long long int n,k,r,ans=1,a,b,i;
make();
n=fast_input();
k=fast_input();
for(i=0;i<k;i++)
{
    a=fast_input();
    b=fast_input();
    adjlist[a].push_back(b);
    adjlist[b].push_back(a);
}
for(i=0;i<n;i++)
{
    if(!visited[i])
    {
        r=dfs(i);
        ans*=x[r];
        if (ans>m) ans%=m;
    }
}
fast_output(ans);
return 0;
}
