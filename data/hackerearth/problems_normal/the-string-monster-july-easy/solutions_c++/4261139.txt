#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define rep(i,a) for(ll i=0;i<a;++i)
#define repp(i,a,b) for(ll i=a;i<b;++i)
#define all(c) (c).begin(), (c).end()
#define FILL(a,x) memset(a,x,sizeof(a))
#define    foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
ll M=1e9+7;



ll mpe(ll base, ll exponent, ll modulus)
{  
    ll result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = result*base%modulus ;
        exponent = exponent >> 1;
        base =  base*base%modulus ;
    }
    return result;
}
 int cnt[35][30];
 vector<int> req;
 
 int fun(int ind,vector<int> vec){
     if(ind<0)return 0;
     int f=0,f1=1;
     rep(i,27)if(vec[i]!=0)f=1;
     if(f==0)return 1;
     if(ind==0){
         f=1;
         rep(i,27)if(vec[i]!=cnt[ind][i])return 0;
         return 1;
     }
     f=fun(ind-1,vec);
     rep(i,27){
         vec[i]=vec[i]-cnt[ind][i];
         if(vec[i]<0){
             f1=0;
             break;
         }
     }
     if(f1==1)f1=fun(ind-1,vec);
     return (f||f1);
 }
 
int main()
{
    fastScan;
    ll t;
    cin>>t;
    while(t--){
        FILL(cnt,0);
        req.clear();
        rep(i,28)req.pb(0);
        string str;
        ll n;
        cin>>n;
        rep(i,n){
            cin>>str;
            rep(j,str.size())cnt[i][str[j]-'a']++;
        }
        cin>>str;
        rep(i,str.size())req[str[i]-'a']++;
        ll f=0;
         f=fun(n-1,req);
        if(f==0)cout<<"NO"<<endl;
        else cout<<"YES"<<endl;
    }
    
    
    return 0;
}