//

#include<iostream>

using namespace std;

int main(void){
	int T=0;
	cin >>T;
	while(T--){
		int left[20] = {0};
		int N =0;
		cin >>N;
		int root = 0;
		cin >> root;
		cout << root<<endl;
		int curr_level_node = 2;
		int curr = 2;
		bool flag_left = 0;
		bool flag_right = 0;
		int left_val = 0;
		int right_val = 0;
		int left_pos = 0;
		int right_pos = 0;
		int left_index = 0;
		for(int i=1;i<N;i++){
			curr--;
			int element = 0;
			cin >>element ;
			if(element!=0){
				if(!flag_left){
					left_pos = i;
					left_val = element;
					flag_left = 1;
				}
				flag_right = 1;
				right_val = element;			
				right_pos = i;
			}
			if(curr ==0){
				if(right_pos==left_pos && right_pos!=0){	
					cout << right_val<<endl;
				}
				else if(right_pos!=0 && right_pos!=left_pos){
					cout << right_val <<endl;
					left[left_index]  = left_val;
					left_index++;
				}
				flag_left = 0;
				flag_right =0;
				left_val = 0;
			        right_val = 0;
		                left_pos = 0;
                		right_pos = 0;
				curr_level_node *=2;
				curr = curr_level_node;
			}
		}
		
		for(int j=0;j<left_index;j++){
			cout << left[j]<<endl;
		}		
		cout <<endl;
	}
	
	return 0;

}

