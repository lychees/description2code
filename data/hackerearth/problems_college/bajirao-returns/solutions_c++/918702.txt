#include <iostream>
using namespace std;
#include <stdio.h>

int Maxp(int a[101][101],int s[101][101],int node[101],int n,int i,int j){
	if(j<1 || j>n || node[j]) return -1;
	int t,max;
	node[j]=1;
	if(s[i][j]==-1){
		max=a[i][j];
		t=Maxp(a,s,node,n,i,2*j);
		if(t>max) max=t;
		t=Maxp(a,s,node,n,i,j/2);
		if(t>max) max=t;
		return max;
	}
	else return s[i][j];

}






int main()
{
    int a[101][101],s[101][101],node[101],i,j,t,k,n,sum,max;
    scanf("%d",&n);
    for(i=1;i<=n;i++){
    	for(j=1;j<=n;j++){
    		scanf("%d",&a[i][j]);
    		s[i][j]=-1;
    	}
    }
    for(i=n;i>0;i--){
    	for(j=1;j<=n;j++){
    		for(k=1;k<=n;k++) node[k]=0;
    		t=Maxp(a,s,node,n,i,j);
    		s[i][j]=t;
    	}
    	if(i>1){
    		for(j=1;j<=n;j++) a[i-1][j]+=s[i][j];
    	}
    }
    max=s[1][1];
    for(i=2;i<=n;i++){
    	if(a[1][i]>max) max=s[1][i];
    }
    cout<<max<<"\n";
    return 0;
}
