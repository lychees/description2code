#include <bits/stdc++.h>
#define vec vector
#define sz(c) int(c.size())
#define FOR(i, a, b) for (int i = a; i < (b); ++i)
#define DOWN(i, a, b) for(int i = (a) - 1; i >= (b); --i)
#define cerr2 cerr << __func__ << ":" << __LINE__ << ": "
#define rank THE_rank
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef vec<int> vi;
const char eol = '\n';

int n, m;
vec<pii> e;
vi pr;
vi rank;

int get(int x) {
  return x == pr[x] ? x : pr[x] = get(pr[x]);
}

void merge(int x, int y) {
  if (rank[y] > rank[x]) swap(x, y);
  if (rank[x] == rank[y]) rank[x] += 1;
  pr[y] = x;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout << fixed << setprecision(10);

  cin >> n >> m;
  e = vec<pii>(m);
  FOR(i, 0, m) {
    cin >> e[i].first >> e[i].second;
  }

  pr = vi(n);
  rank = vi(n);
  FOR(i, 0, n) {
    pr[i] = i;
    rank[i] = 1;
  }

  vi res;
  DOWN(i, m, 0) {
    int x = get(e[i].first - 1);
    int y = get(e[i].second - 1);
    if (x == y) {
      res.push_back(i);
    }
    else {
      merge(x, y);
    }
  }

  cout << sz(res) << eol;
  DOWN(i, sz(res), 0) cout << res[i] + 1 << eol;

  return 0;
}
