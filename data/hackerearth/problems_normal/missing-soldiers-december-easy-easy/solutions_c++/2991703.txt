#include <iostream>
#include <stdio.h>
#include <sstream>
#include <fstream>
#include <string>
#include <string.h>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <climits>
using namespace std;
#define FOR(index, start, end) for(int index = start; index < end; index++)
#define RFOR(index, start, end) for(int index = start; index > end; index--)
#define FOREACH(itr, b) for(auto itr = b.begin(); itr != b.end(); itr++)
#define RFOREACH(itr, b) for(auto itr = b.rbegin(); itr != b.rend; itr++)
typedef long long ll;
typedef pair<int, int> pii;

bool operator<(pii a, pii b)
{
	if (a.first != b.first)
	{
		return a.first < b.first;
	}
	else
	{
		return b.second > a.second;	
	}
}

int main()
{
	int n;
	scanf("%d", &n);
	vector<pii> v;
	FOR(i, 0, n)
	{
		int x, y, d;
		scanf("%d%d%d", &x, &y, &d);
		pii p = { x, x + d };
		v.push_back(p);
	}
	sort(v.begin(), v.end());
	vector<pii> ans;
	ans.push_back(v[0]);
	FOR(i, 1, v.size())
	{
		if (v[i].first <= ans.back().second && v[i].second > ans.back().second)
		{
			ans.back().second = v[i].second;
		}
		else if (v[i].first > ans.back().second)
		{
			ans.push_back(v[i]);
		}
	}
	ll a = 0;
	FOR(i, 0, ans.size())
	{
		a += ll(ans[i].second) - ans[i].first + 1;
	}
	cout << a << endl;
}
