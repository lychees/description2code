#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <limits>
#include<stack>
#include<queue>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
using namespace std;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n)  for(int i=0;i<n;i++)
#define REP(i,n)  for(int i=1;i<=n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)    a.begin(),a.end()
#define si(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define MOD 1000000007
#define LL long long
typedef vector<vector<LL> > matrix;

int N;
matrix mul(matrix A,matrix B)
{
    matrix C(N+2, vector<LL>(N+2));
    REP(i,N)
        REP(j,N)
            REP(k,N)
                C[i][j] = (C[i][j]+A[i][k]*B[k][j])%MOD;
    return C;
}

matrix pow(matrix A, LL p)
{
    if (p == 1)
        return A;
    if (p&1)
        return mul(A, pow(A, p-1));
    matrix X = pow(A, p/2);
    return mul(X, X);
}

int main()
{
    int T;
    si(T);
    while(T--)
    {
        int u,v;
        LL k;
        si(N);
        sl(k);
        si(u);si(v);
        matrix X(N+2, vector<LL>(N+2));
        REP(i,N)
            REP(j,N)
                si(X[i][j]);
        X = pow(X,k);
        cout<<X[u+1][v+1]<<endl;
    }
	return 0;
}
