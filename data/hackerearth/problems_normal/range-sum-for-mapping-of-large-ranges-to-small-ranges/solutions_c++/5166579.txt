#include "bits/stdc++.h"

using namespace std;

#define TEST(T) int T; cin>>T; while(T--)
#define ll long long
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define ins insert
#define pii pair<int,int>
#define all(V) V.begin(),V.end()
#define clr(V,val) memset(V,val,sizeof(V))
#define rep(X,A,N,C) for(X=A;X<=N;X+=C)
#define rept(X,A,N,C) for(X=A;X>=N;X-=C)
#define sci(X) scanf("%d",&X)
#define scl(X) scanf("%lld",&X)
#define scs(X) scanf("%s",&X)
#define pfi(X) printf("%d",X)
#define pfl(X) printf("%lld",X)
#define pfs(X) printf("%s",X)
#define sp printf(" ")
#define nxt printf("\n")

const int MX=1e6 + 5;

const int INF=1e9;

const int M=1000000007;


            /*************************/
/********** I GOTTA DO WHAT I GOTTA DO ********/
           /*************************/
           
     
ll fact[MX];

void facto()
{
	int x;
	
	fact[0]=1;
	
	rep(x,1,100000,1)
		fact[x]=(x*fact[x-1])%M;
		
}

ll power(ll base,ll exp,ll mod)
{
	ll res=1;
	
	while(exp>0)
	{
		if(exp&1) res=(res*base)%mod;
		
		base=(base*base)%mod;
		
		exp=exp/2;
	}
	
	return res;
}

ll ncr(int n,int r)
{
	
	if(n<2) return 1;
	
	ll num=fact[n];
	ll den=(fact[n-r]*fact[r])%M;
	
	ll ans=(num*(power(den,M-2,M)))%M;
	
	return ans;
}

vector<vector<int> >v;
int vi[MX]={0},c=0;

void dfs(int n)
{
	vi[n]=1;
	c++;
	
	int x,t;
	
	for(x=0;x<v[n].size();x++)
	{
		t=v[n][x];
		
		if(!vi[t]) dfs(t);
	}
}


int main()
{
	
	facto();
	
	TEST(t)
	{
		int n,m;
		
		ll ans=1;
		ll abhi;
		
		sci(n);
		sci(m);
		
		clr(vi,0);
		v.resize(n+5);
		v.clear();
		
		while(m--)
		{
			int a,b;
			
			sci(a);
			sci(b);
			
			v[a].pb(b);
			v[b].pb(a);
		}
		
		int x;
		
		rep(x,1,n,1)
		{
			if(!vi[x])
			{
				c=0;
				dfs(x);
				
				abhi=ncr(c,2);
				
				ans=ans*abhi;
				ans%=M;
			}
		}
		
		pfl(ans);
		nxt;
		
		
	}
	
	
}