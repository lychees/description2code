// Hackerearth - The Colorful Street
// Dynamic Programming

#include <stdio.h>
#include <iostream>

using namespace std;
typedef long long LL;

int min(int a, int b, int c)
{
  return min(a, min(b, c));
}

int n;
int cost[25][3], dp[25][3];

int main()
{
  int t;

  scanf("%d",&t);
  while(t--)
  {
    scanf("%d",&n);
    for(int i = 0; i < n; ++i)
     scanf("%d %d %d", &cost[i][0], &cost[i][1], &cost[i][2]);

    for(int i = 0; i < 3; ++i)
     dp[0][i] = cost[0][i];
        
    for(int i = 1; i < n; ++i)
    {
      dp[i][0] = min(dp[i - 1][1], dp[i - 1][2]) + cost[i][0];
      dp[i][1] = min(dp[i - 1][2], dp[i - 1][0]) + cost[i][1];
      dp[i][2] = min(dp[i - 1][1], dp[i - 1][0]) + cost[i][2];
    }

    printf("%d\n", min(dp[n - 1][0], dp[n - 1][1], dp[n - 1][2]));
  }

  return 0;
}