#include <iostream>
#include <map>
#include <string>
#include <vector>
using namespace std;

int main()
{
	int n,m,t,amount,q,tobepaid;
	cin>>t;
	while(t--)
	{
		map<string, pair<int,int> > wallet;
		vector<string> temp;
		cin>>n>>q;
		string name,sharer;
		for(int i=0;i<n;i++)
		{
			cin>>name;
			temp.push_back(name);
			wallet[name]=make_pair(0,0);
		}
		while(q--)
		{
			cin>>name;
			cin>>amount;
			cin>>m;
			int tmp=m;
			tobepaid=amount/(m+1);
			while(m--)
			{
				cin>>sharer;
				wallet[sharer].first+=tobepaid;
			}
			wallet[name].first+=tobepaid+amount-tobepaid*(tmp+1);
			wallet[name].second+=amount;
		}
		for(int i=0;i<n;i++)
		{
			map<string,pair<int,int> >::iterator it=wallet.find(temp[i]);
			if((it->second).first==(it->second).second)
			cout<<it->first<<" "<<"neither owes nor is owed\n";
			else if((it->second).first>(it->second).second)
			cout<<it->first<<" owes "<<(it->second).first-(it->second).second<<"\n";
			else
			cout<<it->first<<" is owed "<<(it->second).second-(it->second).first<<"\n";
		}
	}
    return 0;
}
