/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
vector<ll> v;
int main(){
	ll t,s,n,l,x,c,ans,p;
	sl(t);
	while(t--){
		v.clear(); ans=0;
		sl(s);sl(n);sl(l);
		f(i,n){
			sl(x);
			v.pb(x);
		}
		sv(v);
		p=lower_bound(v.begin(),v.end(),s-l)-v.begin();
		if(p==n) p--;
		if(v[p]>=s-l)p--;
		f(i,n){
			if(v[i]>l){
				c=n-1-i;
				ans+=c;
			}
			else{
				x=v[i]+l+1;
				c=lower_bound(v.begin(),v.end(),x)-v.begin();
				ans+=(n-c);
				if(c > p && p > i) ans+=(p-i);
				else if(c<=p) ans+=(c-1-i);
			}
		}
		printf("%Ld\n",ans);
	}
	return 0;
}