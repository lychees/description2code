#include <iostream>
#include <bits/stdc++.h>
using namespace std;
vector<int> G[100005];
int visited[100005];
int F=0;

bool dfs(int a, int b){
	visited[a]=1;
	
	for(int i=0;i<G[a].size();i++){
		
		if(G[a][i]==b){
			F=1;
			break;
		}
		if(!visited[G[a][i]]){
			dfs(G[a][i],b);
		}
	}
	if(F==1)
		return true;
	else
		return false;
}
int main()
{
	for(int i=0;i<100005;i++){
		G[i].clear();
		visited[i]=0;
	}
	int n;
	cin>>n;
	int c,a,b;
	cin>>c;
	for(int i=0;i<c;i++){
		cin>>a>>b;
		G[a].push_back(b);
		G[b].push_back(a);
	}
	
	int q;
	cin>>q;
	while(q--){
		cin>>a>>b;
		int flag=0;
		for(int i=0;i<G[a].size();i++){
			if(G[a][i]==b){
				flag=1;
				break;}
		}
		
		if(flag==1)
			cout<<"Direct Connection\n";
		else{
			
			for(int i=0;i<100005;i++){
				visited[i]=0;
			}
			F=0;
			if(dfs(a,b)==true){
				cout<<"Indirect Connection\n";
			}else
				cout<<"No Connection\n";
		}
	}
	return 0;
}
