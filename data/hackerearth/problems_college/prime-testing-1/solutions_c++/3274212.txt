#include<bits/stdc++.h>
#define LOCAL
//#define DEBUG
#define CIN(n) scanf("%d",&n)
#define CINL(n) cin>>n
#define CINF(n) scanf("%f",&n)
#define FOR(i,j,n) for(i=j;i<=n;i++)
#define FORR(i,j,n) for(i=j;i>=n;i--)
#define SORT(n) std::sort(n.begin(),n.end())
#define FILL(n,a) std::fill(n.begin(),n.end(),a)
#define ALL(n) n.begin(),n.end()
#define rsz resize
#define pb push_back
#define MAXINT std::numeric_limits<int>::max()
#define MININT std::numeric_limits<int>::min()
#define getchar gc
#define putchar pc
#define iOS std::ios_base::sync_with_stdio(false)
#define endl "\n"
#ifdef DEBUG
	#define debug(x) cout << #x << " = " << x << endl
#else
	#define debug(x)
#endif
using namespace std;
typedef long long ll;
typedef long double ld;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<bool> VB;
typedef vector<vector<int> > VVI;
typedef vector<vector<ll> > VVL;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int MOD=1000000007;
void add(int &a, int b) {
	a+=b;
	if(a>=MOD)
		a-=MOD;
}

void mult(int &a, int b) {
	//ll temp=(ll)(a%MOD)*(b%MOD);	Use in case a and b are not MODified
	ll temp=ll(a)*ll(b);
	if(temp>=ll(MOD))
		temp%=ll(MOD);
    a=temp;
	//return (((ll)(a%MOD) * (b%MOD)) % MOD);
}

void sub(int &a,int b) {
	add(a,MOD-b);
}

int mpow(int b,int p) {
	int ret=1;
	while(p>0) {
		if(p&1) {
			mult(ret,b);
		}
		p=(p<<1);
		mult(b,b);
	}
	return ret;
}

ll ciel(ll num,ll denom) {
	bool neg=false;
	if(denom<0LL) {
		num*=-1LL;
		denom*=-1LL;
	}
	if(num<0LL) {
		neg=true;
		num*=-1;
	}
	ll q=num/denom;
	if(neg) return -q;
	if(num%denom == 0LL) return q;
	return (q+1LL);
}
ll floor(ll num, ll denom) {
	bool neg=false;
	if(denom<0LL) {
		num*=-1LL;
		denom*=-1LL;
	}
	if(num<0LL) {
		neg=true;
		num*=-1;
	}
	ll q=num/denom;
	if(!neg) return q;
	return (-q-1LL);

}

/**************** TEMPLATE ENDS HERE *************************/
const int MAXN=1000001;
const int MAXA=1001;
bool sieve[MAXA];
void calc() {
	int i;
	memset(sieve,true,sizeof(sieve));
	sieve[0]=false;
	sieve[1]=false;
	FOR(i,2,MAXA-1) if(sieve[i]) {
		for(int j=i*i;j<MAXA;j+=i) sieve[j]=false;
	}
}
int a[MAXN];
int main() {
	int t,n,m,s,i,v;
	cin>>t;
	calc();
	while(t--) {
		cin>>n;
		FOR(i,0,n-1) cin>>a[i];
		int cnt=0;
		FOR(i,0,n-1) if(sieve[a[i]]) cnt++;
		cout<<cnt<<endl;
	}
	return 0;
}