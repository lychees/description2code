# Read Inputs
n, m = map(int, raw_input().split())
# req,time,index,solution
arr = [[0, 0, 0, 0] for i in range(n)]
cabs = [0 for i in range(m)]
for i in range(n):
    arr[i][0], arr[i][1] = map(int, raw_input().split())
    arr[i][2] = i


def solution(arr, cabs):
    global n, m
    i = 0
    sorted_request = sorted(arr, key=lambda x: x[0])
    while i < n:
        cab = find_cab(cabs, sorted_request[i][0])
        sorted_request[i][3] = cab+1 if cab != -1 else cab
        update_cab(cabs, cab, sorted_request[i][0]+sorted_request[i][1])
        i += 1
    sorted_index = sorted(sorted_request, key=lambda x: x[2])
    for i in range(n):
        print sorted_index[i][3],


def find_cab(cabs, time):
    global m
    i = 0
    while i < m:
        if cabs[i] <= time:
            return i
        i += 1
    return -1


def update_cab(cabs, i, time):
    if i >= 0:
        cabs[i] = time


solution(arr, cabs)
