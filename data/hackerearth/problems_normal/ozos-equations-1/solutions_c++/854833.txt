#include <iostream>
#include <cmath>
#include <algorithm>
using namespace std;
int sum_digits(long long n){
   int r = 0;
   while (n){
   	r += n%10;
   	n /= 10;
   }
     //  r, n = r + n % 10, n / 10
   
   return r;
}
int main()
{
    int t;
    long long n;
    long long x;
    scanf("%d",&t);
    //cout << sum_digits(12345) << endl;
    while(t--){
    	scanf("%lld",&n);
    	//int ba;
    	bool find = false;
    	long long ans;
    	long long l = max((long long)0,(long long)sqrt(n)-82);
    	long long r = sqrt(n)+1;
    	for(long long i = l;i<=r;i++){
    		if (i*i+sum_digits(i)*i==n){
    			find = true;
    			ans = i;
    			break;
    	
    		}
    		
    	}
    /*	long long ans = 1000000000000000000;
    	for(int b=1;b<=82;b++){
    		long long bx = sqrt(b*b+4*n);
    //		cout << bx << endl;
    		if (bx*bx!=b*b+4*n) continue;
    	//	if ((bx-b)&1) continue;
    		x = (long long)(bx-b)/2;
    		if (x>0 && b==sum_digits(x) && x*x+b*x==n){
    			find = true;
    			ans = min(ans,x);
    		//	break;
    		}*/
    //	}
    	if (find) printf("%lld\n",ans);
    	else printf("-1\n");
    }
    return 0;
}
