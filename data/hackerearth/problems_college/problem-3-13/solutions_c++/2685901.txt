#include <bits/stdc++.h>
#define LL long long int
#define mod 1000000007
#define maxn 1251
using namespace std;

int n;// vertices and source

int row,col;
int a[1001][1001], l[1001][1001],r[1001][1001],u[1001][1001],d[1001][1001];


void rc(){
    for(int i=0;i<row;i++)
        for(int j=0;j<col;j++){
            int start = j;
            while((j+1)<col && a[i][j+1]==a[i][start])
                j++;
            for(int k=start;k<=j;k++)
                r[i][k] = abs(k-start);
    }
}

void lc(){
    for(int i=0;i<row;i++)
        for(int j=col-1;j>=0;j--){
            int start = j;
            while((j-1)>=0 && a[i][j-1]==a[i][start])
                j--;
            for(int k=start;k>=j;k--)
                l[i][k] = abs(k-start);
    }
}

void uc(){
    for(int i=0;i<col;i++)
        for(int j=0;j<row;j++){
            int start = j;
            while((j+1)<row && a[j+1][i]==a[start][i])
                j++;
            for(int k=start;k<=j;k++)
                u[k][i] = abs(k-start);
    }
}

void dc(){
    for(int i=0;i<col;i++)
        for(int j=row-1;j>=0;j--){
            int start = j;
            while((j-1)>=0 && a[j-1][i]==a[start][i])
                j--;
            for(int k=start;k>=j;k--)
                d[k][i] = abs(k-start);
    }
}


void pre(){
    cin >> row >> col;
    for(int i=0;i<row;i++)
        for(int j=0;j<col;j++)
            cin >> a[i][j];

}

void solve(){
    pre();
    rc(); lc(); uc(); dc();

    int ans = -1;

    for(int i=0;i<row;i++)
        for(int j=0;j<col;j++){
            int x = max(r[i][j],l[i][j]),y = max(u[i][j],d[i][j]);
            ans = max(ans,x+y+1);
        }

    cout << ans;

}

int main() {
    ios_base::sync_with_stdio(false);
    solve();

	return 0;
}
