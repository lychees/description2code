// The truth is always either terrible or boring
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define rep1(i,a,b) for(int i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(int i = b, _a = (a); i >= _a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple // remember tie & ignore
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int __t; cin >> __t; rep1(_t,1,__t)
#define case(ans) "Case #" << _t << ": " << ans << "\n"
#define cout(d) cout << fixed << setprecision(d)
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1e9 + 7;
int a[110][110];
bool pos[110][110][550];

int main() {
//    ios_base::sync_with_stdio(false); cin.tie(NULL);
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    cases {
        mem(pos, false);
        int n, m, k;
        cin >> n >> m >> k;
        pos[0][0][0] = true;
        rep1(i,1,n)rep1(j,1,m) cin >> a[i][j];
        
        rep1(i,1,n)rep1(j,1,m)rep1(v,a[i][j],k) {
            pos[i][j][v] |= pos[i-1][j][v - a[i][j]];
            pos[i][j][v] |= pos[i][j-1][v - a[i][j]];
            pos[i][j][v] |= pos[i-1][j-1][v - a[i][j]];
        }
                
        int ans(k);
        while(ans >= 0) { if(pos[n][m][ans]) break; ans--;}
        cout << ans << endl;
    }
    return 0;
}