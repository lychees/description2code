#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define ff first
#define ss second
#define pb push_back
#define pf pop_front
#define ins insert
#define IOS ios::sync_with_stdio(false)
int n,a[1300][1300],b[1300][1300],u,v;
ll mur[1300],mut[1300],mvr[1300],mvt[1300];
pair<ll,ll> top;
set<pair<ll,ll> > s;
int main()
{
	IOS;
	cin>>n;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			cin>>a[i][j];
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			cin>>b[i][j];
	cin>>u>>v;
	for(int i=0;i<1300;i++)
	{
		mur[i]=1000000000;
		mut[i]=1000000000;
		mvr[i]=1000000000;
		mvt[i]=1000000000;
	}
	mur[u]=0;
	s.ins(mp(0,u));
	while(!s.empty())
	{
		top=*s.begin();
		s.erase(s.begin());
		int ux=top.ss;
		for(int i=1;i<=n;i++)
		{
			if(i==u)
				continue;
			if(mur[ux]+a[ux][i]<mur[i])
			{
				if(mur[i]!=1000000000)
					s.erase(s.find(mp(mur[i],i)));
				mur[i]=mur[ux]+a[ux][i];
				s.ins(mp(mur[i],i));
			}
		}
		//cout<<"yes"<<endl;
	}
	//cout<<"hello"<<endl;
	s.clear();
	mut[u]=0;
	s.ins(mp(0,u));
	while(!s.empty())
	{
		top=*s.begin();
		s.erase(s.begin());
		int ux=top.ss;
		for(int i=1;i<=n;i++)
		{
			if(i==u)
				continue;
			if(mut[ux]+b[ux][i]<mut[i])
			{
				if(mut[i]!=1000000000)
					s.erase(s.find(mp(mut[i],i)));
				mut[i]=mut[ux]+b[ux][i];
				s.ins(mp(mut[i],i));
			}
		}
	}
	s.clear();
	mvt[v]=0;
	s.ins(mp(0,v));
	while(!s.empty())
	{
		top=*s.begin();
		s.erase(s.begin());
		int ux=top.ss;
		for(int i=1;i<=n;i++)
		{
			if(i==v)
				continue;
			if(mvt[ux]+b[i][ux]<mvt[i])
			{
				if(mvt[i]!=1000000000)
					s.erase(s.find(mp(mvt[i],i)));
				mvt[i]=mvt[ux]+b[i][ux];
				s.ins(mp(mvt[i],i));
			}
		}
	}
	s.clear();
	mvr[v]=0;
	s.ins(mp(0,v));
	while(!s.empty())
	{
		top=*s.begin();
		s.erase(s.begin());
		int ux=top.ss;
		for(int i=1;i<=n;i++)
		{
			if(i==v)
				continue;
			if(mvr[ux]+a[i][ux]<mvr[i])
			{
				if(mvr[i]!=1000000000)
					s.erase(s.find(mp(mvr[i],i)));
				mvr[i]=mvr[ux]+a[i][ux];
				s.ins(mp(mvr[i],i));
			}
		}
	}
	s.clear();
	ll ans=1000000000;
	//cout << mur[3] <<" " << mvt[3] << endl;
	for(int i=1;i<=n;i++)
	{
		if(i==u || i==v)
			continue;
		ans=min(ans,mur[i]+mvt[i]);
		ans=min(ans,mut[i]+mvr[i]);
	}
	cout<<ans<<endl;
}