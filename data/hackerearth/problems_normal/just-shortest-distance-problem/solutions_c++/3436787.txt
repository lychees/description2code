#include <bits/stdc++.h>

using namespace std;

#define REP(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORI(i,n) REP(i,1,n)
#define FOR(i,n) REP(i,0,int(n)-1)
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define ll long long
#define FOREACH(i,t) for (typeof(t.begin()) i = t.begin(); i != t.end(); ++i)
#define fi first
#define se second
#define SZ(v) int(v.size())

const int maxn = 1010;
const int inf = 1000100100;

int dist[maxn];
vi g[maxn];

void bfs(int u) {
	queue<int> q;
	q.push(u);
	while (!q.empty()) {
		u = q.front();
		q.pop();
		FOR(i,SZ(g[u])) {
			int v = g[u][i];
			if (dist[v] > dist[u]+1) {
				dist[v] = dist[u]+1;
				q.push(v);
			}
		}
	}
}

int main() {
	int n,m;
	scanf("%d%d", &n, &m);
	FORI(i,n) dist[i] = inf;
	dist[1] = 0;
	FOR(i,m) {
		int T,x,y;
		scanf("%d", &T);
		if (T==1) {
			scanf("%d", &x);
			printf("%d\n", dist[x] == inf ? -1 : dist[x]);
		} else {
			scanf("%d%d", &x, &y);
			g[x].push_back(y);
			if (dist[y] > dist[x]+1) {
				dist[y] = dist[x]+1;
				bfs(y);
			}
		}
	}
	return 0;
}
