//My Code
//Jasbir Singh
#include<map>
#include<cstdio>
#include<vector>
#include<queue>
using namespace std;
#define gc getchar_unlocked
inline void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
double ar[20][20];  // To Store inputs
double ans[300400];  // to store answers
int f[300040];  // for flags
queue<int> q;  // My queue
#define gc getchar_unlocked

int neg;

int scandigits(double *x, int div) {
  register int c = gc();
  register double pow10 = 1;
  if ( x == NULL ) {
    return -1;
  }
  *x = 0;
  while ( (c < '0' || c > '9') && c != '-' ) {
    c = gc();
  }
  if ( c == '-' ) {
    neg = 1;
    c = gc();
  }
  while ( !(c < '0' || c > '9') ) {
    *x *= 10;
    *x += (c - '0');
    pow10 *= 10;
    c = gc();
  }
  if ( neg )
    *x = -*x;
  if ( div )
    *x /= pow10;
  return c;
}

 void scandouble(double *x) {
  double left, right = 0;
  if ( x == NULL ) {
    return;
  }
  neg = 0;
  int ret = scandigits(&left, 0);
  if ( ret == '.' )
    scandigits(&right, 1);
  *x = left + right;
}
int main()
{
	int N; scanint(N);
	for(int i=0;i<N;i++)
	for(int j=0;j<N;j++)
	scandouble(&ar[i][j]);
	//scanf("%lf",&ar[i][j]);  // scanning array
	int s= 1<<N; s--;
	f[s]=1; q.push(s);  // pushing
	ans[s]=1.0;
	while(q.size())
	{
		int t=q.front(); q.pop();
		int cc=0;
		for(int i=0;i<N;i++)
		{
			int tt= t & (1<<i); if(tt) cc++;  // here
		}
		
		int mp = cc * (cc -1); mp/=2;
		float pp= 1.0/mp;
		for(int i=0;i<N;i++)
		{
			int tt= t & (1<<i); if(tt==0) continue;
			for(int j=0;j<i;j++)
			{  //starting
				tt= t & (1<<j); if(tt==0) continue;
				int x=(1<<i) ^ t ;
				if(!f[x])
				q.push(x);
				f[x]=1;
				ans[x] += ar[j][i]*ans[t]*pp;
				// processnig
				x=(1<<j) ^ t ;
				if(!f[x])
				q.push(x);
				f[x]=1;
			//ending
				ans[x]+=ar[i][j]*ans[t]*pp;
				
			}
		}
		
		
	}
		for(int i=0;i<N;i++)
		{
			int t= 1<<i;
			printf("%.5f ",ans[t]); //printning result
		}
	
}