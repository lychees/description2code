#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstring>
 
#define REP(a,b) for (int a = 0; a < b; a++)
#define FOR(a,b,c) for (int a = b; a <= c; a++)
#define RESET(a,b) memset(a,b,sizeof a)
 
#define INF 2123123123
#define LL long long
#define MAXN 1000002
using namespace std;
 
int N;
int ar[MAXN];
int pex[MAXN],px;
int bitt[MAXN];
 
inline void update(int x, int v){
   for (int i = x; i < MAXN; i += i & -i){
      bitt[i] = max(bitt[i], v);
   }
}
 
inline int query(int x){
   int ret = 0;
   for (int i = x; i; i -= i & -i){
      ret = max(ret, bitt[i]);
   }
   return ret;
}
 
int main(){
	int t;
	scanf("%d",&t);
	while(t--)
	{
		memset(ar,0,sizeof ar);
		memset(pex,0,sizeof pex);
		memset(bitt,0,sizeof bitt);
		
	
   px = 0;
    
   scanf("%d", &N);
   FOR(i,1,N){
      scanf("%d", &ar[i]);
      if (ar[i] - i >= 0){
         pex[px++] = ar[i] - i;
      }
   }
   pex[px++] = 0;
   // one based
   pex[px++] = -1;
    
   sort(pex, pex + px);
   px = unique(pex, pex + px) - pex;
    
   int lis = 0;
   FOR(i,1,N){
      if (ar[i] - i >= 0){
         int id = lower_bound(pex, pex + px, ar[i]-i) - pex;
         int dpi = query(id) + 1;
          
         lis = max(lis, dpi);
         update(id, dpi);
      }
   }
    
   printf("%d\n", N - lis);
	}
}