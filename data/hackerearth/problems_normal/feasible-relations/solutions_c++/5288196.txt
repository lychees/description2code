//feasible relation.cpp
#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define sf scanf
#define sf_d(var) scanf("%d",&var)
#define sf_c(var) scanf("%c",&var)
#define sf_2d(var1,var2) scanf("%d %d",&var1,&var2)
#define sf_3d(var1,var2,var3) scanf("%d %d %d",&var1,&var2,&var3)
#define sf_dd(var) scanf("%lld",&var)
#define sf_2dd(var1,var2) scanf("%lld %lld",&var1,&var2)
#define sf_3dd(var1,var2,var3) scanf("%lld %lld %lld",&var1,&var2,&var3)
#define pf printf
#define pf_d(var) printf("%d",var)
#define pf_dd(var) printf("%lld",var)
#define psp printf(" ")
#define pnlin printf("\n")
#define vi vector<int>
#define vvi vector< vector<int> >
#define pb push_back
#define v_iter vector<int>::iterator
#define v_riter vector<int>::reverse_iterator
#define fr_z(start,end) for(int z=start;z<end;z++)
#define fr_o(start,end) for(int o=start;o<end;o++)
#define tr(cont,it) for(typeof(cont.begin()) it=cont.begin();it!=cont.end();it++)
#define mod 1000000007
#define srt(cont) sort(cont.begin(),cont.end())
#define all(m) m.begin(),m.end()
#define mp make_pair
#define fa_io std::ios::sync_with_stdio(false)
#define fil(v,k) iota(all(v),k)

inline int root(int x,vector< int >& v)
{
    while(v[x]!=x)
        x=v[x];
    return x;    
}

void unite(int x,int y,vector< int >& v,vector< int >& vs)
{
    int root_x,root_y;
    root_x=root(x,v);
    root_y=root(y,v);
    if(vs[root_x]<vs[root_y])
    {
        v[root_x]=root_y;
        vs[root_y]++;
    }
    else
    {
        v[root_y]=root_x;
        vs[root_x]++;
    }
}

int main()
{
    fa_io;
    int t,n,rowx,colx,k,x,y,count;
    bool dec;
    string s;
    cin>>t;
    while(t--)
    {
        dec=false;
        cin>>n>>k;
        vector< int > v,vs;
        v.resize(n+1);
        vs.resize(n+1);
        iota(all(v),0);
        fr_z(0,k)
        {
            cin>>x;
            cin>>s;
            cin>>y;
            if(s=="=")
            {
                if(root(x,v)!=root(y,v))
                    unite(x,y,v,vs);
            }    
            else
            {
                int a=root(x,v);
                int b=root(y,v);
                if(a==b)
                {
                    dec=true;
                    v[x]=a;
                    v[y]=a;
                }
            }
        }
        if(dec)
            pf("NO\n");
        else
            pf("YES\n");
    }
    
    return 0;
}