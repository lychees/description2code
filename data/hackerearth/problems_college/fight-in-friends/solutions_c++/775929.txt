#include <bits/stdc++.h>
using namespace std;
int N;
#define MAXN 1010
int G[1010][1010];
int dist[1010];
int Bfs(int source,int destination)
{
	memset(dist,-1,sizeof(dist));
	queue  < int > Q;
	Q.push(source);
	dist[source] = 0;
	while(!Q.empty())
	{
		int node = Q.front();
		Q.pop();
		if(node == destination)
			return dist[node];
		for(int i = 0;i<N;i++)
		{
			if(G[node][i] == 0)
			{
				if(dist[i] == -1 || dist[i] > 1 + dist[node])
				{
					Q.push(i);
					dist[i] = dist[node] + 1;
				}
			}
		}
	} 
	return -1;
}

int main()
{
	int M,u,v,A,B;
	cin>>N>>M>>A>>B;
	for(int i = 0;i<M;i++)
	{
		cin>>u>>v;
		G[u-1][v-1] = 1;
		G[v-1][u-1] = 1;
	}
	cout << Bfs(A-1,B-1) << "\n";
}