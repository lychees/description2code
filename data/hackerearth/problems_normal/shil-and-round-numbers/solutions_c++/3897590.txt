#include<iostream>
#include<algorithm>

using namespace std;

int const N = 2e5  +41;

int F[N], n, q, v[N];

void upd(int x, int v){
	while(x < n){
		F[x] += v;
		x |= (x+1);
	}
}

int get(int x){
	int ret = 0;
	while(x >= 0){
		ret += F[x];
		x = (x&(x+1))-1;
	}
	return ret;
}

int good(long long v){
	if(v == 0){
		return true;
	}
	if(v < 0){
		return false;
	}
	int a = v % 10;
	int b;
	while(v > 0){
		b = v % 10;
		v /= 10;
	}
	return (a == b);
}

int main(){
	scanf("%d%d",&n,&q);
	for(int i=0;i<n;++i){
		long long val;
		scanf("%lld",&val);
		v[i] = good(val);
		upd(i, v[i]);
	}
	for(int i=0;i<q;++i){
		int t;
		scanf("%d",&t);
		if(t == 1){
			int l, r;
			scanf("%d%d",&l,&r);
			--l;
			--r;
			printf("%d\n",get(r) - get(l-1));
		}else{
			int p, res;
			long long val;
			scanf("%d %lld",&p,&val);
			--p;
			res = good(val);
			if(res != v[p]){
				upd(p, res - v[p]);
				v[p] = res;
			}
		}
	}



	return 0;
}