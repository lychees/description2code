
class CustomStack(object):
     def __init__(self):
     	self.items = []

     def is_empty(self):
     	return self.items == []

     def push(self, item):
     	""" If same prev item is same as new item we remove that item else push"""
     	if self.items and self.items[-1] == item:
     		self.items.pop()
     	else:
     		self.items.append(item)

def is_bubbly(str1):
	s = CustomStack()
	for c in str1:
		s.push(c)

	return s.is_empty() == True

if __name__ == '__main__':
	count = 0
	for i in range(0, int(raw_input())):
		if is_bubbly(raw_input()):
			count += 1
	print count
