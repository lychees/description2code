#include <bits/stdc++.h>
using namespace std;
#define int long long
int arr [100005]; 
int dp [100005][61]; 
int N, K; 
void solve (int G, int l, int r, int check1, int check2){
	if (l > r) return; 
	int mid = (l+r)>>1;
	int maxi = 1e18, p = -1;
	for (int g=check1; g<=check2; g++){
		if (g < mid) continue; 
		int x = (g - mid) * (g - mid) + dp[g][G-1]; 
		if (x < maxi) maxi = x, p = g; 
	}
	dp[mid][G] = K*K*arr[mid] + maxi; 
	solve (G, l, mid-1, check1, p); 
	solve (G, mid+1, r, p, check2);
}
main()
{
	ios_base::sync_with_stdio(0); 
	cin >> N >> K;
	for (int g=1; g<=N; g++) cin >> arr[g]; 
	for (int g=0; g<=N-1; g++)dp[g][1]=1e15; 
	int R = K; 
	if (R > 60) R = 60; 
	for (int g=2; g<=R; g++){
		solve (g, 1, N, 1, N); 
	} 
	for (int g=2;g<=R; g++) dp[1][g] = min(dp[1][g-1], dp[1][g]);
	cout << dp[1][R] + K*K*arr[N]; 
	return 0; 
}