#include <bits/stdc++.h>
using namespace std;

const int MaxN = 100;
const int MaxC = 2010;
const int P    = 1e9 + 7;

int n, c, a[MaxN], dp[MaxN][3][MaxC];
string st;

int main() {
    int TC;
    cin >> TC;

    while (TC--) {
        cin >> st >> c;

        n = st.size(); st = " " + st;
        for (int i = 1; i <= n; ++i) a[i] = st[i] - 48;

        memset(dp, 0, sizeof dp);
        for (int i = 1; i <= 9; ++i)
            dp[1][i % 3][abs(a[1] - i)]++;

        for (int i = 2; i <= n; ++i)
            for (int x = 0; x < 3; ++x)
                for (int cc = 0; cc <= c; ++cc) {
                    for (int k = 0; k < 10; ++k)
                        if (abs(a[i] - k) <= cc) {
                            dp[i][x][cc] += dp[i - 1][(x - k % 3 + 3) % 3][cc - abs(a[i] - k)];
                            if (dp[i][x][cc] >= P) dp[i][x][cc] -= P;
                        }
                }

        int ans = 0;
        for (int i = 0; i <= c; ++i) {
            ans += dp[n][0][i];
            if (ans >= P) ans -= P;
        }

        cout << ans << "\n";
    }

    return 0;
}
