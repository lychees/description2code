

#include <utility>
#include <iostream>
#include <vector>
#include <algorithm>
#include <limits>

#include <unordered_map>

using namespace std;



int main ()
{

    int n ;
    long long int t ;
        
    cin >> n >> t ;
    
    int a[n]  , b[n+1];

    bool visited[n+1] ;
    
    unordered_map<int ,int> in_p ; 

    vector<int> final_a (n+1,-1);

    for(int i = 0 ; i < n ; i++)
    {
        visited[i] = false ;
        cin >> a[i] ;
    }
    
    visited[n] = false ;    

    for(int i = 0 ; i < n ; i++)
    {
        int temp ;
        cin >> temp ;
        in_p[temp] = i+1;
    }
    
    

    for(int i = 1 ; i <= n ; i ++)
    {
        int temp = i ;
        int count = 1 ;
        
        final_a.clear() ;
        
        while(visited[temp] == false)
        {
            visited[temp] = true ;
            final_a.push_back(temp) ;
            temp = in_p[temp] ;
            //cout << "temp >> " << temp << " final >> " << final_a[count-1] << endl ; 
            
            count ++ ;
            
            
            
        }       
        
        int size = final_a.size() ;
        
        //cout << " final size >> " << size << endl ;
        
        for(int j = 1 ; j <= size ; j++)
        {
            int index = final_a[j-1] ;     
            int x = j ;
            
            // modify this step
            j += t%size ; 
            
            if(j > size)
                j = j%size ;
            
            b[final_a[j-1]] = a[index-1] ;
            
            j = x ;
        }
    }
 
    // print b for the answer
    
    for(int x = 1 ; x <= n ; x++)
    {
        cout << b[x] << " "  ;
    }   
    
    cout << endl ; 
    
    return 0 ;
}