#include<bits/stdc++.h>
using namespace std;
int main()
{//freopen("in.txt","r",stdin);
	int t,m,n,i,j;
	char ch1,ch2;
	char s[1000];
	cin>>t;
	while(t--)
	 {cin>>m>>n;
	  gets(s);
	
	 vector<vector<int > > a(m,vector<int> (n));
	  for(i=0;i<m;i++)
	    {for(j=0;j<n;j++)
	      {ch1=getchar();
	      if(ch1=='#')
	         {
	         a[i][j]=INT_MAX;
	         ch1=getchar();
	         ch1=getchar();
	        }
	     else if(ch1=='-')
	       {ch2=getchar();
	       
	        a[i][j]=-(int)(ch2-48);
	         ch2=getchar();
	       }
	     else
	       {
	       	ch2=getchar();
	       	if(ch2<='9' && ch2>='0')
	       		{
	       		a[i][j]=(ch1-48)*10+(ch2-48);
	       		 ch2=getchar();
	       	   }
	       	else
	       	  a[i][j]=(ch1-48);
	       	 
	       
	       }
	       	        
	      }
	    }
	
	 vector<vector<map<int,int> > > paths(m,vector<map<int,int> > (n));
	 paths[0][0][a[0][0]]=1;
	 for(i=0;i<m;i++)
	   {for(j=0;j<n;j++)
	      {//cout<<i<<" "<<j<<endl;
	      	if(i==0 && j==0) 
	      	  continue;
	      	if(a[i][j]==INT_MAX)
	      	  continue;
	      	if(i>0)
	      	  {int ctr=0;
	      	  	for(map<int,int> ::iterator it=paths[i-1][j].begin();it!=paths[i-1][j].end() && ctr<105;it++)
	      	  	  {paths[i][j][it->first+a[i][j]]+=it->second;
	      	  	  ctr+=it->second;
	      	  	  
	      	  	  }
	      	  	
	      	  }
	      	if(j>0)
	      	  {int ctr=0;
	      	  	for(map<int,int> ::iterator it=paths[i][j-1].begin();it!=paths[i][j-1].end() && ctr<105;it++)
	      	  	  {paths[i][j][it->first+a[i][j]]+=it->second;
	      	  	    ctr+=it->second;
	      	  	  }
	      	  	
	      	  }
	      }
	   }
	
/*	for(i=0;i<m;i++)
	   {for(j=0;j<n;j++)
	     {cout<<"At i,j "<<i<<" "<<j<<" : "<<endl;
	      for(map<int,int> ::iterator it=paths[i][j].begin();it!=paths[i][j].end();it++)
	        {cout<<it->first<<" "<<it->second<<endl;
	        }
	    cout<<endl;
	     }
	   }
*/
	int k,q,x,y;
	  cin>>q;
	  while(q--)
	    {cin>>x>>y>>k;
	     if(a[x][y]==INT_MAX)
	      {
	       cout<<"Obstacle"<<endl;
	       continue;
		  }
		 int count=0;
		 map<int,int> ::iterator it=paths[x][y].begin();
		 for(;it!=paths[x][y].end();it++)
	      	  	{count+=it->second;
	      	  	//count++;
	      	  	 if(count>=k)
	      	  	   break;
	      	  	}
	     if(count>=k)
	       cout<<it->first<<endl;
	    else
	     cout<<"Not so many paths"<<endl;

	    }
	 }
}