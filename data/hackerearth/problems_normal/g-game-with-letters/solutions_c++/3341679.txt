#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
struct d
{
	int l,c,i;
};
typedef struct d d;
bool acompare(d lhs,d rhs)
{
	return ((lhs.c > rhs.c)||((lhs.c == rhs.c) && (lhs.l<rhs.l)) || ((lhs.c == rhs.c) && (lhs.l == rhs.l) && (lhs.i<rhs.i)));
}

int main()
{
	int t,pres[26],i,l,n,j,cnt[26],c,p;
	d ans[10002];
	cin >> t;
	char str[100002],tmp[12];
	while(t--)
	{
		cin >> n >> str;
		p = n;
		l = strlen(str);
		for(i=0;i<26;i++)
			pres[i] = 0;
		for(i=0;i<l;i++)
		{
			pres[str[i]-'a']++;
		}	
		for(i=0;i<n;i++)
		{
			cin >> tmp;
			l = strlen(tmp);
			for(j=0;j<26;j++)
				cnt[j] = pres[j];
			c = 0;
			for(j=0;j<l;j++)
			{
				if(cnt[tmp[j]-'a'] >= 1)
				{	
					c+=cnt[tmp[j]-'a'];
				}
			}
			ans[i].c = c;
			ans[i].l = l;
			ans[i].i = i;
		}
		sort(ans,ans+n,acompare);
		/*for(i=0;i<n;i++)
		{
			cout << ans[i].c << " " << ans[i].l << " " << ans[i].i << "\n";
		}*/
		cout << ans[0].i+1 << "\n";
	}
	return 0;
}