#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <algorithm>
#include <vector>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <stack>
using namespace std;
#define fi "input.txt"
#define fa "output.txt"
#define foru(i,l,r) for(int i=l; i<r; i++)
#define ford(i,r,l) for(int i=r; i>l; i--)
#define vi vector < int >
#define pi pair < int, int >
#define pb push_back
#define ll long long
#define re return

const int maxN=1e5+100;
int n,m,s1[maxN],k;
int lef[10],rig[10];
ll res[10];
struct tl{int sl,a[2];} a[33*maxN];
struct bin{int a[33];} s[maxN];
bin trai[10],phai[10];

bin bd(int x) {
    bin tam;
    memset(tam.a,0,sizeof(tam.a));
    foru(i,0,33) {
        tam.a[i]=x%2;
        x/=2;
    }
    re tam;
}

void init() {
    cin>>n;
    foru(i,1,n+1) {
        int x;
        scanf("%i",&x);
        //x=i;
        s1[i]=s1[i-1]^x;
        s[i]=bd(s1[i]);
    }
}

void tao(bin s) {
    int ht=0;
    ford(i,32,-1) {
        if (a[ht].a[s.a[i]]==-1) a[ht].a[s.a[i]]=++m;
        ht=a[ht].a[s.a[i]];
        ++a[ht].sl;
    }
}

int laykq(bin s,bin t) {
    int ans=0;
    int ht=0;
    int cs=0;
    ford(i,32,-1) {
        if (s.a[i]==0) {
            ht=a[ht].a[t.a[i]];
        } else {
            int tam=a[ht].a[1-t.a[i]];
            if (tam!=-1) ans+=a[tam].sl;
            ht=a[ht].a[t.a[i]];
        }
        if (ht==-1) break;
    }
    if (ht>=0 && a[ht].sl!=0) ans+=a[ht].sl;
    re ans;
}

void xuly() {
    tao(bd(0));
    cin>>k;
    foru(i,0,k) {
        scanf("%i %i",&lef[i],&rig[i]);
        lef[i]--;
        trai[i]=bd(lef[i]);
        phai[i]=bd(rig[i]);
    }
    memset(res,0,sizeof(res));
    foru(i,1,n+1) {
        foru(j,0,k) if (lef[j]>=0)
            res[j]+=laykq(phai[j],bd(s1[i]^rig[j]))-laykq(trai[j],bd(s1[i]^lef[j]));
        else
            res[j]+=laykq(phai[j],bd(s1[i]^rig[j]));
        tao(s[i]);
    }
    foru(i,0,k) cout<<res[i]<<"\n";
}

void khoitao() {
    foru(i,0,maxN*33) {
        a[i].sl=0;
        a[i].a[1]=a[i].a[0]=-1;
    }
    m=0;
}

void test() {
    foru(t,0,k) {
        foru(i,1,n+1) foru(j,0,i) {
            int tam=s1[i]^s1[j];
            if (rig[t]>=tam && tam>lef[t]) --res[t];
        }
        printf("%i\n",res[t]);
    }
}

int main() {
    //freopen(fi,"r",stdin);
    //freopen(fa,"w",stdout);
    int t;
    cin>>t;
    while (t>0) {
        khoitao();
        init();
        xuly();
        //test();
        --t;
    }
    fclose(stdin);
    fclose(stdout);
    re 0;
}
