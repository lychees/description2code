#include<iostream>
#include<stdio.h>
using namespace std;

long long int fast_pow(long long int base, long long int n,long long int M)
{
    if(n==0)
       return 1;
    if(n==1)
        return base;
    long long int halfn=fast_pow(base,n/2,M);
    if(n%2==0)
        return ( halfn * halfn ) % M;
    else
        return ( ( ( halfn * halfn ) % M ) * base ) % M;
}
long long int findMMI_fermat(long long int n,long long int M)
{
    return fast_pow(n,M-2,M);
}
long long int fact(long long int n,long long int m)
{   if(n<=1)
        return 1;
    else
        return (n*fact(n-1,m))%m;

}
long long int comb(long long int n,long long int r){
    long long int i;
    long long int fact1,fact2,fact3,fact2mmi,fact3mmi,res;
    fact1=fact(n,1000000007);fact2=fact(r,1000000007);fact3=fact(n-r,1000000007);
    //printf("%lld %lld %lld\n",fact1,fact2,fact3);
    fact2mmi=findMMI_fermat(fact2,1000000007);fact3mmi=findMMI_fermat(fact3,1000000007);
    // printf("%lld %lld \n",fact2mmi,fact3mmi);
    res=(((fact1*fact2mmi)%1000000007)*fact3mmi)%1000000007;
    return res;
}

int main(){
    int t;scanf("%d",&t);
    while(t--){
        long long int i,n,tab,temp;scanf("%lld %lld",&n,&tab);

        long long int lefttab=tab;
        for(i=0;i<n;i++)
        {   scanf("%lld",&temp);
            lefttab-=temp;
        }
        long long int sum=0;
       // printf("%lld\n",lefttab);
        if(lefttab<0)
            printf("0\n");
    

        else
        {

            {   sum=(comb(lefttab+n-1,n-1)); }

            printf("%lld\n",sum);
        }
    }
}
