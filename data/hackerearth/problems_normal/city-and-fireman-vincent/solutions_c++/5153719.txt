#include <bits/stdc++.h>

using namespace std;

int arr[1005];

int root(int x)
{
	if(arr[x] == x)
		return x;
	else
		return root(arr[x]);
}

void uni(int a,int b)
{
	int a_root = root(a);
	int b_root = root(b);
	arr[a_root] = b_root;
}

int main(int argc, char const *argv[])
{
	int n,k;
	int E[1005];
	memset(E,0,sizeof(E));
	cin>>n;
	for (int i = 1; i <= n; ++i)
	{
		cin>>E[i];
	}
	cin>>k;
	int strt,dest;
	for (int i = 1; i <= n; ++i)
	{
		arr[i] = i;
	}
	while(k--)
	{
		cin>>strt>>dest;
		uni(strt,dest);
	}

	set<int> s;
	vector<int> v;
	int ro;
	for (int i = 1; i <= n; ++i)
	{
		ro = root(i);
		s.insert(ro);
		v.push_back(ro);
	}

	set<int>::iterator it;
	map<int,int> m;

	it = s.begin();
	int val = 0,count = 0;
	int min = 99999;
	while(it!=s.end())
	{	
		min = 99999;
		for (int i = 0; i < n; ++i)
		{
			if(v[i]==*it)
				{
					if(E[i+1]<min)
						min = E[i+1];
				}
		}
		m.insert(pair<int,int>(*it,min));
		it++;
	}
	it = s.begin();
	while(it!=s.end())
	{	
		count = 0;
		min = m[*it];
		for (int i = 0; i < n; ++i)
		{
			if(v[i]==*it)
				{
					if(E[i+1]==min)
						count++;
				}
		}
		m[*it] = count;
		it++;
	}
	map<int,int>::iterator t;
	t = m.begin();

	int prod = 1;
	while(t!=m.end())
	{
		prod = (prod*t->second)%1000000007;
		++t;
	}
	cout<<prod;
	return 0;
}