#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

int N , M , K , arr[100000+10] ;
vector <int> G[100000+10];
map < pair<int,int> , int > T ;
bool visit[100000+10];

int bfs()
{
    queue < pair<int,int> > Q ;
    Q.push(mp(1,0));

    while( !Q.empty() )
    {
        int u = Q.front().ff , s = Q.front().ss ;
        Q.pop() ;

        if(u==N) return s ;

        for(int i=0;i<G[u].size();i++)
        {
            int v = G[u][i] ;
            if(arr[T[mp(u,v)]]==-1||arr[T[mp(u,v)]]>s+1)
            {
                if(visit[v]==false)
                {
                    visit[v] = true ;
                    Q.push(mp(v,s+1));
                }
            }
        }
    }

    return -1 ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    scanf("%d%d%d",&N,&M,&K);
    for(int i=1;i<=M;i++)
    {
        int u , v ;
        scanf("%d%d",&u,&v);
        G[u].pb(v);
        G[v].pb(u);
        T[mp(u,v)] = i ;
        T[mp(v,u)] = i ;
    }

    fill(arr,arr+100005,-1);

    while( K-- )
    {
        int t , x ;
        scanf("%d%d",&t,&x);
        arr[x] = t ;
    }

    cout << bfs() << endl ;
    return 0;
}
