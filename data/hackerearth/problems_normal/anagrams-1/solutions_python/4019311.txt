import re

def getCharString(rawString):
    return "".join(re.findall("[a-zA-Z]+",rawString))

def checkAnagram(str1,str2):
    if len(str1)==len(str2):
        if set(str1)==set(str2):
            return True
    return False

def checkingSubset(string1,string2):

    if(len(string1)<len(string2)):
        smallSet = set(string1)
        bigSet = set(string2)
    else:
        smallSet = set(string2)
        bigSet = set(string1)
         #we get both the sets till now

    return not smallSet.issubset(bigSet)

def getStringToProcess(str1,str2):
    str1,str2 = list(str1),list(str2)
    if not len(str1)>len(str2):
        str1,str2 = str2,str1
    for ele in str2:
        str1.remove(ele)
    return str1
        
def canBeConvertedToPalindrome(string):
    memo = getMemoOfString(string)
    cnt = 0
    for ele in memo:
        if memo[ele]%2!=0:
            cnt+=1
    if(len(string)%2)==0 and cnt==0:
        return True
    elif(len(string)%2)!=0 and cnt==1:
        return True
    return False

def getMemoOfString(string):
    memo={}
    for i in list(string):
        if i not in memo:
            memo[i]=1
        else:
            memo[i]+=1
    return memo

def getHalfOfPalindString(memo):
    string = ""
    for i in memo:
        string+= str(i)*(memo[i]/2)
    return string
        
def lexoSmallestPalindrome(string):
    memo = getMemoOfString(string)
    lisNew = [0]*len(string)
    half = "".join(sorted(list(getHalfOfPalindString(memo))))
    half1= half[::-1]
    new = half+half1
    if len(string)%2:
        x=0
        for i in memo:
            if memo[i]%2!=0:
                x=i
                break
        new = half+x+half1
    return new      
    
def main():
    for _ in xrange(input()):
        string1 = getCharString(("".join(raw_input().split())).lower())
        string2 = getCharString(("".join(raw_input().split())).lower())
        if(checkAnagram(string1,string2)):
           print "YES"
        else:
            if(len(string1)==len(string2)):
                print "NO LUCK"
            else:
                if(checkingSubset(string1,string2)):
                    print "NO LUCK"
                else:
                    stringToProcess = "".join(sorted(list(getStringToProcess(string1,string2))))

                    if not canBeConvertedToPalindrome(stringToProcess):
                        print "NO LUCK"
                    else:
                        print lexoSmallestPalindrome(stringToProcess)
            
if __name__=="__main__":
    main()
    
    
