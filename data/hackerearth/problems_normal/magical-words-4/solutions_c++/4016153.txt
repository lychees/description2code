#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <string>

#define REP(end) for (int i_ = 0; i_ != end; ++i_)
#define vREP(var, end) for (int var = 0; var != (end); ++var)
#define MAX(a, b) (((a) > (b)) ? (a) : (b))
#define MIN(a, b) (((a) < (b)) ? (a) : (b))
#define IT_MAX(vec) ([&] {int m = vec[0]; for(const auto& e : vec) if (e > m) m = e; return m; }())
#define IT_MIN(vec) ([&] {int m = vec[0]; for(const auto& e : vec) if (e < m) m = e; return m; }())
#define LLD long long
using namespace std;

int main()
{
	int t;
	cin >> t;
	REP(t)
	{
		string str;
		cin >> str;

		LLD count = 0;
		for (LLD i = 0; i != str.size(); ++i)
		{
			LLD o = 0;
			while (i - o >= 0 && i + o < str.size())
			{
				if (str[i - o] == str[i + o])
					count += (1 + 2 * o) * (1 + 2 * o);
				else
					break;
				++o;
			}
		}

		for (LLD left = 0, right = 1; right < str.size(); ++left, ++right)
		{
			LLD o = 0;
			while (left - o >= 0 && right + o < str.size())
			{
				if (str[left - o] == str[right + o])
					count += (2 + 2 * o) * (2 + 2 * o);
				else
					break;
				++o;
			}
		}

		cout << count << endl;
	}
	return 0;
}