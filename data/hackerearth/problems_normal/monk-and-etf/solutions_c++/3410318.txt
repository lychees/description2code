#include<bits/stdc++.h>

using namespace std;

#define si(x) scanf("%d",&x)
#define pri(x) printf("%d",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld",x)
#define sstr(s) scanf("%s",s)
#define pstr(s) printf("%s",s)
#define nl printf("\n")
#define ll long long int
#define pb push_back
#define mp make_pair

bool siev[1000005];
vector<int> v;

ll power(ll a, ll b) {   // a^b
    ll ans = 1;
    while(b) {
        if(b&1) {
            ans = (ans*a);
        }
        b = b>>1;
        a = (a*a);
    }
    return ans;
}

void sieve() {
    for(int i=2;i<=1000000;++i) {
        if(!siev[i]) {
            v.pb(i);
            for(int j=i+i;j<=1000000;j+=i) {
                siev[j]=true;
            }
        }
    }
}

void comp() {
    sieve();
}

int main()
{
    comp();
    //    cout<<v.size();
    int t;
    si(t);
    while(t--) {
        ll l,r,k;
        sll(l); sll(r); sll(k);
        int cnt[100001];
        ll etf[100005];
        ll x[100005];
        for(int i=l;i<=r;++i) {
            x[i-l]=i;
            etf[i-l]=1;
        }
        for(int i=0;i<=100000;++i) {
            etf[i]=1;
        }
        for(int j=0;j<v.size() && v[j]<=r;++j) {
            //      cout<<v[j]<<endl;
            //              for(int i=0;i<r-l+1;++i) {
            //                  cout<<x[i]<<" ";
            //              }
            //              nl;
            ll temp = ceil(((double)l)/v[j]);
            //      if(temp<1) temp=1;
            ll y;
            while(v[j]*temp <= r) {
                y = temp*v[j];
                int c = 0;
                while(y%v[j]==0) {
                    c++;
                    y /= v[j];
                }
                etf[temp*v[j]-l] *= power(v[j],c) - power(v[j],c-1);
                x[temp*v[j]-l] /=  power(v[j],c);
                temp++;
            }
        }
        for(int i=0;i<r-l+1;++i) {
            if(x[i]>1) {
                etf[i] *= x[i]-1;
            }
            //      cout<<etf[i]<<" ";
        }
        //      nl;
        int cc = 0;
        for(int i=0;i<r-l+1;++i) {
            if(etf[i]%k==0) {
                cc++;
            }
        }
        double d = cc;
        d = d/(r-l+1);
        printf("%.6lf\n",d);
    }
    return 0;
} 