#include<stdio.h>
#include<stdlib.h>	
int main()
{
	int T;
	scanf("%d",&T);
	while(T--)
	{
		int N,K,i,*puppy,**m,j,maxval=0,near,near1,sum=0;		//Subset-Sum Problem
		scanf("%d %d",&N,&K);
		puppy=(int*)malloc(N*sizeof(int));
		for(i=0;i<N;i++)
		{
			scanf("%d",&puppy[i]);
			sum+=puppy[i];
		}	
		m=(int**)malloc((sum+1)*sizeof(int*));
		for(i=0;i<=sum;i++)
		m[i]=(int*)malloc((N+1)*sizeof(int));
		for(i=0;i<=N;i++)
		m[0][i]=1;
		for(i=1;i<=sum;i++)
		m[i][0]=0;
		for(i=1;i<=K;i++)
		{
			for(j=1;j<=N;j++)
			{
				m[i][j]=m[i][j-1];
				if(i>=puppy[j-1])	
				m[i][j]=m[i][j]||m[i-puppy[j-1]][j-1];
			}
			if(m[i][N])
			maxval=i;
		}
		if(m[K][N])
		printf("Yes\n");
		else
		{
			printf("No\n");
			near=K-maxval;
			i=K+1;
			near1=1;
			while(near1<=near)
			{
				for(j=1;j<=N;j++)
				{
					m[i][j]=m[i][j-1];
					if(i>=puppy[j-1])	
					m[i][j]=m[i][j]||m[i-puppy[j-1]][j-1];
				}
				if(m[i][N])
				break;
				near1++;
				i++;	
			}
			if(near1<=near)
			printf("%d\n",i);
			else
			printf("%d\n",maxval);	
		}
	}
return 0;
}