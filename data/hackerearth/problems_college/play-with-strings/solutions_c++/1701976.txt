#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <vector>

using namespace std;

const double pi = acos(-1.0);
const int inf = 0x3f3f3f3f;
const double eps = 1e-15;
typedef long long LL;
typedef pair <int, int> PLL;

const int N = 200100;
int nxt[N];
char str1[N], str2[N];
bool has[N];
char p1[N], p2[N];

void get_next(char str[], int nxt[])
{
    nxt[0] = -1;
    int j = 0;
    int k = -1;
    int len = strlen(str);
    while (j < len)
    {
        if (k == -1 || str[j] == str[k])
        {
            nxt[++j] = ++k;
        }
        else
        {
            k = nxt[k];
        }
    }
}

int main()
{
	int t;
	cin>>t;
    while (t--) {
    	scanf("%s%s", str1, str2);
        int len1 = strlen(str1);
        get_next(str1, nxt);
        int cnt1, cnt2;
        if (len1 % (len1 - nxt[len1]))
        {
            cnt1 = len1;
            strcpy(p1, str1);
        }
        else
        {
            cnt1 = len1 - nxt[len1];
            for (int i = 0; i < cnt1; ++i)
            {
                p1[i] = str1[i];
            }
            p1[cnt1] = '\0';
        }
        get_next(str2, nxt);
        int len2 = strlen(str2);
        if (len2 % (len2 - nxt[len2]))
        {
            cnt2 = len2;
            strcpy(p2, str2);
        }
        else
        {
            cnt2 = len2 - nxt[len2];
            for (int i = 0; i < cnt2; ++i)
            {
                p2[i] = str2[i];
            }
            p2[cnt2] = '\0';
        }
        if (strcmp(p1, p2))
        {
            printf("0\n");
            continue;
        }
        int x1 = len1 / cnt1;
        int x2 = len2 / cnt2;
        memset(has, 0, sizeof(has));
        for (int i = 1; i * i <= x1; ++i)
        {
            if (x1 % i == 0)
            {
                has[i] = has[x1 / i] = 1;
            }
        }
        int ans = 0;
        for (int i = 1; i * i <= x2; ++i)
        {
            if (x2 % i == 0)
            {
                if (has[i])
                {
                    ++ans;
                }
                if (has[x2 / i] && i * i != x2)
                {
                    ++ans;
                }
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}