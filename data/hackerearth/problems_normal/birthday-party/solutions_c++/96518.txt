#include <iostream>
#include<vector>
using namespace std;

int get_index(int n, int i, int j)
{
	return n*i+j;
}

bool is_proper(vector<int> a, int n, int sum)
{
	vector<bool> sum_check;
	int column_count=n+1;
	sum_check.resize((sum+1)*column_count);
	
	for(int i=0; i<=n; i++)
	  sum_check.at(get_index(column_count,0,i))=true;
	for(int i=1;i<=sum;i++)
	  sum_check.at(get_index(column_count,i,0))=false;
	
	for(int i=1;i<=sum;i++)
	   for(int j=1; j<=n ; j++)
	     {
	       sum_check.at(get_index(column_count,i,j))=sum_check.at(get_index(column_count,i,j-1));
	       if(i>=a.at(j-1))
	       sum_check.at(get_index(column_count,i,j))=sum_check.at(get_index(column_count,i,j))||sum_check.at(get_index(column_count,i-a.at(j-1),j-1));
	     }
	     
	return sum_check.at(get_index(column_count,sum,n));
	
}

int main()
{
    int num_cases=0,p=0,m=0,count=0;
    int member;
    vector<int> sp_set;
    vector<int> f_members;
    cin>>num_cases;
    while(num_cases--)
    {
      count=0;
      cin>>p>>m;
      sp_set.resize(m);
      for(int i=0;i<m;i++)
       cin>>sp_set.at(i);
      for(int i=0;i<p;i++)
      {
      	cin>>member;
      	if(f_members.size()==0)
      	 {
      	 	f_members.push_back(member);
      	 	count=1;
      	 }
      	else if(f_members.back()==member)
      	 count++;
      	else
      	 {
      	   f_members.pop_back();
      	   f_members.push_back(count);
      	   f_members.push_back(member);
      	   count=1;
      	 }
      }
       f_members.pop_back();
       f_members.push_back(count);
       count=0;
       
      for(int i=0;i<f_members.size();i++)
      {
      	if(is_proper(sp_set,sp_set.size(),f_members.at(i)))
      	 count++;
      	
      }
      cout<<count<<endl;
      f_members.clear();
      sp_set.clear();
    }
    return 0;
}
