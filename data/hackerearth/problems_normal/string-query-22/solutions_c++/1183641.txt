/*for(long i = 0 ; i < n ; i++){
    for(long j = 0 ; j < m ; j++){

    }
}*/

#include <bits/stdc++.h>
 
using namespace std;

# define MOD 1000000009
# define pi 3.141593

template<class T> inline void read(T& x) {
    char ch;
    while(!isdigit(ch = getchar_unlocked()));
    x = ch-'0';
    while( isdigit(ch = getchar_unlocked())) x *= 10, x += ch-'0';
}

int n;
string s;
bool vis[200005];
int tree[200005][32];

void update(int idx, int _idx, int val)
{
    while ( idx <= n+1 ) {
        tree[idx][_idx] += val;
        idx += (idx & (-idx));
    }
    return;
}

int query(int idx, int _idx)
{
    int ans = 0;
    while ( idx > 0 ) {
        ans += tree[idx][_idx];
        idx -= (idx & (-idx));
    }
    return ans;
}

int find_cum(char p, int x)
{
    int L,R,M,ans;
    L = 1, R = n;
    while ( L <= R ) {
        M = (L+R)>>1;
        int val = query(M,p-96);
        if ( val >= x ) {
            ans = M;
            R = M-1;
        }
        else L = M+1;
    }
    return ans;
}

int main()
{
    int q,x;
    char p;
    cin >> s;
    n = s.length();
    for (int i = 1 ; i <= n ; i++){
        update(i,s[i-1]-96,1);
    }
    cin >> q;
    while (q--){
        cin >> x >> p;
        int idx = find_cum(p,x);
        vis[idx-1] = true;
        update(idx,p-96,-1);
    }
    for (int i = 0 ; i < n ; i++){
        if(!vis[i]){
            cout << s[i];
        }
    }
    return 0;
}
