#include <vector>
#include <string>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <ctype.h>
#include <bitset>
#include <assert.h>
 
using namespace std;
 
#define REP(i, n) for(int i=0; i<(n); i++)
#define FOR(i, a, b) for(int i=(a); i<(b); i++)
#define IFOR(i, a, b) for(int i=(a); i>=(b); i--)
#define FORD(i, a, b, c) for(int i=(a); i<(b); i+=(c))
 
#define SS ({int x;scanf("%d", &x);x;})
#define SI(x) ((int)x.size())
#define PB(x) push_back(x)
#define MP(a,b) make_pair(a, b)
#define SORT(a) sort(a.begin(),a.end())
#define ITER(it,a) for(typeof(a.begin()) it = a.begin(); it!=a.end(); it++)
#define ALL(a) a.begin(),a.end()
#define INF 1000000000
#define V vector
#define S string
#define FST first
#define SEC second
typedef V<int> VI;
typedef V<S> VS;
typedef long long LL;
typedef pair<int, int> PII;
int main()
 {
 	long long n,q,k;
 	scanf("%lld %lld",&n,&q);
 	long long a[n];
 	for(long long i=0;i<n;i++)
 	 {
 	 	scanf("%lld",&k);
 	    if(i==0){a[i]=k;}
 	    else{a[i]=a[i-1]+k;}
 	   // cout<<a[i]<<" ";
 	 }
 	long long g1,p1,g2,p2;
 	while(q--)
 	 {
 	 	
 	 	scanf("%lld %lld %lld %lld",&g1,&p1,&g2,&p2);
 	 	vector< pair<long long,long long> > v;
 	 	v.push_back(MP(g1,g2));
 	 	v.push_back(MP(p1,p2));
 	 	sort(v.begin(),v.end());
 	 	if(v[1].first<=v[0].second){
 	 		long long m=max(v[0].second,v[1].second);
 	 		if(v[0].first==0)
 	 		 {
 	 		 	printf("%lld\n",a[m]);
 	 		 }
 	 		 else{printf("%lld\n",a[m]-a[v[0].first-1]);}
 	 		
 	 		}
 	 	else
 	 	 {
 	 	 	long long k=0;
 	 	 	 if(v[0].first==0)
 	 		 {
 	 		 	k=k+a[v[0].second];
 	 		 }
 	 		 else{k=k+a[v[0].second]-a[v[0].first-1];}
 	 		 if(v[1].first==0)
 	 		 {
 	 		 	k=k+a[v[1].second];
 	 		 }
 	 		 else{k=k+a[v[1].second]-a[v[1].first-1];}
 	 	   printf("%lld\n",k);
 	 	 }
 	 	
 	 }
 	
 	
 }	