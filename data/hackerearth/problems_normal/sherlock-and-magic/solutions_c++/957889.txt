#include<iostream>
#include<string>
using namespace std;

struct bot
{
	int x;
	int y;
	char dir;
	bool exist;
};

int botselimination(struct bot b[],int n);

int main(void)
{
	int t,n;
	
	cin>>t;
	while(t)
	{
		cin>>n;
		struct bot b[n];
		
		for(int i=0;i<n;i++)
		{
			cin>>b[i].x;
			cin>>b[i].y;
			cin>>b[i].dir;
			
			if(b[i].x>=-1000 && b[i].x<=1000 && b[i].y>=-1000 && b[i].y<=1000)
				b[i].exist=true;
			else
				b[i].exist=false;
		}
		cout<<botselimination(b,n)<<endl;
		t--;
	}
	return 0;
}


int botselimination(struct bot b[],int n)
{
	int res=n;
	for(int i=0;i<n;i++)
	{
		b[i].x=2*(b[i].x);
		b[i].y=2*(b[i].y);
	}
	
	for(int i=0;i<4002;i++)
	{
		
		for(int j=0;j<n;j++)
		{
			if(b[j].exist)
			{
				if(b[j].dir=='N')
					(b[j].y)++;
				else if(b[j].dir=='S')
					(b[j].y)--;
				else if(b[j].dir=='E')
					(b[j].x)++;
				else if(b[j].dir=='W')
					(b[j].x)--;
			}
		}
		bool jexist=true;
		for(int j=0;j<n-1;j++)
		{
			if(b[j].exist)
			{
				jexist=true;
				for(int k=j+1;k<n;k++)
				{
					if(b[k].exist && (b[k].x==b[j].x) && (b[k].y==b[j].y))
					{
						jexist=false;
						b[k].exist=false;
						res--;
					}
				}
				if(!jexist)
				{
					b[j].exist=false;
					res--;
				}
			}
		}
	}
	return res;
}
		
		
