//Approach = DSU + Hashing
#include <bits/stdc++.h>
using namespace std;
#define MAX 100001
#define ll long long
int ar[MAX];
ll siz[MAX];
int ht[MAX];
ll max_grp_sz=1;
void init(int n){
	for(int i=0;i<n;i++){
		ar[i]=i,siz[i]=1;
	}
	ht[1]=n;
	return;
}
int root(int a){
	if(ar[a]==a)return a;
	else {
		ar[a]=ar[ar[a]];
		return root(ar[ar[a]]);
	}
}
void mrg(int a,int b){
	a=root(a),b=root(b);
	if(a==b)return ;
	ht[siz[a]]--;
	ht[siz[b]]--;
	ar[b]=a;
	siz[a]+=siz[b];
	siz[b]=0;
	ht[siz[a]]++;
	if(max_grp_sz<siz[a])max_grp_sz=siz[a];
	return ;
}
int min_diff(int n){
	int i=1;
	for(;i<=max_grp_sz;i++){
		if(ht[i]!=0)break;
	}
	int mn=n+1;
	if(i==max_grp_sz)return 0;
	for(;i<max_grp_sz;i++){
		if(ht[i]==0)continue;
		if(ht[i]>1)return 0;
		for(int j=i+1;j<=max_grp_sz;j++){
			if(ht[j]>0){
				if(mn>(j-i))mn=(j-i);
			}
		}
	}
	return mn;
}
int main()
{
	ios::sync_with_stdio(0);
    int n,q;
    cin>>n>>q;
    init(n);
    for(int i=0;i<q;i++){
    	int x,y;
    	cin>>x>>y;
    	x--,y--;
    	mrg(x,y);
    	cout<<min_diff(n)<<endl;
    }
    return 0;
}