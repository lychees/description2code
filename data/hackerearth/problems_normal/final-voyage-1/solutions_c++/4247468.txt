//
//  main.cpp
//  KnapsackHE
//
//  Created by Shashank Shekhar on 30/06/16.
//  Copyright Â© 2016 Shashank Shekhar. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
#include <unordered_map>
#include <map>
#define minInt INT_MIN
#define maxInt INT_MAX
#define umaxInt UINT_MAX
#define llminInt LLONG_MIN
#define llmaxInt LLONG_MAX
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define fr(i,a,N) for (int i =a;i<N;i++)
#define fre(i,a,N) for (int i =a;i<=N;i++)
#define lli long long int
#define ui unsigned int
using namespace std;
int totalWt;
int *dp,col;

int recurse ( int w,vector<int> &wt,vector<int> &val,int n) {
    if (w==0 || n==-1) return 0;
    if (dp[n*col +w] !=-1) return dp[n*col +w];
    if (wt[n]> w)return  dp[n*col +w] =recurse(w,wt,val,n-1);
    return dp[n*col +w] = max(val[n] + recurse(w-wt[n],wt,val,n-1),recurse(w,wt,val,n-1));
}

//int recurse (int w,vector<int> &wt,vector<int> &val,int n) {
//    if (w==0 || n==0) return 0;
//    if (wt[n-1]> w)return  recurse(w,wt,val,n-1);
//    return max(val[n-1] + recurse(w-wt[n-1],wt,val,n-1),recurse(w,wt,val,n-1));
//}

int main(int argc, const char * argv[]) {
    // insert code here...
    int t,n,w;
    ios_base::sync_with_stdio(false);cin.tie(0);
    cin >>t;
    for (;t>0;--t ) {
        cin >>n;
        cin >>w;
        col=w;
        vector<int> wt(n);
        fr(i,0,n) cin >>wt[i];
        vector<int> val(n);
        fr(i,0,n) cin >>val[i];
        dp = new int[(w+1)*(n+1)];
        fill(dp,dp+((w+1)*(n+1)),-1);
        int ans = recurse(w,wt,val,n-1);
        cout << ans<<"\n";
        delete []dp;
    }
    return 0;
}
