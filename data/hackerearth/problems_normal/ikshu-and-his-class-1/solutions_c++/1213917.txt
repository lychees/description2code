#pragma comment(linker, "/STACK:500000000")
#include <algorithm>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y123
#define y1 y1234
#define ll long long
#define PI 3.1415926535897932384626433832795
#define EPS 1e-9
#define INF 2147483647

int gcd(int a, int b) { return (!b) ? a : gcd(b, a % b); }
int lcm(int a, int b) { return a / gcd(a,b) * b; }
int nextInt() { int n; scanf("%d", &n); return n; }



const int MOD = (int) (1e9 + 7);
const int N = 100000;
vector<int> a[N + 5];
bool used[N + 5];
int cnt;
int f[N + 5];

void dfs(int x) {
	used[x] = true;
	++cnt;
	for (int i = 0; i < a[x].size(); ++i) {
		int to = a[x][i];
		if (!used[to]) {
			dfs(to);
		}
	}
}

int main() {
	int n = nextInt();
	int k = nextInt();
	for (int i = 0; i < k; ++i) {
		int u = nextInt();
		int v = nextInt();
		a[u].push_back(v);
		a[v].push_back(u);
	}
	f[0] = 1;
	for (int i = 1; i <= n; ++i) {
		f[i] = (int) (((ll)f[i - 1] * i) % MOD);
	}
	int res = 1;
	for (int i = 1; i <= n; ++i) {
		if (!used[i]) {
			cnt = 0;
			dfs(i);
			res = (int) (((ll)res * f[cnt]) % MOD);
		}
	}
	printf("%d\n", res);
	return 0;
}