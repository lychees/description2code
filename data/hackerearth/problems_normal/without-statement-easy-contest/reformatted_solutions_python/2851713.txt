#!/usr/bin/env python
# -*- coding:utf-8 -*-

import sys
import math
import random
import operator
from string import ascii_lowercase
from string import ascii_uppercase
from fractions import Fraction, gcd
from decimal import Decimal, getcontext
from itertools import product, permutations, combinations
from Queue import Queue, PriorityQueue
from collections import deque, defaultdict, Counter
getcontext().prec = 100

MOD = 10**9 + 7
INF = float("+inf")

if sys.subversion[0] != "CPython":  # PyPy?
    def raw_input(): return sys.stdin.readline().rstrip()
pr = lambda *args: sys.stdout.write(" ".join(str(x) for x in args) + "\n")
epr = lambda *args: sys.stderr.write(" ".join(str(x) for x in args) + "\n")
die = lambda *args: pr(*args) ^ exit(0)

read_str = raw_input


def read_strs():
    return raw_input().split()


def read_int():
    return int(raw_input())


def read_ints():
    return map(int, raw_input().split())


def read_float():
    return float(raw_input())


def read_floats():
    return map(float, raw_input().split())


"---------------------------------------------------------------"

cache = {}


def do(a):
    if a not in cache:
        ans = 0
        for d in map(int, str(a)):
            ans += d ** 2
        cache[a] = ans
        return ans
    return cache[a]


mod = 10**7
t = read_int()
for i in xrange(t):
    a, b = read_ints()
    cache = {}
    m = {a: 0}
    did = 0

    i = 0
    while i < b:
        # print "Q", i, a, "->", do(a)
        a = do(a)
        i += 1
        if not did and a in m:
            did = 1
            cyc = i - m[a]
            left = b - i
            left %= cyc
            # print a, m[a], b, i, left, cyc
            i = b - left
            # continue
        else:
            m[a] = i
    print a
