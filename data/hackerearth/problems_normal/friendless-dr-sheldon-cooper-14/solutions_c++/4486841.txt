#include <bits/stdc++.h>
using namespace std;

vector<pair<int,int>>g[1000000];
bool visi[1000000]={false};
int prims(int x){
		priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;
		q.push(make_pair(x,0));
		int cost=0,z;
		while(!q.empty()){
			pair<int,int>p=q.top();
			q.pop();
			int u=p.first;
			int v=p.second;
			if(visi[u]==true)
				continue;
				cost+=v;
				visi[u]=true;
			for(int i=0;i<g[u].size();i++){
				z=g[u][i].first;
				if(visi[z]==false)
					q.push(g[u][i]);
				
			}	
			
		}
		return cost;
}
int main()
{
 //   cout << "Hello World!" << endl;
   	int t;
   	scanf("%d",&t);
   	while(t--){
   		int a,b;
   		int m,n;
   		scanf("%d%d",&a,&b);
   		for(int i=0;i<100000;i++)
   			g[i].clear();
   		for(int i=0;i<100000;i++)
   			visi[i]=false;
   		while(b--){
   			scanf("%d%d",&m,&n);
   			g[m].push_back(make_pair(n,1));
   			g[n].push_back(make_pair(m,1));
   		}
   		int cost=prims(m);
   		cout<<cost<<endl;
   	}
   	
   
    return 0;
}
