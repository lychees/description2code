#include<bits/stdc++.h>
using namespace std;
#define N 100010
 int c=0;
vector<int> adj[N];
vector<int> visited(N);
vector<int> rec(N);
int n,m,u,v,s;
bool dfs(int V){
	visited[V]=1; rec[V]=1;
	vector<int>::iterator v;
    for(v=adj[V].begin();v!=adj[V].end();v++)
	{
    if(!visited[*v]&&(!dfs(*v))) {
     return false;}
    else if(rec[*v])
	{
		 return false;
	}
    }
	rec[V]=0; c++;
	return true;
    }
int main(){
    /*int n,m,u,v,s;
   
    cin >> n>>m;
    for(int i=0;i<n;i++)
    {
    	visited[i]=0;
    	rec[i]=0;
    }
	cin >> u >> v;
	s=u;
	adj[u].push_back(v);
   // adj[v].push_back(u);
    for(int i=1; i<m; i++){
    cin >> u >> v;
    adj[u].push_back(v);
    //adj[v].push_back(u);
    }*/
    int t;
	cin>>t;
	while(t--)
	{
	cin>>n;
	int u,v,a;
	
	for(int u=1;u<=n;u++)
	{
		for(int v=1;v<=n;v++)
		{
			cin>>a;
			if(a==1)
			adj[u].push_back(v);	
		}
	}
	
	
	int flag=0;
	for(int i=1;i<=n;i++)
	{
		for(int i=0;i<n;i++)
    {
    	visited[i]=0;
    	rec[i]=0;
    }
		c=0;
		for(int i=1;i<=n;i++) visited[i]=0;
		if(dfs(i)&&c==n)
		{
			flag=1; break;
		}
	}
	if(flag) cout<<"Nae\n";
	else cout<<"Aye\n";
	for(int i=1;i<=n;i++) adj[i].clear();

    
	/*if((m!=(n-1))||(!dfs(s))||(c!=n))
	cout<<"NO\n";
	else 
	cout<<"YES\n";*/

}}