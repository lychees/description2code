#include <bits/stdc++.h>

#define REP(i, a) for (int i = 0;i < (int) (a); ++i)
#define REPP(i, a, b) for (int i = (int) (a); i <= (int) (b); ++i)
#define MST(a, b) memset(a, b, sizeof(a))
#define LL long long
#define LB(x) ((x) & (-(x)))

using namespace std;

const int N = 200005;
const int MOD = 1e9 + 7;
int a[N], fac[N] = {1};
int fi[N], ne[N << 1], en[N << 1], edge;
bool vis[N];

void add(int x, int y) {
	ne[++edge] = fi[x];
	fi[x] = edge;
	en[edge] = y;
}

int bfs(int x) {
	queue<int> q;
	q.push(x);
	vis[x] = 1;
	int ans = 1;
	
	while (q.size()) {
		x = q.front(); q.pop();
		for (int go = fi[x]; go; go = ne[go]) {
			int y = en[go];
			if (!vis[y]) {
				q.push(y);
				vis[y] = 1;
				ans++;
			}
		}
	}
	return ans;
}

int main() {
	ios :: sync_with_stdio(0);

	int n, m;
	REPP(i, 1, N - 1) fac[i] = 1LL * fac[i - 1] * i % MOD;
	
	cin >> n >> m;
	REPP(i, 1, m) {
		int x, y;
		cin >> x >> y;
		add(x, y), add(y, x);
	}
	int ans = 1;
	REPP(i, 0, n - 1) {
		if (!vis[i]) {
			ans = 1LL * ans * fac[bfs(i)] % MOD;
		}
	}
	cout << ans << endl;

	return 0;
}
