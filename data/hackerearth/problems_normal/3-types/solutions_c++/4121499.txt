#include <iostream>
#include <utility>
#include <functional>
#include <algorithm>
using namespace std;
int n;
int m;
int id[1001];
int ma=0;
int mb=0;
pair<int, pair<int, int>>p[10001];
void ini()
{
	for(int i=1;i<=n;i++)
	{
		id[i]=i;
	}
}
int root(int i)
{
	while(i!=id[i])
	{
		id[i]=id[id[i]];
		i=id[i];
	}
	return i;
}
void uni(int a,int b)
{
	int ra=root(a);
	int rb=root(b);
	id[ra]=id[rb];
}
void func(int a, int b, int c)
{
	int x,y;
	int cost;
	ma=0; mb=0;
	for(int i=1;i<=m;i++)
	{
		x=p[i].second.first;
		y=p[i].second.second;
		cost=p[i].first;
		if(root(x)!=root(y) && (cost==-a || cost==-b))
		{
			uni(x,y);
			if(cost==-a)
			ma++;
			else
			mb++;
		}
	}
}
int main()
{
    	cin>>n>>m;
    	int max_cost;
    	ini();
    	for(int i=1;i<=m;i++)
    	{
    		int a, b;
    		int c;
    		cin>>a>>b>>c;
			p[i]=make_pair(-c,make_pair(a,b));			
    	}
    	sort(p+1,p+m+1);
    	func(1,3,2);
    	max_cost=ma+mb;
    	ini();
    	func(2,3,1);
    	if((max_cost+ma+mb)!=(2*n-2))
    	cout<<-1<<"\n";
    	else
    	{
	    	max_cost+=ma;
	    	cout<<m-max_cost<<"\n";
    	}
    return 0;
}
