#include<iostream>
using namespace std;
int lcis(int a[],int b[],int n)
{
	int dp[n][n];
	for(int i=0;i<n;i++){dp[0][i]=0;dp[i][0]=0;}
	for(int i=1;i<n;i++)
	{
		for(int j=1;j<n;j++)
		{
			dp[i][j]=0;
			if(a[i]==b[j])
				dp[i][j]=dp[i-1][j-1]+1;
			else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
		}
	}
	return dp[n-1][n-1];
}
int main()
{
	int t;
	cin>>t;
	while(t>0)
	{
		t--;
		int n;
		cin>>n;
		int a[n],b[n],pos1[n+1],pos2[n+1];pos1[0]=0;pos2[0]=0;
		for(int i=0;i<n;i++)
		{
		cin>>a[i]>>b[i];
		pos1[a[i]]=i+1;
		pos2[b[i]]=i+1;
		}
		cout<<lcis(pos1,pos2,n+1)<<endl;
	}
}