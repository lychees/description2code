#include <iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
using namespace std;
priority_queue<int>l,r;
int getmedian(int e,int m){
	int ls = l.size();
	int rs = r.size();
	int tp;
	bool fl = true;
	switch(ls-rs){
		case 0:
			if(e < m){
				l.push(e);
				m = l.top();
			}else{
				r.push(-e);
				m = -r.top();
			}
			break;
		case 1:
			if(e< m){
				long long int tmp = l.top();
				l.pop();
				r.push(-tmp);
				l.push(e);
			}else{
				r.push(-e);
			}
			m = l.top();
			break;
		case -1:
			if(e < m){
				l.push(e);
			}else{
				long long int tmp = -r.top();
				l.push(tmp);
				r.pop();
				r.push(-e);
			}
			m = l.top();
			break;
	}
	return m;
}
int main()
{
	int n;
	scanf("%d",&n);
	int arr[n+1];
	arr[0] = 0;
	for(int i = 1;i <= n;i++)scanf("%d",&arr[i]);
	int q;
	int ans[1416][1416] = {{0}};
	for(int i = 1;i <= n;i++)ans[i][i] = arr[i];
	for(int i = 1;i <= n;i++){
		l = priority_queue<int>();
		r = priority_queue<int>();
		int m = 0;
		for(int j = i;j <= n;j++){
			m = getmedian(arr[j],m);
			ans[i][j] = m;
		}
	}
	scanf("%d",&q);
	while(q--){
		int l,r;
		scanf("%d%d",&l,&r);
		printf("%d\n",ans[l][r]);
	}
    //cout << "Hello World!" << endl;
    return 0;
}
