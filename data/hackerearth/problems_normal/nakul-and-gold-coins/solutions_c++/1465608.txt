//Author : Jatin Goyal
//codecracker4

#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000  //NA
#define ll long long int
#define dt int
#define all(c) c.begin(), c.end()
#define dcl(a) memset(a,0,sizeof(a))
#define rep(i,a,b) for(i=a;i<=b;i++)
#define tr(container, it) for(vector<dt> ::iterator it= container.begin(); it!=container.end(); it++)
#define trp(container, it) for(vector<pair<dt,dt> >::iterator it = container.begin(); it!=container.end(); it++)
#define tra(container, it) for(typeof(container.begin()) it = container.begin(); it!=container.end(); it++)
#define cc1(a)cout<<#a<<": "<<a<<endl;
#define cc2(a,b)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<< endl;
#define cc3(a,b,c)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<<" , "<<#c<<": "<<c<<endl;
#define cc4(a,b,c,d)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<<" , "<<#c<<": "<<c<<" , "<<#d<<": "<<d<<endl;
#define pr pair<dt,dt>  //NA
#define mp(a,b) make_pair(a,b)
#define pb push_back  //NA
#define gc getchar  //NA
#define F first
#define S second
ll w[MOD+5],fac[MOD+5],ccn[MOD+5];
vector<int>finale,primes;


ll check(ll r)
{
    ll i=0,ans=0;
    while(primes[i]*primes[i]<r)
    {
        ans+=upper_bound(all(primes),r/primes[i])-primes.begin()-i-1;
        i++;
    }
    return ans;
   // cout<<ans<<endl;
}

int main()
{
	//freopen("##inp.cpp","r",stdin);
    //freopen("##out.cpp","w",stdout);
	ios_base::sync_with_stdio(0);

    ll i,j,len=MOD,t,l,r,dum,ct;

    w[0]=1;
    w[1]=1;
    rep(i,2,len) fac[i]=1;

    for(i=2;i<=len;i++)
    {
        if(w[i]==0)
        {
            primes.pb(i);
            for(j=i*2;j<=len;j=j+i)
            {
                w[j]=1;
                dum=j;
                ct=0;
                while(dum%i==0) {dum=dum/i; ct++;}
                fac[j]=fac[j]*(ct+1);
                ccn[j]++;
            }
        }
    }

    rep(i,1,MOD) if((fac[i]==4)&&(ccn[i]>=2)) finale.pb(i);
    //rep(i,0,50) cout<<finale[i]<<' ';
    //cout<<primes.size()<<endl;
    cin>>t;
    while(t--)
    {
        cin>>l>>r;
       // cc3(check(l-1),check(r),check(r)-check(l-1));
       // cout<<upper_bound(all(finale),r)-lower_bound(all(finale),l)<<endl;
       cout<<check(r)-check(l-1)<<endl;
    }
}
