#include<bits/stdc++.h>
using namespace std;
int dp[160][160][160];
int func(int total,int c,int count,int n5,int n10)
{
    if(count==c)
        return 0;
    int min1=INT_MAX;
    if(dp[count][n5][n10]!=-1)
        return dp[count][n5][n10];
    int n1=total-count*8-n5*5-n10*10;
    if(n10>=1)
    {
        min1=min(min1,func(total,c,count+1,n5,n10-1)+1);
    }
    if(n1>=8)
    {
        min1=min(min1,func(total,c,count+1,n5,n10)+8);
    }
    if(n5>=2)
    {
        min1=min(min1,func(total,c,count+1,n5-2,n10)+2);
    }
    if(n5>=1&&n1>=3)
    {
        min1=min(min1,func(total,c,count+1,n5-1,n10)+4);
    }
    if(n10>=1&&n1>=3)
    {
    	 min1=min(min1,func(total,c,count+1,n5+1,n10-1)+4);
    }
 
    return dp[count][n5][n10]=min1;
}
int main()
{
    int t;
    cin>>t;

    while(t--)
    {
            memset(dp,-1,sizeof(dp));
        int c,n1,n5,n10;
        cin>>c>>n1>>n5>>n10;
        int total=n1+n5*5+n10*10;
        if(c*8>total)
        {
            cout<<-1<<endl;
            continue;
        }
        cout<<func(total,c,0,n5,n10)<<endl;
    }
}
