#include <bits/stdc++.h>
using namespace std;

#define LL_MAX 200000000000
#define MOD 1000000007
#define EPS 1e-14
#define PI 3.14159265358979

#define ll long long int
#define llu long long unsigned
#define ld long

#define mp make_pair
#define pb push_back
#define maX(a,b) ( (a) > (b) ? (a) : (b))
#define miN(a,b) ( (a) < (b) ? (a) : (b))
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define s(a) scanf("%d",&a)
#define sll(a) scanf("%lld",&a)
#define s_inp(a) cin>>a
typedef vector<vector<int> > vvi;
typedef vector <ll> vi;
typedef pair <ll, ll> pii;
typedef pair <pii, ll> pii1;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
ll gcd(ll a, ll b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
ll hcf(ll a, ll b) {if(b>a) return (hcf(b, a)); if(a%b==0) return b; return (hcf(b, a%b));}
ll modpow(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll mulmod(ll a, ll b, ll m) {int64_t res = 0;while (a != 0){if(a & 1)res =(res+b)%m;a>>=1;b =(b<<1)%m;}return res;}
char str[1000002];
int main()
{
    int t;
    s(t);
    while(t--)
    {
        bool flag=0;
        int cost=0,ac,bc,i,j;
        scanf("%s",str);
        scanf("%d%d",&ac,&bc);
        i=0;
        j=strlen(str)-1;
        while(i<j)
        {
          if(str[i]==str[j])
          {
          	  if(str[i]=='/')
          	  cost+=2*min(ac,bc);
              i++;
              j--;
          }
          else if(str[i]!=str[j]&&(str[i]!='/'&&str[j]!='/'))
          {

              flag=1;
              break;
          }
          else if(str[i]=='/'||str[j]=='/')
          {
          	  if(str[j]!='/')
              cost+=(str[j]=='a'?ac:bc);
              else
              cost+=(str[i]=='a'?ac:bc);
              i++;j--;
          }
        }
        if(i==j&&str[i]=='/')
            cost+=min(ac,bc);
        if(flag)
            printf("-1\n");
        else
            printf("%d\n",cost);
    }
    return 0;
}
