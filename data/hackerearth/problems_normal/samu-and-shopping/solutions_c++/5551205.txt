#include <bits/stdc++.h>
using namespace std;
#define int long long 
int n, a[100005], b[100005], c[100005], dp[100005][4];

int solve(int i, int p){
  if(i == n) return 0;
  if(dp[i][p] != -1) return dp[i][p];

  int ret = 1e18;

  if(p == 0){
    ret = min(ret, a[i] + solve(i+1, 1));
    ret = min(ret, b[i] + solve(i+1, 2));
    ret = min(ret, c[i] + solve(i+1, 3)); 
  }
  else if(p == 1){
    ret = min(ret, b[i] + solve(i+1, 2));
    ret = min(ret, c[i] + solve(i+1, 3));
  }
  else if(p == 2){
    ret = min(ret, a[i] + solve(i+1, 1));
    ret = min(ret, c[i] + solve(i+1, 3));
  }
  else{
    ret = min(ret, a[i] + solve(i+1, 1));
    ret = min(ret, b[i] + solve(i+1, 2));
  }

  return dp[i][p] = ret;
}

 main() {
    int T;
    cin >> T;
    while(T--){
      cin >> n;
      for(int i=0;i<n;i++){
        cin >> a[i] >> b[i] >> c[i];
      }
      memset(dp, -1, sizeof dp);
      cout << solve(0,0) <<"\n";  
    }
    return 0;
}