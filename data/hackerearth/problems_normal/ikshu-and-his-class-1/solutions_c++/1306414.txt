#include <bits/stdc++.h>
using namespace std ;

#define MAXN 100001
#define MOD 1000000007

vector<int> adj[MAXN] ;
int N,M,U,V,visited[MAXN],components[MAXN],cnt,F[MAXN]; 

void dfs(int u){

	visited[u] = 1 ;
	components[cnt] ++ ;
	for(vector<int> :: iterator it = adj[u].begin() ; it != adj[u].end() ; ++it){
		if(!visited[*it]){
			dfs(*it) ;
		}
	}
}


int main(){

	cin >> N >> M ;
	for(int i=1;i<=M;i++){
		cin >> U >> V ;
		adj[U].push_back(V) ;
		adj[V].push_back(U) ;
	}
	F[0] = 1 ;
	for(int i=1;i<MAXN;i++){
		F[i] = (1LL * F[i-1] * i) % MOD ; 
	}
	cnt = 0 ;
	for(int i=1;i<=N;i++){
		if(!visited[i]){
			++ cnt ;
			dfs(i) ;
		}
	}

	int ans = 1 ;
	for(int i=1;i<=cnt;i++){
		ans = (1LL * ans * F[components[i]]) % MOD ;
	}
	cout << ans << endl ;
	return 0 ;
}