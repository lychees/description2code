#include<bits/stdc++.h>
using namespace std;
const int MAX=10000;
int color[MAX];
int dist[MAX];
int we[MAX];
int n;
int m;


int mini(vector <int> adj[])
{
	for(int i=0;i<m*n;i++){
		color[i]=0;
		dist[i]=MAX;
		}

	queue <int> q;
	color[0]=1;
	dist[0]=we[0];
	
	q.push(0);


	while(!q.empty())
    {
		int u=q.front();
		q.pop();

		for(int i=0;i<adj[u].size();i++)
            {
            int y=adj[u][i];

			
            if(dist[y]>dist[u]+we[y])
            {
                dist[y]=dist[u]+we[y];
				color[y]=0;
            }
            
			if(color[y]==0){
				color[y]=1;
				q.push(y);
				


			}
            }
		color[u]=2;
	}
	return 0;
}




int main()
{
	int t,a,b,tim;

	cin>>t;
	for(int i=0;i<t;i++)
	{
		cin>>n>>m;
		vector <int> v[n*m];
		for(int j=0;j<n*m;j++)
		{

                cin>>we[j];


		}
		for(int i=0;i<n;i++)
        {

		for(int j=0;j<m;j++)
        {
            
            if(j<m-1)
            {
            v[(i*m)+j].push_back((i*m)+j+1);
            v[(i*m)+j+1].push_back((i*m)+j);
            	
            }
            if(i<n-1)
            {
            v[(i*m)+j].push_back(((i+1)*m)+j);
			v[((i+1)*m)+j].push_back((i*m)+j);
				
            }
            

        }


        }
        
 	mini(v);
 	cin>>a>>b>>tim;
 	//for(i=0;i<m*n;i++)
 	//	cout<<dist[i]<<" ";
 	if(tim-dist[((a-1)*m)+(b-1)]>=0)
 	{
 		cout<<"YES"<<endl;
 		cout<<tim-dist[((a-1)*m)+(b-1)]<<endl;
 	}
 	else
 	cout<<"NO"<<endl;

	}



}
