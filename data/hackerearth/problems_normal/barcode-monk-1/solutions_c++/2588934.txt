// Diptesh Patel
#include <bits/stdc++.h>
using namespace std;
#define rep(i,b) for (int i=0;i<b;i++)
#define repE(i,a,b) for (int i=a;i<=b;i++)
#define all(x) (x).begin(),(x).end()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define bcnt __builtin_popcount
#define removedup(a) (a).erase(unique((a).begin(),(a).end()),(a).end())
#define lowerb(a,v) (lower_bound(all(a),v) - a.begin())
#define valueFill(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x)
#define sc2i(x,y) scanf("%d%d",&x,&y)
#define sc3i(x,y,z) scanf("%d%d%d",&x,&y,&z)
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef unsigned long long ull;
typedef vector<string> vs;
typedef vector<pii> vpii;
#define trace1(x)           cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl
#define trace2(x,y)         cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl
#define trace3(x,y,z)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl
#define trace4(a,b,c,d)     cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<endl
#define trace5(a,b,c,d,e)   cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<" | "#e" = "<<e<<endl
#define trace6(a,b,c,d,e,f) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<" | "#e" = "<<e<<" | "#f" = "<<f<<endl
#define tracea(x,a,b)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "; rep(i,a,b) cerr<<x[i]<<","; cerr<<endl;

const ll mod=1000000007;
const ld pi = 3.14159265358979323846264338327950288419716939937510;
ll po(ll a,ll b) {ll res=1%mod;a%=mod;for(;b;b>>=1){if(b&(1LL))res=res*a%mod;a=a*a%mod;}return res;}
const ld eps = 1e-10;
const int oo = 1000000009;
const ll ooo = 2e18+5;
const int MAXN = 2e5+5;
int n,k;
vi reach;
ll DP[1009];
inline void solve(){
    valueFill(DP,0);
    DP[0]=1;
    for(int i=1 ; i<=n ;i++){
        for(int j=0 ; j<reach.size(); j++){
            if(reach[j]==i) DP[i]++;
            if(reach[j]>=i) continue;
            DP[i]+=DP[i-reach[j]-1];
            DP[i]%=mod;
        }
        DP[i]+=DP[i-1];
        DP[i]%=mod;
    }
    cout<<DP[n]%mod;
}
inline void readInput(){
    sc2i(n,k);
    vi R;
    R.resize(k);
    rep(i,k){
        sci(R[i]);
    }
    sort(all(R));
    bool isVisit[1009];
    valueFill(isVisit,false);
    isVisit[0]=true;
    for(int i=0 ; i<=n ; i++){
        if(isVisit[i])
        for(int j=0 ; j<R.size() ; j++){
            if(i+R[j]<=n) isVisit[i+R[j]]=true;
        }
    }
    reach.clear();
    for(int i=1 ; i<=n ; i++){
        if(isVisit[i]) reach.pb(i);
    }
    solve();
}

inline void preProcess(){

}
int main(){
    #ifndef ONLINE_JUDGE
     //   freopen("input.txt","r",stdin);
    #endif
    preProcess();
    readInput();
    return 0;
}

