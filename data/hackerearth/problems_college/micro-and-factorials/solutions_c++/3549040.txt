#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long int
#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define take(A,n) int A[n+1]; rep(i,n) cin>>A[i]
#define mod 1000000007
#define MX 1001
#define MX1 410
#define INF 8944674407370955161LL
#define sync() ios_base::sync_with_stdio(0)
#define get getchar//_unlocked
#define PI 3.14159265;


void deb(int A[], int n) {
    for(int i = 0; i < n; i++) {
        cout << A[i] << " " ;
    }
    cout << endl;
}

ll power(ll a, ll b)
{
    if (b == 0)
        return 1;
    ll x = power(a, b>>1);
    if (b & 1)
        return (((x*x))*a);
    return (x*x);
}


ll scan()
{
    ll n = 0, ch = get();
    while (ch < '0' || ch > '9')
        ch = get();
    while (ch >= '0' && ch <= '9') {
        n = (n << 3) + (n << 1) + ch - '0';
        ch = get();
    }
    return n;
}

int val(int cs, char ch) {
    return (cs * 10 + ch - 48);
}

vector<int> v;

void seive(int n)
{
    int i, j;
    vector<bool> isprime(n+1, 1);
    for(i = 2; i <= n; i++) {
        if(isprime[i]) {
            v.pb(i);
            for(j = 2*i; j <= n; j+=i) {
                isprime[j] = 0;
            }
        }
    }
}

int countfactors(int n, int k)
{
    int ans = 0;
    while(n) {
        ans += n / k;
        n /= k;
    }
    return ans;
}

ll factorialfactors(int n)
{
    ll ans = 1;
    for(int i = 0; i < v.size(); i++) {
        ans *= (ll)(countfactors(n, v[i]) + 1);
        ans %= mod;
    }
    return ans;
}

int main()
{
    int i, t, x, y;
    seive(100000);
    cin >> t;
    while(t--) {
        cin >> x >> y;
        if(y >= x) {
            cout << "0\n";
            continue;
        }
        printf("%lld\n", (factorialfactors(x) - factorialfactors(y) + mod) % mod);
    }

    return 0;
}