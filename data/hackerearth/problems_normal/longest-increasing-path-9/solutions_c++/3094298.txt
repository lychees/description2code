#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define dd double
#define ff first
#define ss second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define vi vector<ll>
#define pii pair<ll,ll>
#define vpi vector<pair<ll,ll> >
#define reset(a,b) memset(a,b,sizeof(a)) 
#define modu 1000000007
#define inf INT_MAX
#define fastio ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)

inline ll scan(){
    char c = getchar_unlocked();
    register ll x = 0;
    bool neg=false;
    if(c=='-'){
        neg=true;
    }
    while(c<'0'||c>'9'){
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    if(neg==false) return x;
    else if(neg==true) return -1*x;
}

ll n,m,mat[123][123],dp[102][102];

ll solve(ll x,ll y){
	if(x>n || y>m) return 0;
	if(dp[x][y]!=0) return dp[x][y];
	if(x==n && y==m) return dp[x][y]=1;
	if(x==n && y!=m){
		if(mat[x][y]<mat[x][y+1]){
			dp[x][y]=solve(x,y+1)+1;
		}else{
			dp[x][y]=1;
		}
	}else if(x!=n && y==m){
		if(mat[x+1][y]>mat[x][y]){
			dp[x][y]=solve(x+1,y)+1;
		}else{
			dp[x][y]=1;
		}
	}else{
		ll p=1,q=1;
		if(mat[x+1][y]>mat[x][y]){
			p=solve(x+1,y)+1;
		}
		if(mat[x][y+1]>mat[x][y]){
			q=solve(x,y+1)+1;
		}
		dp[x][y]=max(p,q);
	}
	return dp[x][y];
}

int main(){
	ll t;
	t=scan();
	while(t--){
		register ll i,j,l,k,p,q,x,y,ans=0,sum=0;
		n=scan();m=scan();
		reset(dp,0);
		for(i=1;i<=n;i++){
			for(j=1;j<=m;j++){
				mat[i][j]=scan();
			}
		}
		ans=solve(1,1);
		cout<<ans<<endl;
	}
	return 0;
}