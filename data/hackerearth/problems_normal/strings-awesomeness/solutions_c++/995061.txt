#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<ll, int> P;
const int MOD = 1000000007;
const ll INF = (ll) 1e15;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define foru(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define ford(i, a, b) for (int i = (a); i >= (b); --i)
#define sz(a) ((int) a.size())
#define pb(a) push_back(a)
#define mp(a, b) make_pair(a, b)
#define mem(a) memset(a, 0, sizeof(a))
#define all(a) a.begin(), a.end()

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void add_max(T &a, T b) {if (b > a) a = b;}
template<class T> inline void add_min(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {if (b == 0) return a; return gcd(b, a % b);}

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    int q, l, r;
    int dp[500005];
    string s, tt = "aaceehhkrrt";
    mem(dp);
    cin >> s;
    repu(i, 0, s.size()) {
        if (s[i] >= 'A' && s[i] <= 'Z') s[i] += 32;
    }
    repu(i, 0, s.size()) {
        dp[i] = dp[i-1];
        if (i >= 10) {
            string tmp = s.substr(i - 10, 11);
            sort(all(tmp));
            if (tmp == tt) dp[i]++;
        }
    }
    cin >> q;
    repu(i, 0, q) {
        cin >> l >> r;
        l--; r--;
        l = tmin(r, l + 9);
        printf("%d\n", dp[r] - dp[l]);
    }
    return 0;
}