#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pl;

#define sl(x) scanf("%lld",&x)
#define pl(x) prllf("%lld\n",x);
#define sf(x) sort(x.begin(),x.end(),func)
#define s(x) sort(x.begin(),x.end())
#define pb push_back
#define all(v) v.begin(),v.end()
#define rs(v) { s(v) ; r(v) ; }
#define r(v) {reverse(all(v));}
#define mp make_pair
#define F first
#define S second
#define f(i,n) for(ll i=0;i<n;i++)
#define fab(i,a,b) for(ll i=a;i<=b;i++)

const ll mod = 1000000007;
const ll inf = LLONG_MAX;
const ll ninf = LLONG_MIN;
const ld eps = 1e-10;
const ll N = 1005;
const ll LOGN = log2(N);
ll n,m;
ll c[N];
ll a[N];
ll dp[N][N];
ll solve(ll l, ll r) {
 if(l > r) return 0;
 if(dp[l][r] < inf) return dp[l][r];
 if(l == r || l+1 == r) return dp[l][r] = (r-l+1);
 ll ret = inf;
 ret = min(ret, 1 + solve(l+1,r));
 ret = min(ret, 1 + solve(l,r-1));
 if(c[l] == c[r]) ret = min(ret, 1 + solve(l+1,r-1));
 for(ll i = l+1; i <= r; i++) if(c[i] == c[l]) {
  ret = min(ret, 1 + min( solve(l+1,i-1), solve(l,i-1)-1 ) + min( solve(i,r)-1, solve(i+1,r) ) );
 }
dp[l][r] = ret;
 return ret;
}

int main()
{
ll t;
 ll ans = 0;
 cin >> t;
 while(t--) {
  cin >> n;
  f(i,n) cin >> a[i];
 ll n1 = 0;
 f(i,n) {
  c[n1++] = a[i];
  ll j;
  for(j=i;j<n;j++) {
   if(a[i] != a[j]) break;
  }
  i = j - 1;
 }
 n = n1;
  f(i,n) f(j,n) dp[i][j] = inf;
  ans = solve(0,n-1);
  cout << ans << "\n";
 }
 return 0;
}
