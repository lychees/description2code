// hackerearth file
#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
#include<string>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%ld",&x)
#define gll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll MOD = 1e9+7;
//const int INF = 0x7f7f7f7f;
const double eps = 1e-6;
const long long INF = 1e18;

const int MAXN = 111;
ll total[MAXN];

ll get_next(ll a) {
	for (ll i = 1; i < a; i ++) if(a % i) return i;
	return 1;
}

ll product(ll a,ll b) {
	if(a == 0 or b == 0) return 0;
	if(INF / a <= b) return INF;
	return a * b;
}

ll lcm(ll a,ll b) {
	ll g = __gcd(a,b);
	a /= g;
	return product(a,b);
}

ll calc(ll x) {
	for (ll i = 1; i <= 50; i ++) total[i] = 0;
	
	for (ll i = 50; i >= 1; i --) {
		ll l = 1;
		for (ll ii = 1; ii < i; ii ++)
			l = lcm(l,ii);

		if(x / l > 0) {
			total[i] += x / l;
			for (ll ii = 1; ii < i; ii ++)
				total[ii] -= total[i];
		}
	}
	
	ll ans = 0;
	for (ll i = 1; i <= 50; i ++) {
		ll curr = i;
		ll cnt = 1;
		while (curr != 1) {
			cnt ++;
			curr = get_next(curr);
		}
		ans += cnt * total[i];
	}
	
	if(x >= 2) ans -= 2;
	return ans;
}

int main() {
	ios_base::sync_with_stdio(false);
	
    ll a,b; cin >> a >> b;
	cout << calc(b) - calc(a - 1) << '\n';
	
	return 0;
}
