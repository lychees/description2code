def longestPath(matrix):
    path_matrix = []
    temp = []
    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            temp.append(0)
        path_matrix.append(temp)
        temp = []

    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            if (i == 0 and j == 0):
                path_matrix[i][j] = 1
            elif (i == 0):
                if (matrix[i][j] > matrix[i][j-1]
                        and path_matrix[i][j-1] != 0):
                    path_matrix[i][j] = path_matrix[i][j-1]+1
            elif (j == 0):
                if (matrix[i][j] > matrix[i-1][j]
                        and path_matrix[i-1][j] != 0):
                    path_matrix[i][j] = path_matrix[i-1][j]+1
            else:
                if (matrix[i-1][j] < matrix[i][j] and matrix[i][j-1] < matrix[i]
                        [j] and (path_matrix[i-1][j] != 0 or path_matrix[i][j-1] != 0)):
                    path_matrix[i][j] = max(
                        path_matrix[i-1][j], path_matrix[i][j-1]) + 1
                elif (matrix[i][j-1] < matrix[i][j] and path_matrix[i][j-1] != 0):
                    path_matrix[i][j] = path_matrix[i][j-1]+1
                elif (matrix[i-1][j] < matrix[i][j] and path_matrix[i-1][j] != 0):
                    path_matrix[i][j] = path_matrix[i-1][j]+1

    max_val = -1
    for row in path_matrix:
        max_val = max(max_val, max(row))

    return max_val


t = input()
for i in range(t):
    s = raw_input().split()
    n = int(s[0])
    m = int(s[1])
    matrix = []
    tmp = []
    for i in range(n):
        temp = raw_input().split()
        for x in temp:
            tmp.append(int(x))
        matrix.append(tmp)
        tmp = []
    print(longestPath(matrix))
