#include <algorithm>
#include <iostream>
#include <vector>
#include <string>

using namespace std;

char getv() {
    char c;
    do {cin >> c;} while (c < 'a' || c > 'z');
    return c;
}

char tbl[1000001];
int color[1000001];

int getc(int i) {
    if (color[i] == i) 
        return i;
    return color[i] = getc(color[i]);
}

void join(int i, int j) {
    color[getc(i)] = getc(j);
}

void run_test() {
    int n, m;
    cin >> n >> m;
    
    for (int i = 0; i < n*m; ++i) {
        tbl[i] = getv();
        color[i] = i;
    }
    
    int ec = (n + 1) * (m + 1) - (n + m);
    
    for (int i = 0; i < n; ++i)
    for (int j = 0; j < m; ++j) {
        if (i > 0 && tbl[i * m + j] == tbl[(i - 1) * m + j]) 
            join(i * m + j, (i - 1) * m + j);
        else 
            --ec;
        if (j > 0 && tbl[i * m + j] == tbl[i * m + j - 1]) 
            join(i * m + j, i * m + j - 1);
        else 
            --ec;
    }
    
    for (int i = 0; i < n*m; ++i) {
        if (color[i] == i)
            ++ec;
    }
    
    for (int i = 1; i < n; ++i)
    for (int j = 1; j < m; ++j) {
        int r = 0;
        int ps = i * m + j;
        if (tbl[ps] == tbl[ps - 1] && tbl[ps] == tbl[ps - m] && tbl[ps] == tbl[ps - m - 1])
            --ec;
    }
    
    cout << (ec == 1 ? "YES\n" : "NO\n");
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    int T;
    cin >> T;
    for (int i = 0; i < T; ++i)
        run_test();
    return 0;
}
