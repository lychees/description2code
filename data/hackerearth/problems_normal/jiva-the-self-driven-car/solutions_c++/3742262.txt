#include <iostream>
using namespace std;

void merge(int *,int *,int, int , int );
void mergesort(int *a, int *b, int low, int high)
{
    int mid;
    if (low < high)
    {
        mid=(low+high)/2;
        mergesort(a, b,low,mid);
        mergesort(a, b,mid+1,high);
        merge(a, b,low,high,mid);
    }
    return;
}
void merge(int *a, int *b, int low, int high, int mid)
{
    int i, j, k, c[1000], d[1000];
    i = low;
    k = low;
    j = mid + 1;
    while (i <= mid && j <= high)
    {
        if (a[i] <= a[j])
        {
            c[k] = a[i];
            d[k] = b[i];
            k++;
            i++;
        }
        else
        {
            c[k] = a[j];
            d[k] = b[j];
            k++;
            j++;
        }
    }
    while (i <= mid)
    {
        c[k] = a[i];
        d[k] = b[i];
        k++;
        i++;
    }
    while (j <= high)
    {
        c[k] = a[j];
        d[k] = b[j];
        k++;
        j++;
    }
    for (i = low; i < k; i++)
    {
        a[i] = c[i];
        b[i] = d[i];
    }
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	int n,k;
    	cin>>n>>k;
    	int a[1000],b[1000];
    	for(int i=0;i<n;i++)
    		cin>>a[i]>>b[i];
    	mergesort(a, b, 0, n-1);
    	int passengers=0, pindex=0, oindex=0;
    	int onboard[1000];
    	float result=0;
    	bool full=false;
    	for(int i=0;i<=100;i++)
    	{
    		float kiraaya=(oindex<=1?10:(oindex==2?9.5:9.3));
    		result+=kiraaya*oindex;
    		int tonboard[1000];
    		int tonb=0;
    		for(int l=0;l<oindex;l++)
    		{
    			if(b[onboard[l]]>i)
    				tonboard[tonb++]=onboard[l];
    		}
    		oindex=tonb;
    		for(int l=0;l<oindex;l++)
    			onboard[l]=tonboard[l];
    		while(pindex<n && a[pindex]<=i)
    		{
    			if(oindex+1==k)
    				full=true;
    			if(oindex<k && a[pindex]<b[pindex])
    				onboard[oindex++]=pindex;
    			pindex++;
    		}
    	}
    	if(result>1241 && result<1242)
    		cout<<1241;
    	else
    		cout<<((int)(result+0.5));
    	if(full)
    		cout<<" Cab was full";
    	cout<<endl;
    }
    return 0;
}
