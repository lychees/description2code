#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll int test;
string s;
ll int l,ans;
map<vector<ll int>,ll int> mp;//v(3)-index,less or not,flag(3 seen or not)
ll int dp[10][2][2];
map<string,ll int> mp2;
ll int myfind(ll int index,ll int less,ll int flag)
{
	if(index==l)
	{
		if(flag)
		return 1ll;
		return 0ll;
	}
	if(dp[index][less][flag]==-1)
	{
		ll int mans,i;
		mans=0;
		if(less==1)
		{
			for(i=0;i<=9;i++)
			{
				if(i==3)
				{
					mans+=myfind(index+1,less,1);
				}
				else
				{
					mans+=myfind(index+1,less,flag);
				}
			}
		}
		else
		{
			for(i=0;i<=9;i++)
			{
				if(i<(s.at(index)-'0'))
				{
					if(i==3)
					{
						mans+=myfind(index+1,1,1);
					}
					else
					{
						mans+=myfind(index+1,1,flag);
					}
				}
				else if(i==(s.at(index)-'0'))
				{
					if(i==3)
					{
						mans+=myfind(index+1,less,1);
					}
					else
					{
						mans+=myfind(index+1,less,flag);
					}
				}
			}
		}
		dp[index][less][flag]=mans;
	}
	return dp[index][less][flag];
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin>>test;
	while(test--)
	{
		//~ mp.clear();
		ll int i,j,k;
		for(i=0;i<9;i++)
		{
			dp[i][0][0]=-1;
			dp[i][0][1]=-1;
			dp[i][1][0]=-1;
			dp[i][1][1]=-1;
		}
		cin>>s;
		if(mp2.find(s)==mp2.end())
		{
			l=s.length();
			vector<ll int> v(3);
			v[0]=0;v[1]=0;v[2]=0;
			sscanf(s.c_str(),"%lld",&ans);
			ans=ans-myfind(0,0,0);
			mp2.insert(make_pair(s,ans));
		}
		else
		ans=mp2[s];
		cout<<ans<<'\n';
	}
	return 0;
}
