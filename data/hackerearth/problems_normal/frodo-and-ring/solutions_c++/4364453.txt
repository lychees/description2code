#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return r;
}

int dr[]={0,1};
int dc[]={1,0};
int en[201][201];
char v[201][201];
int ans=0;
int n,m;
int onBoard(int r,int c){
    if(r>=0&&r<n &&c>=0&&c<m){
        return 1;
    }
    else return 0;
}

void dfs(int r,int c,int energy){
   int nr,nc;
   if(r==n-1&&c==m-1){
            if(energy>ans){
                ans=energy;
            }
           return;
   }
   //if(onBoard(r,c))
    {
       if(v[r][c]=='T'){
           energy+=150;
       }
       else{
         if(energy>=100){
            energy-=100;
         }
         else{
            return;
         }
       }
   }
   /*else{
      return;
   }*/


   fr(i,0,2){
      nr=r+dr[i];
      nc=c+dc[i];

      if(onBoard(nr,nc)){
         if(energy>en[nr][nc]){
            en[nr][nc]=energy;
            dfs(nr,nc,energy);
         }
      }
   }


}


int main(){
 int t;
 si(t);

 while(t--){
    si(n),si(m);
    int dp[201][201];
    fr(i,0,n){
       fr(j,0,m){
        en[i][j]=-1;
        scanf(" %c",&v[i][j]);
        dp[i][j]=0;
         /*if(v[i][j]=='T'){
            dp[i][j]=150;
         }
         else if(v[i][j]=='D'){
            dp[i][j]=-100;
         }
         else{
              dp[i][j]=-1;
         }*/
     }
    }
    int vis[201][201]={{}};
    vis[0][0]=1;
   dp[n-1][m-1]=-1;
    dp[0][0]=0;
    //dfs(0,0,0);
     int nr,nc;
     fr(i,0,n){
        fr(j,0,m){

          if(vis[i][j]){
            fr(k,0,2){
                nr=i+dr[k];
                nc=j+dc[k];

                if(onBoard(nr,nc)){

                   if(v[i][j]=='T'){
                           vis[nr][nc]=1;
                        dp[nr][nc]=max(dp[nr][nc],dp[i][j]+150);
                    }
                   else if(v[i][j]=='D'){
                      if(dp[i][j]>=100)vis[nr][nc]=1;
                       dp[nr][nc]=max(dp[nr][nc],dp[i][j]-100);
                   }
                }
            }
        }
      }
     }


    if(v[n-1][m-1]=='L'&&dp[n-1][m-1]>-1){
       cout<<dp[n-1][m-1];pln;
    }
    else{
        pi(-1);pln;
    }
    /*fr(i,0,n){
       fr(j,0,m){
          printf("%c",v[i][j]);
       }pln;
    }
    fr(i,0,n){
       fr(j,0,m){
          printf("%d ",en[i][j]);
       }pln;
    }
fr(i,0,n){
       fr(j,0,m){
          printf("%d ",dp[i][j]);
       }pln;
    }*/
 }

return 0;
}
