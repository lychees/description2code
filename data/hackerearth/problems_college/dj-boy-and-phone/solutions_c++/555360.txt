#include<bits/stdc++.h>
using namespace std;
#define inp(a) scanf("%d",&a)
#define out(a) printf("%d\n",a)
#define inpll(a) scanf("%lld",&a)
#define outll(a) printf("%lld\n",a)

#define VI vector<int>
#define VLL vector<long long int>
#define PQI priority_queue<int>
#define PQLL priority_queue<long long int>
#define VP vector<pair<int,int> >
#define II pair<int,int>
#define ll long long int
#define ull unsigned long long int

#define getcx getchar_unlocked
#define sz(a) (int)a.size()
#define mod 1000000009
#define mp make_pair
#define X first
#define Y second
#define pb push_back
#define rep(i,a,b) for(i=a;i<b;i++)

/*inline void inpq( int &n ) {
n=0; int ch = getcx(); int sign = 1;

while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }

while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }

n = n * sign;
}*/

/*bool compare(const pair<ll,ll>& p,const pair<ll,ll> &q){
return p.X<q.X;
}*/
/*bool comp(const node &x,const node &y){
return x.a<y.a;
}*/

#define N 10005
#define ln 15

int i,j,k,n,t;

ll DP[N][10]={0};

int main(){
	
	rep(i,0,10) DP[1][i]=1;
	
	rep(i,2,N){
		DP[i][0]=(DP[i-1][0]+DP[i-1][8])%mod;
		DP[i][1]=(DP[i-1][1]+DP[i-1][2]+DP[i-1][4])%mod;
		DP[i][2]=(DP[i-1][1]+DP[i-1][2]+DP[i-1][3]+DP[i-1][5])%mod;
		DP[i][3]=(DP[i-1][2]+DP[i-1][3]+DP[i-1][6])%mod;
		DP[i][4]=(DP[i-1][1]+DP[i-1][4]+DP[i-1][5]+DP[i-1][7])%mod;
		DP[i][5]=(DP[i-1][2]+DP[i-1][4]+DP[i-1][5]+DP[i-1][6]+DP[i-1][8])%mod;
		DP[i][6]=(DP[i-1][3]+DP[i-1][5]+DP[i-1][6]+DP[i-1][9])%mod;
		DP[i][7]=(DP[i-1][4]+DP[i-1][7]+DP[i-1][8])%mod;
		DP[i][8]=(DP[i-1][5]+DP[i-1][7]+DP[i-1][9]+DP[i-1][0]+DP[i-1][8])%mod;
		DP[i][9]=(DP[i-1][6]+DP[i-1][8]+DP[i-1][9])%mod;
	}
	
	inp(t);
	while(t--){
		inp(n);
		ll ans=0;
		rep(i,0,10){
			ans=(ans+DP[n][i])%mod;
		}
		cout<<ans<<'\n';
	}
	return 0;
}