#include<bits/stdc++.h>
#define ll long long
#define f(i,a,b) for(i=a;i<b;i++)        
#define sc(i) scanf("%lld",&i)
using namespace std;
//ll v[100007] ;char g[100007],c[10007];
ll *v;char *g,*c;
bool ok;

ll vert;
void dfs(ll node,char cur,vector<ll>a[])
{ll i;
    if(v[node])
        return;
    c[node]=cur;
    v[node]=1;
    f(i,0,(ll)a[node].size())
    {
        vert=a[node][i];
        if(vert==node)
            continue;
        if(v[vert])
        {        if(cur==c[vert])
        {ok=0;return;}}
else
{
    char nw=cur=='P'?'B':'P';
c[vert]=nw;
    dfs(vert,nw,a);
}
    }
}

    int main()
{
    ll i,n,m;
sc(n),sc(m);
vector<ll>a[100007];
         g=(char *)calloc(n+1,2);v=(ll *)calloc((n+1),8);c=(char* )calloc((n+1),2);
    //memset(g,0,sizeof(g));memset(c,0,sizeof(c));memset(v,0,sizeof(v));
        f(i,1,n+1)
        cin>>g[i];
 ll x,y;
    
    f(i,0,m)
       cin>>x>>y,a[x].push_back(y),a[y].push_back(x);
    ll ans=0,tmp;ok=1;
    dfs(1,'P',a);
    if(ok)
    {
        f(i,1,n+1)
    if(g[i]=='B'&&c[i]=='P'||g[i]=='G'&&c[i]=='B')ans++;
        
    tmp=0;
    memset((ll *)v,0,8*(n+1));
    memset((char *)c,0,2*(n+1));
      
      // memset(c,0,sizeof(c));memset(v,0,sizeof(v));
        
    dfs(1,'B',a);
        f(i,1,n+1)
    if(g[i]=='B'&&c[i]=='P'||g[i]=='G'&&c[i]=='B')tmp++;
       ans=min(ans,tmp); 
        cout<<ans;
    }
else
cout<<"Not possible";
    return 0;
    }
    