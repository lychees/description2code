#include<bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define len(s) s.length()
#define forp(i,a,b) for( i=a;i<=b;i++)
#define rep(i,n)    for( i=0;i<n;i++)
#define ren(i,n)    for( i=n-1;i>=0;i--)
#define forn(i,a,b) for( i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define b(v) v.begin()
#define e(v) v.end()
#define mem(n,m) memset(n,m,sizeof(n))
#define lb lower_bound
#define ub upper_bound
#define pii pair<int,int>
#define pll pair<long long,long long>
#define vii vector<int>
#define vll vector<long long>
#define gl(cin,s)  getline(cin,s);
#define bitc(n) __builtin_popcountll(n)
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 

#define boost ios_base::sync_with_stdio(0)
#define MOD 1000000007
#define EPSILON 1e-9
#define PI 3.14159265358979323846
#define SIZE 100001

typedef long long  ll;
typedef unsigned long long ull;
typedef long double  ldo;
typedef double  db ;
using namespace std;
int n,k,m;
ll  dp[501][11][501][2][6];
ll func(int i,int j,int cnt,int val,int cnt2)
{
	if(i==n and j==m){
		if(val){
			if(cnt>=k and cnt2>=2)
			return 1;
			return 0;
		}
		else{
			if(cnt < k-1)
			return 0;
			if(cnt2==0)
			return 0;
			if(cnt==k-1 or cnt2==1)
			return 1;
			return 2;
		}
	}
	if(dp[i][j][cnt][val][cnt2]!=-1)
	return dp[i][j][cnt][val][cnt2];
	ll ans=0;
	if(j==m)
	{
		if(cnt2==0)
		return 0;
		if(cnt2==1){
			if(val==1)
			return 0;
			ans+=func(i+1,1,min(cnt+1,k),0,0);
		}
		else{
			ans+=func(i+1,1,min(cnt,k),0,0);
			ans%=MOD;
			if(val==0)
			ans+=func(i+1,1,min(cnt+1,k),0,0);
			ans%=MOD;
		}
	}
	else
	{
		
		ans+=func(i,j+1,min(cnt,k),0,cnt2);
		ans%=MOD;
		if(val==0)
		ans+=func(i,j+1,min(cnt+1,k),1,cnt2+1);
		ans%=MOD;
	}
	dp[i][j][cnt][val][cnt2]=ans;
	return ans;
}
int main()
{  	
	/* #ifndef ONLINE_JUDGE
	freopen(fi, "r", stdin);
	#endif */
	//freopen("route.in","r",stdin);
	//freopen("route.out","w",stdout);
	//cin.ignore();
	//cin.clear();
	boost;
	//cin.tie(0);
	mem(dp,-1);
	cin>>n>>m>>k;
	cout<<func(1,1,0,0,0)<<endl;
	return 0;
}