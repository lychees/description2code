#include<bits/stdc++.h>
#include<math.h>
using namespace std;
long long int left_most_corner(long long int x,long long int y,long long int x1,long long int y1);
long long int min(long long int s1,long long int s2,long long int s3,long long int s4);
int main()
{
	long long int n,k;
	int X[100000],Y[100000],K[100000];
	cin>>n>>k;
	int i;
	for(i=1;i<=k;i++)
	cin>>X[i];
	for(i=1;i<=k;i++)
	cin>>Y[i];
	long long int t=0;
	int s1=0,s2=0,s3=0,s4=0;
	for(i=1;i<=k;i++)
	{
		if((X[i]==1 && Y[i]==1) || (X[i]==1 && Y[i]==n) || (X[i]==n && Y[i]==1) || (X[i]==n && Y[i]==n))
		{
			continue;
		}
		else
		{
		s1=left_most_corner(1,1,X[i],Y[i]);
	//	printf("s1-%d\n",s1);
		s2=left_most_corner(1,n,X[i],Y[i]);
	//	printf("s2-%d\n",s2);
		s3=left_most_corner(n,1,X[i],Y[i]);
	//	printf("s3-%d\n",s3);
		s4=left_most_corner(n,n,X[i],Y[i]);
	//	printf("s4-%d\n",s4);
		K[t++]=min(s1,s2,s3,s4);
	//	printf("\nmin-%d ",K[t-1]);
		}
	}	
	long long int sum=0;
	for(i=0;i<t;i++)
	{
		sum=sum+K[i];
	}
	printf("%lld\n",sum);
}
long long int min(long long int s1,long long int s2,long long int s3,long long int s4)
{
		int i;
	int arr[4]={s1,s2,s3,s4};
//	for(i=0;i<4;i++)
//	printf("%d ",arr[i]);
//	printf("\n");

	long long int min=arr[0];
	for(i=1;i<4;i++)
	{
		if(min>arr[i])
		min=arr[i];
	}
	return min;
}
long long int left_most_corner(long long int x1,long long int y1,long long int x2,long long int y2)
{
	long long int cnt;
	cnt=abs(x1-y2)+abs(x2-y1);
	//printf("\n%d\n",cnt);
	return cnt;
}