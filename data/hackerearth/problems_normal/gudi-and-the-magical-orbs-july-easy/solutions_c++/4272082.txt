#include <bits/stdc++.h>
using namespace std;

int A[102][102];
int dp[102][102][502];

int solve(int N, int M, int sum)
{
	if(N<=0 || M<=0 || sum<0)
		return 0;
	
	if(N==1 && M==1)
	{
		if(sum-A[1][1])
			return 0;
		
		return 1;
	}
	
	if(dp[N][M][sum]!=-1)
		return dp[N][M][sum];
	
	int ans = (solve(N-1, M, sum-A[N][M])|solve(N, M-1, sum-A[N][M]));
	ans = (ans|solve(N-1, M-1, sum-A[N][M]));
	
	return dp[N][M][sum] = ans;
}

int main()
{
	int T;
	cin >> T;
	
	while(T--)
	{
		int N, M, K;
		cin >> N >> M >> K;
		
		for(int i=1; i<=N; i++)
			for(int j=1; j<=M; j++)
				cin >> A[i][j];
		
		int flag = 0;
		memset(dp, -1, sizeof(dp));
		
		for(int i=K; i>=1; i--)
			if(solve(N, M, i))
			{
				cout << i << endl;
				flag = 1;
				break;
			}
		
		if(!flag)
			cout << -1 << endl;
	}
	
    return 0;
}
