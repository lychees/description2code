from operator import mul
mod = 10**9 + 7


def foo(n):
    while n < 0:
        n += mod
    return n


def matrixMul(a, b):
    x1 = foo((a[0][0] * b[0][0] + a[0][1] * b[1][0]) % mod)
    x2 = foo((a[0][0] * b[0][1] + a[0][1] * b[1][1]) % mod)
    x3 = foo((a[1][0] * b[0][0] + a[1][1] * b[1][0]) % mod)
    x4 = foo((a[1][0] * b[0][1] + a[1][1] * b[1][1]) % mod)
    return [[x1, x2], [x3, x4]]


def identity():
    return [[1, 0], [0, 1]]


def matrixExp(m, pow):
    if pow == 0:
        return identity()
    d = matrixExp(m, pow/2)
    if ((pow & 1)):
        return matrixMul(matrixMul(d, d), m)
    else:
        return matrixMul(d, d)


mm = [[3, -1], [1, 0]]
t = input()
for i in range(t):
    n = input()
    if (n == 1):
        print 1
    elif (n == 2):
        print 3
    else:
        n -= 2
        d = matrixExp(mm, n)
        print foo((3*d[0][0]+d[0][1]) % mod)
