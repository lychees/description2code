#include <iostream>
using namespace std;

int merger(int arr[], char chr[], int start, int mid, int end) {
	int left = start;
	int left_end = mid;
	int right = mid + 1;
	int right_end = end;
	int total = end - start + 1;
	int copyArr[total];
	char copyChr[total];
	int count = 0;
	
	while(left<=left_end && right<=right_end) {
		if(arr[left]<=arr[right]) {
			copyChr[count] = chr[left];
			copyArr[count++] = arr[left++];
		} else {
			copyChr[count] = chr[right];
			copyArr[count++] = arr[right++];
		}
	}
	
	while(left<=left_end) {
		copyChr[count] = chr[left];
		copyArr[count++] = arr[left++];
	}
	
	while(right<=right_end) {
		copyChr[count] = chr[right];
		copyArr[count++] = arr[right++];
	}
	
	for(int i=0; i<total; i++) {
		arr[start+i] = copyArr[i];
		chr[start+i] = copyChr[i];
	}
}

void mergeSort(int arr[], char chr[], int start, int end) {
	if(start < end) {
		int mid = (start + end) / 2;
		mergeSort(arr, chr, start, mid);
		mergeSort(arr, chr, mid+1, end);
		merger(arr, chr, start, mid, end);
	}
}

void sort(int arr[], char chr[], int length) {
	mergeSort(arr, chr, 0, length-1);
}

int main() {
    int t;
    char arr[200], *ptr;
    cin>>t;
    while(t--) {
    	int freq[26] = {0};
    	char chars[26] = {0};
    	int length=0;
    	
    	cin>>arr;
    	ptr = arr;    	
    	while(*ptr != '\0') {
    		freq[*ptr-'a']++;
    		ptr++;
    	}
    	
    	for(int i=0; i<26; i++) {
    		if(freq[i] != 0) {
    			freq[length] = freq[i];
    			chars[length] = i + 'a';    			
    			length++;
    		}
    	}
    	sort(freq, chars, length);    	
    	for(int i=0; i<length; i++) {
    		for(int j=0; j<freq[i]; j++) {
    			cout<<chars[i];
    		}
    	}
    	cout<<endl;    	
    }
    return 0;
}