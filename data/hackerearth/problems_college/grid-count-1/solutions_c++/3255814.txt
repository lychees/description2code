#include <iostream>
#include <cmath>
using namespace std;
bool is_square(long long  n) {
    if (n < 0)
        return false;
    long long val(round(sqrt(n)));
    return n == val * val;
}

bool is_cube(long long n) {
    long long val(round(cbrt(n)));
    return n == val * val * val;
}
int main()
{
	int n, k;
	cin>>n>>k;
	int  array[n][n];
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			cin>>array[i][j];
	if (k > n)
		return 0;
	int boundsum[n][n];
	for (int j=0; j<n; j++)
    	{
    		int total = 0;
    		for (int i=0; i<k; i++)
    			total += array[i][j];
    		boundsum[0][j] = total;
    	for (int i=1; i<n-k+1; i++)
    	{	
    		total += (array[i+k-1][j] - array[i-1][j]);
    		boundsum[i][j] = total;
    	}
    }
    int count=0;
    for (int i=0; i<n-k+1; i++)
    {
    	long long  total = 0;
    	for (int j = 0; j<k; j++)
    		total += boundsum[i][j];
    	 if(is_cube(total))
		    count++;  
    	for (int j=1; j<n-k+1; j++)
    	{
		    total += (boundsum[i][j+k-1] - boundsum[i][j-1]);   
		    if(is_cube(total))
		       count++;
		}
	}
 cout << count<<endl;
	return 0;
}
