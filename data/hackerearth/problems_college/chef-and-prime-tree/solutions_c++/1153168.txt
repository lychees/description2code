#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <utility>
#include <cmath>
#include <iomanip>
#include <memory.h>
#include <sstream>
#include <cstdlib>

using namespace std;

const int N = 5000001;
bool sieve[N];

int lca(int x, int y) {
  vector<int> v;
  while (x) {
    v.push_back(x);
    x /= 2;
  }
  int n = v.size();
  int i = 0;
  while (y) {
    while (i < n && y < v[i])
      ++i;
    if (y == v[i])
      break;
    y /= 2;
  }
  return y;
}

int main() {
  memset(sieve, 1, sizeof(sieve));
  sieve[1] = false;
  for (int i = 2; i * i < 5000000; ++i) {
    if (sieve[i]) {
      for (int j = i; i * j < 5000000; ++j) {
        sieve[i * j] = false;
      }
    }
  }
  int q;
  scanf("%d", &q);
  int x, y;
  long long ans;
  while(q--) {
    scanf("%d %d", &x, &y);
    int l = lca(x, y);
    ans = 0;
    while (x >= l) {
      if (sieve[x])
        ans -= x;
      else
        ans += x;
      x /= 2;
    }
    while (y != l) {
      if (sieve[y])
        ans -= y;
      else
        ans += y;
      y /= 2;
    }
    printf("%lld\n", ans);
  }
  return 0;
}