#include <bits/stdc++.h>

using namespace std;

//#define test

#define ll long long int

int main() {
    std::ios::sync_with_stdio(false); //makes cin and cout faster.
#ifdef test
	freopen("a.in","rt",stdin);
	freopen("a.out","wt",stdout);
#endif
    int t;
    cin >> t;
    for(int tt = 1; tt <= t; tt++) {
        int n, p;
        cin >> n >> p;
        int a[n];
        for(int i = 0; i < n; i++) cin >> a[i];
        long long int s = 0, ans = 0;
        ll k = 0;
        ll dp[n + 1];
        memset(dp, 0, sizeof(dp));
        queue<int> q;
        for(int i = 0; i < n; i++) {
            if(a[i] > p) {
                s = 0;
                ans = ans + (k * (k + 1) / 2);
                k = 0;
                while(!q.empty()) q.pop();

            }
            else if(s + a[i] <= p) {
                q.push(a[i]);
                dp[q.size()]++;
                s += a[i];
                k++;
            }
            else {
                ans = ans + (k * (k + 1) / 2);
                while(!q.empty() && s + a[i] > p) {
                    int z = q.front();
                    q.pop();
                    s -= z;
                }
                k = q.size();
                ans = ans - (k * (k + 1) / 2);
                s += a[i];
                q.push(a[i]);
                dp[q.size()]++;
                k++;
            }
        }
        for(int i = n - 1; i >= 0; i--) {
            dp[i] += dp[i + 1];
        }
        //if(k > 0) ans = ans + (k * (k + 1) / 2);
        //cout << "Case #" << tt << ": " << ans << endl;
        for(int i = 1; i <= n; i++) cout << dp[i] << " ";
        cout << endl;
    }
    return 0;
}
