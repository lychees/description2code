#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main()
{
 int t;
 scanf("%d", &t);
 for(int k=0;k<t;k++)
 {
 int n;
 scanf("%d", &n);
 if(n==0||n==1)
 {
 	cout<<"0 0"<<endl;
 }
 else{
 vector < vector < pair<int,int> > > vec(n+1);
 for(int i=0;i<n-1;i++)
 {
 	int a,b,c;
 	scanf("%d", &a);
 	scanf("%d", &b);
 	scanf("%d", &c);
 	vec[a].push_back(make_pair(b,c));
 	vec[b].push_back(make_pair(a,c));
 }
 bool v[n+1];
 memset(v,0,sizeof(v)/sizeof(v[0]));
int max=0,index=0;    
queue <pair<int,int> > q;
q.push(make_pair(1,0));
v[1]=1;
while(!q.empty())
{
pair<int,int> temp;
temp=q.front();
q.pop();
//if(vec[temp.first].size()==1)
//{
if(temp.second>max)
{
	max=temp.second;
	index=temp.first;
}
//continue;
//}
for(int i=0;i<vec[temp.first].size();i++ )
{
if(v[vec[temp.first][i].first]==0)
{
q.push(make_pair(vec[temp.first][i].first,(vec[temp.first][i].second+temp.second)));	
	v[vec[temp.first][i].first]=1;
}
	}}
 q.push(make_pair(index,0));
  memset(v,0,sizeof(v)/sizeof(v[0]));
 v[index]=1;
 max=0;
 while(!q.empty())
{
pair<int,int> temp;
temp=q.front();
q.pop();
//if(vec[temp.first].size()==1)
//{
if(temp.second>max)
{
	max=temp.second;
	index=temp.first;
}
//continue;
//}
for(int i=0;i<vec[temp.first].size();i++ )
{
if(v[vec[temp.first][i].first]==0)
{
q.push(make_pair(vec[temp.first][i].first,(vec[temp.first][i].second+temp.second)));	
	v[vec[temp.first][i].first]=1;
}
	}}
if(max<=100)cout<<"0 ";
if(max>100&&max<=1000)cout<<"100 ";
if(max>1000&&max<=10000)cout<<"1000 ";
if(max>10000)cout<<"10000 ";
	
	
 cout<<max<<endl;   
    
    
    
    
 }  
    
 }  
    return 0;
}
