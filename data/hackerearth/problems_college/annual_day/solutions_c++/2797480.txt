#include<bits/stdc++.h>
using namespace std;
void pre()
{
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
}
// different datatypes
typedef long long int ll;
typedef unsigned long long int ull;
typedef long int l;
typedef unsigned long int ul;
typedef long double ld;

// constants

const ll mod=(10e9)+7;
//useful functions
template<class T>
T powerm(T a,T b) // to calculate a to the power b % mod
{
    if(b==0) return 1;
    T res = powerm(a,b/2);
    res = (res*res)%mod;
    if(b%2!=0) res = (res*a)%mod;
    return res;
}
template<class T>
T power(T a,T b) // to calculate a to the power b
{
    if(b==0) return 1;
    T res = power(a,b/2);
    res = (res*res)%mod;
    if(b%2!=0) res = (res*a)%mod;
    return res;
}
template<class T>
T max(T a,T b) // maximum of two numbers
{
  return (a>b)?a:b;
}
template<class T>
T min(T a,T b) // minimum of two numbers
{
  return (a<b)?a:b;
}
// multiply 2 numbers
template<class T>
T RussianPeasant(T a,T b)
{
  T result = 0;
  while(b>0) //while 2nd number doesn't become zero
  {
    if(b&1) //if second number becomes odd add the first number to result
      result+=a;
      // Double the 1st number and halved the second number
      a = a << 1;
      b = b >> 1;
  }
  return result;
}
//count trailing zero in factorial of a number
template<class T>
T CountZeroFact(T n)
{
  T count =0;
  for(T i=5;n/i>=1;i*=5)
  {
    count+=n/i;
  }
  return count;
}
// gcd (hcf)
template<class T>
T gcd(T a,T b)
{
  return b==0 ? a : gcd(b,a%b);
}
//lcm
template<class T>
T lcm(T a,T b)
{
  return (a/gcd(a,b) *b);
}
// faster input bitwise
inline int get_int() //it works for (int ll l ull)
{
  int n=0,neg=0,c=getchar_unlocked();
  while((c<'0'||c>'9')&&c!='-')c=getchar_unlocked();
  if(c=='-') {neg=1;c=getchar_unlocked();}
  while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=getchar_unlocked();
  if(neg) n=-n;
  return n;
}
template<class T>
T countSetBits(T n)
{
  T count = 0;
  while(n)
  {
    count += n & 1;
    n >>= 1;
  }
  return count;
}
int main()
{
  pre();
  int t;
  cin>>t;
  while(t--)
  {
	int n,k;
	cin>>n>>k;
	int a[n],ans[n];
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
		ans[i]=countSetBits(a[i]);
	}
	sort(ans,ans+n,greater<int>());
	long long int ans1=0;
	for(int i=0;i<k;i++)
	{
		ans1+=ans[i];
	}
	cout<<ans1<<endl;
  }
  return 0;
}
//  lcm to be added