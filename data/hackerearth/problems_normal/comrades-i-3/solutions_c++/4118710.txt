/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
int intime[100005];
int outime[100005];
int dep[100005];
vector<int>v[100005];
int co=1;
bool visited[100005];
void ini()
{
    for(int i=0;i<=100004;i++)
        v[i].clear();
    memset(outime,0,sizeof(outime));
    memset(intime,0,sizeof(intime));
    memset(dep,0,sizeof(dep));
    memset(visited,0,sizeof(visited));
    co=1;
}
void dfs(int node,int depth)
{
    intime[node]=co++;
    dep[node]=depth;
    visited[node]=true;
    for(int i=0;i<v[node].size();i++)
    {
        if(!visited[v[node][i]])
            dfs(v[node][i],depth+1);
    }
    outime[node]=co++;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ini();
        int n;
        cin>>n;
        for(int i=1;i<=n;i++)
        {
            int a;
            cin>>a;
            v[a].pb(i);
        }
        dfs(0,1);
        int q;
        cin>>q;
        while(q--)
        {
            int x,y;
            cin>>x>>y;
            if(intime[y]<intime[x]&& outime[y]>outime[x])
                cout<<(dep[x]-dep[y]-1)<<"\n";
            else
                cout<<-1<<"\n";
        }
    }
}
