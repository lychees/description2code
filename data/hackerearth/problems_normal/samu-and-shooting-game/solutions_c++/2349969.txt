#include <iostream>
#include <string>
#include <cstring>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <cstdio>
#include <algorithm>
#include <math.h>
using namespace std;

#define f(i,s,e) for (int i = int(s); i != int(e); i++)
#define ft(i,c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define all(c) (c).begin(), (c).end()

//read scanf functions
#define readI(x) scanf("%d", &x)
#define readL(x) scanf("%I64d", &x)
#define readD(x) scanf("%f", &x)
#define readII(x, y) scanf("%d %d", &x, &y)
#define readLL(x, y) scanf("%I64d %I64d", &x, &y)

typedef long long ll; 

#define OO (1<<30)

int T, X, Y, N, W;
double P1, P2;
double memo[1003][1003];

double calcMemo(int i, int win) {
	if (win >= 1000) win = 1000;

	if (i == 0) return win >= W;
	double &ret = memo[i][win];
	if (ret == ret) return ret;


	ret = P1 * calcMemo(i-1, win+X);
	ret += (1-P1) * calcMemo(i-1, win);

	double ret2 = 0;
	ret2 += P2 * calcMemo(i-1, win+Y);
	ret2 += (1-P2) * calcMemo(i-1, win);


	return ret = max(ret, ret2);
}
int main() {
	cin >> T;
	while (T--) {
		cin >> X >> Y >> N >> W >> P1 >> P2;

		P1/=100.0; P2/=100.0;

		memset(memo, -1,sizeof memo);
		cout.precision(6);
		cout << fixed << calcMemo(N, 0)*100 << "\n";
	}


	return 0; 
}
