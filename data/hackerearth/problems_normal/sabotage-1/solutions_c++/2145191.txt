#include <iostream>
#include <algorithm>
#include <vector>
#define MAXN 100010

using namespace std;

int uf[MAXN];

int find(int u) {
    if (uf[u] == u) return u;
    return uf[u] = find(uf[u]);
}

void merge(int u, int v) {
    uf[find(v)] = find(u);
}

int n,m;
int u[MAXN],v[MAXN];
vector<int> ans;

int main() {
    cin >> n >> m;
    for (int i = 1; i <= m; i++)
        cin >> u[i] >> v[i];

    for (int i = 1; i <= n; i++)
        uf[i] = i;

    for (int i = m; i > 0; i--) {
        if (find(u[i]) != find(v[i])) {
            merge(u[i],v[i]);
        }
        else {
            ans.push_back(i);
        }
    }

    reverse(ans.begin(),ans.end());
    cout << ans.size() << '\n';
    for (int x : ans)
        cout << x << '\n';
}
