//Algo for just prev small
//          -> 3 4 5 1 2 3 4
//	find just small from 5 
//          -> 3 4 &5 1 2 3 &4
//	replace 
//			-> 3 4 &4 1 2 3 &5
//	sort in reveser order from &4			
//			-> 3 4 &4 &5 3 2 1
//	reverse checking...
// 			-> 3 4 &5 &4 3 2 1 -> 
//    got the initial string 
//			-> 3 4 &5 1 2 3 &4

#include <iostream>
using namespace std;
string sortAsc(string str){

	int a[30]={0};
	int len = str.length();
	if(len==1) return str;
	for (int i = 0; i < len; ++i)
	{
		a[str[i]-'0']++;
	}
	string ans="";
	for (int i = 0; i < 10; ++i)
	{
		while( a[i])
			{ans = ans + char(i+'0') ; a[i]--;}
		
	}
	return ans;
}

string sortDesc(string str){
	int a[10]={0};
	int len = str.length();
	if(len==1) return str;
	for (int i = 0; i < len; ++i)
	{
		a[str[i]-'0']++;
	}
	string ans="";
	for (int i = 9; i >= 0; i--)
	{
		while( a[i])
			{ans = ans + char(i+'0') ; a[i]--;}
		
	}
	return ans;
}

string nextJust(string str){
		//cout<<str<<"\n";
	int counter =0;
	int len = str.length();
	if(len==1){ return "-1";}

	while(counter++ <2){
		 
		
		int a[10]={0};

		a[str[len-1]-'0']++;

		//cout<<"start "<< a[str[len-1]]<<" jdjdkfj";
		int flag=0;
		int index = -1,j,i;
		for ( i = len-2; i >=0 ;i-- )
		{
			
			flag=0;
			j=(str[i]-'0')+1;
			//cout<<"\n J="<<j<<" ";
			while(j < 10 )
			{   //cout<<" a[j]="<<a[j]<<" ";
				if(a[j]>0) 
				{ 
					//cout<<index <<" "<< str[index] <<" ";
					flag=1;index=i;a[j]--;a[str[i]-'0']++;str[i]=char(j+'0'); 
					//cout<<str[index];
					break;
		        }
		        j++;
		    }
		    if(flag==1) break;
		    a[str[i]-'0']++;

		}
		if(flag==0) {return "-1";}
		//i=0;
		//string ans="";
		//cout<<index<<" ";
		//while(i<index+1) { ans = ans + str[i++]; }
		i=0;
		index++;
		while(i<10){
			       while(a[i]>0) {str[index]=char(i+'0') ; index++; a[i]--;}
			       i++;
		}
	}

		//while(i<10){ while(a[i]>0) {ans =ans + char(i+'0'); a[i]--;} 
	    //            i++;}
	    return str;
}

string prevJust(string str){
	    int counter=0;
		//cout<<str<<"\n";
		int len = str.length();
		if(len==1){ return "-1";}
		while(counter <2){
			counter++;
		
		int a[10]={0};

		a[str[len-1]-'0']++;

		//cout<<"start "<< a[str[len-1]]<<" jdjdkfj";
		int flag=0;
		int index = -1,j,i;
		for ( i = len-2; i >=0 ;i-- )
		{
			
			flag=0;
			j=(str[i]-'0')-1;
			//cout<<"\n J="<<j<<" ";
			while(j>=0)
			{   //cout<<" a[j]="<<a[j]<<" ";
				if(a[j]>0) 
				{ 
					//cout<<index <<" "<< str[index] <<" ";
					flag=1;index=i;a[j]--;a[str[i]-'0']++;str[i]=char(j+'0'); 
					//cout<<str[index];
					break;
		        }
		        j--;
		    }
		    if(flag==1) break;
		    a[str[i]-'0']++;

		}
		if(flag==0) {return "-1";}
		i=0;
		//string ans="";
		//cout<<index<<" ";
		//while(i<index+1) { ans = ans + str[i++]; }
		i=9;
		index++;
		while(i>=0){ 
			  while(a[i]>0) { str[index] = char(i+'0'); a[i]--;index++;} 
	                i--;}
         }
	    return str;
}


int main(){
	string str;
	int T;
	cin >> T;
	while(T--){
	cin >>str;
	string smallest="",greatest=""; 
	smallest = sortAsc(str); 
	greatest = sortDesc(str);

	greatest = prevJust(greatest);//cout<<greatest<<" \n";

	smallest = nextJust(smallest);
	if(smallest=="-1" || greatest =="-1") cout<<"Not possible!\n";
	else 
	cout<<smallest<<" "<< greatest<< endl;
}

}