#include<bits/stdc++.h>
#define pb push_back
#define rep(i,a,b) for(int i=(int)a;i<(int)b;++i)
#define rrep(i,a,b) for(int i=(int)a;i>=(int)b;--i)
#define ab(a) (a<0)?(-1*a):a
#define pc putchar_unlocked
#define gc getchar_unlocked
#define ll long long int
#define repl(i,a,b) for(ll i=(ll)a;i<(ll)b;++i)
#define rrepl(i,a,b) for(ll i=(ll)a;i>=(ll)b;--i)
#define mset(a,b,c) rep(i,0,b) a[i]=c
#define F first
#define S second
#define mp make_pair
#define clr(x) x.clear()
const ll mod=1000000007;
const double pi=acos(-1.0);
#define itoc(c) ((char)(((int)'0')+c))
#define pll pair<ll,ll>
#define pii pair<int,int>
#define MAX 1000010
#define all(p) p.begin(),p.end()
#define maxVal(x,y) ((x)>(y))?(x):(y)
#define minVal(x,y) ((x)<(y))?(x):(y)
#define getMid(s,e) ((s)+((e)-(s))/2)
#define mini INT_MIN
#define maxi INT_MAX
#define nline cout<<endl;
using namespace std;
inline void rdi(int &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void rdl(ll &n) { n=0; char c=gc(); while(c<'0' or c>'9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void print(int a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }
inline void prlong(ll a) { char s[20]; int i=0; do { s[i++]=a%10+'0'; a/=10; } while(a); i--; while(i>=0) pc(s[i--]); pc('\n'); }

ll t, a[MAX], b[MAX];
int v[MAX], p[MAX];
vector<vector<int> > cycle;
int main() {
	int n,r,k,s,c;
	rdi(n); rdl(t);
	rep(i,0,n) rdl(a[i]);
	rep(i,0,n) rdi(p[i]), --p[i];
	rep(i,0,n) {
		if(!v[i]) {
			c=i;
			vector<int> vv;
			while(!v[c]) {
				v[c]=1;
				vv.pb(c);
				c=p[c];
			}
			cycle.pb(vv);
		}
	}
	int sh;
	rep(i,0,cycle.size()) {
		sh=t%cycle[i].size();
		rep(j,0,cycle[i].size()) b[cycle[i][j]]=a[cycle[i][(j+sh)%cycle[i].size()]];
	}
	rep(i,0,n) cout<<b[i]<<" "; nline
}
/*
1 2 3 4 5 6
[2 3 4 1 0]

3 4 5 2 1

5 2 1 4 3

1 4 3 2 5

3 2 5 4 1

5 4 1 2 3

1 2 3 4 5
*/
/*
1 2 3 4 5 6
[3 4 6 2 1 5]

3 4 6 2 1 5

6 2 5 4 3 1

5 4 1 2 6 3

1 2 3 4 5 6


*/