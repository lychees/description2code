#pragma comment(linker, "/STACK:500000000")
#include <algorithm>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y123
#define y1 y1234
#define ll long long
#define PI 3.1415926535897932384626433832795
#define EPS 1e-9
#define INF 2147483647
#define N 200005

ll gcd(ll a, ll b) { return (!b) ? a : gcd(b, a % b); }
int lcm(int a, int b) { return a / gcd(a,b) * b; }

int nextInt() { int n; scanf("%d", &n); return n; }
ll nextLong() { ll n; scanf("%I64d", &n); return n; }

bool isLucky(int t) {
	int s = t % 60;
	int m = (t % (60 * 60)) / 60;
	int h = t / (60 * 60);
	set<int> cnt;
	cnt.insert(h / 10);
	cnt.insert(h % 10);
	cnt.insert(m / 10);
	cnt.insert(m % 10);
	cnt.insert(s / 10);
	cnt.insert(s % 10);
	return cnt.size() == 6;
}

int main() {
	int t = nextInt();
	while (t--) {
		int h, m, s;
		scanf("%d:%d:%d", &h, &m, &s);
		int cur = s + m * 60 + h * 60 * 60;
		while (!isLucky(cur)) {
			cur = (cur + 1) % (24 * 60 * 60);
		}
		printf("%02d:%02d:%02d\n", cur / (60 * 60), (cur % (60 * 60)) / 60, cur % 60);
	}
    return 0;
}