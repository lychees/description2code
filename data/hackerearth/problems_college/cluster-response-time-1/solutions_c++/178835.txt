#include <iostream>
#include <algorithm>
using namespace std;

struct edge {
	int u, v;
	double t;
};

edge e[250 * 250];
int f[260];
bool cmp(const edge& a, const edge& b)
{
	return a.t < b.t;
}
int find(int i)
{
	if (f[i] == i)
		return i;
	return f[i] = find(f[i]);
}
int main()
{
	int t;
	scanf("%d", &t);
	while (t--) {
    	int n, m;
    	scanf("%d%d", &n, &m);
    	for (int i = 0; i < m; ++i) {
    		int u, v;
    		double t;
    		scanf("%d%d%lf", &u, &v, &t);
    		e[i].u = u;
    		e[i].v = v;
    		e[i].t = t;
    	}
    	sort(e, e + m, cmp);
    	double ans = 0;
    	for (int i = 0; i < n; ++i) f[i] = i;
    	for (int i = 0; i < m; ++i) {
    		if (find(e[i].u) != find(e[i].v)) {
    			f[find(e[i].u)] = find(e[i].v);
    			ans += e[i].t;
    		}
    	}
    	printf("%.2lf\n", ans);
	}
    return 0;
}
