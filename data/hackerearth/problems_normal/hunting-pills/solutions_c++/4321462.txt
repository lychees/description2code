#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define mp make_pair

int pills[100000];
vector<int>graph[100000];
vector<int>rgraph[100000];
stack<int>stk;
int visit[100000];
int rvisit[100000];
void dfs(int);
void scc(int,int);
int main()
{
    int i,j;
    int test;
    cin>>test;int t;
    for(t=0;t<test;t++)
    {
        memset(pills,0,sizeof(pills));
        memset(visit,0,sizeof(visit));
        memset(rvisit,0,sizeof(rvisit));
        int n,m;
        cin>>n>>m;
        for(i=0;i<n;i++)
        {
            cin>>pills[i];
            graph[i].clear();
            rgraph[i].clear();
        }
            int s,d;
        for(i=0;i<m;i++)
        {
            cin>>s>>d;
            graph[s].pb(d);
            rgraph[d].pb(s);
        }
        for(i=0;i<n;i++)
        {
            dfs(i);
        }
        int curr=0;
        int mark=1;
        while(!stk.empty())
        {
            curr=stk.top();
            stk.pop();
            if(rvisit[curr]==0)
            {
                scc(curr,mark);
                mark++;
            }
        }
        int result=0;int count1=0;

        for(i=1;i<mark;i++)
        {
            count1=0;
            for(j=0;j<n;j++)
            {
                if (rvisit[j]==i)
                {
                    count1+=pills[j];
                }
            }
            result=max(result,count1);
        }
        cout<<result<<"\n";
    }


    return 0;
}//main

void dfs(int index)
{
        int i;
    if (visit[index]==0)
    {
        visit[index]=1;
        for(i=0;i<graph[index].size();i++)
        {
            dfs(graph[index][i]);
        }
        stk.push(index);
    }
}

void scc(int index,int mark)
{
    int i;
    if (rvisit[index]==0)
    {
        rvisit[index]=mark;
        for(i=0;i<rgraph[index].size();i++)
        {
            scc(rgraph[index][i],mark);
        }
    }
}
