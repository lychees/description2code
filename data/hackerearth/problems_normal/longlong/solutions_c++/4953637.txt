#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll mod = 1000000007;
ll hash1[1000005];
ll ppp[1000005];
  int n;
ll po(ll a, ll b)
{
	return ppp[b];
	if(b==0)return 1;
	ll x = po(a,b/2);
	x = (x*x);
	if(b%2)x = (a*x);
	return x;
}
ll get(int i,int j)
{
	ll prev = hash1[i-1];
	ll cur = hash1[j];
	ll mul = po(173,j-i+1);
	prev = (prev * mul);
	ll res =  (cur  - prev);
//	printf("hash of %d to %d is %lld\n",i,j,res);
	return res;
}
char a[1000005];
int solve(int m)
{
//	printf("total leng is %d searcing for %d\n",n,m);
		unordered_set<ll> s;
	int i;
	for(i=m;i<=n;i++)
	{
		ll cur = get(i-m+1,i);
		if(s.find(cur)!=s.end())return 1;
		s.insert(cur);
	}
	return 0;
}
int main()
{
   // printf("Hello World!\n");
   scanf("%s",&a);
 hash1[0] = 0;
 ppp[0] = 1;
 int ii;
 for(ii=1;ii<=1000000;ii++)ppp[ii] = 173*ppp[ii-1];
   for(n=1;a[n-1];n++){
   hash1[n] = (hash1[n-1] * 173 + a[n-1]-'a'+1);
 //  printf("hash till %d is %lld\n",n,hash1[n]);
   }
   //printf("len of %s is %d\n",a,n);
   int lo = 0;
   int hi = n-1;
   n--;
   int mid;
   int found = 0;
   while(lo<=hi)
   {
   	mid = (lo+hi)/2;
   	if(solve(mid))
   	{
   		found = 1;
   		if(solve(mid+1))lo=mid+1;
   		else break;
   	}
   	else {
   		hi = mid-1;
   	}
   }
   printf("%d\n",mid*found);
    return 0;
}
