//https://www.hackerearth.com/november-rain-1/algorithm/altf4-and-the-beetles/

#include<iostream>
#include<algorithm>

using namespace std;

int parr[20000], qarr[20000];



long long int getMax(int N, int A, int B, int C) {
  sort(parr, parr + N);
  sort(qarr, qarr + N);

  long long int max = A * N;

  int pindex = 0;
  int qindex = 0;

  int acount = N, bcount = 0, ccount = 0;

  while(pindex != N && qindex != N) {
    if(parr[pindex] <= qarr[qindex]) {
      acount--;
      bcount++;
      pindex++;
    } else {
      bcount--;
      ccount++;
      qindex++;
    }
    long long int score = (long long int)(A)*acount + (long long int)(B)*bcount + (long long int)(C) * ccount;
    if(score < 0)
      cout<<"neg"<<endl;
    if(max < score)
      max = score;
  }

  //pindex will be N before qindex. Hence not checking for pindex
  while(qindex != N) {
    bcount--;
    ccount++;
    qindex++;

    long long int score = (long long int)(A)*acount + (long long int)(B)*bcount + (long long int)(C) * ccount;
    if(max < score)
      max = score;

  }
  return max;
}

int main() {
  int T;
  cin>>T;
  while(T--) {
    int N, A, B, C;
    cin>>N>>A>>B>>C;

    for(int i = 0; i < N; i++) {
      cin>>parr[i]>>qarr[i];
    }

    long long int ret = getMax(N, A, B, C);
    cout<<ret<<endl;
  }
}
