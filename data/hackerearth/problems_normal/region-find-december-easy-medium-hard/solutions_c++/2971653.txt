#include <bits/stdc++.h>

#define pb push_back
#define pp pop_back
#define f first
#define s second
#define mp make_pair
#define sz(a) int((a).size())
#ifdef _WIN32
#  define I64 "%I64d"
#else
#  define I64 "%lld"
#endif
#define fname "."

typedef long long ll;
typedef unsigned long long ull;

const int MAX_N = (int)2e3 + 123;
const double eps = 1e-6;
const int mod = (int)1e9 + 7;

using namespace std;

int n, q;
int w[MAX_N];
vector < int > g[MAX_N];
int dp[2][MAX_N];

void dfs(int v, int k, int pr = -1) {
	for (auto to : g[v])
		if (to != pr)
			dfs(to, k, v);
	dp[0][v] = 0;
	if (w[v] >= k) {
		dp[0][v] = 1;
		for (auto to : g[v])
			if (to != pr)
				dp[0][v] = 1ll * dp[0][v] * (1 + dp[0][to]) % mod;
	}
	dp[1][v] = 0;
	for (auto to : g[v])
		if (to != pr)
			dp[1][v] = (dp[1][v] + (dp[0][to] + dp[1][to]) % mod) % mod;
}

int F(int k) {
	dfs(1, k);
	return (dp[0][1] + dp[1][1]) % mod;
}

int main() {
	#ifdef Nick
	freopen(fname"in","r",stdin);
	freopen(fname"out","w",stdout);
	#endif
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> w[i];
	for (int i = 1, u, v; i < n; i++) {
		cin >> u >> v;
		g[u].pb(v), g[v].pb(u);
	}
	cin >> q;
	for (int i = 1, k, now; i <= q; i++) {
		cin >> k;
		now = F(k) - F(k + 1);
		if (now < 0)
			now += mod;
		cout << now << endl;
	}
	return 0;
}
