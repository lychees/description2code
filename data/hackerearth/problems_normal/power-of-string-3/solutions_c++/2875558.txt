#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll p = 1e9+7;
const ll x = 12345678;
ll inv;
const int MAXN = 1e6+5;
string g; int k, n;

ll suff[MAXN], h[MAXN], px[MAXN], pinv[MAXN], ct[MAXN], rk[MAXN];
pair< pair<int, int>, int > vals[MAXN];

ll exp(ll x, ll k) {
	if (k == 0)
		return 1;
	ll y = exp(x, k/2);
	if (k%2 == 0)
		return y*y%p;
	y = y*y%p;
	return y*x%p;
}

void build() {
	for(int i = 0; i < n; i++) {
		rk[i] = g[i]-'a';
	}

	for(int l = 1; l <= n; l *= 2) {
		for(int i = 0; i < n; i++) {
			vals[i] = make_pair(pair<int, int>(rk[i], (i + l < n) ? rk[i + l] : -1), i);
		}
		
		sort(vals, vals + n);
		int ind = -1;
		pair<int, int> cur(-1, -1);
		for(int i = 0; i < n; i++) {
			int v = vals[i].second;
			pair<int, int> a = vals[i].first;
			assert(a >= cur);
			if(a != cur) {
				ind++;
				cur = a;
			}
			rk[v] = ind;
		}
	}

}

ll comp(int i, int j) {
	//compute the string hash from g[i] to g[j];
	if (i == 0)
		return h[j];
	return ((h[j] - h[i-1] + p)*pinv[i])%p;
}

int main() {
	inv = exp(x, p-2);
	ios_base::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	cin >> k >> n >> g;
	
	px[0] = pinv[0] = 1;
	for (int i = 1; i < MAXN; ++i)
		px[i] = x*px[i-1]%p, pinv[i] = inv*pinv[i-1]%p;
	
	h[0] = (g[0]-'a');
	for (int i = 1; i < g.length(); ++i)
		h[i] = (h[i-1] + px[i]*(g[i]-'a'))%p;
		
	build();
	
	for (int i = 0; i < n; ++i)
		suff[rk[i]] = i;
		
	int lo = 0, hi = n;
	while (lo != hi) {
		int mid = (lo + hi + 1)/2;
		memset(ct, 0, sizeof(ct));
		if (suff[0] + mid > n)
			ct[0] = 0;
		else
			ct[0] = 1;
		
		for (int i = 1; i < n; ++i) {
			if (suff[i] + mid > n) {
				ct[i] = 0; continue;
			}
			
			if (ct[i-1] == 0) {
				ct[i] = 1; continue;
			}
			
			if (comp(suff[i-1], suff[i-1]+mid-1) == comp(suff[i], suff[i]+mid-1))
				ct[i] = ct[i-1] + 1;
			else
				ct[i] = 1;
		}
		
		bool y = false;
		for (int i = 0; i < n; ++i)
			if (ct[i] >= k)
				y = true;

		if (y)
			lo = mid;
		else
			hi = mid-1;
	}
	
	cout << lo << endl;
}