#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007

long long fact[100005];
long long invf[100005];
long long power(long long a, long long b){
    if (b==0)
        return 1;
    if (b%2)
        return a*power(a, b-1)%mod;
    return power(a*a %mod, b/2);
}
long long inv(long long x){
    return power(x, mod-2);
}
long long nCr(long long n,long long r){
     if (n < r)
        return 0;
     if (r<0)
        return 0;

     long long res = fact[n];
     res *= invf[r];
     res %= mod;
     res *= invf[n-r];
     res = res%mod;
     return res;
}
int main(){
    fact[0]=1;
    for (int i=1; i<100001; i++)
        fact[i]=1LL*fact[i-1]*i % mod;
    for (int i=0; i<100001; i++)
        invf[i]=inv(fact[i]);

    int t, n, k, x;
    cin>>t;
    while(t--){
        cin>>n>>x>>k;

        if(k==0){
            if(n==x)
                cout<<"1\n";
            else
                cout<<"0\n";
        }
        else{
            long long ans = nCr(n-x-1, k-1);
            ans  = ans * nCr(x+1, k) % mod;
            cout<<ans<<endl;
        }
    }
    return 0;
}
