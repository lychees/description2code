#include <iostream>
#include<vector>
using namespace std;
int canmake(int s, vector<int> &valid, vector<vector<int>> &mem,int start,int end)
	{		
			if(mem[s][start]!=-1)
			
			{
			//	cout<<"In canmake(s,start,return)"<<s<<","<<start<<","<<mem[s][start]<<"\n";
				return mem[s][start];
			}
			if(start>end)
				{
					mem[s][start]=0;
				//	cout<<"In canmake(s,start,return)"<<s<<","<<start<<","<<mem[s][start]<<"\n";
					return 0;
					
				}			
			if(s==0)
			{
				
		//	cout<<"In canmake(s,start,return)"<<s<<","<<start<<","<<1<<"\n";
			return 1;
			}
			if(valid[start]<=s)
			{
				int a=canmake(s-valid[start],valid,mem,start+1,end);
				if(a==1)
				{
					mem[s][start]=1;
				//	cout<<"In canmake(s,start,return)"<<s<<","<<start<<","<<mem[s][start]<<"\n";
					return 1;
				}
			}
			int b=canmake(s,valid,mem,start+1,end);
			mem[s][start]=b;
			//cout<<"In canmake(s,start,return)"<<s<<","<<start<<","<<mem[s][start]<<"\n";
			return mem[s][start];
			
	}
int main()
{
    int t,n,m;
    cin>>t;
    while(t--)
    {
    cin>>n>>m;
    
    vector<int> valid(m);
    vector<int> people(n);
    vector<int> peoplecount;
    vector<vector<int> > mem(1001,vector<int>(1001,-1));
    for(int i=0;i<m;i++)
    	cin>>valid[i];
    int count=1;
    cin>>people[0];
    int prev=people[0];
    for(int i=1;i<n;i++)
    	{
    		cin>>people[i];
    		if(people[i]==prev)
    		{
    			count++;
    			
    		}
    		else
    		{
    			prev=people[i];
    			
    			peoplecount.push_back(count);
    			count=1;
    		}
    	}
    	peoplecount.push_back(count);
    //	cout<<"peoplecout\n";
    //	for(vector<int> :: iterator it =peoplecount.begin();it!=peoplecount.end();it++)
    //		cout<<*it<<" ";
    	count=0;
    	for(vector<int> ::iterator it =peoplecount.begin();it!=peoplecount.end();it++)
    	{
    	///	cout<<"*it is "<<*it<<"\n";
    		if(canmake(*it,valid,mem,0,m-1))
    		count++;
    		
    		
    	}
    	/*cout<<"mem\n";
    	for(vector<int> :: iterator it =mem.begin();it!=mem.end();it++)
    	cout<<*it<<" ";
    	cout<<"\n";*/
    	cout<<count<<"\n";
    	
    	
    }
    
    return 0;
}
