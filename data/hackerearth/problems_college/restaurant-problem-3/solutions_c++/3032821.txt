#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <bitset>
#include <functional>
#include <utility>
#include <iostream>
#include <fstream>
#include <sstream>
#include <string.h>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) ((S&two(X))>0)
#define containL(S,X) ((S&twoL(X))>0)
#define debug(args...) dbg(),args
typedef pair<int,int> ipair;
int countbit(int n) {return (n==0)?0:(1+countbit(n&(n-1)));}
int lowbit(int n) {return (n^(n-1))&n;}
const double pi=acos(-1.0);
const double eps=1e-11;
template<class T> T sqr(T x) {return x*x;}
template<class T> void checkmin(T &a,T b) {if (b<a) a=b;}
template<class T> void checkmax(T &a,T b) {if (b>a) a=b;}
#define S(N) scanf("%d", &N)
#define SL(N) scanf("%lld", &N)
#define SF(N) scanf("%lf", &N) 
#define SS(N) scanf("%s", N) 
#define SIZE(X) ((int)((X).size()))
#define LENGTH(X) ((int)((X).length()))
#define MP(A,B) make_pair(A,B)
#define FOR(A,B,C) for(int A=B;A<C;A++)
#define EFOR(A,B,C) for(int A=B;A<=C;A++)
#define IFOR(A,B,C,D) for(int A=B;A<C;A+=D)
#define RFOR(A,B,C) for(int A=B;A>=C;A--)
#define FORL(A,B,C) for(ll A=B;A<C;A++)
#define EFORL(A,B,C) for(ll A=B;A<=C;A++)
#define RFORL(A,B,C) for(ll A=B;A>=C;A--)
#define PB(A,B) A.push_back(B);
#define SORT(A) sort( A.begin(),A.end() )
#define ALL(A) A.begin(),A.end()
#define MEM(A,B) memset(A,B,sizeof(A))
#define SZ(A) int(A.size())
#define MAX(A,B) (A > B) ? A : B
#define MIN(A,B) (A < B) ? A : B
#define MAXSIZE 1000001
#define DBGCHECK DBG = ((*argv[1] == '0') ? 0 : 1)
bool DBG;
struct dbg
{	
	template<typename T> dbg& operator , (const T& v)
	{	
		if (DBG) 
			cerr << v << " ";	
		return *this;	
	}
	~dbg()   {
		if (DBG)
			cerr << endl;
		}
};
 
int main (int argc, char *argv[]) 
{
	//DBGCHECK;
	
	char str[MAXSIZE];
	SS(str);
		
	int len = strlen(str), num, nonZero = 0, j;
	ll count = 0;
	FOR(i, 0, len) {
		if ((str[i] - '0') % 8 == 0)
			count++;
		if ((str[i] - '0') != 0)			
			nonZero++;
		if (i < len - 1) {
			num = (str[i] - '0') * 10 + (str[i + 1] - '0');
			if (num % 8 == 0 && (str[i] - '0') > 0) 
				count++;
		}
		debug(nonZero);
		if (i < len - 2) {
			num = (str[i] - '0') * 100 + (str[i + 1] - '0') * 10 + (str[i + 2] - '0');
			if (num % 8 == 0)
				count += nonZero;
		}	
	}
	
	printf("%lld\n", count);	
	
	return 0;	
}
 