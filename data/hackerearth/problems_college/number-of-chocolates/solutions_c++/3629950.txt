#include<bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define len(s) s.length()
#define forp(i,a,b) for( i=a;i<=b;i++)
#define rep(i,n)    for( i=0;i<n;i++)
#define ren(i,n)    for( i=n-1;i>=0;i--)
#define forn(i,a,b) for( i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define b(v) v.begin()
#define e(v) v.end()
#define mem(n,m) memset(n,m,sizeof(n))
#define lb lower_bound
#define ub upper_bound
#define vii vector<int>
#define vll vector<long long>
#define gl(cin,s)  getline(cin,s);
#define bitc(n) __builtin_popcountll(n)
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 

#define boost ios_base::sync_with_stdio(0)
#define MOD 1000000007
#define EPSILON 1e-9
#define PI 3.14159265358979323846
#define SIZE 1000001

typedef long long  ll;
typedef unsigned long long ull;
typedef long double  ldo;
typedef double  db ;
using namespace std;
typedef pair<int,int> Seg1D;
inline Seg1D intersectSeg1D(const Seg1D &a, const Seg1D &b) {
	return Seg1D(max(a.first, b.first), min(a.second, b.second));
}
ll a[SIZE],pref[SIZE];
int main()
{  	
	//freopen("route.in","r",stdin);
	//freopen("route.out","w",stdout);
	boost;
	//cin.tie(0);
	ll n,q,i,g1,g2,p1,p2,sum;
	cin>>n>>q;
	forp(i,1,n){
		cin>>a[i];
	}
	forp(i,1,n){
		pref[i]=pref[i-1]+a[i];
	}
/*	forp(i,1,n)
	cout<<pref[i]<<" ";*/
	while(q--){
		cin>>g1>>p1>>g2>>p2;
		g1++;
		g2++;
		p1++;
		p2++;
		if(g1>g2)
		{
			ll temp=g1;
			g1=g2;
			g2=temp;
		}
		if(p1>p2)
		{
			ll temp=p1;
			p1=p2;
			p2=temp;
		}
	//	cout<<g1<<" "<<g2<<" "<<p1<<" "<<p2<<endl;
		Seg1D s = intersectSeg1D(Seg1D(g1, g2), Seg1D(p1, p2));
		sum=0;
		sum+=pref[g2]-pref[g1-1]+pref[p2]-pref[p1-1];
		if(s.first <= s.second) sum -= pref[s.second] - pref[s.first-1];
		cout<<sum<<endl;
	}
	return 0;
}