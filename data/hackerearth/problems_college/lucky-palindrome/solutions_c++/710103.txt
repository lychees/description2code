#include <iostream>
#include <string>
#include <math.h>
using namespace std;

bool isPrime (int number)
{
	
	if (number <=1) 	return false;
	else if (number==2) return true;
	else if (number%2 == 0 ) return false;
	else
	{
		bool prime =true;
		double num_d = static_cast <double> (number);
		int limit = static_cast <int> (  sqrt(num_d)  +1  )  ;
		int divisor = 3; 
		while (divisor <= limit)
		{
			if (number%divisor == 0)
			{
				prime = false;
				break;
			}
			divisor+=2;
		}
		
		
		return prime;
	}
}

int maxLengthPalindrome (string str)
{
	if (str.length() == 0) return 0;
	else if (str.length() == 1) return 1;
	else
	{
		int maxlength = 1;
		
		//check for od length palindrome
		for (int i=1; i<str.size(); ++i)
		{
			int length = 0;
			int start = i-1;
			int end = i+1;
			while (start >= 0 && end <= str.size() && (str[start]==str[end]) )
			{
				length = end-start+1;
				--start;
				++end;
			}
			if (length > maxlength)
				maxlength = length;
		}
		
		//check for even length palindrome
		//check for od length palindrome
		for (int i=1; i<str.size(); ++i)
		{
			int length = 0;
			int start = i-1;
			int end = i;
			while (start >= 0 && end <= str.size() && (str[start]==str[end]) )
			{
				length = end-start+1;
				--start;
				++end;
			}
			if (length > maxlength)
				maxlength = length;
		}
		
		return maxlength;
		
	}
}

int main()
{
    int T=0;
    cin >> T;
    for (int tc=0; tc<T; ++tc)
    {
    	string str;
    	cin >> str;
    	if (isPrime (maxLengthPalindrome(str)))
    		cout << "YES" << endl;
    	else
    		cout << "NO" << endl;
    	
    }
    
    return 0;
}
