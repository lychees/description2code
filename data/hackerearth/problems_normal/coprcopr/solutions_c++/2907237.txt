#include<iostream>
#define mx 10000000
using namespace std;
int prm[mx+10];
int phi[mx+10];
long long s[mx+10];
void modsieve()
{			//storing the largest prime for each n..a modification in sieve of erasthosthenes.
	prm[1]=1;
	for(int i=2;i<mx;i++)
		if(prm[i]==0)
			for(int j=i+i;j<mx;j+=i)
				prm[j]=i;	
}
void precalphi()
{
		modsieve();
		
		phi[1]=1;
		int zat,prs;
		for(int i=2;i<mx;i++)
		{
			zat=i;
			prs=prm[i];			
			if(prs==0)
				phi[i]=i-1;
			else
			{
				while(zat%prs==0)
				zat/=prs;
				
				phi[i]=phi[zat]*(i/zat)/prs*(prs-1);
			}
			
		}
		for(int i=1;i<mx;i++)
		s[i]=s[i-1]+phi[i];
}
int main()
{
	std::ios_base::sync_with_stdio(false);
	precalphi();
	int t,n;
	cin>>t;
	while(t--)
	{
		cin>>n;
		cout<<s[n]<<"\n";
	}
	return 0;
}