#include<bits/stdc++.h>

using namespace std;
int status[100];
int res[1000];
void generate_prime()
{
	for(int i=4;i<=100;i+=2){
		status[i]=1;
	}
	int sqrtN = int( sqrt((double) 100 )); 
	status[2]=0;
	for(int i=3;i<=sqrtN ; i+=2){
		if(status[i]==0){
			for(int j=i*i ; j<=100 ; j+= 2*i){
				status[j]=1;
			}
		}
	}
}

int multiply(int x , int res[] , int res_size)
{
	int carry = 0;
	int prod;
	for(int i = 0 ; i < res_size ; i++){
		prod=x*res[i] + carry;
		res[i]=prod%10;
		carry=prod/10;
	}
	while(carry){
		res[res_size] = carry%10;
		carry = carry/10;
		res_size++;
	}
	return res_size;
}

int factorial(int n)
{
	memset(res,0,sizeof(res));
	res[0]=1;
	int res_size = 1;
	for(int x = 2 ; x<= n ; x++){
		res_size = multiply(x,res,res_size);
	}
	for(int i = res_size-1; i>=0;i--){
			cout<<res[i];
	}	
	cout<<endl;
}

int main()
{
	int N;
	memset(status,0,sizeof(status));
	generate_prime();
	cin>>N;
	for(int i=2 ; i <= N; i++){
		if(status[i]==0){
			factorial(i);
		}
	}
}
