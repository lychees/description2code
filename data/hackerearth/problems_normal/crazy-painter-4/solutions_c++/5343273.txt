#include <bits/stdc++.h>
using namespace std;

int main(){
	long long test;
	cin>>test;
	while(test--){
		unsigned long long id, sum=0;
		cin>>id;
		
		// Based on the pattern (array of number of intersection points)
		unsigned long long temp_sum=0;
		if(id>1) temp_sum = temp_sum + 5*(id-1);
		sum = 1 + temp_sum + 4 + 2*id + 4 + temp_sum + 1;
		unsigned long long ans=0, freq=(sum/26), rem = sum - (26*freq);
		
		unsigned long long cost[27], frequency[27];
		memset(frequency, 0, sizeof(frequency));
		for(int i=1; i<=26; i++) cin>>cost[i];
		for(int i=1; i<=26; i++) frequency[i] = freq;
		for(int i=1; i<=rem; i++) frequency[i]++;
		for(int i=1; i<=26; i++){
			ans  = ans + frequency[i]*cost[i];
			ans = ans + frequency[i]*(frequency[i]-1)/2;
		}

		cout<<ans<<endl;
	}
	return 0;
}
