#include <iostream>
#include <stdio.h>
using namespace std;
class BinaryTree{
	public:
	long long int data;
	BinaryTree* left;
	BinaryTree* right;
	BinaryTree(long long int val)
	{
		data = val;
		left = NULL;
		right = NULL;
	}
};
void insert1(BinaryTree* node, long long int val)
{
	if(node->data > val)
	{
		if(node->left != NULL)
			insert1(node->left, val);
		else
			node->left = new BinaryTree(val);
	}
	else if(node->data < val)
	{
		if(node->right != NULL)
			insert1(node->right, val);
		else
			node->right = new BinaryTree(val);
	}
}
void insert2(BinaryTree* node, long long int val)
{
	if(node->data > val)
	{
		if(node->left != NULL)
			insert2(node->left, val);
		else{
			node->left = new BinaryTree(val);
			printf("NO\n");
		}
	}
	else if(node->data < val)
	{
		if(node->right != NULL)
			insert2(node->right, val);
		else{
			node->right = new BinaryTree(val);
			printf("NO\n");
		}
	}
	else
	{
		//equal
		printf("YES\n");
	}
}
int main()
{
    int t;
    scanf("%d", &t);
    while(t--)
    {
    	long int n, m;
    	scanf("%ld%ld", &n, &m);
    	long long int val;
    	scanf("%lld", &val);
    	BinaryTree* root = new BinaryTree(val);
    	for(long long int i = 0; i < n - 1; i++)
    	{
    		scanf("%lld", &val);
    		insert1(root, val);
    	}
    	for(long long int i = 0; i < m; i++)
    	{
    		scanf("%lld", &val);
    		insert2(root, val);
    	}
    }
    return 0;
}
