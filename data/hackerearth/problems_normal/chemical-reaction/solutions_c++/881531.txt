#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
using namespace std;
int t = 0;
char vv[500002][11];
int v[500002];
int mama;
int bit[500002];
void add(int i, int j){
	while (i < mama + 1){
		bit[i] += j;
		i += i&-i;
	}
}
int sum(int i){
	int sum = 0;
	while (i>0){
		sum += bit[i];
		i -= i&-i;
	}
	return sum;
}
int ll = 0;
int lw(int x){
	int r = 0;
	for (int i = ll; i > 0; i /= 2){
		if (r+i<=mama&&bit[r + i] < x){
			x -= bit[r + i];
			r += i;
		}
	}
	return r;
}
int n;
int anss;
int mint;
int kari;
int main(){
	scanf("%d", &t);
	while (t--){
		scanf("%d", &n);
		mama = n;
		int cc = 0;
		long long int kk = 1;
		while (kk <= n){
			kk *= 2;
			cc++;
		}
		kk/=2;
		ll = kk;
		for (int i = 0; i < n; i++){
			scanf("%s",&vv[i]);
			add(i + 1, 1);
		}
		for (int i = 0; i < n; i++){
			scanf("%d", &v[i]);
		}
		n--;
		int num = n + 1;
		anss=0;
		while (n--){
			scanf("%d", &kari);
			mint = lw(kari);
			anss = max(v[mint], anss);
			printf("%s",vv[mint]);
			//cout << v[mint].first ;
			printf(" %d\n",anss);
			add(mint+1, -1);
		}
		mint = lw(1);
		anss = max(v[mint], anss);
		printf("%s %d\n",vv[mint],anss);
		//cout << v[mint].first << " " << anss << endl;
		add(mint + 1, -1);
	}
	return 0;
}