using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define PI 2 * acos(0)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<int,II> III;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;

struct node{
    int x,y;
}b[100000+10],c[100000+10],a[100000+10];

int n,u,v,dem1,dem2;
ll fi,mid,la,ans,res;
bool kt;

bool cmp(node a, node b){
    return (a.x<b.x || (a.x==b.x && a.y>b.y) );
}

bool cmp2(node a, node b){
    return a.y>b.y ;
}

int main(){
 //   freopen("mobile-conversations.inp", "r", stdin);
 //   freopen("mobile-conversations.out", "w", stdout);
    ios_base::sync_with_stdio (false);
    cin >> n;
    FORE(i,1,n){
        cin >> u >> v;
        if (u>v) b[++dem2]={ u , v };
        else if (u<v) c[++dem1]={ u , v };
    }
    n=0;
    sort(c+1,c+dem1+1,cmp);
    sort(b+1,b+dem2+1,cmp2);
    FORE(i,1,dem1) a[++n]=c[i];
    FORE(i,1,dem2) a[++n]=b[i];
    fi=0;
    la=INF*1000000;
    ans=INF*INF;
    while (fi+1<la){
        mid=(fi+la)/2;
        kt=true;
        res=mid;
        FORE(i,1,n){
            res-=a[i].x;
            if (res<0)
                kt=false;
            res+=a[i].y;
        }
        if (kt){
            la=mid;
            ans=min(ans,mid);
        }
        else fi=mid;
    }
    cout << ans;
}
