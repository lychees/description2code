#include <iostream>
#include <vector>
#include <algorithm>
#include <set>


using namespace std;

int main() {
    int n, k, nl, q, x, m, d2, dst, y;
    const int INF = 1000000001;
    const int N = 10000;
    long long sum;
    
    cin>>n;
    cin>>q;
    vector <int> dist(N, INF);
    vector <int> d(n);
   
    for (int i = 0; i < n; i++) 
        cin>>d[i];
        
    sort(d.begin(), d.end());
    m = d[0];
    //cout<<m<<" "<<d[0]<<endl;
    dist[0] = 0;
    
    set <pair<int, int> > st;
    set <pair<int, int> > ::iterator it;
    st.insert(make_pair(0, 0));
     
    while (!st.empty()) {
        it = st.begin();
        dst = it->first;
        x = it->second;
        st.erase(it);
        if (dist[x] < dst)
            continue;
        
        for (int i = 0; i < n; i++) {
            x = dst %m;
            y = (x + d[i]) % m;
            if (dist[x] >= INF - d[i])
                continue;
            d2 = dist[x] + d[i];
            if (dist[y] > d2) {
                dist[y] = d2;
                st.insert(make_pair(dist[y], y));
            }
        }
    }
    
    
   // for (int i = 0; i < n; i++) 
     //   cout<<i<<" "<<dist[i]<<endl;

    for (int i = 0; i < q; i++) {    
        cin>>x;
        if (x >= dist[x%m])
            cout<<"YES"<<endl;
        else
            cout<<"NO"<<endl;
    }
       
    return 0;
}