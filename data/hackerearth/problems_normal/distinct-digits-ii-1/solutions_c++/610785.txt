#include<bits/stdc++.h>
#define ll long long
#define mod 1000000007
using namespace std;
long long MaxVal;
long long tree[11][200000];
void update(long long tree[], long long idx ,long long val){
	while (idx <= MaxVal){
		tree[idx] += val;
		idx += (idx & -idx);
	}
}
long long read(long long tree[], long long idx){
	long long sum = 0;
	while (idx > 0){
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
long long dig ( long long x )
{
	if (x==0)
	return 1;
	long long b[10]={0};
	while(x>0){
		b[x%10]=1;
		x/=10;
	}
	long long c = 0;
	for (long long i=0;i<10;i++)if(b[i])c++;
	return c;
}
long long a[10000000];
int main() {
	
	long long n, q, l, r, x;
	char s[10];
	scanf("%lld", &n);
	MaxVal = 150000;
	for ( long long i = 1; i <= n; i++ ) {
	scanf("%lld", &a[i]);
		long long c = dig(a[i]);
		update(tree[c],i,1);
	}
	scanf("%lld",&q);
	while ( q-- ) {
		scanf("%s",s);
		if ( !strcmp(s,"ADD")) {
			long long u, v;
			scanf("%lld%lld",&u,&v);
			long long x = dig(a[u]);
			a[u]=(a[u]+v)%mod;
			long long y = dig(a[u]);
			update(tree[x],u,-1);
			update(tree[y],u,1);
		}
		else if ( !strcmp(s,"MUL") ) {
			long long u, v;
			scanf("%lld%lld",&u,&v);	
			long long x = dig(a[u]);
			a[u]=(a[u]*v)%mod;
			long long y = dig(a[u]);
			update(tree[x],u,-1);
			update(tree[y],u,1);
		}
		else if (!strcmp(s,"REP")) {
			long long u, v;
			scanf("%lld%lld",&u,&v);
			long long x = dig(a[u]);a[u]=(v)%mod;
			long long y = dig(a[u]);
			update(tree[x],u,-1);
			update(tree[y],u,1);
		}
		else if ( !strcmp(s,"MAX")){
			long long u, v,maxi = 0;
			scanf("%lld%lld",&u,&v);
			for ( long long i = 10; i > 0; i-- ){
				long long z = read(tree[i],v);
				if ( u > 1 )
				z-=read(tree[i],u-1);
				if ( z > 0 ){
					printf("%lld %lld\n",i,z);
					break;
				}
			}
		}
		else {
			long long u, v;
			scanf("%lld%lld",&u,&v);
			for ( long long i = 1; i <= 10; i++ ){
				long long z = read(tree[i],v);
				if ( u > 1 )
				z-=read(tree[i],u-1);
				if ( z > 0 ){
					printf("%lld %lld\n",i,z);
					break;
				}
			}
		}
	}
}