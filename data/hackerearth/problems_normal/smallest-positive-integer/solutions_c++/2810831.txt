using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define PI 2 * acos(0)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<int,II> III;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;

ll n,ans,f[11];
bool kt;

void check(ll n){
    kt=false;
    memset(f,0,sizeof(f));
    FORD(i,9,2)
    while (n%i==0){
        n/=i;
        f[i]++;
    }
    kt=(n==1);
}

int main(){
 //   freopen("smallest-positive-integer.inp", "r", stdin);
 //   freopen("smallest-positive-integer.out", "w", stdout);
    ios_base::sync_with_stdio (false);
    cin >> n;
    if (n==0){
        cout << 10;
        return 0;
    }
    if (n==1){
        cout << 1;
        return 0;
    }
    FORE(ii,0,100){
        check(ii*INF+n);
        if (kt){
            ans=0;
            FORE(i,2,9)
            FORE(j,1,f[i]) ans=ans*10+i;
            cout << ans;
          return 0;
        }
    }
}
