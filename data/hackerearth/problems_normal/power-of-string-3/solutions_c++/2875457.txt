#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cassert>
#include <cstring>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <unordered_map>
#include <unordered_set>
#include <memory.h>
using namespace std;

const int MAXN = 1000006;

const int MOD = 1000000007;
const int BASE1 = 31;
const int BASE2 = 19;

char s[MAXN];
pair<int, int> hsh[MAXN];

int main() {
  int k, n;
  scanf("%d %d", &k, &n);
  scanf("%s", s);

  int l = 1, r = n;
  while (l <= r) {
    const int md = (l + r) / 2;
    int t = 0;

    int h1 = 0, h2 = 0, pwr1 = 1, pwr2 = 1;
    for (int i = 0; i < md; i++) {
      h1 = (1ll * h1 * BASE1 + s[i] - 'a' + 1) % MOD;
      h2 = (1ll * h2 * BASE2 + s[i] - 'a' + 1) % MOD;
      if (i) {
        pwr1 = (1ll * pwr1 * BASE1) % MOD;
        pwr2 = (1ll * pwr2 * BASE2) % MOD;
      }
    }
    hsh[t++] = {h1, h2};

    for (int i = md; i < n; i++) {
      h1 -= (1ll * (s[i - md] - 'a' + 1) * pwr1) % MOD;
      if (h1 < 0) {
        h1 += MOD;
      }
      h1 = (1ll * h1 * BASE1 + (s[i] - 'a' + 1)) % MOD;

      h2 -= (1ll * (s[i - md] - 'a' + 1) * pwr2) % MOD;
      if (h2 < 0) {
        h2 += MOD;
      }
      h2 = (1ll * h2 * BASE2 + (s[i] - 'a' + 1)) % MOD;

      hsh[t++] = {h1, h2};
    }

    sort(hsh, hsh + t);

    int c = 1, mx = 1;
    for (int i = 1; i < t; i++) {
      if (hsh[i - 1] == hsh[i]) {
        c++;
      } else {
        mx = max(mx, c);
        c = 1;
      }
    }
    mx = max(mx, c);

    if (mx >= k) {
      l = md + 1;
    } else {
      r = md - 1;
    }
  }

  printf("%d", l - 1);

  return 0;
}