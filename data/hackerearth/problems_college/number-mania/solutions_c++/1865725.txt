#include<iostream>

using namespace std;

void multiply(int);
class prime
{
public:
	int N, ps[100], CPI, CN, f, res[160], size ;
	unsigned long long int F[100];
	prime()
	{
		cin >> N;
		ps[1] = 2;
		CN = 3;
		CPI = 1;
		res[0] = 1;
		size = 1;
	}
	void primeset()
	{
		while(ps[CPI] <= N)
		{
			f = 0;
			for (int j = 1; j <= CPI; ++j)
			{
				if (CN % ps[j] == 0)
				{
					f = 1;
					break;
				}
			}
			if (f == 1)
			{
				CN ++;
			}
			else
			{
				ps[++CPI] = CN;
				CN ++;
			}
		}
		//fact();
	//}

	//void fact()
	//{
		for (int j = 1; j < CPI; ++j)
		{
			
			size = 1;
			res[0] = 1;
			for (int i = 2; i <= ps[j]; ++i)
			{
				multiply(i);
		    }
		    for (int i = size-1; i >= 0; --i)
		    {
		    	cout << res[i] ;

		    }
		    cout << endl;
	   }

	}

	 void multiply(int k)
	    {
	    	int prod, carry = 0;
	    	for (int i = 0; i < size; ++i)
	    	{
	    		
	    		prod = res[i] * k + carry;
	    		carry = prod / 10;
	    		res[i] = prod % 10;
	       	}
	       	while(carry)
	       	{
	       		res[size] = carry % 10;
	       		carry = carry / 10;
	       		size ++;
	       	}
	    }
};

int main()
{
	prime p;
	p.primeset();
	//p.fact();
}