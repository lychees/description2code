#include <bits/stdc++.h>

#define MAXA 30

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    
    int n, ans = 0;
	string s;
	bool hash[MAXA][MAXA][MAXA][MAXA][MAXA];

	memset(hash, false, sizeof(hash));
	
    cin >> n;
    ans = n;
    
    for (int i = 0; i < n; i++) {
    	cin >> s;
    	if (s.size() == 1) {
    		if (hash[ s[0] - 'a' + 1 ][0][0][0][0]) ans--;
    		hash[ s[0] - 'a' + 1 ][0][0][0][0] = true;
    	}
    	else if (s.size() == 2) {
    		if (hash[ s[0] - 'a' + 1 ][ s[1] - 'a' + 1 ][0][0][0]) ans--;
    		hash[ s[0] - 'a' + 1 ][ s[1] - 'a' + 1 ][0][0][0] = true;
    	}
    	else if (s.size() == 3) {
    		if (hash[ s[0] - 'a' + 1 ][ s[1] - 'a' + 1 ][ s[2] - 'a' + 1 ][0][0]) ans--;
    		hash[ s[0] - 'a' + 1 ][ s[1] - 'a' + 1 ][ s[2] - 'a' + 1 ][0][0] = true;
    	}
    	else if (s.size() == 4) {
    		if (hash[ s[0] - 'a' + 1][ s[1] - 'a' + 1 ][ s[2] - 'a' + 1 ][ s[3] - 'a' + 1 ][0]) ans--;
    		hash[ s[0] - 'a' + 1][ s[1] - 'a' + 1 ][ s[2] - 'a' + 1 ][ s[3] - 'a' + 1 ][0] = true;
    	}
    	else if (s.size() == 5) {
    		if (hash[ s[0] - 'a' + 1 ][ s[1] - 'a' + 1 ][ s[2] - 'a' + 1 ][ s[3] - 'a' + 1 ][ s[4] - 'a' + 1 ]) ans--;
    		hash[ s[0] - 'a' + 1 ][ s[1] - 'a' + 1 ][ s[2] - 'a' + 1 ][ s[3] - 'a' + 1 ][ s[4] - 'a' + 1 ] = true;
    	}
    	else 
    		hash[0][0][0][0][0] = false;
    }
    
    cout << ans << '\n';
    
    for (int i = 0 ; i <= 'z' - 'a' + 1; i++)
    	for (int j = 0 ; j <= 'z' - 'a' + 1; j++)
    		for (int k = 0 ; k <= 'z' - 'a' + 1; k++)
    			for (int x = 0 ; x <= 'z' - 'a' + 1; x++)
    				for (int y = 0 ; y <= 'z' - 'a' + 1; y++)
    					if (hash[i][j][k][x][y]) {
    						if (i) cout << (char) (i + 'a' - 1);
    						if (j) cout << (char) (j + 'a' - 1);
    						if (k) cout << (char) (k + 'a' - 1);
    						if (x) cout << (char) (x + 'a' - 1);
    						if (y) cout << (char) (y + 'a' - 1);
    						cout << '\n';
    					}
    				
    
    return 0;
}