#include <bits/stdc++.h>
using namespace std;
#define llong long long
#define long llong

long F[1 << 16][20];
int n, m, n_test;

inline int getbit (int x,int y) { return (x >> y) & 1; }

long cal (int s,int x)
{
    if (s + 1 == 1 << n) return 1;
    if (F[s][x] >= 0) return F[s][x];

    long c = 0;
    for (int y = 1; y <= n; ++y)
    if (getbit(s, y - 1) == 0 && abs(3 * x - 2 * y) <= m)
        c += cal(s | (1 << (y - 1)), y);

    return F[s][x] = c;
}

void solve ()
{
    fill(F[0], F[1 << n], -1);

    long s = 0;
    for (int x = 1; x <= n; ++x) s += cal(1 << (x - 1), x);
    cout << s << "\n";
}

int main ()
{
    ios::sync_with_stdio(false); cin.tie(nullptr);
	if (ifstream("test.inp")) cin.rdbuf((new ifstream("test.inp"))->rdbuf());

    cin >> n_test;
    while (n_test--)
    {
        cin >> n >> m;
        solve();
    }
}