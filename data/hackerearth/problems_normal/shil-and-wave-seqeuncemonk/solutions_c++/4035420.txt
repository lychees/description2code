#include <bits/stdc++.h>
using namespace std;

#define SI(intger) scanf("%d",&intger)
#define SL(longLongInt) scanf("%lld",&longLongInt)
#define SC(ch) scanf("%c",&ch)
#define PI(intger) printf("%d",intger)
#define PL(longLongInt) printf("%lld",longLongInt)
#define PC(ch) printf("%c",ch)
#define PS(str) printf("%s",str)
#define CI(str) cin>>str
#define CO(str) cout<<str
#define PE printf("\n")

#define F1(i,n) for(ll i=1;i<=n;i++)
#define F0(i,n) for(ll i=0;i<n;i++)
#define FR1(i,n) for(ll i=n;i>0;i--)
#define FR0(i,n) for(ll i=n-1;i>=0;i--)
#define ll long long
#define FAB(i,a,b) for(ll i=a;i<=b;i++)
const ll mod=1e9+7; const ll N=1e5+5;
string str;
ll t,n,i,j,x,q,k,l,r,idx,m,arr[N],ans,chk;
char ch;
ll bit[N][3];
void update(ll idx,ll val,int pos)
{
    while(idx<=N)
    {
        bit[idx][pos]=(bit[idx][pos]+val)%mod;
        idx+=(idx&-idx);
    }
}
ll query(ll idx,ll pos)
{
    ll ret=0;
    while(idx>0)
    {
        ret+=bit[idx][pos];
        ret%=mod;
        idx-=(idx&-idx);
    }
    return ret;
}
int main()
{
    SI(n);
    F1(i,n)
        SL(arr[i]);
    if(n==1)
    {
        PS("0");
        return 0;
    }

    F1(i,n)
    {

        ll x=(query(arr[i]-1,1)+query(arr[i]-1,0))%mod;
        ll y=(query(N-1,2)-query(arr[i],2)+query(N-1,0)-query(arr[i],0)+mod)%mod;
        ans=(ans+x+y)%mod;
        //cout<<arr[i]<<" "<<x<<" "<<y<<" "<<ans<<endl;
        update(arr[i],1,0);
        update(arr[i],x,2);
        update(arr[i],y,1);
    }
    PL(ans);
    PE;
    return 0;
}
