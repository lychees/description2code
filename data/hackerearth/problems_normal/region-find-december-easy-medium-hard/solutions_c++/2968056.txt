
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cassert>
#include <cstring>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <unordered_map>
#include <unordered_set>
#include <memory.h>
using namespace std;

const int MOD = 1000000007;

vector<int> g[1503];
int w[1503];

int dfs(const int u, const int par, const int root) {
  int ret = 1;
  for (auto const v : g[u]) {
    if (v != par && (w[v] > w[root] || (w[v] == w[root] && v < root))) {
      ret = (1ll * ret * (dfs(v, u, root) + 1)) % MOD;
    }
  }
  return ret;
}

map<int, int> ans;

int main() {
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    scanf("%d", w + i);
  }
  for (int i = 0; i < n - 1; i++) {
    int u, v;
    scanf("%d %d", &u, &v);
    u--, v--;
    g[u].push_back(v);
    g[v].push_back(u);
  }

  for (int i = 0; i < n; i++) {
    const int t = dfs(i, -1, i);
    ans[w[i]] += t;
    if (ans[w[i]] >= MOD) {
      ans[w[i]] -= MOD;
    }
  }

  int q;
  scanf("%d", &q);
  while (q--) {
    int k;
    scanf("%d", &k);
    printf("%d\n", (ans.count(k)) ? ans[k] : 0);
  }

  return 0;
}