#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <queue>        //max heap implementation
#include <limits.h>




#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define mkp make_pair
#define fi first
#define se second
#define debug(a) { for( typeof(a.begin()) it = a.begin() ; it != a.end() ; it++ ) cout << *it << " "; cout << endl; }

using namespace std;

//class comparators for queue and others
class classcomp{
    public:
        bool operator() (const int& l, const int& r)const{
            return l<r;
        }
};

#define ll long long

vector< vector<long long> > C(1000+1,vector<long long> (1000+1,0));

long long Co(int n, int r)
{

    for (int i=0; i<=n; i++)
    {
        for (int k=0; k<=r && k<=i; k++)
            if (k==0 || k==i)
                C[i][k] = 1;
            else
                C[i][k] = (C[i-1][k-1] + C[i-1][k]);
    }
    return C[n][r];
}

int main()
{   int t;string s,u;char c;
    cin>>t;
    for(int i=0;i<t;++i)
    {   if(i==0)cin>>c;
        getline(cin,s);
        getline(cin,u);
        std::size_t found = u.find(s);
        if (found!=std::string::npos)
        cout<<"possible";
        else
        cout<<"not possible";
        if(i!=t-1)cout<<endl;

    }
}
