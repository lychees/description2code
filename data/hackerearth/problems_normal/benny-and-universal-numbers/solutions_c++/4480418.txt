#include <algorithm>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <utility>
#include <cstdlib>
#include <iomanip>
#include <cstring>
#include <string>
#include <vector>                              
#include <cstdio>
#include <stack>
#include <cmath>
#include <ctime>
#include <queue>
#include <deque>
#include <set>
#include <map>
 
using namespace std;
 
#define ull unsigned long long
#define ll long long
#define inf 1000000000
#define INF 1000000000000000000ll
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define pii pair < int , int >
#define pll pair < ll , ll >
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++ it)
#define all(a) a.begin(), a.end()
#define sqr(x)  (x) * (x)
#define sqrl(x)  (x) * 1ll * (x)
#define M_PI 3.14159265358979323846

const int mod = 1000000007;
const int N = 200005;

int rems[N];
ll a[N];
int len = 0;
bool prime[105];

void rec(int place, ll num, bool flag, int last){
   if(flag)
        a[++ len] = num;    
    if(place > 15) 
        return;
    for(int dig = 0;dig <= 9;++ dig)
    if((num * 10 + dig) % place == rems[place])
    rec(place + 1, num * 10 + dig, flag | prime[last * 10 + dig], dig);
}

int main (){
    ios_base::sync_with_stdio(0);
    cin.tie();
    for(int i = 1;i <= 15;++ i)
        cin >> rems[i];
    for(int i = 2;i <= 100;++ i)
        prime[i] = true;
    for(int i = 2;i <= 10;++ i)
        if(prime[i])
            for(int j = i * i;j <= 100;j += i)
                prime[j] = false;
    for(int i = 1;i <= 9;++ i)
        if(i % 1 == rems[1])
            rec(2, i, 0, i);    
    sort(a + 1, a + len + 1);
    int n;
    cin >> n;
    while(n --){
        ll l, r;
        cin >> l >> r;
        cout << upper_bound(a + 1, a + len + 1, r) - lower_bound(a + 1, a + len + 1, l) << endl;    }
    return 0;
}
