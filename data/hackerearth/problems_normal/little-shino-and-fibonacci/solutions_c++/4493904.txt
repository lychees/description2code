#include<bits/stdc++.h>
#define M 10000
#define MOD 1000000007
using namespace std;

long long lookup[15002];
long long prefix[15002];
long long s;

long long solve(long long n)
{
    if(n == 0)
        return 0;
	long long f = n / 15000;
	if(n % 15000 == 0)
		f--;
	n %= 15000;
	if(n == 0)
		n = 15000;
	long long ans = ((f % MOD) * (s % MOD)) % MOD;
	ans = (ans + prefix[n]) % MOD;
	return ans;
}

int main()
{
    long long a = 0, b = 1, l, r;
    lookup[1] = 0;
    lookup[2] = 1;
    s = 1;
    for(int i = 3; i <= 15000; i++)
    {
        lookup[i] = (a + b) % M;
        s = (s + lookup[i]) % MOD;
        b = (a + b) % M;
        a = (b - a) % M;
        if(a < 0)
            a += M;
    }
    for(int i = 1; i <= 15000; i++)
        prefix[i] = (lookup[i] + prefix[i - 1]) % MOD;

    int q;
    cin>>q;
    while(q--)
    {
        long long ans = 0;
        scanf("%lld %lld", &l, &r);
        printf("%lld\n",(MOD + solve(r) - solve(l - 1)) % MOD);
    }
    return 0;
}
