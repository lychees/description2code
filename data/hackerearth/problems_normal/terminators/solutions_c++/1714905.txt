#include<stdio.h>
#include<stdlib.h>
#include <iostream>
  using namespace std;
int max(int a, int b);
  int L [1001] [1001];
/* Returns length of LCS for X[0..m-1], Y[0..n-1] */
int lcs(int X [], int Y [], int m, int n )
{
   
   int i, j;
  
   /* Following steps build L[m+1][n+1] in bottom up fashion. Note 
      that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */
   for (i=0; i<=m; i++)
   {
     for (j=0; j<=n; j++)
     {
       if (i == 0 || j == 0)
         L[i][j] = 0;
  
       else if (X[i] == Y[j])
         L[i][j] = L[i-1][j-1] + 1;
  
       else
         L[i][j] = max(L[i-1][j], L[i][j-1]);
     }
   }
    
   /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */
   return L[m][n];
}
  
/* Utility function to get max of 2 integers */
int max(int a, int b)
{
    return (a > b)? a : b;
}

int a [1001] = {0};
int b [1001] = {0};
/* Driver program to test above function */
int main()
{
	int i, n, j, k, m;
	scanf ("%d", &m);
	while (m--) {
	
 scanf ("%d", &n);
 i = 1;
  while (i <= n)
        {
            cin>>k;
            a[k]=i;
            cin>>k;
            b[k]=i;
            i++;
        }
 // int m = strlen(X);
  //int n = strlen(Y);
  
  printf("%d\n", lcs( a, b, n, n ) );
  }
  //getchar();
  return 0;
}