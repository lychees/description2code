#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define inrep int t;cin>>t; while(t--)
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
int cnt ( int a, int b ) {
    if ( __gcd ( a,b ) >1 ) return INF;
    if ( a<b ) swap ( a,b );
    int res=0;
    while ( a>1 &&b>1 ) {
        res+=a/b;
        a=a%b;
//         cout<<a<<" "<<b<<" "<<res<<endl;
        if ( !a ) return INF;
        if ( a<b ) swap ( a,b );
    }
    res+=a-1;
    return res;
}
int main() {
    ios_base::sync_with_stdio ( false );
    inrep {
        int n;
        cin>>n;
        if(n==1){
        	cout<<"0\n"; continue;
        }
        int best=INF;
        reu ( i,1,n ) best= ( min ( best,cnt ( n,i ) ) );
        cout<<best<<endl;
    }
}
