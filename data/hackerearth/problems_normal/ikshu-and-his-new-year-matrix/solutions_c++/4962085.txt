#include <iostream>
using namespace std;

bool prime(int x)
{
	if(x==1) return false;
	int i=1;
	while(i*i<=x)
	{
		if(i!=1 && x%i==0)return false;
		i++;
	}
	//cout<<x<<" ";
	return true;
}
void oh(int dp[10000],int k)
{
	int i=2;
	for(i=2;i<10000;i++)
	{
		if(prime(i))
		{
			dp[i]=0;
			int j,c=1;
			for(j=i-k;j>=0;j-=k)
			{
				if(c<dp[j])dp[j]=c;
				c++;
			}
		}
	}
}
int f(int x,int dp[10000],int k)
{
//	cout<<"mo";
	if(dp[x]!=-1) return dp[x];
//	cout<<"lo";
	if(prime(x)) {dp[x]=0;return 0;}
	int a=k;
//	cout<<"yo";
	while(x+a<10000)
	{
		if(prime(x+a))
		{
			int i=x;
			dp[x]=a/k;
			for(i=x+k;i<=x+a;i=i+k)
			{
				dp[i]=dp[i-k]-1;
			}
			return a/k;
		}
		a=a+k;
	}
	return 10000;
}
int main()
{
    int n,k,i,j,mini=10000,x=10000,y=10000;
    cin>>n>>k;
    int mat[n][n];
    for(i=0;i<n;i++)for(j=0;j<n;j++)cin>>mat[i][j];
    int dp[10000];
    for(i=0;i<10000;i++) dp[i]=10000;
    oh(dp,k);
    for(i=0;i+2<n;i++)
    {
    	int cur=0;
    	for(j=0;j+2<n;j++)
    	{
    		 cur=dp[mat[i][j]]+dp[mat[i+1][j+1]]+dp[mat[i+2][j]]+dp[mat[i][j+2]]+dp[mat[i+2][j+2]];
    		 //cout<<<<" ";
    		 if(cur<mini)
    		 {
    		 	mini=cur;
    		 	x=i+1;
    		 	y=j+1;
    		 }
    		 else if(cur=mini)
    		 {
    		 	mini=cur;
    		 	if(i+1<=x) {if(i+1<x){x=i+1;y=j+1;}else if(j+1<y){x=i+1;y=j+1;}}
    		 	
    		 }
    	}
    }
    if(mini<10000)
    cout<<"yes"<<endl<<mini<<endl<<x+1<<" "<<y+1;
    else cout<<"no";
    return 0;
}
