#include<bits/stdc++.h>
using namespace std;

#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

#define mygc(c) (c)=getchar_unlocked()
#define mypc(c) putchar_unlocked(c)

#define ll long long
#define ull unsigned ll

void reader(int *x){int k,m=0;*x=0;for(;;){mygc(k);if(k=='-'){m=1;break;}if('0'<=k&&k<='9'){*x=k-'0';break;}}for(;;){mygc(k);if(k<'0'||k>'9')break;*x=(*x)*10+k-'0';}if(m)(*x)=-(*x);}
void reader(ll *x){int k,m=0;*x=0;for(;;){mygc(k);if(k=='-'){m=1;break;}if('0'<=k&&k<='9'){*x=k-'0';break;}}for(;;){mygc(k);if(k<'0'||k>'9')break;*x=(*x)*10+k-'0';}if(m)(*x)=-(*x);}
void reader(double *x){scanf("%lf",x);}
int reader(char c[]){int i,s=0;for(;;){mygc(i);if(i!=' '&&i!='\n'&&i!='\r'&&i!='\t'&&i!=EOF) break;}c[s++]=i;for(;;){mygc(i);if(i==' '||i=='\n'||i=='\r'||i=='\t'||i==EOF) break;c[s++]=i;}c[s]='\0';return s;}
template <class T, class S> void reader(T *x, S *y){reader(x);reader(y);}
template <class T, class S, class U> void reader(T *x, S *y, U *z){reader(x);reader(y);reader(z);}
template <class T, class S, class U, class V> void reader(T *x, S *y, U *z, V *w){reader(x);reader(y);reader(z);reader(w);}

void writer(int x, char c){int s=0,m=0;char f[10];if(x<0)m=1,x=-x;while(x)f[s++]=x%10,x/=10;if(!s)f[s++]=0;if(m)mypc('-');while(s--)mypc(f[s]+'0');mypc(c);}
void writer(ll x, char c){int s=0,m=0;char f[20];if(x<0)m=1,x=-x;while(x)f[s++]=x%10,x/=10;if(!s)f[s++]=0;if(m)mypc('-');while(s--)mypc(f[s]+'0');mypc(c);}
void writer(double x, char c){printf("%.15f",x);mypc(c);}
void writer(const char c[]){int i;for(i=0;c[i]!='\0';i++)mypc(c[i]);}
void writer(const char x[], char c){int i;for(i=0;x[i]!='\0';i++)mypc(x[i]);mypc(c);}
template<class T> void writerLn(T x){writer(x,'\n');}
template<class T, class S> void writerLn(T x, S y){writer(x,' ');writer(y,'\n');}
template<class T, class S, class U> void writerLn(T x, S y, U z){writer(x,' ');writer(y,' ');writer(z,'\n');}
template<class T> void writerArr(T x[], int n){int i;if(!n){mypc('\n');return;}rep(i,n-1)writer(x[i],' ');writer(x[n-1],'\n');}

char memarr[17000000]; void *mem = memarr;
#define MD 1000000007

struct pnt{
  double x, y;
  static double eps;

  pnt(void){
  }
  pnt(double a, double b){
    x = a;
    y = b;
  }

  void set(double a, double b){
    x = a;
    y = b;
  }
  void setPolar(double r, double th){
    x = r * cos(th);
    y = r * sin(th);
  }

  pnt& operator+=(pnt a){ x+=a.x; y+=a.y; return *this; }
  pnt& operator-=(pnt a){ x-=a.x; y-=a.y; return *this; }
  pnt& operator*=(pnt a){ pnt p = *this; x = p.x*a.x-p.y*a.y; y = p.x*a.y+p.y*a.x; return *this; }

  pnt operator+(pnt a){ return pnt(*this) += a; }
  pnt operator-(pnt a){ return pnt(*this) -= a; }
  pnt operator*(pnt a){ return pnt(*this) *= a; }

  pnt operator*(double a){ return pnt(x*a, y*a); }

  pnt operator-(void){ return (*this) * (-1); }

  double length2(void){
    return x*x+y*y;
  }
  double length(void){
    return sqrt(x*x+y*y);
  }
};
double pnt::eps = 1e-10;



template<class S, class T> inline void chmin(S &a, T b){if(a>b)a=b;}
template<class S, class T> inline void chmax(S &a, T b){if(a<b)a=b;}

int N;
pnt P[1010], r, tmp[1010];

int main(){
  int i, j, k, loop1, loop2;
  double pi = acos(0) * 2;
  double a, b, c1, c2, d1, d2;
  double x1, x2, y1, y2;
  double res = 1e100;

  reader(&N);
  rep(i,N){
    reader(&a,&b);
    P[i].set(a,b);
  }

  rep(loop1,200){
    a = loop1 * pi / 400;
    b = (loop1+1) * pi / 400;
    rep(loop2,200){
      c1 = (a+a+b) / 3;
      c2 = (a+b+b) / 3;

      r.setPolar(1,c1);
      rep(i,N) tmp[i] = P[i] * r;
      x1 = x2 = tmp[0].x;
      y1 = y2 = tmp[0].y;
      rep(i,N){
        chmin(x1, tmp[i].x);
        chmax(x2, tmp[i].x);
        chmin(y1, tmp[i].y);
        chmax(y2, tmp[i].y);
      }
      d1 = max(x2-x1, y2-y1);

      r.setPolar(1,c2);
      rep(i,N) tmp[i] = P[i] * r;
      x1 = x2 = tmp[0].x;
      y1 = y2 = tmp[0].y;
      rep(i,N){
        chmin(x1, tmp[i].x);
        chmax(x2, tmp[i].x);
        chmin(y1, tmp[i].y);
        chmax(y2, tmp[i].y);
      }
      d2 = max(x2-x1, y2-y1);

      chmin(res, min(d1,d2));
      if(d1 > d2) a = c1; else b = c2;
    }
  }

  printf("%.4f\n", res);

  return 0;
}
