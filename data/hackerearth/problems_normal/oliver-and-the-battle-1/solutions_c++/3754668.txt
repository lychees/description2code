#include<bits/stdc++.h>
using namespace std;

int v[1002][1002];
int visited[1002][1002]; 

int bfs(int x,int y)
{
	queue<pair<int ,int > >my_q;
	my_q.push(make_pair(x,y));
	visited[x][y] = 1;
	int total = 1;
	
	while(!my_q.empty())
	{
		pair<int,int >temp = my_q.front();
		my_q.pop();
		x = temp.first;
		y = temp.second;
	//	cout<<x<<" "<<y<<endl;
		for(int i = x-1; i <= x + 1; i++)
		{
			for(int j = y-1; j <= y +1; j++)
			{
				if(!visited[i][j] && v[i][j])
				{
					visited[i][j] = 1;
					my_q.push(make_pair(i,j));
					total++;
				}
			}
		}
	 }
	 return	total; 
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		memset(v,0,sizeof(v));
		for(int  i = 1; i <= n; i++)
		{
			for(int j = 1; j<= m; j++)
			cin>>v[i][j];		
		}
		memset(visited,0,sizeof(visited));
		
		int count = 0,ans = 0;
		for(int i = 1; i <= n; i++ )
		{
			for(int j = 1; j <= m; j++ )
			{
				if(!visited[i][j]&& v[i][j])
				{
					count++;
				//	visited[i][j] = 1;
					ans = max(bfs(i,j),ans);
				}
			}
		}
		printf("%d %d\n",count,ans);
	}
}
	