/* Divanshu Garg */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
#define MAX(a,b) ((a)>(b)?(a):(b))
int ABS(int a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second
#define mii map<int,int>
#define INF 100000000

/* Relevant code begins here */

void pre() {
    //empty!
}

V(int) v;
int mem[1005][1005];

int m,n;
int tempm;
bool chk;

bool isNeg(int x) {
    return (x<0);
}
bool isPos(int x) {
    return (x>=0);
}

int check(int x, int jj)
{
    if (x == 0) { chk = true; return 1; }
    if (chk) return 1;
    if (isNeg(jj)) return 0;

    if (mem[x][jj] != -1) return mem[x][jj];
    mem[x][jj] = 0;
    mem[x][jj] = check(x, jj-1);
    if ( isPos(x-v[jj]) ) mem[x][jj] = max(mem[x][jj],check(x-v[jj],jj-1));
    return mem[x][jj];
}

void myFucntion(mii a) {
    int val;
    mii m;
    mii::iterator it;
    FE(it,a) {
        val = it->second;
        m[val]++;
    }
    M(mem,-1);
    int res;
    sort(v.begin(),v.end());
    res = 0;
    FE(it,m) {
        chk = false;
        val = check(it->first, min(tempm-1,n-1));
        if (val >= 1) res += it->second;
    }
    printf("%d\n", res);
}

int main() {
    pre();
    int t,i,val; S(t);
    while (t--) {
        mii mp;
        scanf("%d %d",&n,&m);
        v.resize (m);
        tempm = m;
        F (i, 0, m) S(v[i]);
        F (i, 0, n) {
            S(val);
            mp[val]++;
        }
        myFucntion(mp);
    }
    return 0;
}
