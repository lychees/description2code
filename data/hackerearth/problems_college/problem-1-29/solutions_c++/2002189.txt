#include<bits/stdc++.h>
#define mod 1000000007
#define len(a) strlen(a)
#define ll long long
#define max 100005
#define op(n) cout<<n
#define ip(n) cin>>n

#define nl printf("\n")
#define pt printf("\t")

#define db printf("debug")
#define yes printf("YES\n")
#define no printf("NO\n")
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define set(a,v) memset(a,v,sizeof(a))
#define N 51

using namespace std;
bool isSafe(int maze[N][N], int x, int y,int n)
{

    if(x >= 0 && x < n && y >= 0 && y < n && maze[x][y] == 1)
        return true;

    return false;
}



bool solveMazeUtil(int maze[N][N], int x, int y,int n)
{

    if(x == n-1 && y == n-1)
    {

        return true;
    }


    if(isSafe(maze, x, y,n) == true)
    {




        if (solveMazeUtil(maze, x+1, y, n) == true)
            return true;


        if (solveMazeUtil(maze, x, y+1 , n) == true)
            return true;

        return false;
    }

    return false;
}


bool solveMaze(int maze[N][N],int n)
{


    if(solveMazeUtil(maze, 0, 0,n) == false)
    {
        return false;
    }

    return true;
}


int main()
{
    int t,i,j;
    cin>>t;
    while(t--)
    {
        int a[51][51];
        int n;
        ip(n);
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
                cin>>a[i][j];
            }
        }
       int s=solveMaze(a,n);

        if(s==1)
            printf("POSSIBLE\n");
        else
            printf("NOT POSSIBLE\n");
    }

    return 0;
}
