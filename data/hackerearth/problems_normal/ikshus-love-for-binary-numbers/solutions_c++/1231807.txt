#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
const int MOD = 1000000007;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define foru(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define ford(i, a, b) for (int i = (a); i >= (b); --i)
#define sz(a) ((int) a.size())
#define pb(a) push_back(a)
#define mp(a, b) make_pair(a, b)
#define mem(a) memset(a, 0, sizeof(a))
#define all(a) a.begin(), a.end()

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void add_max(T &a, T b) {if (b > a) a = b;}
template<class T> inline void add_min(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {if (b == 0) return a; return gcd(b, a % b);}

const int N = 61;
int n, k;
ll dp[N][N];

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    
    cin >> n >> k;
    mem(dp);
    dp[0][0] = 1;
    foru(i, 1, n) repu(j, 0, k) {
    	if (j > 0) dp[i][j] = dp[i - 1][j - 1];
    	else {
    		repu(l, 0, k) {
    			dp[i][j] += dp[i - 1][l];
    		}
    	}
    }
    ll tot = 1LL << n;
    ll ans = tot;
    repu(i, 0, k) ans -= dp[n][i];
    ll g = gcd(ans, tot);
    cout << ans / g << "/" << tot / g << endl;
    return 0;
}
