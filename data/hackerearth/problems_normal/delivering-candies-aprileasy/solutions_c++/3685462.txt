#include <bits/stdc++.h>
#define ll long long
using namespace std;
typedef struct node
{
	ll int index,cost;
}node;
class x
{
	public:
	bool operator()(node a,node b)
	{
	if(a.cost >b.cost) //In priority queue elements are popped from back
	return true;
	return false;
	}
};
ll int visited[100010],cost[100010],a[100010];
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll int n,m,s;
	cin>>n>>m>>s; //n houses, m roads & shop
	s--;//0-based
	ll int i,u,v,w;
	list<node> l[n];
	node t1,t2;
	priority_queue<node,vector<node>,x> p;
	for(i=0;i<n;i++)
	{
		cin>>a[i];
		cost[i]=LONG_MAX;
		visited[i]=0;
	}
	for(i=0;i<m;i++)
	{
		cin>>u>>v>>w;
		u--;v--;//0-based
		t1.index=v;t1.cost=w;
		l[u].push_back(t1);
		t1.index=u;t1.cost=w;
		l[v].push_back(t1);
	}
	t1.index=s;t1.cost=0;
	p.push(t1);
	while(!p.empty())
	{
		t1=p.top();
		p.pop();
		if(!visited[t1.index])
		{
			visited[t1.index]=1;
			cost[t1.index]=t1.cost;
			list<node>::iterator it;
			for(it=l[t1.index].begin();it!=l[t1.index].end();it++)
			{
				t2=*it;
				t2.cost+=t1.cost;
				p.push(t2);
			}
		}
		
	}
	//~ for(i=0;i<n;i++)
	//~ {
		//~ cout<<cost[i]<<" ";
	//~ }
	//~ cout<<endl;
	//~ //prefix of values
	ll int p1=0,p2=0,tt1,tt2,ans;
	for(i=0;i<n;i++)
	{
		if(visited[i])
		{
			p1+=a[i];
			p2+=a[i]*cost[i];
		}
	}
	for(i=0;i<n;i++)
	{
		if(visited[i])
		{
			tt2=p2-(cost[i]*a[i]);
			tt1=cost[i]*(p1-a[i]);
			//~ cout<<tt2<<" "<<tt1<<" "<<p2<<" "<<p1<<endl;
			ans=tt1+tt2;
		}
		else
		ans=0;
		cout<<ans<<" ";
	}
	cout<<endl;
	return 0;
}
