/* Abhiruchi Gupta */
#include <stdio.h>
#include <string.h>
#include <map>
#include <vector>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <climits>
#include <stack>
#include <queue>
#include <set>
//#include <conio.h>
using namespace std;
int n, nw = 0;
int a[102][102],i,j;

void dfs(int x, int y, int vis[][102])
{
 vis[x][y] = 1;    
 if (x==n-1&&y==n-1){
                     nw++;
 }
 if (x + 1 < n && a[x+1][y] == 0 && vis[x+1][y] == 0) {      
          dfs(x + 1, y, vis);
 }
 if (y + 1 < n && a[x][y+1] == 0 && vis[x][y+1] == 0) {            
          dfs(x, y + 1, vis);
       
 }
 if (x - 1 >= 0 && a[x-1][y] == 0 && vis[x-1][y] == 0) {             
          dfs(x - 1, y, vis);
 }
 if (y - 1 >= 0 && a[x][y-1] == 0 && vis[x][y-1] == 0) {             
          dfs(x, y - 1, vis);
       
 }
 vis[x][y]=0;
}

int main()
{
    
    cin>>n;
    int vis[102][102];
    for (i=0;i<n;i++)for(j=0;j<n;j++){ cin>>a[i][j]; vis[i][j] = 0; }
    dfs(0, 0, vis);
    cout<<nw<<endl;
  //  getch();
    return 0;
}
