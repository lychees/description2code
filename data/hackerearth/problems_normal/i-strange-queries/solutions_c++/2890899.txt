#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define debug(...) printf(__VA__ARGS__)
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 50005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}

int a[N],sz;
struct node{
    int x,y,c,id;
    bool operator <(const node&a)const{
        if(y/sz!=a.y/sz)return y<a.y;
        if((y/sz)&1)return x>a.x;
        return x<a.x;
    }
};
ll res,ans[N];
int lx[N],rx[N];
void addL(int x){
    lx[x]++;
    res+=rx[x];
}
void delL(int x){
    lx[x]--;
    res-=rx[x];
}
void addR(int x){
    rx[x]++;
    res+=lx[x];
}
void delR(int x){
    rx[x]--;
    res-=lx[x];
}
int main(){
    //ios::sync_with_stdio(0);
    //cout<<fixed<<setprecision(10);
    int T=5,i,j,k,m,n;
    scanf("%d",&n);
    sz=1;
    while(sz*sz<n)sz++;
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    scanf("%d",&m);
    vector<node>q;
    for(i=0;i<m;i++){
        int x1,y1,x2,y2;
        scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
        q.pb({y1,y2,1,i});
        q.pb({x1-1,y2,-1,i});
        q.pb({x2-1,y1,-1,i});
        q.pb({x1-1,x2-1,1,i});
    }
    sort(all(q));
    int l=0,r=0;res=0;
    for(i=0;i<q.size();i++){
        while(q[i].x<l){
            l--,delL(a[l]);
        }
        while(q[i].x>l){
            addL(a[l]),l++;
        }
        while(q[i].y<r){
            r--,delR(a[r]);
        }
        while(q[i].y>r){
            addR(a[r]),r++;
        }
        ans[q[i].id]+=q[i].c*res;
    }
    for(i=0;i<m;i++)printf("%lld\n",ans[i]);
    return 0;
}