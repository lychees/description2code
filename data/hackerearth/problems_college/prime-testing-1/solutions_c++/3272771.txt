#include <bits/stdc++.h>
using namespace std;
  bool prime[10000];
void SieveOfEratosthenes(int n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
   
    memset(prime, true, sizeof(prime));
 
    for (int p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
 
    // Print all prime numbers
  /*  for (int p=2; p<=n; p++)
       if (prime[p])
          cout << p << " ";*/
}
 int a[1000004];
// Driver Program to test above function
int main()
{
    //int n = 30;
   // cout << "Following are the prime numbers smaller "
     //    << " than or equal to " << n << endl;
    SieveOfEratosthenes(1005);
    int t;
    cin>>t;
    while(t--){
    	int n;
    	cin>>n;int c=0;
    	prime[0]=false;
    	prime[1]=false;
    	for(int i=0;i<n;i++){
    		cin>>a[i];
    		if(prime[a[i]]){
    			c++;
    		}
    	}
    	cout<<c<<endl;
    	
    }
    return 0;
}