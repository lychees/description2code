#include<bits/stdc++.h>
#define pll pair<int,int>

using namespace std;
bool visited[(1<<20)];
int target;
int n;
int bfs(int mas)
{
	for(int i=0;i<(1<<20);i++)
        visited[i]=false;
	

    queue<pll> q;
    q.push({mas,0});
    while(!q.empty())
    {
        pll tp = q.front();
        q.pop();
        int mask=tp.first;
       // cout<<mask<<"\n";
        if(tp.first==0 || tp.first==target)
            return tp.second;
       
        if(visited[tp.first])
            continue;
        visited[tp.first]=true;
        for(int i=0;i<n-1;i++)
        {
            int newmask = mask^(1<<i)^(1<<(i+1));
            
            q.push({newmask,tp.second+1});
        }
         for(int i=0;i<n-2;i++)
        {
            int newmask = mask^(1<<i)^(1<<(i+1))^(1<<(i+2));
            
            
            //cout<<newmask<<" "<<tp.second+1<<"\n";
            q.push({newmask,tp.second+1});
        }

    }
    return -1;
}


int main()
{


    string str;
    cin>>n;
    int target= (1<<n)-1;
    
    cin>>str;
    int mask=0;
    int mask2=0;
    for(int i=0;i<n;i++)
    {
        if(str[i]=='W')
            mask+=(1<<i);
        else
           mask2+=(1<<i);
           
    }
    cout<<min(bfs(mask),bfs(mask2));

}
