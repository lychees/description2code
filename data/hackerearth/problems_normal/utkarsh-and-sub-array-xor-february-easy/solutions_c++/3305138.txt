// @nazarbek.altybay

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>

#define pii pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

typedef long long ll;

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 2e6 + 7;

ll n, k;
ll l, r;

ll a[MAXN];
ll b[MAXN];

ll dsu[MAXN];
ll comp;

ll getS(ll x) {
  if (dsu[x] == x) return x;
  return dsu[x] = getS(dsu[x]);
}

void join(ll x, ll y) {
  x = getS(x);
  y = getS(y);
  if (x == y) return;
  dsu[x] = y;
  comp--;
}

map<ll, ll> id;
vector<ll> g[MAXN];

ll sz;
bool used[MAXN];

ll get(ll x) {
  if (id.count(x))
    return id[x];
  sz++;
  id[x] = sz;
  return id[x];
}

ll bin(ll x, ll y) {
  ll res = 1;
  while (y > 0) {
    if (y & 1)
      res = res * x % INF;
    y >>= 1;
    x = x * x % INF;
  }
  return res;
}

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif

  ios_base::sync_with_stdio(0);
  cin.tie(0);

  cin >> n >> k;
  for (int i = 1; i <= k; i++) {
    cin >> l >> r;
    a[i] = get(l - 1);
    b[i] = get(r);
  }
  comp = sz;
  ll ans = bin(2, n - sz);
  for (int i = 1; i <= sz; i++)
    dsu[i] = i;
  for (int i = 1; i <= k; i++) {
    join(a[i], b[i]);
    cout << ans * bin(2, comp) % INF << "\n";
  }
  return 0;
}