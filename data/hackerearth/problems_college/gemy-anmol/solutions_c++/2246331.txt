#include <bits/stdc++.h>
using namespace std;

#define LL_MAX 200000000000
#define MOD 1000000007
#define EPS 1e-14
#define PI 3.14159265358979

#define ll long long int
#define llu long long unsigned
#define ld long

#define mp make_pair
#define pb push_back
#define maX(a,b) ( (a) > (b) ? (a) : (b))
#define miN(a,b) ( (a) < (b) ? (a) : (b))
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define s(a) scanf("%d",&a)
#define sll(a) scanf("%lld",&a)
#define s_inp(a) cin>>a
typedef vector<vector<int> > vvi;
typedef vector <ll> vi;
typedef pair <ll, ll> pii;
typedef pair <pii, ll> pii1;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
ll gcd(ll a, ll b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
ll hcf(ll a, ll b) {if(b>a) return (hcf(b, a)); if(a%b==0) return b; return (hcf(b, a%b));}
ll modpow(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll mulmod(ll a, ll b, ll m) {int64_t res = 0;while (a != 0){if(a & 1)res =(res+b)%m;a>>=1;b =(b<<1)%m;}return res;}
int ans;
int n;
int fi(vector<long long int> &arr,long long int sum,int start,int cost)
{
    if(start==n&&sum>0)
        return 9999;
    if(start==n&&sum<=0)
    {return cost;}
    if(sum<=0)
    {return cost;}
        if(arr[start]<sum)
        return min(fi(arr,sum-arr[start],start+1,cost+1),fi(arr,sum,start+1,cost));
       else
        return cost+1;
}
int main()
{

    int t,i;
    s(t);
    while(t--)
    {
        s(n);
        int an=0;
        vector<long long int> arr;
        long long int x,m;
        scanf("%lld",&m);
        for(i=0;i<n;i++)
            {scanf("%lld",&x);arr.pb(x);if(x>=m)an=1;}
            sort(arr.begin(),arr.end(),greater<long long int>());
         ans=9999;
        x=fi(arr,m,0,0);
        if(an)
        x=1;
        if(x==9999)
        printf("-1\n");
        else
        printf("%lld\n",x);
    }
    return 0;
}
