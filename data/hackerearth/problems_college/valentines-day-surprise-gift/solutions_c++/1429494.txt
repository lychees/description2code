#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
long long int ppow(long long int a, long long int b) {
	if(a==1 || b==0) return 1;
	
	if(b&1) {
		return (a*ppow(a,b-1))%mod;
	}
	else {
		long long int t = ppow(a,b/2);
		return (t*t)%mod;
	}
}
long long int GCD(long long int a, long long int b){
    if(b == 0)
        return a;
    return GCD(b, a%b);
}
long long int dp[35];
long long int func(long long int n) {
	if(dp[n]!=-1) return dp[n];
	else {
		long long int x,y,z;
		if(n%4) x = n/4 +1;
		else x = n/4;
		if(n%5) y = n/5 + 1;
		else y = n/5;
		if(n%10) z = n/10 +1;
		else z = n/10;
		dp[n] = ((((1 << x) * func(y) )%mod)* func(z))%mod;
	}
	return dp[n];
}
int main()
{
	memset(dp,-1,sizeof(dp));
	dp[0]=1;	
	dp[1]=1;
	dp[2]=1;
	dp[3]=3;
	dp[4]=3;
	dp[5]=15;dp[6]=15;
	dp[7]=105;
	dp[8]=105;
	dp[9]=105;
	dp[10]=105;
	for (int i=0;i<=30;i++) {
		func(i);
	}
	int n,t;
	scanf("%d",&t);
	while(t--) {
	scanf("%d",&n);
	long long int maxx=0;
	for (int i=1;i<=5;i++) {
		for (int j=1;j<=5;j++) {
			if(GCD(i,j)==1) {
				maxx = max(maxx,ppow(i*dp[n],j*dp[n]));		
			}
		}
	}
	printf("%lld\n",maxx);
}
}