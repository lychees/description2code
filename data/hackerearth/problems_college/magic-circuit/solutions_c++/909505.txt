#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cstring>
#include <climits>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v; ll w; };
 
ll MOD = 1000000007;
ll _MOD = 1000000009;

int dx[4] = {-1, 0, 1, 0};
int dy[4] = {0, -1, 0, 1};

int n, m;

void hoge(vector<int>& a, int i, int S) {
	a[i] ^= S;
	a[i] ^= (S >> 1);
	a[i] ^= (S << 1) & ((1 << m) - 1);
	if (i - 1 >= 0) a[i - 1] ^= S;
	if (i + 1 < n) a[i + 1] ^= S;
}

int main() {
	for (;;) {
		scanf("%d%d", &n, &m);
		if (n == 0 && m == 0) break;
		vector<int> a(n);
		for (int i = 0; i < n; i++) {
			char s[16]; scanf("%s", s);
			for (int j = 0; j < m; j++)
				if (s[j] == 'X') a[i] += (1 << j);
		}
		int ans = INT_MAX;
		for (int S = 0; S < (1 << m); S++) {
			vector<int> _a = a;
			int cnt = 0;
			cnt += __builtin_popcount(S);
			hoge(_a, 0, S);
			for (int i = 1; i < n; i++) {
				cnt += __builtin_popcount(_a[i - 1]);
				hoge(_a, i, _a[i - 1]);
			}
			if (_a[n - 1] == 0) ans = min(ans, cnt);
		}
		printf("%d\n", ans < INT_MAX ? ans : -1);
	}
}