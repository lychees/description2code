#include <bits/stdc++.h>
using namespace std;

#define N 105
#define PB push_back
#define sd(x) scanf("%d", &x)

vector<int> st[N][N];
int a[N][N];

int get(string s){
	if(s == "##"){
		return -1000;
	}
	int i, j = 0, k = 0, l = 1;
	if(s[0] == '-'){
		l = -1;
		j = 1;
	}
	for(i = j; i < s.length(); i++){
		k *= 10;
		k += s[i] - '0';
	}
	return k * l;
}

void solve(){
	int n, m, i, j, k, q;
	string s;
	for(i = 0; i < N; i++){
		for(j = 0; j < N; j++){
			st[i][j].clear();
		}
	}
	st[0][0].PB(0);
    sd(n); sd(m);
    for(i = 0; i < n; i++){
    	for(j = 0; j < m; j++){
    		cin>>s;
    		a[i][j] = get(s);
    	}
    }
    for(i = 0; i < n; i++){
    	for(j = 0; j < m; j++){
    		if(a[i][j] == -1000){
    			st[i][j].clear();
    			continue;
    		}
    		sort(st[i][j].begin(), st[i][j].end());
    		for(k = 0; k < st[i][j].size() && k < 102; k++){
				st[i + 1][j].PB(st[i][j][k] + a[i][j]);
				st[i][j + 1].PB(st[i][j][k] + a[i][j]);
    		}
    	}
    }
    sd(q);
    while(q--){
    	sd(i); sd(j); sd(k);
    	//cout<<st[i][j].size()<<" ";
    	if(a[i][j] == -1000){
    		cout<<"Obstacle"<<endl;
    	}
    	else if(k > st[i][j].size()){
    		cout<<"Not so many paths"<<endl;
    	}
    	else{
    		cout<<st[i][j][k - 1] + a[i][j]<<endl;
    	}
    }
}

int main()
{
	int t;
	sd(t);
	while(t--){
		solve();
	}
    return 0;
}
