#include<bits/stdc++.h>
using namespace std;

queue<pair<int,int> > q;

vector<int> friends[1003];

int mat[1003][1003]={0},flg=0;

int n,m,a,b,x,y,visited[1003]={0};

void bfs()

{

    while(!q.empty())

    {

        pair<int,int> pr=q.front();
        q.pop();

        visited[pr.first]=1;

        for(int i = 0; i < (int)friends[pr.first].size(); ++i)
        {
            int his_friend = friends[pr.first][i];

            if((!visited[his_friend])&&(mat[pr.first][his_friend]==0))
            {
                if(his_friend==b)
                {
                    cout<<pr.second+1;
                    flg=1;
                    return;
                }

                q.push(make_pair(his_friend,pr.second+1));
            }
        }
    }
    return;
}

int main()
{
    cin>>n>>m>>a>>b;

    while(m--)
    {
        cin>>x>>y;      
        mat[x][y]=1;              // student x don't talk to student y
        mat[y][x]=1;              // also student y don't talk to student x
    }

    for (int i = 1; i <= n ; ++i)
        for (int j = 1; j <= n; ++j)
            if(mat[i][j]==0)               // student i talks to student j
                friends[i].push_back(j);

    q.push(make_pair(a,0));   // push source node in the queue

    bfs();

    if(flg==0)                   
        cout<<-1;

    return 0;
}