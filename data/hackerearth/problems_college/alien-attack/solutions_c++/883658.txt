#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <cstring>
#include <limits>
#include <vector>
#include <cstdlib>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <algorithm>

using namespace std;

const int INF = 2000000000;
const int MOD = 1000000007;

typedef long long Long;
typedef double DD;
typedef vector<int> VI;
typedef vector<VI > VVI;
typedef pair<int,int> PII;
typedef vector<PII> VPII;

#define sf scanf
#define pf printf
#define mem(a,b) memset(a,b,sizeof(a))
#define pb push_back
#define REP(i,a,b) for(int i=a; i<=b; ++i)
#define REPI(i,a,b,c) for(int i=a; i<=b; i+=c)
#define REPR(i,a,b) for(int i=b; i>=a; --i)
#define REPRD(i,a,b,c) for(int i=b; i>=a; i-=c)
#define REPB(i,a) for(int i=a; ;i++)
#define REPRB(i,a) for(int i=a; ; i--)
#define mp(a,b) make_pair(a,b)
#define fs first
#define sc second
#define SZ(s) ((int)s.size())
#define PI 3.141592653589793
#define VS vector<string>
#define VI vector<int>
#define VD vector<DD>
#define VL vector<Long>
#define VVL vector<VL >
#define lim 100007
#define tlim (1<<((int)ceil(log2(lim))+1))
#define unq(vec) stable_sort(vec.begin(),vec.end());\
vec.resize(distance(vec.begin(),unique(vec.begin(),vec.end())));
#define BE(a) a.begin(),a.end()
#define rev(a) reverse(BE(a));
#define sorta(a) stable_sort(BE(a))
#define sortc(a) sort(BE(a),comp)

/* Matrix Exponentiation */
typedef VVL matrix;
const int K=2;
matrix mul(matrix A, matrix B)
{
    matrix C(K+1,VL(K+1));
    for(int i=1; i<=K; ++i)
        for(int j=1; j<=K; ++j)
            for(int k=1; k<=K; ++k)
                C[i][j]=(C[i][j]+(A[i][k]*B[k][j])%MOD)%MOD;
    return C;
}
matrix mat_pow(matrix A, int p)
{
    if(p==1)
        return A;
    if(p&1)
        return mul(A,mat_pow(A,p-1));
    matrix tmp=mat_pow(A,p/2);
    return mul(tmp, tmp);
}
int main(int argc, const char **argv)
{
    ios::sync_with_stdio(false);
    //double st=clock(),en;
    // freopen("input.txt","r",stdin);
    // freopen("output.txt","w+",stdout);
    int Test, N;
    cin>>Test;
    REP(i,1,Test)
    {
        cin>>N;
        matrix res(K+1,VL(K+1));
        res[1][1] = 1, res[1][2] = 2;
        res[2][1] = 1, res[2][2] = 0;
        if(N<=2)
        {
            if(N==2) cout<<"7\n";
            else if(N==1) cout<<"2\n";
            else cout<<"0\n";
        }
        else
        {
            res = mat_pow(res,N-2);
            Long sum = ((res[1][1]*7)%MOD + (res[1][2]*2)%MOD)%MOD;
            cout<<sum<<"\n";
        }
    }
    //en=clock();
    //cerr<<(double)(en-st)/CLOCKS_PER_SEC<<endl;
    return 0;
}

