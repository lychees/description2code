#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <deque>
#include <cassert>

using namespace std;

#ifdef WIN32
	#define I64 "%I64d"
#else
	#define I64 "%lld"
#endif

typedef long long ll;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define all(s) s.begin(), s.end()
#define sz(s) (int(s.size()))
#define fname "a"
#define ms(a,x) memset(a, x, sizeof(a))
#define forit(it,s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++it)
#define MAXN 55

int n, m;
int a[MAXN];
int c[MAXN];
pair <int, int> b[MAXN];
int ok[MAXN];

inline bool can()
{
	for (int i = 0; i < n; ++i)
		c[i] = a[i];
	for (int i = 0; i < m; ++i)
		sort(c + b[i].f, c + b[i].s);
	for (int i = 0; i < n; ++i)
		if (c[i] != i)
			return 0;
	return 1;
}

int main()
{
	#ifdef LOCAL
	freopen(fname".in", "r", stdin);
	freopen(fname".out", "w", stdout);
	#endif

	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; ++i)
	{
		scanf("%d%d", &b[i].f, &b[i].s);
		--b[i].f;
	}

	for (int i = 0; i < n; ++i)
		a[i] = i;
	reverse(a, a + n);

	if (can())
	{
		puts("All ok!");
		return 0;
	}

	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
		{
			if (ok[j]) continue;
			ok[j] = 1;
			a[i] = j;
			for (int k = i + 1, val = n - 1; val >= 0; --val)
				if (!ok[val])
					a[k++] = val;
			if (!can()) break;
			ok[j] = 0;
		}

	for (int i = 0; i < n; ++i)
		printf("%d%c", a[i] + 1, " \n"[i + 1 == n]);
	return 0;
}
