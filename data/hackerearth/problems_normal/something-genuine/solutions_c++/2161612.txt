#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define sz(a) (int)a.size()
#define fs first
#define sc second

typedef long long ll;
typedef pair<int,int> ii;

const int N = 200005;
const int MOD = 1000000007;

int n, a[N], L[N], F[N];
ll lazy[4*N], it[4*N][2];

void lazy_update(int p, int l, int r) {
    if (lazy[p]) {
        it[p][0] = (it[p][0] + ((((2LL*lazy[p])%MOD)*it[p][1])%MOD + (((ll)r-l+1)*((lazy[p]*lazy[p])%MOD))%MOD)%MOD)%MOD;
        it[p][1] = (it[p][1] + (lazy[p]*((ll)r-l+1))%MOD)%MOD;
        if (l != r) {
            lazy[p*2]+=lazy[p];
            lazy[p*2+1]+=lazy[p];
        }
        lazy[p] = 0;
    }
}

void update(int p, int l, int r, int u, int v) {
    lazy_update(p,l,r);
    if (l > v || r < u) return;
    if (l >= u && r <= v) {
        it[p][0] = (((it[p][0]+(2LL*it[p][1])%MOD)%MOD)+r-l+1)%MOD;
        it[p][1] = (it[p][1]+r-l+1)%MOD;
        if (l != r) {
            lazy[p*2]++;
            lazy[p*2+1]++;
        }
        lazy[p] = 0;
        return;
    }
    int m = (l+r)/2;
    update(p*2,l,m,u,v);
    update(p*2+1,m+1,r,u,v);
    it[p][0] = (it[p*2][0]+it[p*2+1][0])%MOD;
    it[p][1] = (it[p*2][1]+it[p*2+1][1])%MOD;
}

ll get(int p, int l, int r, int u, int v) {
    lazy_update(p,l,r);
    if (l > v || r < u) return 0;
    if (l >= u && r <= v) return it[p][0];
    int m = (l+r)/2;
    return (get(p*2,l,m,u,v)+get(p*2+1,m+1,r,u,v))%MOD;
}

int main() {
	//freopen("input.txt","r",stdin);
    scanf("%d",&n);
    for (int i = 1; i <= n; ++i)
        scanf("%d",&a[i]);
    for (int i = 1; i <= n; ++i) {
        L[i] = F[a[i]];
        F[a[i]] = i;
    }
    ll res = 0;
    for (int i = 1; i <= n; ++i) {
        update(1,1,n,L[i]+1,i);
        ll p = 0;
        if (i > 1) p = get(1,1,n,1,i-1);
        res = (res+p+1)%MOD;
        if (i==5050) {
            bool x = true;
        }
    }
    cout << res;
	return 0;
}
