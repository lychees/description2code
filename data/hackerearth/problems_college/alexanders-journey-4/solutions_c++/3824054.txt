#include <bits/stdc++.h>
using namespace std;
#define MAXN 3003
#define inf 1e9
typedef pair<int,int> pii;
vector<pii>graph[MAXN];
bool vis[MAXN];
int dist[MAXN];
priority_queue<pii, vector<pii>, greater<pii> > pq;
void reset(){
	for(int i=0; i<MAXN; ++i) vis[i] = false, graph[i].clear(), dist[i] = inf;
}

void dijkstra(int src){
	dist[src]=0;
	pq.push(make_pair(0,src));
	while(pq.size()){
		int v = pq.top().second; pq.pop();
		if(vis[v]) continue;
		vis[v] = true;
		for(int i=0; i<graph[v].size(); ++i){
			int t = graph[v][i].second;
			if(dist[v]+graph[v][i].first < dist[t]){
				dist[t] = dist[v]+graph[v][i].first;
				pq.push(make_pair(dist[t],t));
			}
		}
	}
	return;
}

int main()
{
    //cout << "Hello World!" << endl;
    int t;
    cin >> t;
    while(t--){
    	reset();
    	int n, r;
    	cin >> n >> r;
    	for(int i=0; i<r; ++i){
    		int a, b, d;
    		cin >> a >> b >> d;
    		a--, b--;
    		graph[a].push_back(make_pair(d, b));
    		graph[b].push_back(make_pair(d, a));
    	}
    	int src;
    	cin >> src; src--;
    	dijkstra(src);
    	for(int i=0; i<n; ++i){
    		if(i == src) continue;
    		if(dist[i] != inf) cout << dist[i] << " ";
    		else cout << -1 << " ";
    	}
    	cout << endl;
    }
    return 0;
}
