#include <bits/stdc++.h>
using namespace std;


const int MAXN = 100007;
const long long INF = 1e15;
vector<int> g[MAXN],w[MAXN];
long long  dist[MAXN];

void djiekstra(int n,int st)
{
    int i,cur,j,to;
    priority_queue< pair<int,int> >  q;
    for (i=1;i<=n;i++) dist[i] = INF;
    dist[st] = 0;
    q.push(make_pair(0,st));
    while(!q.empty())
    {
        cur = q.top().second;
        q.pop();
        for (j=0;j<g[cur].size();j++)
        {
            to = g[cur][j];
            if (dist[to]>dist[cur]+w[cur][j])
            {
                dist[to] = dist[cur]+w[cur][j];
                q.push(make_pair(-dist[to],to));
            }
        }
    }
}
int main()
{
    int n,m,s,i,a,b,cost;
    long long k[MAXN],cnt,sum,ans;
    cin>>n>>m>>s;
    for (i=1;i<=n;i++) cin>>k[i];

    for (i=0;i<m;i++)
    {
        cin>>a>>b>>cost;
        g[a].push_back(b);
        g[b].push_back(a);
        w[a].push_back(cost);
        w[b].push_back(cost);
    }
    djiekstra(n,s);
    cnt = 0;
    sum = 0;
    for (i=1;i<=n;i++)
    {
        if (dist[i]!=INF)
        {
            cnt+=k[i];
            sum+=k[i]*dist[i];
        }
    }

    for (i=1;i<=n;i++)
    {
        if (dist[i]==INF)
        {
            cout<<"0 ";
            continue;
        }
        ans = sum-k[i]*dist[i]+(cnt-k[i])*dist[i];
        cout<<ans<<" ";
    }
    cout<<endl;


    return 0;
}
