#include <bits/stdc++.h>
using namespace std;

const int N = 1000005;
bool p[N];
int ct[N], ct2[N];

void sieve() {
	p[0] = p[1] = true;
	p[2] = false;
	for (int i = 2; i * i < N; ++i) {
		if (!p[i])
			for (int j = i + i; j < N; j += i)
				p[j] = true;
	}
}

void prefix_sum() {
	for (int i = 1; i < N; ++i) {
		ct[i] = ct[i-1] + (p[i] ? 0 : 1);
		ct2[i] = p[ct[i]] ? 0 : 1;
	}
	for (int i = 1; i < N; ++i)
		ct2[i] += ct2[i-1];
}

void init() {
	sieve();
	prefix_sum();
}

int main()
{
    ios_base::sync_with_stdio(false);
    init();
    int t, l, r;
    cin >> t;
    while (t--) {
    	cin >> l >> r;
    	cout << ct2[r] - ct2[l-1] << endl;
    }
    return 0;
}
