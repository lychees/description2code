#include<iostream>
#include<string.h>
#include<vector>
using namespace std;
int  prm[1000000+4];
int cumm[1000000+9];
int pref[1000000+9];
void sieve(){
    memset(prm,0,sizeof prm);
    int n=1000000;
    prm[1]=1;prm[0]=1;
    for(int i=1;i*i<=n;++i){
        if(prm[i]==0){
            for(int j=i*i;j<=n;j+=i)
                prm[j]=1;
        }
    }
    return ;
}
int main(){
    sieve();
    memset(cumm,0,sizeof cumm);
    memset(pref,0,sizeof pref);
    for(int i=1;i<=1000*1000;++i){
        if(prm[i]==0)cumm[i]+=1;
        cumm[i]+=cumm[i-1];
    }//cumm contains the total no of primes uptil that point 
    for(int i=1;i<=1000*1000;++i){
        if(prm[cumm[i]]==0)pref[i]+=1;//printf("%d is a prime prime\n",i);
        //if(i>10)break;
        pref[i]+=pref[i-1];
    }
    int t;scanf("%d",&t);
    while(t--){
        int a,b;scanf("%d %d",&a,&b);
        cout<<pref[b]-pref[a-1]<<"\n";    
    }
    return 0;
}
