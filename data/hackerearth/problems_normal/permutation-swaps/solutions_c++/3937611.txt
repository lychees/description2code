#include <iostream>
#include <stdio.h>
using namespace std;

int n,k,parent[100004],p[100004],q[100004];

void makeset_()
{
	for (int i = 1 ; i <= n ; i++)
		parent[i] = i;
}

int fp (int x)
{
	if (parent[x] == x)
		return x;

	return (parent[x] = fp (parent[x]));
}

void union_(int x, int y)
{
	int px = fp (x);
	int py = fp (y);

	if (px != py)
	{
		parent[py] = px;
	}
}

int main()
{
	int t;
	scanf ("%d",&t);
	while (t--)
	{
		makeset_();
		scanf ("%d %d",&n,&k);
		for (int i = 1 ; i <= n ; i++)
			scanf ("%d",&p[i]);
		for (int i = 1 ; i <= n ; i++)
			scanf ("%d",&q[i]);
		makeset_();
		while (k--)
		{
			int x,y;
			scanf ("%d %d",&x,&y);
			union_(p[x],p[y]);
		}

		int flag = 1;
		for (int i = 1; i <= n ; i++)
		{
			if (fp (p[i]) != fp (q[i]))
			{
				flag = 0;
				break;
			}	
		}

		if (flag == 1)
			printf ("YES\n");
		else
			printf ("NO\n");
	}
	return 0;
}

