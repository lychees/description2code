//#define MYDEBUG
#define _CRT_SECURE_NO_WARNINGS
#define TASK "c1"
#pragma comment(linker, "/STACK:67108864")
#include <cstdio>
#include <iostream>
#include <iomanip> 
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <functional>
#include <cassert>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
#include <random>

const int MOD = 786433;
const int INF = 1000000001;
const int MAXN = 400;
const long double EPS = 1e-11;
const int HASH_POW = 29;
const long double PI = acos(-1.0);

using namespace std;

double workTime()
{
	return double(clock()) / CLOCKS_PER_SEC;
}

void my_return(int code)
{
#ifdef MYDEBUG
	cout << "\nTime = " << fixed << setprecision(3) << workTime() << endl;
#endif
	exit(code);
}

int main()
{
	cin.sync_with_stdio(0);
	cin.tie(0);
	mt19937 mt_rand(time(0));
#ifdef MYDEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	/*freopen(TASK".in", "rt", stdin);
	freopen(TASK".out", "wt", stdout);*/
	/*freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);*/
#endif

	int n, m, c[51];
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= m; ++i)
		scanf("%d", &c[i]);

	int r = 0;
	for (int i = 1; i <= n; ++i)
	{
		int k;
		scanf("%d", &k);
		r = (r + c[k]) / c[k] * c[k];
		while (true)
		{
			bool good = false;
			for (int x = 1; x <= k; ++x)
				if (r % c[x] == 0)
					good = true;
			for (int x = k + 1; x <= m; ++x)
				if (r % c[x] == 0)
					good = false;
			if (good)
				break;
			r += c[k];
		}
	}
	printf("%d\n", r);

	my_return(0);
}