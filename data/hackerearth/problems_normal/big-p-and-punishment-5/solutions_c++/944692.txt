// Program to solve the problem  "Big P and Punishment "
 
 #include<iostream>
 #include<vector>
 #include<cstring>
 #include<cstdlib>
 #include<algorithm>
 #include<cstdio>
 #include<stack>
 #include<queue>
 using namespace std;
 void dfs(vector<vector<int> > &graph,int slap[],int *res,int root)
 {
       
       if(slap[root]==1)
          return;
       *res=(*res)+1;
       slap[root]=1;   
       for(int i=0;i<graph[root].size();i++)
       {
              dfs(graph,slap,res,graph[root][i]);
       }
}              
 int main()
 {
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,f,s;
        scanf("%d%d%d",&n,&f,&s);
        vector<vector<int> > graph(n+1);
        while(f--)
        {
            int a,b;
            scanf("%d%d",&a,&b);
            graph[a].push_back(b);
        }
        int slap[n+1];
        for(int i=1;i<=n;i++)
        {
            slap[i]=0;
        }
   //     memset(visit,0,n+1);
     //   memset(slap,0,n+1);
        int res=0;
        while(s--)
        {
            int sl;
            scanf("%d",&sl);
            dfs(graph,slap,&res,sl);
        }
     //   cout<<endl;
    /*    for(int i=1;i<=n;i++)
        {
            cout<<slap[i]<<" ";
        }  */   
        printf("%d\n",res);
    }
    return 0;
}            