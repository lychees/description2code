#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <algorithm>
#define MAX 100000

using namespace std;

bool isPossible(vector<int> &v,int cur,int k){
	int st = v[0];
	int n = v.size();
	k--;
	for(int i=1;i<n;i++){
		if(v[i] >= st+cur){
			k--;
			st = v[i];
			if(k==0) return true;
		}

	}
	return false;
}

int getMaxDist(vector<int> &v,int &k){
	int low = 0,high = 100000,mid;
	int dist = low;
	sort(v.begin(),v.end());
	while(low<=high){
		mid = low + (high-low)/2;
		if(isPossible(v,mid,k)){
			low = mid+1;
			dist = max(dist,mid);
		}else{
			high = mid-1;
		}
	}
	return dist;
}

int main(){
	ios::sync_with_stdio(false);
	int t,n,k;
	cin>>t;
	while(t--){
		cin>>n>>k;
		vector<int> v(n);
		for(int i=0;i<n;i++){
			cin>>v[i];
		}

		cout<<getMaxDist(v,k)<<endl;
	}

	return 0;
}