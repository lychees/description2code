#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 10000007
#define eps 1e-13
#define endl '\n'
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pcc pair<char, char>
#define mp make_pair
#define F first
#define S second
#define pb push_back
#define sd(x) scanf("%d", &x)
#define pd(x) printf("%d", x)
#define slld(x) scanf("%ld", &x)
#define plld(x) printf("%ld", x)
#define slf(x) scanf("%lf", &x)
#define plf(x) printf("%lf", x)
#define sch(x) scanf("%c", &x)
#define pch(x) printf("%c", x)
#define gtl(x) getline(cin, x)
#define maxnum 1048576
ll gcd(ll a, ll b)
{
	if(b == 0)
		return a;
	return gcd(b, a%b);
}
ll modx(ll Base,ll exponent)
{
	ll ans = 1;
	while(exponent)
	{
		if(exponent & 1)
			ans = (ans * Base)%mod;
		Base = (Base * Base)%mod;
		exponent = exponent >> 1;
	}
	return ans;
}
bool cmp()
{

}
ll a[1024], b[1024], c[maxnum+2];
vector<int>xx;
int l = 0;
void func(int in, int bit)
{
	if(in == l)
		return;
	func(in+1, bit);
	c[bit^xx[in]]++;
	func(in+1, bit^xx[in]);
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, i, j, x, y;
	ll ans = 0;
	cin >> n >> y;
	a[0] = 1;
	for(i = 0; i < n; i++)
	{
		cin >> x;
		if(x < 1024)
		{
			for(j = 0; j < 1024; j++)
				b[x^j] = a[x^j] + a[j];
			for(j = 0; j < 1024; j++)
				a[j] = b[j]%mod;
		}
		else
			xx.pb(x);
	}
	l = xx.size();
	c[0] = 1;
	func(0, 0);
	ans = 0;
	for(i = 0; i < 1024; i++)
		ans = (ans + (((c[i^y]%mod)*a[i])%mod))%mod;
	cout << ans;
	return 0;
}
