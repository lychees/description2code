#include<iostream>
#include<stdio.h>
#include<map>
#include<vector>
#include<string>
#include<algorithm>

using namespace std;

#define MOD 1000000007
#define TM 51
int n = TM;

struct node {
	long long int m[TM][TM];
	node() {
		for(int i = 0; i < n; i++)
			for(int j = 0; j < 3; j++) m[i][j] = 0;
	}
	node(long long int nm[TM][TM]) {
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++) m[i][j] = nm[i][j];
	}
};

node mult(node n1, node n2) {
	long long int res[TM][TM];
	for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++) res[i][j] = 0;
	for(int i = 0; i < n; i++) {
		for(int j = 0; j < n; j++) {
			for(int k = 0; k < n; k++) {
				res[i][j] = ((res[i][j]) + (n1.m[i][k]*n2.m[k][j])) % MOD;
			}
		}
	}
	return node(res);
}

node pow2(node base, long long int exp) {	
	//cout << exp << endl;
	if(exp == 1) return base;
	if(exp % 2 != 0) return mult(base, pow2(base, exp-1));
	else {
		node r = pow2(base, exp/2);
		return mult(r, r);
	}
}
 

int main() {
	
	int t;
	scanf(" %d", &t);
	
	for(int cnt = 0; cnt < t; cnt++) {
		long long int k, u, v;
		scanf(" %d %lld %lld %lld", &n, &k, &u, &v);
		long long int mat[TM][TM];
		
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++) scanf(" %lld", &mat[i][j]);
			
		node base = node(mat);
		if(k == 0) printf("0\n");
		else {
			node res = pow2(base, k);
			printf("%lld\n", res.m[u][v]);
		}

	}
	return 0;
}
