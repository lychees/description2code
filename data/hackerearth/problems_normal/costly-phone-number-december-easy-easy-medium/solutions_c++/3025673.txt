#include <iostream>
    using std::cout;
    using std::endl;
    using std::cin;
#include <vector>
    using std::vector;

int main()
{
    vector<unsigned int> costs(10); // costs per digit
    unsigned int n;                 // number of testcases
    unsigned int pnl;               // phone number length
    
    // Read number of testcases
    cin >> n;

    for (unsigned int i = 0; i < n; i++)
    {
        // Read costs for pressing digit buttons
        for (unsigned int d = 0; d < 10; d++)
        {
            cin >> costs[d];
        }

        // Read phone number length
        cin >> pnl;

        // Calculate mincost for each digit by repeatedly trying
        // to lower the digit costs, until they have reached their
        // optimal minimum.
        // Every time that a better cost is found for a certain digit,
        // the costs for the other digits could potentially be improved
        // and at least one more iteration is necessary to check this.
        // This is achieved by setting a flag variable to false
        // and changing its value to true if a more optimal cost was
        // found. As long as the flag remains true (that is: as long
        // as at least one more optimal cost was found), other costs could
        // potentially be made more optimal. The iteration ends if no more
        // digit costs could be made more optimal.
        for (bool relax = true; relax; )
        {
            relax = false;

            for (unsigned int i = 0; i < costs.size(); ++i)
            {
                for (unsigned int j = i; j < costs.size(); ++j)
                {
                    unsigned int d = (i + j) % 10;

                    if (costs[i] + costs[j] < costs[d])
                    {
                        costs[d] = costs[i] + costs[j];
                        relax = true;
                    }
                }
            }
        }
        
        // Read a phone number and calculate its minimum cost
        unsigned int cost = 0;
        char digit;

        for (unsigned int i = 0; i < pnl; i++)
        {
            cin >> digit;
            cost += costs[digit - '0'];
        }

        // Output mincost for this phone number
        cout << cost << endl;
    }

    return 0;
}