#include <iostream>
#include <vector>
#include <map>
using namespace std;
 
int main()
{
	long long n;
	cin>>n;
	long long i;
	long long x;
	long long j;
	vector<pair<long long, long long > > v;
	for(i=0;i<n;i++){
		vector<long long> q;
		cin>>x;
		q.push_back(x);
		cin>>x;
		q.push_back(x);
		cin>>x;
		q.push_back(x);
		pair<long long,long long> p;
		p = make_pair(q[0],q[0]+q[2]);
			int flag = 0;
		for(j=0;j<v.size();j++){
			pair<long long,long long> q = v[j];
			if(p.first == q.first){
				if(p.second>q.second){
					p.first = q.second + 1;
				}
				else{
					flag = 1;
					break;
				}
			}
			else if(p.first>q.first){
				if(p.first<=q.second){
					p.first = q.second+1;
					if(p.first>p.second){
						flag = 1;
						break;
					}
				}
			}
			else{
				if(p.second>=q.second){
					v.erase(v.begin()+j);
					j--;
					continue;
				}
				else if(p.second>=q.first){
					p.second = q.first-1;

				}
			}
		}
		if(flag==0)
			v.push_back(p);
	}
	long long ans = 0;
	vector<pair<long long,long long> >::iterator vit;
	for(vit = v.begin();vit != v.end();vit++){
		ans += (*vit).second - (*vit).first +1; 
	}
	cout<<ans;
    return 0;
}