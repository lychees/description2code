/*template created by */
#include <bits/stdc++.h>
#define SI set<int> 
#define VI vector<int> 
#define ull unsigned long long 
#define inint(a) scanf("%d",&a)
#define input(a) cin>>a
#define ll long long 
#define print(a) cout<<a
#define printn(a) cout<<a<<"\n"
#define f first
#define s second
#define len(s) s.length()
#define range(a,b,n) for(int i=a;i<b;i+=n)
using namespace std;
int main()
{
	int t;
	inint(t);
	while(t--){
		int n;
		inint(n);
		vector<vector<int> > cnt(n, vector<int> (26, 0));
		for(int i = 0 ; i < n ; i++){
			string s;
			input(s);
			for(int j = 0 ; j < len(s); j++){
				cnt[i][s[j] - 'a']++;
			}
		}
		string sleep;
		input(sleep);
		vector<int> need(26, 0);
		for(int i = 0 ; i < len(sleep); i++){
			need[sleep[i] - 'a']++;
		}
		int s1 = n / 2, s2 = n - s1;
		set<vector<int> > bit1, bit2;
		for(int mask = 0; mask <(1 << s1); mask++){
			vector<int> sub(26, 0);
			for(int j = 0 ; j < s1; j++){
				if(mask & (1 << j)){
					for(int k = 0 ; k < 26 ; k++){
						sub[k] += cnt[j][k];
					}
				}
				bit1.insert(sub);
			}
		}
		for(int mask = 0; mask <(1 << s2); mask++){
			vector<int> sub(26, 0);
			for(int j = 0 ; j < s2; j++){
				if(mask & (1 << j)){
					for(int k = 0 ; k < 26 ; k++){
						sub[k] += cnt[s1 + j][k];
					}
				}
				bit2.insert(sub);
			}
		}
		bool flg = false;
		for(set<vector<int> > :: iterator i = bit1.begin(); i != bit1.end() ; i++){
			vector<int> check(26, 0);
			for(int j = 0 ; j < 26; j++){
				check[j] = need[j] - (*i)[j];
			}
			if(bit2.find(check) != bit2.end()){
				flg = true;
				break;
			}
		}
		if(flg)cout << "YES\n";
		else cout << "NO\n";
		
	}
	return 0;
}