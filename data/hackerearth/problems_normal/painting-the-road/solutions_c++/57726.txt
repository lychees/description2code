/*Swarn Avinash Kumar ->
Keyword:
Bitch:
*/
#include <list>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cassert>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cstring>
#define sz size()
#define ll long long
#define f(i,a,b) for(int i = a;i < b;i++)
#define fr(i,a,b) for(int i = a;i >= b;i--)
#define fitr(i,c) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 9999999
#define bc(a) __builtin_popcount(a)
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define re return
#define ini(a,b) memset(a,b,sizeof(a))
#define be begin()
#define ee end()
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define pb push_back
#define mp make_pair
#define rerr cout << "-" << endl
#define p(a) cout << a << endl
#define pr(a,n) f(i,0,n) cout << a[i] << " "

using namespace std;
//vector<pair<int,int> > g[260];
int n,m;
int main() {
    int t;
    cin >> t;
    while(t--) {
        cin >> n >> m;
        vector<pair<int,int> > g[n+5];
        f(i,0,m) {
            int a,b,c;
            cin >> a >> b >> c;
            f(j,a,b+1) {
                g[a].pb(mp(j,c));
                g[j].pb(mp(a,c));
            }
        }
        priority_queue<pair<int,int> > pq;
        int dis[n+5];
        ini(dis,inf);
        pq.push(mp(0,0));
        dis[0] = 0;
        while(!pq.empty()) {
            int nt = -pq.top().fi;
            int nn = pq.top().se;
            pq.pop();
            if(dis[nn] != nt) continue;
            f(i,0,g[nn].sz) {
                int an = g[nn][i].fi;
                int ad = g[nn][i].se;
                if(dis[an] > dis[nn] + ad) {
                    dis[an] = dis[nn] + ad;
                    pq.push(mp(-dis[an],an));
                }
            }
        }
        if(dis[n] >= inf) {p("-1"); continue;}
        else p(dis[n]);
    }
}
