#include<bits/stdc++.h>
#define LL long long int
#define REP(i,n) for(int i=0;i<n;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define TC int t;scanf("%d",&t);while (t-->0)
#define INP(x) scanf("%d",&x)
#define OUT(x) printf("%d\n",x)
#define INPLL(x) scanf("%lld",&x)
#define OUTLL(x) printf("%lld\n",x)
#define INPS(x) scanf("%s",x)
#define MEM(a,b) memset(a,b,sizeof(a))
#define MP make_pair
#define PB push_back
#define PII pair<int,int>
#define PLL pair<long long,long long>
#define VPII vector<pair<int,int> >
#define F first
#define S second
#define MOD 1000000007
#define mod 10000007
#define N 3005
#define M N<<1
using namespace std;
int n,array1[N],array2[M],array3[M],fa[N],fdis[N],tans[N];
queue<int> q;
vector<int> v;
int main()
{
	int top=0;
	memset(array1,-1,sizeof(array1));
	INP(n);
	REP(i,n-1)
    {
		int t1, t2;
		INP(t1);INP(t2);
        t1--;t2--;
		array2[top] = t2, array3[top] = array1[t1], array1[t1] = top, ++top;
		array2[top] = t1, array3[top] = array1[t2], array1[t2] = top, ++top;
	}
	int ans=n-1,all_cost;
	REP(i,n)
    {
		while(!q.empty())
		{
			q.pop();
		}
		v.clear();
		q.push(i);
		memset(fa, -1, sizeof(fa));
		all_cost = 0;
		while (q.size()) 
		{
			int u = q.front();
			q.pop();
			for (int j = array1[u]; ~j; j = array3[j])
			{
				int v = array2[j], d = j & 1;
				if (v == fa[u])
				{
					continue;
				}
				fa[v] = u;
				fdis[v] = d ? 1 : -1;
				all_cost += d;
				q.push(v);
			}
			v.push_back(u);
		}
		tans[i] = all_cost;
		ans = min(ans, all_cost);
		REPP(j,1,n)
		{
			int r = v[j], f = fa[v[j]];
			tans[r] = min(all_cost, tans[f] - fdis[r]);
			ans = min(ans, tans[r]);
		}
	}
	OUT(ans);
	return 0;
}
