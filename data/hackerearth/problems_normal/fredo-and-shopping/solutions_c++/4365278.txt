#include <iostream>
#include <algorithm>
using namespace std;

long long getsum(int bit[],int i){
	long long ans=0;
	while(i>0){
		ans+=bit[i];
		i=i-(i&-i);
	}
	return ans;
}
void update(int bit[],int i,int n){
	while(i<=n){
		bit[i]+=1;
		i=i+(i&-i);
	}
}
int main()
{
    int n;cin>>n;
    int a[n+1],i,c[n+1];
    for(i=1;i<=n;i++)	cin>>a[i],c[i]=a[i];
    sort(a,a+n);
    for(i=1;i<=n;i++){
    	c[i]=lower_bound(a,a+n,c[i])-a+1;
    	//cout<<c[i]<<" ";
    }
    long long cnt=0;
    int bit[n+1];
    for(i=1;i<=n;i++){	
    	bit[i]=0;
    }
    //reverse(c,c+n);
    for(i=1;i<=n;i++){
    	cnt=getsum(bit,c[i]-1);
    	update(bit,c[i],n);
    	cout<<cnt<<" ";
    }
    return 0;
}
