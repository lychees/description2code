//Hope is a good thing and maybe the best thing of all...
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <list>
#include <cstdio>
#include <cstring>
#include <cctype>
#include <queue>
#include <set>
#include <climits>
#include <iomanip>
#include <cassert>
using namespace std;

#define trace(x) cerr << #x << "=" << x <<endl;
#define trace2(x, y) cerr << #x << "=" << x << " " << #y << "=" << y <<endl;
#define track(x) {cerr << #x << ":" << endl; for (int i = 0; i < x.size(); i++) {cerr << x[i] << " ";} cerr << endl;}
#define trackarr(x, n) {cerr << #x << ":" << endl; for (int i = 0; i < n; i++) {cerr << x[i] << " ";} cerr << endl;}
#define trackvv(x) {cerr << #x << ":" << endl; for (int i = 0; i < x.size(); i++) { cerr << "i:" << i << endl; for (int j = 0; j < x[i].size(); j++){cerr << x[i][j] << " ";} cerr << endl;} cerr << endl;}
#define trackcr(x) {cerr << #x << ":" << endl; for (auto i = x.begin(); i != x.end(); i++) {cerr << *i << " ";} cerr << endl;}

#define MAX 100005
#define INF 1e18
#define MOD 1000000007

long long power(long long n, long long m)
{
    if (m == 0) return 1;
    long long x = power(n, m / 2);
    if (!(m & 1)) return (x * x) % MOD;
    else return (((x * x) % MOD) * n) % MOD;
}

int main(){
    ios::sync_with_stdio(false);
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<string> a(n);
        int total = 0;
        for (int i = 0; i < n; i++) {
            cin >> a[i];
            for (int j = 0; j < n; j++) {
                total += (a[i][j] == '#');
            }
        }
        bool flag = false;
        int rowSum = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (a[i][j] == '#') {
                    rowSum++;
                }
            }
            if (2*rowSum == total) {
                flag = true;
            }
        }

        int colSum = 0;
        for (int j = 0; j < n; j++) {
            for (int i = 0; i < n; i++) {
                if (a[i][j] == '#') {
                    colSum++;
                }
            }
            if (2*colSum == total) {
                flag = true;
            }
        }

        if (flag) {
            cout << "YES" << endl;
        } else {
            cout << "NO" << endl;
        }
    }
}


