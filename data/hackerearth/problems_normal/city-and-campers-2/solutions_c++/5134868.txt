#include<bits/stdc++.h>
using namespace std;
long long n,q,arr[100010],size[100010],a,b,mx,mn,ts[100010],mind,maxs=1;
set<pair<long long,long long> > s;
set<pair<long long,long long> >::iterator it;
void init()
{
	for(int i=1;i<=n;i++)
	{
		arr[i]=i;
		size[i]=1;
		s.insert(make_pair(1,i));
	}
	ts[1]=n;
}
int root(int x)
{
	while(x!=arr[x])
	{
		arr[x]=arr[arr[x]];
		x=arr[x];
	}
	return x;
}
void unn(int a, int b)
{
	int root_a=root(a);
	int root_b=root(b);
	if(root_a!=root_b)
	{
		if(root_a<root_b)
		{
			swap(root_a,root_b);
		}
		ts[size[root_a]]--;
		ts[size[root_b]]--;
		ts[size[root_a]+size[root_b]]++;
		if(size[root_a]+size[root_b]>maxs)
		{
			maxs=size[root_a]+size[root_b];
		}
		size[root_a]+=size[root_b];
		arr[root_b]=root_a;
	}
}
void solve()
{
	mind=n+1;
	int i=1,j;
	while(ts[i]==0)
	{
		i++;
	}
	if(i==maxs)
	{
		cout<<"0\n";
		return;
	}
	while(i<=maxs-1)
	{
		j=i+1;
		if(ts[i]>1)
		{
			cout<<"0\n";
			return;
		}
		while(ts[j]==0)
		{
			j++; 
		}
		if(j-i<mind)
		{
			mind=j-i;
		}
		i=j;
	}
	cout<<mind<<"\n";
}
int main()
{
	ios::sync_with_stdio(false);
	//cin.tie(NULL);
	cin>>n>>q;
	init();
	while(q--)
	{
		cin>>a>>b;
		unn(a,b);
		solve();
	}
	return 0;
}
