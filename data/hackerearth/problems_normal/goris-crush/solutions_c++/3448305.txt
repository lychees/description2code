#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
int main() {
    ios_base::sync_with_stdio ( false );
    int n,q,k;
    cin>>n>>q>>k;
    vi oList ( n );
    cin>>oList;
    vi sList ( oList );
    sort ( all ( sList ) );
    int b=max(sqrt(n),sqrt ( q )) +1;
    vi add,rem;
    vector<bool> res;
    reu ( i,1,q+1 ) {
        if ( i%b==0 ) {
            sort ( all ( add ) );
            vi sl;
            int j2=0;
            for ( int j: sList ) {
                while ( j2<add.size() &&add[j2]<j )
                    sl.push_back ( add[j2++] );
                sl.push_back ( j );
            }
            sort ( all ( rem ) );
            sList.clear();
            j2=0;
            for ( int j: sl ) {
                if ( j2<rem.size() && rem[j2]==j ) j2++;
                else sList.push_back ( j );
            }
            add.clear();
            rem.clear();

        }
        int t;
        cin>>t;
        if ( !t ) {
            int x,y;
            cin>>x>>y;
            x--;
            rem.push_back ( oList[x] );
            add.push_back ( y );
            oList[x]=y;
        } else {
            int a,b,c,d;
            cin>>a>>b>>c>>d;
            int mi=max ( a,c );
            int ma=min ( b,d );
            int m=upper_bound ( all ( sList ),ma )-lower_bound ( all ( sList ),mi );
            for ( int x: add ) if ( mi<=x && ma>=x ) m++;
            for ( int x: rem ) if ( mi<=x && ma>=x ) m--;
            res.push_back ( m>=k );
// cout<<m<<endl;
        }
    }
    for ( bool b: res ) if ( b ) cout<<"Propose\n";
        else cout<<"Do not propose\n";
}
