#include <bits/stdc++.h>
using namespace std;
int n;
int a[52][52];
bool vis[2501];
int f=0;
int dfs(int s,vector<int>* v)
{
	vis[s]=true;
	for(int i=0;i<v[s].size();i++)
	{
		if(!vis[v[s][i]])
		{
			dfs(v[s][i],v);
		}
	}
}
int main()
{
   int t;
   cin>>t;
   while(t--)
    {
        cin>>n;
        //memset(a1,0,sizeof a1);
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
                scanf("%d",&a[i][j]);
        vector<int> v[n*n];
        for(int i=0;i<n*n;i++)
        {
        	if(i%n!=n-1&&a[i/n][i%n]==1) v[i].push_back(i+1);
        	if(i/n!=n-1&&a[i/n][i%n]==1) v[i].push_back(i+n);
        }
        memset(vis,false,sizeof vis);
  		dfs(0,v);
		if(vis[n*n-1])
	        cout<<"POSSIBLE\n";
	    else
        	cout<<"NOT POSSIBLE\n";
    }
    return 0;
}
