#include<bits/stdc++.h>
using namespace std;

#define MAXN 1000006
#define MAXLG 25
struct entry { int nr[2], p; };

char A[MAXN];
entry L[MAXN];
int P[MAXLG][MAXN], Nlen, stp, S[MAXN];

int cmp(struct entry a, struct entry b) 
{
	return a.nr[0] == b.nr[0] ? (a.nr[1] < b.nr[1] ? 1 : 0) : (a.nr[0] < b.nr[0] ? 1 : 0);
}

int lcp(int x, int y) 
{
	int k, ret = 0;
	if(x < 0 || y < 0) return 0;
	if(x == y) return Nlen - x;
	for(k = stp - 1; k >= 0 && x < Nlen && y < Nlen; k--)
		if(P[k][x] == P[k][y])
			x += 1 << k, y += 1 << k, ret += 1 << k;
	return ret;
}

void build()
{
	char mn = (char)256;
	for(int i = 0; A[i]; i++) mn = min(mn, A[i]);
	for(int i = 0; A[i]; i++) P[0][i] = A[i] - mn;
	Nlen = strlen(A);
	stp = 1;
	for(int cnt = 1; (cnt >> 1) < Nlen; stp++, cnt <<= 1) 
	{
		for(int i = 0; i < Nlen; i++) 
		{
			L[i].nr[0] = P[stp - 1][i];
			L[i].nr[1] = i + cnt < Nlen ? P[stp - 1][i + cnt] : -1;
			L[i].p = i;
		}
		sort(L, L + Nlen, cmp);
		for(int i = 0; i < Nlen; i++) 
			P[stp][L[i].p] = (i>0 && L[i].nr[0]==L[i-1].nr[0] && L[i].nr[1]==L[i-1].nr[1])? P[stp][L[i-1].p] : i;
	}
	for(int i = 0; i < Nlen; i++) S[P[stp-1][i]] = i;
	//for(int i = 0; i < Nlen; i++) 
		//cout << S[i] << endl;
}

int main() 
{
	int k,n;
	cin >> k >> n;
	scanf("%s",A);
	build();
	
	int ma = 0;
	int st = 0,en = k-1;
	while(en < Nlen)
		ma = max(ma,lcp(S[st++],S[en++]));
	cout << ma << endl;
	
	return 0;
}
