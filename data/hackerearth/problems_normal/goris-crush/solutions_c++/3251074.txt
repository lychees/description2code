/*
jai shree ram _/\_
A hacker from NITP
*/

#include<bits/stdc++.h>
using namespace std;

#define mod 1000000007
typedef set<string> ss;
typedef vector<int> vs;
typedef map<int,char> msi;
typedef pair<int,int> pa;
typedef long long int ll;

int bit[1000004];
int query(int ind)
{
	int ret=0;
	while(ind>0)
	{
		ret+=bit[ind];
		ind-= (ind & -ind);
	}
	return ret;
}

void update(int ind,int val)
{
	while(ind<=1000000)
	{
		bit[ind]+=val;
		ind+= (ind & -ind);
	}
}

map<int,int> m;
int n,q,k,i,a[100005],ch[100005],u[100005],b[100005],c[100005],d[100005],x[100005],y[100005];
vector<int> v;
int main()
{
	//freopen("i.in", "r", stdin);
  	//freopen("o.out", "w", stdout);
  	//ios_base::sync_with_stdio(false);
  	//cin.tie(0);
  	memset(bit,0,sizeof(bit));
  	cin>>n>>q>>k;
  	for(i=1;i<=n;i++)
  	cin>>a[i],v.push_back(a[i]);;
  	for(i=0;i<q;i++)
  	{
  		cin>>ch[i];
  		if(ch[i]==0)
  		{
  			cin>>x[i]>>y[i];
  			v.push_back(x[i]);
  			v.push_back(y[i]);
  		}
  		else
  		{
  			cin>>u[i]>>b[i]>>c[i]>>d[i];
  			v.push_back(u[i]);
  			v.push_back(b[i]);
  			v.push_back(c[i]);
  			v.push_back(d[i]);
  		}
  	}
  	v.push_back(0); v.push_back(1e9);
  	sort(v.begin(),v.end());
  	int s=v.size();
  	for(i=0;i<s;i++)
  		m[v[i]]=i;
  	for(i=1;i<=n;i++)
  	update(m[a[i]],1);
  	for(i=0;i<q;i++)
  	{
  		if(ch[i]==0)
  		{
  			update(m[a[x[i]]],-1);
  			update(m[y[i]],1);
  			a[x[i]]=y[i];
  		}
  		else
  		{
  			if(b[i]<c[i] || u[i]>d[i])
  				cout<<"Do not propose\n";
  			else
  			{
  				if((query(min(m[b[i]],m[d[i]]))-query(max(m[c[i]]-1,m[u[i]]-1)))>=k)
  					cout<<"Propose\n";
  				else
  					cout<<"Do not propose\n";
  			}
  		}
  	}
	return 0;
}

