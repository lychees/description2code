#include <iostream>
#include <algorithm>
#include <stdlib.h>

using namespace std;
int cmp( const void *a,const void *b )
{

    return (*(int*) a - *(int *)  b );
}
int main()
{


    int x;
    cin >> x;
    if(x<1000000)
    {


    int a[x],b[x];
    for (int d=0;d<x;d++)
    {

        cin >> a[d];


    }
    for (int d=0;d<x;d++)
    {
        cin >> b[d];
    }

    qsort(a,x,sizeof(int),cmp);
    qsort(b,x,sizeof(int),cmp);


    vector <int> c;

    long long t;
    t=b[x-1];
    while(t!=0)
    {
        c.push_back(t%10);
        t/=10;
    }
    t=a[x-1];
    int ch=0;
    long long t1=0;
    for (int d=0;d<c.size();d++)
    {
        t1=(c[d]*t)+ch;
        c[d]=t1%10;
        ch=t1/10;
    }
    while(ch!=0)
    {

        c.push_back(ch%10);
        ch/=10;
    }


    for (int d=0;d<x-1;d++)
    {

        vector <int> c1;
        t=b[d];
        while(t!=0)
        {

            c1.push_back(t%10);
            t/=10;

        }
        t=a[d];
        int ch2=0;
        long long t2=0;
          for (int d=0;d<c1.size();d++)
            {
                t2=(c1[d]*t)+ch2;
                c1[d]=t2%10;
                ch2=t2/10;
            }
            while(ch2!=0)
            {

                c1.push_back(ch2%10);
                ch2/=10;
            }


        int z;
        for(z=0;z<c1.size();z++)
        {

            c[z]+=c1[z];
        }
        for (z=0;z<c.size();z++)
        {



                if(c[z]>=10)
                {
                    if((z+1)==c.size())
                    {
                        c.push_back(c[z]/10);
                        c[z]=(c[z]%10);
                    }
                    else
                    {
                        c[z+1]+=(c[z]/10);
                        c[z]=(c[z]%10);
                    }
                }

        }


    }
    for (int d=c.size()-1;d>=0;d--)
    {

        cout << c[d];
    }
    cout << endl;
    }
    else
    {
         vector<int> a,b;
    for (int d=0;d<x;d++)
    {

        int q;
        cin >> q;
        a.push_back(q);
    }
    for (int d=0;d<x;d++)
    {

        int q;
        cin >> q;
        b.push_back(q);
    }
    sort(a.begin(),a.end(),greater<int>());
    sort(b.begin(),b.end(),greater<int>());

    vector <int> c;

    long long t;
    t=b[0];
    while(t!=0)
    {
        c.push_back(t%10);
        t/=10;
    }
    t=a[0];
    int ch=0;
    long long t1=0;
    for (int d=0;d<c.size();d++)
    {
        t1=(c[d]*t)+ch;
        c[d]=t1%10;
        ch=t1/10;
    }
    while(ch!=0)
    {

        c.push_back(ch%10);
        ch/=10;
    }


    for (int d=1;d<x;d++)
    {

        vector <int> c1;
        t=b[d];
        while(t!=0)
        {

            c1.push_back(t%10);
            t/=10;

        }
        t=a[d];
        int ch2=0;
        long long t2=0;
          for (int d=0;d<c1.size();d++)
            {
                t2=(c1[d]*t)+ch2;
                c1[d]=t2%10;
                ch2=t2/10;
            }
            while(ch2!=0)
            {

                c1.push_back(ch2%10);
                ch2/=10;
            }


        int z;
        for(z=0;z<c1.size();z++)
        {

            c[z]+=c1[z];
        }
        for (z=0;z<c.size();z++)
        {



                if(c[z]>=10)
                {
                    if((z+1)==c.size())
                    {
                        c.push_back(c[z]/10);
                        c[z]=(c[z]%10);
                    }
                    else
                    {
                        c[z+1]+=(c[z]/10);
                        c[z]=(c[z]%10);
                    }
                }

        }


    }
    for (int d=c.size()-1;d>=0;d--)
    {

        cout << c[d];
    }
    cout << endl;


    }

}
