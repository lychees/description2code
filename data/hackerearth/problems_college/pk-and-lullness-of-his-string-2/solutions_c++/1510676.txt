#include <bits/stdc++.h>
#define MOD 1000000007
using namespace std;

long long fac[100002];

long long mod_inverse(long long a) 
{
    long long x=1,y=a,b=MOD-2;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD;
        b /= 2;
    }
    return x;
}

long long comb(long long n,long long r)
{
    return (((fac[n]*mod_inverse(fac[r]))%MOD)*(mod_inverse(fac[n-r])))%MOD;
}

string s;
long long l[100002],r[100002];

int main()
{
    long long t,n,i,j,m,ans=0,cnt=0;
    cin>>t;
    fac[0]=1;
    for(i=1;i<=100000;i++)
    fac[i]=(fac[i-1]*i)%MOD;
    while(t--)
    {
    	ans=0;
    	cin>>s>>m;
    	n=s.size();
    	if(s[0]=='l')
    	l[0]=1;
    	else
    	l[0]=0;
    	if(s[n-1]=='l')
    	r[n-1]=1;
    	else
    	r[n-1]=0;
    	for(i=1;i<n;i++)
    	{
    		l[i]=l[i-1];
    		if(s[i]=='l')
    		l[i]++;
    	}
    	for(i=n-2;i>=0;i--)
    	{
    		r[i]=r[i+1];
    		if(s[i]=='l')
    		r[i]++;
    	}
    	for(i=1;i<=n-2;i++)
    	{
    		if(s[i]!='u')
    		continue;
    		if(l[i]<(m/2) || r[i]<(m/2))
    		continue;
    		ans=(ans+(comb(l[i],m/2)*comb(r[i],m/2))%MOD)%MOD;
    	}
    	cout<<ans<<"\n";
    }
    return 0;
}
