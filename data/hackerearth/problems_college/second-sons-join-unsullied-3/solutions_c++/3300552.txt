#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <string.h>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <fstream>
//#define _LOCAL_
#ifdef _LOCAL_
#include "testlib.h"
/* rnd */
#endif

using namespace std;

template<class T> inline T cabs(const T &x) { return x > 0 ? x : (-x); }
template<class T> inline T gcd(const T &x, const T &y) { return (y == 0) ? x : gcd(y, x % y); }
template<class T> inline T sgn(const T &x) { return (x > 0) - (x < 0); }

#define dbg(x) cout << #x << " = " << (x) << endl
#define dbg2(x,y) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << endl
#define dbg3(x,y,z) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << ", " << #z << " = " << (z) << endl
#define dbg4(x,y,z,w) cout << #x << " = " << (x) << ", " << #y << " = " << (y) << ", " << #z << " = " << (z) << ", " << #w << " = " << w << endl

#define out(x) cout << (x) << endl
#define out2(x,y) cout << (x) << " " << (y) << endl
#define out3(x,y,z) cout << (x) << " " << (y) << " " << (z) << endl
#define out4(x,y,z,w) cout << (x) << " " << (y) << " " << (z) << " " << (w) << endl

const int maxN = 10086;

int n;
char str[maxN];
int fs() {
    int ns = 0, nu = 0;
    for(int i = 0; i < n; i ++) {
        if( i % 2 == 0 ) {
            if( str[i] == 'S' )
                ;
            else
                ns ++;
        } else {
            if( str[i] == 'U' )
                ;
            else
                nu ++;
        }
    }
    //dbg2(ns, nu);
    if( ns == nu ) return ns;
    return -1;
}

int fu() {
    int ns = 0, nu = 0;
    for(int i = 0; i < n; i ++) {
        if( i % 2 == 1 ) {
            if( str[i] == 'S' )
                ;
            else
                ns ++;
        } else {
            if( str[i] == 'U' )
                ;
            else
                nu ++;
        }
    }
    //dbg2(ns, nu);
    if( ns == nu ) return ns;
    return -1;
}

int run() {
    n = strlen(str);
    int f1 = fs(), f2 = fu();
    int ans = -1;
    if( ans == -1 || ans > f1 && f1 != -1 ) ans = f1;
    if( ans == -1 || ans > f2 && f2 != -1 ) ans = f2;
    return ans;
}

int main()
{
    int nt;
    scanf("%d", &nt);
    for(; nt > 0; nt --) {
        scanf("%s", str);
        printf("%d\n", run());
    }
    return 0;
}
