#include <iostream>
#include <algorithm>
#include <utility>
#include <vector>

using point = std::pair<int, int>;

int main() {
    auto T = 0;
    std::cin >> T;
    
    while (T--) {
        auto N = 0, L = 0;
        std::cin >> N >> L;
        std::vector<point> arr(N);
        
        auto i = -1;
        while (++i < N) std::cin >> arr[i].first >> arr[i].second;
        
        std::sort(std::begin(arr), std::end(arr));

        bool found = false;
        for(auto i : arr) {
            auto max_limit = i.first + L;
            auto cur_limit = i.second;
            for (auto j : arr) {
                if (cur_limit >= j.first && j.first > i.first && j.second <= max_limit)
                    cur_limit = std::max(cur_limit, j.second);
            }

            if (cur_limit == max_limit){
                found = true;
                break;
            }
        }
        std::cout << (found ? "Yes\n" : "No\n");
    }
    return 0;
}
