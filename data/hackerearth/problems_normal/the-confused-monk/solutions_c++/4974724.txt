#include<iostream>
#define mod 1000000007
using namespace std;

long long modularexpo(long long f,long long g)
{
	long long ans=1;
	while(g>0)
	{
		if(g%2==1)
		{
			ans=(ans*f)%mod;
		}
		g=g/2;
		f=(f*f)%mod;
	}
	return ans;
}
long long int calcgcd(long long int n1, long long int n2)
{
    if (n2!=0)
       return calcgcd(n2, n1%n2);
    else 
       return n1;
}
long long int gcd(long long int a[],long long n)
{
	long long gcd1,i;
	if(n==1)
	{
		long long x=(a[0]%mod);
		return x;
	}
	else
	{
	gcd1=calcgcd(a[0],a[1]);
	for(i=2;i<n;i++)
	gcd1=(calcgcd(gcd1,a[i]))%mod;
	//cout<<"Ka"<<endl;
	return gcd1;}
}
long long int mul(long long int a[],long long n)
{
	long long int i,f;
	f=1;
	for(i=0;i<n;i++)
	{
		f=(f*a[i]%mod)%mod;
	}
//	cout<<f<<endl;
	return f;
}
int main()
{
	int n,i;
	cin>>n;
	long long a[n];
	for(i=0;i<n;i++)
	cin>>a[i];
//	cout<<a[0]<<endl;
	long long f=mul(a,n);
	long long g=gcd(a,n);
	//cout<<f<<" "<<g<<endl;
	long long ans;
	ans=modularexpo(f,g);
	cout<<ans<<endl;
}