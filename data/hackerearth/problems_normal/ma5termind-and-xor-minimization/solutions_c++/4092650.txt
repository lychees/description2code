#include <bits/stdc++.h>
#define open freopen("/home/kislaya/inp.txt","r",stdin);
#define close freopen("/home/kislaya/out.txt","w",stdout);
#define pb push_back 
#define ss second
#define mod 1000000007
#define ff first
#define powerLev9000 200000000000000000
#define optimize_shit cin.sync_with_stdio(0);cin.tie(0);
using namespace std;
typedef long long int ll;
typedef pair<int,int> ii;
ll dp[100005];
int a[101];
bool S[100005];
struct node{
    struct node *lchild,*rchild;
    node():lchild(NULL),rchild(NULL){}
};
void update(struct node *root,int val){
    for(int j=19;j>=0;j--){
        int x=val&(1<<j);
        if(x){
            if(root->rchild==NULL)
            root->rchild=new node();
            root=root->rchild;
        }
        else{
            if(root->lchild==NULL)
            root->lchild=new node();
            root=root->lchild;
        }
    }
}
int query(struct node *root,int val){
    int ans=0;
    for(int j=19;j>=0;j--){
        int x=val&(1<<j);
        if(x==0){
            if(root->lchild){
                root=root->lchild;
            }
            else{
                ans|=(1<<j);
                root=root->rchild;
            }
        }
        else{
            if(root->rchild){
            ans|=(1<<j);
            root=root->rchild;}
            else
            root=root->lchild;
        }
    }
    return ans;
}
int main()
{
    optimize_shit
    int n,q;
    cin>>n;
        dp[0]=1;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        for(int j=100000;j>=a[i];j--){
            if(dp[j-a[i]]){
            dp[j]+=dp[j-a[i]];
            if(dp[j]>=mod){
                dp[j]%=mod;
            }}}}    
    node *root=new node();
    for(int i=1;i<=100000;i++)
        if(dp[i])
            update(root,i);
    cin>>q;
    int A;
    while(q--)
    {
        cin>>A;
        int tmp=query(root,A);
        cout<<tmp<<" "<<dp[tmp]<<"\n";
    }
    return 0;
}