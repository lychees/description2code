#include<iostream>

using namespace std;

int num[19];
long long dp[19][171][1539];

int gcd(int a, int b){
    if(b == 0) return a;
    return gcd(b, a%b);
}

void init(){
    for(int i=0;i<19;i++){
        for(int j=0;j<171;j++){
            for(int k=0;k<1539;k++){
                dp[i][j][k] = -1;
            }
        }
    }
}

long long cal(int l, int check, int sum1, int sum2){
    int temp;
    long long ans = 0;
    if(l < 0)
        return gcd(sum1, sum2) == 1;
    if(!check && dp[l][sum1][sum2] != -1)
        return dp[l][sum1][sum2];
    if(check)
        temp = num[l];
    else
        temp = 9;
    for(int i=0;i<=temp;i++){
        if(i == temp && check)
            ans += cal(l-1, 1, sum1+i, sum2+(i*i));
        else
            ans += cal(l-1, 0, sum1+i, sum2+(i*i));
    }
    if(!check)
        dp[l][sum1][sum2] = ans;
    return ans;
}

long long solve(long long n){
    int l=0;
    while(n){
        num[l++] = n%10;
        n /= 10;
    }
    //cout<<l<<" this is l"<<endl;
    return cal(l-1, 1, 0, 0);
}


int main(){
    int t;
    cin >> t;
    init();
    while(t--){
        long long l, r;
        cin >> l >> r;
        cout << solve(r) - solve(l-1) << endl;
    }
    return 0;
}
