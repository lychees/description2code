#include <bits/stdc++.h>
using namespace std;
vector<int>v[100005];
int g[100005];
//color 0 is pink
//color 1 is blue
int bfs(int u,int color)
{
	
	int visit[100005];
	memset(visit,-1,sizeof visit);
	//visit[i]=1;//color blue;
	//visit[]=0;//clor pink
	queue<int>q;
	q.push(u);
	visit[u]=color;
	int flag=0;
	int ans=0;
	while(!q.empty())
	{
		int node=q.front();
		q.pop();
		if(visit[node]!=g[node])
		ans++;
		for(int i=0;i<v[node].size();i++)
		{
			int x=v[node][i];
			if(visit[x]==-1)
			{
				q.push(x);
				if(visit[node]==0)
				visit[x]=1;
				else
				visit[x]=0;
			}
			else
			{
				if(visit[x]==visit[node])
				{
					flag=1;
					break;
				}
			}
		}
		if(flag==1)
		break;
		
	}
	if(flag==1)
	return -1;
	return ans;
}
int main()
{
	int n,m,u,v1;
	string ch;
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
	{
		cin>>ch;
		if(ch[0]=='B')
		g[i]=1;
		else
		g[i]=0;
	}
	
   for(int i=0;i<=100000;i++)
   v[i].clear();
   for(int i=1;i<=m;i++)
   {
   	scanf("%d%d",&u,&v1);
   	v[u].push_back(v1);
   	v[v1].push_back(u);
   	
   }
   
   int ans=bfs(1,0);
   int ans1=bfs(1,1);
   if(ans==-1&&ans1==-1)
   cout<<"Not possible";
   else
   cout<<min(ans,ans1);
   return 0;
   
	
}