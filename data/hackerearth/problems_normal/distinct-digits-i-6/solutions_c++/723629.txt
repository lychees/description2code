#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll bit[11][100005];
ll arr[100005];
int cc[100005];
int n;
ll read(int x,int idx)
{
	ll sum=0;
	while(idx>0)
		sum+=bit[x][idx],idx-=idx&-idx;
	return sum;
}
void update(int x,int idx,int val)
{
	while(idx<=n)
	{
		bit[x][idx]+=val,idx+=idx&-idx;
	}
}
int countd(ll x)
{
	int ret=0;
	int cc[10];
	memset(cc,0,sizeof(cc));
	while(x)
	{
		cc[x%10]++;
		x/=10;
	}
	for(int i=0;i<10;i++)
	{
		if(cc[i])
			ret++;
	}
	return ret;
}
int main()
{
	cin>>n;
	ll x;
	for(int i=1;i<=n;i++)
	{
		cin>>arr[i];
		cc[i]=countd(arr[i]);
		update(cc[i],i,1);
	}
	int q;
	cin>>q;
	while(q--)
	{
		ll ty,u,v,c;
		cin>>ty>>u>>v;
		if(ty==0)
		{
			update(cc[u],u,-1);
			arr[u]+=v;
			cc[u]=countd(arr[u]);
			update(cc[u],u,1);
		}
		else if(ty==1)
		{
			update(cc[u],u,-1);
			arr[u]=v;
			cc[u]=countd(arr[u]);
			update(cc[u],u,1);
		}
		else
		{
			cin>>c;
			ll ans=read(c,v)-read(c,u-1);
			cout<<ans<<endl;
		}
	}
	return 0;
}
