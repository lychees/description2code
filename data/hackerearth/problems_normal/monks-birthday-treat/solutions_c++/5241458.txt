#include<iostream>

using namespace std;

#define MAX 1001
#define INF 1000000

struct node
{
    int vertex;
    node *next;
};

node *g[MAX];
int n,m,counts;
bool visited[MAX];

void Create_Graph(int u,int v)
{
    node *p,*q;

    q=new node;

    q->vertex=v;
    q->next=NULL;

    if(g[u]==NULL)
        g[u]=q;
    else
    {
        p=g[u];

        while(p->next!=NULL)
            p=p->next;
        p->next=q;
    }

}

int min(int a,int b)
{
    return(a<b?a:b);
}

void dfs(int i)
{
    visited[i]=1;

    node *p;
    int v;

    p=g[i];

    while(p!=NULL)
    {
        v=p->vertex;
        if(visited[v]==0)
        {
            counts++;
            dfs(v);
        }
        p=p->next;
    }
}

int main()
{
    int i,j,u,v,minim=INF;

    cin>>n>>m;

    for(i=1;i<=n;i++)
        g[i]=NULL;

    for(i=1;i<=m;i++)
    {
        cin>>u>>v;

        Create_Graph(u,v);
    }

    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
            visited[j]=0;

        counts=1;
        dfs(i);
        minim=min(minim,counts);
    }

    cout<<minim<<endl;

    return 0;
}
