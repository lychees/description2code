#include <iostream>
#include <queue>
using namespace std;

long long int mod = 1000000007;
long long int modRecursion(long long int a, long long int b,long long int m){
	
	if(b==0){
		return 1;
	}
	else if( b == 1){
		return a%m;
	}
	
	else if( b%2 == 0 ){
		
		return modRecursion( (a*a)%m, b/2, m );
	}
	else{
		
		return ( (a%m)* modRecursion( (a*a)%m, b/2, m ) )%m;
	}
}

long long int mmi (long long int num, long long int m ){
	
	return modRecursion(num%m, m-2, m);
}
int main()
{
    
    int t;
    int n;
    
    cin>>t;
    
    for(int k=1; k<=t; k++){
    	cin>>n;
    	int a[n];
    	priority_queue <long int> q;
    	for(int i=0; i<n; i++){
    		cin>>a[i];
    	}
    	
    	for(int i=0; i< (1<<n); i++){
    		
    		int count = 0;
    		long long int nume = 1;
    		long long int deno = 0;
    		for(int j=0; j<n; j++){
    			
    			if(i & (1<<j)){
    				count++;
    				nume = nume*a[j];
    				deno += a[j];
    				nume %= mod;
    				deno %= mod;
    			}
    		}
    		
    		if(count >= 2){
    			q.push( ( nume*mmi(deno, mod) )%mod );
    		}
    	}
    	cout<<"Case #"<<k<<": "<<q.top()<<endl;
    }
    return 0;
}
