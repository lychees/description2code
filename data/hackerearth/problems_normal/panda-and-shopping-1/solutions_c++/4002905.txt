#include <bits/stdc++.h>
using namespace std;

#define ll long long

map<ll, ll> mp;
ll n;
const ll maxn = 1e6;
ll st[maxn];
ll h[maxn];
ll val[maxn];
ll inf = 1e13;

ll get_max(ll x, ll y, 
            ll i = 0, ll l = 0, ll r = n) {
  if (x > r || y < l) return -inf;
  if (x <= l && y >= r) return st[i];
  ll mid = (l + r) >> 1;
  return max(get_max(x, y, (i << 1) + 1, l, mid),
          get_max(x, y, (i << 1) + 2, mid + 1, r));
}

void insert_h(ll x, ll h, 
              ll i = 0, ll l = 0, ll r = n) {
  if (x < l || x > r) return ;
  st[i] = max(st[i], h);
  if (r - l < 1) return ;
  ll mid = (l + r) >> 1;
  insert_h(x, h, (i << 1) + 1, l, mid);
  insert_h(x, h, (i << 1) + 2, mid + 1, r);
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  
  cin >> n;
  ll x;
  vector<ll> v;
  for (ll i = 0; i < n; ++i) {
    cin >> h[i]; cin >> val[i];
    v.push_back(val[i]);
  }
  ll c = 1;
  sort(v.begin(), v.end());
  for (ll i = 0; i < n; ++i) {
    if (!mp[v[i]]) mp[v[i]] = c++;
  }
  for (ll i = 0; i < n; ++i)
    val[i] = mp[val[i]];

  ll ans = -inf;
  for (ll i = 0; i < n; ++i) {
    ll maxh = get_max(0, val[i]);
    maxh += h[i];
    ans = max(ans, maxh);
    insert_h(val[i], maxh);
  }

  cout << ans << "\n";


  return 0;
}