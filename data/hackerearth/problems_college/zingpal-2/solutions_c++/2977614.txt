#include <iostream>
#include <vector>
#include <cstdio>
using namespace std;

const int Maxn = 105;

int n, m;
vector <int> neigh[Maxn];
int tk[Maxn];

int Fill(int v, int p = 0)
{
	if (tk[v] == 1) return 1;
	if (tk[v] == 2) return 0;
	tk[v] = 1;
	int res = 0;
	for (int i = 0; i < neigh[v].size(); i++)
		if (neigh[v][i] != p)
			res += Fill(neigh[v][i], v);
	tk[v] = 2;
	return res;
}

int main()
{
    cin >> n >> m;
   	while (m--) {
   		int a, b; scanf("%d %d", &a, &b);
   		neigh[a].push_back(b);
   		neigh[b].push_back(a);
   	}
   	int cnt = 0, loops = 0;
   	for (int i = 1; i <= n; i++) if (!tk[i]) {
   		cnt++;
   		loops += Fill(i);
   	}
   	if (cnt > 1 || loops != 1) printf("NO\n");
   	else printf("FHTAGN!\n");
    return 0;
}
