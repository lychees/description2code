#include <algorithm>
#include <assert.h>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
using namespace std;
#define sqr(_) ((_) * (_))

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair
#define pb push_back

typedef long long LL;

const int MAXN = 1000000 + 10, S = 1 << 21;

int n, m, f[S + 1], a[MAXN], b[MAXN], l, t;

int lowbit(int x) { return x & -x; }
void Add(int x, int d) {
  for (; x <= S; f[x] += d, x += lowbit(x))
    ;
}
int Getp(int k) {
  int Tohka = 0;
  for (int i = 21; i >= 0; --i)
    if (f[Tohka + (1 << i)] < k)
      Tohka += 1 << i, k -= f[Tohka];
  return Tohka + 1;
}
int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif

  scanf("%d%d", &n, &m);
  l = t = m + 1;
  for (int i = t + 1; i <= t + 1 + n; ++i)
    Add(i, 1);
  for (int i = 1, x, y; i <= m; ++i) {
    scanf("%d%d", &x, &y);
    if (!b[x]) {
      b[x] = Getp(y);
      if (b[x] <= t)
        puts("-1"), exit(0);
      a[b[x] - t] = x;
    }
    if (b[x] != Getp(y))
      puts("-1"), exit(0);
    Add(b[x], -1);
    b[x] = l--;
    Add(b[x], 1);
  }
  int tot = 1;
  for (int i = 1; i <= n; ++i)
    if (!b[i]) {
      for (; a[tot]; ++tot)
        ;
      a[tot] = i;
    }
  for (int i = 1; i <= n; ++i)
    printf("%d ", a[i]);
  puts("");

  fclose(stdin);
  fclose(stdout);
  return 0;
}
