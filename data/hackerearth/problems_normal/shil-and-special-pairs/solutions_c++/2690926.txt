//ITNOG
#include<bits/stdc++.h>
 
using namespace std;
 
#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second

typedef long long ll;
typedef double ld;

const int maxN = 100000 + 100;
const int mod = 1000*1000*1000 + 7;
const int base = 37;
const int SQ = 317;
const int maxL = 302;

int a[maxN], b[maxN];

bool cmp(pair<pair<int,int>, int> p, pair<pair<int,int>, int> q)
{
    if(p.X.X / SQ == q.X.X / SQ) return (p.X.Y < q.X.Y);
    return p.X.X < q.X.X;
}

pair<pair<int,int>, int> que[maxN];
int n, m, d;
ll ans;

void add(int x)
{
    b[x] ++;
    rep(i,-d,d+1)
    {
	  int tx = x + i;
	  if(tx >= 0) ans += b[tx];
    }
//    b[x] ++;
}

void rem(int x)
{
//    b[x] --;
    rep(i,-d,d+1)
    {
	  int tx = x + i;
	  if(tx >= 0) ans -= b[tx];
    }
    b[x] --;
}

int dp[maxN];
main()
{
    ios::sync_with_stdio(0); cin.tie(0);  
    cin >> n >> m >> d;
    rep(i,0,n) cin >> a[i];

    rep(i,0,m) cin >> que[i].X.X >> que[i].X.Y, que[i].Y = i, que[i].X.X --, que[i].X.Y --;
    sort(que,que+m, cmp);

    int lp = 0, rp = 0; add(a[0]);
    
    rep(i,0,m)
    {
	  int l = que[i].X.X, r = que[i].X.Y, ind = que[i].Y;
//	  cout << l << ' ' << r << endl;
	  while(l < lp) lp --, add(a[lp]);
	  while(rp < r) rp ++, add(a[rp]);

	  while(lp < l) rem(a[lp]), lp ++;
	  while(r < rp) rem(a[rp]), rp --;

	  dp[ind] = ans;
    }

    rep(i,0,m) cout << dp[i] << endl;
    return 0;
}
