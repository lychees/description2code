#include<iostream>
#include<string>
#include<algorithm>
#include<stdio.h>
#include<queue>
#include<vector>
#include<stack>
#include<cstdlib>
#include<sstream>
#include<cassert>
#include<fstream>
#include<ctime>
#include<list>
#include<cmath>
#include<set>
#include<map>
#include<cstring>

using namespace std;

#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-9
#define maX(a,b)				((a)>(b)?(a):(b))
#define miN(a,b)				((a)<(b)?(a):(b))
#define abS(x)					((x)<0?-(x):(x))
#define FOR(i,a,b)				for(int i=a;i<=b;i++)
#define rep(i,n)				FOR(i,0,n-1)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define mp						make_pair
#define FF						first
#define SS						second
#define XX						first
#define YY						second.first
#define ZZ						second.second
#define pb						push_back
#define fill(a,v) 				memset(a,v,sizeof(a))
#define all(x)					x.begin(),x.end()
#define sz(v)					((int)(v.size()))
#define INDEX(arr,ind)			(lower_bound(all(arr),ind)-arr.begin())

typedef long long int lli;
typedef pair<int,int> pii;
typedef pair<lli,lli> pll;
typedef vector<int> vi;
typedef vector<lli> vlli;
typedef vector<pii> vii;

const int MAXN = 2000015;
const int MOD  = 1000000007;

/*Main code begins now */
lli F[MAXN],G[MAXN];
lli pre1()
{
	lli n = 1000001;
	F[0] = 1;
	FOR(i,1,n)
	{
		F[i] = (F[i-1]*i)%MOD;
	}
}
inline lli exp(lli x,lli n)
{
	lli ans = 1;
	while(n)
	{
		if(n & 1) 
			ans = (ans * x)%MOD;
		n >>= 1;
		x = (x * x)%MOD;
	}
	return ans;
}
void pre2()
{
	lli n = 1000001;
	FOR(i,0,n)
	{
		G[i] = exp(F[i],MOD-2);
	}
}
lli freq[MAXN];
int main()
{
	int t;
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	#endif	
	s(t);
	string line;
	pre1();
	pre2();
	int q;
	while(t--)
	{
		cin>>line;
		int n = line.length();
		lli c=0,v=0;
		fill(freq,0);
		rep(i,n)
		{
			if(line[i]=='a' || line[i]=='e' || line[i]=='i' || line[i]=='o'|| line[i]=='u')
				freq[line[i]]++,v++;
			else
				freq[line[i]]++,c++;
		}
		if(c+1<v)
			printf("-1\n");
		else
		{
			lli ans = 1;
			ans=(ans*F[c])%MOD;
			rep(i,26)
			{
				q = (int)('a') + i;
				if(i!=0 && i!=4 && i!=8 && i!=14 && i!=20)
				ans=(ans*G[freq[q]])%MOD;
			}
			ans=(ans*(F[c+1]))%MOD;
			ans=(ans*G[c+1-v])%MOD;
			ans=(ans*G[v])%MOD;
			ans = (ans*F[v])%MOD;
			rep(i,26)
			{
				q = (int)('a') + i;
				if(i==0 || i==4 || i==8 || i==14 || i==20)
				ans=(ans*G[freq[q]])%MOD;
			}

			printf("%lld\n",ans);
		}
	}
	return 0;
}
