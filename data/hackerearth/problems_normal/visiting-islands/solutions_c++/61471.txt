/* Author : migdal */
#include <iostream>
#include <cstdio>
#include <vector>
#include <cassert>
#include <sstream>
#include <map>
#include <set>
#include <climits>
#include <stack>
#include <queue>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdlib>
using namespace std;
#define FOR(i,a,b) for(int i= (int )a ; i < (int )b ; ++i)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define INF 1000000000
#define ALL(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
typedef pair<int,int> PI;
typedef vector<int> VI;
typedef long long LL;
int arr[1000000];
int store[1000000];
int cycle[1000000];
int visit[1000000];
int st[1000001];
void dfs(int node,int iter)
{
   if(visit[node])
   {
      if(iter==visit[node])cycle[node]=1;
      return;
   }
   visit[node]=iter;
   if(arr[node]==node)return;
   dfs(arr[node],iter);
}
int com(int node)
{
   if(store[node]!=-1)return store[node];
   if(arr[node]==node){store[node]=1;return 1;}
   int ans=1+com(arr[node]);
   store[node]=ans;
   return ans;
}
int main()
{
    int test,n,i,j,ans,coun,tmp,is;
    cin>>test;
    while(test--)
    {
       
       coun=0;
       scanf("%d",&n);
       for(i=0;i<n;i++)scanf("%d",&arr[i]);
       for(i=0;i<n;i++)visit[i]=0;
       for(i=0;i<n;i++)cycle[i]=0;
       for(i=0;i<n;i++)store[i]=-1;
       for(i=0;i<n;i++)if(!visit[i]){coun++;dfs(i,coun);}
       for(i=0;i<n;i++)
       {
           if(cycle[i])
	   {
	      coun=1;
	      tmp=i;
	      while(1)
	      {
                 st[coun]=tmp;
		 tmp=arr[tmp];
		 if(tmp==i)break;
		 coun++;
	      }
	      for(j=1;j<=coun;j++)store[st[j]]=coun;
	   }
       }
       ans=com(0);
       is=0;
       for(i=1;i<n;i++){tmp=com(i);if(ans<tmp){ans=tmp;is=i;}}
       printf("%d\n",is);
    }
    return 0;
}
