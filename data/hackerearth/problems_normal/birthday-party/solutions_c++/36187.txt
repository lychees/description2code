#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;

ull bdayGo(ull *valids, ull m, ull part, ull mem, int index)
{
	if(part==0)
		return 1;
	if(mem == 0)
		return 0;
	for(int i=index; i<m && (valids[i] <= part); i++)
		if(bdayGo(valids, m, part-valids[i], mem, i+1))
			return 1;

	return 0;
		
}

typedef map<ull, ull> mii;

int main()
{
	int T;
	cin >> T;
	while(T--)
	{
		ull valids[1000];
		memset(valids, 0, 1000*sizeof(ull));
		ull P, M, count=0, mems=0;
		cin >> P >> M;
		for(int m=0; m<M; m++)
		{
			cin >> valids[m];
		}
		sort(valids, valids+M);
		ull mem, prem = 0;
		mii people;
		while(P--)
		{
			cin >> mem;
			people[mem]++;
		}
		
		for(mii::iterator  i=people.begin(); i != people.end(); i++)
			count += bdayGo(valids, M, i->second, i->second, 0);
		
		cout << count << endl;
	}
	return 0;
}