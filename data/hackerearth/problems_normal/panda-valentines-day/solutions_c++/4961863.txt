#include<bits/stdc++.h>
using namespace std;
#define N 1000000
long long int a[N],ans[N],aa[N];
int curr=-1;
vector<int> primes;
void calPrimes(){
	int n=sqrt(N)+1;
	int p[n];
	fill(p,p+n,1);
	for(int i=2;i<n;++i){
		if(p[i]==1){
		//cout<<i<<endl;
			primes.push_back(i);
			int j=i+i;
			while(j<n){
				p[j]=0;
				j+=i;
			}
		}
	}
}
int factorise(int x){
	int ss=sqrt(x);
	int s=0;
	//cout<<x<<" "<<primes[0]<<" "<<ss<<endl;
	for(int i=0;i<primes.size() && primes[i]<=ss+1;++i){
		//cout<<i<<" : "<<x<<" "<<primes[i]<<" "<<s<<endl;
		while(x%primes[i] ==0){
			s++;
			x/=primes[i];
			//cout<<s<<" - "<<endl;
		}	
	}
	if(x>1){s++;x/=x;}
	return s;
}
void cal(int n){
	
	for(curr++;curr<=n;curr++){
		a[curr]=a[curr-1]+factorise(curr);
		
	}
	curr--;
}


int solve(int n){
	if(curr<n) cal(n); 
	

	return a[n];
}
void initialise(){
	calPrimes();
	fill(a,a+N,-1);
	a[1]=0;
	curr=1;
}

void printAns(){
	for(int i=0;i<=curr;++i){
		cout<<i<<"- > "<<a[i]<<endl;
	}
}

int main(){
	calPrimes();
	int t,n;
	cin>>t;
	while(t--){
		cin>>n;
		cout<<solve(n)<<endl;
	}

//printAns();
}