#include<bits/stdc++.h>

using namespace std;

#define ll long long int

#define s(x) scanf("%lld",&x)
#define s2(x,y) s(x)+s(y)
#define s3(x,y,z) s(x)+s(y)+s(z)

#define p(x) printf("%lld\n",x)
#define p2(x,y) p(x)+p(y)
#define p3(x,y,z) p(x)+p(y)+p(z)
#define fori(i,max) for(ll i=0;i<(ll)(max) ;(i)++)
#define for2i(i,min,max) for(ll i=min;i<(ll)(max) ;(i)++)

#define ff first
#define ss second
#define mp(x,y) make_pair(x,y)
#define pll pair<ll,ll>
#define pb push_back
#define INF 1000000007

ll topSort(ll r);
vector<pll> adj[1000008];
ll indegree[1000008];
int main()
{
	ll r,p,a,b,c;
	cin>>r>>p;
	while(p--)
	{
		s(a);s(b);s(c);
		adj[a].pb(mp(b,c));
	}
	p(topSort(r));
}

ll topSort(ll r)
{
	queue<ll> q;
	ll dis[r+4];
	ll ans=-INF;
	
	
	for(ll i=1;i<=r;i++)
		for(ll j=0;j<adj[i].size();j++)
			indegree[adj[i][j].ff]++;
	
	
	for(ll i=1;i<=r;i++)
	{
		dis[i]=-INF;
		if(indegree[i]==0)
		{
			q.push(i); dis[i]=0;
		}
	}
	
	
	while(!q.empty())
	{
		ll par=q.front();
		q.pop();
		if(adj[par].size()==0)
			ans=max(ans,dis[par]);
		else
		{
			for(ll i=0;i<adj[par].size();i++)
			{
				ll node=adj[par][i].ff;
				ll weight=adj[par][i].ss;
				indegree[node]--;
				if(indegree[node]==0)q.push(node);
				
				dis[node]=max(dis[node],dis[par]+2+weight);
			}
		}
	}
	return ans;
}
