/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
ill ABS(ill a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif
}

/* Input opener ends */


string mp[50];
map<string,int> m;

int main() {
    //input();
    int t; cin >> t;
    while (t-- ) {
        m.clear();
        vector<pii> v;
        int n; cin >> n;
        F(i,0,n) {
            int f;
            cin >> mp[i] >> f;
            v.pb( pii(f,i) ); 
        }
        sort(v.begin(),v.end());
        string tmp = "1";
        F(i,0,n) {
            if ( i == 0 ) m["0"] = v[i].se;
            else if ( i == n-1 ) m[tmp] = v[i].se;
            else {
                m[tmp+"0"] = v[i].se;
                tmp = tmp+"1";
            }
        }
        map<string,int>::iterator it;
        string s; cin >>s;
        string curr = ""; curr.pb(s[0]);
        F(i,1,s.size()) {
            if ( m.find(curr) != m.end() ) {
                cout << mp[ m[curr] ];
                curr = ""; curr.pb(s[i]);
            } else {
                curr.pb(s[i]);
            }
        }
        cout << mp[ m[curr] ] << endl;
    }
    return 0;
}