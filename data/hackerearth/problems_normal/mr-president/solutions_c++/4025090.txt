#include <bits/stdc++.h>
using namespace std;
 
pair<long long,pair<long long,long long> > g[1000004];
long long int id[1000004];
 
void init(){
	for(long long i=0;i<1000004;i++)
		id[i] = i;
}
 
long long root(long long x){
	while(id[x] != x){
		id[x] = id[id[x]];
		x = id[x];
	}
	return x;
}
 
void unionS(long long x,long long y){
	long long p = root(x);
	long long q = root(y);
	id[p] = id[q];
}
 
long long kruskal(long long n,long long edges,long long k){
	long long ans = n-1;
	if(k<n-1)
		ans = 1e9;
	for(long long i=0;i<edges;i++){
		long long w = g[i].first;
		long long v = g[i].second.first;
		long long u = g[i].second.second;
		if(root(v) != root(u)){
			unionS(v,u);
			k -= w;
			n--;
			if(k>=n-1)
				ans = n-1;
		}
	}
	if(n>1 || ans > 1e7)
		ans = -1;
	return ans;
}
 
int main()
{
	init();
    long long n,m,k;
    cin>>n>>m>>k;
    for(int i=0;i<m;i++){
    	cin>>g[i].second.first>>g[i].second.second>>g[i].first;
    }
    sort(g,g+m);
    long long ans = kruskal(n,m,k);
    cout<<ans<<endl;
    return 0;
}