def getJustSmallest(A, num):
    if A[0] < num or A[len(A)-1] > num:
        return -1
    if A[0] == num:
        return 0
    low = 0
    high = len(A)

    while (low < high):
        mid = low + (high-low)/2
        if (A[mid] <= num and A[mid-1] > num):
            return mid
        if A[mid] > num:
            low = mid
        else:
            high = mid


T = int(raw_input())

while T > 0:
    N = int(raw_input())
    A = [int(x) for x in raw_input().split()[:N]]
    B = [int(x) for x in raw_input().split()[:N]]
    monkiness = 0
    i = 0
    j = N-1
    for i in xrange(1, N):
        j = getJustSmallest(A, B[i])
        if i > j and j != -1:
            monkiness = max(monkiness, i-j)

    print monkiness
    T -= 1
