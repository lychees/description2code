#include <bits/stdc++.h>
#define push_back push_back
#define make_pair make_pair
#define MOD 1000000007
typedef long long int ll;
using namespace std;
#define MOD2 4294967296

long long int powr (long long int a, long long int b)
{
if (b == 0)
return 1;
long long int x = powr(a, b/2);
if (b % 2 == 0)
return (x*x)%MOD;
else
return (((x*x)%MOD)*a)%MOD;
}


long long int inputll()
{
    long long int n=0;
    char ch = getchar();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getchar();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getchar();
    return(n * sign);
}

int inputi()
{
    int n=0;
    char ch = getchar();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getchar();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getchar();
    return(n * sign);
}

int main()
{
    ll k,t,n,task,i,j,x;
    t = inputll();
    while(t--) {
        vector <ll> res;
        vector < vector <ll> > O,R,N;
        n = inputi();
        for(i = 0; i < n ; i++) {
            x = inputll();
            res.push_back(x);
        }
        task = inputi();
        ll flag[task];
        memset(flag,0,sizeof(flag));
        for(i = 0; i < task ; i++) {
            O.push_back(vector <ll> ());
            for(j = 0; j < n ; j++) {
                x = inputll();
                O[i].push_back(x);
            }
        }
        for(i = 0; i < task ; i++) {
            R.push_back(vector <ll> ());
            N.push_back(vector <ll> ());
            for(j = 0; j < n ; j++) {
                x = inputll();
                R[i].push_back(x);
                N[i].push_back(R[i][j] - O[i][j]);
            }
        }
        for(i = 0; i < task ; i++) {
            for(j = 0; j < task ; j++) {
                ll cnt = 0;
                for(k = 0 ; k < n; k++) {
                    if(res[k] >= N[j][k]) cnt++;
                }
                if(cnt == n) {
                    flag[j] = 1;
                    for(k = 0 ; k < n; k++) {
                        res[k] += O[j][k];
                    }
                } else {
                    goto l2;
                }
            }
            l2: ;
        }
        ll cnt = 0;
        for(i = 0; i < task; i++) {
            if(flag[i]) cnt++;
        }
        if(cnt == task) cout<<"YES\n";
        else cout<<"NO\n";
    }
    return 0;
}
