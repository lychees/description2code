#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define ll  long long int
#define II pair<int,int>
#define faster std::ios::sync_with_stdio(false);cin.tie(NULL)
const int N=1e6+5;
vector< pair<int,II> >edges;
int size[N],parent[N];
int n,m,a,b,c;ll k;
void init(){
	for(int i=1;i<=n;i++){
		parent[i]=i;
		size[i]=1;
	}
}
int root(int i){
	if(parent[i]!=i){
		parent[i]=root(parent[i]);
	}
	return parent[i];
}
bool Union(int a,int b){
	int x=root(a);
	int y=root(b);
	if(x==y)
		return false;
	if(size[x]>size[y]){
		swap(x,y);
	}
	parent[x]=y;
	size[y]+=size[x];
	return true;
}
int main(){
	faster;
	cin>>n>>m>>k;
	init();
	for(int i=0;i<m;i++){
		cin>>a>>b>>c;
		edges.pb({c,{a,b}});
	}
	sort(edges.begin(),edges.end());
	ll sum=0;
	int forest=n;
	int ans=(forest-1<=k)?forest-1:-1;
	for(int i=0;i<m && forest > 1;i++){
		int u=edges[i].second.first;
		int v=edges[i].second.second;
		int d=edges[i].first;
		if(Union(u,v)){
			forest--;
			sum+=d;
			if(sum+forest-1 <= k){
				ans=forest-1;
			}
		}			
	}
	if(forest>1)
		ans=-1;
	cout<<ans<<"\n";	
	return 0;
}