#include <bits/stdc++.h>
#define ultrax_007 ios_base::sync_with_stdio(false);cin.tie(NULL)
#define pb push_back
#define pr pair<int,int>
#define mp make_pair
using namespace std;
vector < pair<int,pair<int,int> > > v;
int rootm[10003];
int rootf[10003];
int findrootm(int x){
    while(rootm[x]!=x){
        x=rootm[x];
    }
    return x;
}

int findrootf(int x){
    while(rootf[x]!=x){
        x=rootf[x];
    }
    return x;
}
int main(){
	int n,m;
	cin>>n>>m;
	for(int i=0;i<=n;i++){
        rootm[i]=i;
        rootf[i]=i;
    }
    for(int i=0;i<m;i++){
        int x,y,z;
        cin>>x>>y>>z;
        if(z==3)z=0;
        v.pb(mp(z,mp(x,y)));
    }
	int count=0;
	sort(v.begin(),v.end());
	for(int i=0;i<m;i++){
		int x=v[i].second.first;
        int y=v[i].second.second;
        int t=v[i].first;
        if(t==0){
        	if(findrootf(x)!=findrootf(y) || findrootm(x)!=findrootm(y)){
        		//count++;
        		rootm[findrootm(x)]=rootm[findrootm(y)];
        		rootf[findrootf(x)]=rootf[findrootf(y)];
        	}else{
        		count++;
        	}	
        }else if(t==1){
        	if(findrootf(x)!=findrootf(y)){
        		rootf[findrootf(x)]=rootf[findrootf(y)];
        	}else{
        		count++;
        	}
        }else{
        	if( findrootm(x)!=findrootm(y)){
        		rootm[findrootm(x)]=rootm[findrootm(y)];
        	}else{
        		count++;
        	}
        }
	}
	int flag=1;
	int p=findrootm(1);
	
	for(int i=2;i<=n;i++){
		if(findrootm(i)!=p){
			flag=0;
			break;
		}
	}
	p=findrootf(1);
	
	for(int i=2;i<=n;i++){
		if(findrootf(i)!=p){
			flag=0;
			break;
		}
	}
	//cout<<count<<endl;
	if(flag==0){
		cout<<"-1";
	}else{
		cout<<count<<endl;
	}
	
	return 0;
}