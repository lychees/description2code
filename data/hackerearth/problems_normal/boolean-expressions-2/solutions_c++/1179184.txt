
// Headers
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cassert>
#include<cstdlib>
#include<vector>
#include<map>
#include<fstream>
#include<list>
#include<stack>
#include<queue>
#include<algorithm>
#include<bitset>
#include<set>
using namespace std;
// Global declarations
typedef long long int ll;
typedef vector<int> vi;
typedef vector<char> vc;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;
const double eps = 1e-6;
int const mod  = 1e9+7;
int const INF = 2<<29;
// Macros
#define mp make_pair
#define si(d) scanf("%d",&d)
#define sll(d) scanf("%I64d",&d)
#define pfd(d) printf("%d",d)
#define pfld(d) printf("%I64d",d)
#define el putchar('\n')
#define sp putchar(' ')
#define Fill(a,val) memset(a,val,sizeof a)
#define pb push_back
#define ppb pop_back
#define gcd __gcd
#define all(a) a.begin(),a.end()
#define T(x) strtok(x, " \n\r\t")

ll dp[305][305][2];
int const mo = 1000000009;
int main(){
    string A,B;
    cin>>A>>B;
    int n = A.length();
    for(int i=0;i<n;++i){
        dp[i][i][0] = (A[i]=='0');
        dp[i][i][1] = (A[i]=='1');
    }
    for(int L=2;L<=n;++L){
        for(int i=0;i<n-L+1;++i){
            int j = i + L - 1;
            for(int k=i;k<j;++k){
                ll b0 = dp[i][k][0],b1=dp[i][k][1];
                ll f0 = dp[k+1][j][0],f1=dp[k+1][j][1];
                if(B[k]=='a'){
                    dp[i][j][1]=(dp[i][j][1]+b1*f1)%mo;
                    dp[i][j][0] = (dp[i][j][0]+(b1*f0)+(b0*f0)+(b0*f1))%mo;
                }
                else if(B[k]=='o'){
                    dp[i][j][1] = (dp[i][j][1]+(b1*f0)+(b1*f1)+(b0*f1))%mo;
                    dp[i][j][0] = (dp[i][j][0]+b0*f0)%mo;
                }
                else {
                    dp[i][j][1] = (dp[i][j][1]+(b1*f0)+(b0*f1))%mo;
                    dp[i][j][0] = (dp[i][j][0]+(b1*f1)+(b0*f0))%mo;
                }
            }
        }
    }
    int q;
    cin>>q;
    while(q--){
        int l,r;
        char s[10];
        cin>>l>>r>>s;
        if(s[0]=='t') {
            cout<<dp[l-1][r-1][1]%mo;el;
        }
        else {
            cout<<dp[l-1][r-1][0]%mo;el;
        }
    }
    return 0;
}
