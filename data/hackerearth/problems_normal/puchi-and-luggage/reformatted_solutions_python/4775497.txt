from pprint import pprint as pp


def GI():
    return int(raw_input())


def GIS():
    return map(int, raw_input().split())


aux = []
arr = None
wgts_invs = {}


def main():
    global arr, aux
    for t in xrange(GI()):
        arr = []

        for i in xrange(GI()):
            arr.append(GI())

        orig_arr = list(arr)
        aux = [0] * len(arr)
        wgts_invs.clear()
        sort(0, len(arr))

        print ' '.join(map(str, [wgts_invs.get(x, 0) for x in orig_arr]))


def sort(s, e):
    if (e - s) < 2:
        return
    mid = s + ((e - s) / 2)
    sort(s, mid)
    sort(mid, e)
    merge(s, e)


def merge(s, e):
    # print arr, s, e, wgts_invs
    mid = s + ((e - s) / 2)
    i = s
    j = mid

    for k in xrange(s, e):
        # print k, i, j
        if i == mid or j < e and arr[j] < arr[i]:
            aux[k] = arr[j]
            j += 1
        else:
            wgts_invs[arr[i]] = wgts_invs.get(arr[i], 0) + (j - mid)
            aux[k] = arr[i]
            i += 1

        # print wgts_invs

    arr[s:e] = aux[s:e]


main()
