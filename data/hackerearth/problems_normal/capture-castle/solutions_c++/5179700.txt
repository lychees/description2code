#include<bits/stdc++.h>

#define MAX 9999999
using namespace std;

typedef pair<int, pair<int,int> > P;
int v[1000][1000],dist[1000][1000],arr[1000][1000];
int main()
{
	priority_queue<P, vector<P>, greater<P> > Q;
	pair<int, pair<int,int> > X;
	int x,y,x1,y1,time,i,j,t,n,m;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		for(i=0;i<n;i++)
			for(j=0;j<m;j++)
				cin>>arr[i][j];
		cin>>x>>y>>time;
		x--;y--;
		
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				v[i][j]=0;
				dist[i][j]=MAX;
			}
		}
		
		dist[0][0]=arr[0][0];
		X.second.first=0;
		X.second.second=0;
		X.first=dist[0][0];
		Q.push(X);
		while(!Q.empty())
		{
			X=Q.top();
			Q.pop();
			
			x1=X.second.first;
			y1=X.second.second;
			
			if(v[x1][y1]==1)
				continue;
			
			v[x1][y1]=1;
			
			if(x1==x && y1==y)
				break;
			if(x1+1<n)
			{
				dist[x1+1][y1]=min(dist[x1+1][y1],dist[x1][y1]+arr[x1+1][y1]);
				X.second.first=x1+1;
				X.second.second=y1;
				X.first=dist[x1+1][y1];
				Q.push(X);
			}
			if(y1+1<m)
			{
				dist[x1][y1+1]=min(dist[x1][y1+1],dist[x1][y1]+arr[x1][y1+1]);
				X.second.first=x1;
				X.second.second=y1+1;
				X.first=dist[x1][y1+1];
				Q.push(X);
			}
			if(x1-1>=0)
			{
				dist[x1-1][y1]=min(dist[x1-1][y1],dist[x1][y1]+arr[x1-1][y1]);
				X.second.first=x1-1;
				X.second.second=y1;
				X.first=dist[x1-1][y1];
				Q.push(X);
			}
			if(y1-1>=0)
			{
				dist[x1][y1-1]=min(dist[x1][y1-1],dist[x1][y1]+arr[x1][y1-1]);
				X.second.first=x1;
				X.second.second=y1-1;
				X.first=dist[x1][y1-1];
				Q.push(X);
			}
		}
		if(dist[x][y]>time)
			cout<<"NO\n";
		else
			cout<<"YES\n"<<time-dist[x][y]<<"\n";
		while(!Q.empty())
			Q.pop();
		
	}
	return 0;
}

