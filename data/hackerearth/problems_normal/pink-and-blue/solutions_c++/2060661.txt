#include <iostream>
#include <bits/stdc++.h>
using namespace std;

vector<long> G[100005];
int visited[100005]={0};
char gender[100005];
char color[100005];

void dfs(int node, char clr){
	visited[node]=1;
	color[node]=clr;
	
	//cout<<"Node:"<<node<<"color:"<<clr<<endl;
	for(long i=0;i<G[node].size();i++){
		if(!visited[G[node][i]]){
			if(clr=='P')
				dfs(G[node][i],'B');
			else
				dfs(G[node][i],'P');
		}
	}
}

int main()
{
    long n,m;
    cin>>n>>m;
    for(long i=0;i<n;i++)
    	cin>>gender[i];
    long a,b;	
    for(int i=0;i<m;i++){
    	cin>>a>>b;
    	G[a-1].push_back(b-1);
    	G[b-1].push_back(a-1);
    }
    
    dfs(0,'P');
    int ans=0;
    for(long i=0;i<n;i++){
    	//cout<<color[i]<<endl;
    	if(gender[i]=='B' && color[i]=='P') ans++;
    	else if(gender[i]=='G' && color[i]=='B') ans++;
    }
    
    for(long i=0;i<100005;i++){
    	color[i]='\0';
    	visited[i]=0;
    }
    
    dfs(0,'B');
    int ans2=0;
    for(long i=0;i<n;i++){
    	//cout<<color[i]<<endl;
    	if(gender[i]=='B' && color[i]=='P') ans2++;
    	else if(gender[i]=='G' && color[i]=='B') ans2++;
    }
    
    cout<<min(ans,ans2);
    
    
    return 0;
}
