#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <vector>
#include <list>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <fstream>
#include <ctime>
#include <cassert>
#include <stack>
#include <bitset>
using namespace std;

typedef long long int ll;
typedef pair<int, int > pii;

#define MOD 1000000007
#define pb push_back
#define MAX 10005
#define INF 99999999
#define gc getchar_unlocked


ll ncr[5005][5005];

void precompute()
{
	int k;
	for (int i = 0; i < 5001; i++)
	{
		ncr[i][0] = ncr[i][i] = 1;
		k = i >> 1;
		for (int j = 1; j < k + 1; j++)
			ncr[i][j] = ncr[i][i - j] = (ncr[i - 1][j] + ncr[i - 1][j - 1]) % MOD;
	}
}

ll fact[1600000];

ll power(ll a, ll b) {
    ll res = 1;
    while(b) {
        if(b & 1)
            res = (res * a) % MOD;
        a = (a * a) % MOD;
        b >>= 1;
    }
    return res;
}

void pre() {
    fact[0] = 1;
    fact[1] = 1;
    for(int i=2;i<1600000;i++) {
        fact[i] = (i * fact[i-1]) % MOD;
    }
}

ll NCR(ll n, ll r) {
	ll val = (fact[n] * power(fact[n-r], MOD-2)) % MOD;
	val = (val * power(fact[r], MOD-2)) % MOD;
    return val;
}

void solve()
{
	int n;
	cin>>n;
	vector<int> a(n);
	for(int i=0;i<n;i++)
		cin>>a[i];
	ll res = 1;
	ll sum = a[0];
	for(int i=1;i<n;i++) {
		sum += a[i];
		res = (res * NCR(sum-1, a[i]-1)) % MOD;
	}
	cout<<res<<"\n";
}

int main()
{
	std::ios::sync_with_stdio(false);
//	 freopen ("C:\\Users\\Ritesh\\Desktop\\Coding\\Codeforces\\input.txt","r",stdin);
	int t;
	pre();
	cin>>t;
//	t = 1;
	while(t--)
	{
		solve();
	}
	return 0;
}
