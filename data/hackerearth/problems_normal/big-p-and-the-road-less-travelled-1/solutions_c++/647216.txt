#include <bits/stdc++.h>
using namespace std;
vector< vector<int> >path(100005);
int a[100005];
bool v[100005]={0};
long long int solve(int curr,int dest)
{
	if(curr==dest)
		return 1;
	long long ans=0;
	if(v[curr])
	return a[curr];
	v[curr]=true;
	for(int i=0;i<path[curr].size();i++)//iterate over all possible path reachable from current index
	{
		ans+=solve(path[curr][i],dest);//iterate over ith path over curr index
	}
	a[curr]=ans;
	return ans;
}
int main()
{
	int n;
	cin>>n;
	while(1)
	{
		int x,y;
		cin>>x>>y;
		if(x==0&&y==0)
		break;
		path[x].push_back(y);//path exist from x to y..the reason we r not using 2-d array will bcom clear later
		//cout<<solve(1,n)<<endl;
	}
	cout<<solve(1,n)<<endl;
	return 0;
}
