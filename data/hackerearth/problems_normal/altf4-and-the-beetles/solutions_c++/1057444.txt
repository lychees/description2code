#include <iostream>
#include <utility>
#include <algorithm>
#include <vector>

using namespace std;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    int T;
    cin >> T;
    for(int ti = 0; ti < T; ti++){
        int n;
        long long a, b, c;
        cin >> n >> a >> b >> c;
        long long destruction = n * a;
        long long sol = destruction;
        vector<pair<int, bool>> events;
        events.reserve(n + n);
        for(int i = 0; i < n; i++){
            int pi, qi;
            cin >> pi >> qi;
            events.push_back({pi, false});
            events.push_back({qi, true});
        }
        
        sort(events.begin(), events.end());
        for(const auto& event : events){
            sol = max(sol, destruction);
            if(event.second){
                destruction -= b;
                destruction += c;
            }else{
                destruction -= a;
                destruction += b;
            }
            sol = max(sol, destruction);
        }

        cout << sol << '\n';
    }
}
