#define _CRT_SECURE_NO_WARNINGS
// #pragma comment(linker, "/STACK:100000000")

#include <iostream>
#include <cstdio>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <list>
#include <stack>
#include <iterator>
#include <algorithm>
#include <functional>
#include <cstring>
#include <string>
#include <cmath>
#include <ctime>
#include <queue>
#include <fstream>
#include <iomanip>

using namespace std;

#define mp make_pair
#define MOD 2147483647
#define memset_minus1(a) (memset(a, -1, sizeof(a)))
#define memset_0(a) (memset(a, 0, sizeof(a)))

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef ll** matrix;

inline int max3(int a, int b, int c) { return max(a, max(b, c)); }
inline int max4(int a, int b, int c, int d) { return max(max(a, b), max(c, d)); }
inline int min3(int a, int b, int c) { return min(a, min(b, c)); }
inline int min4(int a, int b, int c, int d) { return min(min(a, b), min(c, d)); }

const int INF = 1e9;
const ll LINF = 1e18;
const double EPS = 1e-12;
const double PI = acos(-1.0);
const pii piiINF = mp(INF, INF);

const int maxn = 1000000;

int t, n, a[maxn], r[maxn];

int main() {
	cin >> t;

	while (t--) {
		cin >> n;
		for (int i = 0; i < n; i++)
			scanf("%d", &a[i]);

		memset_0(r);
		r[n - 1] = a[n - 1];
		for (int i = n - 2; i >= 0; i--) {
			r[i] = max(r[i + 1], a[i]);
		}

		int ans = 1;
		for (int i = 0; i < n-1; i++) {
			if (a[i] > r[i + 1])
				ans++;
		}

		printf("%d\n", ans);
	}

	return 0;
}