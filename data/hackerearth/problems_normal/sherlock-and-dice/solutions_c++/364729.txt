#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <string>
#include <cstring>

#define sf scanf
#define sfll1(a) scanf("%lld", &a)
#define sfll2(a,b) scanf("%lld %lld", &a, &b)
#define sfll3(a,b,c) scanf("%lld %lld %lld", &a, &b, &c)
#define pf printf
#define loop(i,n) for(int i=0; i<n; i++)
#define rloop(i,n) for(int i=n-1; i>=0; i--)


#define MAXN 55
#define MAXSUM 10005

using namespace std;
typedef long long LL;

//variable
LL t,n,m,k, cnt;
double ans, dp[MAXSUM][MAXN];

double solve(int value, int ss){
    //cout << "start " << value << " " << ss   << endl;
    if(value < (m-ss) || value > (m-ss)*n || (m-ss) < 2 ) return 0;

    if( (m-ss) == 2){
        if((value <= (n+1) ) && (value >= 2)) return ((double)(value-1)) / ((double) (n*n));
        else if( (value<=(2*n)) && (value > (n+1)) ) return  ((double)((n<<1) + 1 - value)) / ((double) (n*n));
        else return 0.0;
    }

    if(dp[value][ss]  > -1 ) return dp[value][ss];

    double ans=0.0;
    for(int i=1; i<= n; i++){
            ans += (1.0/(double)n) * solve(value-i, ss+1);
    }
    return dp[value][ss] = ans;
}

int main(){
    //freopen("factorial.txt", "w", stdout);
   // freopen("in_04.txt", "r", stdin);
    sfll1(t);
    while(t--){
        sfll3(m,n,k);
        loop(i,MAXSUM) loop(j, MAXN) dp[i][j] = -2;
        cnt = 0;
        if(m==1 && k <= n && k >=1) ans = 1.0/n;
        else if(k>m*n || k < m ) ans = 0.0;
        else ans = solve(k, 0);

        if(ans != 0 )
            while(!floor(ans)){ans *= 10; cnt++;}
        pf("%.3lf %lld\n", ans, cnt);
    }
    //while(1);
    return 0;
}
