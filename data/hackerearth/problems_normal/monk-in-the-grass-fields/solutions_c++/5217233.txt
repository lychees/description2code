#include <iostream>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <iomanip>

#include <cstdio>
#include <cctype>
#include <cmath>
#include <ctime>
#include <cstring>

using namespace std;
#define MOD 1000000007
typedef long long LL;
typedef pair<int, int> ii;

bool comp(int a, int b) {
	return a > b;
}
int main(){
    ios_base::sync_with_stdio(false);
    int T;
    cin >> T;
    for (int i = 1; i <= T; i++) {
    	int N, K;
    	cin >> N >> K;
    	vector<int> R(N), C(N);
    	for (int j = 0; j < N; j++)
    		for (int k = 0; k < N; k++) {
    			int a;
    			cin >> a;
    			R[j] += a;
    			C[k] += a;
    		}
    	priority_queue <int, vector<int>, function<bool(int, int)> > pqr (comp), pqc (comp);
    	for (int j = 0; j < N; j++) {
    		pqr.push(R[j]);
    		pqc.push(C[j]);
    	}
    	int r[K+1], c[K+1];
    	r[0] = c[0] = 0;
    	for (int j = 1; j <= K; j++) {
    		int temp;
    		temp = pqr.top();
    		pqr.pop();
    		r[j] = r[j-1] + temp;
    		pqr.push(temp+N);
    		temp = pqc.top();
    		pqc.pop();
    		c[j] = c[j-1] + temp;
    		pqc.push(temp+N);
    	}
    	int ans = 1000000000;
    	for (int j = 0; j <= K; j++) {
    		ans = min(ans, r[j] + c[K-j] + j*(K-j));
    	}
    	cout << ans << endl;
    }
    return 0;
}