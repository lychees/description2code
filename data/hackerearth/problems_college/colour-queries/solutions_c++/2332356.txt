#include <bits/stdc++.h>
using namespace std;
int vis[101][101];
	int a[101][101];
int n, m, q;
int x, y, d;
void dfs(int i, int j) {
	vis[i][j] = true;
	if( i + 1 < n && vis[i+1][j] == false && abs(a[i][j] - a[i + 1][j]) <= d) {
		dfs(i+1, j);
	}
	if( i - 1 >= 0 && vis[i-1][j] == false && abs(a[i][j] - a[i - 1][j]) <= d) {
		dfs(i-1, j);
	}
	if( j+1 < m && vis[i][j+1] == false && abs(a[i][j] - a[i][j + 1]) <= d) {
		dfs(i, j + 1);
	}
	if( j - 1 >= 0 && vis[i][j - 1] == false && abs(a[i][j] - a[i][j - 1]) <= d) {
		dfs(i, j - 1);
	}
}
int main() {
	
	cin >> n >> m >> q;
	for(int i = 0; i < n; i++) {
		for(int j = 0; j < m; j++) cin >>a[i][j];
	}
	while(q--) {
		cin >> x >> y >> d;
		for(int i = 0; i <= 100; i++) {
			for(int j = 0; j <= 100; j++) vis[i][j] = false;
		}

		x--; y--;
		 dfs(x, y);
		 int cnt = 0;
		 for(int i = 0; i <= 100; i++) {
			for(int j = 0; j <= 100; j++) if(vis[i][j]) cnt++;
		}
		cout << cnt << endl;
	}
}