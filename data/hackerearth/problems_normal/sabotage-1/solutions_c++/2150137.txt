#include <iostream>
#include <vector>
using namespace std;

const int MAXN = 100100;
int N, M;
pair<int, int> E[MAXN];
int par[MAXN];
vector<int> ans;

int find_parent(int x)
{
	if (par[x] == x)
		return x;
	return par[x] = find_parent(par[x]);
}

bool join(int a, int b)
{
	a = find_parent(a), b = find_parent(b);
	if (a == b)
		return false;
	par[a] = b;
	return true;
}

int main()
{
    ios::sync_with_stdio(false);
    
    cin >> N >> M;
    for (int i = 0; i < M; i++)
    	cin >> E[i].first >> E[i].second;
    
    for (int i = 1; i <= N; i++)
    	par[i] = i;
    	
    for (int i = M - 1; i >= 0; i--)
    	if (!join(E[i].first, E[i].second))
    		ans.push_back(i+1);
    		
    cout << ans.size() << "\n";
    for (int i = (int)ans.size() - 1; i >= 0; i--)
    	cout << ans[i] << "\n";
    
    return 0;
}
