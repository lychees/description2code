#include <bits/stdc++.h>

using namespace std;

#define maxN 100

vector<int> g[30];
string a[maxN+5];
int in[30]={0};
int out[30]={0};
int level[30]={0};
int exist[30]={0};
set<pair<int,int> > s;
set<pair<int,int> >::iterator it;
int edge[30][30];

void dfs(int u,int p)
{
	int i,v;
	for(i=0;i<(int)g[u].size();i++)
	{
        v=g[u][i];
		dfs(v,p+1);
	}
	level[u]=max(p,level[u]);
    //level[u]=p;
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int n,i,j,z,p;
    cin>>n;
    for(i=0;i<26;i++)
        for(j=0;j<26;j++)
            edge[i][j]=0;
    for(i=0;i<n;i++)
    {
    	cin>>a[i];
        for(j=0;j<(int)a[i].length();j++)
            exist[a[i][j]-'a']=1;
    	if(i==0)
    		continue;
    	z=0;
    	for(j=0;j<min((int)a[i-1].length(),(int)a[i].length());j++)
    	{
    		if(a[i-1][j]!=a[i][j])
    		{
    			z=1;
    			break;
    		}
    	}
    	if(z)
    	{
            if(edge[a[i-1][j]-'a'][a[i][j]-'a'])
                continue;
            edge[a[i-1][j]-'a'][a[i][j]-'a']=1;
    		g[a[i-1][j]-'a'].push_back(a[i][j]-'a');
    		out[a[i-1][j]-'a']++;
    		in[a[i][j]-'a']++;
    	}
    }
    for(i=0;i<26;i++)
        level[i]=1;
    for(i=0;i<26;i++)
    	if(in[i]==0&&out[i]!=0)
    	   dfs(i,1);
    for(i=0;i<26;i++)
    	if(exist[i])
    	{
            //printf("%d %d\n",i,level[i]);
            s.insert(make_pair(level[i],i));
        }
    p=-1;
    for(it=s.begin();it!=s.end();it++)
    {
    	if(it==s.begin())
    	{
    		printf("%c",(char)((*it).second+'a'));
    		p=(*it).first;
    		continue;
    	}
    	if(p!=(*it).first)
    		printf("\n");
        p=(*it).first;
    	printf("%c",(char)((*it).second+'a'));
    }
    printf("\n");
    return 0;
}
