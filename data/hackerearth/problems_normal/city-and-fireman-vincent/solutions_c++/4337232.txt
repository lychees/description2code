#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;

vector<int> arr(1003);
vector<long int> cnt(1003,1);
vector<int> e(1002);
int root(int a){
	if(a==arr[a])
		return a;
	return root(arr[a]);
}

bool find(int a,int b){
	if(root(a)!=root(b))
		return false;
	return true;
}
void  uni(int a,int b){
	if(!find(a,b)){
		int root_a=root(a);
		int root_b=root(b);
		if(e[root_a]>e[root_b])
			arr[root_a]=arr[root_b];
		else{
			if(e[root_a]==e[root_b])
				cnt[root_a]+=cnt[root_b];
			arr[root_b]=arr[root_a];
		}
	}
}
int main()
{	long int n,k,x,y;
   cin>>n;
   for(int i=1;i<=n;i++){
   		arr[i]=i;
   }
   for(int i=1;i<=n;i++){
   		cin>>e[i]; 
   }
   cin>>k;
   for(int i=0;i<k;i++){
   	 cin>>x;
   	 cin>>y;
   	 uni(x,y);
   }
   unordered_map<int,long int> mp;
   for(int i=1;i<=n;i++){
   		int root_a=root(i);
 		mp[root_a]=cnt[root_a];
   }
   long int ans=1;
   for(auto it=mp.begin();it!=mp.end();it++){
   		ans=(ans*it->second)%1000000007;
   	//	cout<<it->first<<" "<<it->second<<endl;
   }
   cout<<ans<<endl;
   return 0;
}
