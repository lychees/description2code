#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
int mem[1001][1001];
int mark[1001][1001],mark1[1001][1001],j,k;
long long dp(int a,int b,int yet)
{
	if(a>=j||b>=j)
		return 0;
	yet+=mark1[a][b];
	long long ret=0;
	if(mark[a][b]==yet&&a==j-1&&b==j-1)
		return 1;
	if(mark[a][b]==yet)
	{
		if(mem[a][b]>=0)
			return mem[a][b];
		ret+=dp(a+1,b,yet)+dp(a,b+1,yet);
		ret%=mod;
	//	cout<<a<<" "<<b<<" "<<mark[a][b]<<" "<<ret<<endl;
		return mem[a][b]=ret;
	}
	return 0;
}
int main()
{
	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
	#endif
	std::ios_base::sync_with_stdio(false);
	int t,i,l,m,n,o,p;
	cin>>t;
	for(i=0;i<t;i++)
	{
		cin>>j>>k;
		vector<pair<int,int> > lis;
		if(k>0)
		{
			for(l=0;l<k;l++)
			{
				cin>>m>>n;
				lis.push_back(make_pair(m,n));
				mark1[m][n]=1;
			}
		}
	//	memset(mem,0,sizeof(mem));
		for(m=0;m<j;m++)
		{
			for(n=0;n<j;n++)
			{
				o=0;
				mem[m][n]=-1;
				if(m>0)
					o=max(o,mark[m-1][n]);
				if(n>0)
					o=max(o,mark[m][n-1]);
				mark[m][n]=o+mark1[m][n];
			}
		}
	//	cout<<"here\n";
		cout<<dp(0,0,0)<<endl;
		if(k>0)
		{
			for(l=0;l<k;l++)
			mark1[lis[l].first][lis[l].second]=0;
		}
	}	
	return 0;
}