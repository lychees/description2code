#include<bits/stdc++.h>

using namespace std;
long long mod=1000000007;
long long mult(long long a, long long b, long long mod)
{
	__int128 res = a;
	res *= b;
	res %= mod;
	a = res;
	return a;
}
long long modulo(long long a, long long b, long long c){
	long long x = 1, y = a;
	while (b > 0){
		if (b % 2 == 1){
			x = mult(x, y, c);
		}
		y = mult(y, y, c);
		b /= 2;
	}
	return x%c;
}
bool Miller(long long p, int iteration){
	if (p<2){
		return false;
	}
	if (p != 2 && p % 2 == 0){
		return false;
	}
	long long s = p - 1;
	while (s % 2 == 0){
		s /= 2;
	}
	for (int i = 0; i<iteration; i++){
		long long a = rand() % (p - 1) + 1, temp = s;
		long long mod = modulo(a, temp, p);
		while (temp != p - 1 && mod != 1 && mod != p - 1){
			mod = mult(mod, mod, p);
			temp *= 2;
		}
		if (mod != p - 1 && temp % 2 == 0){
			return false;
		}
	}
	return true;
}

bool check1(long long n)
{

return Miller(n,25);

}
bool check2(long long n)
{

    long long k= sqrt(n);
    return (k*k == n);
}

int main()
{
long long  n,q,t,f,p;
cin>>n>>q;
long long init=1;
long long ans=0,cp=0;
while(q--)
{
    cin>>t>>f>>p;
    if(t==1)
    {
        if(check1(f+p))
        {
            ans+=abs(init-f);
            ans%=mod;
            init=f;
            cp+=p;

        }
    }
    else
    {
        if(check2(f+p))
        {

            if(p<=cp)
            {
                ans+=abs(init-f);
            ans%=mod;
            init=f;
            cp-=p;

            }
        }
    }


}
 cout<<ans<<" "<<cp;
}
