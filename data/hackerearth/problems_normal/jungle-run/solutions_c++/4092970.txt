#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define inf (ll)(1e9)
#define pi 3.141593
#define pb push_back
#define mp make_pair
#define fill(a,v) memset(a, v, sizeof a)
typedef long long ll;
int main()
{
	ios_base::sync_with_stdio(false);
	ll n;
	cin>>n;
	ll i,j,a,b,c,d;
	char arr[n+1][n+1];
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			cin>>arr[i][j];
			if(arr[i][j]=='S')
			{
				a=i;
				b=j;
			}
			if(arr[i][j]=='E')
			{
				c=i;
				d=j;
			}
		}
	}
	bool visit[n+1][n+1];
	fill(visit,false);
	ll distance[n+1][n+1];
	fill(distance,-1);
	distance[a][b]=0;
	queue<pair<ll,ll> >q;
	q.push(mp(a,b));
	while(!q.empty())
	{
		ll x,y;
		x=q.front().first;
		y=q.front().second;
		q.pop();
		if((x+1)<=n && arr[x+1][y]!='T')
	   {
		    if(distance[x+1][y]==-1 || distance[x+1][y]>(distance[x][y]+1))
		    {
		    	q.push(mp(x+1,y));
		    	distance[x+1][y]=(distance[x][y]+1);
			}
	   }
        if((y+1)<=n && arr[x][y+1]!='T')
	   {
		    if(distance[x][y+1]==-1 || distance[x][y+1]>(distance[x][y]+1))
		    {
		    	q.push(mp(x,y+1));
		    	distance[x][y+1]=(distance[x][y]+1);
			}
	   }
	    if((y-1)>=1 && arr[x][y-1]!='T')
	   {
		    if(distance[x][y-1]==-1 || distance[x][y-1]>(distance[x][y]+1))
		    {
		    	q.push(mp(x,y-1));
		    	distance[x][y-1]=(distance[x][y]+1);
			}
	   }
	    if((x-1)>=1 && arr[x-1][y]!='T')
	   {
		    if(distance[x-1][y]==-1 || distance[x-1][y]>(distance[x][y]+1))
		    {
		    	q.push(mp(x-1,y));
		    	distance[x-1][y]=(distance[x][y]+1);
			}
	   }
	}
	cout<<distance[c][d]<<endl;
    return 0;
}



