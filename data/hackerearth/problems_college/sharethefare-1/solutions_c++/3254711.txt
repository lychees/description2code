#include <iostream>
#include <map>
#include <vector>
using namespace std;

int main()
{
    string name;
    int amount, T, N, Q, M, part, payer_part;
    map<string,int> m;
    vector<string> v;

    cin>>T;
    while(T--){
        cin >> N >> Q;
        v.clear();
        m.clear();
        for(int i=0; i<N; i++){
                cin>>name;
                v.push_back(name);
                m.insert(pair<string,int>(name,0));
        }
        for(int i=0; i<Q; i++)
        {
            cin >> name;
            cin >> amount;
            cin >> M;
            part = amount/(M+1);
            payer_part = part + (amount - part*(M+1));
            m.find(name)->second += (amount-payer_part);
            for(int i=0; i<M; i++)
            {
                cin>>name;
                m.find(name)->second += (-part);
            }
        }
        vector<string> :: iterator it;
        int len = v.size();
        for(int it=0; it<len; it++)
        {
            string str = v[it];
            int num = m.find(str)->second;
            if(num == 0) cout << str << " neither owes nor is owed" << endl;
            else if(num > 0) cout << str << " is owed " << num << endl;
            else if(num < 0) cout << str << " owes " << -(num) << endl;
        }
    }
    return 0;
}
