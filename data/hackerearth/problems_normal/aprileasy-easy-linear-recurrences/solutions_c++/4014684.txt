#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
#define ll long long
#define debug(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define fr(i,beg,end) for(i=beg;i<end;i++)
#define itfr(it,stl) for(it=stl.begin();it!=stl.end();it++)
#define PII pair<int,int>
#define init(x,val) memset(x,val,sizeof(x))
#define fst first
#define snd second
#define MOD 1000000007
using namespace std;
ll e,f;
ll mat[5];
ll Pow[30][5][5];
ll rec[5][5];
ll ans[5];
void mul2(ll a[5][5],ll b[5])
{
    int i,j,k;
    ll c[5];
    fr(i,0,5)
        c[i]=b[i],b[i]=0;
    fr(i,0,5)
        fr(j,0,5)
            b[i]=(b[i]+a[i][j]*c[j])%MOD;
}
void mul(ll a[5][5],ll b[5][5])
{
    int i,j,k;
    ll c[5][5];
    fr(i,0,5)
        fr(j,0,5)
            c[i][j]=a[i][j];
    fr(i,0,5)
        fr(j,0,5)
            a[i][j]=0;
    fr(i,0,5)
        fr(j,0,5)
            fr(k,0,5)
                a[i][k]=(a[i][k]+c[i][j]*b[j][k])%MOD;
}
void calc()
{
    int i,j,k;
    fr(i,1,30)
    {
        fr(j,0,5)
            fr(k,0,5)
                Pow[i][j][k]=Pow[i-1][j][k];
        mul(Pow[i],Pow[i-1]);
    }
}
void fn(ll n)
{
    int i,j;
    fr(i,0,5)
        ans[i]=mat[i];
    for(i=0;i<30;i++)
    {
        if(n&(1<<i))
            mul2(Pow[i],ans);
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll q,n;
    int i,j,k;
    scanf("%lld%lld%lld%lld%lld%lld",&rec[0][0],&rec[0][3],&rec[1][1],&rec[1][2],&e,&f);
    scanf("%lld%lld%lld%lld",&mat[2],&mat[0],&mat[3],&mat[1]);
    rec[2][0]=rec[3][1]=rec[4][4]=1;
    rec[4][0]=(e*rec[0][0])%MOD;
    rec[4][3]=(e*rec[0][3])%MOD;
    rec[4][1]=(f*rec[1][1])%MOD;
    rec[4][2]=(f*rec[1][2])%MOD;
    fr(i,0,5)
        fr(j,0,5)
            Pow[0][i][j]=rec[i][j];
    mat[4]=((e*(mat[0]+mat[2]))%MOD+(f*(mat[1]+mat[3]))%MOD)%MOD;
    calc();
    scanf("%lld",&q);
    while(q--)
    {
        scanf("%lld",&n);
        if(!n)
        {
            printf("%lld\n",(e*mat[2]+f*mat[3])%MOD);
            continue;
        }
        fn(n-1);
        printf("%lld\n",ans[4]);
    }
    return 0;
}

