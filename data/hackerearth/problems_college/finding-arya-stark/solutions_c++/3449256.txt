#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef double ld;
typedef pair<ll,ll> pll;

#define sf(x) sort(x.begin(),x.end(),func)
#define s(x) sort(x.begin(),x.end())
#define pb push_back
#define all(v) v.begin(),v.end()
#define rs(v) { s(v) ; r(v) ; }
#define r(v) {reverse(all(v));}
#define mp make_pair
#define F first
#define S second
#define f(i,n) for(int i=0;i<n;i++)
#define fab(i,a,b) for(int i=a;i<=b;i++)
#define deb(x) cout << "!..." << #x << ':' << x <<"...!   "
#define ent cout<<"\n"
const ll mod = 1000000007;
const ll inf = LLONG_MAX;
const ll ninf = LLONG_MIN;
const ld eps = 1e-10;
const ll N = 1000005;
const ll LOGN = log2(N);
int height[N];
int visited[N];
int tin[N];
int tout[N];
int tim;
//vector<int> *ptr;
void dfs(int,int ,vector<int>* ptr);
int main()
{
    ios_base::sync_with_stdio(0);
	
		int n;
		cin>>n;
		vector<int> arr[n];
		int a,b;
		
		f(i,n-1){
			cin>>a>>b;
			arr[a-1].pb(b-1);
		
			arr[b-1].pb(a-1);
		}
		int h;
	    h=0;
	   ///// ptr=arr;
		dfs(0,h,arr);
		
		
		




		int qu;
		cin>>qu;
		int type,x,y;
		
		f(i,qu){
			cin>>type>>x>>y;
			x--;y--;
			if(type==0)
			{
				if(tin[x]<tin[y]&&tout[x]>tout[y]){
					cout<<"YES ";
					cout<<height[y]-height[x]+1;ent;
				}
				else{
					cout<<"NO";ent;
				}
			}
			else
			{
				if(tin[y]<tin[x]&&tout[y]>tout[x])
				{
					cout<<"YES ";
					cout<<height[x]-height[y]+1;ent;
				}
				else
				{
					cout<<"NO";ent;
				}
			}






		}		
    return 0;
}

void dfs(int n, int h,vector<int>* arr){
	visited[n]=1;
	tim++;
	height[n]=h;
	tin[n]=tim;
	f(i,arr[n].size()){	
		if(visited[arr[n][i]]==0)
		{	dfs(arr[n][i],h+1,arr);}
	}
	tim++;
	tout[n]=tim;

}

