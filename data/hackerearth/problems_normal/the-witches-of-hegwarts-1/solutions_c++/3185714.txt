#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;
vector<int> v1;
map<long long int,long long int> mp1;
long long int findresult(long long int a)
{
	if(a<=10000000)
		return v1[a];
	long long int res=1e9,res1=0;
	
	if(a%3==0)
		res=min(res,findresult(a/3));
	else
		res=min(res,findresult(a-1));
	if(a%2==0)
		res=min(res,findresult(a/2));
	else
		res=min(res,findresult(a-1));
	 return res+1;
}
int main()
{
    long long int t,n,p1,p2,result;
    cin>>t;
    v1.resize(10000000+1,0);
    for(p1=2;p1<=10000000;p1++)
    {
    	v1[p1]=1+v1[p1-1];
    	if(p1%2==0)
    		v1[p1]=min(v1[p1],1+v1[p1/2]);
    	if(p1%3==0)
    		v1[p1]=min(v1[p1],1+v1[p1/3]);
    }
    while(t--)
    {
    	cin>>n;
    	result=findresult(n);
    	cout<<result<<endl;
    }
    //
    return 0;
}
