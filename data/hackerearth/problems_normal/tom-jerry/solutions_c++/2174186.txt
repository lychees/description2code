#include <iostream>
#include<vector>
using namespace std;

int numpaths(int r,int c, vector<vector<int>>& g,int n,vector<vector<bool>> &visited)
{
	int xd[]={-1,0,0,1};
	int yd[]={0,1,-1,0};
	int total=0;
	
	if((r==n-1)&&(c==n-1))
	{
		if(g[n-1][n-1]==0)
			return 1;
		else
			return 0;
	}
	
	//if(mem[r][c]!=-1)
	//	return mem[r][c];
		
	for(int i=0;i<4;i++)
	{
		int newr=r+xd[i];
		int newc=c+yd[i];
		if((newr<n)&&(newr>=0)&&(newc<n)&&(newc>=0)&&(g[newr][newc]==0)&&(!visited[newr][newc]))
		{
			visited[r][c]=1;
			total+=numpaths(newr,newc,g,n,visited);
			visited[r][c]=0;
		}
		
	}
	
	//mem[r][c]=total;
	return total;
}
int main()
{
    int n;
    cin>>n;
    vector<vector<int>> g(n,vector<int>(n));
    vector<vector<bool>> visited(n,vector<bool>(n,0));
   // vector<vector<int> > mem(n,vector<int>(n,-1));
    for(int i=0;i<n;i++)
    	for(int j=0;j<n;j++)
    		cin>>g[i][j];
    
    int ans=numpaths(0,0,g,n,visited);
   /* for(int i=0;i<n;i++)
    {
    	for(int j=0;j<n;j++)
    		cout<<mem[i][j]<<"  ";
    	cout<<"\n";	
    }*/
    cout<<ans<<"\n";
    return 0;
}
