#include<cstdio>
#include<set>
#include<vector>
#include<algorithm>
using namespace std;

set<int> ss;
set<int>::iterator it;
vector<int> v[1002];
int rst[1000003];
vector<int> tt[1000006];
int gone[1000006];
vector<int> ans;
int main()
{
	int N; scanf("%d",&N);
	for(int i=0;i<N;i++)
	{
		int k;  scanf("%d",&k);
		for(int j=0;j<k;j++)
		{
			int t; scanf("%d",&t);
			v[i].push_back(t);
			if(j!=0) rst[t]++;
		
		}
		reverse(v[i].begin(),v[i].end());
	}
	
	for(int i=0;i<N;i++)
	{
		int t=v[i][v[i].size()-1];
	//	printf("here %d %d\n",t,rst[t]);
			tt[t].push_back(i);
		if(rst[t]==0) 
		{
			ss.insert(t);
		
		}
	}
	while(ss.size())
	{
	//	printf("set is : ");
	//	for(it=ss.begin();it!=ss.end();it++) printf("%d ",*it); printf("\n");
		it= ss.begin();
		int tmp=*it;
		ans.push_back(tmp);
	//	printf("pushing %d\n",tmp);
		gone[tmp]=1;
		ss.erase(it);
		for(int i=0;i<tt[tmp].size();i++)
		{
			int x=tt[tmp][i];
	//		 printf("inside %d\n",x);
			v[x].pop_back();
			if(v[x].size()==0) continue;
			int ttt=v[x][v[x].size()-1];
			while(gone[ttt] && v[x].size())
			{
					v[x].pop_back();
					ttt=v[x][v[x].size()-1];
			}
			if(v[x].size()==0) continue;
			rst[ttt]--;
			if(rst[ttt]==0) ss.insert(ttt);
			tt[ttt].push_back(x);
		}
		
	}
	
	for(int i=0;i<ans.size();i++) printf("%d ",ans[i]);

}