using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
void solve();
int main()
{
  int t=1;
//  cin>>t;
  while(t--)
  solve();
  return 0;
}
int n,m,ar[mx];
int color[mx];
int M[mx];
void solve()
{ 
  vector<int> v;
   int i,j,k,num,s,p,q,x,y,z;
   cin>>n>>m;
   rep(i,1,m)
    cin>>M[i];
   rep(i,1,n)
    cin>>color[i];
   v.pb(0);
   rep(i,1,n)
   {
     z=M[color[i]];
       x=((v[i-1]+z)/z)*z;
     for(y=x;;y+=z)
     {
       for(j=color[i]+1;j<=m;j++)
       {
         if(y%M[j]==0)
           break;
       }
       if(j==m+1)
       {
        v.pb(y);
        break;
       }
     }
   } 
   cout<<*max_element(v.begin(),v.end());
}