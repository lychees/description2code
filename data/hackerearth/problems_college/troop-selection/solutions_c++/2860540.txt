#include <bits/stdc++.h>
using namespace std;
#define llong long long
#define long llong

int S[1010], F[1010][1010];
int n, m, p, n_test;

void enter ()
{
    cin >> n >> m >> p;
    for (int i = 1; i <= n; ++i) cin >> S[i], S[i] += S[i - 1];
}

void solve ()
{
    fill_n(F[0] + 1, m, numeric_limits<int>::min());

    for (int x = 1; x <= n; ++x)
    for (int y = 1; y <= m; ++y)
    {
        F[x][y] = F[x - 1][y];
        if (x >= p) F[x][y] = max(F[x][y], F[x - p][y - 1] + S[x] - S[x - p]);
    }

    cout << *max_element(F[n], F[n] + m + 1) << "\n";
}

int main ()
{
    ios::sync_with_stdio(false); cin.tie(nullptr);
	if (ifstream("test.inp")) cin.rdbuf((new ifstream("test.inp"))->rdbuf());

    cin >> n_test;
    while (n_test--)
	{
	    enter();
        solve();
	}
}