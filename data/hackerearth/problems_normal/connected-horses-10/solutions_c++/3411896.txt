#include<bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
#define mod 1000000007
#define bitcount __builtin_popcountll
#define ll long long
int arr[1005][1005];
int x[1000005];
int y[1000005];
vector<int>v[100005];
int visited[100005];
int fact[1000005];
queue<int>qu;
int main()
{
	int i,j,k;
	int t,n,m,q;
	sd(t);
	fact[0]=1;
	for(i=1;i<=1000000;i++)
    {
        fact[i]=(1ll*fact[i-1]*i)%mod;
    }
	while(t--)
    {
        sd(n);
        sd(m);
        sd(q);
        for(i=1;i<=q;i++)
        {
            sd(x[i]);
            sd(y[i]);
        }
        for(i=1;i<=q;i++)
        {
            j=x[i];
            k=y[i];
            arr[j][k]=i;
            if(j>1&&k>2&&arr[j-1][k-2]!=0)
            {
                v[i].push_back(arr[j-1][k-2]);
                v[arr[j-1][k-2]].push_back(i);
            }
            if(k>1&&j>2&&arr[j-2][k-1]!=0)
            {
                v[i].push_back(arr[j-2][k-1]);
                v[arr[j-2][k-1]].push_back(i);
            }
            if(j<n&&k<m-1&&arr[j+1][k+2]!=0)
            {
                v[i].push_back(arr[j+1][k+2]);
                v[arr[j+1][k+2]].push_back(i);
            }
            if(j<n-1&&k<m&&arr[j+2][k+1]!=0)
            {
                v[i].push_back(arr[j+2][k+1]);
                v[arr[j+2][k+1]].push_back(i);
            }
            if(j<n-1&&k>1&&arr[j+2][k-1]!=0)
            {
                v[i].push_back(arr[j+2][k-1]);
                v[arr[j+2][k-1]].push_back(i);
            }
            if(j>2&&k<m&&arr[j-2][k+1]!=0)
            {
                v[i].push_back(arr[j-2][k+1]);
                v[arr[j-2][k+1]].push_back(i);
            }
            if(j<n&&k>2&&arr[j+1][k-2]!=0)
            {
                v[i].push_back(arr[j+1][k-2]);
                v[arr[j+1][k-2]].push_back(i);
            }
            if(j>1&&k<m-1&&arr[j-1][k+2]!=0)
            {
                v[i].push_back(arr[j-1][k+2]);
                v[arr[j-1][k+2]].push_back(i);
            }
        }
        int counter,ans=1;
        for(i=1;i<=q;i++)
        {
            if(visited[i]==0)
            {
                counter=0;
                visited[i]=1;
                qu.push(i);
                while(!qu.empty())
                {
                    int z=qu.front();
                    qu.pop();
                    //printf("get %d\n",z);
                    counter++;
                    int s=v[z].size();
                    for(j=0;j<s;j++)
                    {
                        if(visited[v[z][j]]==0)
                        {
                            visited[v[z][j]]=1;
                            qu.push(v[z][j]);
                        }
                    }
                }
                ans=(1ll*ans*fact[counter])%mod;
            }
            //printf("fin %d\n",counter);

        }
        printf("%d\n",ans);
        for(i=1;i<=q;i++)
            v[i].clear();
        for(i=1;i<=q;i++)
        {
            arr[x[i]][y[i]]=0;
            visited[i]=0;
        }
    }
	return 0;
}
