#include<math.h>
#include <stdio.h>
#include <algorithm>
#include <iostream>
using namespace std;
typedef long long ll;
typedef unsigned long long llu;
typedef double lf;
typedef unsigned int uint;
typedef long double llf;
typedef pair<int, int> pii;

#define rep(i,b) for(int i=0;i<b;i++)
#define F(i,a,b) for(int i=a;i<b;i++)
#define in2(a,b) scanf("%d%d",&a,&b)
#define mx 10000005
#define PB push_back
#define MP make_pair
#define ll long long




#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
/*
int prim[mx];

void prime(){
	prim[0]=prim[1]=1;
	int i=2,j;
	for(j=2;j<=mx/i+1;j++)
		if(i*j<=mx)
			prim[i*j]=1;
	for(i=3;i<=mx;i+=2)
		for(j=2;j<=mx/i+1;j++)
			if(i*j<=mx)
				prim[i*j]=1;	
	
}

*/
int ispalindrome(int n){
	int m=n;
	int s=0,c;
	while(m){
		c=m%10;
		s=s*10+c;
		m/=10;
	}
	if(s==n)
		return 1;
	
	return 0;
}
/*void ps(){
 	int i;
 	for(i=0;i<mx;i++){
 		if(!prim[i] && !ispalindrome(i))
 			prim[i]=1;
 	
 	
 	}
 
 }
*/

int main(){
//prime();
//ps();

int t;
cin>>t;
while(t--){
	int n;
	s(n);
	int i=n,j;
	while(1){
		if(ispalindrome(i)){
				int root=sqrt(i);
				j=2;
				int flag=0;
				for(j=2;j<=root;j++)
					if(i%j==0)
						flag++;
				if(!flag)	
				{	printf("%d\n",i);
					break;
					}
			
		}
		
		
		
		i++;
	}
}	
return 0;
}