#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <map>
#include <assert.h>
#include <cmath>
#include <queue>
#include <set>
#include <bitset>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define SZ(x) (int)(x.size())
#define rep(i,a,b) for(int i=a;i<b;i++)
#define per(i,a,b) for(int i=b-1;i>=a;i--)
#define inf 1000000007
#define mod 1000000009
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)
 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005


template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}
 
//FILE* outFile;
 
inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}


int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=ans*(ll)a%mod;
        a=(ll)a*a%mod;b>>=1;
    }
    return ans;
}


set<pii>g[303],rg[303];
ll dp[303][303];
int a[303][303],b[303][303];
int main(){
    //freopen("A.in","r",stdin);
    //freopen("A.out","w",stdout);
    //freopen("1.txt","w",stdout);
    int T,j,k,i,ca=0,m=0,n;
    scanf("%d%d",&n,&m);
    char c[2];
    memset(a,-1,sizeof(a));
    memset(b,-1,sizeof(b));
    while(m--){
        scanf("%d%d%d%s",&i,&j,&k,c);
        i--,j--;
        if(c[0]==')')g[i].insert({j,k}),b[i][j]=k;
        else rg[j].insert({i,k}),a[j][i]=k;
    }
    priority_queue<pair<ll,pii> >q;
    memset(dp,-1,sizeof(dp));
    rep(i,0,n)q.push(mp(0,mp(i,i))),dp[i][i]=0;
    int cnt=0;
    while(!q.empty()){
        ll w=-q.top().x;
        int u=q.top().y.x,v=q.top().y.y;q.pop();
        if(dp[u][v]!=w)continue;
        if(u!=v)
        rep(i,0,n){
            if(b[u][i]!=-1&&b[v][i]!=-1){
                if(b[u][i]>=w+b[v][i]){
                    g[u].erase({i,b[u][i]});
                    b[u][i]=-1;
                }
            }
            if(a[u][i]!=-1&&a[v][i]!=-1){
                if(a[v][i]>=w+a[u][i]){
                    rg[v].erase({i,a[v][i]});
                    a[v][i]=-1;
                }
            }
        }
        if(SZ(g[v])&&SZ(rg[u]))
        FOREACH(l,g[v]){
            FOREACH(r,rg[u]){
                int x=r->x,y=l->x;
                ll w1=w+l->y+r->y;
                if(dp[x][y]==-1||dp[x][y]>w1){
                    dp[x][y]=w1;
                    q.push(mp(-w1,mp(x,y)));
                }
            }
        }
        rep(i,0,n){
            if(dp[v][i]!=-1){
                if(dp[u][i]==-1||dp[u][i]>w+dp[v][i]){
                    dp[u][i]=w+dp[v][i];
                    q.push(mp(-dp[u][i],mp(u,i)));
                }
            }
            if(dp[i][u]!=-1){
                if(dp[i][v]==-1||dp[i][v]>w+dp[i][u]){
                    dp[i][v]=w+dp[i][u];
                    q.push(mp(-dp[i][v],mp(i,v)));
                }
            }
        }
        cnt++;
    }
    /*
    rep(k,0,n)
        rep(i,0,n)if(dp[i][k]!=-1)
            rep(j,0,n)if(dp[k][j]!=-1){
                if(dp[i][j]==-1||dp[i][j]>dp[i][k]+dp[k][j])dp[i][j]=dp[i][k]+dp[k][j];
            }//*/
    rep(i,0,n){
        rep(j,0,n)printf("%lld ",dp[i][j]);puts("");
    }
    //cerr<<1.*clock()/CLOCKS_PER_SEC<<"s\n";
    return 0;
}