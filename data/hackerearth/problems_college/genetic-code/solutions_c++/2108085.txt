#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <deque>
#include <cassert>

using namespace std;

#ifdef WIN32
	#define I64 "%I64d"
#else
	#define I64 "%lld"
#endif

typedef long long ll;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define all(s) s.begin(), s.end()
#define sz(s) (int(s.size()))
#define fname "a"
#define ms(a,x) memset(a, x, sizeof(a))
#define forit(it,s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++it)
#define MAXN 202

int n;
char s[MAXN];
int d[MAXN];

inline int solve(int n)
{
	if (n <= 1 || (n & 1)) return 0;
	int &r = d[n];
	if (r != -1) return r;
	r = n - 1;
	for (int i = 0; i <= n; ++i)
		r = min(r, solve(i) + solve(n - i) + 1);
	return r;
}

int main()
{
	memset(d, -1, sizeof(d));
	#ifdef LOCAL
	freopen(fname".in", "r", stdin);
	freopen(fname".out", "w", stdout);
	#endif

	scanf("%s", s);
	n = strlen(s);
	int ans = 0;
	for (int i = 0, j; i < n; i = j)
	{
		j = i;
		while(j < n && s[i] == s[j]) ++j;
		if ((j - i) % 2 == 0) ans += solve(j - i);
	}
	printf("%d\n", ans);

	return 0;
}
