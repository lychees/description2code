#include<bits/stdc++.h>
using namespace std;
int X[]={-1,-1,0,1,1,1,0,-1};
int Y[]={0,1,1,1,0,-1,-1,-1};
#define mp make_pair
#define ft first
#define sd second
int main(){

	int t;
	cin >> t;
	while(t--){

		int n,m;
		cin >> n >> m;
		bool M[n+2][m+2],V[n+2][m+2];
		int ans[n+2][m+2];
		memset(M,0,sizeof(M));
		memset(ans,0,sizeof(ans));
		int x,y;

		for(int i=0;i<=n+1;i++)
			for(int j=0;j<=m+1;j++)
				V[i][j]=1;
		for(int i=1;i<=n;i++)
			for(int j=1;j<=m;j++){
				char ch;
				cin >> ch;
				if(ch=='c'){
					x=i;
					y=j;
				}else if(ch=='*'){
					M[i][j]=1;				
				}
			}
		queue<pair<int,int> > Q;
		Q.push(mp(x,y));
		
		while(!Q.empty()){
			pair<int,int> t=Q.front();
			Q.pop();
			int x=t.ft,y=t.sd;
			if(V[x][y]==0) continue;
			V[x][y]=0;
			int cnt=0;
			for(int i=0;i<8;i++){
				int nx=x+X[i];
				int ny=y+Y[i];
				if(nx<=n&&nx>=1&&ny<=m&&ny>=1&&M[nx][ny]){
					cnt++;
				}
			}
			ans[x][y]=cnt;
			if(cnt==0){
					
				for(int i=0;i<8;i++){
					int nx=x+X[i];
					int ny=y+Y[i];
					if(nx<=n&&nx>=1&&ny<=m&&ny>=1&&V[nx][ny]){
						Q.push(mp(nx,ny));
					}
				}
			}				
		}
		
		for(int i=1;i<=n;i++)
		{

			for(int j=1;j<=m;j++){

				if(V[i][j]){
					if(M[i][j]){
						cout << "*";
					}else{
						cout << ".";
					}
				}else{
					cout << ans[i][j];
				}			
			}
			cout << endl;
		}
	}
	return 0;
}