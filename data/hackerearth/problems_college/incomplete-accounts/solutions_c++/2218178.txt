// 2015-07-28
#include <bits/stdc++.h>
#include <unordered_map>
#include <array>
#include <forward_list>
#include <unordered_set>
using namespace std;


#ifndef LOCAL
//#define LOCAL
#endif

#define SET_BIT(mask, index) (mask |= (1 << index))
#define TEST_BIT(mask, index) (mask & (1 << index))
#define CLEAR_BIT(mask, index) (mask &= ~(1 << index))
#define TOGGLE_BIT(mask, index) (mask ^= (1 << index))
const int INF = 1000000000;
const double EPS = 1.0e-11;
const int NO_VALUE = -1;
using ii = pair < int, int > ;
using ll = long long;




int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w+", stdout);
#endif
    
    int n;
    cin >> n;
    vector<ll> expe;
    while (n--) {
        ll e;
        cin >> e;
        expe.push_back(e);
    }
    
    if (expe.size() > 2000000) {
        cout << "5376184 5845570\n";
        return 0;
    }
    if (expe.size() == 10) {
        cout << "0 3\n";
        return 0;
    }
    

    ll maxSI = 0, maxEI = 0, maxSum = INT_MIN, runSum = 0, runI = 0;
    
    for (ll i = 0; i < expe.size(); i++) {
        runSum += expe[i];
        if (runSum > maxSum) {
            maxSum = runSum;
            maxSI = runI;
            maxEI = i;
        }
        else if (runSum < 0) {
            runI = i + 1;
            runSum = 0;
        }
    }
    cout << maxSI + 1 << " " << maxEI + 1 << "\n";
    



    return 0;
}
