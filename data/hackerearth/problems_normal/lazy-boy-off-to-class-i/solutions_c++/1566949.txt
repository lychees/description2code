#include<iostream>
#include<cmath>
#include<algorithm>
using namespace std;
long long int arr[20000]={0};
void mergeSort(long long int arr[],long long int low,long long int mid,long long int high){

    long long int i,m,k,l,temp[20000];

    l=low;
    i=low;
    m=mid+1;

    while((l<=mid)&&(m<=high)){

         if(arr[l]<=arr[m]){
             temp[i]=arr[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             m++;
         }
         i++;
    }

    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             i++;
         }
    }
   
    for(k=low;k<=high;k++){
         arr[k]=temp[k];
    }
}

void partition(long long int arr[],long long int low,long long int high){

    long long int mid;

    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid);
         partition(arr,mid+1,high);
         mergeSort(arr,low,mid,high);
    }
}

int main()
{
	int t,n,i,x,y;
	cin>>t;
	while(t--)
	{
		long long int k=0,j,tclass=0,mclass=0,ans=0;
		long long int count=0;
		for(i=0;i<7;i++)
		{
		cin>>n;
		tclass+=n;
		for(j=0;j<n;j++)
		{
			cin>>x;
			cin>>y;
			arr[k]=y-x;
			count+=arr[k];
			k++;
		}
		}
		mclass=ceil(tclass*0.75);
		partition(arr,0,k-1);
		int temp=tclass-mclass;
		for(i=0;i<temp;i++)
		{
			ans+=arr[k-1];
			k--;
		}
		long long int res=604800-count+ans;
		cout<<res<<"\n";
	}
	return 0;
}