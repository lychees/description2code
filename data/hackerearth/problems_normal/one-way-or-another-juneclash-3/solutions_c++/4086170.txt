#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<vector>
#include<set>
#include<map>
#include<list>
#include<queue>
#include<algorithm>
#define mod 1000000007
typedef long long li;
using namespace std;

typedef struct data
{
	li q;
	li r;
} data;

/*class comparison		//for Priority Queue
{
	public : 
	bool operator()(customer a,customer b)
	{
		int pra=0,prb=0;
		pra=a.next;
		prb=b.next;
		if(pra<prb)
			return true;
		else
			return false;
	}
};

int comp(const void *a, const void *b)
{
	data m = *((data *)a);
	data n = *((data *)b);
	if(m.a>n.a)
		return 1;
	else if(m.a<n.a)
		return -1;
	else if(m.a==n.a)
	{
		if(m.d>n.d)
			return 1;
		else
			return -1;
	}
}

int exp(int x, int y)
{
	if(y==0)
		return 1;
	int z=0;
	z=exp(x,y/2);
	z=z*z;
	if((y%2)==1)
		z=z*x;
	return z;
}*/

/*Disjoint-Set Data Structure*/
/*vector<int> L;
void Make_Set(int N,int S[])
{
	L.resize(N);
	int i=0;
	for(i=0;i<N;i++)
	{
		L[S[i]]=S[i]);
	}
}

void union_set(int x, int y)
{
	L[x]=y;
}

int find_set(int x)		//with path compression
{
	if(x==L[x])
		return x;
	int root;
	root=find_set(L[x]);
	L[x]=root;
	return root;
}*/

int main()
{
	li T=0,N=0,R=0,i=0,len=0,end=0,pr=0,pc=0,px=0,cr=0,cc=0,cx=0,flag=0,d=0;
	scanf("%lld",&T);
	while(T--)
	{
		flag=0;
		d=0;
		scanf("%lld",&N);
		scanf("%lld%lld%lld",&pr,&pc,&px);
		for(i=1;i<N;i++)
		{
			scanf("%lld%lld%lld",&cr,&cc,&cx);
			d=abs(cr-pr)+abs(cc-pc);
			if((cx%2)==(px%2))
			{
				if((d%2)!=0)
					flag=1;
			}
			else
			{
				if((d%2)==0)
					flag=1;
			}
			pr=cr;
			pc=cc;
			px=cx;
		}
		if(flag==1)
			printf("No\n");
		else
			printf("Yes\n");		
	}
	return 0;
}

	
