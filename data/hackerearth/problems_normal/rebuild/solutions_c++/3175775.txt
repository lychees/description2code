#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define pii pair<int, int>
using namespace std;
const int N = int(2e5);
int n,m,p[N],rnk[N],v,u;          
pair <int, pii> g[N];
int deg[N];

int find_set(int v){
	if(p[v] == v) return v;
	return p[v] = find_set(p[v]);
}

void join(int u,int v){
	u = find_set(u);
	v = find_set(v);
	if(rnk[u] > rnk[v]){
		rnk[u] += rnk[v];
		p[v] = u;
	}
	else{
		rnk[v] += rnk[u];
		p[u] = v;
	}
}

bool cmp(pair <int, pii> a,pair <int, pii> b){
	return (a.f < b.f || (a.f == b.f && ((a.s.f > b.s.f) || (a.s.f == b.s.f && a.s.s > b.s.s))));
}

int main () {
	int T;
	scanf("%d",&T);
	while(T--){
		scanf("%d%d",&n,&m);
		for(int i=1;i<=m;i++){
			scanf("%d%d%d",&g[i].s.s,&g[i].s.f,&g[i].f);
			if(g[i].s.f > g[i].s.s) swap(g[i].s.f,g[i].s.s);
		}
		sort(g+1,g+m+1,cmp);
		for(int i=1;i<=n;i++){
			p[i] = i;
			rnk[i] = 1;
			deg[i] = 0;
		}
		ll ans = 0;
		for(int i=1;i<=m;i++){
			v = g[i].s.f, u = g[i].s.s;
			if(find_set(v) != find_set(u)){
				join(u,v);
				deg[u]++;
				deg[v]++;
				ans += g[i].f;
			}
		}
		printf("%lld\n",ans);
		for(int i=1;i<=n;i++){
			printf("%d ",deg[i]);
		}
		puts("") ;
	}
return 0;
}