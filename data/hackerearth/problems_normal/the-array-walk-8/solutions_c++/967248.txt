#include <bits/stdc++.h>

using namespace std;

#define ll long long int
#define si(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define ss(a) scanf("%s",a);
#define pi(a) printf("%d\n",a);
#define pl(a) printf("%lld\n",a);

#define mod int(1e9 +7)
#define MAX int(1e5 + 10)
#define SIZE 32000 // number of primes below 10000000
bool prime[SIZE+1]={false};
int pr[SIZE],npr=0;


ll power(ll a ,ll b ,int MOD)
{
  ll x=1,y=a;
  while(b)
  {
    if(b%2)
    x=(x*y)%MOD;
    y=(y*y)%MOD;
    b/=2;
  }
  return x;
}

void sieve()
{
	int i,j,it,a;
	int sq = sqrt(SIZE);
	for(i=3;i<=sq;i+=2)
	{
		if(prime[i]==false) 
		{
			for(j=i*i;j<=SIZE;j+=i) prime[j]=true;
		}
	}

	pr[++npr]=2;
	for(i=3;i<=SIZE;i+=2)
	{
		if(prime[i]==false) pr[++npr]=i;
	}
	pr[npr+1] = 1e9 + 1e3;
}

ll f(ll b,ll a)
{
	ll m=a,kk=a;
	int p=1;
	
	while(p<=npr)
  {
		if ( a % pr[p] ==0)
    {
			m /=pr[p];
			m *= (pr[p]-1);
			while ( a % pr[p]==0 ) a/=pr[p];
		}
		p++;
		if (pr[p]>a) break;
	}
	if(a>1)
  {
		m /= a;
		m *= a-1;
	}
	return power( b, m-1, kk);
}

int main()
{
  ll a,b,c,a2,b2,c2,d,Moves,g,y,inverse;
	sieve();
	int t;
	cin>>t;
	while ( t--)
  {
		cin >> c>> a>> b;
		if ( c % a==0)
    {
			cout << c/a <<endl;
			continue;
		}
		a2 = a;
		b2 = b;
		c2 = c;

		d = (a - c%a) % a;
		g = __gcd(b, a);
		if ( d % g != 0)
    {
			cout << -1<<endl;
			continue;
		}
		else
    {
			b/=g;
			d/=g;	
			a/=g;
			inverse = f(b,a);
			y = (d * inverse ) % a;
		  Moves = y + ( b2 * y +  c2) /a2;
			cout << Moves << endl;
		}
	}
}
