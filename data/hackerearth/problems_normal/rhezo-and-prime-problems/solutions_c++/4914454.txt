#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll n,arr[5005],dp[5005],sum[5005];
bool mark[5005];
/*ll rec(ll idx,ll num,ll sum)
{
    if(idx>=n)
    {
        if(mark[num]==0)
        return sum;
        else
            return LLONG_MIN;
 
    }
    if(dp[idx][num]!=-1)
        return dp[idx][num];
    if(mark[num]==0)
    {
        return dp[idx][num]=max(sum,max(rec(idx+1,num+1,sum+arr[idx]),sum+rec(idx+1,0,0)));
    }
    else
        return dp[idx][num]=max(rec(idx+1,num+1,sum+arr[idx]),sum+rec(idx+1,0,0));
}
*/
int main()
{
    ll i,x,j,maxi;
    mark[0]=mark[1]=1;
    sum[0]=0;
    for(i=2;i<800;i++)
    {
        if(mark[i]==0)
        {
            x=i;
            while(x*i<5005)
            {
                mark[x*i]=1;
                x++;
            }
        }
    }
    memset(dp,-1,sizeof dp);
   cin>>n;
   for(i=1;i<=n;i++)
   {
       cin>>arr[i];
       sum[i]=sum[i-1]+arr[i];
   }
   memset(dp,0,sizeof dp);
   maxi=-1;
   for(i=1;i<=n;i++)
   {
       dp[i]=dp[i-1];
       for(j=1;j<5005;j++)
       {
           if(mark[j]==0&&i-(j+1)>0)
            dp[i]=max(dp[i],sum[i]-sum[i-j]+dp[i-j-1]);
            if(mark[j]==0&&i-j==0)
                dp[i]=max(dp[i],sum[i]-sum[i-j]+dp[i-j]);
       }
 
       maxi=max(maxi,dp[i]);
   }
 
   cout<<maxi;
   return 0;
}