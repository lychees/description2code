#include <iostream>
#include<bits/stdc++.h>
using namespace std;

bool pr[5001];
	
	void getprimes(){
		int n=5001;
		memset(pr,true,sizeof(pr));
		pr[0]=1;//not prime
		for(int i=2;i*i<=n;i++){
			if(pr[i]==true){
			//	cout<<i<<endl;
				for(int j=i*2;j<=n;j=j+i){
					pr[j]=false;
				}
			}
		}
	}



int main()

{
	
	int n;
	cin>>n;
	
    getprimes();
    vector<int> a(n+1);
    a[0]=0;
    for(int i=1;i<=n;i++){
    	cin>>a[i];
    	a[i]=a[i]+a[i-1];
    }
    
    vector<int> curp;
    for(int i=2;i<=n;i++){
    	if(pr[i]==true){
    		curp.push_back(i);
    	//	cout<<"prime"<<i<<endl;
    	}
    }
    
    int dp[n+1];
    int maxi=0;
    memset(dp,0,sizeof(dp));
    dp[0]=0;
    dp[1]=0;
    dp[2]=a[2];
    for(int i=3;i<=n;i++){
    	int j=curp[1];
    	int x=1;
    	dp[i]=a[i]-a[i-2]+dp[i-3];
    	
    	while(i-j>=0 && x<curp.size()){
    	//	cout<<j<<"xsc"<<endl;
    		//	cout<<dp[i]<<a[i]<<"bef"<<a[i-j]<<endl;
    		int xx=(i-j-1)>=0?dp[i-j-1]:0;
    		int o=max(a[i]-a[i-j]+xx,dp[i-1]);
    		dp[i]=max(dp[i],o);
    	//	if(i==3)
    		//cout<<dp[3]<<" gh"<<j<<" "<<a[3]-a[i-j]<<o<<dp[i-1]<<endl;
    		
    		j=curp[++x];
    	//	cout<<dp[i]<<endl;
    	}
    	//		cout<<dp[i]<<endl;
    		maxi=max(maxi,dp[i]);
    
    }
    
    
    cout<<maxi;
    
    return 0;
}
