#include <bits/stdc++.h>
 
using namespace std;
 
int main()
{
        int t;
        scanf("%d", &t);
        while (t--)
        {
                int n, m, k;
                scanf("%d%d%d", &n, &m, &k);
                vector<int> X(n), C(m), Z(m);
                for (int i = 0; i < n; i++)
                        scanf("%d", &X[i]);
                for (int i = 0; i < m; i++)
                        scanf("%d", &C[i]);
                for (int i = 0; i < m; i++)
                        scanf("%d", &Z[i]);
                vector<__int128_t> open(n);
                __int128_t o = 1;
                for (int i = 0; i < n; i++)
                        for (int j = 0; j < m; j++)
                                if (__gcd(C[j], X[i]) != 1)
                                        open[i] |= o << j;
                int lim = 1 << n;
                int ans = 0;
                for (int mask = 0; mask < lim; mask++)
                {
                        if (__builtin_popcount(mask) > k)
                                continue;
                        __int128_t boxes = 0;
                        for (int idx = 0; idx < n; idx++)
                                if (mask & (1 << idx))
                                        boxes |= open[idx];
                        int val = 0;
                        for (int idx = 0; idx < m; idx++)
                                if (boxes & (o << idx))
                                        val += Z[idx];
                        ans = max(ans, val);
                }
                printf("%d\n", ans);
        }
        return 0;
}