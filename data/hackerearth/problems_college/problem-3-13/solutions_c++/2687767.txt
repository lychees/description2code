#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

int a[2001][2001];
int ans[2001][2001];
int main(){
	int r,c,i,j;
	cin >> r >> c;
	for(i=1;i<=r;i++){
		for(j=1;j<=c;j++){
			cin >> a[i][j];
			ans[i][j] = 1;
		}
	}
	REP(i,1,r){
		NREP(j,c-1,1){
			if(a[i][j] == a[i][j+1])
			ans[i][j] = 1 +  ans[i][j+1];
		}
	}
	
	
	REP(j,1,c){
		NREP(i,r-1,1){
			//cout << i << j;
			if(a[i][j] == a[i+1][j])
			//cout << i << " " << j << endl;
			ans[i][j] = 1 +  ans[i+1][j];
		}
	}
	
	/*REP(i,1,r){
		REP(j,2,c){
			if(a[i][j] == a[i][j - 1])
			ans[i][j] = ans[i][j] +  ans[i][j-1];
		}
	}*/
	int maximum = 1;
	for(i = 1; i <= r; i++) {
		for(j = 1; j <= c; j++) {
			//cout << ans[i][j] << " ";
			maximum = max(ans[i][j],maximum);
		}
		//cout << endl;
	}
	cout << maximum << endl;
	return 0;
}