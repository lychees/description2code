#include <iostream>
#include<math.h>
#include <algorithm>
#include <vector>
using namespace std;
int lcm(int n1,int n2)
{
	int x=n1,y=n2;
  while(n1!=n2){
      if(n1>n2)
           n1=n1-n2;
      else
      n2=n2-n1;
  }
  return (x*y/n1);
}
int primeFactors(int n)
{
	vector<int> myvector;
    int cnt = 0;
    // Print the number of 2s that divide n
    while (n%2 == 0)
    {
        if(find(myvector.begin(), myvector.end(), 2) == myvector.end()){
        	     myvector.push_back(2);
                }
        n = n/2;
    }
 
    // n must be odd at this point.  So we can skip one element (Note i = i +2)
    for (int i = 3; i <= sqrt(n); i = i+2)
    {
        // While i divides n, print i and divide n
   
        while (n%i == 0)
        {
        	   if(find(myvector.begin(), myvector.end(), i) == myvector.end()){
        	     myvector.push_back(i);
                }
          
            n = n/i;
        }
    }
 
    // This condition is to handle the case whien n is a prime number
    // greater than 2
    if (n > 2)
     {
     	 if(find(myvector.begin(), myvector.end(), n) == myvector.end()){
        	     myvector.push_back(n);
                }	
     }
       
      return myvector.size();
}

bool prime(int n)
{
	int  flag = 0;
	if(n==1)
	  return false;
	 for(int i=2; i<=n/2; ++i)
    {
        // condition for nonprime number
        if(n%i==0)
        {
            flag=1;
            break;
        }
    }
  if (flag==0)
  return true;
  else
  return false;
}
int main()
{
   int t;
   cin>>t;
   while(t--)
   {
   	int a,b;
   	cin>>a;
   	cin>>b;
  
   	if(prime(primeFactors(lcm(a,b)))==true)
   	 cout<<"Yes\n";
   	 else
   	 cout<<"No\n";
   	
   	
   }
}
