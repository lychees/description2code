#include <bits/stdc++.h>

using namespace std;

struct edge
{
    int u, v, w;
    bool operator< (const edge& other) const
    {
        if(w!=other.w)
            return w<other.w;
        if(u!=other.u)
            return u>other.u;
        return v>other.v;
    }
} edges[100000];

int N, M;
int fa[50001];
int deg[50001];

int find(int u)
{
    if(u!=fa[u])
        fa[u]=find(fa[u]);
    return fa[u];
}

int merge(int u, int v)
{
    u=find(u), v=find(v);
    if(u==v)
        return 0;
    fa[u]=v;
    return 1;
}

void _main()
{
    scanf("%d%d", &N, &M);
    int a, b, c;
    for(int i=0; i<M; i++)
    {
        scanf("%d%d%d", &a, &b, &c);
        if(a>b)
            swap(a, b);
        edges[i]=(edge){a, b, c};
    }
    sort(edges, edges+M);
    for(int i=1; i<=N; i++)
        fa[i]=i, deg[i]=0;
    long long ans=0;
    for(int i=0; i<M; i++)
    {
        if(merge(edges[i].u, edges[i].v))
        {
            ans+=edges[i].w;
            deg[edges[i].u]++;
            deg[edges[i].v]++;
        }
    }
    printf("%lld\n", ans);
    for(int i=1; i<=N; i++)
        printf("%d%c", deg[i], " \n"[i==N]);
}

int main()
{
    int T;
    scanf("%d", &T);
    while(T--)
        _main();
    return 0;
}
