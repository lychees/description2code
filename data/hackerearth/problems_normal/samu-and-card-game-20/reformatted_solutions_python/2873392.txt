'''
# Read input from stdin and provide input before running code

name = raw_input('What is your name?\n')
print 'Hi, %s.' % name
'''
__author__ = 'Jayadeep'


class Case(object):
    def __init__(self):
        self.dimensions = None
        self.cards = []

    def __str__(self):
        card_string = "Dimensions: " + str(self.dimensions)
        card_string += "\n"
        card_string += "Cards: " + str(self.cards)
        return card_string


cases = []


def get_case():
    case = Case()
    dimensions = raw_input().split()
    case.dimensions = (int(dimensions[0]), int(dimensions[1]))
    k = int(raw_input())
    for card in range(k):
        readings = raw_input().split()
        (top, bottom) = int(readings[0]), int(readings[1])
        case.cards.append((top, bottom))
    cases.append(case)


number_of_test_cases = int(raw_input())
for case in range(number_of_test_cases):
    get_case()

total_jumps = []

for case in cases:
    jumps = 0
    current = [1, 1]
    dimensions = case.dimensions
    for card in case.cards:

        jumpX = jumpY = 0
        if card[0] > 0:
            jumpX = (dimensions[0] - current[0]) / card[0]
        elif card[0] < 0:
            jumpX = (1 - current[0]) / card[0]

        if card[1] > 0:
            jumpY = (dimensions[1] - current[1]) / card[1]
        elif card[1] < 0:
            jumpY = (1 - current[1]) / card[1]
        jump = min(jumpX, jumpY)

        if jump == 0:
            if card[0] == 0:
                jump = jumpY
            elif card[1] == 0:
                jump = jumpX
        current[0] += (jump * card[0])
        current[1] += (jump * card[1])
        jumps += jump
    total_jumps.append(jumps)

for jumps in total_jumps:
    print jumps
