#include <bits/stdc++.h>
using namespace std;
inline void fi(int *a)
{
 register char c=0;
 while (c<33) c=getchar_unlocked();
 *a=0;
 int tmp = 0;
 while (c>33)
 {
     if ( c == 45 ) tmp = 1;
     else *a=*a*10+c-'0';
     c=getchar_unlocked();
 }
 if ( tmp == 1 ) *a = 0-(*a);
}
int main()
{
	int n;
	map <string, vector<int> > m;
	map <string, vector<int> > :: iterator it;
	vector<int> :: iterator sz;
	string s;
	fi(&n);
	for ( int i = 0; i < n; i++ ) {
		cin >> s;
		for ( int j = 0; j < (int)s.size(); j++ ) {
			string s1("");
			for ( int k = j; k < (int)s.size(); k++ ) {
				s1.push_back(s[k]);
				m[s1].push_back(i);
			}
		}
	}
	
	for(it = m.begin(); it != m.end(); ++it){
		sz = unique((it->second).begin(),(it->second).end());
		(it->second).resize(distance((it->second).begin(),sz));
	}
		
	int q;
	fi(&q);
	while ( q-- ) {
		int l,r;
		fi(&l); fi(&r);
		cin >> s;
		l--; r--;
		int ans;
		if ( s.empty() ) ans = r-l+1;
		else {
			int idx2 = upper_bound(m[s].begin(),m[s].end(),r) - m[s].begin();
			int idx1 = lower_bound(m[s].begin(),m[s].end(),l) - m[s].begin();
			ans = idx2-idx1;
		}
		printf("%d\n", ans);
	}
    return 0;
}