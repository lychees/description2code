#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;


#define ll long long
#define ff first
#define ss second
#define mpa make_pair
#define MOD 1000000007
#define pb push_back
#define lld I64d
#define MXN 1000000

int bitcnt(int mask){return __builtin_popcount(mask);}
int SET(int N,int pos){	return N=N | (1<<pos);}
int RESET(int N,int pos){	return N= N & ~(1<<pos);}
int check(int N,int pos){	return (N & (1<<pos));}
int toggle(int N,int pos){if(check(N,pos))return N=RESET(N,pos);return N=SET(N,pos);}
void PRINTBIT(int N){	printf("("); for(int i=6;i>=1;i--)	{bool x=check(N,i);cout<<x;}	puts(")");}
int mod(int a, int b) { return a - a/b * b;}

int A;
int B;

bool dp[1001][1001][2];
bool vis[1001][1001][2];

void inp()
{
	scanf("%d%d", &A, &B);
}

bool rec(int A, int B, int turn)
{
	if(turn == 0)
		if(A == 1)
			return false;
	
	if(turn == 1)
		if(B == 1)
			return false;
	
	if(vis[A][B][turn])
		return dp[A][B][turn];
	
	vis[A][B][turn] = true;
	
	int gcd = __gcd(A, B);
	bool ans = false;
	if(gcd > 1) {
		if(turn == 0) {
			ans |= (!rec(A, B - 1, 1));
			ans |= (!rec(A, B/gcd, 1));
		} else {
			ans |= (!rec(A - 1, B, 0));
			ans |= (!rec(A/gcd, B, 0));
		}
	} else if(gcd == 1) {
		if(turn == 0)
			ans |= (!rec(A, B - 1, 1));
		else
			ans |= (!rec(A - 1, B, 0));
	}
	
	return dp[A][B][turn] = ans;
}

void solve()
{
	if(A == B && A == 1) {
		puts("Draw");
		return ;
	}
	
	if(A == 1) {
		puts("Chandu Don"); 
		return;
	} else if(B == 1) {
		puts("Arjit");
		return;
	}
	
	bool ans = rec(A, B, 0);
	if(ans) {
		puts("Arjit");
	} else {
		puts("Chandu Don");
	}
	
	return;
}

int main()
{
	int T;
	scanf("%d", &T);
	
	memset(vis, false, sizeof vis);
	
	while(T--) {
		inp();
		solve();
	}
	
	return 0;
}
