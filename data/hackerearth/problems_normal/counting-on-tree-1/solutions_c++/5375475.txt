#include <bits/stdc++.h>
using namespace std; 
#define MOD 1000000007
int n,k; 
vector<int>G[100005];
int a[100005];
long long ans = 0;
long long dp[50005][105];
long long dp2[50005][105];
void dfs(int u, int p) {
    for(int j=0; j<=100; j++) dp[u][j]=0;
    if (a[u] <= k)
        dp[u][a[u]] = 1;
    for(int i=0; i<(int)G[u].size(); i++) {
        int v = G[u][i];
        if(v == p) continue; 
        dfs(v,u); 
        
        for(int j=0; j<=k; j++) dp2[u][j] = dp[u][j];
        for(int j=0; j<=k; j++) {
            for(int j2=0; j2<=j; j2++)
                dp2[u][j] += dp[u][j2] * dp[v][j-j2], dp2[u][j]%=MOD;
        }
        for(int j=0; j<=k; j++) dp[u][j] = dp2[u][j];
    }
    ans += dp[u][k];
    ans%=MOD;
}
int main() {
    int t;
    scanf("%d",&t);
    while(t--) {
        scanf("%d%d",&n,&k); 
        for(int i=1; i<=n; i++) {
            scanf("%d",&a[i]);
            G[i].clear();
        }
        for(int i=1; i<n; i++) {
            int x,y;
            scanf("%d%d",&x,&y); 
            G[x].push_back(y); 
            G[y].push_back(x);
        }
        ans = 0;
        dfs(1, -1);
        printf("%d\n", ans);
    }
    return 0;
}