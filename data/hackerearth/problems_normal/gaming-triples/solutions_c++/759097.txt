#include<bits/stdc++.h>
using namespace std;
#define scan(x) scanf("%d",&x)
#define printll(x) printf("%lld\n",x)
#define all(x) x.begin(),x.end()
#define ft first
#define sd second
vector<int> BIT;
vector<long long> A,B;
vector< pair<int,int> > arr;
void update(int idx,int n){
while(idx<=n){
BIT[idx]+=1;
idx+=(idx&(-idx));
}
}
int summ(int idx){
int s=0;
while(idx>0){
s+=BIT[idx];
idx-=(idx&(-idx));
}
return s;
}
int query(int l,int r){
return summ(r)-summ(l-1);
}
int main(){
int t;
scan(t);
while(t--){
int n;
scan(n);
arr.resize(n);
A.resize(n+1);
B.resize(n+1);
BIT.resize(n+1);
fill(all(BIT),0);
fill(all(A),0);
fill(all(B),0);
for(int i=0;i<n;i++){
scan(arr[i].ft);
arr[i].sd=i+1;
}
int st;
scan(st);
sort(all(arr));
int i=n-1;
while(i>=0){
int x=arr[i].ft;
int c=0;
while(i>=0&&x==arr[i].ft){
A[arr[i].sd]=query(arr[i].sd,n);
A[arr[i].sd]=1LL*A[arr[i].sd]*query(1,arr[i].sd);	
i--,c++;
}
int idx=i;
while(c--){
idx++;
update(arr[idx].sd,n);
}	
}
fill(all(BIT),0);
i=0;
while(i<n){
int x=arr[i].ft;
int c=0;
while(i<n&&x==arr[i].ft){
B[arr[i].sd]=query(1,arr[i].sd);
B[arr[i].sd]=1LL*B[arr[i].sd]*query(arr[i].sd,n);	
i++,c++;
}
int idx=i;
while(c--){
idx--;
update(arr[idx].sd,n);
}	
}
long long sum1=0,sum2=0;
for(int i=1;i<=n;i++)
{	sum1+=A[i];
sum2+=B[i];
}
if(st){
sum1>=sum2 ? printf("Ananya\n"): printf("Sarika\n");
}
else{
sum1<sum2 ? printf("Ananya\n"): printf("Sarika\n");
}	
if(sum2<=sum1){
printf("%lld\n",min(sum1,sum2)*2);
}else{
printf("%lld\n",min(sum1,sum2)*2+1);
}
}
return 0;
}