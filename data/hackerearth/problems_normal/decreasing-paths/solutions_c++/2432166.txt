#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
long long int dp[1002][1002];
int A[1002][1002];
int dx[] = { 0, 0, 1, -1 };
int dy[] = { 1, -1, 0, 0 };
bool use[1002][1002];
int n;
#define MOD 1000000007
inline long long int dfs(int a, int b){
	if (use[a][b]){
		return dp[a][b];
	}
	use[a][b] = true;
	dp[a][b] = 1;
	for (int i = 0; i < 4; i++){
		int aa = a + dx[i];
		int bb = b + dy[i];
		if (aa >= 0 && bb >= 0 && aa < n&&bb < n){
			if (A[aa][bb] < A[a][b]){
				dp[a][b] += dfs(aa, bb);
				dp[a][b] %= MOD;
			}
		}
	}
	return dp[a][b];
}
int main(){
	cin >> n;
	for (int i = 0; i < n; i++){
		for (int j = 0; j < n; j++){
			scanf("%d", &A[i][j]);
		}
	}
	long long int ans = 0;
	for (int i = 0; i < n; i++){
		for (int j = 0; j < n; j++){
			ans += dfs(i, j);
			ans %= MOD;
		}
	}
	printf("%lld\n", ans);
	return 0;
}