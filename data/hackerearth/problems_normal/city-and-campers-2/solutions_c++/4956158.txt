#include<bits/stdc++.h>
#define max 100005
using namespace std;
int parent[max];
int size[max];
int max_val=1;
multiset<int >set1;
void fill(int n)
{
	for(int i=1;i<=max;i++)
	{
		parent[i]=i;
		size[i]=1;
	}
}
int find_parent(int x)
{
	if(parent[x]==x)
	{
		return x;
	}
	return parent[x] = find_parent(parent[x]);
}
int main()
{
	int n,q;
	cin>>n>>q;
	fill(n);
	
	multiset<int >::iterator it1,it2;
	for(int i=1;i<=n;i++)
	{
		set1.insert(1);
	}
	while(q--)
	{
		int x,y;
		cin>>x>>y;
		int px = find_parent(x);
		int py = find_parent(y);
		
		if(px!=py)
		{
			parent[py] = px;
			set1.erase(set1.find(size[py]));
			set1.erase(set1.find(size[px]));
			size[px] = size[px] + size[py];
		//	size[py]=0;
			set1.insert(size[px]);
		
		}
		if(set1.size()==1)
		{
			cout<<"0"<<"\n";
		}
		else
		{
			int min = INT_MAX;
			for(it1=set1.begin();it1!=set1.end();it1++)
			{
				it2 = it1;
				it2++;
				if(it2!= set1.end() && abs(*it2-*it1)<min)
				{
					min = abs(*it2-*it1);
				}
				if(min==0)
				break;
			}
			cout<<min<<"\n";
		}
	}
}