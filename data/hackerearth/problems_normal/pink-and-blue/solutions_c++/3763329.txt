#include <bits/stdc++.h>
#define pb push_back
using namespace std;

vector<int> grp[100005];
bool visited[100005];
char a[100005];
int val[100005];
int flag = 0;
void dfs(int vtx , int cod)
{
	visited[vtx]  = true;
	val[vtx]  = cod ;
	for(int ele : grp[vtx])
	{   if (!visited[ele])
		{
			dfs(ele , 1 - cod);
		
		}
		else if (visited[ele] && val[vtx] == val[ele])
	    flag = 1; 
		
	}
	
}

int main()
{
   int n , m ;
   cin >> n >> m ;
   for(int i = 1 ; i<= n ; ++i)
     cin >> a[i] ;
   
   for(int i = 1; i<= m ; ++i )
   {
   	int x , y;
   	cin >> x >> y;
   	grp[x].pb(y);
   	grp[y].pb(x);
   	
   }
     dfs(1,0);
     int cnt1 = 0 , cnt2 = 0;
     for(int i = 1; i <= n; i++)
     {
     	if (val[i]==0 && a[i] == 'G') cnt1++;
     	else if (val[i]==1 && a[i] == 'B') cnt1++;
     }
      fill(visited , visited + 100003 , false);
      //fill(val , val + 100003 , 0);
    
      
       dfs(1,1);
     
     for(int i = 1; i <= n; i++)
     {
     	if (val[i]==0 && a[i] == 'G') cnt2++;
     	else if (val[i]==1 && a[i] == 'B') cnt2++;
     }
     
     
     
     cout << min(cnt1,cnt2);
     return 0;
}
