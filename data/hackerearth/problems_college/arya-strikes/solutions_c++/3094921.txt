#include <iostream>
using namespace std;
int moves[][2] = {0,1, 1,0};
int N, mat[55][55];

bool is_valid(int n, int m) {
	if (n >= N || m >= N || n < 0 || m < 0) return false;
	return true;
}
bool DFS(int n, int m) {
	if (n == N-1 && m == N-1) return true;
	bool ans = false;
	for (int i = 0; i < 2; i++) {
		int dx = moves[i][0] + n, dy = moves[i][1] + m;
		if (is_valid(dx, dy) && mat[dx][dy] == 1) {
			ans |= DFS(dx, dy); 
		}
	}
	return ans;
}
int main()
{
	int T;
    for (cin >> T; T; T--) {
    	cin >> N;
    	for (int i = 0; i < N; i++) for (int j = 0; j < N; j++) cin >> mat[i][j];
    	cout << (DFS(0,0) ? "POSSIBLE" : "NOT POSSIBLE") <<"\n";
    }
    return 0;
}
