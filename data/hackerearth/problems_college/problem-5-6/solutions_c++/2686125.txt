#include <bits/stdc++.h>
using namespace std;

int dp[1001][1001],n,pri[1001];
bool vis[1001][1001];

int solve(int cur,int price)
{
	//cout<<cur<<" "<<price<<endl;
	if(price>n)
	 return -12345678;
	 
	if(cur==n)
	{
		//cout<<"Hi"<<" "<<price<<endl;
		if(price==n)
		  return 0;
		return -12345678;
	}
	
	if(vis[cur][price]==1)
	 return dp[cur][price];
	 
	dp[cur][price]=-12345678;
	
	dp[cur][price]=max(dp[cur][price],solve(cur+1,price));
	dp[cur][price]=max(dp[cur][price],pri[cur]+solve(cur,price+cur+1));
	
	
	vis[cur][price]=1;
	return dp[cur][price];
}

int main()
{
    int t;
    scanf("%d",&t);
    
    
    while(t--)
    {
    	int x;
    	cin>>n>>x;
    	
		for(int i=0; i<n; i++) {
			cin>>pri[i];
			pri[i]-=x;
		}
		
		memset(vis,0,sizeof vis);
		cout<<solve(0,0)<<endl;
		
    }
    return 0;
}
