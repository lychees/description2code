#include <bits/stdc++.h>

using namespace std;



#define ull 						unsigned long long
#define ll 							long long
#define V(x)						vector<x>
#define pii 						pair<int,int>
#define rep(i,n)					for(int i=0;i<n;i++)
#define F(i,a,b)               		for(int i=a;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ((b).find(a) != (b).end())
#define pb(x)                        push_back(x)
#define fill(a,v)                   memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define fi                           first
#define se                           second
#define s(n)                        scanf("%d",&n)
#define sl(n)                       scanf("%lld",&n)
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define MOD 1000000007

map<ll,ll>mp;

void factorize(long long a){
	//long long c=0;
	while(a%2==0){
		//c++;
		a=a/2;
	}
	/*if(c>0){
		if(mp.find(2)!=mp.end()){
			if(c>mp[2]){
				mp[2]=c;
			}
		}
		else{
			mp.insert(make_pair(2,c));
		}
	}*/
	for(ll i=3;i<=sqrt(a);i+=2){
		long long c=0;
		while(a%i==0){
			c++;
			a=a/i;
		}
		if(c>0){
			if(mp.find(i)!=mp.end()){
					mp[i]=(mp[i]%MOD+c%MOD)%MOD;
				}
			else{
				mp.insert(make_pair(i,c));
			}
		}
	}
	if(a>2){
		if(mp.find(a)!=mp.end()){
			mp[a]=(mp[a]%MOD+1%MOD)%MOD;
		}
		else{
			mp.insert(make_pair(a,1));
		}
	}

}





int main(){
	int n;
	s(n);
	rep(i,n){
		ll num;
		sl(num);
		factorize(num);
	}
	map<ll,ll>::iterator it;
	ll ans=4%MOD;
	for(it=mp.begin();it!=mp.end();it++){
		if(((*it).fi)%4==3){
			if((((*it).se)%2)==1)ans=0;
		}
		if(((*it).fi)%4==1){
			ans=(ans%MOD*(((*it).se)%MOD+1%MOD)%MOD)%MOD;
		}
	}
	printf("%lld\n",ans%MOD);
	return 0;
}