#include<bits/stdc++.h>
using namespace std;
#define N '\n'
#define ll long long
#define ull unsigned long long int
#define ii int
#define S string
#define I cin
#define O cout
#define fr(j) for(i=0;i<j;++i)
#define rf(j) for(i=j-1;i>=0;--i)
#define fe(k) for(l=1;l<=k;++l)
#define ft(test) for(;test;--test)
#define INF 0x3f3f3f3f
#define MOD 100000000+7
#define MAX 1000000
vector<ll> v[MAX];
bool visit[MAX];
ll cc[MAX];
void dfs(ll i ,ll id)
{
visit[i]=true;
ll j;
cc[i]=id;
for(j=0;j<v[i].size();j++)
{
if(!visit[v[i][j]])	
	dfs(v[i][j],id);
}	
}

void yes() {O<<"YES"<<N;}
void no() {O<<"NO"<<N;}

int main()
{
ll test=0,q,l,r,e,i,j,k,x,y,m=0,n=0,flag=0,sum=0,x1,y1,x2,y2,x3,y3,a,b,c,d;
S s,s1;

I>>test;

ft(test)
{
vector<pair<ll,ll> > pr;
I>>m>>n;
memset(visit,false,sizeof(visit));
fr(m) v[i].clear();
memset(cc,0,sizeof(cc));
fr(n)
{
I>>x>>s>>y;
x--;y--;
if(s=="=")
{
v[x].push_back(y);	
v[y].push_back(x);
}
else
{
pr.push_back(make_pair(x,y));
}
}
fr(m)
{
if(!visit[i]) dfs(i,i);	
}
flag=0;
fr(pr.size())
{
x=pr[i].first;
y=pr[i].second;
if(cc[x]==cc[y])
{

flag=1;
break;	
}
}
flag==1?no():yes();
}
return 0;
} 