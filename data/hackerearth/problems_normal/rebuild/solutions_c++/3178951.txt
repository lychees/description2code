#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define f first
#define maxn 101000
#define s second
#define ll long long int
#define inf 1000000014
#define infl (ll)(1e18)
#define mod 1000000007
#define sz(x) (int) x.size()
using namespace  std;
typedef pair< int , int > p;
typedef pair<int ,p > pp;
std::map< int, set< pp > > mapp;
std::map<int, set < pp > > :: iterator m_it;
set< pp > :: iterator s_it;
int arr[maxn];
int sz[maxn];
int deg[maxn];
int root(int a)
{
  while(arr[a]!=a)
  {
    a = arr[a];
    arr[a] = arr[arr[a]];
  }
  return a;
}
void unio(int a,int b)
{
  int ra = root(a);
  int rb = root(b);
  if(sz[ra]>sz[rb])
  {
    sz[ra]+=sz[rb];
    arr[rb]=ra;
  }
  else
  {
    sz[rb]+=sz[ra];
    arr[ra]=rb;
  }
}
int main(int argc, char const *argv[])
{
  int t,n,m,a,b,c;
  cin>>t;
  while(t--)
  {mapp.clear();
    cin>>n>>m;int mm,mi;
    for(int i=1;i<=m;i++)
    {
      scanf("%d%d%d",&a,&b,&c);
      if(i<=n)
      {
        arr[i]=i;
        sz[i]=1;
        deg[i]=0;
      }
      mm = max(a,b);
      mi = min(a,b);
     mapp[c].insert(mp(mi,mp(mm,mi)));
    }
    arr[n]=n;sz[n]=1;deg[n]=0;
    ll cost=0ll;
    m_it = mapp.begin();
    while(m_it!=mapp.end())
    {//cout<<"mit"<<m_it->f<<"\n";
      s_it = mapp[m_it->f].end();
      s_it--;
      while(1)
      {
        int ff = (s_it->s).f;
        int ss = (s_it->s).s;
       //cout<<ff<<ss<<"\n";
        if(root(ff)!=root(ss))
        {//cout<<ff<<" "<<ss<<"\n";
          unio(ff,ss);
          cost = cost+m_it->f;
          deg[ss]+=1;
          deg[ff]+=1;
        }
        if(s_it==mapp[m_it->f].begin())
            {mapp[m_it->f].clear();break;}
          s_it--;
      }
      m_it++;
    }
    cout<<cost<<"\n";
    for(int i=1;i<=n;i++)
        cout<<deg[i]<<" ";
    cout<<"\n";
  }
  return 0;
}
