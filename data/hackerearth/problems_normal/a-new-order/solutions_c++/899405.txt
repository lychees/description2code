#include <bits/stdc++.h>
using namespace std;

#define l 26
int n;
vector<string> s;
bool g[l][l];
int d[l];
int dn[l];

void su() {
	for(int i = 0; i < l; i++) {
		d[i] = -1;
		for(int j = 0; j < l; j++) {
			g[i][j] = false;
		}
	}
	
}

void ej(string a, string b) {
	int i,j;
	i = j = 0;
	while(i < a.size() && j < b.size() && a[i] == b[j]) {
		i++; j++;
	}
	if( i == a.size() || j == b.size() ) return;
	g[a[i]-'a'][b[j]-'a'] = true;
	
}

void cald() {
	for(int i = 0; i < l; i++) {
		for(int j = 0; j < l; j++) {
			if(g[i][j]) {
				if ( -1 == d[j] ) d[j] = 1;
				else d[j]++;
			}
		}
	}
}

int findnmark() {
	bool f = false;
	for(int i = 0; i < l; i++) dn[i] = d[i];
	for(int i = 0; i < l; i++) {
		if(0 == dn[i]) {
			f = true;
			cout << (char)('a'+i);
			d[i] = -1;
			for(int j = 0; j < l; j++) {
				if(g[i][j]) {
					d[j]--;
				}
			}
		}
	}
	
	if( f ) {
		
		return 1;
	}
	return -1;
}

void topo() {
	cald();
	while( -1 != findnmark() ) {
		cout << endl;
	};
}

void doit() {
	for(int i = 0; i < s.size(); i++ ) {
		for(int j = i+1; j < s.size(); j++) {
			ej(s[i], s[j]);
		}
	}
	topo();
}

int main()
{
    cin >> n;
    string str;
    su();
    for(int i = 0; i < n; i++) {
    	cin >> str;
    	s.push_back(str);
    	for(int i = 0; i < str.size(); i++) {
    		d[str[i]-'a'] = 0;
    	}
    }
    doit();
    return 0;
}
