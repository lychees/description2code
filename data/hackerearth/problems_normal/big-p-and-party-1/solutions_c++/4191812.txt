#include<iostream>
#include<vector>
#include<queue>
using namespace std;
vector<int> g[1001];
long int dist[1001],visited[1001];
void bfs(long int i)
{
	for(int p=0;p<1001;p++)
	dist[p]=-1;
	queue<long int> q;
	q.push(i);
	dist[i]=0;
	while(!q.empty())
	{
		long int j=q.front();
		q.pop();
		visited[j]=1;
		for(long int k=0;k<g[j].size();k++)
		{
			if(visited[g[j][k]]==0)
			{
				q.push(g[j][k]);
				if(dist[g[j][k]]==-1 || dist[g[j][k]]>dist[j]+1)
				dist[g[j][k]]=dist[j]+1;
			}
		}
	}
}
int main()
{
	int a,b,i,x,y;
	cin>>a>>b;
	for(i=0;i<b;i++)
	{
		cin>>x>>y;
		g[x].push_back(y);
		g[y].push_back(x);
	}
	bfs(0);
	for(i=1;i<=a-1;i++)
	{
		if(dist[i]==-1)
		cout<<"INF"<<endl;
		else
		cout<<dist[i]<<endl;
	}
}