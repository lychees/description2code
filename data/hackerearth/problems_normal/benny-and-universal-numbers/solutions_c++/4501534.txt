//Kyokai no Kanata //
#include<bits/stdc++.h>

using namespace std;

typedef long long int LL;
typedef pair<LL,LL> II;
typedef vector<II> VII;
typedef vector<LL> VI;
typedef vector< VI > VVI;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cerr<<name<<" : "<<arg1<<endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
  const char* comma=strchr(names+1,',');
  cerr.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...)
#endif
VI UN;
VII TMP,V;
int rem[20],P[101];
inline void create()
{
  P[0]=P[1]=1;
  for(int i=2;i*i<=101;i++)
    if(!P[i])
      for(int j=i*i;j<=101;j+=i) P[j]=1;
  for(int i=1;i<=9;i++) V.PB({i,0});
//  int cnt=0;
  for(int i=2;i<=15;i++) 
  {
    TMP.clear();
     for(auto v:V){
        int j = (i+rem[i]-((v.F*10)%i))%i;
     //   trace(j,i);
        for(;j<10;j+=i){
          II A = {(v.F*10)+j,v.S};
          if(!P[A.F%100]) A.S=1;
          TMP.PB(A);
      //    cnt++;
        }
     }
     V.clear();
     for(auto v:TMP){
   //    trace(v.F,v.S);
       if(v.S) UN.PB(v.F);
       V.PB(v);
     }
  }
 // trace(cnt);
}
int main()
{
  for(int i=1;i<=15;i++) si(rem[i]);
  create();
  int N;si(N);
  while(N--)
  {
    LL A,B;sll(A);sll(B);
    dout(upper_bound(ALL(UN),B)-lower_bound(ALL(UN),A));
  }
  return 0;
}
