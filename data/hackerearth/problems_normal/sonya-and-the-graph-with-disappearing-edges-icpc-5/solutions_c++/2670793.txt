#include<bits/stdc++.h>


using namespace std;

#define rep(i,n) for(i=0;i<n;i++)
#define ll long long
#define elif else if
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define CLEAR(array, value) memset(ptr, value, sizeof(array));
#define si(a)     scanf("%d", &a)
#define sl(a)     scanf("%lld", &a)
#define pi(a)     printf("%d", a)
#define pl(a)     printf("%lld", a)
#define pn        printf("\n")
#define SZ(x)  (int)((x).size())

// bool mf(pii a, pii b)
// {
//   if(a.first!=b.first)
//     return a.first<b.first;
//   return (a.second<b.second);
// }
ll int mod=1000000007;
int inf=1000000001;
struct edg
{
  int u,v,c;
};
vector<edg>ve;
vector< vector<pii> >gr;
int dist[100005];
int n,m;
void bfs()
{
  int i;
  for(i=1;i<=n;i++)
    dist[i]=inf;
  dist[1]=0;
  queue<int>mq;
  mq.push(1);
  while(!mq.empty())
  {
    int node=mq.front();
    mq.pop();
    for(i=0;i<gr[node].size();i++)
    {
      int tn=gr[node][i].first,c=gr[node][i].second;
      if(dist[node]<c && dist[tn]==inf)
      {
        dist[tn]=dist[node]+1;
        mq.push(tn);
      }
    }
    if(node==n)return;
  }
}
int main()
{
 // freopen("in.txt","r",stdin);
 // freopen("out","w",stdout);
  int i,j,x,win,s,t,y,k;
  cin>>n>>m>>k;
  gr.resize(n+1);
  ve.resize(m);
  rep(i,m)
  {
    cin>>x>>y;
    ve[i].u=x;
    ve[i].v=y;
    ve[i].c=inf;
  }
  rep(i,k)
  {
    cin>>t>>x;
    ve[x-1].c=t;
  }
  rep(i,m)
  {
    x=ve[i].u;
    y=ve[i].v;
    gr[x].pb(mp(y,ve[i].c));
    gr[y].pb(mp(x,ve[i].c));
  }
  bfs();
  if(dist[n]==inf)
    cout<<"-1\n";
  else
    cout<<dist[n]<<"\n";
  return 0;
}
