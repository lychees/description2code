#include <iostream>
using namespace std;
int a[160001];
int l[160001];
typedef struct ld{
	int u;
	int d;
}ldr;
void mergeSort(ldr arr[],int low,int mid,int high){

    int i,m,k,l;
    ldr temp[400];

    l=low;
    i=low;
    m=mid+1;

    while((l<=mid)&&(m<=high)){

         if(arr[l].d<=arr[m].d){
             temp[i]=arr[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             m++;
         }
         i++;
    }

    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             i++;
         }
    }

    for(k=low;k<=high;k++){
         arr[k]=temp[k];
    }
}
void partition(ldr arr[],int low,int high){

    int mid;

    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid);
         partition(arr,mid+1,high);
         mergeSort(arr,low,mid,high);
    }
}


int main()
{
	int t,n,i,j,k,lp,temp,min;
	ldr ld[400];
	cin>>t;
	while(t--)
	{
    cin>>n;
    a[0]=160000;
    a[1]=0;
    a[2]=160000;
    cin>>lp;
       for(i=3;i<14;i++)
    {
     a[i]=1;
    }
    for(i=0;i<=n;i++)
        l[i]=1;

    for(i=0;i<lp;i++)
    {
    	cin>>ld[i].u>>ld[i].d;
    	l[ld[i].u]=0;
    	if(ld[i].u==1)
    	a[ld[i].d]=0;
    }
    //for(i=0;i<n;i++)
        //cout<<l[i]<<" ";

    partition(ld,0,lp-1);
    for(i=3;i<=n;i++)
    {
    	min=1600001;
    	for(j=2;j<=12;j++)
    	{
    		if(l[i-j]&&(i-j)>0)
    		{
    			temp=a[i-j]+1;
    			if(temp<min)

    			min=temp;
    		}
    	}
    	for(j=0;j<lp;j++)
    	{
    		if(ld[j].d==i)
    		{
    			
    	
    			temp=a[ld[j].u];
    			if(temp<min)
    			min=temp;
    		//	if(i==99)
    		
    		  // cout<<"min="<<min;
    		}	
    		else if(ld[j].d>i)
    		break;
    	}
    	
    	
    	a[i]=min;
    //	if(i==99)
    //	cout<<a[i];
    }
  // for(i=1;i<=n;i++)
   cout<<a[n]<<"\n";
}
    return 0;
}
