#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
using namespace std;
 
const int Maxn = 10005;
const int Maxl = 26;
 
string s;
int has[Maxn][Maxl], nxt[Maxn][Maxl];
int need[Maxl];
string res;
 
bool Check(int pos)
{
    for (int i = 0; i < Maxl; i++)
        if (has[pos][i] < need[i])
            return false;
    return true;
}
 
int main() {
    getline(cin, s); reverse(s.begin(), s.end());
    for (int i = s.length() - 1; i >= 0; i--) {
        for (int j = 0; j < Maxl; j++) {
            has[i][j] = has[i + 1][j];
            nxt[i][j] = nxt[i + 1][j];
        }
        has[i][s[i] - 'a']++;
        nxt[i][s[i] - 'a'] = i;
    }
    for (int i = 0; i < Maxl; i++)
        need[i] = has[0][i] / 2;
    res.resize(s.length() / 2);
    int from = 0;
    for (int i = 0; i < res.length(); i++)
        for (int j = 0; j < Maxl; j++) if (need[j]) {
            need[j]--;
            int pos = nxt[from][j] + 1;
            if (Check(pos)) { res[i] = 'a' + j; from = pos; break; }
            need[j]++;
        }
    printf("%s\n", res.c_str());
    return 0;
}
