#define all(c) c.begin(),c.end()  // c is here any container , for begin and end iterator.
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<vector>
#include<algorithm>
#define fori(t,i) for(int i=0;i<t;i++)
#include<set>
#include<map>
#include<cstring>
#define present(container,element)  (container.find(element)!=container.end())                        // for set and map.
#define cpresent(container,element) (find(all(container),element)!=container.end())                   // for vector generally.
#define tr(container,it) \
                        for(map<string,int>::iterator it = container.begin();it!=container.end();it++)

#define tri(container,it) \
                        for(set<int> ::reverse_iterator it = container.rbegin();it!=container.rend();it++)
                        

#include<math.h>
using namespace std;
int main(){
		int n;
		
		
		while(1){
			int a[110]={0};
			scanf("%d",&n);
			if(n==0)
				break;
			int temp;
			for(int i=0;i<n;i++){
					scanf("%d",&temp);
					a[temp]++;
			}
			for(int i=0;i<110;i++){
				if(a[i]==0)
					continue;
				else{
					int nu=a[i]/10;
					int re=a[i]%10;
					fori(nu,k){
						printf("%d %d %d %d %d %d %d %d %d %d ",i,i,i,i,i,i,i,i,i,i);
					}
					fori(re,h){
						printf("%d ",i);
					}					
				}
					
			}
			cout << endl;	
	}

	return 0;	
}