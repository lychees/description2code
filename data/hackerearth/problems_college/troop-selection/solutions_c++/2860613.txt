#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
#define cin(x)    scanf("%d",&x)
#define MOD       1000000007

int n , k , s;
vector<int> arr;

int sFromHere[10000] = {0};

int dp[1010][1010];

int solve(int idx , int troopsLeft)
{
	if(troopsLeft < 0) return INT_MIN;
	if(idx >= sz(arr) or troopsLeft == 0) return 0;
	else if(dp[idx][troopsLeft] != -1) return dp[idx][troopsLeft];
	int ret = max(solve(idx + 1 , troopsLeft) , sFromHere[idx] + solve(idx + s , troopsLeft - 1));
	return (dp[idx][troopsLeft] = ret);
}

int main()
{
	int t;
	cin(t);
	while(t--)
	{
		cin(n);
		cin(k);
		cin(s);
		clr(arr);
		arr.resize(n);
		for(int i = 0; i < n; i++) cin(arr[i]);
		if(s > n)
		{
			printf("0\n");
			continue;
		}
		for(int i = 0; i < (n + 10); i++) sFromHere[i] = 0;
		for(int i = 0; i < s; i++) sFromHere[0] += arr[i];
		int left = 0 , right = s;
		int x = sFromHere[0];
		while(right < n)
		{
			x -= arr[left++];
			x += arr[right++];
			sFromHere[left] = x;
		}
		for(int i = 0; i <= n; i++)
			for(int j = 0; j <= k; j++)
				dp[i][j] = -1;
		printf("%d\n" , solve(0 , k));
	}
	return 0;
}