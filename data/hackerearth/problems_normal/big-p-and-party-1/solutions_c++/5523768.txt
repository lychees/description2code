#include<bits/stdc++.h>
using namespace std;


queue<int>q;
vector<int>v[1000001];
int level[1000001];

void bfs(int,bool[]);

int main()
{
long int b;
int a,x,y;

cin>>a>>b;

for(int i=0;i<b;i++)
{
cin>>x>>y;
v[x].push_back(y);
v[y].push_back(x);
}

bool visited[b+1];
memset(visited,false,sizeof(visited));
memset(level,-1,sizeof(level));
for(int i=0;i<b;i++)
{
if(!visited[i])
bfs(i,visited);
}
for(int i=1;i<a;i++)
cout<<level[i]<<endl;
return 0;
}

void bfs(int u,bool visited[])
{
level[u]=0;
visited[u]=true;
q.push(u);
while(!q.empty())
{
int m=q.front();
q.pop();

for(auto i=v[m].begin();i!=v[m].end();i++)
{
if(!visited[*i])
{
level[*i]=level[m]+1;
q.push(*i);
visited[*i]=true;
}
}
}
}