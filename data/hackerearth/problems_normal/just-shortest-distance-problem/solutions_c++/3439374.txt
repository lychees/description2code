#include<bits/stdc++.h>
using namespace std;

set<int> node[1001];
bool visit[1001];
int leng[1001];

void bfs(int start,int n)
{
	leng[0]=0;
	leng[1]=0;
	for(int i=0;i<=n;i++)
	visit[i]=false;
	
    queue<pair<int,int>> buffer;
    buffer.push(make_pair(start,leng[start]));
    visit[start]=true;
    
    while(!buffer.empty())
    {
        int x=buffer.front().first;
        int ln=buffer.front().second;
        buffer.pop();
        
        for(set <int>::iterator it = node[x].begin();it != node[x].end();++it)
        {
    		if(leng[*it]>ln+1)
    		{
    			leng[*it]=ln+1;
    			if(visit[*it]==false)
            	{
	           	buffer.push(make_pair(*it,leng[*it]));
	            visit[*it]=true;
            	}
    		}
        }
    }
}

int main()
{
    int n,m;
    scanf("%d %d",&n,&m);
    for(int i=0;i<=n;i++)
    leng[i]=10000000;
    while(m--)
    {
    	int q;
		scanf("%d",&q);
    	if(q==1)
    	{
    		int x;
			scanf("%d",&x);
			if(x==1)
			printf("0\n");
			else if(leng[x]==10000000)
			printf("-1\n");
			else
			printf("%d\n",leng[x]);
    	}
    	else
    	{
    		int a,b;
    		scanf("%d %d",&a,&b);
    		node[a].insert(b);
    		if(leng[1]==10000000)
    		{
    			if(a==1)
    			bfs(1,n); 
    		}
    		else
    		{
    			if(leng[a]!=10000000)
    			bfs(a,n);
    		}
    	}
    }
    return 0;
}