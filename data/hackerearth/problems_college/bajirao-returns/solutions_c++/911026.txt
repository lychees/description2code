#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<vector>
#include<queue>
#include<algorithm>
#include<math.h>
#include<map>
#include<stack>
#include<string.h>
#define STOP system("pause")
#define CASE int t;scanf("%d",&t);while(t--)
#define ll long long int
#define lu unsigned long long
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b
using namespace std;
int n,a[105][105],count1=0;
/*int dfs(int level,int idx,int sum)
{
	if(level==n+1)
	return sum;
	int max1=0,i,visited[105];
	for(i=1;i<=n;i++)
	visited[i]=0;
	queue< int > q;
	q.push(idx);
	while(!q.empty())
	{
		int temp=q.front();
		q.pop();
		if(visited[temp]==0)
		{
			visited[temp]=1;
			if(temp/2>0)
			q.push(temp/2);
			if(temp*2<=n)
			q.push(temp*2);
			max1=max(max1,dfs(level+1,temp,sum+a[level][temp]));
		}
	}
	return max1;
}*/
int main()
{
	int i,j,k;
	int max1=0,visited[105];
	vector<int> v[105];
	for(i=1;i<=100;i++)
	{
		for(j=1;j<=100;j++)
		visited[j]=0;
		queue< int > q;
		q.push(i);
		while(!q.empty())
		{
			int temp=q.front();
			q.pop();
			
			if(visited[temp]==0)
			{
				v[i].push_back(temp);
				visited[temp]=1;
				if(temp/2>0&&temp%2==0)
				q.push(temp/2);
				if(temp*2<=100)
				q.push(temp*2);
				if(temp*2+1<=100)
				q.push(temp*2+1);
			}
		}
	}
	cin>>n;	
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			cin>>a[i][j];
		}
	}
	for(i=2;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			int max11=-1;
			for(k=0;k<v[j].size();k++)
			{
				if(v[j][k]<=n)
				max11=max(max11,a[i-1][v[j][k]]);
			}
			a[i][j]+=max11;
		}
	}
	max1=0;
	for(i=1;i<=n;i++)
	{
		if(max1<a[n][i])
		max1=a[n][i];
	}
	cout<<max1<<endl;
    return 0;
}
