#include <iostream>
#include <queue>

using namespace std;

int row,column,arr[1005][1005],visit[1005][1005];

pair<int,int> cor[8];

int bfs(int x,int y)
{	
	int count=1;
	int new_x,new_y;
	pair<int,int> cur; 
	queue< pair<int,int> > q;
	visit[x][y]=1;
	
	q.push(make_pair(x,y));	
	
	while(!q.empty())
	{
		cur=q.front();
		q.pop();
		//cout<<"Popped "<<cur.first<<" "<<cur.second<<endl;
		for(int i=0;i<8;i++)
		{
			new_x=cur.first+cor[i].first;
			new_y=cur.second+cor[i].second;
			
			//cout<<"New "<<new_x<<" "<<new_y<<endl;

			if(new_x>=0 && new_y>=0 && new_x<row && new_y<column)
			{
				if(visit[new_x][new_y]==0)
				{
					visit[new_x][new_y]=1;
					
					if(arr[new_x][new_y]==1)
					{
						count++;
						q.push(make_pair(new_x,new_y));
					}
				}
			}
		}
	}
	//cout<<count<<endl;
	return count;
}
 
int main()
{
	int test,max;
	cin>>test;
	
	cor[0]=make_pair(1,0);
	cor[1]=make_pair(0,1);
	cor[2]=make_pair(-1,0);
	cor[3]=make_pair(0,-1);
	cor[4]=make_pair(1,1);
	cor[5]=make_pair(-1,1);
	cor[6]=make_pair(1,-1);
	cor[7]=make_pair(-1,-1);

	for(int a=0;a<test;a++)
	{
		max=0;
		cin>>row>>column;	
		
		for(int i=0;i<row;i++)
		{
			for(int j=0;j<column;j++)
			{	
				visit[i][j]=0;
				cin>>arr[i][j];
			}
		}

		//bfs(0,0);
			
		int func_called=0,ret;
		for(int i=0;i<row;i++)
		{
			for(int j=0;j<column;j++)
			{
				if(visit[i][j]==0 && arr[i][j]==1)
				{
					//cout<<"CALL "<<i<<" "<<j<<endl;
					ret=bfs(i,j);
					func_called++;
					
					if(ret>max)
						max=ret;
				}
			}
		}
		
		cout<<func_called<<" "<<max<<endl;

	}
}