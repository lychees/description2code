# include <bits/stdc++.h>

using namespace std;
bool is_perfect_cube(int n) {
    int root(round(cbrt(n)));
    return n == root * root * root;
}

int main()
{
	int n,k;

		cin>>n>>k;
		int  arr[n][n], prefix[n][n];	
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				cin>>arr[i][j];
				prefix[i][j] = 0 ;
			}
			
		}


		for(int i=0;i<1;i++)
		{	
			prefix[0][0] = arr[0][0];
			for(int j=1;j<n;j++)
			{

				prefix[i][j] = prefix[i][j-1] + arr[i][j] ;
			}
			
		}

		for(int i=0;i<1;i++)
		{	
			prefix[0][0] = arr[0][0];
			for(int j=1;j<n;j++)
			{

				prefix[j][i] = prefix[j-1][i] + arr[j][i] ;
			}
			
		}


		for(int i=1;i<n;i++)
		{	
			//prefix[0][0] = arr[0][0];
			for(int j=1;j<n;j++)
			{

				prefix[i][j] = prefix[i][j-1] + prefix[i-1][j] - prefix[i-1][j-1] +arr[i][j] ;
				//cout<<prefix[i][j]<<" ";

			}
			//cout<<endl;
			
		}


		for(int i=0;i<n;i++)
		{	
			//prefix[0][0] = arr[0][0];
			for(int j=0;j<n;j++)
			{

				//prefix[i][j] = prefix[i][j-1] + prefix[i-1][j] - prefix[i-1][j-1] ;
				//cout<<prefix[i][j]<<" ";

			}
			//cout<<endl;
			
		}


		int ans = 0;
		if(k)
		for(int i=k-1;i<n;i++)
		{	
			//prefix[0][0] = arr[0][0];
			for(int j=k-1;j<n;j++)
			{

				int cube = prefix[i][j];//- prefix[i-k][j] - prefix[i][j-k] + prefix[i-k][j-k];
				if(i>=k)
					cube = cube - prefix[i-k][j];
				if(j>=k)
					cube = cube - prefix[i][j-k];
				if(i>=k && j>=k)
					cube = cube + prefix[i-k][j-k];



				//double root = cbrt(cube);
				//cout<<"cuberoot: "<<root<<endl;
				//cout<<"flor: "<<floor(root)<<endl;
				//cout<<"diff"<<root - int(floor(root))<<endl;


				if(is_perfect_cube(cube))
				{
					//cout<<root<<" "<<floor(root)<<endl;
					ans++;
				}
			}
			
		}

		
		cout<<ans<<endl;

}	