#include<iostream>
#include<string.h>
using namespace std;
#define mod 1000000009
char str[305],sym[305];
long long int T[305][305],F[305][305];
void callf(int n)
{
	for(int i=0;i<n;i++)
	{
		F[i][i]=(str[i]=='0')?1:0;
		T[i][i]=(str[i]=='1')?1:0;
	}
	for(int gap=1;gap<n;gap++)
	{
		for(int i=0,j=gap;j<n;j++,i++)
		{
			T[i][j]=F[i][j]=0;
			for(int g=0;g<gap;g++)
			{
				int k=i+g;
				long long int tik=(T[i][k]+F[i][k])%mod;
				long long int tkj=(T[k+1][j]+F[k+1][j])%mod;
				if(sym[k]=='a')
				{
					T[i][j]=(T[i][j]+(T[i][k]*T[k+1][j])%mod)%mod;
					long long int temp=(tik*tkj)-(T[i][k]*T[k+1][j]);
					temp=temp%mod;
					if(temp<0)
					{
						temp=temp+mod;
					}
					F[i][j]=(F[i][j]+temp)%mod;
				}
				if(sym[k]=='o')
				{
					F[i][j]=(F[i][j]+(F[i][k]*F[k+1][j])%mod)%mod;
					long long int temp=(tik*tkj)-(F[i][k]*F[k+1][j]);
					temp=temp%mod;
					if(temp<0)
					{
						temp=temp+mod;
					}
					T[i][j]=(T[i][j]+temp)%mod;
				}
				if(sym[k]=='x')
				{
					T[i][j]=(T[i][j]+(T[i][k]*F[k+1][j])%mod+(F[i][k]*T[k+1][j])%mod)%mod;
					F[i][j]=(F[i][j]+(T[i][k]*T[k+1][j])%mod+(F[i][k]*F[k+1][j])%mod)%mod;
				}
			}
		}
	}
}
int main()
{
	cin>>str>>sym;
	int q,l,r;
	char res[10];
	int n=strlen(str);
	callf(n);
	cin>>q;
	while(q--)
	{
		cin>>l>>r>>res;
		if(res[0]=='t')
		cout<<T[l-1][r-1]<<endl;
		else
		cout<<F[l-1][r-1]<<endl;
	}
}