/*input
2
3 10
4 12
*/

/*~~~~~~~~~~~~~~~~~~~~dwij28 == Abhinav Jha~~~~~~~~~~~~~~~~~~~~*/

#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define mp make_pair
#define MAX(a, b) ((a > b) ? a : b)
#define MIN(a, b) ((a < b) ? a : b)
#define set_bit(n, x, i) (n ^ ((-x ^ n) & (1 << i)))
#define get_bit(n, i) ((n >> i) & 1)
using namespace std;
bool primes[1000010]; // sieve
int counts[1000010]; // check for prime prime
int data[1000010]; // prefix sum

template<typename T>void scan(T&x){bool n=false;register T c=getchar();x=0;if(c=='-'){n=true;c=getchar();}for(;(c>47&&c<58);c=getchar()){x=(x<<1)+(x<<3)+c-48;}if(n){x*=-1;}}
template<typename T>void allocate(T **x,T n){*x=(T*)malloc(sizeof(T)*n);}

void sieve() {
	memset(primes, true, sizeof(primes));
	primes[0] = primes[1] = false;
	for (int i = 2; i <= 1000000; i++) {
		if (primes[i]) {
			for (int x = i+i; x < 1000010; x += i)
				primes[x] = false;
		}
	}
}

void pre() {
	sieve();
	int s = 0;
	for (int i = 0; i <= 1000000; i++) {
		if (primes[i])
			s += 1;
		if (primes[s]) counts[i] = 1;
	}
	s = 0;
	for (int i = 0; i <= 1000000; i++) {
		s += counts[i];
		data[i] = s;
	}
}

int main() {
	pre();
	int t, l, r, ans;
	scanf("%d", &t);
	while (t--) {
		ans = 0;
		scanf("%d%d", &l, &r);
		printf("%d\n", data[r] - data[l-1]);
	}
	return 0;
}