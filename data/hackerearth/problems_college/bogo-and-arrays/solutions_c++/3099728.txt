//by Tanmay Chaudhari
#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
//#pragma comment(linker, "/STACK:66777216")
#include <bits/stdc++.h>
using namespace std;

#define si(a)				scanf("%d",&a)
#define sl(a)				scanf("%lld",&a)
#define pi(a)				printf("%d\n",a)
#define pl(a)				printf("%lld\n",a)

typedef long long			ll;
typedef vector<int>			vi;
typedef pair<int, int>		ii;
typedef vector<vi>			vvi;
typedef vector<ii>			vii;

#define SET(a,b)			memset(a,b,sizeof(a))	
#define forall(i,a,b)		for(int i=a; i<b; i++)
#define forrev(i,a,b)		for(int i=a; i>=b; i--)
#define forr(it,container)  for(auto it=container.begin(); it!=container.end(); it++)
#define w(t)				int t;si(t);while(t--)

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)	
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif

int ar[1 << 20];
int lt[1 << 20], rt[1 << 20];
int main()
{
	//freopen("input.txt","r",stdin);
	//f0reopen("output.txt","w",stdout);
	int t;
	cin >> t;
	while(t--)
	{
		int n, k;
		si(n);si(k);
		forall(i, 0, n)
			si(ar[i]);
		lt[0] = -1;
		rt[n - 1] = n;
		stack<int > stk;
		stk.push(0);
		for (int i = 1;i < n;i++)
		{
			while (!stk.empty() && ar[stk.top()] < ar[i])
				stk.pop();
			if (stk.empty())
				lt[i] = -1;
			else
				lt[i] = stk.top();
			stk.push(i);
		}
		while (!stk.empty())stk.pop();
		stk.push(n - 1);
		for (int i = n - 2;i >= 0;i--)
		{
			while (!stk.empty() && ar[stk.top()] <= ar[i])
				stk.pop();
			if (stk.empty())
				rt[i] = n;
			else
				rt[i] = stk.top();
			stk.push(i);
		}
		ll ans = 0;
		for (int i = 0;i < n;i++)
		{
			if (ar[i] > k)
			{
				ll sz1 = rt[i]-i;
				ll sz2 = i - lt[i];
				ans += (sz1*sz2) ;
			}
		}
		pl(ans);
	}

	return 0;
}