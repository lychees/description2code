///    Author: Ismail Hossain
///    Univarsity: Chittagong University of Engineering Annd Technology
///    Uva:ISMAIL_HOSSAIN
///    Codeforces: ISMAIL_HOSSAIN
///    Facebook: Smile Mukul

///বিসমিল্লাহির  রাহমানির রাহিম
#include<bits/stdc++.h>
#define sf              scanf
#define pf              print
#define dd              double
#define fr              first
#define sc              second
#define pb              push_back
#define MP              make_pair
#define ll              long long
#define PI              acos(-1.0)
#define vci             vector<ll>
#define pll             pair<ll, ll>
#define vcc             vector<char>
#define sz(a)           (a.size())
#define pii             pair<int, int>
#define vcs             vector<string>
#define read(a)         scanf("%d",&a)
#define readI1(a)       scanf("%I64d",&a)
#define read2(a,b)      scanf("%d%d",&a,&b)
#define FOR(i, s, e)    for(ll i=s; i<e; i++)
#define read3(a,b,c)    scanf("%d%d%d",&a,&b,&c)
#define readI2(a,b)     scanf("%I64d %I64d",&a,&b)
#define mem(a, b)       memset(a, b, sizeof(a))
#define readI3(a,b,C)   scanf("%I64d %I64d %I64d",&a,&b,&c)
#define open()          freopen("input.txt", "r", stdin)
#define show()          freopen("output.txt", "w", stdout)
#define Max 10005
#define inf 1000000000 + 7
using namespace std;
int Set(int n,int pos){ return n = (n | (1<<pos));}
bool check(int n,int pos){return (bool)(n & (1<<pos));}
int clearr(int n,int pos){return n = (n & ~(1<<pos));}
int update(int n,int pos){return n = (n ^ (1<<pos));}
const ll Mod = 1000000007;
ll dp[Max][2][12];
bool prime[Max];
vector<int>vc;
ll n,P;
ll solve(ll i,ll x, ll cnt)
{
    if(i==n) return 1;
    if(P==1) return 1;
     if(dp[i][x][cnt]!=-1) return dp[i][x][cnt];

    ll p=0,q=0,r=0,s=0,w=0;

    if(x==1){
        p+=solve(i+1,1,0);
        cnt=0;
        q+=solve(i+1,0,cnt+1);
       // cout<<"p "<<p<<' '<<"q "<<q<<endl;
        return dp[i][x][cnt]=(p+q)%Mod;
    }
    else{
        if(cnt==P-1) r+=solve(i+1,1,0);
        if(cnt<P-1){
            r+=solve(i+1,0,cnt+1);
            s+=solve(i+1,1,0);
            return dp[i][x][cnt]=(s+r)%Mod;
        }

        //cout<<"r "<<r<<' '<<"s "<<s<<endl;
        return dp[i][x][cnt]=r%Mod;
    }
}
int main()
{
    //open();
    //show();
    ll t;
    scanf("%lld",&t);
    while(t--)
    {
        mem(dp,-1);
        scanf("%lld%lld",&n,&P);

        ll ans = solve(1,1,0);
        printf("%lld\n",ans);
    }
    return 0;
}
