#include <bits/stdc++.h>
using namespace std;
const int MAX_BIT = 30;
const int MAX_M = 1000100;
char buffer[MAX_M];
int a[2][MAX_M];
void solve() {
  int n, m, p, x; scanf("%d%d%d%d", &n, &m, &p, &x);
  scanf("%s", buffer);
  for (int i = 0; i < m; i++) {
    a[0][i] = buffer[i] - '0';
  }
  int k = 0;
  int l = 1;
  for (int bit = 0; bit < MAX_BIT; bit++) {
    if (((1 << bit) & (n - 1)) == 0) {
      continue;
    }
    for (int i = 0; i < m; i++) {
      a[l][i] = a[k][i] ^ x;
    }
    int offset = (p * 1ll * (1 << bit)) % m;
    for (int i = 0; i < m; i++) {
      a[l][offset] ^= a[k][i];
      offset += 1;
      if (offset == m) {
        offset = 0;
      }
    }
    k ^= 1;
    l ^= 1;
  }
  for (int i = 0; i < m; i++) {
    buffer[i] = '0' + a[k][i];
  }
  buffer[m] = '\0';
  printf("%s\n", buffer);
}
int main() {
  int cases; scanf("%d", &cases);
  for (int i = 0; i < cases; i++) {
    solve();
  }
  return 0;
}