#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
const int MOD=1000000007;
int n;
vi weight;
vector<vi> adj;
ll res;
pll dfs ( int no, int p,int k ) {
//     if(weight[no]<k)return mp(0,0);
    ll toto=weight[no]>k;
    ll kop=weight[no]==k;
    for ( int j: adj[no] ) {
        if ( j!=p ) {
            pll r=dfs ( j,no,k );
            kop=(kop+kop*(r.first+r.second))%MOD;
            kop=(kop+toto*r.second)%MOD;
            toto=(toto+toto*r.first)%MOD;


        }

    }
    res=(res+kop)%MOD;
    return mp(toto,kop);

}
int main() {
    ios_base::sync_with_stdio ( false );
    cin>>n;
    weight=vi ( n );
    cin>>weight;
    adj=vector<vi>(n);
    rep ( i,n-1 ) {
        int u,v;
       
        cin>>u>>v;
        u--; v--;
        adj[u].push_back ( v );
        adj[v].push_back ( u );
    }
    int q;
    cin>>q;
    rep ( qq,q ) {
        int k;
        cin>>k;
        res=0;
        dfs(0,-1,k);
        cout<<res%MOD<<endl;

    }

}
