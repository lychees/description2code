#include <bits/stdc++.h>
using namespace std;
bitset<1000005> bs;
void init() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}
void sieve() {
    int upperbound = 1000005;
    bs.set();           //filling each value with 1
    bs[0] = bs[1] = 0;
    for(int i = 2; i <= ceil(sqrt(upperbound)); i++) {
        if(bs[i]) {
            for(int j = i*i; j < upperbound; j += i) {
                bs[j] = 0;
            }
        }
    }
}
int main() {
    init();
    int tt,l,r;
    sieve();
    int arr[1000002];
    int cnt = 0;
    memset(arr,0,sizeof(arr));
    for(int i = 0; i < 1000002; i++) {
        if(bs[i]) {
            cnt++;
        }
        arr[i] = cnt;
    }
    cin>>tt;
    while(tt--) {
        cin>>l>>r;
        double num = (r-l+1);
        double curr = arr[r] - arr[l];
        //cout<<curr<<endl;
        if(bs[l])
            curr += 1;
        cout<<fixed<<setprecision(6);
        cout<<(float)(curr/num)<<endl;
    }
    return 0;
}