#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cctype>
#include <iostream>
#include <sstream>
#include <string>
#include <algorithm>
#include <utility>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <functional>
#include <bitset>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vti;

#define filla(a,x) memset(a, x, sizeof(a));
#define rep(i, n) for (int i = 0, sz = int(n); i < sz; ++i)
#define foru(i, l, r) for (int i = l; i <= r; ++i)
#define ford(i, r, l) for (int i = r; i >= l; --i)
#define mp make_pair
#define fs first
#define sd second
#define pb push_back
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define openfile {freopen("input.txt", "r", stdin);}
#define debug 0

int read() {   int x;   scanf("%d",&x);   return x;   }
int readln() {   int x;   scanf("%d\n",&x);   return x;   }

const int MAXN = int(1e5);
const int MAXC = int(1e5);
const ll BASE = int(1e4) + 7;
const ll MODC = int(1e9) + 7;

bool    isPrime[MAXC];
int     prime[MAXN], nprime, p[MAXN], f;

void    eratos(){
    filla(isPrime, true);
    nprime = 0;
    isPrime[0] = isPrime[1] = false;
    for (int i = 2; i < MAXC; ++i)
        if (isPrime[i]){
            prime[nprime++] = i;
            int j = i;
            while (i + j < MAXC){
                j += i;
                isPrime[j] = false;
            }
        }
}

int     cal(int x){
    int ans = 0;
    for (int i = 0; i < nprime && x > 1 && prime[i] * prime[i] <= x; ++i){
       int j = prime[i];
       while (x % j == 0){
            ++ans;
            x /= j;
       }
    }
    if (x > 1) ++ans;
    return ans;
}


int main(){
    if (debug) openfile;
    eratos();
    int n = read();
    int f = 0;
    foru(i, 1, n){
        int v = read();
        p[i] = cal(v);
        f = f ^ p[i];
    }
    if (f == 0)
        printf("BOB\n");
    else printf("ALICE\n");
    return 0;
}
