#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
void concat ( vi &a, const vi &b ) {
    for ( int j:b ) a.push_back ( j );

}
const int MOD=1000000007;
 int l,c;
vector<vi> a;
vll cnt;

int getNo(ll x, ll n){
    if(x<(ll)a.size())return a[x][n];
    if(x>=(ll)cnt.size()){
       int r=x%l;
       x=cnt.size();
       while(x%l!=r)x++;
    }
    ll sofar=0;
    reu(i,x-l,x){
     if(sofar+cnt[i]>n)return getNo(i,n-sofar);
     sofar+=cnt[i];
    }
    assert(0);return 0;
    
    
    
}
int main() {
    ios_base::sync_with_stdio ( false );
   
    cin>>l>>c;
    vector<char> hit ( l );

    a=vector<vi> ( l );
    rep ( i,l ) a[i]= {i};
    while ( a.back().size() <100000 ) {
        a.push_back ( vi() );
        reu ( i,a.size()-l-1,a.size()-1 )
        concat ( a.back(),a[i] );
    }
    cnt =vll ( l );
    rep ( i,l ) cnt[i]=1;
    while ( cnt.back() <100000000LL*1000000000LL ) {
        ll su=0;
        reu ( i,cnt.size()-l,cnt.size() ) su+=cnt[i];
        cnt.push_back(su);
    }

    bool fail=0;
    rep ( i,c ) {
        ll n,x;
        char c;
        cin>>n>>x>>c;
        n--;
        x--;
        int h=getNo(x,n);
        if ( hit[h] ) {
            if ( hit[h]!=c ) {
                fail=1;
                break;
            }
        } else hit[h]=c;

    }
    if ( fail ) {
        cout<<0<<endl;
        return 0;
    }
    ll res=1;
    rep ( i,l ) {
        if ( !hit[i] )  res=res*62%MOD;
    }
    cout<<res<<endl;
}
