#include <bits/stdc++.h>

using namespace std;

const int mod=1000000007;

long long int fastpower (long long int x, long long int y)
{
	long long int res=1;
	while (y>0)
	{
		if (y%2)
		{
			res=(res*x)%mod;
			y--;
		}
		x=((x%mod)*(x%mod))%mod;
		y/=2;
	}
	return res;
}

int main()
{
    int t,n,i,j,k,l;
    long long int m,u;
    scanf ("%d",&t);
    while (t--)
    {
    	scanf ("%d %d",&n,&k);
    	int arr[k][n];
    	for (i=0;i<k;++i)
    		for (j=0;j<n;++j)
    			scanf ("%d",&arr[i][j]);
    	m=pow(2,n);
    	long long int p,s,mxs=100,mx=0,mn=1000000000000000009,mns=0;
    	for (u=1;u<m;++u)
    	{
    		l=u;
    		s=0;
    		vector <int> V;
    		while (l>0)
    		{
    			j=l%2;
    			if (j%2)
    				V.push_back(s);
    			s++;
    			l/=2;
    		}
    		long long int sum,product=1,x;
    		for (j=0;j<V.size();++j)
    		{
    			sum=0;
    			for (i=0;i<k;++i)
    				sum+=arr[i][V[j]];
    			product=(product*(sum%mod))%mod;
    		}
    		x=fastpower(V.size(),mod-2);
    		product=(product*x)%mod;
    		if (mx<=product)
    		{
    			if (mxs>V.size() && mx==product)
    				mxs=V.size();
    			else
    				mxs=V.size();
    			mx=product;
    		}
    		if (mn>=product)
    		{
    			if (mns<V.size() && mn==product)
    				mns=V.size();
    			else
    				mns=V.size();
    			mn=product;
    		}
    	}
    	//printf ("%lld %lld %lld %lld\n",mx,mxs,mn,mns);
    	p=(mx^mn);
    	s=(mxs^mns);
    	printf ("%d %d\n",p,s);
    }
    return 0;
}
