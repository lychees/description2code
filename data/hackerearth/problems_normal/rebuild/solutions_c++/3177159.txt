
#include<bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(i=a;i<b;++i)
#define FORD(i,a,b) for(i=a;i>=b;--i)
#define ll long long
#define mp make_pair
#define pb push_back
#define MOD 1000000007
#define infi 1000000007
#define s(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define sd(x) scnaf("%lf", &x)
#define fi first
#define se second
#define p(x) printf("%d",x)
#define pl(x) printf("%lld", x)
#define pd(x) printf("%lf", x)
#define pn() printf("\n")
#define paint pair<pair<ll, int> ,int >



int n, m;

vector< paint> vec;
ll ans = 0;
int par[500005];
int has[500005];

int fnc(int x)
{
    if(par[x] == x)
        return x;
    par[x] = fnc(par[x]);

    return par[x];

}

void join (int x, int y)
{
    int px = fnc(x);
    int py = fnc(y);

    par[px] = py;
}


int main()
{
    int t, i, j, k, x,y;
    ll z;

    cin >> t;
    while(t--) {
        cin >> n;
        cin >> m;
        vec.clear();
        ans = 0;
        FOR(i, 0, n + 1)
            par[i] = i;

        FOR(i, 0, m) {
            cin >> x >> y >> z;
            x = n + 1 - x;
            y = n + 1 - y;

            vec.pb(mp(mp(z, max(x, y)) , min(x, y)));
        }
        sort(vec.begin(), vec.end());

        memset(has, 0, sizeof(has));
        FOR(i, 0, m) {
            x = vec[i].fi.se;
            y = vec[i].se;

            if(fnc(x) != fnc(y)) {
                join(x, y);
                ans += vec[i].fi.fi;
                has[x]++;
                has[y]++;
            }

        }
        cout << ans << endl;
        FORD(i, n , 1)
            cout << has[i]<<" ";
        cout << endl;



    }



}


