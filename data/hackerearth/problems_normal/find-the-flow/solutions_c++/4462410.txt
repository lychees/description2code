#include<bits/stdc++.h>
using namespace std;
#define pb push_back
int graph[100][100];
int rgraph[100][100];
int parent[10004];

int bfs(int s,int t)
{
    int visited[100];
    int i,j,k;
    for(i=0;i<=30;i++)
        visited[i]=0;
   parent[s]=-1;
    queue<int> q;
    q.push(s);
    visited[s]=1;
    while(!q.empty())
    {
        int x=q.front();
        visited[x]=1;
        q.pop();
        for(i=0;i<26;i++)
        {
            if(visited[i]==0&&rgraph[x][i]>0)
            {
            parent[i]=x;
            q.push(i);
            visited[i]=1;
            }
        }
    }
    if(visited[t]==1)
        return 1;
    return 0;
}
int ffulkerson()
{
    int maxflow=0,i,j,k;
    int ans=0;
    int src='S'-'A';
    int dest='T'-'A';
    while(1)
    {
        if(bfs(src,dest)==0)
            break;
       int pathflow=INT_MAX;
       i=dest;
       while(i!=src)
       {
           int par=parent[i];
           pathflow=min(pathflow,rgraph[par][i]);
           i=parent[i];
       }
       i=dest;
       while(i!=src)
       {
           int par=parent[i];
           rgraph[par][i]-=pathflow;
           rgraph[i][par]+=pathflow;
           i=parent[i];
       }
     maxflow=maxflow+pathflow;

    }
    return maxflow;
}
int main()
{
    int t,c;
    char a,b;
    cin>>t;
    while(t--)
    {
        cin>>a>>b>>c;
        graph[a-'A'][b-'A']=c;
        rgraph[a-'A'][b-'A']=c;

    }
    int ans=ffulkerson();
    cout<<ans<<endl;
}

