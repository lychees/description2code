#include<stdio.h>
 
#define V 505

#define INF 99999999
 
void printSolution(int dist[][V]);
 
void floydWarshell (int graph[][V])
{
    int dist[V][V], i, j, k;
 
    for (i = 0; i < V; i++)
        for (j = 0; j < V; j++)
            dist[i][j] = graph[i][j];
 
    for (k = 0; k < V; k++)
    {
        for (i = 0; i < V; i++)
        {

            for (j = 0; j < V; j++)
            {
                if (dist[i][k] + dist[k][j] < dist[i][j])
                    dist[i][j] = dist[i][k] + dist[k][j];
            }
        }
    }
       int start,end,n ;
    scanf("%d%d",&start,&n);
    for(i=0;i<n;i++){
    	scanf("%d",&end);
    	if(dist[start][end] != INF){
    		printf("%d\n",dist[start][end] );
    	}
    	else{
    		printf("NO PATH\n");
    	}
    }

}

 
// driver program to test above function
int main()
{
    int graph[V][V] ;
    int i,j;
    for(i=0;i<V;i++){
    	for(j=0;j<V;j++)
    	{
    		graph[i][j] = INF;
    	}
    	graph[i][i] = 0;
    }
 	int n;
 	scanf("%d",&n);
 	int a,b,c,w;
 	for(i=0;i<n;i++){
 		scanf("%d%d%d",&a,&b,&c);
 		graph[a][b] = c;
 		graph[b][a] = c;
 	}
 
    // Print the solution
    floydWarshell(graph);
    // 	 for(i=0;i<8;i++){
    // 	for(j=0;j<8;j++)
    // 	{
    // 		printf("%d ",graph[i][j]);
    // 	}
    // 	printf("\n");
    // }
 
    return 0;
}