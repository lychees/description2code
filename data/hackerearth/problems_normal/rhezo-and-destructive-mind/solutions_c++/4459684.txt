//#include <bits/stdc++.h>
#include <iostream>
#include <vector>
#include <iterator>
#include <algorithm>
#include <string>
#include <cmath>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>

#define gc getchar_unlocked

using namespace std;

typedef long long        ll;
typedef pair<int, int>   pii;
typedef pair<int, pii>   piii;
typedef vector<int>      vi;
typedef set<int>         si;
typedef vector<pii>      vii;
typedef vector<piii>     viii;

#define forup(a,b,c) for (int (a)=(b); (a)<(c); (a)++)
#define forn(a,b,c)  for (int (a)=(b); (a)<=(c); (a)++)
#define ford(a,b,c)  for (int (a)=(b); (a)>=(c); (a)--)
#define rep(i,n)     forup(i,0,n)
#define repn(i,n)    forn(i,1,n)
#define repd(i,n)    ford(i,n,1)
#define foreach(i,X) for(__typeof((X).begin()) i = (X).begin(); i != (X).end(); i++)
#define all(a)       a.begin(),a.end()

const int inf = numeric_limits<int>::max();
const ll linf = numeric_limits<ll>::max();

#define fi           first
#define se           second
#define pb           push_back
#define mp           make_pair

void fs(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

vi e[101];
int seen[101];
int disc[101];
int low[101];
si ap;
int tim=0;

void dfs(int v, int p)
{
    seen[v]=1;
    tim++;
    disc[v]=low[v]=tim;
    int count=0;
    foreach(it, e[v])
    {
        if(!seen[*it])
        {
            count++;
            dfs(*it, v);
            low[v]=min(low[v], low[*it]);
            if(p==0 && count>1) ap.insert(v);
            else if(p!=0 && disc[v]<=low[*it]) ap.insert(v);
        }
        else if(*it!=p) low[v]=min(low[v], disc[*it]);
    }
}


int main()
{
    int n,m; cin>>n>>m;
    rep(i,m)
    {
        int a, b; cin>>a>>b;
        e[a].pb(b);
        e[b].pb(a);
    }
    repn(i,n) if(!seen[i]) dfs(i,0);
    int q; cin>>q;
    while(q--)
    {
        int v; cin>>v;
        if(ap.find(v)!=ap.end()) cout<<"Satisfied "<<e[v].size()<<endl;
        else cout<<"Not Satisfied"<<endl;
    }
    return 0;
}