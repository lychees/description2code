#include <bits/stdc++.h>
using namespace std;
void maxandMinSum(int *a,int n)
{
	sort(a,a+n);
	map<int,int> m;
	m[0]=0;
	m[1]=0;
	m[2]=0;
	int i=0;
	while(i<n)
	{
		if(a[i]<0)
		{
			m[0]=m[0]+1;
		}
		if(a[i]==0)
		{
			m[1]=m[1]+1;
		}
		if(a[i]>0)
		{
			m[2]=m[2]+1;
		}
		i++;
	}
//	cout<<m[0]<<"  "<<m[1]<<"   "<<m[2]<<"  "; 
	long long int posMultiply=1;
	long long int maxMultiply=1,minMultiply=1;
	i=m[0]+m[1];
	while(i<n)
	{
		maxMultiply=maxMultiply*a[i];
		posMultiply=maxMultiply;
		
		i++;
	}
//	cout<<maxMultiply<<"   sdcs ";
	if(m[0]%2==0)
	{
		i=0;
		while(i<=m[0]-1)
		{
			maxMultiply=maxMultiply*(-a[i]);
			i++;
		}
	}
	else
	{
		int p=m[0];
		int k=p%2;
		k=k-1;
		int l=0;
//		cout<<p-1<<"  ";
		while(l<(p-1))
		{
//			cout<<maxMultiply<<"   "<<a[l]<<" ";
			maxMultiply=maxMultiply*a[l];
			l++;
		}
	}
	if(m[1]>0 && m[0]==0)
	{
		minMultiply=0;
	}
	if(m[1]==n)
	{
		maxMultiply=0;
	}
	i=0;
	if(m[0]%2==0)
	{
		while(i<(m[0]-1))
		{
			minMultiply=minMultiply*a[i];
			i++;
		}
	}
	else
	{
//		cout<<" fhnfh  "<<minMultiply;
		i=0;
		while(i<(m[0]))
		{
			minMultiply=minMultiply*a[i];
//			cout<<a[i]<<"  ";
			i++;
		}
//		cout<<minMultiply<<"  ";
	}
	if(m[0]==1 && m[1]==0 && m[2]==0)
	{
		maxMultiply=maxMultiply*a[0];
	}
	if(m[0]==1 && m[1]>0 && m[2]==0)
	{
		maxMultiply=0;
	}
	if(m[0]!=0)
	{
		minMultiply=minMultiply*posMultiply;
//		cout<<"  dsd "<<minMultiply<<"  ";
	}
	else if(m[0]==0)
	{
			minMultiply=a[0];
	}
	cout<<maxMultiply<<" "<<minMultiply;
}
int main() 
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n];
		int i=0;
		while(i<n)
		{
			cin>>a[i];
			i++;
		}
		maxandMinSum(a,n);
		cout<<endl;
	}
}