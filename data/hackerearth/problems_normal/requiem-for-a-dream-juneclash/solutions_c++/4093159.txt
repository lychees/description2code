#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <map>
#include <assert.h>
#include <cmath>
#include <queue>
#include <set>
#include <bitset>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define SZ(x) (int)(x.size())
#define rep(i,a,b) for(int i=a;i<b;i++)
#define per(i,a,b) for(int i=b-1;i>=a;i--)
#define inf 1000000007
#define mod 1000000009
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)
 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005


template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}
 
//FILE* outFile;
 
inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}


int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=ans*(ll)a%mod;
        a=(ll)a*a%mod;b>>=1;
    }
    return ans;
}

vector<pii> g[N];
int p[N][17],h[N];
ll dp[N][17],f[N][17],d[N],dp1[N][17];
void dfs(int u,int fa=-1){
    FOREACH(it,g[u]){
        int j=it->x;
        if(j==fa)continue;
        d[j]=d[u]+it->y;
        p[j][0]=u;
        h[j]=h[u]+1;
        dfs(j,u);
    }
}
int lca(int a,int b){
    if(h[a]<h[b])swap(a,b);
    int d=h[a]-h[b];
    rep(i,0,17)if(d>>i&1)a=p[a][i];
    if(a==b)return a;
    per(i,0,17)if(p[a][i]!=p[b][i])a=p[a][i],b=p[b][i];
    return p[a][0];
}
ll find(int x,int y){
    int D=h[x]-h[y];
    ll ans=d[y];
    per(i,0,17){
        if(D>>i&1)Max(ans,dp[x][i]),x=p[x][i];
    }
    return ans;
}
ll query(int x,int y){
    int D=h[x]-h[y];
    ll ans=0,mx=-1e16;
    per(i,0,17){
        if(D>>i&1){
            Max(ans,dp1[x][i]);
            Max(ans,mx-f[x][i]);
            Max(mx,dp[x][i]);
            x=p[x][i];
        }
    }
    return ans;
}
int main(){
    //freopen("A.in","r",stdin);
    //freopen("A.out","w",stdout);
    //freopen("1.txt","w",stdout);
    int T,j,k,i,ca=0,m=0,n;
    scanf("%d%d",&n,&m);
    int w;
    rep(i,1,n){
        scanf("%d%d%d",&j,&k,&w);
        j--,k--;
        g[j].pb(mp(k,w));
        g[k].pb(mp(j,w));
    }
    dfs(0);
    rep(i,0,n)dp[i][0]=f[i][0]=d[i],dp1[i][0]=0;
    rep(i,1,17){
        rep(j,0,n){
            k=p[j][i-1];
            p[j][i]=p[k][i-1];
            dp[j][i]=max(dp[j][i-1],dp[k][i-1]);
            f[j][i]=min(f[j][i-1],f[k][i-1]);
            dp1[j][i]=max(dp1[j][i-1],dp1[k][i-1]);
            Max(dp1[j][i],dp[j][i-1]-f[k][i-1]);
        }
    }
    rep(r,0,m){
        scanf("%d%d",&i,&j),i--,j--;
        int u=lca(i,j);
        ll ans=0;
        ll x=find(i,u),y=find(j,u);
        ans=max(ans,max(0LL,x-d[u])+max(0LL,y-d[u]));
        if(i!=u)ans=max(ans,query(i,u));
        if(j!=u)ans=max(ans,query(j,u));
        printf("%lld\n",ans);
    }
    //cerr<<1.*clock()/CLOCKS_PER_SEC<<"s\n";
    return 0;
}