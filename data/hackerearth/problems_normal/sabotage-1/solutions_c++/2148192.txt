#include<bits/stdc++.h>
#define sz 111111
using namespace std;

int n,m,idx,u,v,par[sz];

bool valid[sz];

struct item{
    int u,v,val;
    bool operator<(const item& a)const{
        return val>a.val;
    }
}box[sz];

inline void init(){
    for(int i = 0 ; i <= n ; i ++ ) par[i] = i ;
    memset(valid,0,sizeof(valid));
}

int findPar(int p){ return par[p]==p ? p : par[p]=findPar(par[p]); }

inline void mst(){
    int cnt = 0 ;
    for(int i = 0 ; i < m ; i++ ) {
        u = findPar(box[i].u);
        v = findPar(box[i].v);
        if(u!=v){
            par[v]=u;
            cnt++;
            valid[box[i].val]=true;
        }
        if(cnt==n-1)return;
    }
}

inline void print(){
    vector<int>ans;
    for(int i = 1; i <= m ; i++ ) if ( ! valid[i] ) ans.push_back(i);
    int l = ans.size();
    printf("%d\n",l);
    for(int i = 0 ; i < l ; i++ ) {
        printf("%d\n",ans[i]);
    }
}

int main(){

    
    scanf("%d %d",&n,&m);

    for(int i = 1 ; i <= m ; i ++ ) {
        scanf("%d %d",&u,&v);
        box[idx].u=u,box[idx].v=v,box[idx++].val=i;
    }
    sort(box,box+idx);
    init();
    mst();
    print();
}
