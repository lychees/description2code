#include <iostream>
using namespace std;
int size[20005],Arr[20005],op_root[20005];

int root (int i)
{
    while(Arr[ i ] != i)
    {
        Arr[ i ] = Arr[ Arr[ i ] ] ; 
        i = Arr[ i ]; 
    }
    return i;
}

int weighted_union(int root_A,int root_B)
{
   
    if(size[root_A] < size[root_B ])
    {
        Arr[ root_A ] = Arr[root_B];
        size[root_B] += size[root_A];
        size[root_A]=-1;
        return root_B;
    }
    else
    {
        Arr[ root_B ] = Arr[root_A];
        size[root_A] += size[root_B];
        size[root_B]=-1;
        return root_A;
    }

}

void initialize()
{
    for(int i = 1;i<=20005;i++)
    {
        Arr[ i ] = i ;
        size[ i ] = -1;
        op_root[i]=0;
    }
}

void opponent(int a,int b)
{
	int root_a=root(a);
	int root_b=root(b);
	
	if(op_root[root_a]==root_b||op_root[root_b]==root_a)
	 return;
	if(op_root[root_a]==0&&op_root[root_b]==0)
	{
		op_root[root_a]=root_b;
		size[root_a]=1;
		op_root[root_b]=root_a;
		size[root_b]=1;
	}
	else if(op_root[root_a]==0&&op_root[root_b]!=0)
	{   
		size[root_a]=1;
		root_a=weighted_union(op_root[root_b],root_a);
		op_root[root_b]=root_a;
	}
	else if(op_root[root_a]!=0&&op_root[root_b]==0)
	{
		size[root_b]=1;
        root_b=weighted_union(op_root[root_a],root_b);
        op_root[root_a]=root_b;
	}
	else
	{   
		int r_a=weighted_union(op_root[root_b],root_a);
		
		
	    int r_b=weighted_union(op_root[root_a],root_b);
	    op_root[r_a]=r_b;
	    op_root[r_b]=r_a;
	    
	}
	
}
int main()
{
    int t;
    cin>>t;
    int n,i;
    int roota,rootb;
    int cse=0;//used for outputting case '1' etc
    while(t--)
    {   cse++;
    	initialize();
    	cin>>n; int max_val=-100;
    	int j;
        int answer=0;
    	for(i=1;i<=n;i++)
    	{
    		int a,b;
    		cin>>a>>b;
    		
    		opponent(a,b);
    		if(a>max_val){
    			max_val=a;
    		}
    		if(b>max_val)
    		{
    			max_val=b;
    		}
    		//for(j=1;j<=max_val;j++) cout<<size[j]<<" ";
    	    //cout<<"\n";
    	} //cout<<"\n";
        //for(i=1;i<=max_val;i++) cout<<op_root[i]<<" ";
    	//cout<<"\n";
    	//for(i=1;i<=max_val;i++) cout<<size[i]<<" ";
    	//cout<<"\n";
    	for(i=1;i<=max_val;i++)
    	{
    		if(size[i]!=-1)
    		{
    			roota=i;
    			rootb=op_root[roota];
    			if(size[roota]>size[rootb])
    			{
    				answer+=size[roota];
    			}
    			else
    			answer+=size[rootb];
    			size[roota]=-1;
    			size[rootb]=-1;
    		}
    	}
    	cout<<"Case "<<cse<<": "<<answer<<"\n";
    	
    }
    
    return 0;
}
