#pragma comment(linker, "/STACK:640000000")
#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

const int maxn = (int)5e5 + 10;

int pos[maxn];
int f[3 * maxn];

void add(int pos, int val) {
	while(pos < 3 * maxn) {
		f[pos] += val;
		pos = (pos | (pos + 1));
	}
}

int get(int pos) {
	int res = 0;
	while(pos >= 0) {
		res += f[pos];
		pos = (pos & (pos + 1)) - 1;
	}
	return res;
}

int get(int l, int r) {
	return get(r) - get(l - 1);
}

int main() {
	#ifdef LOCAL
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif

	int n,m; cin >> n >> m;

	int l = maxn;
	int r = maxn + n - 1;

	for (int i = 0; i < n; i++) {
		int x; scanf("%d",&x);
		pos[x] = maxn + i;
		add(pos[x],1);
	}

	ll res = 0;

	while(m--) {
		int x; char ch; scanf("%d %c",&x,&ch);
		res += min(get(0,pos[x] - 1),get(pos[x] + 1,3 * maxn - 1));
		add(pos[x],-1);
		if (ch == 'l') {
			l--;
			pos[x] = l;
		} else {
			r++;
			pos[x] = r;
		}
		add(pos[x],1);
	}

	cout << res << endl;


	return 0;
}
