
#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
pair < int , pair < int , int > > p[100001];
int p1[100001],p2[100001],v[100001],v1[100001],sz[100001],v2[100001],sz1[100001];
int root(int x)
{
	while(x!=p1[x])
	{
		x=p1[x];
	}
	return x;
}
int root1(int x)
{
	while(x!=p2[x])
	{
		x=p2[x];
	}
	return x;
}
int root2(int x)
{
	while(x!=v1[x])
	{
		x=v1[x];
	}
	return x;
}
int root3(int x)
{
	while(x!=v2[x])
	{
		x=v2[x];
	}
	return x;
}

int main()
{
	int n,m,i,a,b,c,x=0,yr=0,ma=0,ma1=0;
	cin>>n>>m;
	for(i=1;i<=n;i++)
	{
		p1[i]=i;
		p2[i]=i;
		v1[i]=i;
		sz[i]=1;
		v2[i]=i;
		sz1[i]=1;
	}
	for(i=0;i<m;i++)
	{
	
		cin>>a>>b>>c;
		p[i]=mp(c,mp(a,b));
		if(c==3)
		{
			int xx=root(a);
			int yy=root(b);
			int zz=root1(a);
			int rr=root1(b);
			if(xx!=yy&&zz!=rr)
			{
				x++;
				p1[xx]=yy;
				p2[zz]=rr;
				v[i]=1;
			}
			
		}
		else
			v[i]=0;
		if(c==1||c==3){
		int cc=root2(a);
		int dd=root2(b);
		if(cc!=dd)
		{
			if(sz[cc]>sz[dd])
			{
				sz[cc]=sz[cc]+sz[dd];
				v1[dd]=cc;
				if(sz[cc]>ma)
				ma=sz[cc];
			}
			else
			{
				sz[dd]=sz[dd]+sz[cc];
				v1[cc]=dd;
				if(sz[dd]>ma)
				ma=sz[dd];
			}
		}
		}
		if(c==2||c==3)
		{
				int cc=root3(a);
		int dd=root3(b);
		if(cc!=dd)
		{
			if(sz1[cc]>sz1[dd])
			{
				sz1[cc]=sz1[cc]+sz1[dd];
				v2[dd]=cc;
				if(sz1[cc]>ma1)
				ma1=sz1[cc];
			}
			else
			{
				sz1[dd]=sz1[dd]+sz1[cc];
				v2[cc]=dd;
				if(sz1[dd]>ma1)
				ma1=sz1[dd];
			}
		}
		}
		
	}
	if(ma<n||ma1<n)
	{
		cout<<-1<<endl;
	}
	else{
	for(i=0;i<m&&yr<2*n-2-2*x;i++)
	{
		if(v[i]==0)
		{
			if(p[i].first==1)
			{
				int xx=root(p[i].second.first);
				int yy=root(p[i].second.second);
				if(xx!=yy)
				{
					yr++;
					p1[xx]=yy;
					v[i]=1;
				}
			}
			else if(p[i].first==2)
			{
				int xx=root1(p[i].second.first);
				int yy=root1(p[i].second.second);
				if(xx!=yy)
				{
					yr++;
					p2[xx]=yy;
					v[i]=1;
				}
			}
			
		}
	}
	cout<<(m-(yr+x))<<endl;
	}
	
	
}