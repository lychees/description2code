#include <bits/stdc++.h>

using namespace std;

typedef pair<long, int > PAI;
const int MAX = 35000;

vector<PAI> a[MAX];
bool visited[MAX];

void initialise(){
	for(int i=0;i<MAX;i++){
		visited[i] = false;
		a[i].clear();
	}
}

long prims(int x){
	
	priority_queue<PAI,vector<PAI>,greater<PAI> > Q;
	PAI p; int y; long cost=1;
	
	Q.push(make_pair(1,x));
	
	while(!Q.empty()){
		
		p = Q.top();
		Q.pop();
		x = p.second;
		
		if(visited[x])
			continue;
			
		cost *= p.first;
		cost = cost % 1000000007 ;
		
		visited[x] = true;
		
		for(int i=0;i<a[x].size();i++){
			y = a[x][i].second;
			
			if(!visited[y]){
				
				Q.push(a[x][i]);
			}
		}
	}
	return cost;
}

int main()
{
	int t,v,e,x,y;
	long w,result;
	cin>>t;
	while(t--){
		
		cin>>v>>e;
		initialise();
		
		for(int i=0;i<e;i++){
			cin>>x>>y>>w;
			
			a[x].push_back(make_pair(w,y));
			a[y].push_back(make_pair(w,x));
		}
		
		result = prims(1);
		cout<<result<<endl;
	}
    return 0;
}
