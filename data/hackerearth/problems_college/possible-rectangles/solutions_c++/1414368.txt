// User :: lovelotus ( Prem Kamal )

//#include<bits/stdc++.h>
//#define _ ios_base::sync_with_stdio(0);cin.tie(0);

#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<climits>
#include<cassert>
#include<iostream>
#include<algorithm>
#include<string>
#include<utility>
#include<cctype>
#include<stack>
#include<queue>
#include<vector>
#include<map>
#include<set>
#include<deque>

#define lli long long int
#define ulli unsigned long long int
#define F first
#define S second
#define pii pair<int,int>
#define pip pair<int,pii>
#define pis pair<int,string>
#define pll pair<lli,lli>

using namespace std;
int k;
lli primes[1000001];
int a[10000001];
void precompute()
{
    int len=10000000;
    int sq=sqrt(len);
    int i,j,i2,m;
    for(i=3;i<=sq;i+=2)
    {
            while(a[i])
            {
                i+=2;
            }
            j=i*(i-2);
            i2=i<<1;
            while((j=i2+j)<=len)
            {
                a[j]=1;
            }
    }
    j=0;
    primes[0]=1;
    primes[1]=2;
    k=2;
    for(i=3;i<=len;i+=2)
    {
        if(!a[i]) primes[k++]=i;
    }
    //for(i=0;i<100;i++) printf("%d\n",primes[i]);
}

int main()
{
    lli t,a,b,n,m;
    lli area;
    //precompute();
    scanf("%lld",&t);
    while(t--)
    {
        scanf("%lld%lld%lld",&a,&b,&area);
        lli ar=sqrt(area);
        lli ans=0;
        m=min(a,b);
        n=a+b-m;
        //printf("%lld %d %lld\n",primes[0],k,m);
        /*for(int i=0;i<k && primes[i]<=ar;i++)
        {
            area=area1;
            //printf("%lld %lld\n",primes[i],m);
            if(primes[i]>n) break;
            lli x=primes[i];
            lli y1=x,y2=area/x;
            while(area%x==0)
            {
                area/=x;
                if(area<ar) break;
                //printf("%lld %lld %lld\n",y1,y2,area);
                if(y1<=m && y2<=n) ans+=(m-y1)*(n-y2);
                if((y1!=y2) && y1<=n && y2<=m) ans+=(m-y2)*(n-y1);
                y1*=x;
                y2/=x;
                if(x==1) break;
            }
        }*/
        //printf("%lld\n",ans);
        //if((area1<=m)||(area1<=n)) ans++;
        for(lli i=1;i<=ar && i<m;i++)
        {
            if(area%i==0)
            {
                if(i<m && (area/i<n))
                ans+=(m-i)*(n-(area/i));
                if(i*i!=area)
                {if(i<n && (area/i<m))
                ans+=(n-i)*(m-(area/i));}
            }
        }
        printf("%lld\n",ans);
    }
    return 0;
}
