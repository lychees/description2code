/*
 *   Author:  sudarshan1803 (), 
 *   Organization:  BITS Hyd
 */
#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>
#define sz(a) ((int)a.size())
#define mp make_pair
#define pb push_back
#define ll long long
#define INF (int)1e9
using namespace std;
map<ll int,ll int> prime(ll int x){
 
 //calculate all primes and their powers
 map<ll int, ll int> r;
 ll int i=2,cnt=0;
 for (ll int i=2;i<=sqrt(x);i++){ 
  cnt=0; 
  if (x%i==0){

    while(x%i==0){
     ++cnt;
     x=x/i;
   }
  }
   r[i]=cnt;
 }
 if (x>1){
   r[x]=1;
 }

 return r;
}
int main()
{
 
 int t;
 cin>>t;
 

 while(t--){
 	
  ll int a,b,c,d;
 cin>>a>>b>>c>>d;

 map<ll int,ll int> f=prime(a);
 map<ll int,ll int> s=prime(c);

 map<ll int,ll int>::iterator p;
 bool flag=true;
 for (p=s.begin();p!=s.end();p++){ 

  if ( d*(p->second) > b*f[p->first] )
    flag=false;

 }
 if (flag){
  cout<<"Divisible\n";
 }
 else{
  cout<<"Not divisible\n";
  }
 }
 return 0;
}

