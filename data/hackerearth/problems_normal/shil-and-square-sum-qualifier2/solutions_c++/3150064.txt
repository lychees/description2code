#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define rep(i,a) for(ll i=0;i<a;++i)
#define repp(i,a,b) for(ll i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define    foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
ll arr[1000005],tw[1000005],odd[1000005]={0};
 
int main()
{
    fastScan;
    ll n,k,M=1000000007;
    cin>>n>>k;
    rep(i,n)
     cin>>arr[i];
    tw[0]=arr[0]; 
    repp(i,1,n){
      tw[i]=tw[i-1]+arr[i];
      tw[i]%=M;
    }
    rep(i,n){
     tw[i]*=2;
     tw[i]%=M;
    }
    rep(i,k){
        odd[0]+=arr[i]*(2*i+1);
        odd[0]%=M;
    }
    repp(i,1,n-k+1){
        odd[i]=odd[i-1]-arr[i-1];
        odd[i]=(odd[i]+M)%M;
        odd[i]+=arr[i+k-1]*(2*k-1);
        odd[i]%=M;
        odd[i]-=((tw[i+k-2]-tw[i-1]+M)%M);
        odd[i]=(odd[i]+M)%M;
    }
    ll ans=0;
    rep(i,k){
        ll tmp=(i+1)*(i+1);
        tmp%=M;
        tmp*=arr[i];
        tmp%=M;
        ans+=tmp;
        ans%=M;
        //cout<<ans<<endl;
    }
    cout<<ans<<" ";
    repp(i,1,n-k+1){
        ans-=odd[i-1];
       // cout<<ans<<endl;
        ans=(ans+M)%M;
        ll tmp=(k)*(k);
        tmp%=M;
        tmp*=arr[i+k-1];
        tmp%=M;
        ans+=tmp;
        ans%=M;
        cout<<ans<<" ";
        
    }
    
    return 0;
}