#include <bits/stdc++.h>

using namespace std;

int main(){


    long T;
    cin>>T;
    assert(T>=1 && T<=500);

    int x = 1;
    while(T--){

        uint64_t STEPS = NULL;
        uint64_t N = NULL;

        cin>>STEPS>>N;

     //   cout<<"STEPS = "<<STEPS<<" ,N = "<<N<<endl;

        int flag = 0, GABBAR_SINGH = 0, FULAN_DEVI = 0, GABBAR_SPEED = 0, FULAN_SPEED = 0;
        for(int i=0; i<N; i++){

            if(GABBAR_SINGH == STEPS)
                flag = 1;
            else if(FULAN_DEVI == STEPS)
                flag = 2;
            else if(GABBAR_SINGH == STEPS && FULAN_DEVI == STEPS)
                flag = 3;

            if(GABBAR_SINGH > STEPS && FULAN_DEVI > STEPS)
                flag = -1;

            if(flag != 0)
                break;


            GABBAR_SINGH += GABBAR_SPEED;
            FULAN_DEVI += FULAN_SPEED;

            char GS, FD;
            cin>>GS>>FD;

            if(GS == 'F')
                GABBAR_SPEED += 1;

            if(GS == 'B')
                GABBAR_SPEED -= 1;

            if(FD == 'F')
                FULAN_SPEED += 1;
            if(FD == 'B')
                FULAN_SPEED -= 1;
        }

        if( flag == 0 ){

            int g , f;
            g = (STEPS - GABBAR_SINGH) ;
            f = (STEPS - FULAN_DEVI);

            if(FULAN_SPEED > 0)
                f = f%FULAN_SPEED;
            if(GABBAR_SPEED > 0)
                g = g%GABBAR_SPEED;

            if(g == 0)
                flag = 1;
            else if(f == 0)
                flag = 2;
            else if(g == 0 && f == 0)
                flag = 3;

            if(f!=0 && g!=0)
                flag = -1;

        }

        cout<<"Case "<<x++<<": ";
        if(flag == 1)
            cout<<"GABBAR SINGH";
        else if(flag == 2)
            cout<<"PHOOLAN DEVI";
        else if(flag == 3)
            cout<<"TIE";
        else if(flag == -1)
            cout<<"INVALID";

        cout<<endl;

        cin.clear();
    }


    return 0;
}