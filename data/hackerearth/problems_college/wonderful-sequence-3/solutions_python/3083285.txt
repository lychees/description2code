from sys import stdin
def subsequence(seq):
    if not seq:
        return seq
 
    M = [None] * len(seq)    
    P = [None] * len(seq)
 
   
    L = 1
    M[0] = 0
 
    
    for i in range(1, len(seq)):
       
        lower = 0
        upper = L
 
       
        if seq[M[upper-1]] < seq[i]:
            j = upper
 
        else:
           
            while upper - lower > 1:
                mid = (upper + lower) // 2
                if seq[M[mid-1]] < seq[i]:
                    lower = mid
                else:
                    upper = mid
 
            j = lower    
 
        P[i] = M[j-1]
 
        if j == L or seq[i] < seq[M[j]]:
            M[j] = i
            L = max(L, j+1)
 
    
    result = []
    pos = M[L-1]
    for _ in range(L):
        result.append(seq[pos])
        pos = P[pos]
 
    return result[::-1]
t = stdin.readline()
t = int(t)
for jj in xrange(t):
	n = int(stdin.readline())
	a = map(int,stdin.readline().strip().split())
	b =  subsequence(a)
	print n - len(b)