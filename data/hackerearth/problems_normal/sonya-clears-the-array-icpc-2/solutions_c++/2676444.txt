//Author : Jatin Goyal
//codecracker4

#include<bits/stdc++.h>
using namespace std;
#define MOD 1e18  //NA
#define N 1111111
#define ll long long int
#define dt int
#define all(c) c.begin(), c.end()
#define dcl(a) memset(a,0,sizeof(a))
#define rep(i,a,b) for(dt i=a;i<=(dt)(b);i++)
#define tr(container, it) for(vector<dt> ::iterator it= container.begin(); it!=container.end(); it++)
#define trp(container, it) for(vector<pair<dt,dt> >::iterator it = container.begin(); it!=container.end(); it++)
#define tra(container, it) for(typeof(container.begin()) it = container.begin(); it!=container.end(); it++)
#define cc1(a)cout<<#a<<": "<<a<<endl;
#define cc2(a,b)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<< endl;
#define cc3(a,b,c)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<<" , "<<#c<<": "<<c<<endl;
#define cc4(a,b,c,d)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<<" , "<<#c<<": "<<c<<" , "<<#d<<": "<<d<<endl;
#define pr pair<dt,dt>  //NA
#define mp(a,b) make_pair(a,b)
#define pb push_back  //NA
#define gc getchar  //NA
#define F first
#define S second

int w[N+2],ar[555],ok[555];
ll dp[555][555];
vector<int>primes;
int seive()
{
    w[0]=1;
    w[1]=1;
    for(int i=2;i<=N;i++)
    {
        if(w[i]==0)
            {
               primes.push_back(i);
                for(int j=i*2;j<=N;j=j+i) w[j]=1;
            }
    }
    return 0;
}

int cost(int x,int y)
{
    int upa=ok[x],upb=ok[y],dum;
    if(ar[x]<ar[y])
    {
        if(ar[y]<=primes[upa+1])
        {
            dum=primes[upa]+primes[upa+1]-ar[x]-ar[y];
        }
        else
        {
            dum=primes[upb]+primes[upb-1]-ar[x]-ar[y];
        }
    }
    else
    {
        dum=primes[upa]+primes[upa+1]-ar[x]-ar[y];
    }
    return dum;
}
ll solve(int a,int b)
{
    if(dp[a][b]!=MOD) return dp[a][b];

    if(b-a==1) {dp[a][b]=cost(a,b)+1; return dp[a][b];}
   // if(b<=a) cout<<"AS";

  //  cc4(a,b,cost(a,b),solve(a+1,b-1))

    dp[a][b]=solve(a+1,b-1)+cost(a,b)+1;


  //  cc4(a,b,cost(a,b),solve(a+1,b-1))
    //cout<<dp[a][b]<<endl;
//    cc3(a,b,dp[a][b])
    for(int i=a+1;i<=b-2;i+=2)
    {
        dp[a][b]=min(dp[a][b],solve(a,i)+solve(i+1,b));
    }
    return dp[a][b];
}
int main()
{
	//freopen("##inp.cpp","r",stdin);
    //freopen("##out.cpp","w",stdout);
	ios_base::sync_with_stdio(0);
	int n;
	cin>>n;
	if(n==0) {cout<<"0";return 0;}

    seive();
    //tr(primes,it) cout<<*it<<endl;
	rep(i,0,n-1) cin>>ar[i];
	rep(i,0,n-1) ok[i]=lower_bound(all(primes),ar[i])-primes.begin();

	/*rep(i,0,n-1) cc2(primes[ok[i]],ar[i])
	rep(i,0,n-1)
	{
	    rep(j,0,n-1)
	    {
	        cc3(ar[i],ar[j],cost(i,j))
	    }
	}*/

	rep(i,0,n-1) rep(j,0,n-1) dp[i][j]=MOD;
	cout<<solve(0,n-1);
    //rep(i,0,n-1) rep(j,0,n-1) cc3(i,j,dp[i][j])
    //cout<<dp[0][n-1]<<endl;

}
