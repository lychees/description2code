#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define mod 1000000007
#define INF 1000000000
#define pb push_back
#define ff first
#define ss second
#define pii pair<ll,ll> 
#define mp make_pair
#define set(x,y) memset(x,y,sizeof(x))
#define MAXN 100005
#define PI 3.14159265358979323846

// GCD ALgorithm
ll gcd(ll a,ll b){if (a==0)return b;return gcd(b%a,a);}
// Modular Exponentiation
ll power(ll a,ll b,ll m){ll ans=1;while(b>0){if(b%2!=0){ans=(ans*a)%m;}a=(a*a)%m;b>>=1;}return ans;}
//Fast Input
inline void sf(ll *a){char c=0;while(c<33)c=getc(stdin);*a=0;while(c>33){*a=(*a)*10+c-'0';c=getc(stdin);}}

ll par[1503],n,m,x,y,i,ans,t,w;
pair<ll,pii> p[100005];

ll root(ll x)
{
	while(x!=par[x])
	{
		par[x]=par[par[x]];
		x=par[x];
	}
	return x;
}

void unon(ll x,ll y)
{
	ll xx=root(x);
	ll yy=root(y);
	par[xx]=par[yy];
}

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		for(ll i=1;i<=n;i++)
		par[i]=i;
		for(ll i=1;i<=m;i++)
		{
			cin>>x>>y>>w;
			p[i]={w,{x,y}};
		}
		ans=1;
		sort(p+1,p+m+1);
		for(ll i=1;i<=m;i++)
		{
			pair<ll,pii> pp=p[i];
			x=p[i].ss.ff;
			y=p[i].ss.ss;
			w=p[i].ff;
			if(root(x)!=root(y))
			{
				unon(x,y);
				//v.pb(w);
				ans=(ans*w)%mod;
			}
		}
		cout<<ans<<endl;
	}
	return 0;
}