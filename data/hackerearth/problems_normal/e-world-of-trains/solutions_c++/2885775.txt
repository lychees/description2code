#include <bits/stdc++.h>

#define FOR(i,a,b) for (int i = (int)(a); i < (int)(b); ++i)
#define REP(i,n) FOR(i,0,n)
#define pb push_back
#define ll long long

#define TRACE(x) cerr << #x << " = " << x << endl
#define _ << " _ " <<

using namespace std;

const int Mod = 1000000007;

inline ll add(ll a, ll b){a += b; if (a >= Mod) return a-Mod; return a;}
inline ll mul(ll a, ll b){return (a*b)%Mod;}

int n, l, t, k;

//int ans[4005][4005];
int mat1[4005][4005];
int mat2[4005][4005];

ll acc1(int x, int y){
	if (x < 0 || y < 0) return 0;
	return mat1[x][y];
}
ll acc2(int x, int y){
	if (x < 0 || y < 0) return 0;
	return mat2[x][y];
}

ll dp(int x, int y){ // duljina, broj jednakih intervala za stavit
	if (x == 0) return !y;
	return mul(k-1, add(add(acc1(x-1,y), Mod-acc1(x-l,y)), acc2(x-l,y-1)));
}

ll poten(ll a, ll b){
	ll r = 1;
	while (b){
		if (b&1) r = mul(r,a);
		a = mul(a,a);
		b >>= 1;
	} return r;
}

int main(){
	cin >> n >> l >> t >> k;
	REP(x,n+1) REP(y,t+1){
		ll r = mul(1, dp(x, y));
		//ans[x][y] = r;
		mat1[x][y] = (int)add(acc1(x-1,y),r);
		mat2[x][y] = (int)add(acc2(x-1,y-1),r);
		//TRACE(x _ y _ dp(x,y));
		//TRACE((add(acc1(x-1,y), Mod-acc1(x-l,y))) _ acc2(x-l,y-1));
	} //TRACE(mat2[0][0]);
	cout << mul(mul(k, poten(k-1,Mod-2)), dp(n, t)) << endl;
	return 0;
}
