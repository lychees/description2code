#include <iostream>

using namespace std;

int n;

int upper(char ch) {
	return 'A' <= ch and ch <= 'Z';
}
int lower(char ch) {
	return 'a' <= ch and ch <= 'z';
}
int alpha(char ch) {
	return lower(ch) or upper(ch);
}
int c(char c1, char c2) {
	int g = c2 - c1;
	if(g < 0) g += 26;
	return g;
}
char move(char ch, int c) {
	if(upper(ch)) {
		return (ch - 'A' + c) % 26 + 'A';
	}else if(lower(ch)) {
		return (ch - 'a' + c) % 26 + 'a';
	}else {
		return ch;
	}
}
int check(string s, string t) {
	int g = 0;
	for(int i = 0;i < s.length();i++) {
		if(alpha(t[i]) and alpha(s[i])) {
			g = c(t[i], s[i]);
			break;
		}	
	}
	for(int i = 0;i < s.length();i++) {
		if(!alpha(t[i]) and alpha(s[i])) return -1;
		if(alpha(t[i]) and !alpha(s[i])) return -1;
		if(!alpha(t[i]) and !alpha(s[i])) {
			if(t[i] != s[i]) return -1;
		}else {
			if(upper(t[i]) and lower(s[i])) return -1;
			if(lower(t[i]) and upper(s[i])) return -1;
			if(c(t[i], s[i]) != g) return -1;
		}
	}
	return g;
}
int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin >> t;
	while(t--) {
		string s, a;
		cin >> s >> a;
		string out = "";
		for(int i = 0;i + a.length() - 1 < s.length();i++) {
			int c = check(a, s.substr(i, a.length()));
			if(c == -1) continue;
			for(int j = 0;j < s.length();j++) {
				out += move(s[j], c);
			}
			break;
		}
		cout << out << endl;
	}
    return 0;
}
