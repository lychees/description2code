#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
struct matrix
{
    long long int a[3][3];
};
matrix operator * (matrix a,matrix b)
{
    matrix tmp;
    memset(tmp.a,0,sizeof(tmp.a));
    for (int i=1; i<=2; i++)
        for (int j=1; j<=2; j++)
            for (int k=1; k<=2; k++)
                tmp.a[i][j]=(tmp.a[i][j]+(a.a[i][k]*b.a[k][j]));
    return tmp;
}
matrix power (matrix m,long long int b)
{
    matrix c;
    c.a[1][1]=1;
    c.a[1][2]=0;
    c.a[2][1]=0;
    c.a[2][2]=1;
    while(b)
    {
        if(b&1)
            c=(c*m);

        m=(m*m);
        b=b/2;
    }
    return c;
}
int main()
{   std:ios_base::sync_with_stdio(false);
    long long int t,n,m;
    long long int ans;
    matrix base;
    base.a[1][1]=0; base.a[1][2]=1; base.a[2][1]=1; base.a[2][2]=1;
    cin>>t;
    while(t--)
    {    cin>>m;
    	 if(m==1)
    	 cout<<"0 1\n";
    	 else if(m==2)
    	 cout<<"1 1\n";
    	 else
    	 {
    	 	cout<<power(base,m-1).a[1][2]<<" "<<power(base,m).a[1][2]<<"\n";
    	 }
        
    }
	return 0;
}