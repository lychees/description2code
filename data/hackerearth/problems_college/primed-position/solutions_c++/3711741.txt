#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define mp(i,j) make_pair(i,j)
#define pb(x) push_back(x)
#define MAXN 100010
#define MOD 1000000007

const int MAX = 10000000;
const int LMT = 10000;
 
int _c[(MAX>>6)+1];
vector<int> primes;
 
#define IsComp(n)  (_c[n>>6]&(1<<((n>>1)&31)))
#define SetComp(n) _c[n>>6]|=(1<<((n>>1)&31))
 
void prime_sieve() {
    for (int i = 3; i <= LMT; i += 2)
        if (!IsComp(i))
            for (int j = i*i; j <= MAX; j += i+i)
                SetComp(j);
 
    primes.push_back(2);
    for (int i=3; i <= MAX; i += 2)
        if (!IsComp(i))
            primes.push_back(i);
}
 
bool is_prime(int n) {
	if(n==2) return true;
    if ((n < 2) || (n%2 == 0)) return false;
    return !IsComp(n);
}

vector <ll> pp;

int main()
{
	prime_sieve();

	ll ans,t,n,m,sz = primes.size();

	for(ll i = 1 ;i<=sz; i++) {
		if(is_prime(i)) {
			pp.pb(primes[i-1]);
		}
	}

//	cout<<pp.size()<<endl;

	scanf("%lld", &t);

	while(t--) {
		scanf("%lld%lld", &n,&m);

		ans = (pp[n-1] * pp[m-1])%MOD;

		printf("%lld\n", ans);
	}

	return 0;
}
