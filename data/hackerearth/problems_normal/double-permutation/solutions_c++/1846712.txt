//#pragma comment(linker, "/STACK:16777216")
#include <cstdio>
#include <iostream>
#include <iomanip>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <limits>
#include <climits>
#include <cmath>
#include <functional>
#include <ctime>
#include <cstdlib>
#include <fstream>
#include <typeinfo>
#include <cassert>

#define endl '\n'
#define remainder safdskhaslfa
#define pow aafkhffhlgsdas
#define distance dagkjsdsdsara
#define left askfjasieqwskajdaks
#define right sakjjlkjlkjlashfjas
#define y0 kshjlhlliahjajkdhkasfdg
#define y1 kjlajhjaskhajkhjfkahgjahjkas

using namespace std;

const int SIZE = 1<<18;
const int MOD = (1e9)+7;

struct fenwick_tree {
	int a[SIZE];

	void Initialize() {
		memset(a,0,sizeof(a));
	}

	void Update(int pos, int val) {
		for(;pos<SIZE;pos+=pos&(-pos)) {
			a[pos]+=val;
		}
	}

	int Query_index(int pos) {
		int ans=0;
		for(;pos>=1;pos-=pos&(-pos)) {
			ans+=a[pos];
		}
		return ans;
	}

	int Query(int f, int t) {
		return Query_index(t)-Query_index(f-1);
	}
}it;

int n;
int a[SIZE],ans;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int i,j;
	int x1,x2,x3;

	cin>>n;
	for(i=1;i<=2*n;i++) cin>>a[i];

	if(n==1) {
		cout<<1<<endl;
		return 0;
	}

	it.Initialize();
	for(i=2*n;i>=1;i--) {
		x1=it.Query(1,a[i]-1);//less than the current
		ans=(ans+(3*x1)%MOD)%MOD;
		x2=it.Query(a[i],a[i]);//equal to the current
		ans=(ans+(2*x2)%MOD)%MOD;
		x3=it.Query(a[i]+1,SIZE-1);//greater than the current
		ans=(ans+(1*x3)%MOD)%MOD;
		it.Update(a[i],1);
	}

	for(i=1;i<=n-2;i++) {
		ans*=2;
		ans%=MOD;
	}

	cout<<ans<<endl;

	return 0;
}
