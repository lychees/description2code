/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
ill ABS(ill a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif
}

/* Input opener ends */

inline int bc(int n) {
    return __builtin_popcount(n);
}

double a[18][18];
double p[1<<18][18];
double dp[1<<18][18];

int main(void) {
    int n;
    cin >> n;
    for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) cin >> a[i][j];
    int MAX = 1<<n;
    for (int mask = 1; mask < MAX; mask++) {
        for (int j = 0; j < n; j++) {
            if (!(mask & (1<<j))) {
                p[mask][j] = 1;
            } else if (mask == (1<<j)){
                p[mask][j] = 0;
            } else {
                double r = 0;
                for (int k = 0; k < n; k++) if (k != j && (mask & (1<<k))) {
                    r += a[k][j];
                }
                int m = bc(mask);
                p[mask][j] = 2*r / (double)m / (double)(m-1);
            }
        }
    }
    
    for (int mask = 1; mask < MAX; mask++) {
        for (int i = 0; i < n; i++) {
            if (!(mask & (1<<i))) {
                dp[mask][i] = 0;
            } else if (mask == (1<<i)) {
                dp[mask][i] = 1;
            } else {
                double r;
//                r = 0;
//                for (int k = 0; k < n; k++) if (k != i && (mask & (1<<k))) {
//                    r += a[i][k];
//                }
//                int m = bc(mask);
//                dp[mask][i] = 2*r / m / (m-1);
                r = 0;
                for (int k = 0; k < n; k++) if (k != i && (mask & (1<<k))) {
                    r += p[mask][k] * dp[mask ^ (1<<k)][i];
                }
                dp[mask][i] = r;
            }
            
        }
    }
    
    for (int i = 0; i < n; i++) {
    	printf("%.5lf ", dp[MAX-1][i]);
    }
    cout << endl;
    return 0;
}