#include <bits/stdc++.h>
using namespace std;
long long tree[100001];
long long freq[100001];
int maxVal = 100001;

int r(int num)
{
	int i=0;
	while(num>0)
	{
		if(num%2==1)
			break;
		i++;
		num = num / 2;
	}
	
	return i;
}

long long read(int idx)
{
	long long sum=0;
	while(idx>0)
	{
		sum += tree[idx];
		idx -= idx & -idx;
	}
	return sum;
}

void update(int idx,int val)
{
	while(idx<=maxVal)
	{
		tree[idx] += val;
		idx += idx & -idx;
	}
}

void makeTree(){
	for( int idx = 1 ; idx<=maxVal ; idx++ )
	{
		int min = idx - pow(2,r(idx)) + 1;
		int max = idx;
		tree[idx]=0;
		//printf("\nmin = %d , max = %d\n",min,max);
		for(int i=min;i<=max;i++)
			tree[idx] += freq[i];
	}
}

int main()
{
    int n;
    cin>>n;
    
    for(int i=0;i<n;i++){
    	int x;
    	cin>>x;
    	freq[x]++;
    }
    
    //cum[0] = freq[0];
//    
//    for(int i=1;i<100001;i++){
//    	cum[i] = cum[i-1] + freq[i];
//    }
//    
    makeTree();
    //for(int i=1;i<10;i++)
//		printf("%3d",tree[i]);

    int q;
    cin>>q;
    while(q--){
    	int t;
    	cin>>t;
    	if(t==0){
    		int x,y;
    		cin>>x>>y;
    		cout<<read(y)-read(x-1)<<endl;
    	}else if(t==1){
    		int x;
    		cin>>x;
    		update(x,-1);
    	}else{
    		int x;
    		cin>>x;
    		update(x,1);	
    	}
    }
    return 0;
}
