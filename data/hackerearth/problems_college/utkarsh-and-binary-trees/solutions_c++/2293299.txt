/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <bits/stdc++.h>
using namespace std;
//assert 

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;

#define geti(n) int n;scanf("%d",&n)
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)
#define getl(n) long long n;cin >> n
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define max(x,y) ( x ^ ((x ^ y) & -(x < y)))
#define min(x,y) (y ^ ((x ^ y) & -(x < y)))

#define TRACE
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif

const int MOD = 1000000007,MAX=510;

ll Dp[MAX][MAX];
ll A = 0;
int H=0 ;

ll fun(int n,int h)
{
  if(h<0) return 0 ;
   
  if(n == 0) return 1 ;
   
  if(Dp[n][h]!=-1) return Dp[n][h];
     ll ans = 0 ;
  for(int i=1;i<=n;i++)
  {
    ll l = fun(i-1,h-1);
    ll r = fun(n-i,h-1);
    ll tmp=(l%MOD * r%MOD)%MOD;
    ans = (ans%MOD + tmp)%MOD;
    if(h==H) A = (A%MOD + (i*tmp)%MOD)%MOD; 
  }
  return Dp[n][h] = ans ; 
}

int main()  
{
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    #ifdef _WIN32 
      freopen("input.txt", "r", stdin);
    #endif // LOCAL_USER
     
  int n,h;
  scanf("%d %d",&n,&h);
  H=h,A=0;
  mem(Dp,-1);
  fun(n,h); 
  cout<<A<<endl;
  return 0;
}
