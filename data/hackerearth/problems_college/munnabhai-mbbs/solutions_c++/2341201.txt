#include<bits/stdc++.h>

using namespace std;

#define ll long long int

const ll d=1e9;
const ll e=1e5;

int main(int argc, char* argv[])
{
  
    ll t;
    scanf("%lld",&t);

    while(t--) {
        ll n,m,ans=0;
        vector<ll> adj[1001];
        ll Indegree[1001];
        bool counted[1001];

        scanf("%lld %lld",&n,&m);

        /* initial  all Indegree = 0 */
        for(ll i=0;i<=n;i++) {
            Indegree[i]=0;
            counted[i]=0;
        }

        /* input edges */
        while(m--) {
            ll a,b;
            scanf("%lld %lld",&a,&b);
            /*
            if(a==b)
                printf("Self loop detected\n");
            */
            adj[a].push_back(b);
            Indegree[b]++;
        }

        queue<ll> q;

        /* push 0 Indegree nodes in the queue */
        for(ll i=1;i<=n;i++) {
            if(Indegree[i]==0) {
                q.push(i);
                counted[i]=1;
                ans++;
            }
        }

        while(!q.empty()) {
            ll node=q.front();
            q.pop();

            /* Reduce 1 degree of adjacent nodes as this node is
               deleted from graph */
            for(ll i=0;i<adj[node].size(); i++) {
                ll x=adj[node][i];
                Indegree[x]--;

                /* If Indegree = 0 vertices found push it into queue */
                if(Indegree[x]==0 && !counted[x]) {
                    q.push(x);
                    counted[x]=1;
                    ans++;
                }
            }
        }

        printf("%lld\n",ans);

    }

    return 0;
}
