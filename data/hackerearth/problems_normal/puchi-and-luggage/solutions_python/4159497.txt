def merge(a, l, r):
    mid = (l + r)/2
    p = l
    q = mid + 1

    aux = [0]*(r-l+1)
    i = 0
    while p <= mid and q <= r:
        if a[p] < a[q]:
            d[a[p]] += (q-mid-1)
            aux[i] = a[p]
            p += 1
        else:
            aux[i] = a[q]
            q += 1
        i += 1

    while p <= mid:
        d[a[p]] += r-mid
        aux[i] = a[p]
        p += 1
        i += 1

    while q <= r:
        aux[i] = a[q]
        q += 1
        i += 1

    for j in xrange(i):
        a[l+j] = aux[j]

def split(a, l, r):
    if l < r:
        mid = (l + r)/2 
        split(a, l, mid)
        split(a, mid + 1, r)
        merge(a, l, r)


test = int(raw_input())
for _ in xrange(test):
    n = int(raw_input())
    a = []
    d = {}

    for _ in xrange(n):
        a.append(int(raw_input())) 
        d[a[-1]] = 0

    split(a[:],0,n-1)

    # print a
    for i in a:
        print d[i],
    print 

