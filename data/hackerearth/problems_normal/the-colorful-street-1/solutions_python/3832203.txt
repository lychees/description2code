''' HackerEarth - The colorful stree
	NguyenDatSE '''

CC_MAX = int(10e6)

class HousePainter:
	def __init__(self, cc_house):
		self.num_house = len(cc_house)
		self.cc_house = cc_house

	def minCost(self):
		# Prepapre
		minimums = [[CC_MAX for n in xrange(3)] for i in xrange(self.num_house)]
		minimums[0][0] = self.cc_house[0][0]
		minimums[0][1] = self.cc_house[0][1]
		minimums[0][2] = self.cc_house[0][2]

		# Iterative though houses data
		for n in xrange(1, self.num_house):
			for i in xrange(3):
				for j in xrange(3):
					if i != j:
						minimums[n][i] = min(minimums[n][i], 
							minimums[n - 1][j] + self.cc_house[n][i])
		return min(minimums[self.num_house - 1])

T = int(raw_input())
for t in xrange(T):
	num_house = int(raw_input())
	cc_house = []
	for n in xrange(num_house):
		cc_house.append(map(int, raw_input().split()[:3]))

	painter = HousePainter(cc_house[:num_house])
	print painter.minCost()