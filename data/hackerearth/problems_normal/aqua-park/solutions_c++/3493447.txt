

    #include<bits/stdc++.h>
    #define eps 1e-9
    #define x1 dasagd
    #define y1 adsfdhs
    using namespace std;
     
    int n,X,y;
     
    int x1[1<<20],y1[1<<20],x2[1<<20],y2[1<<20];
     
    pair<int, int> get_lower(int id)
    {
    	if (y1[id]<y2[id])
    		return make_pair(x1[id],y1[id]);
    	return make_pair(x2[id],y2[id]);
    }
     
    int was[2000];
     
    int find()
    {
    	int res=-1;
    	double bst=-1;
    	
    	for (int i=1;i<=n;i++)
    	{
    		if (was[i]||x1[i]>X||x2[i]<X)
    			continue;
    			
    		double AT=y1[i]+(y2[i]-y1[i])*1.0*(X-x1[i])/(x2[i]-x1[i]);
    		if (AT>y+eps)
    			continue;
    		if (AT>bst)
    			bst=AT,
    			res=i;
    	}
    	
    	if (res>0)
    		was[res]=1;
    	return res;
    }
     
    int main(){
     
    cin>>X>>n;
    y=1e9;
    for (int i=1;i<=n;i++)
    {
    	cin>>x1[i]>>y1[i]>>x2[i]>>y2[i];
    }
     
    while (true)
    {
    	int id=find();
    	if (id==-1)	
    		break;
    	pair<int, int> at=get_lower(id);
    	X=at.first;
    	y=at.second;
    }
     
    cout<<X<<endl;
     
    return 0;}

