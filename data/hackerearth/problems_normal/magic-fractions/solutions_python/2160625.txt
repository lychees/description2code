memo={0:0,1:0,2:1,3:3,4:5}
memo2={}
faclist={0:1,1:1}
def fac(x):
	try:return faclist[x]
	except:
		z=x*fac(x-1)
		faclist[x]=z
		return z
def comb(n,r):
	return fac(n)/(fac(r)*fac(n-r))
def isprime(x):
	i=2
	while i*i<=x:
		if x%i==0:return False
		i+=1
	return True
primelist=[0,0]
for i in range(2,501):
	if isprime(i):primelist.append(primelist[i-1]+1)
	else:primelist.append(primelist[i-1])
def fun(n):
	try:return memo[n]
	except:
		n1=primelist[n]
		try:w=memo2[n1]
		except:
			i=1
			w=1
			while i<n1/2:
				w+=comb(n1,i)
				i+=1
			if n1&1:w+=comb(n1,n1/2)
			else:w+=comb(n1,n1/2)/2
			memo2[n1]=w
		w+=fun(n-1)
		memo[n]=w
		return w
ans=0	
num=input()
ans=fun(num)
print ans