mod = 1000000007
def solve(x, d, n, m):
	mat = [[0 for i in range(n + 1)] for j in range(m + 1)]
	for i in range(n):
		mat1 = [[0 for j in range(m + 1)] for k in range(d[i] + 1)]
		D = d[i]
		for j in range(1, D + 1):
			mat1[j][0] = 1
		for j in range(1, m + 1):
			for k in range(1, D + 1):
				mat1[k][j] = 0
				if k - 1 > 0:
					mat1[k][j] = (mat1[k][j] + mat1[k - 1][j - 1]) % mod
				if k + 1 <= D:
					mat1[k][j] = (mat1[k][j] + mat1[k + 1][j - 1]) % mod
		mat[0][i + 1] = 1
		for j in range(1, m + 1):
			mat[j][i + 1] = mat1[x[i]][j]
	comb = [[0 for i in range(m + 1)] for j in range(m + 1)]
	for i in range(0, m + 1):
		comb[i][0] = 1
		comb[i][i] = 1
	for i in range(1, m + 1):
		for j in range(1, i):
			comb[i][j] = (comb[i - 1][j] + comb[i - 1][j - 1]) % mod
	res = [[0 for i in range(n + 1)] for j in range(m + 1)]
	for i in range(0, m + 1):
		res[i][1] = mat[i][1]
	for i in range(0, n + 1):
		res[0][i] = 1
	for i in range(2, n + 1):
		for j in range(1, m + 1):
			res[j][i] = 0
			for k in range(0, j + 1):
				res[j][i] = (res[j][i] + ((comb[j][j - k] * ((res[k][i - 1] * mat[j - k][i]) % mod)) % mod)) % mod;
	print res[m][n]
t = input()
for i in range(t):
	n, m = map(int, raw_input().split())
	ar = [int(x) for x in raw_input().split()]
	dim_len = [int(x) for x in raw_input().split()]
	solve(ar, dim_len, n, m)
