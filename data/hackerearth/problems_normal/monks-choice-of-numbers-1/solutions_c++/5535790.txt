// MONK.cpp	{
	//priority_queue

	#include <bits/stdc++.h>
	using namespace std;
	typedef long long			ll;
	typedef vector<int > 		vi;
	typedef pair<int, int > 	ii;
	typedef vector<ii> 			vii;
	typedef set<int > 			si;
	typedef map<string, int> 	msi;
	typedef pair<ll,ll> 		pll;

	#define f first
	#define s second
	#define pi 2*acos(0.0)
	#define rep2(i,b,a) for(int i = (int)b, _a = (int)a; i >= _a; i--)
	#define rep1(i,a,b) for(int i = (int)a, _b = (int)b; i <= _b; i++)
	#define rep(i,n) for(int i = 0, _n = (int)n ; i < _n ; i++)
	#define TRvi(c,it) for(vi::iterator it = (c).begin(); it != (c).end(); it++)
	#define TRvii(c,it) for(vii::iterator it = (c).begin(); it != (c).end(); it++)
	#define TRmsi(c,it) for(msi::iterator it = (c).begin; it != (c).end(); it++
	#define mp make_pair
	#define pb(a) push_back(a)
	#define mem(a,val) memset(a,val,sizeof(a))
	const ll inf =  1e18;
	const int mod = 1e9+7;
	const double eps = 1e-15;		//}

bool increasing = 1;

int main()
{
	ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
												//	by default

	int t;
	cin>>t;
	while(t--)
	{
		int n,k,val = 0,temp;
		cin>>n>>k;
		priority_queue<int > pq;	//	decreasing ordder
		rep(i,n)
		{
			int ctr = 0;
			cin>>temp;	//cout<<"temp"<<temp<<" ";
			if(temp) ctr = 1;
			while(temp = (temp & temp-1))	ctr++;	
			pq.push(ctr);
		}
		while(!pq.empty() && k--)
		{
			val = val + pq.top();
			// cout<<pq.top()<<" ";
			pq.pop();
		}
		cout<<val<<"\n";
	}
	return 0;
}