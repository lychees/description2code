#include <bits/stdc++.h>
#define PB push_back
using namespace std;

int level[30], in[30], vis[30], adj[30][30];
vector<int > start, v[30];
vector<char > r[30];
queue<int> q;

void BFS(){
    int temp;

    int i, rval = 0;
    while(true){
        rval++;
        start.clear();
        int flag = 0;
  //      cout<<"start:"<<endl;
        for(i = 0; i < 26; i++){
            if(in[i] == 0 and vis[i] == 1){
                level[i] = rval;
                start.PB(i);
                flag = 1;
                in[i] = -1;
//                cout<<i<<" ";
            }
        }
        if(flag == 0) break;
        int j;
        for(i = 0; i < start.size(); i++){
            for(j = 0; j < 26; j++){
                if(adj[start[i]][j] == 1 and in[j] > 0){
                    adj[start[i]][j] = 0;
                    in[j]--;
                }
            }
        }
    }
}

int main(){
    //freopen("input.txt","r",stdin);
    int n, i, j, g;
    string s[110];
    cin>>n;


    for(i=0;i<30;i++){
        in[i] = 0;
        vis[i] = -1;
    }
    for(i=1;i<=n;i++){
        cin>>s[i];
        for(j=0;j<s[i].length();j++){
            vis[s[i][j] - 'a'] = 1;
        }
    }
    memset(adj, 0, sizeof(adj));
    for(i=2;i<=n;i++){

        j = 0;
        g = 0;
        while(s[i][j] == s[i - 1][j]){
            j++;
            if(j == s[i].length() || j == s[i - 1].length()){
                g = 1;
                break;
            }

        }
        if(g == 1)
        continue;
        v[s[i - 1][j] - 'a'].PB(s[i][j] - 'a');
        adj[s[i - 1][j] - 'a'][s[i][j] - 'a'] = 1;
        vis[s[i][j] - 'a'] = 1;
        vis[s[i - 1][j] - 'a'] = 1;

        //in[s[i][j] - 'a']++;
    }
    for(i = 0; i < 26; i++){
        for(j = 0; j < 26; j++){
            if(adj[i][j])
            in[j]++;
            //cout<<adj[i][j]<<" ";
        }
        //cout<<endl;
    }

    BFS();
    for(i=0;i<26;i++){
        if(level[i] == -1)
        continue;
        r[level[i]].PB((char)(i + 97));
    }

    for(i=1;i<=30;i++){
        sort(r[i].begin(), r[i].end());
        for(j=0;j<r[i].size();j++){
            cout<<r[i][j];
        }
        if(r[i].size() != 0)
        cout<<endl;
    }

}

