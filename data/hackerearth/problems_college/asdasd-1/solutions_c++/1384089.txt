#include <iostream>
#include <algorithm> 
#include <vector>
using namespace std;
#define MAXNUM 2900
#define MAXP 420
int primes[MAXP];
void markMultiples(bool arr[],int a){
    int i=2,num;
    while((num=i*a)<=MAXNUM){
        arr[num-1]=true;
        ++i;
    }
}
void sievePrimes(){
	int i,k=0;
    bool arr[MAXNUM]={false};
    for (i=1;i<MAXNUM;++i){
        if (!arr[i]){
        	primes[k++]=i+1;
            markMultiples(arr, i+1);
        }
    }
}
int main(){
	cout.sync_with_stdio(0);
	cin.tie(0);
	sievePrimes();
	vector<int> ans;
	vector<int>::iterator it;
	int t,i,a,b,fa,fb,sol;
	cin>>t;
	while(t--){
		fa=fb=1;
		sol=0;
		cin>>a>>b;
		while(a--)
			fa<<=1;
		--fa;
		while(b--)
			fb<<=1;
		--fb;
		for(i=0;i<MAXP;++i){
			if((primes[i]*primes[i])>fa)
				break;
			if(fa%primes[i]==0){
				ans.push_back(primes[i]);
				while(fa%primes[i]==0)
					fa/=primes[i];
			}
		}
		if(fa>1)
			ans.push_back(fa);
		for(i=0;i<MAXP;++i){
			if((primes[i]*primes[i])>fb)
				break;
			if(fb%primes[i]==0){
				it=find(ans.begin(),ans.end(),primes[i]);
  				if(it!=ans.end())
  					++sol;
				while(fb%primes[i]==0)
					fb/=primes[i];
			}
		}
		if(fb>1){
			it=find(ans.begin(),ans.end(),fb);
			if(it!=ans.end())
				++sol;
		}
		cout<<sol<<"\n";
		ans.clear();
	}
	return 0;
}
