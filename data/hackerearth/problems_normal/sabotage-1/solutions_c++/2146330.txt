#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("july_clash.inp","r",stdin)
#define OUTPUT freopen("july_clash.out","w",stdout)
#define FOR(i,l,r) for(auto i=l;i<=r;i++)
#define REP(i,l,r) for(auto i=l;i<r;i++)
#define FORD(i,l,r) for(auto i=l;i>=r;i--)
#define REPD(i,l,r) for(auto i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=1e5+10;

stack <int> s,ans;
int t[N],v[N][2],n,m;
int root(int x){
    while (t[x]>0){
        s.push(x);
        x=t[x];
    }
    while (!s.empty()) t[s.top()]=x,s.pop();
    return x;
}
bool merge(int x,int y){
    int rx=root(x),ry=root(y);
    if (rx==ry) return 0;
    if (t[rx]<t[ry]) t[rx]+=t[ry],t[ry]=rx;
    else t[ry]+=t[rx],t[rx]=ry;
    return 1;
}
int main(){
    scanf("%d%d",&n,&m);
    FOR(i,1,m) scanf("%d%d",v[i],v[i]+1);
    memset(t,-1,sizeof(t));
    FORD(i,m,1) if (!merge(v[i][0],v[i][1])) ans.push(i);
    printf("%d\n",m-n+1);
    while (!ans.empty()) printf("%d\n",ans.top()),ans.pop();
}
