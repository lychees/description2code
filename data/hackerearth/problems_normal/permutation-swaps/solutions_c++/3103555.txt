#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <iomanip>
#include <utility>
#include <memory.h>
#include <set>
#include <map>

using namespace std;

#define pb push_back
#define mp make_pair
#define F first
#define S second

const int N = 100500;

int n, m;
int p[N], q[N], r[N], sz[N];

int get(int x) {
    if (r[x] == x) return x;
    return r[x] = get(r[x]);
}

void make(int a, int b) {
    if (sz[a] < sz[b]) swap(a, b);
    r[b] = a;
    if (sz[a] == sz[b]) ++sz[a];
}

int inQ[N];

void solve() {
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++) scanf("%d", &p[i]);
    for (int i = 1; i <= n; i++) scanf("%d", &q[i]);
    for (int i = 1; i <= n; i++) {
        r[i] = i;
        sz[i] = 0;
    }
    for (int i = 1; i <= m; i++) {
        int x, y;
        scanf("%d%d", &x, &y);
        x = get(x);
        y = get(y);
        if (x != y) make(x, y);
    }
    for (int i = 1; i <= n; i++) {
        inQ[q[i]] = i;
    }
    for (int i = 1; i <= n; i++) {
        int x = get(i);
        int y = get(inQ[p[i]]);
        if (x != y) {
            puts("NO");
            return;
        }
    }
    puts("YES");
}

int main() {
    int tc;
    scanf("%d", &tc);
    while (tc--) {
        solve();
    }
    return 0;
}