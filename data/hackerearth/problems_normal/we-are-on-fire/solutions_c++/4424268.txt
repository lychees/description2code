#include <bits/stdc++.h>
#include <iostream>
#include <vector>
#include <iterator>
#include <algorithm>
#include <string>
#include <cmath>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>

#define gc getchar_unlocked

using namespace std;

typedef long long        ll;
typedef pair<int, int>   pii;
typedef pair<int, pii>   piii;
typedef vector<int>      vi;
typedef vector<pii>      vii;
typedef vector<piii>     viii;

#define forup(a,b,c) for (int (a)=(b); (a)<(c); (a)++)
#define forn(a,b,c)  for (int (a)=(b); (a)<=(c); (a)++)
#define ford(a,b,c)  for (int (a)=(b); (a)>=(c); (a)--)
#define rep(i,n)     forup(i,0,n)
#define repn(i,n)    forn(i,1,n)
#define repd(i,n)    ford(i,n,1)
#define foreach(i,X) for(__typeof((X).begin()) i = (X).begin(); i != (X).end(); i++)
#define all(a)       a.begin(),a.end()

const int inf = numeric_limits<int>::max();
const ll linf = numeric_limits<ll>::max();

#define fi           first
#define se           second
#define pb           push_back
#define mp           make_pair

void fs(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int a[1001][1001];
//int seen[1001][1001];
int n,m,q;


int dfs(int x, int y)
{
    a[x][y]=0;
    int sum=1;
    if(x>1 && a[x-1][y]==1) sum+=dfs(x-1,y);
    if(y>1 && a[x][y-1]==1) sum+=dfs(x,y-1);
    if(x<n && a[x+1][y]==1) sum+=dfs(x+1,y);
    if(y<m && a[x][y+1]==1) sum+=dfs(x, y+1);
    return sum;
}


int main()
{
    fs(n); fs(m); fs(q);
    //int a[n+1][m+1];
    int count=0;
    repn(i,n) repn(j,m) {fs(a[i][j]); if(a[i][j]==1) count++; }
    while(q--)
    {
        int x,y; fs(x); fs(y);
        if(a[x][y]==1)
        {
            int sum=dfs(x,y);
            count-=sum;
        }
        printf("%d\n",count);
    }
    return 0;
}