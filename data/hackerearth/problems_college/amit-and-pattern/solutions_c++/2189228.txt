#include <bits/stdc++.h>
using namespace std;

#define LL_MAX 200000000000
#define MOD 1000000007
#define EPS 1e-14
#define PI 3.14159265358979

#define ll long long int
#define llu long long unsigned
#define ld long

#define mp make_pair
#define pb push_back
#define maX(a,b) ( (a) > (b) ? (a) : (b))
#define miN(a,b) ( (a) < (b) ? (a) : (b))
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define s(a) scanf("%d",&a)
#define sll(a) scanf("%lld",&a)
#define s_inp(a) cin>>a
typedef vector<vector<int> > vvi;
typedef vector <ll> vi;
typedef pair <ll, ll> pii;
typedef pair <pii, ll> pii1;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;
ll gcd(ll a, ll b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
ll modpow(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll mulmod(ll a, ll b, ll m) {int64_t res = 0;while (a != 0){if(a & 1)res =(res+b)%m;a>>=1;b =(b<<1)%m;}return res;}
template<typename T, typename Container=std::deque<T> >
class iterable_queue : public std::queue<T,Container>
{
public:
    typedef typename Container::iterator iterator;
    typedef typename Container::const_iterator const_iterator;

    iterator begin() { return this->c.begin(); }
    iterator end() { return this->c.end(); }
    const_iterator begin() const { return this->c.begin(); }
    const_iterator end() const { return this->c.end(); }
};
int main()
{
    int n,m,sum=0,i,j,k,l;
    s(n);s(m);
    int a[n][m];
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
         s(a[i][j]);
   k=0;l=0;
   for(k=0;k<m;k++)
   {
   for(i=k;i>=0;i--)
   {
    for(j=0;j<n;j++)
    {
        if((i+j)==sum)
            printf("%d ",a[j][i]);
    }
   }
    sum++;
    printf("\n");
   }
   l=1;
   while(sum<=(n+m))
   {
       for(i=m-1;i>=0;i--)
        for(j=l;j<n;j++)
       {
           if((i+j)==sum)
            printf("%d ",a[j][i]);
       }
       l++;
       sum++;
       printf("\n");
   }

    return 0;
}
