#include <iostream>
#include <algorithm>

using namespace std;

typedef long long ll;

ll h, u, d, t;

ll gcd(ll p, ll q){
	if (q==0){
		return p;
	}
	return gcd(q, p%q);
}

ll extended_euclid(ll a, ll b, ll &x, ll &y){
	if (a%b==0){
		x=0;
		y=1;
		return b;
	}
	ll newx, newy;
	ll ret=extended_euclid(b, a%b, newx, newy);
	x=newy;
	y=newx-(a/b)*newy;
	return ret;
}

int main(){
	cin>>t;
	while (t--){
		cin>>h>>u>>d;
		ll a=u, b=-d, c=h;
		ll d=gcd(a, b);
		if (c%d!=0){
			cout<<-1<<"\n";
		}else {
			a/=d;b/=d;c/=d;
			ll x, y;
			extended_euclid(a, b, x, y);
			ll ca=abs(a), cb=abs(b);
			ll x0=c*x, y0=c*y;
			ll lo=max(-x0/cb-1, -y0/ca-1);
			ll hi=1000000000, mid;
			int count=0;
			while (count<40){
				count++;
				mid=lo+(hi-lo+1)/2;
				if ((x0+mid*cb)>=0 && (y0+mid*ca)>=0){
					hi=mid;
				}else {
					lo=mid+1;
				}
			}
			cout<<((x0+hi*cb)+(y0+hi*ca))<<"\n";
		}
	}
}
