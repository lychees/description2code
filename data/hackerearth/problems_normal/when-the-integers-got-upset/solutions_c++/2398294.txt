#include <bits/stdc++.h>

#define l(i,n) for(int i=0;i<n;i++)
#define	all( gg )	gg.begin(),gg.end()

#define pii pair<int,int>
#define DB()    cout<<"I'm in!"<<endl

typedef long long LL;

using namespace std;

int mem[1<<15][15][15]; //mask,first,second
int n;
int a[15],p[15];

int dp(int done,int f,int s){
    if(mem[done][f][s]!=-1) return mem[done][f][s];

    int pos=__builtin_popcountll(done);
    if(pos==n) return 0;

    int ret=INT_MAX;
    l(i,n){
        //if i-th bit of the mask is off
        if((done&(1<<i))==0){
            // set the i-th bit , set i as first,set first as second
            // and add the result of the next state with the current one
            //bottom-up approach
            ret=min(ret,(a[f]^a[s]^a[i])*p[pos] + dp((done|(1<<i)),i,f) );
        }
    }
    return mem[done][f][s]=ret;
}

int main(){
std::ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    int t;
    cin>>t;
    while(t--){
        cin>>n;
        l(i,n) cin>>a[i];
        l(i,n) cin>>p[i];

        memset(mem,-1,sizeof mem);
        int ans=INT_MAX;
        l(i,n){
            l(j,n){
                if(i==j) continue;

                int first=1<<i;
                int second=1<<j;
                int dont=first|second;
                ans=min(ans,dp(dont,i,j));
            }
        }
        cout<<ans<<endl;
    }



return 0;
}
