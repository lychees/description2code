#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-(a)) : (a))
#define EQ(a,b) ( (fabs((a)-(b))<EPS) ? (1) : (0))





typedef long long LL;
//typedef __int64 LL;


#define LIM 1000000

int vis[LIM+10];


vector<int> primes;

void gen()
{
  primes.push_back(2);

  int i,j;
  for(i=4;i<=LIM;i+=2) vis[i]=1;
  for(i=3;i<=LIM;i+=2)
  {
    if(vis[i]==0)
    {
      primes.push_back(i);
      for(j=2*i;j<=LIM;j+=i)
        vis[j]=1;
    }
  }
  //for(i=0;i<20;i++) cout<<primes[i]<<endl;
}


int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,j,k,L,R,lo,hi,mid;


    gen();

    int T;
    scanf("%d",&T);
    while(T--)
    {
      LL ans=0;
      scanf("%d %d",&L,&R);

      int st=primes.size()-1,en=primes.size()-1;


      for(i=0;i<primes.size();i++)
      {
        while(st>=i  && (LL)primes[st]*primes[i]>=L) st--;
        while(en>st  && (LL)primes[en]*primes[i]>R) en--;




        if(en>i && st<en)
          ans+=(en-max(i,st));
      //  cout<<i<<" "<<st<<" "<<en<<" "<<primes.size()<<" "<<ans<<endl;
      }
     // asdf

      cout<<ans<<endl;
    }








    return 0;
}
