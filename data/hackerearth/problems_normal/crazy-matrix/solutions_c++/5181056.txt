#include <bits/stdc++.h>
using namespace std;
int a[1005][1005];
bool visited[1005][1005];
bool visited2[1005][1005];
bool set_1, set_2;
int aa[] = { 1, 0, -1, 0, 1, 1, -1, -1 };
int bb[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
int n;
void dfs(int x, int y, int ch)
{
	visited[x][y] = true;
	if (x == n) set_1 = true;
	for (int i = 0; i < 8; i++)
	{
		if (x + aa[i] < 1 || x + aa[i] > n) continue;
		if (y + bb[i] < 1 || y + bb[i] > n) continue;

		if (a[x + aa[i]][y + bb[i]] == ch && !visited[x + aa[i]][y + bb[i]]) dfs(x + aa[i], y + bb[i], ch);


	}

}
void dfs2(int x, int y, int ch)
{
	visited2[x][y] = true;
	if (y == n) set_2 = true;
	for (int i = 0; i < 8; i++)
	{
		if (x + aa[i] < 1 || x + aa[i] > n) continue;
		if (y + aa[i] < 1 || y + aa[i] > n) continue;

		if (a[x + aa[i]][y + bb[i]] == ch && !visited2[x + aa[i]][y + bb[i]]) dfs2(x + aa[i], y + bb[i], ch);


	}

}




int main()
{

	cin >> n;
	for (int i = 1; i <= n; ++i)
	{
		for (int j = 1; j <= n; ++j)
		{
			cin >> a[i][j];
		}
	}
	for (int i = 1; i <= n; ++i)
	{
		if (!visited[1][i] && a[1][i] == 1) dfs(1, i, 1);
	}
	for (int i = 1; i <= n; ++i)
	{
		if (!visited2[i][1] && a[i][1] == 2) dfs2(i, 1, 2);
	}
	if (set_1 && set_2) cout << "AMBIGUOUS" << endl;
	else if (set_1)cout << 1 << endl;
	else if (set_2)cout << 2 << endl;
	else cout << 0 << endl;
	return 0;
}
