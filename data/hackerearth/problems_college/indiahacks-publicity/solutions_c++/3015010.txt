#include <iostream>
#include <bits/stdc++.h>

using namespace std;

vector<int> G[100000];
int visited[100000]={0};

int ans=0;

void init(){
	ans=0;
    for(int i=0;i<100000;i++){
        visited[i]=0;
        G[i].clear();
    }
}

void DFS(int node){
    
    visited[node]=1;
        if(G[node].size()==0) 
            return;

        //cout<<"Node:"<<node<<endl;
        for(int i=0;i<G[node].size();i++){
            if(!visited[G[node][i]]){
              
                DFS(G[node][i]);
            }
        }   
}

int main()
{
    int t;
    cin>>t;
    while(t--){
        init();
        long n,e,A,B;
        cin>>n>>e;
        while(e--){
            cin>>A>>B;
            G[A].push_back(B);
            G[B].push_back(A);
        }
        for(int i=0;i<n;i++){
            if(!visited[i]){
                DFS(i);
                //cout<<ans<<endl;
                ans++;
            }
        }
        //cout<<endl;
        cout<<ans<<endl;
    }
        
   
    return 0;
}
