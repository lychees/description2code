#include <iostream>
using namespace std;
#define mod 1000000007
int n;
long long fn[1000101];
long long modexp(long long a, long long b){
	long long res = 1;
	while(b){
		if (b&1){
			res *=a;
			res %= mod;
		}
		b >>= 1;
		a = (a*a)%mod;
	}
	return res;
}
typedef long long ll;
long long get_uint() {
  long long n;
  int c;
  while( (c = getchar()) < '0') {
    ;
  }
  n = c - '0';
  while( (c = getchar()) >= '0')
    n = n * 10 + (c - '0');
  return n;
}
void fib(int n, ll&x, ll&y){
    if(n==1){
        x = y = 1;
        return ;
    }
     
    if(n&1){
        fib(n-1, y, x);
        y=(y+x)%mod;
    }else{
        ll a, b;
        fib(n>>1, a, b);
        y = (a*a+b*b)%mod;
        x = (a*b + a*(b-a+mod))%mod;
    }
}
int main()
{
    int t,n;
    scanf("%d",&t);
    for(int i=1;i<=1000001;i++) {
    	ll x = 0, y = 0;
    	fib(i,x,y);
    	fn[i] = x;
    }
    //for(int i=1;i<=10;i++) cout << fn[i] << " ";
    //cout << endl;
    while(t--){
    	//scanf("%d",&n);
    	n = get_uint();
    	long long ans = fn[n+2]-1;
    	/*for(int r=1;r<=n;r++) {
    		if (n-2*r+1<0) break;
    		ans += (((fn[n-r+1]*ifn[r])%mod)*ifn[n-2*r+1])%mod;
    		ans %= mod;
    	}*/
    	printf("%lld\n",ans%mod);
    }
    return 0;
}
