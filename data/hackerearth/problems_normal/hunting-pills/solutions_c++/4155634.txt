#include <iostream>
#include<bits/stdc++.h>
using namespace std;
vector<int>adj[101];
vector<int>revadj[101];
bool vist[101];
int arr[101];
stack<int>s;
void dfs(int a)
{
	vist[a]=true;
	for(int i=0;i<adj[a].size();i++)
	{   int v=adj[a][i];
		if(!vist[v])
	     dfs(v);
		
	}
	s.push(a);
	
}
int dfs1(int b)
{   int tem=arr[b];
	vist[b]=true;
	for(int i=0;i<revadj[b].size();i++)
	{
		int u=revadj[b][i];
		if(!vist[u])
		 tem+=dfs1(u);
	}
	return tem;
}


int main()
{
   int t;
   cin>>t;
   while(t--){
   	int n,m,x,y;
   cin>>n>>m;
   for(int i=0;i<n;i++)
   {
   	cin>>arr[i];
   }
   for(int i=0;i<101;i++){adj[i].clear();revadj[i].clear();vist[i]=false;}
   for(int i=0;i<m;i++)
   {
   	cin>>x>>y;
   	adj[x].push_back(y);
   	revadj[y].push_back(x);
   }
   for(int i=0;i<n;i++){if(!vist[i])dfs(i);}
   for(int i=0;i<n;i++){ vist[i]=false;}
   int mx=-1;
   while(!s.empty())
   {
   	int c=s.top();s.pop();
   	if(vist[c])continue;
   	else
   	  { mx=max(mx,dfs1(c));}
   }
   cout<<mx<<endl;
   }
    return 0;
}
