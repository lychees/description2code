After giving the ideal bouquet to his crush Chotu now plans to propose his crush.

Now the task is to say the right words. Chotu has four components (“aa”, “bb”, “ab”, “ba”) and he has to create the vow using these four components.

Chotu’s crush being an IIITian (Coder obviously) has an obsession for palindromic strings. She will only agree to the proposal if the vows are palindromic. Chotu being unknown to the world of palindromes ask you to help him creating the longest palindromic vow. Chotu gives you the count of each component (Caa, Cbb, Cab, Cba). If multiple palindromic vows exist than print lexicographically smallest vow.

Note

A palindrome is a word, phrase, number, or other sequence of characters which reads the same backward or forward. For eg. "abcba" is a palindrome but "abca" is not a palindrome. Empty string is also a palindrome.

Strings a1a2a3a4...an is said to be lexicographically smaller than b1b2b3b4...bn if for some i,  a1 = b1, a2 = b2 ... ai-1 = bi-1 and ai < bi

Input

First line contains an integer T denoting number of test cases.

Next T lines contains four integers Caa, Cbb, Cab, Cba denoting the count of string "aa", "bb", "ab" and "ba" respectively.

Output

For each test case print the required string. It is guaranteed that from given input a non empty palindromic string can be formed.

Constraints

1 ≤ T ≤ 500

1 ≤ Caa + Cbb + Cab + Cba ≤ 2000

SAMPLE INPUT
4
2 1 0 0
1 1 0 0
3 2 1 1
3 2 1 0

SAMPLE OUTPUT
aabbaa
aa
aaabbbaabbbaaa
aabbaabbaa

Explanation

In the first sample test case the possible palindromic strings are {"aa", "bb", "aaaa", "aabbaa"}, but the longest palindromic string formed is "aabbaa".

In the second test case the possible palindromic strings are {"aa", "bb"} the answer is "aa" as there are two palindromic strings of size two, we will print the lexicographically smallest string.
