from heapq import heappush, heappop, heapify
from collections import defaultdict
 
def encode(symb2freq):
	heap = [[wt, [sym, ""]] for sym, wt in symb2freq.items()]
	heapify(heap)
	while len(heap) > 1:
		lo = heappop(heap)
		hi = heappop(heap)
		for pair in lo[1:]:
			pair[1] = '1' + pair[1]
		for pair in hi[1:]:
			pair[1] = '0' + pair[1]
		heappush(heap, [lo[0] + hi[0]] + lo[1:] + hi[1:])
	return sorted(heappop(heap)[1:], key=lambda p: (len(p[-1]), p))

for ii in range(input()):
	freq = defaultdict(float)
	n = input()
	for ij in range(n):
		ch,val = raw_input().split()
		val = int(val)
		freq[ch] = -val - ord(ch)/100.0
	code = encode(freq)
	ref = {}
	for item in code:
		ref[item[1]] = item[0]
	st = raw_input()
	ans = ''
	l = len(st)
	i = 0
	ei = 1
	while i<l:
		if st[i:ei] in ref:
			ans += ref[st[i:ei]]
			i += (ei-i)
		ei += 1
	print ans


