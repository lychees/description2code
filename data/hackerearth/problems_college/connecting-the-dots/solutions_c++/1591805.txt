#include<bits/stdc++.h>

using namespace std;

list<int>adj[1001];

int mat[1001][1001];

int dist[1001];
int bfs(int n)
{
    bool visited[n+1];

    int i,j,k,ans=0,u,v,c;
    for(i=1;i<=n;i++)
        {visited[i]=0;
        dist[i]=-1;
        }

    list<int> q;
    list<int>::iterator it;
    list<pair<int,int> >p;
    q.push_back(1);
    dist[1]=0;

    int prev=0,col;
    while(!q.empty())
    {v=q.front();
    q.pop_front();
              if(v==n)
                break;
     if(prev)
     {
         col=mat[prev][v];
     }
    for(it=adj[v].begin();it!=adj[v].end();it++)
    {
       // p=*it;
        u=*it;
        c=mat[v][u];
         
        if(!visited[u]&&((col!=c)||(prev==0)))
        {
            visited[u]=1;
            dist[u]=dist[v]+1;
            q.push_back(u);
          
        }
    }

     prev=v;

    }

return dist[n];
}


int main()
{
    int n,m,i,j,k,l,x,y,c;

    cin>>n>>m;
  
    for(i=0;i<m;i++)
    {
        //cin>>x>>y>>c;
        scanf("%d%d%d",&x,&y,&c);
       
        adj[x].push_back(y);
        mat[x][y]=c;
    }

cout<<bfs(n);


}
