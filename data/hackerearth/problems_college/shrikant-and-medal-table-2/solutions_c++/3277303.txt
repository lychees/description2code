#include<bits/stdc++.h>
using namespace std;
struct data{
	int g,s,b;
	string name;
};
bool cmp(data a,data b){
	if(a.g>b.g) return true;
	if(a.g<b.g) return false;
	if(a.s>b.s) return true;
	if(a.s<b.s) return false;
	if(a.b>b.b) return true;
	if(a.b<b.b) return false;
	int x=a.name.compare(b.name);
	if(x>0) return false;
	return true;
}
int main(){
	int n;
	cin>>n;
	map<string,int> idx;
	string s1,s2,s3;
	int n3=3*n;
	data d[n3];
	int len=0;
	for(int i=0;i<n;i++){
		cin>>s1>>s2>>s3;
		if(idx[s1]>0) d[idx[s1]-1].g++;
		else{
			//cout<<"Allocating "<<s1<<" after len="<<len<<" because idx["<<s1<<"]="<<idx[s1]<<endl;
			idx[s1]=(++len);
			//cout<<"Now idx["<<s1<<"]="<<idx[s1]<<endl;
			d[len-1].g=1;
			d[len-1].s=d[len-1].b=0;
			d[len-1].name=s1;
		}
		if(idx[s2]>0) d[idx[s2]-1].s++;
		else{
			//cout<<"Allocating "<<s2<<" after len="<<len<<" because idx["<<s2<<"]="<<idx[s2]<<endl;
			idx[s2]=(++len);
			//cout<<"Now idx["<<s2<<"]="<<idx[s2]<<endl;
			d[len-1].s=1;
			d[len-1].g=d[len-1].b=0;
			d[len-1].name=s2;
		}
		if(idx[s3]>0) d[idx[s3]-1].b++;
		else{
			//cout<<"Allocating "<<s3<<" after len="<<len<<" because idx["<<s3<<"]="<<idx[s3]<<endl;
			idx[s3]=(++len);
			//cout<<"Now idx["<<s3<<"]="<<idx[s3]<<endl;
			d[len-1].b=1;
			d[len-1].s=d[len-1].g=0;
			d[len-1].name=s3;
		}
	}
	/*for(map<string,int>::iterator i=idx.begin();i!=idx.end();i++)
		cout<<i->first<<" "<<i->second<<endl;*/
	sort(d,d+len,cmp);
	for(int i=0;i<len;i++) cout<<d[i].name<<" "<<d[i].g<<" "<<d[i].s<<" "<<d[i].b<<endl;
}