#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int inv[3][1000], p[3] = {2, 5, 719}, m[305][305][3], n, q, ask[305][3];
int aux[305];

int exp(int x, int k, int p) {
	if (k == 0)
		return 1;
	int y = exp(x, k/2, p);
	if (k%2 == 0)
		return y*y%p;
	return y*y%p*x%p;
}

void cycle(int a, int b, int c) {
	for (int i = 0; i < n; ++i)
		aux[i] = m[b][i][c];
	for (int i = b-1; i >= a; --i) {
		for (int j = 0; j < n; ++j)
			m[i+1][j][c] = m[i][j][c];
	}
	
	for (int i = 0; i < n; ++i)
		m[a][i][c] = aux[i];
}

//triangulate the k-th matrix
void tri(int k) {
	int u = p[k];
	for (int j = 1; j < n; ++j) {
		for (int i = 0; i < j; ++i) {
			int fi = -1, fj = -1;
			for (int a = 0; a < n; ++a) {
				if (fi == -1 && m[i][a][k] != 0)
					fi = a;
				if (fj == -1 && m[j][a][k] != 0)
					fj = a;
			}

			if (fj == -1)
				break;
			if (fj > fi)
				continue;
			if (fj < fi || fi == -1) {
				cycle(i, j, k);
				break;
			}

			int v = (u-inv[k][m[i][fi][k]]*m[j][fi][k]%u)%u;
			for (int a = 0; a < n; ++a)
				m[j][a][k] = (m[j][a][k] + v*m[i][a][k])%u;
			assert(m[j][fj][k]*m[i][fj][k] == 0);
		}
	}
}

bool check(int k) {
	int u = p[k];
	
	for (int i = 0; i < n; ++i) {
			int fi = -1, fj = -1;
			for (int a = 0; a < n; ++a) {
				if (fi == -1 && m[i][a][k] != 0)
					fi = a;
				if (fj == -1 && ask[a][k] != 0)
					fj = a;
			}

			if (fj == -1)
				return true;
			if (fj > fi)
				continue;
			if (fj < fi || fi == -1)
				return false;

			int v = (u-inv[k][m[i][fi][k]]*ask[fi][k]%u)%u;
			for (int a = 0; a < n; ++a)
				ask[a][k] = (ask[a][k] + v*m[i][a][k])%u;
			assert(ask[fj][k]*m[i][fj][k] == 0);
	}

	for (int i = 0; i < n; ++i)
		if (ask[i][k] != 0)
			return false;

	return true;
}

int main() {
	scanf("%d%d", &n, &q);
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j) {
			int x; scanf("%d", &x);
			for (int k = 0; k < 3; ++k)
				m[j][i][k] = x%p[k];
		}

	for (int k = 0; k < 3; ++k)
		for (int i = 1; i < p[k]; ++i)
			inv[k][i] = exp(i, p[k]-2, p[k]);

	tri(0), tri(1), tri(2);
	
	/* for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j)
			cout << m[i][j][0] << ' ';
		cout << endl;
	} */
	
	for (int i = 0; i < q; ++i) {
		for (int j = 0; j < n; ++j) {
			int x; scanf("%d", &x);
			for (int k = 0; k < 3; ++k)
				ask[j][k] = x%p[k];
		}
		bool y = (check(0)&&check(1)&&check(2));
		cout << (y ? "Yes\n" : "No\n");
	}
}