#include<bits/stdc++.h>
#define ll long long
#define scii(x) scanf("%d",&x)
#define scll(x) scanf("%I64d",&x)
#define pr(x) printf("%d\n",x)
#define prll(x) printf("%I64d\n",x)
#define loop(c, m) for(int c=0;c<m;c++)
#define FOR(c, f, t) for(int c=f;c<t;c++)
#define FORR(c, f, t) for(int c=f;c>=t;c--)
#define mem(a,k) memset(a,k,sizeof(a))
#define M 1000000007
#define isactive(x,k) (x&(1<<k))
#define trv(y,x) for(typeof(x.begin())y=x.begin();y!=x.end();y++)
#define pb(f) push_back(f)
#define pii pair<int,int>
#define vi vector<int>
#define scs(a) scanf("%s",a)
#define MAX INT_MAX
#define MIN INT_MIN
using namespace std;
struct node
{
    int t;
    int cost;
    int rate;
    node(int _t,int _rate,int _cost){
    t=_t, cost=_cost, rate=_rate;
    }
};
vector<node> inp;
int n;
ll d,best,last_t,area,cost;
bool compare(node a,node b)
{
    if(a.t==b.t){
        if(a.rate==b.rate)
            return(a.cost<b.cost);
        return(a.rate>b.rate);
    }
    return(a.t<b.t);
}
int main()
{
   int x,y,z;
   cin>>n>>d;
   loop(i,n){
       cin>>x>>y>>z;
       inp.push_back(node(x,z,y));
   }
   sort(inp.begin(),inp.end(),&compare);
   last_t=inp.front().t;
   for(auto it : inp){
       ll extra=1LL*best*(it.t-last_t);
       area+=extra;
       if(area>=d)
        break;
       if(it.rate>best){
        best=it.rate;
        cost+=it.cost;
       }
       last_t=it.t;
   }
   cout<<cost;
   return 0;
}