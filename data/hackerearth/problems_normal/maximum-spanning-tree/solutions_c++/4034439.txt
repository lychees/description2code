#include <iostream>
using namespace std;
#include<vector>
#include<algorithm>
#include<cstdlib>
#include <utility>
int a[100005];
int findP(int i){
    while(i!=a[i]){
        i=a[i];
    }
    return i;
}
int isCycle(int i, int j){
    i=findP(i);
    j=findP(j);
    if(i!=j)
        return 0;
    return 1;
}
void makeSet(int i, int j){
    i=findP(i);
    j=findP(j);
    if(i!=j){
        a[i]=j;
    }
}
int kruskal(vector< pair<int, pair<int, int> > > adj, int n , int m){
    int i,j,k,c,mm=0;
    c=i=0;
    while(c!=n-1){
    	j=adj[i].second.first;
    	k=adj[i].second.second;
    	if(isCycle(j,k)==0){
    		c++;
    		makeSet(j,k);
    		mm+=adj[i].first;
    	}
    	i++;
    }
    return mm;
    
}
int main()
{
    int i,j,k,l,n,m,t;
    cin>>t;
    //t=1;
    while(t--){
        cin>>n>>m;
        //n=3;m=3;
        vector< pair<int, pair<int, int> > > adj;
        for(i=1;i<=n;i++){
        	a[i]=i;
        }
        for(i=0;i<m;i++){
            cin>>k>>l>>j;
            adj.push_back(make_pair(j,make_pair(k,l)));
            
        }
        sort(adj.rbegin(),adj.rend());
        cout<<kruskal(adj,n,m)<<endl;
    }
    return 0;
}
