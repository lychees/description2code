#include<bits/stdc++.h>
using namespace std;
#define lli long long int

lli n=0;

void max_heapify(lli A[],lli i){
int left=2*i;
int right=2*i+1;
int largest;
if(left<=n && A[left]>A[i])
    largest=left;
else
    largest=i;
if(right<=n && A[right]>A[largest])
    largest=right;
if(largest!=i){
    swap(A[i],A[largest]);
    max_heapify(A,largest);
}
}


void increase_value(lli A[],lli i,lli val){
if(val<A[i]){
    cout<<"value cannot be increased";
    return;
}
A[i]=val;
while(i>1 && A[i]>A[i/2]){
    swap(A[i],A[i/2]);
    i=i/2;
}
}


void insert_value(lli A[],lli val){
n=n+1;
A[n]=-1;
increase_value(A,n,val);
}


int extract_max(lli A[],lli x){
int flag=0,i;
if(n==0)
{
    return 0;
}
for(i=1;i<=n;i++){
    if(A[i]==x){
        flag=1;
        break;
    }
}
if(!flag){
    return 0;
}
else{
    A[i]=A[n];
    n=n-1;
    max_heapify(A,i);
    return 1;
}

}
lli maximum(lli A[]){
    if(n==0)
        return -1;
return A[1];
}
lli minimum(lli A[]){
    if(n==0)
        return -1;
lli m=100000,i;
for(i=1;i<=n;i++){
    m=min(m,A[i]);
}
return m;
}

int main(){
lli A[100005],q,x,y;
cin>>q;
for(int i=0;i<q;i++){
    cin>>x;
    if(x==1 || x==2)
        cin>>y;

    if(x==1)
    insert_value(A,y);

    else if(x==2){
       if(!extract_max(A,y))
             cout<<"-1"<<endl;
     }
     else if(x==3)
         cout<<maximum(A)<<endl;

     else if(x==4)
         cout<<minimum(A)<<endl;

}
return 0;}

