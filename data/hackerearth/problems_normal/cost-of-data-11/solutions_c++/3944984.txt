#include <bits/stdc++.h>

using namespace std;

int ans = 0;

struct trie {

    trie* child[26 + 2];                        // array on characters
    bool isLeaf;

    trie() {
        memset(child, 0, sizeof(child));
        isLeaf = 0;
    }

    void insert(const string &str , int index) {
        if(str.length() == index)                   // the last node
            isLeaf = 1;
        else {

            int cur = str[index] - 'a';             // currnet character

            if(child[cur] == 0 ){                   // this character in this position isn't initialized before
                child[cur] = new trie();            // create new character (node)
                ans++;                              // increase the number of created nodes
            }

            child[cur]->insert(str , index + 1);    // insert the new node as a child for current node
        }
    }
};

int main()
{

    int n;
    string s;
    trie tree;

    cin >> n;

    for(int i = 0; i < n; i++){

        cin >> s;
        tree.insert(s , 0);
    }

    cout << ans + 1 << "\n";

    return 0;
}