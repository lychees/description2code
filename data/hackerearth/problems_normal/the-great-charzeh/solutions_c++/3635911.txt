#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef pair<LL, LL> PLL;
typedef pair<int, LL> PIL;
typedef pair<LL, int> PLI;
typedef double DB;

#define pb push_back
#define mset(a, b) memset(a, b, sizeof a)
#define all(x) (x).begin(), (x).end()
#define bit(x) (1 << (x))
#define bitl(x) (1LL << (x))
#define sqr(x) ((x) * (x))
#define sz(x) ((int)(x.size()))

#define X first
#define Y second

template <typename T, typename U> 
inline void chkmax(T& x, U y) {
	if (x < y) x = y;
}

template <typename T, typename U>
inline void chkmin(T& x, U y) {
	if (y < x) x = y;
}
const int MAXN = 305;
int n, m;
int a[MAXN], f[2*MAXN], g[2*MAXN], chk[MAXN], T;
VI adj[MAXN];
int l[MAXN], r[MAXN];

int Find(int u) {
	for (int j = 0; j < adj[u].size(); j++) {
		int v = adj[u][j];
		if (chk[v] == T) continue;
		chk[v] = T;
		if (r[v] == -1 || Find(r[v])) {
			r[v] = u;
			return 1;
		}
	}
	return 0;
}
bool can(int mid) {
	for (int i = 0; i < n; i++) {
		adj[i].clear();
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (f[a[i] + j] <= mid) adj[i].pb(j);
		}
	}
	mset(r, -1);
	int ret = 0;
	for (int i = 0; i < n; i++) {
		T++;
		if (Find(i)) ret++;
	}
	return ret == n;
}

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i++) scanf("%d", a + i);
	for (int i = 0; i < n + m - 1; i++) scanf("%d", f + i), g[i] = f[i];
	sort(g, g + n + m - 1);
	int st = 0, en = n + m - 1;
	while (st < en) {
		int mid = st + en >> 1;
		if (can(g[mid])) {
			en = mid;
		} else st = mid + 1;
	}
	printf("%d\n", g[st]);
	return 0;
}