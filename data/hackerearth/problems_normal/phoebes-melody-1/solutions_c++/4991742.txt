//Sinha Saab
//NARUTO Fan



#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>

#define ll long long int
#define maxN 200000
#define maxVal (int)100000000
#define minVal -100000000
#define mod 1000000007LL

#define gcd(a,b) __gcd(a,b)

using namespace std;

int n,k;
int a[maxN+5];
int bit[maxN+5];
int p[maxN+5];

void update1(int i,int v)
{
	while(i<=maxN)
	{
		bit[i]=max(bit[i],v);
		i=i+(i&(-1*i));
	}
}

int query1(int i)
{
	int r=minVal;
	while(i>0)
	{
		r=max(r,bit[i]);
		i=i-(i&(-1*i));
	}
	return r;
}

void update2(int i,int v)
{
    while(i<=maxN)
    {
        bit[i]=min(bit[i],v);
        i=i+(i&(-1*i));
    }
}

int query2(int i)
{
    int r=maxVal;
    while(i>0)
    {
        r=min(r,bit[i]);
        i=i-(i&(-1*i));
    }
    return r;
}

int main()
{
    int t,i,x;
    ll ans;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d%d",&n,&k);
    	for(i=1;i<=n;i++)
    		scanf("%d",&a[i]);
    	//from left
    	for(i=1;i<=n;i++)
    	{	
            bit[i]=minVal;
            p[i]=minVal;
        }
        for(i=(k+1);i<=n;i++)
    	{
    		update1(a[i-k],i-k);
    		p[i]=query1(a[i]-1);
        }
    	//from right
    	for(i=1;i<=n;i++)
    		bit[i]=maxVal;
    	for(i=(n-k);i>=1;i--)
    	{
    		update2(a[i+k],i+k);
            x=query2(a[i]-1);
            if(x==maxVal)
                continue;
            if((x-i)<(i-p[i]))
                p[i]=x;
    	}
        ans=0;
        for(i=1;i<=n;i++)
            if(p[i]!=minVal)
                ans+=(ll)abs(i-p[i]);
        printf("%lld\n",ans);
    }
    return 0;
}