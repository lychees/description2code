#include <bits/stdc++.h>
#define f first
#define s second
#define ll long long
#define mp make_pair
#define pb push_back

using namespace std;

double eps = 1e-9;
const int INF = int (1e9+7);
const int MAXN = int (1e5+7);

int n, st, f, dist[1300][1300][2], d[1300][2], u[1300][2], ans = INF; 

int main () {
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);  

	scanf("%d", &n);
	for(int i = 1; i <= n; i ++) 
		for(int j = 1; j <= n; j ++)
			scanf("%d", &dist[i][j][0]);
	for(int i = 1; i <= n; i ++) 
		for(int j = 1; j <= n; j ++)
			scanf("%d", &dist[i][j][1]);
	scanf("%d%d", &st, &f);
	for(int p = 0; p < 2; p ++) {
	for(int i = 1; i <= n; i ++) {
		d[i][0] = d[i][1] = INF;
		u[i][0] = u[i][1] = 0;
	}
	d[st][0] = 0;
	d[f][1] = 0;
	for(int i = 1; i <= n; i ++) {
		int v = -1;
		for(int j = 1; j <= n; j ++)
			if(!u[j][0] && (v == -1 || d[j][0] < d[v][0]))
				v = j;
		u[v][0] = 1;
		for(int j = 1; j <= n; j ++)
			if(!u[j][0] && d[j][0] > d[v][0] + dist[v][j][p])
				d[j][0] = d[v][0] + dist[v][j][p];
	}
	for(int i = 1; i <= n; i ++) {
		int v = -1;
		for(int j = 1; j <= n; j ++)
			if(!u[j][1] && (v == -1 || d[j][1] < d[v][1]))
				v = j;
		u[v][1] = 1;
		for(int j = 1; j <= n; j ++)
			if(!u[j][1] && d[j][1] > d[v][1] + dist[j][v][1 - p])
				d[j][1] = d[v][1] + dist[j][v][1 - p];
	}
	for(int i = 1; i <= n; i ++)
		if(i != st && i != f) 
			ans = min(ans, d[i][0] + d[i][1]);
	}
	cout << ans;
	return 0;
}