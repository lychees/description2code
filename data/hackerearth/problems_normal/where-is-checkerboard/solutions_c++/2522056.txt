#include <bits/stdc++.h>
using namespace std;
typedef int ll;
static char a[2005][2005];
static int rowsum[2001][2001];
static int colsum[2001][2001];
static int diagsum[2001][2001];
ll check(ll i, ll j, ll n)
{

	ll p=1;
	for(ll k=0;k<=31;k++)
	{
			if(j!=0)
		{
			if(rowsum[i+k][j-1]!=rowsum[i+k][j+31])
			return 0;
			
		}
		else
		{
			if(rowsum[i+k][j+31]!=0)
			return 0;
		}
		if(i!=0)
		{
			if(colsum[i-1][j+k]!=colsum[i+31][j+k])
			return 0;
			
		}
		else
		{
			if(colsum[i+31][j+k]!=0)
			return 0;
		}
		if(i+30-k>=0 && j-1>=0)
		{if(abs(diagsum[i+31][j+k]-diagsum[i+30-k][j-1])!=p)
		return 0;}
		else
		{
			if(abs(diagsum[i+31][j+k])!=p)
			return 0;
		}
		if(i-1>=0 && j+30-k>=0){
		if(abs(diagsum[i+k][j+31]-diagsum[i-1][j+30-k])!=p)
		return 0;}
		else
		{
			if(abs(diagsum[i+k][j+31])!=p)
			return 0;
		}
		p++;
	}
	return 1;
}
int main()
{
    ll m,n;
    scanf("%d %d",&m,&n);
    for(ll i=0;i<m;i++)
    scanf("%s",a[i]);
    for(ll i=0;i<m;i++)
    {
    	
    	for(ll j=0;j<n;j++)
    	{
    	 if(j==0)
    	 rowsum[i][j]=(a[i][j]=='_'?1:-1);
    	 else
    	 {
    	 	rowsum[i][j]=(a[i][j]=='_'?1:-1);
    	 	rowsum[i][j]+=rowsum[i][j-1];
    	 }
    	 
    	 if(i==0 || j==0)
    		diagsum[i][j]=(a[i][j]=='_'?1:-1);
    		else
    		{
    			diagsum[i][j]=(a[i][j]=='_'?1:-1);
    		//	if(a[i][j]==a[i-1][j-1])
    			diagsum[i][j]+=diagsum[i-1][j-1];
    		}
    	 
    	 
    	}
    	
    	
    }
    for(ll j=0;j<n;j++)
    {
    	for(ll i=0;i<m;i++)
    	{
    		if(i==0)
    	 colsum[i][j]=(a[i][j]=='_'?1:-1);
    	 else
    	 {
    	 	colsum[i][j]=(a[i][j]=='_'?1:-1);
    	 	colsum[i][j]+=colsum[i-1][j];
    	 }
    	}
    }

    ll s=0;
    for(ll i=0;i<m-31;i++)
    {
    	for(ll j=0;j<n-31;j++)
    	{
    	//cout<<a[i][j]<<endl;
    		//cout<<i<<" "<<j<<endl;
    		  if(a[i][j]=='_' && a[i+31][j+31]=='_')
    			s+=check(i,j,n);
    	}
    }
    printf("%lld\n",s);
    return 0;
}
