#include <iostream>
using namespace std;
#include <stdio.h>
#include<vector>
#include<algorithm>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
struct distanta{
	int dist;
	int valid;
	int legat;
	int start;
	int stop;
	bool operator<(distanta other) const{
		return dist <other.dist;
	}
};

int incerc(int n, vector<int> &h, int dist, int k){
	int nr,pv;
	nr = 0;
	pv = 0;
	for(int i = 1 ; i < n ;i ++)
		if( h[i]- h[pv] >= dist){
			pv = i;
			nr++;
		}
	return nr >= k;
}

int cauta(int n, vector<int> &h, int k){
	int inf,sup,aux;
	inf = 1;
	sup = 100000;
	while(sup != inf){
		aux = (sup + inf)/2;
		if( aux == inf)
			aux++;
		if( incerc(n,h,aux,k))
			inf = aux;
		else
			sup = aux -1;
	}
	return inf;
}
int main()
{
	int t,n,k,i,j, max,ii,min,st,dr,dadaugat,parcurg;
	vector<int> h(100001);
//	int d[100001];
//	int dnou[100001];
//	int *dd,*ddn,*aux;
	vector<int> d(100001);
//	vector<distanta> d(100001);
	scanf("%d",&t);
	while(t > 0){
		t--;
		scanf("%d%d",&n,&k);		
		for( i = 0 ; i < n ;i++){
			scanf("%d",&(h[i]));			
		}
		sort(h.begin(),h.begin()+n);
		printf("%d\n",cauta(n,h,k-1));
		
		
//		for( i= 0 ; i < n-1 ; i++)	
//		d[i] = h[i+1] - h[i];

/*
		for( i = 0 ; i < n-1 ;i++){
			d[i].dist = h[i+1] - h[i];
			d[i].valid = 1;
			d[i].legat = 0;
			d[i].start = i;
			d[i].stop = i+1;
		}
		for( parcurg = 1; parcurg <= n-k; parcurg++){
			min = 1000000;
			for( i = 0 ; i < n-1; i++)
				if( d[i].dist <min && d[i].valid){
					min = d[i].dist;
					ii = i;
				}
			d[ii].valid = 0;
			st = -1;
			for( i = ii-1; i >=0; i--)
				if( d[i].valid){
					st = i;
					break;
				}
			dr = -1;
			for( i = ii+1; i< n-1; i++)
				if( d[i].valid){
					dr = i;
					break;
				}
			if( dr == -1)
				dr = st;
			if( st == -1)
				st = dr;
			if( d[st].dist > d[dr].dist)
				d[dr].dist += d[ii].dist;
			else
				d[st].dist += d[ii].dist;
		}
		min = 1000000;
		for( i = 0 ; i < n-1 ; i++)
			if( d[i].dist < min && d[i].valid)
				min = d[i].dist;
		printf("%d\n",min);
//		sort(d.begin(),d.begin()+n-1);
//		for( i = 0 ; i < n-1 ; i++)
		//printf("%d\t",d[i].dist);
		
		
		
*/
/*
//		for( i = 0 ; i < n ; i++)
//			printf("%d\t",h[i]);
		for( i = 1; i < n ; i++)
			d[i] = h[i] - h[0];
		
		dd = d;
		ddn = dnou;
		k--;
		for( i = 2 ; i <= k ; i++){
			for( j = i; j < n-k+i ; j++){
				max = min(dd[i-1],h[i]-h[i-1]);
				for( ii = i; ii < j ; ii++)
				{
					if(min(dd[ii],h[j]-h[ii]) > max)
					{
						max = min(dd[ii],h[j]-h[ii]);
					}
				}
				ddn[j] = max;
				}
			aux = dd;
			dd = ddn;
			ddn = aux;
			}
		max = dd[k];
*/		
//		max = 1;
//		for( i = k+1; i < n ;i ++)
//			if(dd[i] > max)
//				max = dd[i];
//		printf("%d\n",max);			
	}

    return 0;
}
