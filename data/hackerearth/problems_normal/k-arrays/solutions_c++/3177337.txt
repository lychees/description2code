#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define lld "%I64d"
#define DEBUG(x) cout<<">value ("<<#x<<") : "<<x<<endl;
#define mod 1000000007

const int lmt = 20;
lli power(lli a,lli b){
	lli id = 1;
	while(b>0){
		if(b&1LL)
			id = ( (id%mod)*(a%mod) )%mod;
		a = ( (a%mod)*(a%mod) )%mod;
		b=b>>1LL;
	}
	return id;
}

int main(){
    int t,n,k,x;
    scanf("%d",&t);
    while(t--){
        vector<int> inp[lmt];
        scanf("%d %d",&n,&k);
        for(int i=0;i<k;i++){
            for(int j=0;j<n;j++){
                scanf("%d",&x);
                inp[i].pb(x);
            }
        }
        lli mx=0,mn=(long long)1e16,mxl=1000,mnl=0;
        int upto = 1<<n;
        for(int i=1;i<upto;i++){
            lli tmp = 1;
            int len = 0;
            for(int j=0;j<n;j++){
                if(i&(1<<j)){
                    lli loc = 0;
                    for(int p=0;p<k;p++)
                        loc = (loc+inp[p][j])%mod;
                    tmp = (tmp*loc)%mod;
                    len++;
                }
            }
            if(len>1){
                tmp *= power(len,mod-2);
                tmp %= mod;
            }
            //DEBUG(tmp);
            //DEBUG(len);
            if(mx<tmp){
                mx=tmp;
                mxl=len;
            }else if(mx==tmp){
                mxl = min(mxl,(long long)len);
            }

            if(mn>tmp){
                mn=tmp;
                mnl=len;
            }else if(mn==tmp){
                mnl = max(mnl,(long long)len);
            }
        }
        printf("%lld %lld\n",mx^mn,mnl^mxl);
    }
    return 0;
}
