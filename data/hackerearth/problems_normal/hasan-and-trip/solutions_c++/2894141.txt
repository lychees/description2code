#pragma comment(linker, "/STACK:640000000")
 
#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
 
using namespace std;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define forr(i, l, r) for(int i = int(l); i <= int(r); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))
 
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
 
const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-9;
const ld pi = ld(3.1415926535897932384626433832795);
 
inline bool in(int i, int j, int n, int m) {
    return i >= 1 && i <= n && j >= 1 && j <= m;
}
 
inline int myrand() {
    return (rand() ^ (rand() << 15));
}
 
const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, 1, 0, -1};

template <typename T>
inline void out(const T &a) {
#ifdef _DEBUG
    cerr << " == " << a << endl;
#endif
}

template <typename T1, typename T2>
inline void out(const pair<T1, T2> &a) {
#ifdef _DEBUG
    cerr << " == " << a.x << ' ' << a.y << endl;
#endif
}

template <typename T>
inline void out(const vector<T> &a) {
#ifdef _DEBUG
    cerr << " == " << sz(a) << " :";
    forn(i, sz(a)) cerr << ' ' << a[i]; cerr << endl;
#endif
}
 
const int N = 3333;

int n, x[N], y[N], f[N];

inline void gen() {
	return;
}	
 
inline bool read() {
	if(!(cin >> n)) return false;
	forn1(i, n) cin >> x[i] >> y[i] >> f[i];
    return true;
}

ld dp[N];

inline ld dist(int i, int j) {
	return sqrt((x[i] - x[j]) * 1LL * (x[i] - x[j]) + (y[i] - y[j]) * 1LL * (y[i] - y[j]) + ld(0));
}

inline void solve() {
	forn(i, N) dp[i] = -INF64;
	dp[1] = f[1];
	for(int i = 1; i < n; i++) {
		ld cur = dp[i];
		for(int j = i + 1; j <= n; j++) {
			dp[j] = max(dp[j], cur + f[j] - dist(i, j));
		}
	}

	cout << dp[n] << endl;
    return;
}
 
int main() {
#ifdef _DEBUG
    assert(freopen("input.txt", "rt", stdin));
    assert(freopen("output.txt", "wt", stdout));
#endif
 
    cout << setprecision(6) << fixed;
    cerr << setprecision(10) << fixed;
 
    srand(int(time(NULL)));
 
    int T = 1;
    //assert(scanf("%d", &T) == 1);
 
    forn(i, T) {
        //cerr << "TEST == " << i + 1 << endl;
        assert(read());
        solve();
    }
 
#ifdef _DEBUG
    cerr << "TIME == " << clock() << " ms" << endl;
#endif
    return 0;
} 