#include<bits/stdc++.h>
using namespace std;
//https://www.hackerearth.com/pradnya16-wildcard/algorithm/swapnil-and-the-bubble-game/
// use LCS algo DP
char str1[1002],str2[1002];
// int LCS(int n,int m)
// {
//     int arr[n+1][m+1];
//     memset(arr,0,sizeof(arr));
//     for(int i=1;i<=n;i++)
//     {
//        for(int j=1;j<=m;j++)
//        {
//            if(str1[i-1]==str2[j-1])
//              arr[i][j]=arr[i-1][j-1]+1;
//            else
//             arr[i][j]=max(arr[i-1][j],arr[i][j-1]); 
//        }
//     } 
//     return arr[n][m];
// }
int min(int x, int y, int z) 
{
    return min(min(x, y), z);
}
 
int editDistDP(int m, int n)
{
    // Create a table to store results of subproblems
    int dp[m+1][n+1];
 
    // Fill d[][] in bottom up manner
    for (int i=0; i<=m; i++)
    {
        for (int j=0; j<=n; j++)
        {
            // If first string is empty, only option is to
            // isnert all characters of second string
            if (i==0)
                dp[i][j] = j;  // Min. operations = j
 
            // If second string is empty, only option is to
            // remove all characters of second string
            else if (j==0)
                dp[i][j] = i; // Min. operations = i
 
            // If last characters are same, ignore last char
            // and recur for remaining string
            else if (str1[i-1] == str2[j-1])
                dp[i][j] = dp[i-1][j-1];
 
            // If last character are different, consider all
            // possibilities and find minimum
            else
                dp[i][j] = 1 + min(dp[i][j-1],  // Insert
                                   dp[i-1][j],  // Remove
                                   dp[i-1][j-1]); // Replace
        }
    }
 
    return dp[m][n];
}
 
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n1,n2,n,m;
        scanf("%d%d",&n1,&n2);
        scanf("%d",&n); 
        cin>>str1;
        scanf("%d",&m); 
        cin>>str2;
        int diff=abs(editDistDP(n,m));
        int swp=diff*5+n1;
        int frd=n2;
        if(!diff)
        {
          frd=n*10+n2;
        }
        printf("%d\n%d\n",swp,frd);
        if(swp>frd)
            cout<<"Swapnil"<<endl;
        else if(swp<frd)
            cout<<"Friend"<<endl;
        else
            cout<<"Tie"<<endl;

    }
    return 0;
}