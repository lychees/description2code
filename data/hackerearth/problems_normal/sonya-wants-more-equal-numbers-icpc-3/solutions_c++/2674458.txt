#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<vector>
#include<queue>
#include<algorithm>
#include<math.h>
#include<map>
#include<stack>
#include<string.h>
#define STOP system("pause")
#define bits(num) __builtin_popcount(num)
#define CASE int t;scanf("%d",&t);while(t--)
#define ll long long int
#define lu unsigned long long
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b
using namespace std;
struct node
{
	ll s,first,sec;
};
bool func(const node& aa,const node& bb)
{
	if(aa.s!=bb.s)
	{
		return aa.s<bb.s;
	}
	else
	{
		if(aa.sec!=bb.sec)
		return aa.sec<bb.sec;
		return aa.first<bb.first;
	}
}
int main()
{
	ll n,i,j,a[1000];
	cin>>n;
	for(i=0;i<n;i++)
	{
		cin>>a[i];
	}
	vector<node> v;
	vector<ll> v1;
	for(i=0;i<n;i++)
	{
		ll sum=0;
		for(j=i;j<n;j++)
		{
			sum+=a[j];
			v.push_back((node){sum,i,j});
		}
	}
	sort(v.begin(),v.end(),func);
	ll idx=0,idx1=0,ans1=-1;
	ll len=v.size();
	for(i=1;i<len;i++)
	{
		if(v[i].s==v[i-1].s)
		idx1=i;
		else
		{
			ll ans=1,prev=v[idx].sec;
			for(j=idx+1;j<=idx1;j++)
			{
				if(v[j].first>prev)
				{
					ans++;
					prev=v[j].sec;
				}
			}
			if(ans1<ans)
			{
				ans1=ans;
				v1.clear();
				v1.push_back(v[idx].s);
				
			}
			else if(ans1==ans)
			{
				v1.push_back(v[idx].s);
			}
			idx=i;
			idx1=i;
		}
	}
			ll ans=1,prev=v[idx].sec;
			for(j=idx+1;j<=idx1;j++)
			{
				if(v[j].first>prev)
				{
					ans++;
					prev=v[j].sec;
				}
			}
			if(ans1<ans)
			{
				ans1=ans;
				v1.clear();
				v1.push_back(v[idx].s);
				
			}
			else if(ans1==ans)
			{
				v1.push_back(v[idx].s);
			}
			cout<<ans1<<endl;
			len=v1.size();
			for(i=0;i<len;i++)
			cout<<v1[i]<<" ";
			cout<<endl;
    return 0;
}
