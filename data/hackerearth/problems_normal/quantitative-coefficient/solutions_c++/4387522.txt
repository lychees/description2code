#include <cstdio>
#include <queue>
#include <vector>
#include <functional>
#include <utility>
#include <cstring>

using namespace std;

typedef long long ll;
typedef pair<ll, int> pll;

const ll MOD = (ll)1e9 + 7;
const int NMAX = 1500 + 5;

bool used[NMAX];

vector<pll> g[NMAX];

ll prim(int s)
{
	priority_queue<pll, std::vector<pll>, std::greater<pll> > q;
	ll min_cost = 1;
	pll p;

	q.push(make_pair(1, s));
	while(!q.empty()) {
		p = q.top();
		q.pop();
		int v = p.second;

		if(used[v])
			continue;

		min_cost = (min_cost * p.first) % MOD;
		used[v] = true;

		for(int i = 0; i < g[v].size(); i++) {
			int y = g[v][i].second;
			if(!used[y])
				q.push(g[v][i]);
		}
	}
	return min_cost;
}

int main()
{
	int t,n,m,a,b;
	ll c,res;
	scanf("%d", &t);
	while(t--) {
		scanf("%d %d", &n, &m);
		memset(used, 0, sizeof(bool) * NMAX);
		for(int i = 1; i <= n; i++) {
			g[i].clear();
		}
		for(int i = 0; i < m; i++) {
			scanf("%d %d %lld", &a, &b, &c);
			g[a].push_back(make_pair(c, b));
			g[b].push_back(make_pair(c, a));
		}

		res = prim(1);	
		printf("%lld\n", res);
	}
}
