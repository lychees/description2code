#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-(a)) : (a))
#define EQ(a,b) ( (fabs((a)-(b))<EPS) ? (1) : (0))





typedef long long LL;
//typedef __int64 LL;



vector< pair<int,int> > adj[1010];
int vis[1010][10];
int n,m;
queue< pair<int,int> > q;

int  bfs(int u,int dest)
{
    while(!q.empty()) q.pop();
    int i;
    pair<int,int> f;


    vis[u][0]=vis[u][1]=vis[u][2]=1;

    q.push(make_pair(u,0));
    q.push(make_pair(u,1));
    q.push(make_pair(u,2));


    while(!q.empty())
    {
        f=q.front();q.pop();
        for(i=0;i<(int)adj[f.first].size();i++)
        {
          pair<int,int> pr=adj[f.first][i];
          if(pr.second==f.second) continue;
          if(vis[pr.first][pr.second]) continue;
          vis[pr.first][pr.second]=vis[f.first][f.second]+1;
          q.push(pr);
        }
    }

    int mn=10000000;
    for(i=0;i<3;i++)
    {
      if(vis[dest][i])
        mn=min(mn,vis[dest][i]-1);
    }
    if(mn==10000000)
      mn=-1;
    return mn;
}


int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,u,v,w;

    scanf("%d %d",&n,&m);

    for(i=0;i<m;i++)
    {
      scanf("%d %d %d",&u,&v,&w);
      u--;
      v--;
      w--;
      adj[u].push_back(make_pair(v,w));
     // adj[v].push_back(make_pair(u,w));
    }


    cout<<bfs(0,n-1);


    return 0;
}
