// The truth is always either terrible or boring
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define rep1(i,a,b) for(int i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(int i = b, _a = (a); i >= _a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple // remember tie & ignore
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int __t; cin >> __t; rep1(_t,1,__t)
#define case(ans) "Case #" << _t << ": " << ans << "\n"
#define cout(d) cout << fixed << setprecision(d)
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1e9 + 7;

int n, par[100100], req[100100], dp[100100][2];
vi t[100100];

inline int sol(int x, int par, int parity) {
    if(dp[x][parity] + 1) return dp[x][parity];
    
    int ans = 0, ansrev = 0;
    for(int ch: t[x]) if(ch != par)
        ans += sol(ch, x, parity), ansrev += sol(ch, x, !parity);
    
    if(req[x] ^ parity) return dp[x][parity] = 1 + min(ans, ansrev);
    return dp[x][parity] = min(ans, 2 + ansrev);
}

int main() {
//    ios_base::sync_with_stdio(false); cin.tie(NULL);
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    mem(dp, -1);
    cin >> n;
    int u, v;
    rep(i,n-1) {
        cin >> u >> v;
        t[u-1].eb(v-1), t[v-1].eb(u-1);
    }
    rep(i,n) cin >> req[i];
    rep(i,n) cin >> u, req[i] ^= u;
    
    cout << sol(0,0,0);
    return 0;
}