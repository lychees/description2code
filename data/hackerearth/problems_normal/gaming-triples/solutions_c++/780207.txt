
#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000007
#define total 5
#define M 100000*MOD
#define NIL 0
#define MAXN 200001
#define EPS 1e-5
#define INF (1<<28)
typedef unsigned long long int uint64;
typedef long long int int64;
pair<int,int>a[111111];
int64 BIT[111111];
void clea(int n){
for(int i=1;i<=n;i++)
BIT[i]=0;
}
void upd(int idx,int n){
while(idx<=n){
BIT[idx]+=1;
idx+=(idx)&(-idx);
}
}
int64 query(int l,int r){
int64 ret=0;
while(r){
ret+=BIT[r];
r-=(r)&(-r);
}
while(l){
ret-=BIT[l];
l-=(l)&(-l);
}
return ret;
}
int main(){
int mov,t,n,i;
scanf("%d",&t);
while(t--){
scanf("%d",&n);
for(i=1;i<=n;i++){
scanf("%d",&a[i].first);
a[i].second=i;
}
sort(a+1,a+n+1);
int64 ans1=0,ans2=0;
for(i=1;i<=n;){
int val=a[i].first;
int cnt=0;
while(i<=n&&a[i].first==val){
ans1+=query(0,a[i].second)*query(a[i].second-1,n);
cnt++;
i++;
}
int idx=i;
while(cnt--){
idx--;
upd(a[idx].second,n);
}
}
clea(n);
for(i=n;i>=1;){
int val=a[i].first;
int cnt=0;
while(i>=0&&a[i].first==val){
ans2+=query(0,a[i].second)*query(a[i].second-1,n);
cnt++;
i--;
}
int idx=i;
while(cnt--){
idx++;
upd(a[idx].second,n);
}
}
clea(n);
scanf("%d",&mov);
if(mov){
if(ans1>ans2)
printf("Sarika\n");
else
printf("Ananya\n");
}
else{
if(ans1>ans2)
printf("Ananya\n");
else
printf("Sarika\n");
}
if(ans1<=ans2)
printf("%lld\n",2*ans1);
else
printf("%lld\n",2*ans2+1);
}
return 0;
}