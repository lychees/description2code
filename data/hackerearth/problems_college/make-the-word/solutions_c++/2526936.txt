#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <vector> 
#include <list>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <fstream>
#include <ctime>
#include <cassert>
#include <stack>
#include <string.h>
#include <bitset>
using namespace std;

typedef long long int ll;
typedef pair<int, int > pii;

#define MOD 1000000007
#define pb push_back

bool can = false;
bool vis[105];
int n;
int cnt[200][256];
string s;
vector<string> ar;

void makeString(int low, int high)
{
	if(can)
		return;
	if(low > high) {
		can = true;
		return;
	}
	for(int i=0;i<n;i++) {
		if(vis[i])
			continue;
		
		if(binary_search(ar[i].begin(), ar[i].end(), s[low]))
		{	vis[i] = true;
			makeString(low+1, high);
			if(can)
				return;
			vis[i] = false;
		}
	}
}

void solve()
{
	
	char a, b, c, d, e, f, ch;
	cin>>s>>n;
//	sort(s.begin(), s.end());
	for(int i=0;i<105;i++)
		vis[i] = false;
	
	for(int i=0;i<n;i++) {
		cin>>a>>b>>c>>d>>e>>f;
		cnt[i][a-'0'] = 1;
		cnt[i][b-'0'] = 1;
		cnt[i][c-'0'] = 1;
		cnt[i][d-'0'] = 1;
		cnt[i][e-'0'] = 1;
		cnt[i][f-'0'] = 1;
		string x = "";
		x+=a;x+=b;x+=c;x+=d;x+=e;x+=f;
		sort(x.begin(), x.end());
		ar.push_back(x);
	}
	makeString(0, s.size()-1);
	if(can)
		cout<<"YES\n";
	else
		cout<<"NO\n";
}

int main()
{
	std::ios::sync_with_stdio(false);
//	freopen ("C:\\Users\\Ritesh\\Desktop\\Coding\\Codeforces\\input.txt","r",stdin);
	int t;
	//cin>>t;
	t = 1;
	while(t--)
	{
		solve();
	}
	return 0;
}