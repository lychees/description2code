#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

const int MAX_N = 1030;    // Change as necessary
const ll  MODD = 1000000009; //

int A[MAX_N],C[MAX_N] = {0};
vector<int> B_s[MAX_N],B_e[MAX_N];
int m[MAX_N],M[MAX_N];

bool has(const vector<int>& v,int lo,int hi){
  int i = lower_bound(v.begin(),v.end(),lo)-v.begin();
  for(int k=0;k<2 && i+k<v.size();k++)
    if(lo <= v[i] && v[i] <= hi)
      return true;
  return false;
}

int main(){
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  
  int n,x;

  cin >> n;
  
  for(int i=0;i<=1000;i++) {
    m[i] = n-1;
    M[0] = 0;
  }
  
  for(int i=0;i<n;i++){
    cin >> A[i];
    C[A[i]]++;
    m[A[i]] = min(m[A[i]],i);
    M[A[i]] = max(M[A[i]],i);
  }
  
  for(int i=0;i<n;i++){
    for(int j=0;j<i;j++)
      B_s[i].push_back(A[j]);
    for(int j=i+1;j<n;j++)
      B_e[i].push_back(A[j]);
    sort(B_s[i].begin(),B_s[i].end());
    sort(B_e[i].begin(),B_e[i].end());
  }
  
  if(n <= 2){ cout << n << endl; return 0; }
  
  int best = 0;
  
  for(int y1=0;y1<=1000;y1++)
    for(int y2=y1+1;y2<=1000;y2++){
      int curr = C[y1]+C[y2];
      if(has(B_s[min(m[y1],m[y2])],y1,y2)) curr++;
      if(has(B_e[max(M[y1],M[y2])],y1,y2)) curr++;
      best = max(curr,best);
    }
  
  cout << best << endl;
  
  return 0;
}
