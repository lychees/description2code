

    #include <bits/stdc++.h>
    using namespace std;
    vector<int> order;
    int tests;
    string st1,st2;
    int nxt1[1<<17][27],nxt2[1<<17][27];
    int queries,a,b,k;
    int pw[1<<20],S1[1<<17][27],S2[1<<17][27];
    bool solve()
    {
     for (int ii=0;ii<26;ii++)
     {
      int i=order[ii];
      int id1=nxt1[a][i];
      int id2=nxt2[b][i];
      int s3=S1[a+k][id1]-S1[a][id1];
      int s4=S2[b+k][id2]-S2[b][id2];
      s3*=pw[100000-a];
      s4*=pw[100000-b];
      if (s3!=s4)
       return 0;
     }
     return 1;
    }
    int main(){
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
     for (int i=0;i<26;i++)
      order.push_back(i);
      
      pw[0]=1;
      for (int i=1;i<=100000;i++)
       pw[i]=pw[i-1]*173;
       
    cin>>tests;
    for (;tests;--tests)
    {
     getline(cin,st1);
     getline(cin,st1);
     getline(cin,st2);
     
     for (int i=0;i<26;i++)
         nxt1[st1.size()][i]=nxt2[st2.size()][i]=i;
      
      for(int i=0;i<st1.size();i++)
      {
       memcpy(S1[i+1],S1[i],104);
       memcpy(S2[i+1],S2[i],104);
       S1[i+1][st1[i]-'a']+=pw[i+1];
       S2[i+1][st2[i]-'a']+=pw[i+1];
      }
      
     for (int i=st1.size()-1;i>=0;--i)
     {
         int id=st1[i]-'a';
         for (int j=25;j>=0;j--)
         {
          nxt1[i][j]=nxt1[i+1][j];
          if (j+1<26&&nxt1[i][j+1]==id)
           swap(nxt1[i][j],nxt1[i][j+1]);
         }
     }
     for (int i=st2.size()-1;i>=0;--i)
     {
         int id=st2[i]-'a';
         for (int j=25;j>=0;j--)
         {
          nxt2[i][j]=nxt2[i+1][j];
          if (j+1<26&&nxt2[i][j+1]==id)
           swap(nxt2[i][j],nxt2[i][j+1]);
         }
     }
     
     cin>>queries;
     for (;queries;--queries)
     {
      scanf("%d %d %d",&a,&b,&k);
      --a;
      --b;
      bool val=solve();
      if (val)
      puts("yes");
      else
      puts("no");
     }
    }
    return 0;}

