#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <cstring>
#include <string>
#include <cmath>
using namespace std;

const int N = 1e5 + 5;
int n, m;
char s[N];
map<string, int> mp;
int dp[N];

int main()
{
	int n, m;
	cin >> n >> m;
	cin >> s;
	for (int i = 0; i < m; ++i) {
		string ss;
		int v;
		cin >> ss >> v;
		mp[ss] = v;
	}
	for (int i = 0; i < n; ++i) {
		dp[i + 1] = dp[i] + 1;
		string ss;
		ss += s[i];
		if (mp.count(ss))
			dp[i + 1] = dp[i] + mp[ss];
		if (i) {
			ss = s[i - 1] + ss;
			if (mp.count(ss))
				dp[i + 1] = max(dp[i+1], dp[i-1] + mp[ss]);
		}
	}
	cout << dp[n] << endl;


	return 0;
}