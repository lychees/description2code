#include<bits/stdc++.h>
 
#define lld long long int
#define FOR(i,a,b) for(i= a ; i < b ; ++i)
#define rep(i,n) FOR(i,0,n)
#define repn(i,n) FOR(i,1,n+1)
#define all(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#define pb push_back
#define sz size()
#define pii pair<int, int>
#define pll pair <lld ,lld>
#define mp make_pair
#define fill(x,v) memset(x,v,sizeof(x))
#define scan(v,n) vector<int> v(n);rep(i,n)cin>>v[i];
#define vi vector<int>
#define MOD 1000000007
#define ff first
#define ss second
 
using namespace std;
lld modpow(lld a,lld n,lld temp){lld res=1;while(n>0){if(n&1)res=(res*a)%temp;a=(a*a)%temp;n>>=1;}

return res%temp;} 
 
int main()
{
  const int N = 1001;
  lld dp[N];
  int t, i;
  dp[1] = 1;
    dp[2] = 2;
    dp[3] = 4;
    dp[4] = 8;
    for (int i  = 5; i <= N; i++) 
      dp[i] = (dp[i-1]+dp[i-2] + dp[i-3] + dp[i-4]) % MOD;
  cin>>t;
  while (t--) {
    int n, m;
    cin>>n>>m;
    lld ddp[N][2] = {0};
    ddp[1][1] = 0;
    for (int i = 1; i <= m; i++) {
      for (int j = i-1; j >= 1; j--) {
        ddp[i][1] = (ddp[i][1] + ddp[i-j][0]*(ddp[j][1] + ddp[j][0]))%MOD;
      }
      ddp[i][0] = (modpow(dp[i], n, MOD)-ddp[i][1] + MOD) % MOD;
    }
    cout<<ddp[m][0]<<"\n"; }


	return 0;
}
