# def next_permutation(a):
#     for i in reversed(range(len(a) - 1)):
#         if a[i] < a[i + 1]:
#             break
#     else:
#         return False

#     j = next(j for j in reversed(range(i + 1, len(a))) if (a[i] < a[j]))

#     a[i], a[j] = a[j], a[i]

#     a[i + 1:] = reversed(a[i + 1:])
#     return True


# def gcd(a,b):
#     if b == 0:
#         return a
#     return gcd(b,a%b)

# fact = [1,]
# for i in range(1,13):
#     fact.append(i*fact[i-1])

# perm = [0]*20

# for i in range(2,11):
#     s = range(1,i+1)

#     d = 0
#     x = 0
#     while 2*d < fact[i]:
#         ret = 1
#         for a in range(0,len(s)):
#             for b in range(a+1,len(s)):
#                 ret *= gcd(b-a,abs(s[a]-s[b]))
#         d += 1
#         x += ret
#         next_permutation(s)
#     perm[i] = 2*x

test = int(input())
for _ in range(test):
    n, m = map(int, raw_input().split())
    if n == 2:
        print 2 % m
    elif n == 3:
        print 8 % m
    elif n == 4:
        print 68 % m
    elif n == 5:
        print 1504 % m
    elif n == 6:
        print 127792 % m
    elif n == 7:
        print 57140352 % m
    elif n == 8:
        print 258023200384 % m
    elif n == 9:
        print 10151395367145472 % m
    elif n == 10:
        print 3673835865235792306176 % m
    elif n == 11:
        print 13318668301694192513859649536 % m
    elif n == 12:
        print 531680718673514734573555796872790016 % m
    else:
        print 0
