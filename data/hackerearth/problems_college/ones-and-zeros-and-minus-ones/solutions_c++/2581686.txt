#include<vector>
#include<iostream>
#include<stdio.h>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<math.h>
#include<cstdlib>
#include<ctime>
#include<cstring>
#include<climits>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

#define lli long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<lli,lli>
#define pb push_back

const double EPS = 1e-24;
const lli mod = 1000000007ll;
const double PI = 3.14159265359;
int INF = 2147483645;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;

int gcd(int a , int b)
{
   if(b==0) return a;
   a%=b;
   return gcd(b,a);
}

vector<int> V;
int a[100010];
int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin>>t;
    while(t--)
    {
        V.clear();
        int n;
        cin>>n;
        for(int i=0;i<n;i++)
        {
            cin>>a[i];
            if(a[i] == -1)
                V.pb(i);
        }

        if(V.size() == 0)
        {
            cout<<"0/1\n";
            continue;
        }

        double maxx = -1.0;
        int ansx = -1;
        for(int i=0;i<V.size();i++)
        {
            int x = V[i];
            int cnt1 = 0,l=x-1,r=x+1;
            while(l>=0)
            {
                if(a[l] == 1)
                    cnt1++;
                else if(a[l] == -1)
                    break;
                l--;
            }
            while(r<n)
            {
                if(a[r] == 1)
                    cnt1++;
                else if(a[r] == -1)
                    break;
                r++;
            }
            double temp = cnt1/1.0;
            if(temp>maxx)
            {
                ansx = cnt1;
                maxx = temp;
            }
        }

        cout<<ansx<<"/1\n";
    }

    return 0;
}
