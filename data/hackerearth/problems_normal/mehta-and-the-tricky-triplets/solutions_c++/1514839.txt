#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
int n,p[10];
long long arr[100002],dp[100002][4][16];
long long solve(int idx,int cnt,int mask)
{
	if(idx==n)
	{
		if(cnt==3 && mask)
			return 1;
		return 0;	
	}
	if(dp[idx][cnt][mask]!=-1)
		return dp[idx][cnt][mask];
	long long res=solve(idx+1,cnt,mask);
	if(cnt<3)
		res+=solve(idx+1,cnt+1,mask & arr[idx]);
	return dp[idx][cnt][mask]=res;	
}
int main()
{
	cin>>n;
	memset(dp,-1,sizeof(dp));
	p[2]=0,p[3]=1,p[5]=2,p[7]=3;
	for(int i=0;i<n;i++)
	{
		long long x;
		cin>>x;
		arr[i]=0;
		while(x>0)
		{
			if(x%10==2 || x%10==3 || x%10==5 || x%10==7)
				arr[i]|=(1<<p[x%10]);
			
			x/=10;
		}
	}
	cout<<solve(0,0,15);
	return 0;
}