    #include <iostream>
    #include <cstdio>
     
    using namespace std;
    const int MAX = 15000;
    const int MOD = 1e9 + 7;
    int fib[MAX];
    long long fibs[MAX];
     
    long long mod(long long x, long long a) {
        return ((x % a) + a) % a;
    }
     
     
    int main(int argc, char* argv[]) {
        if(argc == 3) {
            freopen(argv[1], "r", stdin);
            freopen(argv[2], "w", stdout);
        }
        else if(argc == 2)
            freopen(argv[1], "r", stdin);
        int t, x;
        long long m, n, ans, sum;
        fib[0] = 0;
        fib[1] = 1;
        fibs[0] = 0;
        fibs[1] = 1;
        for(int i = 2;i < MAX;++i) {
            fib[i] = mod(fib[i-1] + fib[i-2], 10000);
            fibs[i] = mod(fibs[i-1] + fib[i], MOD);
        }
        sum = fibs[MAX-1];
        for(scanf("%d", &t);t--;) {
            scanf("%lld %lld", &m, &n);
            m--, n--;
            if(m + (MAX - mod(m, MAX)) > n - mod(n, MAX)) {
                n = mod(n, MAX);
                m = mod(m, MAX);
                if(m > 0)
                    ans = fibs[n] - fibs[m-1];
                else
                    ans = fibs[n];
            }
            else {
                ans = 0;
                x = mod(m, MAX);
                if(x > 0)
                    ans = sum - fibs[x-1], m += (MAX - x);
                else
                    ans = 0;
                if(m < n) {
                    ans = mod(ans + fibs[mod(n, MAX)], MOD);
                    n -= (n % MAX);
                    if(n > m)
                        ans = mod(ans + mod(sum * mod((n - m) / MAX, MOD), MOD), MOD);
                }
            }
            printf("%lld\n", ans);
        }
        return 0;
     
    }
