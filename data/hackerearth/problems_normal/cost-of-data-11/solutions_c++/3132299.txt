#include<bits/stdc++.h>
#include<cstring>
using namespace std;
typedef struct trie_node
{
	char value;
	struct trie_node* edges[26];
}t_node;
t_node*getnode(char  key)
{
	t_node*temp=(t_node*)malloc(sizeof(t_node));
	temp->value=key;
	for(int i=0;i<26;i++)
	{
		temp->edges[i]=NULL;
	}
	return temp;
}
void inset_string(t_node *root,char *s)
{
	int level;
	int length=strlen(s);
	t_node*ptr=root;
	t_node*temp=NULL;
	for(int level=0;level<length;level++)
	{	
		int index=s[level]-'a';
		if(ptr->edges[index]==NULL)
		{
			temp=getnode( s[level]);
			ptr->edges[index]=temp;
		}
		ptr=ptr->edges[index];
	}
}
int ans=0;
int countnodes(t_node* root)
{
	t_node *temp=root;
	for(int i=0;i<26;i++)
	{
		if(temp->edges[i]!=NULL)
		{	
			ans++;
			countnodes(temp->edges[i]);
		}
	}
}
int main()
{
	char s[200];
	int t;
	cin>>t;
	t_node*root=getnode(' ');
	while(t--)
	{
		scanf("%s",s);
		inset_string(root,s);
	}
	ans=0;
	countnodes(root);
	cout<<ans+1<<endl;
	//cout<<countnodes()<<endl;
	return 0;
}
