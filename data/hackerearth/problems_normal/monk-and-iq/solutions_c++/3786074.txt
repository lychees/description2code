#include <bits/stdc++.h>
using namespace std;

vector<int> course[100005];
int iq[100005];

struct classcomp {
  bool operator() (const pair<int,long long>& lhs, const pair<int,long long>& rhs) const
  {
    if(lhs.second==rhs.second)
  {
    return lhs.first<rhs.first;
  }
  else
    return lhs.second<rhs.second;
  }
};
/*
bool fncomp (pair<int,long long> a, pair<int,long long> b)
{
  if(a.second==b.second)
  {
    return a.first<b.first;
  }
  else
    return a.second<b.second;
}
*/
int main()
{
  int c,p,n;
  cin>>c>>p>>n;
  
  for(int i=1;i<=n;i++)
  {
    int aa;
    cin>>aa;
    course[i].push_back(aa);
  }
  for(int i=0;i<p;i++)
  {
    cin>>iq[i];
  }
  //bool(*fn_pt)(pair<int,long long>, pair<int,long long>) = fncomp;
  set<pair<int,long long>,classcomp> gg;

 for(int i=1;i<=c;i++)
  {
    long long sum=0;
    if(course[i].size()==0)
    {
    	gg.insert(make_pair(i,0ll));
    	continue;
    }
    if(course[i].size()-1>=0)
      sum+=course[i][course[i].size()-1];
    if(course[i].size()-2>=0)
      sum+=course[i][course[i].size()-2];
    sum*=course[i].size();
    gg.insert(make_pair(i,sum));
  }

  for(int i=0;i<p;i++)
  {
    pair<int, long long> aaa=*gg.begin();
    int cor=aaa.first;
    cout<<cor<<" ";
    gg.erase(gg.begin());
    course[cor].push_back(iq[i]);
    long long sum=0;
    if(course[cor].size()-1>=0)
      sum+=course[cor][course[cor].size()-1];
    if(course[cor].size()-2>=0)
      sum+=course[cor][course[cor].size()-2];
    sum*=course[cor].size();
    gg.insert(make_pair(cor,sum));
  }

  return 0;
}