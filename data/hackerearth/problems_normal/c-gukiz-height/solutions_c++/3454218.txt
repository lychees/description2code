#include <bits/stdc++.h>
using namespace std;

#define ms(s, n) memset(s, n, sizeof(s))
#define FOR(i, a, b) for(int i = (a); i < (b); i++)
#define FORd(i, a, b) for(int i = (a) - 1; i >= (b); i--)
#define sz(a) int((a).size())
#define all(a) (a).begin(), (a).end()
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pi;
typedef vector<int> vi;
typedef vector<pi> vii;
ll gcd(ll a, ll b) {ll r; while (b != 0) {r = a % b; a = b; b = r;} return a;}
ll lcm(ll a, ll b) {return a / gcd(a, b) * b;}
#define EPS 1e-9
const int mod = (int) 1e9 + 7;
const int INF = (int) 1e9;
const ll LINF = (ll) 1e18;
const ld PI = 2 * acos(0);

const int maxn = 100010;
int n, h;
int a[maxn];

void solve() {
	cin>>n>>h;
	ll sum = 0;
	FOR(i, 1, n + 1) {
		cin>>a[i]; sum += a[i];
		if (sum >= h - (i * (i + 1)) / 2)
        {
            cout<<i;
            return;
        }
	}
	ld tot = 0;
	ll ans = LINF;
	FOR(i, 0, n) {
		ll l = 0, r = 3LL * INF / n;
		if (i == 0) l = 1;
		r = min(r, 3 * LINF / abs(sum));
		while (l < r) {
			ll m = (l + r) >> 1;
			if (tot + m * sum + (m * n + i) * (m * n + i + 1) / 2 < h) l = m + 1; else r = m;
		}
		ans = min(ans, l * n + i);
		tot += a[i + 1];
	}
	cout<<ans;
}

int main() {
	//ios_base::sync_with_stdio(0); cin.tie(NULL);
#ifdef _LOCAL_
	freopen("in.txt", "r", stdin); //freopen("out.txt", "w", stdout);
#endif
	solve();
#ifdef _LOCAL_
	//printf("\nTime elapsed: %dms", 1000 * clock() / CLOCKS_PER_SEC);
#endif
	return 0;
}

