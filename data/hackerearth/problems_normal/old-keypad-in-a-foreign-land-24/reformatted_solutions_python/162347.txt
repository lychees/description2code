def check(keys):
    res = []
    for i in keys:
        if i != 0:
            res.append(i-1)
    return res


# import pdb
n = int(raw_input())
s = raw_input()
s = s.split(" ", len(s))
freq = []
for i in s:
    try:
        freq.append(int(i))
    except BaseException:
        pass
freq.sort()
freq.reverse()
n1 = int(raw_input())
s = raw_input()
s = s.split(" ", len(s))
keys = []
keys_count = []
for i in s:
    keys.append(int(i))
    keys_count.append(1)
res = 0
rt = 1
st = 0
# pdb.set_trace()
while True:
    keys = check(keys)
    if len(keys) == 0:
        res = -1
        break
    en = st+len(keys)
    if en > len(freq):
        en = len(freq)
    temp = freq[st:en]
    st = en
    for tem in temp:
        res = res+tem*rt
    rt = rt+1
    if st >= len(freq):
        break
print res
