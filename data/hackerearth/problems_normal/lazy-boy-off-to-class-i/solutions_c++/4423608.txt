//Type     :
//Code name:
//Status   :
typedef unsigned long long ull;
typedef long long ll;
typedef unsigned long ul;
typedef long double ld;
#include<iostream>
#include<cstdlib> //for qsort
#include<cmath>
#include<vector>
#include<string>
#include<cstring>
#include<algorithm>
#include<cctype>
#include<map>
#include<utility>  //for std::pair
#include<limits> //to obtain limits of various data type
#define loop(i,x,n) for(i=x;i<=n;i++)
#define scani(x) scanf("%d",&x)
#define scanfl(x) scanf("%f",&x)
#define scanc(x) scanf("%c",&x)
#define scand(x) scanf("%lf",&x)
#define scanll(x) scanf("%lli",&x)
#define scanl(x) scanf("%ld",&x)
#define scans(x) scanf("%s",x)
#define printi(x) printf("%d\n",x)
#define printl(x) printf("%ld\n",x)
#define printll(x) printf("%lli\n",x)
#define printd(x) printf("%lf\n",x)
#define printfl(x) printf("%f\n",x)
#define printc(x) printf("%c\n",x)
#define prints(x) printf("%s\n",x);
#define string(x) loop(i,0,strlen(x)-1)
#define endl printf("\n")
#define r(n) ((long int)pow(10,n))
#define eat getchar()
#define SIZE 
#define MOD 
//#define debug
#define diff(i,j) (sc[i][j]-sc[i][j-1])
ll sc[7][10000000];
using namespace std;
int main()
{
   //ios_base::sync_with_stdio(false); //Saves time by disabling synchronization
   //cin.tie(NULL);             //To untie cin from cout
   ll t,i,j,tot_clas;//,a,b;
   
   cin>>t;
   while(t--)
   {
   	ll ni;tot_clas=0;
   	vector<ll> vec;
   	for(i=1;i<=7;i++)
   	{
   		cin>>ni;
   		for(j=1;j<=ni;j++)
   		{
   			  ll a,b;
   			  cin>>a;
   			  cin>>b;
   			   vec.push_back(b-a);
   			  
   		}
   		tot_clas+=ni;
    }
    sort(vec.begin(),vec.end());
#ifdef debug 
    endl;
    for(auto item:vec)
    cout<<item<<" "; 
    endl;
#endif
   long double temp=0.75*tot_clas;
   ll bound=(ll)ceil(temp);
   //cout<<" bound is "<<bound<<"\n";
   ll ans=0;i=0;
  
  while(i<bound)
  	 ans+=vec[i++];
 
    ans=604800-ans;
   cout<<ans<<"\n";
    }
 
 
}
 
 
 
 
 
 
 
 
 
 
 
 