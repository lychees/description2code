#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>

using namespace std;
const int N=111111;
int n,m;
int a,b;
bool vis[N];
int dfs_num[N];
int dfs_low[N];
vector<int> s;
vector<int> e[N];
int cnt=1;
int scc;
int all[N];
int mark[N];


void dfs(int u){
vis[u]=1;
s.push_back(u);

dfs_low[u]=dfs_num[u]=cnt++;
for(int i=0;i<e[u].size();i++){
    int v=e[u][i];
    if(!dfs_num[v]){
        dfs(v);
    }
    if(vis[v]){
        dfs_low[u]=min(dfs_low[u],dfs_low[v]);

    }

}
if(dfs_low[u]==dfs_num[u]){
    // root SCC
scc++;
while(1){
    int ww=s.back();vis[ww]=0;
    s.pop_back();
    mark[ww]=scc;all[scc]++;
    if(ww==u){break;}

}

}

}
int main(){
//freopen("in.txt","r",stdin);
//freopen("out.txt","w",stdout);
scanf("%d %d",&n,&m);
for(int i=0;i<m;i++){
    scanf("%d %d",&a,&b);
e[a].push_back(b);
}
for(int i=1;i<=n;i++){
    if(!dfs_num[i]){
        dfs(i);

    }

}
for(int i=1;i<=n;i++){
    if(i>1){printf(" ");}
    int out=0;
    if(all[mark[i]]>1){out=1;}
    printf("%d",out);

}

return 0;}
