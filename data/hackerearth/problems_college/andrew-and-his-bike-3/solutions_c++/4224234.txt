#include <iostream>
#include <vector>

using namespace std;

vector<bool> visited;
vector< vector<int> > adjlist;
vector<long long> res;

long long dfs(int start)
{
	long long r = 1;
	visited[start] = true;
	for(vector<int>::iterator i = adjlist[start].begin(); i != adjlist[start].end(); i++)
	{
		if(!visited[*i])
			r += dfs(*i);
	}
	res[start] = r;
	return r;
}

int main()
{
    int n, l, r;
    cin >> n;
    adjlist.resize(n);
    visited.resize(n, false);
    res.resize(n);
    for(int i = 0; i<n-1; i++)
    {
    	cin >> l >> r;
    	adjlist[l-1].push_back(r-1);
    	adjlist[r-1].push_back(l-1);
    }
    dfs(0);
    res[0]--;
    for(int i = 0; i<n; i++)
    {
    	cout << res[i] << ' ';
    }
    cout << endl;
    return 0;
}
