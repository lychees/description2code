#include<bits/stdc++.h>
using namespace std;
vector< vector<int> >graph;
vector <bool> visited;
void dfs(int x)
{
	visited[x]=true;
	for(int i=0;i<graph[x].size();i++)
	{
		if(!(visited[graph[x][i]]))
		{
			dfs(graph[x][i]);
		}
	}
}
main()
{
	int t;
	cin>>t;
	while(t--)
	{
		graph.clear();
		int n,e;
		cin>>n>>e;
		graph.resize(n);
		visited.resize(n);
		for(int i=0;i<n;i++)
		 visited[i]=false;
		for(int i=0;i<e;i++)
		{
			int a,b;
			cin>>a>>b;
			graph[a].push_back(b);
			graph[b].push_back(a);
		}
         int res=0;
         for(int i=0;i<n;i++)
         {
         	if(!visited[i])
         	{
         		res++;
         		dfs(i);
         	}
         }
         cout<<res<<endl;
		
	}
	
}