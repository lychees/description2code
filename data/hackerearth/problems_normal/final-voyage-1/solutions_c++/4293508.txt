using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),in.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.cout","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,ar,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
void solve();
int main()
{
  int t=1;
  cin>>t;
  while(t--)
  solve();
  return 0;
}
int dp[1001][1001];
int pr[1001],wt[1001];
void solve()
{
  int i,j,n,m,W;
  cin>>n>>W;
  for(i=0;i<n;i++) 
   cin>>wt[i];
  for(i=0;i<n;i++)
   cin>>pr[i];
  for(i=0;i<=n;i++)
  {
    for(j=0;j<=W;j++)
	{
		if(i==0||j==0)
		 dp[i][j]=0;
		else
		if(wt[i-1]<=j)
		dp[i][j]=max(dp[i-1][j],pr[i-1]+dp[i-1][j-wt[i-1]]);
		else
		dp[i][j]=dp[i-1][j];	
    }
   }
   cout<<dp[n][W]<<"\n";   
}


























