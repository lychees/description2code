#include <bits/stdc++.h>
using namespace std;
long long MOD = 1000000007;
long long nCr[1001][1001];
int main()
{
	//pre calculate nCr
	for(int i=0;i<1001;i++)
		for(int j=0;j<1001;j++)
			nCr[i][j] = 0;
	for(int i=0;i<1001;i++)
	{
		for(int j=0;j<=i;j++)
		{
			if(i==j || j==0)
			{
				nCr[i][j] = 1;
			}
			else
			{
				nCr[i][j] = (nCr[i-1][j-1] + nCr[i-1][j]) % MOD;
			}
		}
	}
	int t;
	scanf(" %d",&t);
	while(t--)
	{
		int n;
		scanf(" %d",&n);
		int faces = 6*n;
		int ranks = 18*n;
		//scanf(" %d %d",&faces,&ranks);
		int m;
		scanf(" %d",&m);
		long long res = 0;
		// If m is odd, conditions won't satisfy
		if(m%2 == 1)
		{
			printf("0\n");
		}
		else
		{
			// Now we have to choose m cards such that m/2 are red and m/2 are black
			// At the same time m/2 should be Face and m/2 should be Rank
			int mh = m/2;
			for(int i=0;i<=mh;i++)
			{
				if(i>faces || (mh-i)>ranks || (mh-i)>faces || i>ranks)
				{
					continue;
				}
				else
				{
					//printf(" %d %d\n",i,mh-i);
					long long tmp = (nCr[faces][i]*nCr[ranks][mh-i]) % MOD;
					tmp = (tmp*nCr[faces][mh-i]) % MOD;
					tmp = (tmp*nCr[ranks][i]) % MOD;
					res += tmp;
					res %= MOD;
				}
			}
			printf("%lld\n",res);
		}
	}
	return 0;
}