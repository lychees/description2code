
#define N (1 << 9)

#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>
using namespace std;

int n, m;
int k, l, r;
vector<pair<int, int>> v[N];
int a, b;
bool u[N];

void dfs(int x) {
  u[x] = true;
  for (int i = 0; i < v[x].size(); i++) {
    if ((v[x][i].second < l || v[x][i].second > r) && !u[v[x][i].first]) {
      dfs(v[x][i].first);
    }
  }
}

int main() {
  scanf("%d%d", &n, &m);
  for (int i = 0; i < m; i++) {
    scanf("%d%d", &a, &b);
    a--;
    b--;
    v[a].push_back(make_pair(b, i + 1));
    v[b].push_back(make_pair(a, i + 1));
  }
  scanf("%d", &k);
  for (int i = 0; i < k; i++) {
    int c = 0;
    scanf("%d%d", &l, &r);
    memset(u, false, sizeof(u));
    for (int j = 0; j < n; j++) {
      if (!u[j]) {
        dfs(j);
        c++;
      }
    }
    printf("%d\n", c);
  }
  return 0;
}
