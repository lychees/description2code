#include<bits/stdc++.h>
#include<vector>
#include<list>
#include<utility>
#include<map>
#include<set>
#include<stack>
#include<queue>
#define mod 1000000007
#define ll long long
#define INF (ll)(1e18)
#define mp make_pair
#define fill(a,v) memset(a, v, sizeof a)
using namespace std;
ll i,j;
vector <ll> dist;
vector <bool> vis;
void bfs()
{
	dist[2]=1;
	dist[3]=1;dist[5]=1;dist[7]=1;
	priority_queue <pair <ll,ll> >q;
	q.push(mp(-1,2));
	q.push(mp(-1,3));q.push(mp(-1,5));q.push(mp(-1,7));
	while(!q.empty())
	{
		pair <ll,ll> v=q.top();
		q.pop();
		if(v.second > 1000006)
		break;
		if(vis[v.second]==false)
		{
			vis[v.second]=true;
			ll newdist=(-1)*v.first+1;
			ll temp=v.second+2;
			if(dist[temp]==0 || dist[temp]>newdist)
			{
				dist[temp]=newdist;
				q.push(mp((-1)*newdist,temp));	
			}
			
			 temp=v.second+3;
			if(dist[temp]==0 || dist[temp]>newdist)
			{
				dist[temp]=newdist;
				//q.push((-1)*newdist,temp);	
				q.push(mp((-1)*newdist,temp));
			}
			
			 temp=v.second+5;
			if(dist[temp]==0 || dist[temp]>newdist)
			{
				dist[temp]=newdist;
				q.push(mp((-1)*newdist,temp));
				//q.push((-1)*newdist,temp);	
			} 
			
			temp=v.second+7;
			if(dist[temp]==0 || dist[temp]>newdist)
			{
				dist[temp]=newdist;
				
				q.push(mp((-1)*newdist,temp));//q.push((-1)*newdist,temp);	
			}
		}
		
	}
}
int main()
{
	for(i=0;i<1000006;i++)
	{
		vis.push_back(false);
	//	int temp=-1;
		dist.push_back(0);
	}
//	for(i=0;i<35;i++)
//	cout<<i<<"-"<<dist[i]<<endl;
	
	bfs();
//	for(i=0;i<1000006;i++)
//	cout<<i<<"-"<<dist[i]<<endl;
	int T;
	cin>>T;
	while(T--)
	{
		ll X;
		cin>>X;
		
		if(dist[X]==0)
		dist[X]=-1;
		
		cout<<dist[X]<<endl;
	}
return 0;
}
