/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
int N, M;
vector<int> lef, rig;

bool can(const vector<int>& low) {
  vector<int> tmp = low;
  for (int i = 0; i < M; ++i) {
    sort(tmp.begin() + lef[i], tmp.begin() + rig[i] + 1);
  }
  for (int i = 1; i <= N; ++i) {
    if (tmp[i] != i) {
      return false;
    }
  }
  return true;
}

void solve(int test_num) {
  cin >> N >> M;
  lef.resize(M);
  rig.resize(M);
  for (int i = 0; i < M; ++i) {
    cin >> lef[i] >> rig[i];
  }
  vector<int> low(N + 1);
  for (int i = 1; i <= N; ++i) {
    low[i] = N - i + 1;
  }
  if (can(low)) {
    cout << "All ok!\n";
    return;
  }
  vector<bool> was(N + 1, false);
  for (int i = 1; i <= N; ++i) {
    for (int x = 1; x <= N; ++x) {
      if (was[x]) {
        continue;
      }
      low[i] = x;
      for (int j = N, v = 1; j > i; --j) {
        while (was[v] || v == x) {
          ++v;
        }
        low[j] = v++;
      }
      if (!can(low)) {
        was[x] = true;
        break;
      }
    }
  }
  for (int i = 1; i <= N; ++i) {
    cout << low[i] << ' ';
  }
  cout << endl;
}

void solve() {
#ifdef AZN
//make_case();
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
//scanf("%d", &T);
//cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << fixed << setprecision(3) << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
