#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:32777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
#include <complex>
using namespace std;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))

#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define Pi 3.14159265358979

typedef long long Int;
typedef unsigned long long UINT;
typedef vector <int> VI;
typedef pair <int, int> PII;

const int INF = 1000000000;
const int MAX = 100007;
const int MAX2 = 2000;
const int BASE = 1000000000;

Int dp[20][10][2];
Int dp2[20][10];
Int Dp[20][10][2];
Int Dp2[20][10];
Int cnt2[20];

Int f(Int n)
{
    if (n == 0) return 0;
    if (n < 10) return n - 1;
    vector<int> a;
    while (n)
    {
        a.push_back(n % 10);
        n /= 10;
    }
    reverse(ALL(a));

    FILL(dp,0);
    dp[0][0][0] = 1;
    FOR(i,0,a.size())
    {
        FOR(j,0,10)
        {
            FOR(k,0,2)
            {
                FOR(l,0,10)
                {
                    if (i == 0 && l == 0) continue;
                    if (i && i % 2 == 1 && l <= j) continue;
                    if (i && i % 2 == 0 && l >= j) continue;
                    if (k == 0 && l > a[i]) continue;
                    int nk = (k | (l < a[i]));
                    dp[i + 1][l][nk] += dp[i][j][k];
                }
            }
        }
    }
    FILL(Dp,0);
    Dp[0][0][0] = 1;
    FOR(i,0,a.size())
    {
        FOR(j,0,10)
        {
            FOR(k,0,2)
            {
                FOR(l,0,10)
                {
                    if (i == 0 && l == 0) continue;
                    if (i && i % 2 == 0 && l <= j) continue;
                    if (i && i % 2 == 1 && l >= j) continue;
                    if (k == 0 && l > a[i]) continue;
                    int nk = (k | (l < a[i]));
                    Dp[i + 1][l][nk] += Dp[i][j][k];
                }
            }
        }
    }
    Int res = 0;
    FOR(j,1,a.size())
        res += cnt2[j];
    FOR(j,0,10)
    {
        res += dp[a.size()][j][1] + Dp[a.size()][j][1];
    }
    return res;
}

int main()
{
   // freopen("in.txt", "r", stdin);

    dp2[0][0] = 1;
    FOR(i,0,19)
    {
        FOR(j,0,10)
        {
            FOR(l,0,10)
            {
                if (i == 0 && l == 0) continue;
                if (i && i % 2 == 1 && l <= j) continue;
                if (i && i % 2 == 0 && l >= j) continue;
                dp2[i + 1][l] += dp2[i][j];
            }
        }
    }
    Dp2[0][0] = 1;
    FOR(i,0,19)
    {
        FOR(j,0,10)
        {
            FOR(l,0,10)
            {
                if (i == 0 && l == 0) continue;
                if (i && i % 2 == 0 && l <= j) continue;
                if (i && i % 2 == 1 && l >= j) continue;
                Dp2[i + 1][l] += Dp2[i][j];
            }
        }
    }
    FOR(i,0,20)
    {
        FOR(j,0,10)
        {
            cnt2[i] += dp2[i][j];
            if (i != 1)
            {
                cnt2[i] += Dp2[i][j];
            }
        }
    }

    int tst;
    cin >> tst;
    FOR(tt,0,tst)
    {
        Int n , k;
        cin >> n >> k;

        Int c1 = f(n + 1);
        if (c1 < k)
        {
            cout << -1 << ' ';
        }
        else
        {
            Int L1 = 1;
            Int R1 = n;
            while (R1 - L1 > 1)
            {
                Int X1 = (L1 + R1) / 2;
                Int cc1 = f(X1);
                if (c1 - cc1 > k)
                {
                    L1 = X1;
                }
                else
                {
                    R1 = X1;
                }
            }
            if (c1 - f(L1) == k) R1 = L1;
            cout << R1 << ' ';
        }

        Int L2 = n;
        Int R2 = 1LL * INF * INF;
        Int c2 = f(R2 + 1) - f(L2);
        if (c2 < k)
        {
            cout << -1 << endl;
        }
        else
        {
            Int sub = f(n);
            while (R2 - L2 > 1)
            {
                Int X2 = (L2 + R2) / 2;
                Int cc2 = f(X2 + 1);
                if (cc2 - sub > k)
                {
                    R2 = X2;
                }
                else
                {
                    L2 = X2;
                }
            }
            ///cout << "  xxx   " << cnt2[1] << ' ' << f(13) << ' ' << sub << endl;
            if (f(R2 + 1) - sub == k) L2 = R2;
            cout << L2 << endl;
        }

    }

    return 0;
}
