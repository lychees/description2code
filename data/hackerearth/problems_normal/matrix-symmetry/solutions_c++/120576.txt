#include<vector>
#include<list>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
#include <ctime>
#include <functional>
#include <iomanip>
#include<sstream>
#define gc getchar//_unlocked

using namespace std;

#define s(n)                    scanf("%d",&n)
#define sl(n)                   scanf("%lld",&n)
#define sf(n)                   scanf("%lf",&n)
#define ss(n)                   scanf("%s",n)
#define sc(n)                   scanf("%c",&n)
#define PI(n)                   printf("%d\n",n)
#define PLL(n)                  printf("%lld\n",n)
#define CSET(x)                 __builtin_popcount(x)
#define CLOG(x)                 31 - __builtin_clz(x)
#define CLZ(x)                  __builtin_clz(x)
#define CTZ(x)                  __builtin_ctz(x)
#define INF                     (int)1e9
#define LINF                    (long long)1e18
#define EPS                     1e-9
#define maX(a,b)                ((a)>(b)?(a):(b))
#define miN(a,b)                ((a)<(b)?(a):(b))
#define abS(x)                  ((x)<0?-(x):(x))
#define FOR(i,a,b)              for(long long i=a;i<b;i++)
#define RFOR(i,init,n)          for(long long i=n;i>=init;i--)
#define REP(i,n)                FOR(i,0,n)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define mp                      make_pair
#define FF                      first
#define SS                      second
#define tri(a,b,c)              mp(a,mp(b,c))
#define XX                      first
#define YY                      second.first
#define ZZ                      second.second
#define pb                      push_back
#define fill(a,v)               memset(a,v,sizeof a)
#define all(x)                  x.begin(),x.end()
#define SZ(v)                   ((int)(v.size()))
#define DREP(a)                 sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)          (lower_bound(all(arr),ind)-arr.begin())
#define INDEX2(arr,ind)         (upper_bound(all(arr),ind)-arr.begin())
#define AREA(x1,y1,x2,y2,x3,y3) (x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define sqr(a)                  (a)*(a)
#define DIST(x1,y1,x2,y2)       (sqr(x1-x2) + sqr(y1-y2) )
#define SP                      system("pause");

typedef long long int LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<float> VF;
typedef vector<LL> VL;
typedef vector<VL> VVL;
typedef vector<VI> VVI;
typedef vector<PII> VII;
typedef vector<PLL> VLL;
typedef vector<string> VS;
typedef long long int int64;

char *opos, OutFile[65536], DIP[20];
FILE *pfile;
inline void InitFASTIO() 
{
    //freopen("c:/input.txt","r",stdin);
    //pfile = fopen("G:\Brain's-Food\007-Questions for PC\PC - New\P2.txt","w");
    opos = OutFile;
}
inline void FlushFASTIO() 
{   
    //fwrite(OutFile,opos-OutFile,1,pfile); 
    fwrite(OutFile,opos-OutFile,1,stdout);  
}

inline void fps(int &x){register int c = gc();x = 0;for(;(c<48 || c>57);c = gc());for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}}
inline void fs(int &x){register int c = gc();x = 0;int neg = 0;for(;((c<48 || c>57) && c != '-');c = gc());if(c=='-') {neg=1;c=gc();}for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}if(neg) x=-x;}
inline void fl(long long int &x){register int c = gc();x = 0;int neg = 0;for(;((c<48 || c>57) && c != '-');c = gc());if(c=='-') {neg=1;c=gc();}for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}if(neg) x=-x;}
string toStr(LL num){ return static_cast<stringstream*>( &(stringstream() << num) )->str();}
LL gcd(LL x, LL y) {return y == 0 ? x : gcd(y, x % y);}
LL mod(string x,LL num){LL rem = 0;int len =x.length();LL car = 1;REP(i,len){ rem+= (car*(x[len-i-1]-'0'))%num; if(rem>num)rem%=num; car = (car*10)%num;}return rem%num;}
LL extGcd(LL a, LL b, LL& x, LL& y){if(a==0){x=0;y=1;return(b);}LL a1, b1, c, x1, y1, rst;a1=b%a; b1=a; c=b/a;rst=extGcd(a1, b1, x1, y1);x=y1-c*x1; y=x1;return(rst);}
void sieve(vector<int>& prime,int size){prime.resize(size+1);prime[0]=1;prime[1]=1;for(long long i=2;i<=size;i++){if(!prime[i]){prime[i]=i;for(long long j=i;j*i<=size;j++){if(!prime[j*i])prime[j*i]=i;}}}}
void primColl(vector<int>& primes,int size){vector<int> prime(size);prime[0]=1;prime[1]=1;for(long long i=2;i<=size;i++){if(!prime[i]){prime[i]=i;primes.pb(i);for(long long j=i;j*i<=size;j++){if(!prime[j*i])prime[j*i]=i;}}}}
void fastSieve(vector<int>& primes,LL size){vector<bool> b((size>>1)+100);for(LL i=3;i<=LL(sqrt(size));i+=2)if(!b[(i-3)>>1])for(LL j=i*i;j<size;j+=i)if(j&1)b[(j-3)>>1]=1;primes.pb(2);for(LL i=0;2*i<size;i++)if(!b[i] && i<((size/2)-1))primes.pb(2*i+3);}
bool isPalin(string x) {int len = x.length();REP(i,len/2) {if (x[i] != x[len - 1 - i])return false;}return true;}
string tolowerStr(string x){string ret = "";REP(i,x.length()) {ret.pb(tolower(x[i]));}return ret;}
string toupperStr(string x) {string ret = "";REP(i,x.length()) {ret.pb(toupper(x[i]));}return ret;}
void toCharArray(char * dest,string source){strcpy(dest,source.c_str());}
void split(vector<string>&s,string g,char c){REP(i,g.length())if(g[i]==c)g[i] = ' ';stringstream in(g);for(string t;in>>t;)s.pb(t);}
void split2(vector<string>&s,string g,char c,char d){REP(i,g.length())if(g[i]==c||g[i]==d)g[i] = ' ';stringstream in(g);for(string t;in>>t;)s.pb(t);}
void LL2char(LL num,char * n){ char abc[1000001];int mm = 0;while(num>0){abc[mm++] = (num%10)+'0';num/=10;}abc[mm]='\0';for(int i=mm-1;i>=0;i--)n[mm - i - 1] = abc[i];n[mm] = '\0';}
bool inLim(int i,int j,int n,int m){if(i>=0 && i<n && j>=0 && j<m)return true;else return false;}
void comb(VVI & c,LL nn,LL kk,LL MOD){c[1][1] = 1;c[1][2] = 0;REP(i,nn+1)c[i][0] = 1,c[i][1] = i,c[i][kk+1]=0;FOR(i,2,nn+1)FOR(j,2,kk+1)c[i][j] = (c[i-1][j-1] + c[i-1][j])%MOD;} 

int main()
{   
//******************Initialize**********************//    
    InitFASTIO();
    int uui;
    //freopen("G:/NELL.08m.734.all-pairs-OC-2011-12-31-big2.categorizer","r",stdin);
    //freopen("G:/abc.txt","w",stdout);
//*************************************************//       
// Program //
int t;
fps(t);
//t=1;
REP(tc,t)
{ 
  int n;
  fps(n);
  vector<string> mat(n);
  vector<string> matv(n);
  
  REP(i,n)
  {
            cin>>mat[i];
  }
  REP(i,n)
  {
      string a = "";
      REP(j,n)
            a+=mat[j][i];
      matv[i] = a;
  }
  bool fl1 = true;
  REP(i,n/2)
      if(mat[i]!=mat[n-i-1]){fl1=false;break;}
  bool fl2 = true;
  REP(i,n/2)
      if(matv[i]!=matv[n-i-1]){fl2=false;break;}
  if(fl1 && fl2)
      cout<<"BOTH"<<endl;
  else if(fl1)
      cout<<"HORIZONTAL"<<endl;
  else if(fl2)
      cout<<"VERTICAL"<<endl;
  else
      cout<<"NO"<<endl;
}

 //End Program //
cin>>uui;          
 //******************Flush output******************//        
    //FlushFASTIO(); 
 //************************************************//
 return 0;    
}
