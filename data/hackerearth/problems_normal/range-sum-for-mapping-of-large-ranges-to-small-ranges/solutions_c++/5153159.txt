#include <iostream>
#include<vector>
#include<map>
using namespace std;
vector<int> vis(100000);
long long int c;
void dfs(map<int,vector<int> > &mp,int i)
{
	vis[i]=1;
	c++;
	vector<int>::iterator it;
	for(it=mp[i].begin();it!=mp[i].end();it++)
	{
		if(vis[*it]==0)
		dfs(mp,*it);
	}
}
int main()
{
   int t;
   cin>>t;
   while(t--)
   {
	   	int n,k;
	   	cin>>n>>k;
	   	map<int,vector<int>> mp;
	   	for(int i=0;i<k;i++)
	   	{
	   		int a,b;
	   		cin>>a>>b;
	   		mp[a].push_back(b);
	   		mp[b].push_back(a);
	   	}
	   	for(int i=0;i<=n;i++)
	   	vis[i]=0;
	   	long long int ans=1;
	   	
	   	for(int i=1;i<=n;i++)
	   	{
	   		if(vis[i]==0)
	   		{
		   		c=0;
		   		dfs(mp,i);
		   		if(c>1)
		   		{
		   			c=((c*(c-1))/2)%1000000007;
		   			ans=(ans*c)%1000000007;
		   		}
	   		}
	   	}
	   	cout<<ans<<endl;
   }
}
