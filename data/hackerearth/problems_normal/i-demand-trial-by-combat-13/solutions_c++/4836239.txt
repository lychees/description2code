#include <iostream>
#include <algorithm>
#include <bitset>

using namespace std;

int main()
{
	unsigned long long int size, n, m;
	cin >> size;
	bitset<100> set = 0, last = 0, lastInput = 0, answer = 0;
	for (int k = 0; k < size; k++)
	{
		cin >> n >> m;
		set = 0;
		for (unsigned long long int i = 0; i < n; i++)
		{
			int num;
			cin >> num;
			if (num)
				set[i] = 1;
		}
		if (k > 0 && set == lastInput)
		{
			lastInput = set;
			set = answer;
		}
		else
		{
			lastInput = set;
			while (m--)
			{
				last = set;
				for (unsigned long long int i = 0; i < n; i++)
				{
					if (i == 0)
						set[0] = last[1] == 1;
					else if (i == n - 1)
						set[n - 1] = last[n - 2] == 1;
					else
					{
						if (last[i - 1] == 1 && last[i + 1] == 1)
							set[i] = 1;
						else
							set[i] = 0;
					}
				}
				if (last == set)
					break;
			}
			answer = set;
			//cout << answer << "\n";
		}
		for (unsigned long long int i = 0; i < n; i++)
		{
			cout << set[i];
			if (i != n - 1)
			{
				cout << " ";
			}
		}
		cout << "\n";
	}
	return 0;
}