/*
ID: ashish1610
PROG: Aaryan and Magical Numbers
LANG: C++
*/
#include<bits/stdc++.h>
using namespace std;
#define ll 	long long int
ll pre[]={0,0,1,2,2,3,3,4,4,4,4,9,19,28,33,42,47,56,60,64,129,229,328,393,492,557,656,720,784,1569,2569,3568,4353,5352,6137,7136,7920,8704,17409,27409,37408,46113,56112,64817,74816,83520,92224,184449,284449,384448,476673,576672,668897,768896,861120,953344,1906689,2906689,3906688,4860033,5860032,6813377,7813376,8766720,9720064,19440129,29440129,39440128,49160193,59160192,68880257,78880256,88600320,98320384,196640769,296640769,396640768,494961153,594961152,693281537,793281536,891601920,989922304,1979844609,2979844609,3979844608,4969766913,5969766912,6959689217,7959689216,8949611520,9939533824,19879067649,29879067649,39879067648,49818601473,59818601472,69758135297,79758135296,89697669120,99637202944,199274405889,299274405889,399274405888,498911608833,598911608832,698548811777,798548811776,898186014720,997823217664,1995646435329,2995646435329,3995646435328,4993469652993,5993469652992,6991292870657,7991292870656,8989116088320,9986939305984,19973878611969,29973878611969,39973878611968,49960817917953,59960817917952,69947757223937,79947757223936,89934696529920,99921635835904,199843271671809,299843271671809,399843271671808,499764907507713,599764907507712,699686543343617,799686543343616,899608179179520,999529815015424,1999059630030849,2999059630030849,3999059630030848,4998589445046273,5998589445046272,6998119260061697,7998119260061696,8997649075077120,9997178890092544,19994357780185089,29994357780185089,39994357780185088,49991536670277633,59991536670277632,69988715560370177,79988715560370176,89985894450462720,99983073340555264,199966146681110529,299966146681110529,399966146681110528,499949220021665793,599949220021665792,699932293362221057,799932293362221056,899915366702776320,999898440043331584};
ll comp_pow(ll len)
{
	ll res=1;
	for(int i=0;i<len;++i)
		res*=10;
	return res;
}
ll compute(ll p,ll len)
{
	if(len==0)
		return pre[p];
	ll x=p/comp_pow(len),k=0,l;
	if(x+len*10-len>=0)
		k=pre[x+len*10-len];
	l=p%(comp_pow(len)*x);
	if(l==0)
		return k;
	else if(x==2 || x==3 || x==5 || x==7)
		return k+l;
	ll tmp=l,sz=0;
	while(tmp!=0)
	{
		tmp/=10;
		sz++;
	}
	sz--;
	return k+compute(l,sz);
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		ll n;
		scanf("%lld",&n);
		int len=0;
		ll tmp=n;
		while(tmp!=0)
		{
			tmp/=10;
			len++;
		}
		len--;
		if(len<0)
			len=0;
		printf("%lld\n",compute(n,len));
	}
	return 0;
}