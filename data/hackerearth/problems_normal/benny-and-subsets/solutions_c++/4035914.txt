#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mset(m,v) memset(m,v,sizeof(m))
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define pi 3.1415926535897932384
#define mod 10000007
#define MAXM 1000000001

int n,x,a[1003],n1;
int cnt[1<<22];
vector<int> v1,v2;

int dp[1002][1<<12];
int vis[1002][1<<12];

int solve2(int idx,int sum)
{
	if(idx==n1)	return cnt[sum^x];

	if(vis[idx][sum]!=0)	return dp[idx][sum];	
	vis[idx][sum]=1;
	
	int ans = solve2(idx+1,sum);
	ans+=solve2(idx+1,sum^v2[idx]);
	if(ans>=mod)
		ans%=mod;
	return dp[idx][sum]=ans;
	
}

void solve1()
{
	int n=v1.size();
	for(int i=0;i<(1<<n);i++)
	{
		int ans=0;
		for(int j=0;j<n;j++)
		{
			if((1<<j) & i)
			{
				ans^=v1[j];
			}
		}
		cnt[ans]++;
	}
	// cout<<cnt[0]<<" "<<cnt[100500]<<endl;
	return ;
}

void solve()
{
	int i,j,k;
	cin>>n>>x;
	for(i=0;i<n;i++){
		cin>>a[i];
		if(a[i]>(1<<10))
			v1.pb(a[i]);
		else
			v2.pb(a[i]);
	}
	// cout<<v1.size()<<" "<<v2.size()<<endl;
	mset(cnt,0);
	mset(dp,0);
	mset(vis,0);
	solve1();
	n1=v2.size();
	cout<<solve2(0,0)<<endl;
}

int main()
{
	solve();	
	return 0;
}