#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
using namespace std;
#define pb push_back
int col[100009];
bool dfs(vector<int> G[], int idx, int c)
{
	col[idx] = c;
	for (vector<int>::iterator it = G[idx].begin(); it != G[idx].end(); it++) {
		if (!col[*it]) {
			if(!dfs(G, *it, 3 - c))
			return false;
		}
		else if (col[*it] == c)
			return false;
	}
	return true;
}
int main()
{
	int t, n, m, x, y;
    scanf("%d", &t);
    while (t--) {
    	scanf("%d%d", &n, &m);
    	memset(col, 0, sizeof(col));
    	vector<int> G[n];
    	for (int i = 0; i < m; i++) {
    		scanf("%d%d", &x, &y);
    		x--;
    		y--;
    		G[x].pb(y);
    		G[y].pb(x);
    	}
    	int ok = 1;
    	for (int i = 0; i < n; i++) {
    		if (!col[i])
    		if(!dfs(G, i, 1))
    		{
    			ok = 0;
    			break;
    		}
    	}
    	
    	if (ok)
    		printf("YES\n");
    	else
    		printf("NO\n");
    }
    return 0;
}
