#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>

#define INT_MAX       2147483647

inline void readint(int &a)
{
	register int c;
	a = 0;
	do c = getchar_unlocked(); while (c < '0');
	do{
		a = (a << 1) + (a << 3) + c - '0';
		c = getchar_unlocked();
	} while (c >= '0');
}

inline void readll(long long &a)
{
	register int c;
	a = 0;
	do c = getchar_unlocked(); while (c < '0');
	do{
		a = (a << 1) + (a << 3) + c - '0';
		c = getchar_unlocked();
	} while (c >= '0');
}

inline void printint(int a)
{
	int s[12], t = -1;
	do
	{
		s[++t] = a % 10 + '0';
		a /= 10;
	} while (a > 0);

	while (t >= 0)putchar_unlocked(s[t--]);
	putchar_unlocked('\n');
}

inline void printll(long long a, char ws)
{
	int s[25], t = -1;
	do
	{
		s[++t] = a % 10 + '0';
		a /= 10;
	} while (a > 0);

	while (t >= 0)putchar_unlocked(s[t--]);
	putchar_unlocked(ws);
}


inline int  min(int a, int b)
{
	return (((a) < (b)) ? (a) : (b));
}
inline int  max(int a, int b)
{
	return (((a) > (b)) ? (a) : (b));
}

int main()
{
	int t;
	readint(t);

	while (t--)
	{
		int n;
		readint(n);
		
		int a[20];
		for(int i = 1; i <= n; i++)readint(a[i]);
		
		int last = 1 << n;
		long long maxp = 0;
		int maxl = 0;
		
		for(int i = 1; i < last; i++) {
			long long p = 0;
			long long xorop = 0;
			long long andop = 8589934591;
			int index = 1;
			int cnt = 0;
			for(int b = 1; b <= i; b = b << 1)
			{
				if(i & b) {
					xorop = xorop ^ a[index];
					andop = andop & (long long)a[index];
					cnt++;
				}
				index++;
			}
			p = xorop | andop;
			if(p > maxp) {
				maxp = p;
				maxl = cnt;
			} else if(p == maxp) {
				maxl = cnt > maxl ? cnt : maxl;
			}
		}
		printf("%ld %d\n", maxp, maxl);
	}
	return 0;
}