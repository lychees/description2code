#include<bits/stdc++.h>
using namespace std;
unsigned long long a[1000];
int i;
void power()
{	a[0]=1;
	for ( i=1 ; a[i-1]<pow(10,18) ; i++)
		a[i] = a[i-1] * 2;
}
long long unsigned position ( long long unsigned x )
{	long long unsigned *l;
	long long unsigned pos;
	l = lower_bound(a,a+i,x);
	pos = l - a;
	return pos;
}
int func ( long long unsigned n )
{	/*int *l;
	l = lower_bound(a,a+i,n);
	int pos;
	pos = l - a;*/
	long long unsigned pos;
	int count = 0;
	pos = position ( n );
	if ( a[pos] == n )
		return 1;
	else
	{	while( n != 0 )
		{	count++;
			if ( a[pos] == n )
			{	return count;
	
			}
			else
				pos--;
			n = n - a[pos];
			pos = position ( n );
		}
	}
	return count;
}

int main()
{	int t,ans;
	unsigned long long n;
	power();
	scanf("%d",&t);
	while(t--)
	{	scanf("%llu",&n);
		ans = func(n);
		printf("%d\n",ans);
	}
	return 0;
}
