#include <iostream>
#include <string>
#include <stack>
#include <set>
#include <vector>
#include <stdio.h>

using namespace std;

#define INF 1000000000

int main()
{
    int t;

    cin >> t;

    while(t--)
    {
        long int n, m;

        cin >> n >> m;

        vector <pair<long int, int>> graph[n+1];

        long int x, y, c;

        while(m--)
        {
            cin >> x >> y >> c;

            graph[x].push_back(make_pair(y, c));

            graph[y].push_back(make_pair(x, c));
        }

        long int dist[n+1];

        set <pair<long int, long int>> stck;

        for(long int i=2;i<=n;i++)
        {
            dist[i]=INF;

            stck.insert(make_pair(INF, i));
        }

        dist[1]=0;

        stck.insert(make_pair(0, 1));

        while(!stck.empty())
        {
            auto temp = stck.begin();

            long int currNode = temp->second;

            stck.erase(make_pair(dist[currNode], currNode));

            for(long int i=0;i<graph[currNode].size();i++)
            {
                if(dist[graph[currNode][i].first]>dist[currNode]+graph[currNode][i].second)
                {
                    stck.erase(make_pair(dist[graph[currNode][i].first], graph[currNode][i].first));

                    stck.insert(make_pair(dist[currNode]+graph[currNode][i].second, graph[currNode][i].first));

                    dist[graph[currNode][i].first] = dist[currNode]+graph[currNode][i].second;
                }
            }
        }

        long int q, a, k;

        cin >> q;

        while(q--)
        {
            cin >> a >> k;

            if(dist[a]*2<=k)
            {
                cout << k-(dist[a]*2) << endl;
            }
            else
            {
                cout << 0 << endl;
            }
        }
    }

    return 0;
}
