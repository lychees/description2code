#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=312;
int a[mx];
int f[mx+mx],o[mx+mx];
vector<int>g[mx];
int matchl[mx];
int matchr[mx];
bool vis[mx];
bool kuhn(int u){
   if(vis[u])return false;
   vis[u]=true;
   for(int i=0;i<int(g[u].size());i++){
      int v=g[u][i];
      if(matchr[v]==-1 || kuhn(matchr[v])){
         matchl[u]=v;
         matchr[v]=u;
         return true;
      }
   }
   return false;
}
int main(){
   int n,m;
   scanf("%d %d",&n,&m);
   for(int i=0;i<n;i++)scanf("%d",a+i);
   for(int i=0;i<n+m-1;i++){
      scanf("%d",f+i);
      o[i]=f[i];
   }
   sort(o,o+n+m-1);
   int cnt=unique(o,o+n+m-1)-o;
   int l=0,r=cnt-1;
   int ans=-1;
   while(l<=r){
      int mid=(l+r)>>1;
      for(int i=0;i<n;i++)g[i].clear();
      for(int i=0;i<n;i++)
         for(int j=0;j<n;j++)
            if(f[a[j]+i]<=o[mid])
               g[i].push_back(j);
      memset(matchl,-1,sizeof matchl);
      memset(matchr,-1,sizeof matchr);
      bool changed=true;
      while(changed){
         changed=false;
         memset(vis,false,sizeof vis);
         for(int i=0;i<n;i++)
            if(matchl[i]==-1)
               changed|=kuhn(i);
      }
      int matches=0;
      for(int i=0;i<n;i++)if(matchl[i]!=-1)matches++;
      if(matches==n)ans=o[mid],r=mid-1;
      else l=mid+1;
   }
   printf("%d\n",ans);
   return 0;
}

