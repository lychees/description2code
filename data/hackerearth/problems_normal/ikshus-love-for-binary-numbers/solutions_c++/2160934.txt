#include <bits/stdc++.h>
using namespace std;

long long dp[3][66][3];
long long f(int n, int k) {
	memset(dp, 0, sizeof dp);
	
	int state = n & 1;
	for (int c = 0; c <= n; c++)
		dp[state][c][1] = 1;
	
	state ^= 1;
	
	for (int i = n - 1; i >= 0; i--, state ^= 1) {
		for (int c = 0; c <= i; c++) {
			for (int s = 0; s < 2; s++) {
				dp[state][c][s] = dp[state ^ 1][c + 1][s || (c + 1) >= k] + dp[state ^ 1][0][s];
			}
		}
	}
	
	return dp[state ^ 1][0][0];
}

int main() {
    int n, k;
    cin >> n >> k;
    long long num, den;
   	num = f(n, k);
   	den = (1LL << n);
   	
   	long long g = __gcd(num, den);
   	num /= g;
   	den /= g;
   	
   	cout << num << "/" << den << endl;
   	
    return 0;
}
