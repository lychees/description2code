#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;
#define LL_max 200000000000
#define mod 1000000007

#define LL long long
#define mp make_pair
#define pb push_back

const LL INF = 1 << 28;
LL gcd(LL m, LL n)
{
	LL r;
	while (n != 0)
	{
		r=m%n;
		m=n;
		n=r;
	}
	return m;
}

LL expmod(LL a,LL b)
{
	LL x=1,y=a;
	while(b>0)
	{
		if(b&1) x=(x*y)%mod;
		y=(y*y)%mod;
		b>>=1;
	}
	return (x)%mod;
}
LL inv(LL n)
{
	return expmod(n,mod-2);
}
//----------------------------------------

int main()
{
	LL a, b, c;
	cin>> a>> b>> c;

	LL p1, p2;
	p1=c-a;
	p2=c-b;

	LL num, den;

	if(p1<=b && p1>=0 && p2>=0 && p2<=a)
	{
		num=(2*a*b)-((b-p1)*(a-p2));
		den=2;
	}
	else if(p1<=b && p1>=0 && p2<=0)
	{
		LL temp=c;
		num=(2*a*p1) +(temp-p1)*a;
		den=2;
	}
	else if(p1<=0 && p2>=0 && p2<=a)
	{
		LL temp=c;
		num=(2*b*p2) +(temp-p2)*b;
		den=2;
	}
	else if(p1<=0 && p2<=0)
	{
		num=c*c;
		den=2;
	}
	else
	{
		num=a*b;
		den=1;
	}
	LL gc=gcd(num, den);
	num=num/gc;
	den=den/gc;

	den=den*(a*b);

	gc=gcd(num, den);
	num=num/gc;
	den=den/gc;

	cout << num<< "/"<< den<< endl;
	return 0;
}
