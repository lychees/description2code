//                                                                                                          saan_nitd
//                                                                                                           NIT-DGP
//                                                                                                         IT(2014-2018)
#include<bits/stdc++.h>
#define loop(i,n) for(i=0;i<n;i++)
#define loop1(i,n) for(i=1;i<=n;i++)
#define loop3(i,n,k) for(i=n;i<=k;i++)
#define loopr(i,n,k) for(i=n;i>=k;i--)
#define PI   3.14159265358979323
#define MAX 10000000
using namespace std;
typedef long long  int LI;
//How to generate prime number between the range by sieve of eratosthenes method//
long long  max(long long int a,long long int b)
{
           return (a>b?a:b);
}
int main()
{
           std::ios::sync_with_stdio(false);
           int t,n;
           //cin>>t;while(t--)
           //{
                       //  cout<<"Enter teh value upto u want to  find prime"<<endl;
                         cin>>n;
                         int sieve[n+1];
                         for(int i=0;i<=n;i++)
                            sieve[i]=1;
                            sieve[0]=0;sieve[1]=0;
                            int  p=sqrt(n);
                            for(int i=2;i<=p;i++)
                            {
                                          if(sieve[i]==1)
                                          {
                                                        for(int j=2;(j*i)<=n;j++)
                                                                      sieve[j*i]=0;
                                          }
                            }
                            for(int i=4;i<=n;i++)
                                          if(sieve[i]==0)
                                            cout<<i<<" ";
           //}
           return 0;
}
