#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;



#define CPY(d,s) memcpy(d,s,sizeof(s))
#define i64 unsigned long long

#define MOD 1000000007

const i64 base[2][2] = {{1, 1}, {2, 0}};
const i64 unit[2][2] = {{11, 7}, {7, 2}};
	i64 r[2][2];

inline void mul(i64 a[2][2], i64 b[2][2]) {
	i64 r1[2][2];
	r1[0][0] = ((a[0][0]*b[0][0]) + (a[0][1]*b[1][0])) % MOD;
	r1[0][1] = ((a[0][0]*b[0][1]) + (a[0][1]*b[1][1]) )% MOD;
	r1[1][0] = ((a[1][0]*b[0][0]) + (a[1][1]*b[1][0]) )% MOD;
	r1[1][1] = ((a[1][0]*b[0][1]) + (a[1][1]*b[1][1])) % MOD;
	CPY(a, r1);
}


inline void pwr(i64 r2[2][2], i64 n) {
	i64 b[2][2];
	CPY(r2, unit);
	CPY(b, base);
	while(n > 0) {
		if(n & 1) mul(r2, b);
		n >>= 1;
		mul(b, b);
	}
}


inline void fibo(i64 n) {

//CPY(r,base);
	pwr(r, n );
	
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {  i64 n,a1,c,d;
      scanf("%llu",&n);
      if(n==1)
      printf("2\n");
      else if(n==2)
      printf("7\n");
      else if(n==3)
      printf("11\n");
      else
      {
      
       fibo(n-3);
    
      
     
       
       printf("%llu\n",r[0][0]);}
      
   }}    