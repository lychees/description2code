#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <iomanip>
#include <cstring>
#include <fstream>
#include <limits.h>
#define mod 1000000007
using namespace std;

struct node {

};

long long A[1000005],B[1000005], C[1005][1005];

void solve(long long n, long long k)
{
    
    long long i, j;
 
    // Caculate value of Binomial Coefficient in bottom up manner
    for (i = 0; i <= n; i++)
    {
        for (j = 0; j <= min(i, k); j++)
        {
            if(i==0) {
            	C[i][j] = 1;
            }
            // Base Cases
            if (j == 0 || j == i)
                C[i][j] = 1;
 
            // Calculate value using previosly stored values
            else
                C[i][j] = (C[i-1][j-1] + C[i-1][j])%mod;
        }
    }
 
}

int main()
{
	long long i,j,k,l,m,n,x,y,z,a,b,c,d,t,rf,rr,bf,br , out , e;
	string str;
	struct node s;
	solve(1001,1001); 
	cin>>t;
	while(t--){
		cin>>n>>m;
		c = 0;
		rf = 6*n;
		rr = 18*n;
		br = 18*n;
		bf = 6*n;
		if(m%2 == 1)cout<<"0\n";
		else if((rf+bf) < m/2)cout<<"0\n";
		else{
			out = 0;
			for(i = 0; i <= m/2; i++){
				
				if(rf>=i && bf>=(m/2-i) && rr>=(m/2-i) && br >= i){
					a = C[rf][i];
					b = C[bf][m/2-i];
					c = C[rr][m/2-i];
					d = C[br][i];
					e = ((a*b)%mod * ((c*d)%mod))%mod;
					out = (out + e)%mod;
				}
			}
			cout<<out<<endl;
		}
	}
	return 0;
}