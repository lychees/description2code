# __author__ = 'guluuu3'
from collections import deque


def bfs(src, n, graph):
    q = deque([(src, 0)])
    visited = set([src])
    while (len(q)):
        node, level = q.popleft()
        if node == n:
            return level
        for neighbour in graph[node]:
            if neighbour not in visited:
                q.append((neighbour, level+1))
                visited.add(node)


t = input()
while (t):
    n, m = map(int, raw_input().split())
    graph = {}
    for j in range(m):
        a, b = map(int, raw_input().split())
        if a in graph:
            graph[a] = graph[a]+[b]
        else:
            graph[a] = [b]
        if b in graph:
            graph[b] = graph[b]+[a]
        else:
            graph[b] = [a]
        # graph[a]=graph.get(a,[])+[b]
    print bfs(1, n, graph)
    t = t-1
