/*******************
  	Ashish Kumar
	IIIT HYDERABAD
	***********************/


#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<climits>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<bitset>
#include<stack>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<functional>
#include<numeric>
using namespace std;
#define FOR(i,a,b) for(int i= (int )a ; i < (int )b ; ++i)
#define rep(i,n) FOR(i,0,n)
#define INF INT_MAX
#define ALL(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#define pb push_back
#define sz(x) int(x.size())
#define mp make_pair
#define fill(x,v) memset(x,v,sizeof(x))
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pd(n) printf("%lf ",n);
#define pdl(n) printf("%lf\n",n);
#define pil(n) printf("%d\n",n)
#define pll(n) printf("%lld\n",n)
#define pl(n) printf("%lld ",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define scan(v,n) vector<int> v;rep(i,n){ int j;si(j);v.pb(j);}
#define mod (int)(1e9 + 7)
#define lld long long int
lld modpow(lld a,lld n,lld temp){lld res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;} 
long long int gcd(long long int a,long long int b)
{
	long long int c;
	while(a!=0)
	{
		c = a;
		a = b%a;
		b = c;
	}
	return b;
}

void seive()
{
	int i,j;
	int MAX=1000006;
	int isprime[1000006]; 
	isprime[0] = isprime[1] = 1; 
	for (i = 4; i < MAX; i += 2)
		isprime[i] = 1; 
	for (i = 3; i * i < MAX; i += 2) 
	{
		if (!isprime[i]) 
		{
			for (j = i * i; j < MAX; j += 2 * i)
				{
					isprime[j] = 1; 
				}
		}
	}
}
int compare(const void *p1,const void *p2)
{
	return *(lld *)p1 - *(lld *)p2;
}
lld tree[100005]={0},tree2[100005]={0};
lld n,i,j,a[100005],b[100005];

lld read1(lld idx)
{
	lld sm=0;
	while(idx>0)
	{
		sm+=tree[idx];
		idx-=(idx&-idx);
	}
	return sm;
}
lld read2(lld idx)
{
	lld sm=0;
	while(idx<=n)
	{
		sm+=tree[idx];
		idx+=(idx&-idx);
	}
	return sm;
}
void update(lld idx)
{
	while(idx<=n)
	{
		tree[idx]+=1;
		idx+=(idx&-idx);
	}
}
lld read21(lld idx)
{
	lld sm=0;
	while(idx>0)
	{
		sm+=tree2[idx];
		idx-=(idx&-idx);
	}
	return sm;
}
lld read22(lld idx)
{
	lld sm=0;
	while(idx<=n)
	{
		sm+=tree2[idx];
		idx+=(idx&-idx);
	}
	return sm;
}
void update2(lld idx)
{
	while(idx<=n)
	{
		tree2[idx]+=1;
		idx+=(idx&-idx);
	}
}
int main()
{
	lld t;
	sl(t);
	while(t--)
	{
		memset(tree,0,sizeof(tree));
		memset(tree2,0,sizeof(tree2));
		sl(n);
		vector<pair<lld,lld> >  ini;
		lld sri[100005],ani[100005]={0};
		lld sr=0,an=0;
		for(i=0;i<n;i++)
		{
			sl(b[i]);
			ini.pb(mp(b[i],i));
		//	b[i]=a[i];
		}
		sort(ALL(ini));
//		qsort(a,n,sizeof(a[0]),compare);
//		map<lld,lld> ma;
		b[ini[0].second]=1;
		j=1;
		for(i=1;i<n;i++)
		{
			if(ini[i].first==ini[i-1].first)
			{
				b[ini[i].second]=j;
			}
			else
			{
				b[ini[i].second]=j+1;
				j++;
			}

		}
		for(i=0;i<n;i++)
		{
			//cout<<ma[b[i]]<<" ";
			lld vl=read1(b[i]-1);
			lld vl2=read1(b[i]);
//			cout<<vl<<" "<<(i-vl2)<<endl;
			sri[i]=vl;
			ani[i]=(i-vl2);
			update(b[i]);
		}
		for(i=n-1;i>=0;i--)
		{
			lld vl=read21(b[i]-1);
			lld vl2=read21(b[i]);
	//		cout<<vl<<" "<<(n-i-1-vl2)<<endl;
			sri[i]*=vl;
			ani[i]*=(n-i-1-vl2);
			update2(b[i]);
		}
		for(i=0;i<n;i++)
		{
			an+=sri[i];
			sr+=ani[i];
		}
//		cout<<sr<<" "<<an<<endl;
		lld st;
		sl(st);
		if(st==0)
		{
			if(sr>=an)
			{
				printf("Sarika\n");//<<endl;//<<2*min(sr,an)<<endl;
			}
			else
			{
				printf("Ananya\n");//<<endl;//<<an<<endl;
			}
			if(sr>=an)
			{
				printf("%lld\n",2*min(sr,an));//<<endl;
			}
			else
			{
				printf("%lld\n",2*sr+1);//<<endl;
			}
		}
		else
		{
			if(sr>=an)
			{
				printf("Ananya\n");//<<(sr)<<endl;
			}
			else
			{
				printf("Sarika\n");//<<endl;//<<(an)<<endl;
			}
			if(sr>=an)
			{
				printf("%lld\n",2*min(sr,an));
			}
			else
			{
				printf("%lld\n",2*sr+1);
			}

		}
	}
	return 0;
}
