/* Rohit Kumar Jha */

#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#define lli long long int
#define pb push_back
#define mod 1e16
#define pii pair<int,int>

using namespace std;
bool poss;
int tot;
int M;
lli dp[2001][201][51];
lli recur(int n1,int n5,int n10,int m){
    if(m==0){
        poss=true;
        return 0;
    }
    if(dp[n1][n5][n10]!=-1)return dp[n1][n5][n10];
    lli ret,p=mod,q=mod,r=mod,s=mod,t=mod;
    if(n10 > 0)p = 1+ recur(n1+2,n5,n10-1,m-1);
    if(n5>0 && n1>=3) q= 4+ recur(n1-3,n5-1,n10,m-1);
    if(n5 >=2)r= 2+ recur(n1+2,n5-2,n10,m-1);
    if(n1 >=8)s = 8 + recur(n1-8,n5,n10,m-1);
    if(n1>=3 && n10>=1) t= 4 + recur(n1-3,n5+1,n10-1,m-1);
    s=min(s,t);
    ret= min(min(p,q),min(r,s));

    dp[n1][n5][n10]=ret;
    return ret;
}
int main()
{
    int t,i,j,k,l,n1,n5,n10;
    cin>>t;
    while(t-->0){
        memset(dp,-1,sizeof(dp));
        poss=false;
        cin>>M>>n1>>n5>>n10;
        tot= (n1*1) + (n5*5) +(n10 *10);
        lli ans= recur(n1,n5,n10,M);
        if(tot >= 8*M )cout<<ans<<endl;
        else cout<<-1<<endl;

    }


    return 0;
}

