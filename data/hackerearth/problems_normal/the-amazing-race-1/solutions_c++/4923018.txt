#include <iostream>
#include <utility>
#include <algorithm>
#include <stack>
using namespace std;
typedef  long long in;
typedef  long long ino;
#define mod 1000000007
int main()
{
	
    int t;
    cin>>t;
    while(t--)
    {
    	stack < pair <ino,ino> > st;
    	ino n;
    	cin>>n;
    	ino *a=new ino[n];in *s=new in[n];
    	for(ino i=0;i<n;i++)
    	cin>>a[i];
    	st.push(make_pair(a[0],0));
    	pair <ino,ino> p;
    	for(ino i=1;i<n;i++)
    	{
    		p=st.top();
    		if(p.first>a[i])
    		st.push(make_pair(a[i],i));
    		else
    		{
    			while(!st.empty()&&(p.first<=a[i]))
    			{
    				s[p.second]=(i-p.second)%mod;
    				st.pop();
    				if(!st.empty())
    				p=st.top();
    			}
    		st.push(make_pair(a[i],i));
    		}
    	}
    	while(!st.empty())
    	{
    		p=st.top();
    		s[p.second]=(n-1-p.second)%mod;
    		st.pop();
    	}
    	st.push(make_pair(a[n-1],n-1));
    	for(ino i=n-2;i>=0;i--)
    	{
    		p=st.top();
    		if(p.first>a[i])
    		st.push(make_pair(a[i],i));
    		else
    		{
    			while(!st.empty()&&(p.first<=a[i]))
    			{
    				s[p.second]=(s[p.second]+p.second-i)%mod;
    				st.pop();
    				if(!st.empty())
    				p=st.top();
    			}
    		st.push(make_pair(a[i],i));
    		}
    	}
    	while(!st.empty())
    	{
    		p=st.top();
    		s[p.second]=(s[p.second]+p.second)%mod;
    		st.pop();
    	}
    	for(ino i=0;i<n;i++)
          {
          	 s[i]=(s[i]*(i+1))%mod;
          }
         in max=s[0];ino res=0;
        for(ino i=1;i<n;i++)
          {
          	 if(s[i]>max)
          	 {
          	 	max=s[i];
          	 	res=i;
          	 	//cout<<max<<":"<<res<<endl;
          	 }
          }
          cout<<res+1<<endl;
    }
    return 0;
}
