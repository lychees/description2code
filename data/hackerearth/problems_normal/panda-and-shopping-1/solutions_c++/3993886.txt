// Aditya Shah

#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define SZ(x) (int)(x).size()

typedef long long LL;
typedef pair<int, int> PII;

const int maxn = 100001;

LL H[maxn], L[maxn], tree[maxn << 2];

void update(int l, int r, int pos, int idx, LL val) {
    if (pos > r || pos < l) return;
    if (l == r && l == pos) {
        tree[idx] = max(tree[idx], val);
        return;
    }
    int mid = (l + r) / 2;
    update(l, mid, pos, idx << 1, val);
    update(mid + 1, r, pos, idx * 2 + 1, val);
    tree[idx] = max(tree[idx << 1], tree[idx * 2 + 1]);
}

LL read(int l, int r, int ql, int qr, int idx) {
    if (r < ql || l > qr) return 0;
    if (l >= ql && r <= qr) return tree[idx];
    int mid = (l + r) / 2;
    LL res = read(l, mid, ql, qr, idx << 1);
    return max(read(mid + 1, r, ql, qr, idx * 2 + 1), res);
}

int main() {
    int N, n = 0, tmp = -1e9, idx = 0;
    map<LL, int> M;
    cin >> N;
    while (N--) {
        cin >> H[n] >> L[n];
        M[L[n]];
        ++n;
    }
    for (auto &it : M) {
        it.second = ++idx;
    }
    for (int i = 0; i < n; ++i) {
        LL dp = read(1, n - 1, 1, M[L[i]], 1);
        update(1, n - 1, M[L[i]], 1, dp + H[i]);
    }
    LL res = read(1, n - 1, 1, n - 1, 1);
    cout << res;
    return 0;
}