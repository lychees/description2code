#include <bits/stdc++.h>

using namespace std;
template <typename T> string to_string(const T& n){
  ostringstream stm;
  stm<<n;
  return stm.str();
}

#define icin(x) scanf("%d",&x)
#define lcin(x) scanf("%lld",&x)
#define pb push_back

typedef long long LL;
typedef vector<int> vi;
typedef vector<vi> vvi; 
typedef pair<int,int> pii;


const int N = 1000000;
vector<int> is_prime(N+1);
vector<int> primes;
void sieve(){
  primes.clear();
  fill(is_prime.begin(),is_prime.end(),1);
  for(int j=2,k=2;j<=N;j++){
    if(is_prime[j]==0)continue;
    primes.push_back(j);
    k=2;
    while(j*k<=N){
      is_prime[j*k]=0;k++;
    }
  }
  is_prime[0]=is_prime[1]=0;
}

vector<pair<int,LL> > ans;
LL cnt(int n){
  LL ans=1;
  int d;
  while(n){
    d=n%10;
    if(d)ans*=d;
    n/=10;
  }
  return ans;
}
int divisors(LL n){
  LL ans=1;
  int p;
  for(int i=0;i<primes.size();i++){
    p=primes[i];
    if(p*p>n)break;
    if(n%p)continue;
    int c=0;
    while(n%p==0){
      c++;
      n/=p;
    }
    ans*=(c+1);
  }
  if(n!=1)
    ans*=2;
  return ans;
}
int main(){
  sieve();
  for(int i=0;i<primes.size();i++){
    string str=to_string(primes[i]);
    string rstr=str;
    reverse(rstr.begin(),rstr.end());
    if(rstr==str){
      ans.pb(make_pair(primes[i],cnt(primes[i])));
    }
  }
  int t;
  icin(t);
  while(t--){
    int n,m;
    icin(n);
    icin(m);
    LL p = ans[n-1].second;
    LL num=p*m;
    cout<<divisors(num)<<endl;
  }
  return 0;
}