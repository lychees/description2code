#include <iostream>
#include <algorithm>
#include <cstring>
#include <cstdio>
using namespace std;

const int MAX1 = 710, MAX5 = 110, MAX10 = 60;
const int INF = 0x3f3f3f3f;
int  c, n1, n5, n10, dp[MAX1][MAX5][MAX10];



int DP(int c, int n1, int n5, int n10) {
    if (c == 0) return 0;
    if (dp[n1][n5][n10] != -1) return dp[n1][n5][n10];

    int ret = INF;
    if (n10 >= 1) {
        ret = min(ret, DP(c-1, n1+2, n5, n10-1) + 1);
    }
    if (n5 >= 2) {
        ret = min(ret, DP(c-1, n1+2, n5-2, n10) + 2);
    }
    if (n5 >= 1 && n1 >= 3) {
        ret = min(ret, DP(c-1, n1-3, n5-1, n10) + 4);
    }
    if (n10 >= 1 && n1 >= 3) {
        ret = min(ret, DP(c-1, n1-3, n5+1, n10-1) + 4);
    }
    if (n1 >= 8) {
        ret = min(ret, DP(c-1, n1-8, n5, n10) + 8);
    }
    return dp[n1][n5][n10] = ret;
}

void solve() {
    printf("%d\n", DP(c, n1, n5, n10));
}

int main() {
	int t;
    scanf("%d", &t);
    while (t--) {
   
    memset(dp, -1, sizeof(dp));

    scanf("%d%d%d%d", &c, &n1, &n5, &n10);

       if(c*8>(n1+n5*5+n10*10))
       cout<<"-1"<<endl;
       else
        solve();
    }
    return 0;
}
