#include <iostream>
using namespace std;
int binarySearch(int arr[], int l, int r, int x)
{
   if (r >= l)
   {
        int mid = l + (r - l)/2;
        if (arr[mid] == x)  return mid;
        if (arr[mid] > x) return binarySearch(arr, l, mid-1, x);
        return binarySearch(arr, mid+1, r, x);
   }
   return -1;
}
void quick(int *a, int low, int high)
{
	int pivot,i,j,temp;
	if(low<high)
	{
		pivot=low;
		i=low;
		j=high;
		while(i<j)
		{
			while(a[i]<=a[pivot]&&i<=high)
			{
				i++;
			}
			while(a[j]>a[pivot]&&j>=low)
			{
				j--;
			}
			if(i<j)
			{
				temp=a[i];
				a[i]=a[j];
				a[j]=temp;
			}
		}
		temp=a[j];
		a[j]=a[pivot];
		a[pivot]=temp;
		quick(a,low,j-1);
		quick(a,j+1,high);
	}
	
}
int main()
{
    int n,q,x;
    cin>>n>>q;
    int a[n];
    for(int i=0;i<n;i++)
    cin>>a[i];
    quick(a,0,n-1);
    while(q--){
    	cin>>x;int flag=-1;
    	flag=binarySearch(a,0,n-1,x);
    	if(flag==-1)
    	cout<<"NO\n";
    	else
    	cout<<"YES\n";
    }
    return 0;
}
