#include<iostream>
#include<cstdio>
#include<algorithm>

using namespace std;

#define MAXN 111111
#define sd(x) scanf("%d",&x)
#define F first
#define S second

pair< int, int > a[MAXN];
int BIT[MAXN];
int n;

int Query(int k){
    int ret = 0;
    while(k > 0){
        ret = max(ret, BIT[k]);
        k -= (k&(-k));
    }
    return ret;
}

void Update(int k, int v){
    if(k == 0){
        return;
    }
    while(k <= n){
        BIT[k] = max(BIT[k], v);
        k += (k&(-k));
    }
}

void Solve(){
    sd(n);
    for(int i = 0; i < n; i++){
        sd(a[i].F);
        sd(a[i].S);
    }
    sort(a, a + n);
    for(int i = 0; i <= n + n; i++){
        BIT[i] = 0;
    }
    int ans = 0;
    for(int i = 0, j; i < n; i++){
        j = Query(a[i].S);
        if(ans < j + 1){
            ans = j + 1;
        }
        Update(a[i].S, j + 1);
    }
    cout<<ans<<endl;
}

int main(){
    int t;
    sd(t);
    while(t--){
        Solve();
    }
    return 0;
}
