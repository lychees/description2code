//satyaki3794
#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <algorithm>
#include <climits>
#include <string>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cctype>
#include <cassert>
#define gc getchar_unlocked
#define pc putchar_unlocked
#define PI (3.14159265)
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define INF (10000005)
#define SIZE (100005)
#define TREESIZE (302144)
#define LEFT(n) (2*n)
#define RIGHT(n) (2*n+1)
#define epsilon 1e8 //add to double before casting to integer

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;

vector<int> adj[100005];
bool done[100005];
ll fac[100005];

int bfs(int src){
    int cnt = 0;

    queue<int> qq;
    cnt++;
    done[src] = true;
    qq.push(src);
    while(!qq.empty()){
        int v = qq.front(); qq.pop();
        for(int i=0;i<adj[v].size();i++){
            int vv = adj[v][i];
            if(done[vv])    continue;
            cnt++;
            done[vv] = true;
            qq.push(vv);
        }
    }

    return cnt;
}


int main()
{
    ios_base::sync_with_stdio(0);
    // freopen("input.txt", "r", stdin);

    int n, k, i;
    cin>>n>>k;

    fac[0] = 1;
    for(i=1;i<=100000;i++)
        fac[i] = (i * fac[i-1]) % MOD;

    while(k--){
        int a, b;
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    ll ans = 1;
    for(i=0;i<n;i++){
        if(done[i]) continue;
        ans = (ans * fac[bfs(i)]) % MOD;
    }

    cout<<ans;
    return 0;
}



















