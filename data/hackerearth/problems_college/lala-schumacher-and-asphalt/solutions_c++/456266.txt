#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<map>
#include<set>
#include<stack>
#include<list>
#include<vector>
#include<queue>
#include<deque>
#include<ctype.h>

using namespace std;

#define MOD 1000000007
#define PI acos(-1)
#define MP make_pair
#define PB push_back
#define VI vector<int>
#define PII pair<int,int>
#define LL long long
#define SI(x) scanf("%d",&x)
#define PRI(x) printf("%d\n",x)
#define PRLL(x) printf("%lld\n",x)
#define SLL(x) scanf("%lld",&x)
#define MEM(v,i) memset(v,i,sizeof(v))
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for (int i=(a);i<=(b);i++)
#define DEBUG(x) cout<<#x<<"="<<x<<endl
#define getcx getchar_unlocked
LL NX[100005],NY[100005];
LL nt,bt,N;
LL fx,fy;
int main(){
   LL T,i,dist1,dist2,min;
   cin>>T;
   while(T--){
       min=1000000000000LL;
       SLL(N);
       for(i=0;i<N;i++)
          SLL(NX[i]);
       for(i=0;i<N;i++)
          SLL(NY[i]);
       
       SLL(fx);SLL(fy);
        SLL(nt);SLL(bt);
       for(i=0;i<N;i++){
           dist1=nt*(fabs(NX[i])+fabs(NY[i]));
           dist2=bt*(fabs(fx-NX[i])+fabs(fy-NY[i]));
           if((dist1+dist2)<min)
               min=dist1+dist2;
        }
        if(nt*(abs(fx)+abs(fy))<min)
             min=nt*(abs(fx)+abs(fy));
        cout<<min<<endl;
   }
return 0;
}
               
          
           
       
       
