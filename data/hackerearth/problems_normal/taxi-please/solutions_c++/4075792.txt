#include <bits/stdc++.h>

#define MOD 100
#define MAX 100005
#define INF 111111111

typedef long long ll;
typedef unsigned long long llu;

using namespace std;

struct node{
    int p,s,j;
}arr[MAX];

int taxi[MAX];

set < pair < int , int > > se;
set < pair < int , int > > :: iterator it,pt;

bool cmp(node a, node b)
{
    return a.s<b.s;
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int n,m,s,j;
    while(~scanf("%d %d",&n,&m)){
        se.clear();
        for(int i=0;i<n;i++){
            scanf("%d %d",&arr[i].s,&arr[i].j);
            arr[i].p=i+1;
        }
        sort(arr,arr+n,cmp);
        int taxi_no=1;
        for(int i=0;i<n;i++){
            if(se.empty()){
                taxi[arr[i].p]=taxi_no;
                se.insert(make_pair(arr[i].s+arr[i].j,taxi_no));
                taxi_no++;
            }
            else{
                it=se.begin();
                int minm=(*it).second;
                if((*it).first<=arr[i].s){
                    for(it=se.begin();(*it).first<=arr[i].s;it++){
                        if((*it).second<=minm)minm=(*it).second,pt=it;
                    }
                    taxi[arr[i].p]=minm;
                    se.erase(pt);
                    se.insert(make_pair(arr[i].s+arr[i].j,taxi[arr[i].p]));
                }
                else if((*it).first>arr[i].s&&taxi_no<=m){
                    taxi[arr[i].p]=taxi_no;
                    se.insert(make_pair(arr[i].s+arr[i].j,taxi_no));
                    taxi_no++;
                }
                else{
                    taxi[arr[i].p]=-1;
                }
            }
        }
        printf("%d",taxi[1]);
        for(int i=2;i<=n;i++)printf(" %d",taxi[i]);
        printf("\n");
    }
    return 0;
}
