#include<bits/stdc++.h>
#define assn(n,a,b) assert(n<=b and n>=a)
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define sd(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
using namespace std;

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
       cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
       const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

#define MOD 1000000007ll
LL mpow(LL a, LL n) 
{LL ret=1;LL b=a;while(n) {if(n&1) 
ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
return (LL)ret;}

#define MAXN 100009
LL pre[MAXN];
LL ar[MAXN];

LL solve(double a, double b, double c){
    if(b*b<4*a*c)return 0;
    double roota=ceil((double)(-b+sqrt(b*b-4*a*c))/(double)(2*a));
    double rootb=floor((double)(-b-sqrt(b*b-4*a*c))/(double)(2*a));
    if(roota>rootb)swap(roota, rootb);
    if((roota>0 or fabs(roota)<1e-9) and (a*roota*roota+b*roota+c>0 or fabs(a*roota*roota+b*roota+c)<1e-9))return roota;
    if((rootb>0 or fabs(rootb)<1e-9) and (a*rootb*rootb+b*rootb+c>0 or fabs(a*rootb*rootb+b*rootb+c)<1e-9))return rootb;
    return LLONG_MAX;
}

int main()
{
    LL n,h,ans=LLONG_MAX;
    cin >> n >> h;
    for(int i=1; i<=n; i++){
        cin >> ar[i];
        pre[i]=pre[i-1];
        pre[i]+=ar[i];
    }
    for(int i=0; i<=n; i++){
        LL p=solve((double)n*n, (double)n*(double)(i+1) + (double)n*i + (double)2*(double)pre[n], (double)i*(double)(i+1) + 2*(double)pre[i] - 2*(double)h);
        if(p!=LLONG_MAX)ans=min(ans, p*n+i);
    }
    cout << ans << endl;
    return 0;
}


