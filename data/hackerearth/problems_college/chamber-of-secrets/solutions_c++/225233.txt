#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define sd(x) scanf("%lld",&x)
#define slld(x) scanf("%lld",&x)
#define pf printf

#define LL long long
#define ll long long
#define LD long double
#define ld long double
#define PB push_back
#define pb push_back
#define MP make_pair
#define mp make_pair
#define F first
#define S second

typedef pair<int,int> PII;
typedef vector<int> VI;

#define pii pair<int,int>
#define vi vector<int>
#define fr(i,n) for( int i=0; i<=n; i++)
#define frm(i,m,n) for(int i=m; i<=n; i++)
#define mod 1000000007
int gcd(int a,int b)
{
    if(b>a)return gcd(b,a);
    if(b==0)return a;
    return gcd(b,a%b);
}
string s;
LL n,x,y,z,w,q;
LL arr[100002];
LL brr[100002];
LL crr[100002];
void solve()
{
    sd(n);
    sd(q);
    brr[0] = 0;
    crr[0] = 0;
    for(LL i=1;i<=n;i++)
    {
        sd(arr[i]);
        brr[i] = brr[i-1]+ arr[i];
        crr[i] = crr[i-1] + i*arr[i];
        if(brr[i]>mod)brr[i]%=mod;
        if(crr[i]>mod)crr[i]%=mod;
        //cout<<arr[i]<<" "<<brr[i]<<" "<<crr[i]<<endl;
    }
    LL p,r,s,my,mz;
    while(q--)
    {
           sd(w);sd(x);sd(y);sd(z);
           p = brr[x+z]-brr[x+y-1];
           p%=mod;
           p = p*(w-x);
           p%=mod;
           r = crr[x+z]-crr[x+y-1];
           p += r;
           p%=mod;
           if(p<0)p+=mod;
           printf("%lld\n",p);
    }
}
int main()
{
    LL t;
    sd(t);
    while(t--){
//    in();
    solve();
    }
}
