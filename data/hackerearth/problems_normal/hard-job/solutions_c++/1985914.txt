#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof((x)))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define x first
#define y second

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;


inline int nxt() {
    int a;
    scanf("%d", &a);
    return a;
}

const int N = 500000;
int p[N];
int inv[N];
int L = N;
int R;
const int M = N + N + N;
int t[M];

void inc(int i, int val) {
    for (;i < M; i |= i + 1) {
        t[i] += val;
    }
}

int sum(int r) {
    int ret = 0;
    for (;r >= 0; r &= r + 1, --r) {
        ret += t[r];
    }
    return ret;
}

int sum(int l, int r) {
    if (l > r) return 0;
    return sum(r) - sum(l - 1);
}


void solve() {
    int n = nxt();
    int m = nxt();
    for (int i = 0; i < n; ++i) {
        p[i] = nxt() - 1;
        inv[p[i]] = i + N;
    }
    for (int i = 0; i < n; ++i) {
        inc(inv[i], 1);
    }
    L = L - 1;
    R = N + n;
    long long ans = 0;
    for (int i = 0; i < m; ++i) {
        char s[2];
        int x = nxt() - 1;
        scanf("%s", s);
        ans += min(sum(0, inv[x] - 1), sum(inv[x] + 1, M - 1));
        inc(inv[x], -1);
        if (s[0] == 'l') {
            inv[x] = L;
            --L;
        } else {
            inv[x] = R;
            ++R;
        }
        inc(inv[x], 1);
    }
    cout << ans << "\n";
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    solve();

    return 0;
}