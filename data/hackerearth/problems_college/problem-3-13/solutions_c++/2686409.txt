#include <iostream>
using namespace std;

int main()
{
    int r,c;
    cin>>r;
    cin>>c;
    int** Matrix;
    Matrix=new int*[r];
    for(int i=0;i<r;i++){
    	Matrix[i]=new int[c];
    	for(int j=0;j<c;j++){
    		cin>>Matrix[i][j];
    	}
    }
    int** LongestL;
    int** LongestR;
    LongestL=new int*[r];
    LongestR=new int*[r];
    
    for(int i=0;i<r;i++){
    	LongestL[i]=new int[c];
    	LongestR[i]=new int[c];
    }
    
    for(int i=0;i<r;i++){
    	LongestR[i][0]=1;
    	for(int k=i-1;k>=0;k--){
    			if(Matrix[i][0]==Matrix[k][0])
    				LongestR[i][0]++;
    			else
    				break;
    		}
    	LongestL[i][0]=LongestR[i][0];
    }
    
    for(int j=0;j<c;j++){
    	LongestR[0][j]=1;
    	for(int k=j-1;k>=0;k--){
    			if(Matrix[0][j]==Matrix[0][k])
    				LongestR[0][j]++;
    			else
    				break;
    		}
    	LongestL[0][j]=LongestR[0][j];
    }
    
    for(int i=1;i<r;i++){
    	for(int j=1;j<c;j++){
    		LongestR[i][j]=1;
    		for(int k=i-1;k>=0;k--){
    			if(Matrix[i][j]==Matrix[k][j])
    				LongestR[i][j]++;
    			else
    				break;
    		}
    		if(Matrix[i][j]==Matrix[i][j-1]){
    			LongestR[i][j]=max(LongestR[i][j],LongestR[i][j-1]+1);
    		}
    		LongestL[i][j]=max(max(LongestL[i-1][j],LongestL[i][j-1]),LongestR[i][j]);
    	}
    }
    cout<<LongestL[r-1][c-1];
    return 0;
}
