#include <algorithm>
#include <iostream>
#include <math.h>
#include <queue>
#include <set>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <vector>
using namespace std;
const int N = 41;
long long f[N][3][3];
int s[3][3];
long long dfs(int n, int i, int j) {
  if (n == 0)
    return 0;
  if (f[n][i][j])
    return f[n][i][j];
  int k = 3 - i - j;
  f[n][i][j] = min(dfs(n - 1, i, k) + dfs(n - 1, k, j) + s[i][j],
                   dfs(n - 1, i, j) + s[i][k] + dfs(n - 1, j, i) + s[k][j] +
                       dfs(n - 1, i, j));
  return f[n][i][j];
}
main() {
  int n;
  for (int i = 0; i < 3; i++)
    for (int j = 0; j < 3; j++)
      scanf("%d", &s[i][j]);
  scanf("%d", &n);
  printf("%I64d\n", dfs(n, 0, 2));
}
