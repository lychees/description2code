#include <iostream>
#include <cstdio>
using namespace std;

#define MOD 1000000007

void multiply(long long A[][2], long long B[][2])
{
	long long C[2][2] = {0};
	for (int i = 0; i < 2; i++)
		for (int  j = 0; j < 2; j++)
			for (int k = 0; k < 2; k++)
				C[i][j] = (C[i][j] + ((A[i][k] * B[k][j]) % MOD))%MOD;
	for (int i = 0; i < 2; i++)
		for (int j = 0; j < 2; j++)
			A[i][j] = C[i][j];
	return;
}

void power(long long matrix[][2], long long base_matrix[][2], long long exp)
{
	if (exp == 1) return;
	power(matrix, base_matrix, exp/2);
	multiply(matrix, matrix);
	if (exp & 1)multiply(matrix, base_matrix);
	return;
}

long long fibonacci(long long n)
{
    n--;
    long long matrix[2][2] = {1, 1, 1, 0};
	long long base_matrix[2][2] = {1, 1, 1, 0};
	power(matrix, base_matrix, n);
	return matrix[0][0];
}

int main()
{
	int t;
	scanf("%d", &t);
	while (t--){
        long long n;
        scanf("%lld", &n);
        printf("%lld\n", (fibonacci(n)) % MOD);
	}
	return 0;
}
