#include <bits/stdc++.h>
using namespace std;
int n;
double hap[3001],x[3001],y[3001],dp[3001];
bool memo[3001];
double dist(int a, int b) {
	double xx = x[a];
	double yy = y[a];
	double xx1 = x[b];
	double yy1 = y[b];
	return (double)sqrt(((xx - xx1)*(xx - xx1)+(yy - yy1)*(yy-yy1)));
}
double recur(int idx) {
	if(idx == n-1) {
		return hap[n-1];
	}
	if(memo[idx] == true){
		return dp[idx];
	}
	double ans = -1e9;
	for(int i = idx+1; i < n; i++) {
		ans = max(ans, hap[idx]-dist(idx, i)+recur(i));
	}
	memo[idx] = true;
	return dp[idx] = ans;
}
int main()
{
    cin >> n;
    memset(memo,false,sizeof memo);
    for(int i =0; i < n; i++) {
    	scanf("%lf %lf %lf",&x[i],&y[i],&hap[i]);
    }
    double ans = recur(0);
   	printf("%0.6lf\n",ans);
    return 0;
}
