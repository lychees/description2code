#include<bits/stdc++.h>
using namespace std;
static int w[100001];
vector<int> adj[100001];
bool v[100001];
int dfs(int cur){
	if(v[cur])
	   return INT_MAX;
	 v[cur]=true;
	 int mi=INT_MAX;
	 for(int i=0;i<adj[cur].size();i++)
	     mi=min(mi,dfs(adj[cur][i]));
	 return min(mi,w[cur]);
}
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		int n,m;
		memset(v,false,sizeof(v));
		scanf("%d %d",&n,&m);
	    for(int i=1;i<=n;i++){
	    	scanf("%d",&w[i]);
	    }
	    for(int i=0;i<m;i++){
	    	int a,b;
	    	scanf("%d %d",&a,&b);
	    	adj[a].push_back(b);
	    	adj[b].push_back(a);
	    }
	    int d[100001],p=0;
	    long long mi=INT_MAX;
	    long long ans=0;
		for(int i=1;i<=n;i++){
			if(v[i])
	           continue;
	         d[p++]=dfs(i);
	         mi=min((long long)d[p-1],mi);
		}
		bool res=true;
		for(int i=0;i<p;i++){
			if(d[i]==mi&&res){
				res=false;continue;
			}
			ans+=mi*d[i];
		}
		printf("%lld\n",ans);
		for(int i=0;i<=n;i++)
		adj[i].clear();
	}
	return 0;
}