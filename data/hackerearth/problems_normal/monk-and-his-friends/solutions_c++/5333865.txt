#include <iostream>

using namespace std;

struct node
{
	long long int data;
	struct node *left;
	struct node *right;
};
struct node * getNewNode(long long int data)
{
	node *t=new node();
	t->data=data;
	t->left=NULL;
	t->right=NULL;
	return t;
}
struct node * Insert(node *root,long long int data)
{
	if (root==NULL)
	{
		root=getNewNode(data);

	}
	else if(data<root->data)
	{
		root->left=Insert(root->left,data);
	}
	else
	{
		root->right=Insert(root->right,data);
	}
	return root;
}
bool Search(node *root,long long int data)
{
	if (root==NULL)
	return false;
	if (root->data==data)
	return true;
	else if (data<root->data)
	return Search(root->left,data);
	else
	return Search(root->right,data);
}
int main()
{
    long long int t,i;
    cin>>t;
    while (t--)
    {
        node *root;
        root=NULL;

        long long int n,m;
        cin>>n>>m;
        long long int a[n+m];
        for (i=0;i<n;i++)
        {
            cin>>a[i];
            if (!Search(root,a[i]))
            {
                root=Insert(root,a[i]);
            }

        }
        for (i=n;i<m+n;i++)
        {
            cin>>a[i];
            if (Search(root,a[i]))
            {
                cout<<"YES"<<endl;
            }
            else
            {
                cout<<"NO"<<endl;
                root=Insert(root,a[i]);
            }
        }

    }
}
