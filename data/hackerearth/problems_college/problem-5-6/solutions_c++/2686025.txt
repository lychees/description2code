#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <cstring>
#include <string>
#include <cmath>
using namespace std;

const int N = 1005;
int dp[N], p[N], c[N];
int INF = 1e9;

int main()
{
	int T;
	cin >> T;
	for (; T--;) {
		int n, x;
		cin >> n >> x;
		for (int i = 0; i < n; ++i)
			cin >> p[i];
		for (int i = 0; i <= n; ++i)
			dp[i] = c[i] = -INF;
		dp[0] = 0;
		for (int i = 1; i <= n; ++i) {
			for (int j = 1; j * j <= i; ++j) {
				if (i % j == 0) {
					c[i] = max(c[i], i / j * (p[j-1] - x));
					c[i] = max(c[i], j * (p[i / j-1] - x));
				}
			}
		}
		for (int i = 1; i <= n; ++i) {
			for (int j = 1; j <= i; ++j) 
			if (dp[i - j] != -INF) {
				dp[i] = max(dp[i], dp[i - j] + c[j]);
			}
		}
		cout << max(0, dp[n]) << endl;
	}

	return 0;
}