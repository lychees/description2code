import math

noOfTestCases = int(raw_input())

def isPrime(no):
	if(no == 1):
		return "Incorrect"
	
	start = 2
	
	while(start <= math.sqrt(no)):
		if(no%start == 0):
			return "Incorrect"
	return "Correct"
	
def gcd(n,k):
	start = 1
	gcd = 1
	while(start <= min(n,k)):
		if(n%start == 0 and k%start == 0):
		  gcd = start
		start += 1	
	return gcd		

def minionApproach(value):
	count = 0
	start = 1
	while(start <= value):
		if(gcd(start, value) == 1):
			count += 1
		start += 1
	print isPrime(count)
	

for caseNo in range(1, noOfTestCases + 1):
	minionApproach(int(raw_input()))
