#include<stdio.h>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<queue>
#include<map>
#include<string.h>
using namespace std;
#define INF 1000000007
#define min(a,b) (a<b?a:b)
typedef long long int ll;
vector<int> G[100005];
int P[100005],Q[100005],visited[100005],idx[100005],cnt=1;
void dfs(int u)
{
    //printf("u=%d vis=%d\n",u,cnt);
    visited[u]=cnt;
    int si=G[u].size(),i;
    for(i=0;i<si;i++)
    {
        int v=G[u][i];
        if(visited[v]==0)
            dfs(v);
    }
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        cnt=1;
        int n,m,i,flag=0;
        scanf("%d%d",&n,&m);
        for(i=1;i<=n;i++)
        {
            visited[i]=0;
            scanf("%d",&P[i]);
            idx[P[i]]=i;
        }
        for(i=1;i<=n;i++)
        {
            scanf("%d",&Q[i]);
            //idx[Q[i]]=i;
        }
        for(i=0;i<m;i++)
        {
            int u,v;
            scanf("%d%d",&u,&v);
            G[P[u]].push_back(P[v]);
            G[P[v]].push_back(P[u]);
        }
        for(i=1;i<=n;i++)
        {
            if(visited[i]==0)
            {
                dfs(i);
                //printf("\n\n");
                cnt++;
            }
        }
        //printf("flag=%d\n",flag);
        for(i=1;i<=n;i++)
        {
            if(visited[P[i]] != visited[Q[i]]){
                flag=1;
                //printf("i=%d P=%d Q=%d\n",i,P[i],Q[i]);
            }
            G[i].clear();
            //visited[i]=0;
        }
        if(flag)
            printf("NO\n");
        else
            printf("YES\n");
    }
    return 0;
}
