/*
ID: ashish1610
PROG:
LANG: C++
Problem Idea same as SPOJ PAREN
*/
#include<bits/stdc++.h>
using namespace std;
#define ll	long long int
#define MOD	1000000009
ll dp[305][305][2];
void solve(string str1, string str2)
{
	int n = str1.length();
	for(int i=0; i<n; ++i)
	{
		dp[i][i][0] = (str1[i] == '1') ? 1LL : 0LL;
		dp[i][i][1] = 1LL - dp[i][i][0];
		for(int j=i-1; j>=0; --j)
		{
			dp[j][i][0] = dp[j][i][1] = 0LL;
			for(int k=j; k<i; ++k)
			{
				if(str2[k] == 'a')
				{
					dp[j][i][0] = (dp[j][i][0] + (dp[j][k][0] * dp[k + 1][i][0]) % MOD) % MOD;
					dp[j][i][1] = (dp[j][i][1] + (((dp[j][k][0] + dp[j][k][1]) * (dp[k + 1][i][0] + dp[k + 1][i][1])) % MOD - ((dp[j][k][0]) * (dp[k + 1][i][0])) % MOD) + MOD) % MOD;
				}
				else if(str2[k] == 'x')
				{
					dp[j][i][0] = (dp[j][i][0] + ((dp[j][k][0] * dp[k + 1][i][1]) % MOD + (dp[j][k][1] * dp[k + 1][i][0]) % MOD)) % MOD;
					dp[j][i][1] = (dp[j][i][1] + ((dp[j][k][0] * dp[k + 1][i][0]) % MOD + (dp[j][k][1] * dp[k + 1][i][1]) % MOD)) % MOD;
				}
				else
				{
					dp[j][i][0] = (dp[j][i][0] + (((dp[j][k][0] + dp[j][k][1]) * (dp[k + 1][i][0] + dp[k + 1][i][1])) % MOD - ((dp[j][k][1]) * (dp[k + 1][i][1])) % MOD) + MOD) % MOD;
					dp[j][i][1] = (dp[j][i][1] + (dp[j][k][1] * dp[k + 1][i][1]) % MOD) % MOD;
				}
			}
		}
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	string str1, str2;
	cin>>str1>>str2;
	solve(str1, str2);
	int q;
	cin>>q;
	while(q--)
	{
		int ind1, ind2;
		string res;
		cin>>ind1>>ind2>>res;
		ind1--;
		ind2--;
		if(res == "true")
			cout<<dp[ind1][ind2][0]<<endl;
		else
			cout<<dp[ind1][ind2][1]<<endl;
	}
	return 0;
}