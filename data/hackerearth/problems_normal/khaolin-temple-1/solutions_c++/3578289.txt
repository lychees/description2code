#include<iostream>
#include<vector>
#include<utility>
#include<algorithm>
using namespace std;
int comp(pair<long int ,int > a,pair<long int ,int > b)
{
    return a.second<b.second;
}
void merge_sort_trick(vector< pair<long int,int > > &arr,int low,int up)
{
    if(low>=up) return ;
    int mid=(low+up+1)/2;
    merge_sort_trick(arr,low,mid-1);
    merge_sort_trick(arr,mid,up);
    int k=0,val=0,i=low,j=mid;
    vector< pair<long int ,int> > b(up-low+1);
    while(i<mid&&j<=up)
    {
        if(arr[i].first+val>=arr[j].first)
        {
            b[k++]=arr[j++];
            val++;
        }
        else
        {
            b[k++]=make_pair(arr[i].first+val,arr[i].second);
            i++;
        }
    }
    while(i<mid)
    {
        b[k++]=make_pair(arr[i].first+val,arr[i].second);
        i++;
    }
    while(j<=up)
    {
        b[k++]=arr[j++];
    }
    for(i=0;i<up-low+1;i++)
        arr[low+i]=b[i];
}
void sol()
{
    long int i,n,a;
    
    cin>>n;
    vector< pair<long int ,int > > arr(n);
    for(i=0;i<n;i++)
    {
        cin>>a;
        arr[i]=make_pair(a,i);
    }
   merge_sort_trick(arr,0,n-1);
    sort(arr.begin(),arr.end(),comp);
    for(i=0;i<n;i++)
        cout<<arr[i].first<<' ';
}
int main()
{
    sol();
    return 0;
}
