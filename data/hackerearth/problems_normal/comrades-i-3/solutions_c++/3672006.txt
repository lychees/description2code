#include<bits/stdc++.h>

using namespace std;
vector<int> v[100005];
int level[100005];
int sparse[100005][20];
bool visited[100005];
int dfs(int src,int par,int l)
{
    //cout<<src<<" "<<par<<"\n";
   visited[src]=true;
    sparse[src][0]=par;
    level[src]=l;
    for(int i=1;i<20;i++)
    {
        if(sparse[src][i-1]!=-1)
        sparse[src][i]=sparse[sparse[src][i-1]][i-1];
    }
    for(int i:v[src])
    {
        if(i!=par)
            dfs(i,src,l+1);
    }

}
bool check(int p,int q)
{

     if(level[p]<level[q])
        swap(p,q);
    long diff = level[p]-level[q];
    for(int i=19;i>=0;i--)
    {
       if(diff &(1<<i))
            p=sparse[p][i];
    }

    if(p==q)
        return true;
    else
        return false;
}
int main()
{


    // freopen("input.txt","r",stdin);
// freopen("output.txt","w",stdout);

    int t,n,baap,x,q,y,z;
    cin>>t;
    while(t--)
    {
        for(int i=0;i<100005;i++) for(int j=0;j<20;j++) sparse[i][j]=-1;
        for(int i=0;i<100005;i++)
            visited[i]=false;
        cin>>n;
        for(int i=1;i<=n;i++)
        {
            cin>>x;
            if(x==0)
            {
             baap=i;
            }
            else
            {
                v[i].push_back(x);
                v[x].push_back(i);
            }
        }
        dfs(baap,0,0);

        cin>>q;
        while(q--)
        {
            cin>>y>>z;
            if(level[y]>level[z])
            {
                if(check(y,z))
                    cout<<(level[y]-level[z]-1)<<"\n";
                else
                    cout<<"-1\n";
            }
            else
                cout<<"-1\n";


        }
         for(int i=0;i<100005;i++)
            v[i].clear();
    }

}
