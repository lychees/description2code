#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <algorithm>
using namespace std;

const int N = 100100;
int n, m;
vector<int> g[N];
int p[N], q[N];
int col[N];
int C;

void dfs(int v)
{
	col[v] = C;
	for (int u : g[v])
		if (col[u] == -1)
			dfs(u);
	return;
}

void solve()
{
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i++)
		g[i].clear();
	for (int i = 0; i < n; i++)
	{
		int x;
		scanf("%d", &x);
		x--;
		p[x] = i;
	}
	for (int i = 0; i < n; i++)
	{
		int x;
		scanf("%d", &x);
		x--;
		q[x] = i;
	}
	while(m--)
	{
		int v, u;
		scanf("%d%d", &v, &u);
		v--;u--;
		g[v].push_back(u);
		g[u].push_back(v);
	}
	for (int i = 0; i < n; i++)
		col[i] = -1;
	C = 0;
	for (int i = 0; i < n; i++)
		if (col[i] == -1)
		{
			dfs(i);
			C++;
		}
	bool ok = true;
	for (int i = 0; i < n; i++)
		ok &= col[p[i]] == col[q[i]];
	if (ok)
		printf("YES\n");
	else
		printf("NO\n");
	return;
}

int main()
{
    int t;
    scanf("%d", &t);
    while(t--)
    	solve();
    return 0;
}
