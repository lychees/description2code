#include <bits/stdc++.h>
 
using namespace std;
 
#define maxN 100000
#define ll long long int
#define mod 1000000007
 
vector<int> g[maxN+5];
int visit[maxN+5]={0};
int n,m;
ll fact[maxN+5];
 
int dfs(int u)
{
	int i,v,ans=1;
	for(i=0;i<(int)g[u].size();i++)
	{
		v=g[u][i];
		if(visit[v]==0)
		{
			visit[v]=1;
			ans=ans+dfs(v);
		}
	}
	return ans;
}
 
ll inv(ll a)
{
	ll b=mod-2,x=1,y=a;
	while(b>0)
	{
		if(b%2)
			x=(x*y)%mod;
		y=(y*y)%mod;
		b=b/2;
	}
	return x;
}
 
ll combo(int n,int r)
{
	if(n<r)
		return 0;
	return (fact[n]*inv((fact[n-r]*fact[r])%mod))%mod;
}
 
int main()
{
    int t,i,u,v;
    ll ans;
    fact[0]=1;
    for(i=1;i<=maxN;i++)
    	fact[i]=(fact[i-1]*i)%mod;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d%d",&n,&m);
    	for(i=1;i<=n;i++)
    	{
    		g[i].clear();
    		visit[i]=0;
    	}
    	while(m--)
    	{
    		scanf("%d%d",&u,&v);
    		g[u].push_back(v);
    		g[v].push_back(u);
    	}
    	ans=1;
    	for(i=1;i<=n;i++)
    	{
    		if(visit[i]==0)
    		{
    			visit[i]=1;
    			ans=(ans*max((ll)1,combo(dfs(i),2)))%mod;
    		}
    			
    	}
    	printf("%lld\n",ans);
    }
    return 0;
}