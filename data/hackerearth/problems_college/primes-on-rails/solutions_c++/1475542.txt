#include<iostream>
#include<algorithm>
#include<string.h>
#include<math.h>
#define loop(i,n) for(int i=0;i<n;i++)
#define loopy(n) for(int i=0;i<n;i++)
#define strloop(i,a) for(int i=0;a[i];i++)
#define print(a) cout<<a<<endl
#define swap(a,b) a=a+b; b=a-b; a=a-b
#define lcm(a,b) (a*b)/gcd(a,b)
#define MAX 100000
#define ll long long
#define declaregcd int gcd(int a, int b) { if(b>a) swap(a,b);int r; while(b>0){r=a%b;if (r==0) return b; a=b; b=r; } return 1;}
int p[MAX]={0};
void primes()
{
	p[1]=1;
	p[2]=0;
	for(int i=2;i<=sqrt(MAX);i++)
	{
		if(!p[i])
			for(int j=2*i;j<MAX;j+=i)
				p[j]=1;
	}
}
bool isPrime(ll a)
{
	if(a<MAX)
		return !p[a];
	else
	{	for(int i=2;i<sqrt(a);i++)
			if(a%i==0)
				return 0;
		return 1;
	}
}
using namespace std;
ll interval[100000]={0};
int main()
{

	primes();
	int n,h,m,s;
	ll x;
	ll halt;
	cin>>n;
	loop(i,n)
	{
		cin >> h >> m >> s;

		x= (3600*h + 60*m + s);
		int pp=isPrime(x);

		if(pp)
			halt=5*60;

		else if(x%2==1)
			halt=3*60;

		else
			halt=2*60;

		for(ll j=x; j< x+halt ; j++)
			interval[j]++;
	}
	ll mi=0;
	loop(i,100000)
		mi=(max(mi,interval[i]));
	cout<<mi<<endl;
}
