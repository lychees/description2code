#include <iostream>
using namespace std;


void solve(string a,string b) {
	int carry=0;
	int index = 1,m = a.size()>b.size()?a.size():b.size();
	
	int ans = 0;
	
	
	while(index<=m || carry>0) {
		int d1,d2;
		
		if(a.size()-index>=0) d1 = a[a.size()-index];
		else d1 = '0';
		if(b.size()-index>=0) d2 = b[b.size()-index];
		else d2 = '0';
		carry = (d1-'0'+d2-'0' + carry)/10;
		//cout<<d1-'0'<<" "<<d2-'0'<<" "<<carry<<endl;
		if(carry>0) ans++;
		index++;
	}
	
	if(ans==0) cout<<"No carry operation"<<endl;
	else if(ans==1) cout<<"1 carry operation"<<endl;
	else cout<<ans<<" carry operations"<<endl;
}


int main()
{
    int test;
    cin>>test;
    
    while(test--) {
    	string strA, strB;
    	cin>>strA>>strB;
    	
    	solve(strA,strB);
    }
    return 0;
}
