#include <iostream>
#include <vector>

#define MOD 1000003
#define ll long long

#define row vector<ll>
#define column vector<ll>
#define matrix vector< row >

const int S=4;

using namespace std;

matrix I;
void display(matrix a)
{
	for(int i=0; i<S; i++)
	{
		for(int j=0; j<S; j++) cout << a[i][j] << " ";
		cout << endl;
	}
}
void reset(column &a)
{
	for(int i=0; i<S; i++) a.push_back(0);
}
void reset(matrix &a)
{
	for(int i=0; i<S; i++)
	{
		row r;
		for(int j=0; j<S; j++) r.push_back(0);
		a.push_back(r);
	}
}

matrix mult(matrix a, matrix b)
{
	matrix c;
	reset(c);
	for(int i=0; i<S; i++)
		for(int j=0; j<S; j++)
			for(int k=0; k<S; k++)
				c[i][j] = (c[i][j] + a[i][k]*b[k][j]) % MOD;
	return c;
}
column mult(matrix a, column b)
{
	column c;
	reset(c);
	for(int i=0; i<S; i++)
		for(int k=0; k<S; k++)
			c[i] = (c[i] + a[i][k]*b[k]) % MOD;
	return c;
}

matrix pow(matrix a, ll n)
{
	if(n==0) return I;
	matrix c = pow(a,n/2);
	
	c = mult(c,c);
	if(n%2==0) return c;
	else return mult(a,c);
}

int main()
{
	reset(I);
	for(int i=0; i<S; i++) I[i][i] = 1;
	
	int t;
	cin >> t;
	while(t--)
	{
		int a,b,c;
		cin >> a >> b >> c;
		ll n;
		cin >> n;
		matrix fi = { {1,0,1,0}, {0,1,1,1}, {0,1,0,0}, {0,0,1,0} };
		matrix fin = pow(fi, n-1);
		column c0 = {a,c,b,a};
		column cn = mult(fin, c0);
		cout << cn[0] << endl;
	}
}
