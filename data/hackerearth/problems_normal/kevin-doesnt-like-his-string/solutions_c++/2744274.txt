#include <bits/stdc++.h>
using namespace std;
#define FO(i,a,b) for (int i = a; i < b; i++)

int f[26] /* stuff we've lifted */, o[26] /* stuff we need */, r[26] /* stuff that's left */;
char s[100005];
char res[100005];
int n, k;

bool good() {
	int t = 0;
	FO(i,0,26) {
		if (f[i]+r[i] < o[i]) return false;
		t += max(o[i],f[i]);
	}
	return t <= k;
}

int main()
{
	scanf("%d%d", &n, &k);
	scanf("%s", &s);
	FO(i,0,n) r[s[i]-'a']++;
	FO(i,0,n) {
		r[s[i]-'a']--;
		for (res[i] = 'a'; res[i] <= 'z'; res[i]++) {
			if (res[i] != s[i]) {
				f[s[i]-'a']++;
				o[res[i]-'a']++;
				if (!good()) {
					f[s[i]-'a']--;
					o[res[i]-'a']--;
				} else goto found;
			} else {
				if (good()) goto found;
			}
		}
		assert(false);
		found:;
		//printf("res=%s\n", res);
	}
	printf("%s\n", res);
	
    return 0;
}
