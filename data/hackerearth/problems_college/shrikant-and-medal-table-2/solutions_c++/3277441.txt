// ADITYA VARSHNEY

#include <iostream>
#include <bitset>
#include <cmath>
#include <queue>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <map>
#include <climits>

#define pb push_back
#define mp make_pair
#define mod 1000000007

typedef long long int ll;

using namespace std;

#define getcx getchar//_unlocked
#define mod2 4294967296


long long int powr (long long int a, long long int b)
{
if (b == 0)
return 1;
long long int x = powr(a, b/2);
if (b % 2 == 0)
return (x*x)%mod;
else
return (((x*x)%mod)*a)%mod;
}


long long int scanll()
{
    long long int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

int scani()
{
    int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

string lex(string s) {
    for(int i = 0; i < s.length(); i++) {
        s[i] = 90-(s[i]-65);
    }
    return s;
}

string unlex(string s) {
    for(int i = 0; i < s.length(); i++) {
        s[i] = 90-(s[i]-65);
    }
    return s;
}

int main()
{
    int t, n, i, x;
    t = scani();
    map<string, int> name,go,si,br;
    while(t--) {
        string s;
        cin>>s;
        go[s]++;
        name[s] = 1;
        cin>>s;
        si[s]++;
        name[s] = 1;
        cin>>s;
        br[s]++;
        name[s] = 1;
    }
    map<string,int>::iterator it;
    vector < pair < int, pair <int, pair <int , string> > > > v;
    for(it = name.begin(); it != name.end(); it++) {
        v.pb(mp(go[it->first],mp(si[it->first],mp(br[it->first],lex(it->first)))));
    }
    sort(v.rbegin(),v.rend());
    for(i = 0; i < v.size() ;i++) {
        cout<<unlex(v[i].second.second.second) << " "<<v[i].first<<" "<< v[i].second.first<<" "<<v[i].second.second.first<<endl;
    }
    return 0;
}
