import sys

M = 10 ** 9 + 7
MAX_T = 10000
MAX_N = 10**12
cache = {}


def calc(n):
  if n in cache:
    return cache[n]

  the_matrix = [3, 1, -1, 0]
  result = power(the_matrix, n)[1]
  
  cache[n] = result

  return result


def power(matrix, n):
  result = [1, 0, 0, 1]

  while (n != 0):
    if n % 2 != 0:
      result = multiply(result, matrix)
    n /= 2
    matrix = multiply(matrix, matrix)

  return result


def multiply(x, y):
  # http://stackoverflow.com/a/12235054/3104465
  # (A * B) % C == ((A % C) * (B % C)) % C

  a = ((x[0] % M * y[0] % M) % M + (x[1] % M * y[2] % M) % M) % M
  b = ((x[0] % M * y[1] % M) % M + (x[1] % M * y[3] % M) % M) % M
  c = ((x[2] % M * y[0] % M) % M + (x[3] % M * y[2] % M) % M) % M
  d = ((x[2] % M * y[1] % M) % M + (x[3] % M * y[3] % M) % M) % M

  return [a, b, c, d];


def retrieve_input():
  input_text = map(int, sys.stdin.readlines())
  num_tests = input_text[0]
  if num_tests < 1 or num_tests > MAX_T:
    raise ValueError("T is out of range. 1 <= T <= MAX_T does not hold.")

  input_nums = [x for x in input_text[1:num_tests+1] if x >= 1 and x <= MAX_N]
  if len(input_nums) != num_tests:
    raise ValueError("N is out of range. 1 <= N <= MAX_N does not hold.")

  return input_nums


def process(input_nums):
  results = []
  for i in input_nums:
    results.append(calc(i))
  return results


def print_results(results):
  for r in results:
    print r


print_results(process(retrieve_input()))