#include <iostream>
#include <algorithm>
using namespace std;

typedef long long ll;
#define MAX 1000000007
#define SIZE 1000005
#define inf 1e15

int findMin(ll A[], int n)
{
	int minI = 1;
	for(int i=2; i<=n; ++i)
	{
		if(A[minI] > A[i])
			minI = i;
	}
	
	return minI;
}

int main()
{
	ll a,b,c,n;
	ll prevA, A, prevB, B;
	
	cin >> a >> b >> c;
	cin >> n;
	
	ll v1 = ((b * c) % MAX + b + c ) % MAX;
	ll v2 = ((a * c)%MAX + a + c) % MAX;
	
	prevA = (a*c) % MAX;
	int min1I = 1;
	ll min1Val = prevA;
	for(int i=2 ; i<=n ; i++)
	{
	//	cout << prevA << " ";
		A = ((prevA*a)%MAX * v1 )%MAX;
		if(A < min1Val)
			min1I = i, min1Val = A;
		prevA = A;
	}
	
//	cout <<endl;
	prevB = (b*c)%MAX;
	int min2I = 1;
	ll min2Val = prevB;
	for(int i=2 ; i<=n ; i++)
	{
	//	cout << prevB << " ";
	    B = ((prevB*b)%MAX * v2)%MAX;
	    if(B < min2Val)
	    	min2I = i, min2Val = B;
	    prevB = B;
	}
	
//	cout << endl;
	prevA = (a*c) % MAX;
	bool flag = true;
	ll secMin1Val = inf;
	
	if(prevA != min1Val)
	{
		secMin1Val = prevA;
	}
	else
		flag = false;
	
	for(int i=2 ; i<=n ; i++)
	{
		A = ((prevA*a)%MAX * v1 )%MAX;
		if(A == min1Val && flag)
		{
			flag = false;
			continue;
		}
		if(A < secMin1Val)
			secMin1Val = A;
		prevA = A;
	}
	
	prevB = (b*c)%MAX;
	
	flag = true;
	ll secMin2Val = inf;
	
	if(prevB != min2Val)
	{
		secMin2Val = prevB;
	}
	else
		flag = false;
		
	for(int i=2 ; i<=n ; i++)
	{
		if(B == min2Val && flag)
		{
			flag = false;
			continue;
		}
			
	    B = ((prevB*b)%MAX * v2)%MAX;
	    if(B < secMin2Val)
	    	secMin2Val = B;
	    prevB = B;
	}
	
	if(min1I != min2I)
	{
		cout<<min1Val + min2Val<<endl;
	}
	else
	{
		cout << min(min1Val + secMin2Val, min2Val + secMin1Val)<<endl;
	}
	
    
    return 0;
}
