#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#define lli long long int
#define pb push_back
#define mod 1000000007
#define pii pair<int,int>

using namespace std;
int arr[20009];
int sum[20009];
int pizza[400009][6];
int cnt[20009][6];

int find(int b,int e,int i,int j)
{
    int x=b-i+1;
    int y=e-i+1;
    int toadd = 16*(cnt[y][0]-cnt[x-1][0]) + 9*(cnt[y][1]-cnt[x-1][1])+ 26*(cnt[y][2]-cnt[x-1][2]) + 26*(cnt[y][3]-cnt[x-1][3]) + (cnt[y][4]-cnt[x-1][4]);
    return toadd;
}


int main()
{
    int n,q,i,j,a,b,c,l,r,m,type;
    scanf("%d%d",&n,&q);
    cnt[0][0]=0;
    cnt[0][1]=0;
    cnt[0][2]=0;
    cnt[0][3]=0;
    cnt[0][4]=0;
    cnt[0][5]=0;
    for(i=1; i<=20000; i++)
    {
        cnt[i][0]=cnt[i-1][0];
        cnt[i][1]=cnt[i-1][1];
        cnt[i][2]=cnt[i-1][2];
        cnt[i][3]=cnt[i-1][3];
        cnt[i][4]=cnt[i-1][4];

        if(i%5==1)cnt[i][0]++;
        if(i%5==2)cnt[i][1]++;
        if(i%5==3)cnt[i][2]++;
        if(i%5==4)cnt[i][3]++;
        if(i%5==0)cnt[i][4]++;
    }
    sum[0]=0;
    for(i=1; i<=n; i++)
    {
        scanf("%d",&arr[i]);
        sum[i]=sum[i-1]+arr[i];
    }
    memset(pizza,0,sizeof(pizza));
     vector<pii> vec;
    while(q--)
    {
        scanf("%d%d%d",&type,&l,&r);
        if(type==1)
        {
            int ans=sum[r]-sum[l-1];
            int add= 0;

            for(i=0;i<vec.size();i++)
            {
                if(!(vec[i].first>r || vec[i].second < l)){
                    add+=find(max(l,vec[i].first),min(r,vec[i].second),vec[i].first,vec[i].second);
                }
            }
            ans+=add;
            int den=(r-l+1);
            printf("%d/%d\n",ans,den);

        }
        else
        {
            vec.pb(make_pair(l,r));
        }
    }

    return 0;
}

