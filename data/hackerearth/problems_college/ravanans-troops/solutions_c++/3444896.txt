#include <bits/stdc++.h>
using namespace std;
#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 0x3f3f3f3f
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%ld",&a)
#define sll(a) scanf("%lld",&a)

ll gcd(ll a, ll b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
ll hcf(ll a, ll b) {if(b>a) return (hcf(b, a)); if(a%b==0) return b; return (hcf(b, a%b));}
ll modpow(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll mulmod(ll a, ll b, ll m) {int64_t res = 0;while (a != 0){if(a & 1)res =(res+b)%m;a>>=1;b =(b<<1)%m;}return res;}

int ans2;
int ans[1000005];
int find_ans(int n)
{
    int ans1=INF;
    int i;
    if(ans[n]!=0)
    return ans[n];
if (sqrt(n)==floor(sqrt(n))||n==0)
    {
        ans1=ans[n]=1;
        return ans[n];
    }
    for(i=1;i<n;i++)
    {
        if((i*i)<=n)
        ans1=min(ans1,1+find_ans(n-(i*i)));
        else
        break;
    }
    ans[n]=ans1;
    return ans[n];
}
int main()
{

    int t,i,n;
    s(t);
    while(t--)
    {
        s(n);
        ans2=find_ans(n);
        printf("%d\n",ans2);;
    }
    return 0;
}
