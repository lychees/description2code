#include<bits/stdc++.h>
using namespace std;
void dfs(vector<int> v[], int i, int visited[], int x[], int j) {
    visited[i]=1;
    x[j]++;
    for(vector<int>::iterator it=v[i].begin();it!=v[i].end();it++) {
        if(visited[*it]==0) {
            dfs(v,*it,visited,x,1-j);
        }
    }
}
int main() {
    int t,n,a,b,maxi;
    vector<int> v[20004];
    cin>>t;
    for(int kj=1;kj<=t;kj++) {
        cin>>n;
        maxi=INT_MIN;
        for(int i=0;i<n;i++) {
            cin>>a>>b;
            v[a].push_back(b);
            v[b].push_back(a);
            maxi=max(maxi,max(a,b));
        }
        int visited[maxi+1];
        memset(visited,0,sizeof(visited));
        int x[2]={0,0};
        int sum=0;
        for(int i=1;i<=maxi;i++) {
            x[0]=0;
            x[1]=0;
            if(visited[i]==0 && v[i].size()!=0) {
                dfs(v,i,visited,x,0);
                sum+=max(x[0],x[1]);
            }
        }
        cout<<"Case "<<kj<<": "<<sum<<endl;
        for(int i=0;i<=maxi;i++)
            v[i].clear();
    }
}
