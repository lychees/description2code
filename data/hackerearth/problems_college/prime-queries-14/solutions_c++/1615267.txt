/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-9
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256
#define right adsgasgadsg
#define free adsgasdg
#define MAGIC 47
#define count adsgasdgasdg

using namespace std;

long pr[1<<20];
long t[1<<20],n,m,tp,a,b;
long ar[1<<20];

void build(long v,long tl,long tr)
{
 if (tl==tr)
 {
  if (pr[ar[tl]])t[v]=-1;
  else t[v]=ar[tl];
  return ;
 }
 long tm=tl+tr;
 tm/=2;
 build(v*2,tl,tm);
 build(v*2+1,tm+1,tr);
 t[v]=max(t[v*2],t[v*2+1]);
}

void update(long v,long tl,long tr,long a,long b)
{
 if (tl==tr)
 {
  ar[a]=b;
  if (pr[b])t[v]=-1;
  else t[v]=b;
  return;
 }
 long tm=tl+tr;
 tm/=2;
 if (a<=tm)
  update(v*2,tl,tm,a,b);
  else update(v*2+1,tm+1,tr,a,b);
 t[v]=max(t[v*2],t[v*2+1]);
}

long get(long v,long tl,long tr,long l,long r)
{
 if (l>r)return -1;
 if (tl==l&&tr==r)
  return t[v];
 long tm=tl+tr;
 tm/=2;
 return max(get(v*2,tl,tm,l,min(r,tm)),get(v*2+1,tm+1,tr,max(tm+1,l),r));
}

int main(){
//freopen("k.in","r",stdin);
//freopen("k.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

pr[1]=1;
for (int i=2;i<=1000000;i++)
 if (pr[i]==0)
  for (int j=i*2;j<=1000000;j+=i)
   pr[j]=1;

cin>>n>>m;
for (int i=1;i<=n;i++)
 cin>>ar[i];
 build(1,1,n);

for (int i=1;i<=m;i++)
{
 cin>>tp;
 if (tp==0)
 {
  cin>>a>>b;
  update(1,1,n,a,b);
  ar[a]=b;
 }
 else
 {
  cin>>a>>b;
  cout<<get(1,1,n,a,b)<<endl;
 }
}
cin.get();cin.get();
return 0;}
