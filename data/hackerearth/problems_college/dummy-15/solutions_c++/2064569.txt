#pragma comment(linker, "/STACK:66777216")
#include <cstdio>
#pragma warning(disable : 4996)
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <utility>
#include <functional>
#include <iostream>
#include <iomanip>
#include <ctime>
#include <cassert>
#include <queue>
#include <cmath>
#include <random>
#include <sstream>
#include <numeric>
#include <limits>
#pragma hdrstop

using namespace std;


const int INF = 0x3f3f3f3f;


void inputFiles();


//#define TASK "task"

int __;
const int MAXN = 1111111;

int n, d[MAXN], x, ans;

void solve(istream& in, ostream& out) {
	inputFiles();
	in >> __;
	for (int _ = 0; _ < __; ++_) {
		in >> n;
		fill_n(d, n + 1, numeric_limits<int>::max());
		d[0] = -INF;
		ans = 1;
		for (int i = 0; i < n; ++i) {
			in >> x;
			x -= i;
			if (x < 1) {
				continue;
			}
			int j = upper_bound(d, d + n, x) - d;
			if (d[j - 1] <= x && x < d[j]) {
				d[j] = x;
				ans = max(ans, j);
			}
		}
		out << n - ans << endl;
	}
}


inline void inputFiles() {
}
#include <fstream>


int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    istream& in = cin;

    ostream& out = cout;
    out << fixed << setprecision(16);
    solve(in, out);
    return 0;
}
