from __future__ import division

import itertools
import math
def fun(size,offset,segment):
	if segment==0:
		return "Earth"
	if offset==size:
		if segment%2==0:
			return "Earth"
		else:
			return "Hacker"
	diff=size-offset
	parts=2**offset
	group=(2**size)//parts
	if math.ceil(segment/group)%2:
		return "Hacker"
	else:
		return "Earth"



def get(number):
	i=1
	sum=0
	while True:
		sum=sum+2**i*i
		i+=1
		if sum>number:
			i=i-1
			return (sum-2**i*i,i)

table={k:[]for k in range(10000)}
numberOfTestCases=int(raw_input())
for i in range(0,numberOfTestCases):
	number=int(raw_input())
	index,size=get(number)
	segment=(number-index-1)//size+1
	offset=(number-index-1)%size+1
	print fun(size,offset,segment)
	'''print size
	if segment==0:
		print "Earth"
		continue
	if not table[size]:
		table[size]=map(''.join,itertools.product('45',repeat=size))
		print "generating"
	
	if table[size][segment-1][offset-1]=='4':
		print "Hacker"
	else:
		print "Earth"
	

	for string in itertools.imap(''.join,itertools.product('45',repeat=size)):
		if num==segment:
			if string[offset-1]=='4':
				print "Hacker"
			else:
				print "Earth"
	        num=num+1'''	
