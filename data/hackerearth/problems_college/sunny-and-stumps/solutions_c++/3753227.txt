#include<bits/stdc++.h>
#define ll long long
using namespace std;
ll divis(ll a,ll b)
{
    if(a==0)
        return b;
    else if(b==0)
        return a;
    else
        return divis(b,a%b);
}
int main()
{
    ll i,j,k,i1,j1,k1,n,t,temp,ans;
    cin>>t;
    while(t--)
    {
        ans=1;
        cin>>n;
        set<tuple<ll,ll,ll>>s;
        while(n--)
        {
            cin>>i>>j>>k;
            i1=abs(i);
            j1=abs(j);
            k1=abs(k);
            temp=divis(divis(i1,j1),k1);
            i=i/temp;
            j=j/temp;
            k=k/temp;
            if(temp==i1||temp==j1||temp==k1)
            {
                i=abs(i);
                j=abs(j);
                k=abs(k);
            }
            else if(i==0||j==0||k==0)
            {
                if(k==0)
                {
                    if(j<0)
                    {
                        i=-i;
                        j=-j;
                        k=-k;
                    }
                }
                else if(k<0)
                {
                    i=-i;
                    j=-j;
                    k=-k;
                }
            }
            else
            {
                if((i<0&&j<0)||(j<0&&k<0)||(k<0&&i<0))
                {
                    i=-i;
                    j=-j;
                    k=-k;
                }
            }
            //cout<<i<<" "<<j<<" "<<k<<endl;
            s.insert(make_tuple(i,j,k));
        }
        array<pair<ll,ll>,100000>v;
        n=0;
        for(auto pos=s.begin();pos!=s.end();++pos)
        {
            i=get<0>(*pos);
            j=get<1>(*pos);
            temp=divis(abs(i),abs(j));
            i=i/temp;
            j=j/temp;
            if(i==0||j==0)
            {
                i=abs(i);
                j=abs(j);
            }
            else if(j<0)
            {
                i=-i;
                j=-j;
            }
            v[n]=make_pair(i,j);
            n++;
        }
        sort(v.begin(),v.begin()+n);
        auto pose=v.begin();
        for(auto pos=pose+1;pos<v.begin()+n;++pos)
        {
            //cout<<pos->first<<" "<<pos->second<<endl;
            temp=1;
            while((pose->first==pos->first)&&(pose->second==pos->second)&&(pos!=v.end()))
            {
               temp++;
               pos++;
            }
            pose=pos;
            if(temp>ans)
                ans=temp;
        }
        cout<<ans<<endl;
    }
    return 0;
}
