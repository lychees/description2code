#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <utility>

using namespace std;

int main()
{
    int t; cin>>t;
    for(int it=1;it<=t;it++){
    	int n; cin>>n;
    	vector<int> arr(n+1);
    	for(int i=1;i<=n;i++)
    		cin>>arr[i];
    	unordered_map<int,bool> mmap;
    	vector< pair<int,int> > vac;
    	int sind=1,eind=2;
    	mmap[arr[1]]=true;
    	while(eind<=n){
    		if(mmap.find(arr[eind])!=mmap.end()){
    			//cout<<"boo1"<<endl;
    			if(mmap[arr[eind]]==false){
    				mmap[arr[eind]]=true;
    				eind++;
    			}
    			else{
    				vac.push_back(make_pair(eind-sind,sind));
    				while(mmap[arr[eind]]==true){
    					mmap[arr[sind]]=false;
    					sind++;
    				}
    				mmap[arr[eind]]=true;
    				eind++;
    			}
    		}
    		else{
    			//cout<<"boo2"<<endl;
    			mmap[arr[eind]]=true;
    			eind++;
    		}
    		
    	}
    	vac.push_back(make_pair(eind-sind,sind));
    	sort(vac.begin(),vac.end());
    	int len=vac[vac.size()-1].first;
    	int ind=vac.size()-1;
    	while(ind>=0 && vac[ind].first==len)
    		ind--;
    	ind++;
    	cout<<vac[ind].second<<" "<<vac[ind].second+vac[ind].first-1<<endl;
    	mmap.erase(mmap.begin(),mmap.end());
    }
    return 0;
}
