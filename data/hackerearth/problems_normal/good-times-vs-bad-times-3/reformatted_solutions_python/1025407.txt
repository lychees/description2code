import fractions


def factors(num):
    ans = set()
    for i in range(2, num+1):
        if num % i == 0:
            ans.add(i)
    return ans


sets = []
for i in range(0, 61):
    sets.append(factors(i))
ans = [0]*86400
hrs = 0
mins = 0
secs = 0
k = 0
while hrs != 24:
    while secs != 60:
        while mins != 60:
            count = 0
            if hrs == 0:
                count += 1
            if mins == 0:
                count += 1
            if secs == 0:
                count += 1
            s = 0
            if count == 0:
                s = len(
                    (sets[hrs].intersection(
                        sets[mins])).intersection(
                        sets[secs]))
            elif count == 1:
                if hrs == 0:
                    s = len(sets[secs].intersection(sets[mins]))
                if mins == 0:
                    s = len(sets[hrs].intersection(sets[secs]))
                if secs == 0:
                    s = len(sets[hrs].intersection(sets[mins]))
            else:
                s = 1
            if s != 0:
                ans[k] = 1
            k += 1
            mins += 1
        mins = 0
        secs += 1
    secs = 0
    hrs += 1
for k in range(86398, -1, -1):
    ans[k] = ans[k]+ans[k+1]
T = int(raw_input())
for t in range(0, T):
    hrs, mins, secs = (int(item) for item in raw_input().split())
    time = hrs*3600+mins*60+secs
    badSecs = ans[time]
    goodSecs = 86400-time-badSecs
    if goodSecs == 0 or badSecs == 0:
        print(str(badSecs)+":"+str(goodSecs))
    else:
        gcd = fractions.gcd(goodSecs, badSecs)
        print(str(badSecs/gcd)+":"+str(goodSecs/gcd))
