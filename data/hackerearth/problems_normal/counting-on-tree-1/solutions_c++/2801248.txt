#include <bits/stdc++.h>

#define maxn 50100
#define logn 23
#define inf 0x3F3F3F3F
#define linf 0x3F3F3F3F3F3F3F3FLL
#define eps 1e-9
#define pb push_back
#define mp make_pair
#define mod 1000000007LL

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<pii> vii;
typedef priority_queue<pii, vii, greater<pii> > pq;

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

int n;
vi g[maxn];
int v[maxn];
ll pd[maxn][111];
int pai[maxn];
int tam[maxn];

ll f(int no, int i, int k)
{
	if(k < 0) return 0;
	if(i == g[no].size())
		return (k == 0);
	int x = g[no][i];
	if(x == pai[no]) return f(no, i+1, k);
	ll &p = pd[x][k];
	if(p == -1)
	{
		p = f(no, i+1, k);
		for(int kk = v[x]; kk <= min(k, tam[x]); ++kk)
		{
			ll aux = f(no, i+1, k-kk)*f(x, 0, kk-v[x]);
			if(aux >= mod) aux %= mod;
			p = p+aux;
			if(p >= mod) p %= mod;
		}
	}
	return p;
}

void dfs(int x, int p)
{
	pai[x] = p;
	tam[x] = v[x];
	for(int i = 0; i < g[x].size(); ++i)
	{
		int y = g[x][i];
		if(y == p) continue;
		dfs(y, x);
		tam[x] += tam[y];
	}
}

int main()
{
	int t, x, y, k;
	scanf("%d", &t);
	while(t--)
	{
		scanf("%d %d", &n, &k);
		for(int i = 1; i <= n; ++i)
		{
			scanf("%d", &v[i]);
			g[i].clear();
			for(int j = 0; j <= k; ++j)
				pd[i][j] = -1;
		}
		for(int i = 0; i < n-1; ++i)
		{
			scanf("%d %d", &x, &y);
			g[x].pb(y);
			g[y].pb(x);
		}
		dfs(1, 1);
		ll ans = 0;
		for(int i = 1; i <= n; ++i)
		{
			ans += f(i, 0, k-v[i]);
			if(ans >= mod) ans %= mod;
		}
		printf("%lld\n", ans);
	}
	return 0;
}