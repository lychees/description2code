#include <bits/stdc++.h>
using namespace std;
#define mod 1000007

vector <int> visited(100005, 0);
list   <int> mylist [100005];

int counter;
int DFS(int val) {

   // cout << val << "\n";
    visited[val] = 1;
    counter++;
    int maxx = 0;

    list<int> :: iterator i;

    for (i = mylist[val].begin(); i != mylist[val].end(); ++i) {
        int dep = 0;
        if (!visited[*i]) {
            dep = 1 + DFS(*i);
        }


        if(dep > maxx) {
            maxx = dep;
        }
    }

    return maxx;
}

int main() {

    int m;
    cin >> m;

    int n;
    cin >> n;

    for(int i =  0; i < n; i++) {
        int a,b;
        cin >> a >> b;

        mylist[a].push_back(b);
        mylist[b].push_back(a);
    }

/*
    for(int i =  1; i <= n; i++) {
        cout << i << "  ";
        for(list <int> :: iterator it = mylist[i].begin(); it != mylist[i].end(); it++) {
            cout << *it << "  ";
        }
        cout << endl;
    }*/
    
    int no_of_cars = 0;
    long long int prod = 1;
    for(int i = 1; i <= m; i++) {
        if(!visited[i]) {
            no_of_cars++;
            counter = 0;
            DFS(i);
            prod = ((prod % mod)*(counter%mod))%mod;
        }
    }

    cout << no_of_cars << " " << prod << endl;


    /*int t;
    cin >> t;

    while(t--) {
    visited.clear();
     visited.resize(1000005, 0);
     counter = 0;
    int f;cin >> f;
    cout << DFS(f);
    cout <<"c  " <<  counter << endl;
    }*/
    return 0;

}
