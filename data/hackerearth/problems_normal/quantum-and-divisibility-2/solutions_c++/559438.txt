//============================================================================
// Name        : Header.cpp
// Author      : Yash
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include<string>
#include<cassert>
#include <stdint.h>
#include <math.h>
using namespace std;

#define LL_MAX 200000000000
#define MOD 1000000007
#define INF 1000000000
#define EPS 1e-14
#define PI 3.14159265358979

#define ll long long int
#define llu long long unsigned
#define ld long

#define mp make_pair
#define pb push_back
#define maX(a,b) ( (a) > (b) ? (a) : (b))
#define miN(a,b) ( (a) < (b) ? (a) : (b))
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))

typedef vector<vector<int> > vvi;
typedef vector <ll> vi;
typedef pair <ll, ll> pii;
typedef vector<bool> vb;
typedef vector<vector<bool> > vvb;
typedef vector<string> vs;

//int dx[] = {-1,0,1,0}, dy[] = {0,1,0,-1};
//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
ll gcd(ll a, ll b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
map <int64_t,int64_t> m[2];


bool cal(int64_t n,int64_t t,int64_t ind)
{

    while (n%2 == 0)
    {

        m[ind][2]+=t;
        n = n/2;

    }
    if(ind==1)
    {
        if(m[0][2]<m[1][2])
            return false;
    }

    for (int64_t i = 3; i <= sqrt(n); i = i+2)
    {

        while (n%i == 0)
        {

            m[ind][i]+=t;
            n = n/i;

        }
        if(ind==1)
        {
            if(m[0][i]<m[1][i])
                return false;
        }
    }

    if (n > 2)
    {
        m[ind][n]+=t;
        if(ind==1)
        {
            if(m[0][n]<m[1][n])
                return false;
        }

    }
    return true;
}

int main()
{
    int64_t t;
    cin>>t;
    while(t--)
    {
        m[0].clear();
        m[1].clear();
        int64_t a,b,c,d;
        cin>>a;
        cin>>b;
        cin>>c;
        cin>>d;
        if(d==0)
        {
            cout<<"Divisible"<<endl;
            continue;
        }
       cal(a,b,0);
       if(cal(c,d,1))
        cout<<"Divisible"<<endl;
       else
        cout<<"Not divisible"<<endl;
    }
    return 0;
}

