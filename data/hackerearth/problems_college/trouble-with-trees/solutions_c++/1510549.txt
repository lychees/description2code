#include<iostream>
using namespace std;
long long MOD = (long long)1e9+7 ;
unsigned long int catalanDP(unsigned int n)
{
    // Table to store results of subproblems
    unsigned long int catalan[n+1];
 
    // Initialize first two values in table
    catalan[0] = catalan[1] = 1;
 
    // Fill entries in catalan[] using recursive formula
    for (int i=2; i<=n; i++)
    {
        catalan[i] = 0;
        for (int j=0; j<i; j++)
         {
         	catalan[i] += (((catalan[j]%MOD) * (catalan[i-j-1]%MOD))%MOD);
         	catalan[i] %= MOD;
         }
    }
 
    // Return last entry
    return catalan[n]%MOD;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	int i; cin>>i;
        long long int ans = catalanDP(i);
        cout<<ans<<"\n";
    }
    return 0;
}