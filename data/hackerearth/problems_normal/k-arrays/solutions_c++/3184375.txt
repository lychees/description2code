#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int n,k;
int a[12][18];
vector<int> v;
ll max1,len1,max2,len2;
ll modInverse(ll x, ll m)
{
    ll m0 = m, t, q;
    ll x0 = 0, x1 = 1;

    

    while (x > 1)
    {

        q = x / m;

        t = m;


        m = x % m,x = t;

        t = x0;

        x0 = x1 - q * x0;

        x1 = t;
    }


    if (x1 < 0)
       x1 += m0;

    return x1;
}
void subset(int i)
{
if(i>=n)
{
 if(v.size()>0)
 {
	 ll sz=v.size();
	 ll prod=1;
	 for (ll var = 0; var < sz; ++var) {
		 ll s=0;
		for (int var1 = 0; var1 < k; ++var1) {
        s+=a[var1][v[var]];
        s%=1000000007;
		}
		prod*=s;
		prod%=1000000007;

	}


sz=modInverse(sz,1000000007);
sz%=1000000007;
prod=prod*sz;
prod%=1000000007;

if(prod>max1)
{
	max1=prod;
len1=v.size();
}
if(prod<max2)
{
	max2=prod;
len2=v.size();
}

 }
return;
}
else{
v.push_back(i);
subset(i+1);
v.pop_back();
subset(i+1);
}
}



int main()
 {
 int t;
 scanf("%d",&t);
 while(t--)
 {
scanf("%d%d",&n,&k);
for (int var = 0; var < k; ++var) {
	for (int var1 = 0; var1 < n; ++var1) {
		scanf("%d",&a[var][var1]);
	}

}
max1=-1;
max2=10000000010;
len1=0;
len2=0;
subset(0);
ll res1=max1^max2;
ll res2=len1^len2;
printf("%lld %lld\n",res1,res2);
v.clear();
 }

 return 0;
 }
