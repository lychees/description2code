#include <iostream>
#include <vector>
#include <math.h>
using namespace std;
int isPrime[5001];
vector <int> v;
int max(int a, int b)
{
	return a>b?a:b;
}
void prime()
{
	int i;
	isPrime[2] = 1;
	for( i = 3; i <= 5000; i = i + 2)
		isPrime[i] = 1;
	for( i = 3; i*i <= 5000 ; i++){
        if( isPrime[i] == 1){
            for (int j=i*2; j<=5000; j += i)
                isPrime[j] = 0;
        }
	}
    for (int p = 2; p <= 5000; p++)
       if (isPrime[p])
          v.push_back(p);
}
int main()
{
	int n,x,j, i;
	cin>>n;
	int A[n+1];
	int sum[n+1];
	prime();
	//long long int sum = 0;
	sum[0] = 0;
	for( i = 1; i <= n; i++){
		cin>> A[i];
		sum[i] = sum[i-1] + A[i];
	}
    
	long long int dp[5005] = {0};
    for (int i = 2; i <= n; i++) {
        dp[i]  = dp[i - 1];
        for (int j = 0; j < v.size() && v[j] <= i; j++) {
            int ind = i - 1 - v[j];
            if (ind == -1) {
                dp[i] = max(dp[i], sum[i]);
            } else {
                dp[i] = max(dp[i], dp[ind] + sum[i] - sum[ind + 1]);
            }
        }
    }
    cout << dp[n] << endl;
	
    return 0;

}

