#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define sz(a) int((a).size())
#define all(a)  a.begin(), a.end()
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;
#define present(c,x) ((c).find(x) != (c).end())
const double eps = 1e-8;
#define EQ(a,b) (fabs((a)-(b))<eps)
inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 2*1e5+10;
const ll inf = 1e18;

ll power(ll a,ll n){
	if(n==0){
		return 1;
	}
	ll b = power(a,n/2);
	b = b*b%mod;
	if(n%2) b= b*a%mod;
	return b;
}

ll A[N];

int main(){
	int n;ll h;
	scanf("%d %lld",&n,&h);
	REP(i,n){
		scanf("%lld",&A[i+1]);
		A[i+1]+=A[i];
	}
	ll ans=inf;
	REPP(i,1,n+1){
		long double a = 2*A[n]+(ll)n*(2*i+1), b = (ll)i*(i+1)+2*A[i]-2*h;
		int f=0;
		if(a*a-(1ll)*4*n*n*b<0)	f=1;
		long double r; 
		if(f==0)	r= -a + sqrt(a*a-(1ll)*4*n*n*b);
		
		r/=((1ll)*2*n*n);
		//printf("%Lf\n",r);
		ll bb = (ll)r;
		if(f==0)	for(ll j=bb-500;j<=bb+500;j++){
			if(j<0)	continue;
			ll d = h - (j*n+i)*(j*n+i+1)/2-j*A[n]-A[i];
		//	printf("%lld\n",d);
			if(d<=0)	ans = min(ans,j*n+i);
		}
		//printf("%lld %d\n",ans,i);
		for(ll j=0;j<=500;j++){
			if(j<0)	continue;
			ll d = h - (j*n+i)*(j*n+i+1)/2-j*A[n]-A[i];
			if(d<=0)	ans = min(ans,j*n+i);
		}
		//printf("%lld %d\n",ans,i);
	}
	printf("%lld\n",ans);
  	return 0;
}
