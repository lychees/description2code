#include<bits/stdc++.h>
using namespace std;
#define mod 1000000009
string s1,s2;
long long dpt[305][305],dpf[305][305];
long long recf(int l,int r);
long long rect(int l,int r)
{
    if(l==r)
    {
        if(s1[l]=='1')
            return (dpt[l][r]=1);
        return (dpt[l][r]=0);
    }
    if(dpt[l][r]!=-1)
        return dpt[l][r];
    dpt[l][r]=0;
    for(int i=l;i<r;i++)
    {
        if(s2[i]=='a')
        dpt[l][r]=(dpt[l][r]+(dpt[l][i]=rect(l,i))*(dpt[i+1][r]=rect(i+1,r)))%mod;
        if(s2[i]=='x')
        dpt[l][r]=(dpt[l][r]+((dpf[l][i]=recf(l,i))*(dpt[i+1][r]=rect(i+1,r))+(dpt[l][i]=rect(l,i))*(dpf[i+1][r]=recf(i+1,r)))%mod)%mod;
        if(s2[i]=='o')
        dpt[l][r]=(dpt[l][r]+((dpf[l][i]=recf(l,i))*(dpt[i+1][r]=rect(i+1,r))+(dpt[l][i]=rect(l,i))*(dpf[i+1][r]=recf(i+1,r))+(dpt[l][i]=rect(l,i))*(dpt[i+1][r]=rect(i+1,r)))%mod)%mod;
    }
    return dpt[l][r];
}
long long recf(int l,int r)
{
    if(l==r)
    {
        if(s1[l]=='1')
            return (dpf[l][r]=0);
        return (dpf[l][r]=1);
    }
    if(dpf[l][r]!=-1)
        return dpf[l][r];
    dpf[l][r]=0;
    for(int i=l;i<r;i++)
    {
        if(s2[i]=='o')
        dpf[l][r]=(dpf[l][r]+(dpf[l][i]=recf(l,i))*(dpf[i+1][r]=recf(i+1,r)))%mod;
        if(s2[i]=='x')
        dpf[l][r]=(dpf[l][r]+((dpf[l][i]=recf(l,i))*(dpf[i+1][r]=recf(i+1,r))+(dpt[l][i]=rect(l,i))*(dpt[i+1][r]=rect(i+1,r)))%mod)%mod;
        if(s2[i]=='a')
        dpf[l][r]=(dpf[l][r]+((dpf[l][i]=recf(l,i))*(dpt[i+1][r]=rect(i+1,r))+(dpt[l][i]=rect(l,i))*(dpf[i+1][r]=recf(i+1,r))+(dpf[l][i]=recf(l,i))*(dpf[i+1][r]=recf(i+1,r)))%mod)%mod;
    }
    return dpf[l][r];
}
int main()
{
    int q,i,j,k,l,m,n,o,p,t;
    cin>>s1>>s2;
    memset(dpt,-1,sizeof(dpt));memset(dpf,-1,sizeof(dpf));
   // ios::sync_with_stdio(0);
    
    rect(0,s1.size()-1);
    recf(0,s1.size()-1);
    cin>>q;
    while(q--)
    {
        cin>>l>>m>>s1;
        //cout<<dpt[0][0]<<endl;
        if(s1[0]=='f')
            cout<<dpf[l-1][m-1]<<endl;
        else
            cout<<dpt[l-1][m-1]<<endl;
    }
}
