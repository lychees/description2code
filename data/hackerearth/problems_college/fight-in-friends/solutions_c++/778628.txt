#include <bits/stdc++.h>
#define NMAX 1111
#define inf 111111
#define x first
#define y second
using namespace std;
typedef pair<int,int> pii;
int N,M,st,en;
vector<int> adj[NMAX];
int visited[NMAX],cost[NMAX];
int matrix[NMAX][NMAX];

int solve(){
	memset(visited,0,sizeof(visited));
	for(int i=1;i<=N;++i) cost[i]=inf;
	set<pii> q;
	q.insert(pii(0,st));
	while(!q.empty()){
		pii tmp=*q.begin();
		int u=tmp.y; int c=tmp.x;
		q.erase(q.begin());
		if(u==en) return c;
		if(!visited[u]){
			for(int i=0;i<adj[u].size();++i){
				int v=adj[u][i];
				if(!visited[v] && cost[v]>c+1){
					cost[v]=c+1;
					q.insert(pii(c+1,v));
				}
			}
		}
	}
	return inf;

}

int main(){
	memset(matrix,0,sizeof(matrix));
	scanf("%d %d %d %d",&N,&M,&st,&en);
	for(int i=0;i<M;++i){
		int u,v;
		scanf("%d %d",&u,&v);
		matrix[u][v]=matrix[v][u]=1;
	}

	for(int i=1;i<=N;++i){
		for(int j=1;j<=N;++j)
			if(!matrix[i][j])
				adj[i].push_back(j);
	}

	int res=solve();
	if(res==inf) printf("-1\n");
	else printf("%d\n",res);

	return 0;
}
