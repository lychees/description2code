from fractions import *

tot = 86400
vals = [0]*tot


def flat(x,y,z):
	return ((60*60)*x) + (60*y) + z

def chk(x,y,z):
	if gcd(gcd(x,y),z) != 1:
		return 1
	return 0

def process():
	global tot
	global vals
	
	for x in xrange(24):
		for y in xrange(60):
			for z in xrange(60):
				vals[flat(x,y,z)] = chk(x,y,z)
				#if vals[flat(x,y,z)] == 1:
				#	print x,y,z
				
	for k in xrange(tot-2,-1,-1):
		vals[k] += vals[k+1]
		
def solve():
	global tot
	global vals
	nums = [int(x) for x in raw_input().split()]
	
	idx = flat(nums[0],nums[1],nums[2])
	
	bad_nums = vals[idx]
	good_nums = tot - bad_nums - idx
	
	if bad_nums != 0:
		div = gcd(bad_nums,good_nums)
	
		bad_nums /= div
		good_nums /= div
	
	print "%d:%d"%(bad_nums,good_nums)
	
	

	
def main():
	t = int(raw_input())
	process()
	for _ in xrange(t):
		solve()
		
main()
#process()
