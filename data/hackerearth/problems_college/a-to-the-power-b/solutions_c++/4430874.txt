#include<bits/stdc++.h>
#define LL long long int
#define M 1000000000
#define reset(a) memset(a,0,sizeof(a))
#define rep(i,j,k) for(i=j;i<=k;++i)
#define per(i,j,k) for(i=j;i>=k;--i)
#define print(a,start,end) for(i=start;i<=end;++i) cout<<a[i];
#define endl "\n"
using namespace std;
LL pow(LL a, LL b,LL m)
	{
		LL x=1,y=a;
		while(b > 0)
			{
				if(b%2 == 1)
					{
						x=(x*y);
						if(x>m) x%=m;
					}
						y = (y*y);
						if(y>m) y%=m;
						b /= 2;
				}
		return x%m;
	}
int Phi(int n)
{    
    int result = n;   
    for (int p=2; p*p<=n; ++p)
    {
        if (n % p == 0)
        {
            while (n % p == 0)
                n /= p;
            result -= result / p;
        }
    }

    if (n > 1)
        result -= result / n;
    return result;
}
LL a[1000001];
LL gcd(LL a,LL b)
	{
		if(b==0)
			return a;
		else
			return gcd(b,a%b);
	}
int main()
    {
        ios_base::sync_with_stdio(0);
    	LL n,x,m,i,temp=1,ans;
		cin>>n>>x>>m;
		LL phi = Phi(m);//totient value
		if(x>=m)
			x%=m;
		rep(i,1,n)//power will be reduced with respect to phi as modulo value and answer as Mod M
			{
				cin>>a[i];
				if(a[i]>=phi)
					a[i]%=phi;
				temp = temp*a[i];
				if(temp>=phi)
					temp = temp%phi;
			}
		ans = pow(x,temp,m);
		cout<<ans;
	}