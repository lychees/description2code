#include <iostream>

using namespace std;

const int N = 2000010;
const long long mod = 1000000007ll;

long long fac[N], inv_fac[N];
long long inv[N];

int main()
{
	ios::sync_with_stdio(false);
	
	inv[1] = 1ll;
	for(int i = 2;i < N;i++) {
		/*
		p%i = p - [p/i]i == -[p/i]i
		i == -(p%i) / [p/i]
		*/
		inv[i] = (-(mod / i) * inv[mod%i]) % mod; 	
		inv[i] = (inv[i] + mod) % mod;
	}
	fac[0] = inv_fac[0] = 1ll;
	for(int i = 1;i < N;i++) {
		fac[i] = (fac[i-1] * i) % mod;
		inv_fac[i] = (inv_fac[i-1] * inv[i]) % mod;
	}
	int t;
	cin >> t;
	while(t--) {
		int r, c;
		cin >> r >> c;
		long long ans = fac[r+c-2];
		ans = (ans * inv_fac[r-1]) % mod;
		ans = (ans * inv_fac[c-1]) % mod;
		cout << ans << endl;
	}
    return 0;
}
