#include <iostream>
using namespace std;
long long gcd(long long a, long long b){
	long long c;
	while (a){
		c = a,a=b%a,b=c;
	}
	return b;
}
long long modexp(long long a, long long b,long long MOD){
	long long res = 1;
	while(b){
		if (b&1){
			res *= a;
			res %= MOD;
		}
		a = (a*a);
		a %= MOD;
		b /= 2;
	}
	return res;
}
long long mul_inv(long long a, long long b){
	long long b0 = b,t,q;
	long long x0 = 0,x1 = 1;
	if (b==1) return 1;
	while (a>1){
		q = a/b;
		t = b,b = a%b,a = t;
		t = x0,x0 = x1-q*x0,x1 = t;
	}
	if (x1<0) x1 += b0;
	return x1;
}
int main()
{
    int t;
    long long U,D,H;
    cin>>t;
    while(t--){
    	cin>>H>>U>>D;
   // 	long long r1 = H/U;
    	long long g = gcd(D,U);
  //  	long long r2 = (H+D*(U/g-1))/U;
    //	cout << r1 << " " << r2 << endl;
/*    	if (r2-r1<1){
    		puts("-1");
    		continue;
    	}*/
    	if (g>1 && H%g){
    		puts("-1");
    		continue;
    	}
    	long long ans;
    	if (H%U==0) {
    		printf("%lld\n",H/U);
    	}
    	else{
    		long long r = (U-H%U)/g;
    		long long d = D/g;
    		long long u = U/g;
    		long long invd = mul_inv(d,u);
    		ans = (invd*r)%u;
    	//	cout << r << " " << d << " " << u << endl;
    //		cout <<invd << ", " << ans << ", ";
    		ans = (H+(D+U)*ans)/U;
    		printf("%lld\n",ans);
    	}
    }
    return 0;
}
