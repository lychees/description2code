#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>

using namespace std;
 

int max (int x, int y) { 
	return (x > y)? x : y; 
}
 
int lps(const char *str)
{
   int n = strlen(str);
   int i, j, cl;
   int L[n][n];
 
   for (i = 0; i < n; i++)
      L[i][i] = 1;
 
    for (cl=2; cl<=n; cl++)
    {
        for (i=0; i<n-cl+1; i++)
        {
            j = i+cl-1;
            if (str[i] == str[j] && cl == 2)
               L[i][j] = 2;
            else if (str[i] == str[j])
               L[i][j] = L[i+1][j-1] + 2;
            else
               L[i][j] = max(L[i][j-1], L[i+1][j]);
        }
    }
 
    return L[0][n-1];
}

int main()
{
    int t;
    scanf("%d", &t);
    while(t--) {
    	int maxl = 1;
       	string s;
       	cin >> s;
       	int len = s.length();
       	for(int l = 2; l <= len; l++) {
       		string toBeReversed = s.substr(len - l);
       		reverse(toBeReversed.begin(), toBeReversed.end());
       		string arg = (s.substr(0, len - l) + toBeReversed);
       		maxl = max(maxl, lps(arg.c_str()));
       	}
       	printf("%d\n", maxl);
    }
    return 0;
}