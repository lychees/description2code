#include<bits/stdc++.h>
using namespace std;
#define  si(x) scanf("%d",&x)
#define N 1100000
int v[N],in[N],d[N],to[N],seenAt[N];
int flag=0,till=-1;
int dfs(int curr,int depth)
{
	if(d[curr]!=-1)return d[curr]+1;
	if(v[curr])
	{
		till=curr;
		flag=1;
		return depth-seenAt[curr];
	}
	v[curr]=1;
	seenAt[curr]=depth;
	d[curr]=dfs(to[curr],depth+1);
	if(curr==till)flag=0,till=-1;
	return d[curr]+(flag==0);

}
int main()
{
	int t;
	si(t);
	while(t--)
	{
		int n;
		si(n);
		for(int i=0;i<n;++i)
			si(to[i]);
		memset(v,0,sizeof v);
		memset(in,0,sizeof in);
		memset(d,-1,sizeof d);
		for(int i=0;i<n;++i)
			in[to[i]]++;
		for(int i=0;i<n;++i)
			if(in[i]==0 && v[i]==0)dfs(i,0);
		for(int i=0;i<n;++i)
			if(v[i]==0)dfs(i,0);
		int maxi=-1;
		for(int i=0;i<n;++i)
			maxi=max(maxi,d[i]);
		for(int i=0;i<n;++i)
			if(maxi==d[i])
			{
				printf("%d\n",i);
				break;
			}
	}
	return 0;
}
