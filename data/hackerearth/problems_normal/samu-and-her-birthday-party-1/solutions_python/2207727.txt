#[R][C]
#step1:Input of Number of test cases
#step2:Input of each test cases
#step3:Assignment of each test cases in an array
#step4:Repet step 4 until all friends has one dish


def powerOfTwo(strn,n):
 num=0
 strn=list(strn)
 for i in range(0,n):
  if int(strn[n-1-i])== 1:
   num+=pow(2,i)

 return num



def main():
#step1:Input of test cases
 testCase = input()
#step2:Input of each test cases
 for i in range(0,testCase):
  NK=raw_input()
  NK=NK.split()
  N=int(NK[0])
  K=int(NK[1])
  friends=[0 for x in range(0,N)] #column = K row = N

#step3:Assignment each test cases in an array
  for j in range(0,N): # NK[0]=N, no of lines will be there
   f=raw_input()
   fr=powerOfTwo(f,K)
   friends[j]=fr

#step4:Repet step 4 until all friends has one dish 
  dish=list()
  for k in range(1,pow(2,K)):
   de=1
   for l in range(0,N):
    if (friends[l] & k) ==0:
     de=0
     break


   if de==1:
    x=list(bin(k)[2:])
    x=map(int,x)
    x=sum(x)
    dish.append(x)

  print min(dish) 
  
if __name__ == "__main__":
 main()