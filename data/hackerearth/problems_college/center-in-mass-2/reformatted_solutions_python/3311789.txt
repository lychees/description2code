import math


def cross(a, b):
    c = [float(a[1])*float(b[2]) - float(a[2])*float(b[1]),
         float(a[2])*float(b[0]) - float(a[0])*float(b[2]),
         float(a[0])*float(b[1]) - float(a[1])*float(b[0])]
    return c


def modulo(a):
    b = float(a[0])*float(a[0])+float(a[1])*float(a[1])+float(a[2])*float(a[2])
    b = math.sqrt(b)
    return b


t = int(raw_input())
for i in range(0, t):
    n = int(raw_input())
    x = 0
    y = 0
    z = 0
    vx = 0
    vy = 0
    vz = 0
    for j in range(0, n):
        q = raw_input()
        q = q.split()
        x = x+float(q[0])
        y = y+float(q[1])
        z = z+float(q[2])
        vx = vx+float(q[3])
        vy = vy+float(q[4])
        vz = vz+float(q[5])
    x = x/n
    y = y/n
    z = z/n
    vx = vx/n
    vy = vy/n
    vz = vz/n
    zn = []
    zn.append(x)
    zn.append(y)
    zn.append(z)
    vn = []
    vn.append(vx)
    vn.append(vy)
    vn.append(vz)
    c = cross(zn, vn)
    c = modulo(c)
    vn = modulo(vn)

    dist = c/float(vn)

    distfromorigin = modulo(zn)
    pointdist = math.sqrt((distfromorigin*distfromorigin)-(dist*dist))
    finaltime = pointdist/float(vn)
    dist = format(dist, '.8f')
    finaltime = format(finaltime, '.8f')
    print "Case #"+str(i+1)+": "+str(dist)+" "+str(finaltime)
