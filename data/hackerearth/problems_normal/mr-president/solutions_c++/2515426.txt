#include <bits/stdc++.h>
using namespace std;
int p1[1000009];
int f(int a){
if(p1[a]==a) return a;
return p1[a]=f(p1[a]);
}
int u1(int a,int b){
int x=f(a);
int y=f(b);
if(x==y)
return false;
p1[x]=y;
return true;
}
vector<pair<int,pair<int,int> > > edges;
vector<int> impedges;
int main(){
int n,m; 
long long k;
cin>>n>>m>>k;
int a,b,c;
int numof=n;
for(int i=0 ;i<=n ; i++)
p1[i]=i;
int x,y,we;
for(int i=1 ; i<=m ; i++){
scanf("%d %d %d",&x,&y,&we);
edges.push_back(make_pair(we,make_pair(x,y)));
}
sort(edges.begin(),edges.end());
long long weight=0;
for(int i=0 ; i<m ; i++){
if(u1(edges[i].second.first,edges[i].second.second)) {
impedges.push_back(edges[i].first);
weight=weight+edges[i].first;
numof--;
}
}
sort(impedges.rbegin(),impedges.rend());
int ans=0;
for(int i=0 ; i<impedges.size() ; i++){
if(weight<=k) break;
weight=weight-impedges[i]+1;
ans++;
}
if(numof==1 && weight<=k)
cout<<ans;
else
cout<<"-1";
return 0;
}




