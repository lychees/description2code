#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#define M 1000000007

using namespace std;

vector <int> v[100005];
long long dp[100005];

void dfs(int curr, int prev)
{
     dp[curr] = 1;
     for ( int i = 0; i < (int)(v[curr].size()); i++ ) {
         if ( v[curr][i] == prev ) continue;
         dfs(v[curr][i],curr);
         dp[curr] = (dp[curr]*((dp[v[curr][i]]+1)%M))%M;
         dp[curr] %= M;
     }
}

int main()
{
    int n,x,y;
    cin >> n;
    for ( int i = 0; i < n-1; i++ ) {
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    dfs(0,-1);
    long long ans = 0;
    for ( int i = 0; i <= n-1; i++ ) ans = (ans+dp[i])%M;
    ans = (ans+1)%M;
    cout << ans << endl;
    return 0;
}
