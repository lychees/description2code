#include <stdio.h>
#include <vector>
#include <algorithm>

using namespace std;

class Painter
{
public:
	Painter(int a, float b, int c, int d)
	{
		availtime = a;
		costratio = b;
		speed = c;
		cost = d;
	}
	int availtime;
	float costratio;
	int speed;
	int cost;
};

bool operator< (const Painter &one, const Painter &two)
{
	if(one.availtime==two.availtime)
	{
		if(one.speed==two.speed)
			return one.cost<two.cost;
		return one.speed>two.speed;
	}
	return one.availtime<two.availtime;
}

int main()
{
    int n, t, x, y;
    long long d;
    scanf("%d %lld", &n, &d);
    int i=0;
    vector<Painter> p_vec;
    while(i<n)
    {
    	scanf("%d %d %d", &t, &x, &y);
    	p_vec.push_back(*(new Painter(t, (float)y/(float)x, y, x)));
    	i++;
    }
    sort(p_vec.begin(), p_vec.end());
    int time=p_vec[0].availtime;
	long long cost=p_vec[0].cost;
	int speed=p_vec[0].speed;
	long long area=0;
    for(i = 1; i<n; i++)
    {
    	if(p_vec[i].availtime==time)
    		continue;
    	if(p_vec[i].speed > speed)
    	{
    		area+=(long long)(speed*(p_vec[i].availtime-time));
			if(area>=d)
				break;
			time=p_vec[i].availtime;
			cost+=(long long)p_vec[i].cost;
			speed=p_vec[i].speed;
    	}
    }
    printf("%lld", cost);
    return 0;
}
