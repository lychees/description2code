//MD SHAKIM-MNNIT ALLAHABAD
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <cctype>
#include <utility>
#include <map>
#include <string>
#include <climits>
#include <set>
#include <string>
#include <sstream>
#include <ctime>
using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
#define IT iterator
#define getcx getchar
#define SIZE(A) ((int)A.size())
#define pb push_back
#define ALL(c) c.begin(), c.end()
#define INF (int(1e9))
#define INFL (LL(1e18))
#define F(i, a, n) for(int i = a; i <= n; i++)
#define R(i, a, n) for(int i = a; i >= n; i--)
#define loop(n) F(i, 0, n-1)
#define loop1(n) F(i, 1, n)
#define TR(c,i) for(VI::iterator i = (c).begin(); i != (c).end(); i++)
#define pii pair< int,int >
#define piii pair< pii , int >
#define temp 0
#define wait 1
#define perm 2
struct comp
{
    bool operator()(const pii &a,const pii &b)
    {
        return a.second>b.second;
    }
};
struct myclass {
  bool operator() (const pii &a,const pii &b)
  {
        return a.first>b.first;
  }
} myobject;
#define in2(n,m) scanf("%d %d",&n,&m);
#define in3(x,y,z) scanf("%d %d %d",&x,&y,&z);
#define mod 1000000007
inline void in(int &n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}
int main()
{
    int t,n,p,q,i;
    vector<int> x,y;
    LL ans,curr,z;
    in(t);
    while(t--)
    {
        x.clear();
        y.clear();
        in(n);
        for(i=1; i<=n; i++)
        {
            in(p);
            x.push_back(p);
        }
        for(i=1; i<=n; i++)
        {
            in(p);
            y.push_back(p);
        }
        int dx,dy;
        in(dx);
        in(dy);
        in(p);
        in(q);
        ans=(abs(dx)+abs(dy));
        ans=ans*p;
        //printf("ans is %lld\n",ans);
        for(i=0; i<n; i++)
        {
            curr=abs(dx-x[i])+abs(dy-y[i]);
            curr*=q;

            z=abs(x[i])+abs(y[i]);
            z=z*p;

            ans=min(ans,z+curr);
        }
        printf("%lld\n",ans);
    }
    return 0;
}
