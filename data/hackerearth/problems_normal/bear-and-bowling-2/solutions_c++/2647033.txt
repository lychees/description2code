#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
const int MOD=1000000007;
// int n; cin>>n;
//     vpii a(n);
//     rep(i,n){
//         int x;
//         cin>>x;
//
//     }
int main() {
    int n;
    cin>>n;
    vpii a;
    rep ( i,n ) {
        int x;
        cin>>x;
        a.push_back ( mp ( -x,i ) );

    }
    sort ( all ( a ) );
    vi res;
    int c=0;
    int cur=a[c].first;
    int mi=INF;
    int ma=-INF;
    vi ind;
    while ( c<n && a[c].first==cur ) {
        ind.push_back ( a[c].second );
        c++;
//         cout<<ind.back() <<endl;
    }
    int last=-2;
    int cnt=1;
    int bcount=0;
    for ( int j: ind ) {
        if ( last+1==j ) cnt++;
        else {
            bcount=max ( cnt,bcount );
            cnt=1;
        }
        last=j;
    }
    bcount=max ( bcount,cnt );
    rep ( i,bcount ) {
        res.push_back ( 1 );
    }
    reu ( i,bcount,ind.size() ) res.push_back ( 0 );
    for ( int i:ind ) {
        mi=min ( i,mi );
        ma=max ( i,ma );
    }
//      cout<<res;
    while ( c<n ) {
        int cur=a[c].first;
//         cout<<"working on "<<cur<<endl;
        vi sm,bi;
        int nmi=mi,nma=ma;
        while ( c<n && a[c].first==cur ) {
            int ind=a[c].second;
            if ( ind<mi ) sm.push_back ( ind );
            else if ( ind>ma ) bi.push_back ( ind );
            else {
                
                res.push_back ( res.size()==ma-mi );
//                 cout<<"filled w"<<a[c].first<<endl;
//                 cout<<res;
            }
            nmi=min ( ind,nmi );
            nma=max ( ind,nma );
            c++;
           
        }
//         cout<<"control: "<<ma<<" "<<mi<<" "<<res.size()<<endl;
        if ( ma-mi+1>res.size() ) {
            rep ( i,sm.size() +bi.size() ) res.push_back ( 0 );

        } else {
            int cnted=0;
            rep ( i,bi.size() ) {
                if ( ma+1==bi[i] ) {

                    res.push_back ( 1 );
                    ma++;
                } else cnted++;

            }
            for ( int i=sm.size()-1; i>=0; i-- ) {
                if ( mi-1==sm[i] ) {
                    res.push_back ( 1 );
                    mi--;
                } else cnted++;

            }
            rep ( i,cnted ) res.push_back ( 0 );
            
        }


//  cout<<res;
        ma=nma;
        mi=nmi;

    }


    for ( int r: res ) cout<<r;
    cout<<endl;
}
