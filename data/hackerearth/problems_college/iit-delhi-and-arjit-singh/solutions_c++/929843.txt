// O(n) phi sieve
#include<bits/stdc++.h>
#define ll long long int
#define MAXN 10000000
using namespace std;
int phi[MAXN + 1], prime[MAXN/10], sz;
bitset <MAXN + 1> mark;
int main(){
ll t;
for (ll i = 2; i <= MAXN; i++ ){
	if(!mark[i]){
		phi[i] = i-1;
		prime[sz++]= i;
	}
	for (int j=0; j<sz && prime[j]*i <= MAXN; j++ ){
		mark[prime[j]*i]=1;
		if(i%prime[j]==0){
			phi[i*prime[j]] = phi[i]*prime[j];
			break;
		}
		else phi[i*prime[j]] = phi[i]*(prime[j]-1 );
	}
}
    scanf("%lld",&t);
    while(t--){
        ll n,m,i,j,count=0;
        scanf("%lld %lld",&n,&m);
        n=n/m;
        if(n==1)
            printf("1\n");
            else if (n==0)
                printf("0\n");
        else{
            for(i=1;i<=n;i++){
         count+=phi[i];
        }
        if (count!=0) printf("%lld\n",count+1);
            else printf("0\n");
            }
    }
    return 0;
}
