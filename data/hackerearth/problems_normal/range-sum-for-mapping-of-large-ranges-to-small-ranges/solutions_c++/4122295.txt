#include <iostream>
#include <stack>
#include <vector>
#include <queue>
#include <stdio.h>
#include <map>

using namespace std;

int main()
{
    int t;

    cin >> t;

    while(t--)
    {
        long int n, k, x, y, node;

        cin >> n >> k;

        vector <long int> graph[n+1];

        while(k--)
        {
            cin >> x >> y;

            graph[x].push_back(y);

            graph[y].push_back(x);
        }

        bool visited[n+1];

        for(long int i=0;i<=n;i++)
        {
            visited[i]=false;
        }

        long long int ans=1, chain;

        for(long int i=1;i<=n;i++)
        {
            if(!visited[i])
            {
                chain=0;

                queue <long int> que;

                que.push(i);

                while(!que.empty())
                {
                    node=que.front();

                    que.pop();

                    if(!visited[node])
                    {
                        visited[node]=true;

                        chain++;

                        for(long int j=0;j<graph[node].size();j++)
                        {
                            if(!visited[graph[node][j]])
                            {
                                que.push(graph[node][j]);
                            }
                        }
                    }
                }

                if(chain>1)
                {
                    ans*=(long long int)chain;

                    ans*=(long long int)(chain-1);

                    ans/=(long long int)2;

                    ans%=(long long int)1000000007;
                }
            }
        }

        cout << ans << endl;
    }

    return 0;
}
