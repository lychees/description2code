#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define ll long long int
#define II pair<int,int>
#define faster std::ios::sync_with_stdio(false);cin.tie(NULL)
int dp[105][10005];
int n,p;
int x[105],y[105],indx;
int final_X[105],final_Y[105];
void knapsack(){
	for(int i=0;i<=n;i++){
		for(int j=0;j<=p;j++){
			if(i==0 || j==0){
				dp[i][j]=0;
			}
			else{
				if(y[i-1]<=j){
					dp[i][j]=max(dp[i-1][j],dp[i-1][j-y[i-1]]+x[i-1]);	
				}
				else{
					dp[i][j]=dp[i-1][j];
				}
			}
		}
	}
}
/*void traceSolution(int n,int Y){
	if(n<=0)
		return;
	if(dp[n][Y]==dp[n-1][Y]){
		traceSolution(n-1,Y);
	}	
	else{
		if(Y-y[n-1]>=0){
			final_X[indx]=x[n-1];
			final_Y[indx]=y[n-1];
			indx++;
			Y-=y[n-1];
			traceSolution(n-1,Y);
		}
	}
}*/
int main(){
	int t;
	cin>>t;
	while(t--){
		for(int i=0;i<105;i++){
			for(int j=0;j<10005;j++){
				dp[i][j]=0;
			}
		}
		indx=0;
		cin>>n>>p;
		for(int i=0;i<n;i++){
			cin>>x[i]>>y[i];
		}
		knapsack();
		int minValue=0;
		for(int i=0;i<=p;i++){
			if(dp[n][minValue]-minValue<dp[n][i]-i)
				minValue=i;
		}
		cout<<minValue<<" "<<p+dp[n][minValue]-minValue<<"\n";
	}
	return 0;
}