#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long l;
typedef unsigned long long ull;
typedef pair<ll,ll> pii;
typedef pair<ll,pair<ll,ll> > tii;
typedef vector<pair<ll,ll> > vec_pii;
typedef vector<vector<ll> > vec_vec;
#define mp make_pair
#define setbits(n) __builtin_popcount((n))
#define pb push_back
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define min3(a,b,c) (min((c),min((a),(b))))
#define max3(a,b,c) (max((a),max((b),(c))))
#define newline "\n"
bool iskimaaki(pii a, pii b)
{
    if(a.first<b.first)
        return true;
    else if(a.first==b.first and a.second<b.second)
        return true;
    else
        return false;
}
int main()
{
    ll test;
    cin>>test;
    while(test--)
    {
        ll n,k;
        cin>>n>>k;
        pii temp[n]; 
        vec_pii arr;
        for(ll i=0;i<n;++i)
            cin>>temp[i].first>>temp[i].second;
        sort(temp,temp+n,iskimaaki);
        arr.pb(temp[0]);
        for(ll i=1;i<n;++i)
        {
            // cout<<temp[i].first<<" "<<temp[i].second<<endl;
            if(temp[i].first<=arr.back().second and temp[i].first>=arr.back().first)
                arr.back().second = max(temp[i].second,arr.back().second);
            else
                arr.pb(temp[i]);
        }
        // for(ll i=0;i<arr.size();++i)
        //     cout<<arr[i].first<<" "<<arr[i].second;
        // cout<<endl;
        n = arr.size();
        ll total[n];
        total[0] = arr[0].second-arr[0].first+1;
        for(ll i=1;i<n;++i)
            total[i] = total[i-1] + (arr[i].second-arr[i].first+1);
        while(k--)
        {
            ll q;
            cin>>q;
            if(q>total[n-1])
            {
                cout<<-1<<endl;
                continue;
            }
            ll low = 0,high = n-1;
            ll ans = 0;
            while(low<=high)
            {
                ll mid = (low+high)>>1;
                if(total[mid]>=q)
                {
                    ans = mid;
                    high = mid-1;
                }
                else
                    low = mid+1;
            }
            if(ans>0)
                q-= total[ans-1];
            cout<<arr[ans].first+q-1<<endl;
        }
    }
    
}