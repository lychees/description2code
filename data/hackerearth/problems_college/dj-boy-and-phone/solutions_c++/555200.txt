#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <cassert>

using namespace std;

#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define S(x) 			scanf("%d",&x)
#define all(c) 			(c).begin(),(c).end() 
#define sz(c) 			int((c).size())
#define pb 				push_back
#define present(c,x) 	((c).find(x) != (c).end()) 
#define cpresent(c,x) 	(find(all(c),x) != (c).end())
#define rep(i,x,y) 		for(int i = x; i < y; i++)
#define REV(i,x,y) 		for(int i = x; i >= y; i--)
#define foreach(c,itr)	for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define FILL(a,v) 		memset(a,v,sizeof(a))
#define debug(args...)	{dbg,args; cerr<<endl;}

typedef long long int LL;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;

struct _debugger
{
	template<typename T> _debugger& operator , (const T& v)
	{	
		cerr<<v<<" ";
		return *this;
	}
} dbg;
 
void debugarr(int * arr,int n)
{
	cout<<"[";
	for(int i=0;i<n;i++) cout<<arr[i]<<" ";
	cout<<"]"<<endl;
}

/* ------------------------Main Code----------------------- */
const int MAX = 100001, mod = 1000000009;

int dx[4] = {-1,0,1,0}, dy[4] = {0,1,0,-1};

LL dp[10][10002];
int main()
{
	int t;
	S(t);
	while(t--){
		int n, M[4][3] = {{1,2,3},{4,5,6},{7,8,9},{-1,0,-1}};
		// rep(i,0,3){
		// 	rep(j,0,3) printf("%d ",M[i][j]);
		// 	printf("\n");
		// }
		S(n);
		rep(i,0,10) dp[i][1] = 1;
		rep(i,2,n+1){
			rep(l,0,4){
				rep(m,0,3){
					if(M[l][m] == -1) continue;
					dp[M[l][m]][i] = dp[M[l][m]][i-1]; 
					rep(k,0,4){
						int x = dx[k] + l, y = dy[k] + m;
						if(x >= 0 && x < 4 && y >= 0 && y < 3 && M[x][y] != -1){
							//debug(M[x][y]);
							dp[M[l][m]][i] = (dp[M[l][m]][i] + dp[M[x][y]][i-1] ) % mod;
						}
					}
				}
			}
		}
		LL ans = 0;
		rep(i,0,10) ans = (ans + dp[i][n]) % mod;
		cout << ans << endl;
	}
	return 0;
}