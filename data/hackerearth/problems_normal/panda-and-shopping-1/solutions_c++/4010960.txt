#include<bits/stdc++.h>

#define assn(n,a,b) assert(n<=b and n>=a)
#define pb push_back
#define mp make_pair
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define sd(n) scanf("%d",&n)
#define si(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
using namespace std;

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
       cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
       const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

#define MOD 1000000007ll
LL mpow(LL a, LL n) 
{LL ret=1;LL b=a;while(n) {if(n&1) 
ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
return (LL)ret;}

#ifdef ONLINE_JUDGE
//FILE *fin = freopen(stdin,"r",stdin);
//FILE *fout = freopen(stdout,"w",stdout);
#endif

#define MAXN 100100
#define MaxVal 100010
#define int long long
int h[MAXN],l[MAXN];
int tree[MAXN];
int dp[MAXN];

int read(int idx){
    int sum = 0;
    while (idx > 0){
        sum = max(sum, tree[idx]);
        idx -= (idx & -idx);
    }
    return sum;
}

void update(int idx ,int val){
    while (idx <= MaxVal){
        tree[idx] = max(tree[idx], val);
        idx += (idx & -idx);
    }
}

#undef int
int main()
#define int long long
{
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    for(int i=0; i<n; i++)
    	cin >> h[i] >> l[i];
    vector<int> vals(l, l+n);
    sort(all(vals));
    for(int i=0; i<n; i++)
    	l[i]=(int)(upper_bound(all(vals), l[i])-vals.begin());
    
    
    dp[0]=max(0ll, h[0]);
    update(l[0], dp[0]);
    int ans=dp[0];
    for(int i=1; i<n; i++){
    	dp[i]=read(l[i]) + h[i];
    	update(l[i], dp[i]);
    	ans=max(ans, dp[i]);
    }
    cout << ans << endl;
    return 0;
}

