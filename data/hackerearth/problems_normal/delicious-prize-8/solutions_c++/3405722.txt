#include <bits/stdc++.h>

using namespace std;

bool vis [50000 + 10];
int pri [50000 + 10];
int siz = 0;

int N = 50000 + 10;

void sieve(){

    for(long long i = 2; i * i < N; i++){
        if(!vis[i]){
            for( long long j = i * i; j < N; j+= i){
                vis[j] = true;
            }
        }
    }
    for(int i = 2; i < N; i++){
        if(!vis[i]) pri[siz++] = i;
    }
}

multiset < int > s;
vector < int > v;

int main()
{
    //ios::sync_with_stdio(false);cin.tie(0);

    int n , t, k;

    sieve();

    cin >>     t           ;

    while( t-- ){

        cin >> n >> k;

        s.clear();
        v.clear();

        for(int i = 0; i < siz && k != 1; i++){

            while( k % pri[i] == 0 ){

                v.push_back(pri[i]);
                k /= pri[i];
            }
        }

        if(k != 1) v.push_back(k);

        for(int i = 0; i < n; i++) s.insert(1);

        for(int i = v.size() - 1; i >= 0; i--){

            int mini = *s.begin();
            s.erase( s.begin() );
            s.insert(mini * v[i] );
        }

        multiset < int > :: iterator it = s.begin();
        int ans = 0;

        for(it; it != s.end(); it++) ans += *it;
        cout << ans << "\n";

    }

    return 0;
}
