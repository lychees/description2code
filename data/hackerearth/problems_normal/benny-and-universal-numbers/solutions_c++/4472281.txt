#include<bits/stdc++.h>
#define ll          long long int
#define pb          emplace_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define Max(a,b)    ((a)>(b)?(a):(b))
#define Min(a,b)    ((a)<(b)?(a):(b))
#define rep(i,a,b)  for (__typeof((b)) i=(a);i<(b);i+=1)
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define debug(a)    cerr<<#a<<": ";for(auto i:a)cerr<<i<<" ";cerr<<'\n';
using namespace std;
bool isPrime(ll N) {													//determines if the argument is prime or not (deterministic)
	if(N<2)return false;
	if(N<4)return true;
	if((N&1)==0)return false;
	if(N%3==0)return false;
	ll curr=5;
	while (curr<=sqrt(N)){
		if(N%curr==0)return false;
		curr+=2;
		if(N%curr==0)return false;
		curr+=4;
	}
	return true;
}
void solve(){
    vi x(15);
    rep(i,0,15)cin>>x[i];
    vector<vector<ll>>primed(15);
    vector<vector<ll>>nonprimed(15);
    rep(i,1,10)nonprimed[0].pb(i);
    rep(i,1,15){
        for(auto j:primed[i-1]){
            rep(k,0,10){
                if((j*10+k)%(i+1)==x[i]){
                    primed[i].pb(j*10+k);
                }
            }
        }
        for(auto j:nonprimed[i-1]){
            int lastdig=j%10;
            rep(k,0,10){
                if((j*10+k)%(i+1)==x[i]){
                    if(isPrime(lastdig*10+k)) primed[i].pb(j*10+k);
                    else nonprimed[i].pb(j*10+k);
                }
            }
        }
    }
    rep(i,0,15){
        sort(all(primed[i]));
    }
    int N;
    cin>>N;
    rep(i,0,N){
        ll a,b;
        cin>>a>>b;
        ll tempa=a;
        ll tempb=b;
        int numa=0,numb=0;
        while(tempa){
            tempa/=10;
            numa++;
        }
        while(tempb){
            tempb/=10;
            numb++;
        }
        ll myans=0;
        if(numa==numb){
            myans+=(upper_bound(all(primed[numa-1]),b)-lower_bound(all(primed[numa-1]),a))%hell;
            cout<<myans<<endl;
            continue;
        }
        rep(j,numa,numb-1){
            myans+=sz(primed[j]);
            myans%=hell;
        }
        myans+=sz(primed[numa-1])-(ll)(lower_bound(all(primed[numa-1]),a)-primed[numa-1].begin());
        myans+=(upper_bound(all(primed[numb-1]),b)-primed[numb-1].begin());
        cout<<myans%hell<<endl;
    }
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int t=1;
//	cin>>t;
	while(t--){
		solve();
	}
	return 0;
}
