#include<bits/stdc++.h>
using namespace std;
int left1[600000],right1[600000],node[600000],n,done[600000];
void dfsr(int at,int *hd , int l)
{
    if(at==-1 || node[at]==0)
        return;
    if(hd[l]==0)
    {
    cout<<node[at]<<endl;
    done[at]=1;
    hd[l]=1;
    }
    dfsr(right1[at],hd,l+1);
  
            dfsr(left1[at],hd,l+1);
           
        
}
void dfsl(int at,int *hd,int l)
{
    if(at==-1 || node[at]==0)
        return;
    if(done[at]!=1 && hd[l]==0)
    {
        cout<<node[at]<<endl;
        hd[l]=1;
    }
   dfsl(left1[at],hd,l+1);
            dfsl(right1[at],hd,l+1);
           
   
}
int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--)
	{
	    int i,num;
	    cin>>n;
	    for(i=1;i<=n;i++)
	    {
	        cin>>num;
	        if(2*i<=n)
    	        left1[i]=2*i;
    	    else
    	        left1[i]=-1;
    	    if(2*i+1<=n)
    	    
    	        right1[i]=2*i+1;
    	    else
    	        right1[i]=-1;
	        node[i]=num;
	        done[i]=0;
	    }
	    int hd[10000]={0},hd2[10000]={0};
	    dfsr(1,hd,0);
	    dfsl(1,hd2,0);
	    cout<<endl;
	}
	return 0;
}