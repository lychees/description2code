#include<bits/stdc++.h>
#define size 1000001
using namespace std;
int dp[size];
int arr[size];
int precom()
{
	memset(arr,0,sizeof(arr));
	for(int i=1;i<size;i++)
	{
		int no = pow(i,i);
		if(no>size)
			break;
		arr[no] = 1;
	}
}
bool panda(int n)
{
	if(n<=0)
	{
		return 0;
	}
	if(dp[n]!=-1)
	{
		return dp[n];
	}
	if(arr[n]==1)
	{
		return dp[n] = 1;
	}
	int remo[7],k=0;
	int tmp = n;
	while(tmp)
	{
		int digit = tmp%10;
		remo[k++] = digit;
		tmp = tmp/10;
	}
	for(int i=0;i<k;i++)
	{
		if(remo[i]!=0)
			if(panda(n-remo[i]*remo[i])==1)
			{
				return dp[n] = 1;
			}
	}
	return dp[n] = 0;
}
int main()
{
	ios::sync_with_stdio(false);    
    cin.tie(NULL);  
	int t = 0;
	cin>>t;
	int n = 0;
	precom();
	memset(dp,-1,sizeof(dp));
	while(t--)
	{
		cin>>n;
		if(panda(n)==1)
		{
			cout<<"Yes"<<endl;
		}
		else if(panda(n)==0)
		{
			cout<<"No"<<endl;
		}
	}

}