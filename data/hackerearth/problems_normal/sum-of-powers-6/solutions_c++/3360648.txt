#include <iostream>
#include <cmath>
#include <map>
using namespace std;

int main()
{
	int T;
    cin>>T;
    
    int maxLimit = 1000000;
    //auto array = new int[1001][21];
    
    map<int,int> hashMap;
    for(int i=1;i<=1000;i++){
    	for(int j=2;j<=20;j++){
    		long power = (long) pow(i,j);
    		if(power>maxLimit){
    			break;
    		}
    		int p = (int) power;
    		
    		hashMap.insert(pair<int,int>(p,p));
    		//array[i][j] = power;
    	}
    	
    }
    
    
    while(T--){
    	int N;
    	cin>>N;
    	bool flag=false;
    	map<int,int>::iterator it = hashMap.find(N-1);
    	if( it != hashMap.end()) {
    		flag=true;
    	} else {
    	
    		for (it=hashMap.begin(); it!=hashMap.end(); it++){
    			if(it->first<N){
    				int second = N - (it->first);
    				map<int,int>::iterator itr = hashMap.find(second);
    				if(itr != hashMap.end()){
    					flag=true;
    					break;
    				}
    			}
    		}
    	}
    	if(flag){
    		cout<<"Yes"<<endl;
    	} else {
    		cout<<"No"<<endl;
    	}
    
    	
    }
    return 0;
}
