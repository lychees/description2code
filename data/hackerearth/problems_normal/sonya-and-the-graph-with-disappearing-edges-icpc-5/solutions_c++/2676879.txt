#include<bits/stdc++.h>
using namespace std;
struct edge
{
    int u;
    int v1;
    int ind;
}arr[1000005];
struct kkk
{
    int t;
    int e;
}arr1[100005];
bool compt(kkk a,kkk b)
{
    return a.t<b.t;
}
int main()
{
    int n, m,k;
    cin>>n>>m>>k;
    vector<int>v[n+1];
    for(int i=1;i<=m;i++)
    {
        int u,v1;
        cin>>u>>v1;
        v[u].push_back(v1);
        v[v1].push_back(u);
        arr[i].u=u;
        arr[i].v1=v1;
        arr[i].ind=i;
    }

    for(int i=0;i<k;i++)
    {
        int t,e;
        cin>>t>>e;
        arr1[i].t=t;
        arr1[i].e=e;
    }
    int visit[n+1];
    fill(visit,visit+n+1,-1);

    sort(arr1,arr1+k,compt);
    int index=0;
    queue<int>q;
    q.push(1);
    visit[1]=0;
    while(!q.empty())
    {
        int k1=q.front();
        q.pop();
        for(int i=0;i<v[k1].size();i++)
        {
            if(visit[v[k1][i]]==-1&&v[k1][i]!=0)
            {
                q.push(v[k1][i]);
                visit[v[k1][i]]=visit[k1]+1;
                while(visit[v[k1][i]]==arr1[index].t)
                {
                    int to_del=arr1[index].e;
                    //cout<<arr[to_del].u<<" "<<arr[to_del].v1<<endl;
                    v[arr[to_del].u].erase(remove(v[arr[to_del].u].begin(),v[arr[to_del].u].end(),arr[to_del].v1),v[arr[to_del].u].end());
                    v[arr[to_del].v1].erase(remove(v[arr[to_del].v1].begin(),v[arr[to_del].v1].end(),arr[to_del].u),v[arr[to_del].v1].end());
                     index++;
                }
            }
        }
    }

        cout<<visit[n]<<endl;


}
