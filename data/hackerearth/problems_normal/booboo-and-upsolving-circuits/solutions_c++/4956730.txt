#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 10;

int n, m;
long long a[N], sum = 0, t_max = 0, t_ideal;

long long get_days(long long x) {
	long long days = 0, today = 0;
	for (int i = 0; i < n; i++) {
		today += a[i];
		assert(today > 0);
		if (today > x) {
			today = a[i];
			days++;
		}
	}
	if (today > 0) days++;
	return days;
}

long long bs_lower_bound(long long x, long long l, long long h) {
	while (l < h) {
		long long mid = l + (h - l) / 2;
		assert(mid > 0);
		if (x >= get_days(mid)) {
			h = mid;
		} else {
			l = mid + 1;
		}
	}
	return l;
}

int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%lld", &a[i]);
		sum += a[i];
		assert(sum > 0);
		t_max = max(t_max, a[i]);
	}
	t_ideal = sum / m;
	if(sum % m != 0) {
		t_ideal += 1;
	}
	printf("%lld\n", bs_lower_bound(m, max(t_max, t_ideal), sum + 1));
	return 0;
}