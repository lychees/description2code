#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)
#define eprintf(s...) fprintf(stderr, s)

template<class T> inline void amin(T &a, const T &b) { if (b<a) a=b; }
template<class T> inline void amax(T &a, const T &b) { if (a<b) a=b; }

LL rec(LL x) {
    for (LL y=2; y<x; y++) if (x % y) return rec(y) + 1;
    return 1;
}
LL lcm(LL x, LL y) {
    return x / __gcd(x, y) * y;
}

const int MAX = 42;
int mem[MAX];
LL F(LL x) {
    LL ret = 0;
    if (x >= 1) ret--;
    if (x >= 2) ret -= 2;

    LL l = 1;
    for (int i=2; i<MAX ; i++) {
	LL g = __gcd<LL>(l, i);
	l = lcm(l, i);
	LL t = x/(i/g);
	ret += (x-t) * (mem[i]+1);
	// eprintf("%lld %d %lld %lld %lld\n", x, i, t, ret, l);
	x = t;
	if (x == 0) break;
    }

    return ret;
}
    
LL A, B;
LL slow() {
    LL ret = 0;
    for (LL x=A; x<=B; x++) ret += rec(x);
    return ret;
}

int main() {
    for (int i=1; i<MAX; i++) {
	mem[i] = 1;
	for (int j=2; j<i; j++) {
	    if (i % j) {
		mem[i] = mem[j] + 1;
		break;
	    }
	}
    }
    
    scanf("%lld%lld", &A, &B);

    // eprintf("%lld %lld\n", F(B), F(A-1));
    LL ans = F(B) - F(A-1);
    printf("%lld\n", ans);
//    eprintf("%lld\n", slow());
    return 0;
}
