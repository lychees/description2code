#include <iostream>
#include<cstring>

using namespace std;

#define mod 1000000007ll

long long nthnon(long long n)
{
	int a=1,b=2,c=3;
	while(n>0)
              {
               a=b;
               b=c;
               c=a+b;
               n-=(c-b-1);
              }
              n+=(c-b-1);
              return b+n;
}

long long fibonacci(int n)
{
    long long fib[2][2]= {{1,1},{1,0}},ret[2][2]= {{1,0},{0,1}},tmp[2][2]= {{0,0},{0,0}};
    int i,j,k;
    while(n)
    {
        if(n&1)
        {
            memset(tmp,0,sizeof tmp);
            for(i=0; i<2; i++) for(j=0; j<2; j++) for(k=0; k<2; k++)
                        tmp[i][j]=(tmp[i][j]+ret[i][k]*fib[k][j])%mod;
            for(i=0; i<2; i++) for(j=0; j<2; j++) ret[i][j]=tmp[i][j];
        }
        memset(tmp,0,sizeof tmp);
        for(i=0; i<2; i++) for(j=0; j<2; j++) for(k=0; k<2; k++)
                    tmp[i][j]=(tmp[i][j]+fib[i][k]*fib[k][j])%mod;
        for(i=0; i<2; i++) for(j=0; j<2; j++) fib[i][j]=tmp[i][j];
        n/=2;
    }
    return (ret[0][1])%mod;
}

long long po1(long long A,long long B)
{
	long long result=1;
	while(B)
	{
		if(B&1) result=(result*A)%mod;
		B=B/2;
		A=(A*A)%mod;
		
	}
	return result;
}
int main()
{
    int T;
    cin>>T;
    while(T--)
    {
    	long long N;
    	cin>>N;
    	long long A=nthnon(N);
    	long long B=fibonacci(N);
    	long long r=po1(A,B);
    	//cout<<A<<" "<<B<<" ";
    	cout<<r<<"\n";
    }
              
}
