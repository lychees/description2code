#include<iostream>
#include<vector>
#include<algorithm>
#define mod 1000000007
using namespace std;
long long int arr[1001][1001],visited[1001][1001];
long long int n,m;
int check(long long int x,long long int y)
{
	if(x>0 && x<=n && y>0 && y<=m && arr[x][y]==1 && visited[x][y]==0)
	return 1;
	else
	return 0;
}
long long int dfs(long long int x,long long int y,long long int size)
{
	size++;
	visited[x][y]=1;
	if(check(x+2,y+1))
	size=dfs(x+2,y+1,size);
	if(check(x-2,y+1))
	size=dfs(x-2,y+1,size);
	if(check(x-2,y-1))
	size=dfs(x-2,y-1,size);
	if(check(x+2,y-1))
	size=dfs(x+2,y-1,size);
	if(check(x+1,y+2))
	size=dfs(x+1,y+2,size);
	if(check(x+1,y-2))
	size=dfs(x+1,y-2,size);
	if(check(x-1,y+2))
	size=dfs(x-1,y+2,size);
	if(check(x-1,y-2))
	size=dfs(x-1,y-2,size);
	return size;
}
int main()
{
	int t;
	cin>>t;
	long long int f[100001],i;
	f[0]=1;
	for(i=1;i<=100000;i++)
	f[i]=(i*f[i-1])%mod;
	while(t--)
	{
		long long int q,a,b,j,c,x,y,sum,ans=1;
		cin>>n>>m>>q;
		for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			arr[i][j]=0;
			visited[i][j]=0;
		}
		for(i=0;i<q;i++)
		{
			cin>>a>>b;
			arr[a][b]=1;
		}
		long long int size=0;
		for(x=1;x<=n;x++)
		{
			for(y=1;y<=m;y++)
			{
				if(arr[x][y]==1 && visited[x][y]==0)
				{
					sum=dfs(x,y,0);
					ans=(ans*f[sum])%mod;
				}
			}
		}
		cout<<ans<<endl;
	}
}
