# include<bits/stdc++.h>
using namespace std;

#define REP(a,b) for(int a=0;a<b;a++)
#define FOR(a,b,c) for(int a=b;a<c;a++)
#define FORD(a,b,c) for(int a=b;a>=c;a--)
#define S scanf
#define P printf
#define LEN(x) ((int)x.length())
#define SZ(x) ((int)x.size())
#define ALL(x) x.begin(), x.end()
#define MP(x,y) make_pair(x,y)
#define PB(x) push_back(x)
#define INF 1000000000
typedef long long LL;
typedef pair<int,int> PII;
typedef pair<int, PII> PIII;
typedef pair<LL,LL> PLL;
typedef vector<int> VI;
typedef vector<bool> VB;
typedef vector<string> VS;
typedef vector<PII> VII;



int a[4];


int main()
{

 int n,k1,k2,t;
  S("%d", &t);
  
 while(t--)
 {
 S("%d %d", &k1,&k2);
int states[1000001];
memset(states,-1,sizeof(states));
REP(i,4)
     S("%d",&a[i]);
queue<int> q;
q.push(k1);
states[k1]=0;
    while(!q.empty())
    {
       LL val=q.front();
        q.pop();
        if (val==k2)
            break;
        REP(i,4)
        {   LL to;

            if(i==0)
                to=val*a[i];
            else if(i==1)
                    to=val/a[i];
            else if(i==2)
                to=val+a[i];
            else if(i==3)
                to=val-a[i];
            if(to>=2 && to<=1000000 && states[to]==-1)///if not visited visit the state
            {
                states[to]=states[val]+1;
                q.push(to);
            }
        }
    }
    P("%d\n",states[k2]);
}
}
