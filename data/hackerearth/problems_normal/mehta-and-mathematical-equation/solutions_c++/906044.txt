#include <bits/stdc++.h>
#define M 1000000007
using namespace std;
string s;
int len;
int vis[67][3][2];
long long dp[67][3][2];
int cnt;
template<typename T>
inline void fi(T *a)
{
 register char c=0;
 while (c<33) c=getchar();//_unlocked();
 *a=0;
 int tmp = 0;
 while (c>33)
 {
     if ( c == 45 ) tmp = 1;
     else *a=*a*10+c-'0';
     c=getchar();//_unlocked();
 }
 if ( tmp == 1 ) *a = 0-(*a);
}
void conv(long long x)
{
    s = "";
    while ( x > 0 ) {
        s += (char)(x%2 + 48);
        x /= 2;
    }
    reverse(s.begin(),s.end());
    len = (int)s.size();
    return;
}
long long f(int idx, int carry, int flag)
{
    if ( idx == -1 ) {
        if ( (!carry) && flag ) return 1;
        return 0;
    }
    if ( vis[idx][carry][flag] == cnt ) return dp[idx][carry][flag];
    vis[idx][carry][flag] = cnt;
    long long ans = 0;
    for ( int i = 0; i < 2; i++ ) {
        for ( int j = 0; j < 2; j++ ) {
            for ( int k = 0; k < 2; k++ ) {
                int sum = ((i+j+k) == 3);
                if ( ((i+j+k+carry)%2) == (s[idx]-48) ) ans = (ans + f(idx-1,(i+j+k+carry)/2, flag | sum))%M;
            }
        }
    }
    dp[idx][carry][flag] = ans;
    return ans;
}
int main()
{
    int t;
    long long N;
    cnt = 1;
    fi(&t);
    assert(t<=1000);
    while ( t-- ) {
        fi(&N);
        assert(N<=1000000000000000000LL);
        conv(N);
        long long ans = f(len-1,0,0);
        printf("%lld\n", ans);
        cnt++;
    }
    return 0;
}