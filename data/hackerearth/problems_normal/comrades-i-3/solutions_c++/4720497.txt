#include<bits/stdc++.h>
using namespace std;
static map<int,int> m;
vector<int> adj[100001];
vector<pair<int,int> > adj1[100001];
static int ans[100001];
void dfs(int cur,int level){
	//printf("%d %d\n",cur,level);
	for(int i=0;i<adj1[cur].size();i++){
		if(m[adj1[cur][i].first]!=0){
			ans[adj1[cur][i].second] = level - m[adj1[cur][i].first]-1;
		}
	}
	m[cur] = level;
	for(int i=0;i<adj[cur].size();i++){
		dfs(adj[cur][i],level+1);
	}
	m[cur] = 0;
}
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		int n,start;
		scanf("%d",&n);
		for(int i=0;i<=n;i++){
			adj[i].clear();
			adj1[i].clear();
		}
		for(int i=0;i<n;i++){
			int x;
			scanf("%d",&x);
			if(x==0){
				start = i+1;
			} else
			adj[x].push_back(i+1);
		}
		int q;
		scanf("%d",&q);
		for(int i=0;i<q;i++)
			ans[i]=-1;
		for(int i=0;i<q;i++){
			int a,b;
			scanf("%d %d",&a,&b);
			adj1[a].push_back(make_pair(b,i));
		}
		dfs(start,1);
		for(int i=0;i<q;i++){
			printf("%d\n",ans[i]);
		}
	}
	return 0;
}