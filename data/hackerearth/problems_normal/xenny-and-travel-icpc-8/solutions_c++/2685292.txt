#include <bits/stdc++.h>
#define fr(i,a,b) for(int i=a;i<b;++i)
#define rf(i,a,b) for(ll  i=a;i>=b;--i)
#define pyes cout<<"YES"<<endl
#define pno cout<<"NO"<<endl
#define ff first
#define ss second
#define pb push_back
#define re return
#define ioS ios_base::sync_with_stdio(0);cin.tie(0);
#define coutd(a,b) cout<<a<<" "<<b<<endl
#define coutt(a,b,c)cout<<a<<" "<<b<<" "<<c<<endl;
#define coutq(a,b,c,d)cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;
#define cina(a,n) fr(i,0,n)cin>>a[i]
#define coutar(a,n)  fr(i,0,n)cout<<a[i]<<" ";cout<<endl;
#define couts(a) cout<<a<<endl
//#define MAXN 1001000
#define MOD  1000000007
using namespace std;
#define INF 0x3f3f3f3f
#define MAXN 2007
typedef long long int ll;
typedef long double ld;
typedef pair<int,int>pi;
multiset<int>st;
set<int>s;
set<int>::iterator it;
//vector<ll>g[MAXN];
map<ll,ll>mp[MAXN],m1[MAXN],m2[MAXN];
list<int>::iterator ilt,ilt2,itt;


using namespace std;
int n;
int g[MAXN][MAXN], rev_g[MAXN][MAXN];
int h[MAXN][MAXN], rev_h[MAXN][MAXN];;
int dist[MAXN];
int done[MAXN];
int tmp_dist[MAXN];

void djk(int src, int arr[][MAXN]) {

	for(int i=0;i<n;i++) dist[i] = INF, done[i] = false;
	dist[src] = 0;
	while(1) {
		int u = -1, best_dist = INF;
		for(int i=0;i<n;i++) {
			if(!done[i] && dist[i] < best_dist) {
				u = i;
				best_dist = dist[i];
			}
		}
		if(best_dist >= INF) break;

		for(int v=0;v<n;v++) {
			if(!done[v] && arr[u][v] != INF && u != v) {
				if(dist[v] > dist[u] + arr[u][v]) {
					dist[v] = dist[u] + arr[u][v];
				}
			}
		}
		done[u] = true;
	}
}
int main() {
	ioS;
	cin >> n;
	for(int i=0;i<n;i++) {
		for(int j=0;j<n;j++) {
			cin >> g[i][j];
			if(i == j) g[i][j] == INF;
			rev_g[j][i] = g[i][j];
		}
	}
	for(int i=0;i<n;i++) {
		for(int j=0;j<n;j++) {
			cin >> h[i][j];
			if(i == j) h[i][j] == INF;
			rev_h[j][i] = h[i][j];
		}
	}
	int u, v; cin >> u >> v;
	u--, v--;

    djk(u,g);

	fr(i,0,n)
	{
	    tmp_dist[i]=dist[i];
	   dist[i]=INT_MAX;
	   done[i]=false;
	}
    djk(v,rev_h);
   int ans=INF;
   fr(i,0,n)
{
    if(i!=v && i!=u)ans=min(ans,tmp_dist[i]+dist[i]);
}
//couts(ans);

	djk(u,h);
	//djk(v,rev_g);

	fr(i,0,n)
	{
	    tmp_dist[i]=dist[i];
	   dist[i]=INT_MAX;
	   done[i]=false;
	}
   djk(v,rev_g);

   fr(i,0,n)
{
    if(i!=v && i!=u)ans=min(ans,tmp_dist[i]+dist[i]);
}
couts(ans);
}
