#include <bits/stdc++.h>
#define fl(i,n) for(int (i)=0;(i)<(int)(n);(i)++)
#define  ll long long
#define MOD 1000000007
#define maxSize 100000
using namespace std;
int cnt;
 
bool visit[maxSize] = {false};
 
void dfs(int node,vector <int> adj[]){
	visit[node] = true;
	cnt++;
	for(vector<int>::iterator it = adj[node].begin();it < adj[node].end() ; it++){
		if(!visit[*it])
			dfs(*it,adj);
	}
 
}
 
int main() {
	int x,y,N,E,i,j,k;
	int testCase;
	cin>>testCase;
	vector <int> adj[100000];
	while(testCase--){
        cnt = 0;
		cin>>N>>E;
		for(k=0;k<N;k++)
            visit[k] = false;
        for(k=0;k<N;k++){
            adj[k].clear();
        }
		fl(k,E){
			cin>>x>>y;
			x--;y--;
			adj[x].push_back(y);
			adj[y].push_back(x);
		}
		uint64_t ans = 1;
		for(i=0;i<N;i++){
			if(!visit[i]){
				dfs(i,adj);
                if(cnt>2){
                    ans*=(cnt*(cnt-1))/2;
                    ans = ans%MOD;
                }
                    
				cnt = 0;
			}
		}
		cout<<ans%MOD<<endl;
	}
	return 0;
}
