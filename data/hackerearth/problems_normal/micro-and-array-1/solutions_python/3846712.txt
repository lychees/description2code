import sys

'''
# Read input from stdin and provide input before running code

name = raw_input('What is your name?\n')
print 'Hi, %s.' % name
'''

array = []


class InvalidInput(Exception):
    pass


def _read_operation(string):
    splits = map(int, string.split())
    code = splits[0]
    if code == 0:
        x, y = splits[1:]
        if x > len(array):
            raise InvalidInput('Maximum expected index: {};\t Given index: {}'.format(len(array), x))
        return (code, x, y)

    elif code == 1:
        return (code, splits[1])

    else:
        raise InvalidInput('Expected operation code: (0,1);\t Given operation code: {}'.format(code))


def _create_array(string):
    arr = []
    for item in string.split():
        arr.append(int(item))

    return arr


def replace(x, y):
    array[x - 1] = y


def find_greater(v):
    pos = -1

    for index, el in enumerate(array):
        if el >= v:
            pos = index + 1
            break

    print pos


def _execute(op):
    if op[0] == 0:
        replace(op[1], op[2])
    elif op[0] == 1:
        find_greater(op[1])

if __name__ == '__main__':

    input = sys.stdin.readline()
    array_len, num_of_operations = _create_array(input)

    input = sys.stdin.readline()
    array = _create_array(input)
    if len(array) != array_len:
        raise InvalidInput('Expected array length: {};\tGiven array length: {}'.format(array_len, len(array)))

    operations = []
    for i in range(num_of_operations):
        input = sys.stdin.readline()
        operations.append(_read_operation(input))

    map(_execute, operations)
