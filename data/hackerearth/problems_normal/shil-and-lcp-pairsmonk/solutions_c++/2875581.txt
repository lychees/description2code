#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ(a) (int)(a.size())
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define LET(it,container) __typeof(container.begin()) it(container.begin())
#define ITER(it,container) for(__typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define PREC cout << setprecision(10) << fixed;
#define FI ios_base::sync_with_stdio(0); cin.tie(NULL);
#define DB(x) cerr << #x << ": " << x << " ";
#define BS(vec,val) (int)(lower_bound(vec.begin(),vec.end(),val) - vec.begin())
#define bitcount __builtin_popcountll
#define LL long long
const int MOD = 1e9 + 7;
const int INF = 1e9 + 9;
const int MX = 1e6 + 5;

LL ans[MX];
int cnt[MX][26];
int en[MX];
int trie[MX][26];
int next1 = 1;
string s;
void build()
{
	int v = 0; // root node;
	for(int i=0;i<s.size();i++)
	{
		int co = 0;
		for(int j=0;j<26;j++)
		{
			if(j != s[i]-'a')
				co += cnt[v][j];
		}
		ans[i] += co + en[v];

		if(trie[v][s[i]-'a'] == -1)
		{
			cnt[v][s[i]-'a'] = 1;
			v = trie[v][s[i]-'a'] = next1++;
		}
		else
		{
			cnt[v][s[i]-'a'] += 1;
			v = trie[v][s[i]-'a'];
		}
	}
	int co = 0;
	for(int j=0;j<26;j++)
			co += cnt[v][j];
	ans[s.size()] += co + en[v];
	en[v]++;
}

int main()
{
	memset(trie,-1,sizeof(trie));
	int n;
	cin >> n;
	int L = 0;
	for(int i=0;i<n;i++)
	{
		cin >> s;
		L = max(L,SZ(s));
		build();
	}

	for(int i=0;i<=L;i++)
		printf("%lld ",ans[i]);
	printf("\n");	

	return 0;
}
