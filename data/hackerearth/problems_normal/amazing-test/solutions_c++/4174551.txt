using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),in.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=10000001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
void solve();
int main()
{
	int t;
	cin>>t;
	while(t--)
	solve();
	return 0;
}
int dp[2][100001];
int ar[101];
void solve()
{
	int n,k,x,i,j,sum=0;
	cin>>n>>k;
	for(i=1;i<=n;i++)
	 {
	 	cin>>ar[i];
	 	sum+=ar[i];
	 }
	 if(sum<=k)
	 {
	 	cout<<"YES";
	 	e
	 	return ;
	 }
	 else
	 {
	 	for(i=0;i<=k;i++)
	 	 dp[0][i]=0;
	 	for(i=1;i<=n;i++)
	 	{
	 		for(j=0;j<=k;j++)
	 		{
	 			dp[i%2][j]=dp[(i-1)%2][j];
	 			if(j>=ar[i])
	 			dp[i%2][j]=max(dp[i%2][j],ar[i]+dp[(i-1)%2][j-ar[i]]);
			 }
		 }
		if(sum-dp[n%2][k]<=k)
		cout<<"YES";
		else
		cout<<"NO";
		e 
	 }
	 
}






















