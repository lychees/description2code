#include <cassert>
#include <cctype>
#include <cmath>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

#include <algorithm>
#include <deque>
#include <functional>
#include <iterator>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <fstream>
#include <iostream>
#include <sstream>

#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;
// }}}

typedef long long int64;
const int INF = 0x3f3f3f3f;
const long long LINF = (long long) 1e16 + 5;
template <class T> inline int len (const T &a) { return a.size (); }

int N, K;
vector <int> v;
int64 memo [10005];

int64
solve (int idx) {
    if (idx >= N) return 0;
    if (memo [idx] != -1) return memo [idx];
    int64 ret = -LINF;
    ret = max (ret, solve (idx + 1));
    ret = max (ret, v [idx] + solve (idx + K + 1));
    return memo [idx] = ret;
}

int
main () {
#ifdef LOCALHOST
    freopen ("test.in", "r", stdin);
    // freopen ("test.out", "w", stdout);
#endif
    int T;
    scanf ("%d", &T);
    while (T--) {
        scanf ("%d %d", &N, &K);
        memset (memo, -1, sizeof (memo));
        v.clear ();
        for (int i = 0; i < N; i++) {
            int num;
            scanf ("%d", &num);
            v.push_back (num);
        }
        int64 ret = solve (0);
        printf ("%lld\n", ret);
    }

    return 0;
}
