class Point():
    def __init__(self,x,y,z):
        self.x=x
        self.y=y
        self.happiness=z


def getDist(p1,p2):
    return ((p1.x-p2.x)**2+(p1.y-p2.y)**2)**0.5


N=int(raw_input())
pointList=[]

for x in xrange(N):
    tmp=[int(x) for x in raw_input().split()]
    point=Point(tmp[0],tmp[1],tmp[2])
    pointList.append(point)

if len(pointList)<2:
    print pointList[0].happiness
else:
    DP=[float("-inf")]*len(pointList)
    DP[0]=pointList[0].happiness
    DP[1]=DP[0]+pointList[1].happiness-getDist(pointList[0],pointList[1])
    for i in xrange(2,N):
        for j in xrange(i):
            dist=getDist(pointList[i],pointList[j])
            DP[i]=max(DP[i],DP[j]+pointList[i].happiness-dist)

    print("%.6f" % round(DP[N-1],6))









