#include<bits/stdc++.h>
using namespace std;
int mod=1000000007;
void initialise(int arr[],int siz[],int n,int min_E[],int E[])
{
    for(int i=1;i<=n;i++)
    {
        arr[i]=i;
        siz[i]=1;
        min_E[i]=E[i];
    }
}
int root(int arr[],int i)
{
    while(arr[i]!=i)
    {
        arr[i]=arr[arr[i]];
        i=arr[i];
    }
    return i;
}
void Union(int A,int B,int arr[],int siz[],int min_E[])
{
    int root_A=root(arr,A);
    int root_B=root(arr,B);
    if(root_A!=root_B)
    {
        if(siz[root_A]>=siz[root_B])
        {
            siz[root_A]+=siz[root_B];
            arr[root_B]=root_A;
            min_E[root_A]=min(min_E[root_A],min_E[root_B]);
        }
        else
        {
            siz[root_B]+=siz[root_A];
            arr[root_A]=root_B;
            min_E[root_B]=min(min_E[root_A],min_E[root_B]);
        }
    }
}

int main()
{
    int n;
    scanf("%d",&n);
    int E[n+1];
    for(int i=1;i<=n;i++)
        scanf("%d",&E[i]);
    int arr[n+1];
    int siz[n+1];
    int min_E[n+1];
    initialise(arr,siz,n,min_E,E);
    int k;
    scanf("%d",&k);
    int A,B;
    while(k--)
    {
        scanf("%d%d",&A,&B);
        Union(A,B,arr,siz,min_E);
    }
    int ans=1;
    int c;
    for(int i=1;i<=n;i++)
    {
        if(arr[i]==i)
        {
            c=0;
            for(int j=1;j<=n;j++)
            {
                if(root(arr,j)==i && E[j]==min_E[i])
                    c++;
            }
            ans=((long long int)ans*c)%mod;
        }
    }
    printf("%d",ans);



}
