#include<bits/stdc++.h>
using namespace std;
int n;
vector<pair<int,int>> v[100001];

    int dis[100001];
    int vis[100001];
int bfs(int start)
{
    queue<int> q;
    q.push(start);

for(int i=0;i<=n;i++)
{
    dis[i]=0;
    vis[i]=0;
}
vis[start]=1;
    while(!q.empty())
    {
        int tmp=q.front();q.pop();
        for(auto it=v[tmp].begin();it!=v[tmp].end();it++)
        {
            if(!vis[it->first])
            {
                vis[it->first]=1;
                dis[it->first]=dis[tmp]+it->second;
                q.push(it->first);
            }
        }
    }
    return max_element(dis,dis+n+1)-dis;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n;
        for(int i=0;i<=n;i++)
        	v[i].clear();
        for(int i=0;i<n-1;i++)
        {
            int a,b,w;cin>>a>>b>>w;
            v[a].push_back(make_pair(b,w));
            v[b].push_back(make_pair(a,w));
        }
        int start=bfs(1);
        int res=bfs(start);
        int zzz=dis[res];
        int money=0;
        if(zzz>100)
            money=100;
        if(zzz>1000)
            money=1000;
        if(zzz>10000)
            money=10000;
        cout<<money<<" "<<zzz<<endl;
    }
    return 0;
}
