#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
//set<long long> s;
vector<long long> v[100001];
set<long long>::iterator it;
map<string,long long> mp;
map<long long,long long> mp1;
long long dp[100001][3],ans[100001];
long long arr[100001],a[300001];
/*long long BFS(long long n,long long q,long long v)
{
  long long i,j,l,m,x,y=0,z;
queue<long long > Q;
Q.push(n);
x=1;
dp[n]=1;
arr[n]=0;
long long ans1=0;
while(!Q.empty())
{
  x=Q.front();
  Q.pop();
  for(i=0;i<v[x].size();i++)
  {
    if(dp[v[x][i]]==0)
    {
    arr[v[x][i]]=arr[x]+1;
    Q.push(v[x][i]);
    dp[v[x][i]]=1;
  }
}
}
return 0;
}*/
int main()
{
    long long i,j,f=1,k,l,sum=0,m=0,n,t,x,c=0,y,z=1,type,b,d,u,v,q;
    char c1;
    memset(dp,0,sizeof(dp));
    memset(ans,0,sizeof(ans));
    cin>>t;
    while(t--)
    {
    cin>>n;
    cin>>x>>y>>z;
    dp[0][0]=x;
    dp[0][1]=y;
    dp[0][2]=z;
    for(i=1;i<n;i++)
    {
      cin>>x>>y>>z;
      dp[i][0]=x+min(dp[i-1][1],dp[i-1][2]);
      dp[i][1]=y+min(dp[i-1][0],dp[i-1][2]);
      dp[i][2]=z+min(dp[i-1][0],dp[i-1][1]);
    }
    cout<<min(dp[n-1][0],min(dp[n-1][1],dp[n-1][2]))<<"\n";
    }
    return 0;
}