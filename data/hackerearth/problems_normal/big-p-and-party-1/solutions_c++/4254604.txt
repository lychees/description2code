#include <bits/stdc++.h>
using namespace std;

int main()
{
	long long a,b,i,j,neighbour,root;
	cin>>a>>b;
	vector<long long> v[a];
	while(b--)
	{
		cin>>i>>j;
		v[i].push_back(j);
		v[j].push_back(i);
	}
	long long distance[a],visited[a];
	for(i=0;i<a;i++)
	{
		distance[i]=INT_MAX;
		visited[i]=0;
	}
	distance[0]=0;
	priority_queue<pair<long long,long long> > q;
	pair<long long,long long> p;
	q.push(make_pair(0,0));
	while(!q.empty())
	{
		p=q.top();
		q.pop();
		root=p.second;
		visited[root]=1;
		for(i=0;i<v[root].size();i++)
		{
			neighbour=v[root][i];
			if(!visited[neighbour]&&distance[neighbour]>distance[root]+1)
			{
				distance[neighbour]=distance[root]+1;
				q.push(make_pair(-distance[neighbour],neighbour));
			}
		}
	}
	for(i=1;i<a;i++)
	{
		if(distance[i]==INT_MAX)
		cout<<"-1"<<endl;
		else
		cout<<distance[i]<<endl;
	}
    return 0;
}
