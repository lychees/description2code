#include<iostream>
#include<cstring>
#include<algorithm>
#include<cmath>
#define maxn 1000000
using namespace std;
bool possible[1000001],pandatic[1000001];
bool solve(long int x)
{
    long int temp=x,digit;
    while(temp>0)
    {
        digit=temp%10;
        if(digit==0)
        {
            temp/=10;
            continue;
        }
        digit*=digit;
        if(x>digit&&possible[x-digit])
            return true;
        temp/=10;
    }
    return false;
}
void pre()
{
    long int i=1,t;
    for(i=0;i<=maxn;i++) possible[i]=pandatic[i]=false;
    for(i=1;;i++)
    {
        t=pow(i,i);
        if(t>maxn) break;
        pandatic[t]=true;
    }
    for(i=1;i<=maxn;i++) possible[i]=pandatic[i]or(solve(i));
}
void sol()
{
    long int n;
    cin>>n;
    if(possible[n]) cout<<"Yes"<<endl;
    else cout<<"No"<<endl;
}
int main()
{
    long int t;
    cin>>t;
    pre();
    while(t--) sol();
    return 0;
}
