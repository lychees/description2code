#include<bits/stdc++.h>
using namespace std;

#define p(n) printf("%d\n",n)
#define r(n) scanf("%d",&n)
#define rs(n) scanf("%s",n)
#define ps(n) printf("%s\n",n)
#define P printf
#define R scanf
#define F first
#define S second
#define fr(i,a,b) for(int i=(int)a; i <= (int)b; i++)
#define frr(i,a,b) for(int i=(int)a; i >= (int)b; i--)
#define ll long long int
#define pb push_back
#define vi vector<int>
#define ve(x) vector<x>
#define si set<int>
#define itv vi :: iterator
#define ixv(x) vector<x> :: iterator
#define its si :: iterator
#define ixs(x) set<x> :: iterator
#define fill(s,v) memset(s,v,sizeof(s))
#define all(s) s.begin(),s.end()
#define fs(i,s) for(its i = s.begin(); i != s.end(); i++)
#define fv(i,v) for(itv i = v.begin(); i != v.end(); i++)
#define INF INT_MAX
#define MOD 1000000007
#define ii pair<int,int>
#define mp make_pair

ll ipow(ll base, ll exp)
{
    ll result = 1;
    while (exp)
    {
        if (exp & 1)
            {result *= base;result %= MOD;}
        exp >>= 1;
        base *= base;
        base %= MOD;
    }
    return result;
}

int main(){
	int t;
	r(t);
	char P[100],S[100];
	while(t--){
		cin >> S >> P;
		int pl = strlen(P);
		int sl = strlen(S);
		if(pl != 2*sl){
			cout << "Impossible\n";
		}
		else{
			string st(P);
			int ind = st.find(S,1);
			if(ind == string::npos){
				cout << "Impossible\n";
			}
			else{
				int x = 0;
				int cur = 0;
				while(x < ind){
					if(P[x] != S[cur]){
						break;
					}
					cur++;
					x++;
				}
				if(x != ind){
					cout << "Impossible\n";
				}
				else{
					x = ind+sl;
					while(x < pl){
						if(P[x] != S[cur]){
							break;
						}
						x++;
						cur++;
					}
					if(x != pl){
						cout << "Impossible\n";
					}
					else cout << "Possible\n";
				}
			}
		}
	}
	return 0;
}