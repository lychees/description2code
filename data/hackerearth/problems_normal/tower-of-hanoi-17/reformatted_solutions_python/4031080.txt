cases = int(raw_input())
rings = []

for x in range(cases):
    num = int(raw_input())
    rings.append(tuple(tuple(map(int, raw_input().split()))
                 for alpha in range(num)))


def height(x):
    return sum(a[1] for a in x)


def hanoi(dims, memo={}):
    if len(dims) == 1:
        return dims

    elif dims in memo:
        return memo[dims]

    else:
        max_height = (dims[-1],)

        for index in range(1, len(dims)):
            till_index = hanoi(dims[:index], memo)
            if till_index[-1][0] < dims[-1][0] and till_index[-1][1] < dims[-1][1]:
                till_index += (dims[-1],)
                if height(till_index) > height(max_height):
                    max_height = till_index

        memo[dims] = max_height

        return max_height


for case in rings:
    memo = {}
    output = hanoi(tuple(sorted(case)), memo)
    print(height(max(memo.values(), key=height)))
