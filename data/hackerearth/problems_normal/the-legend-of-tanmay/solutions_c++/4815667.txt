#include <iostream>
#include <climits>

using namespace std;

int main()
{
	int i, j, tc, n, neg_count;
	long long int product, min, max;
	bool neg_pres, only_zeroes, pos_pres;
	int largest_negative, smallest_positive;
	cin >> tc;
	int nums[18];
	for(i = 0; i < tc; i++)
	{ 
		product = 1;
		neg_pres = false;
		neg_count = 0;
		pos_pres = false;
		only_zeroes = true;
		largest_negative = INT_MIN;				//
		smallest_positive = INT_MAX;
		cin >> n;
		for(j = 0; j < n; j++)
		{
			cin >> nums[j];
			if(nums[j] != 0)
				only_zeroes = false;
			if(nums[j] < 0)
			{
				neg_count++;
				neg_pres = true;
			}
			if(!pos_pres && nums[j] > 0)
				pos_pres = true;
			if(nums[j] != 0)
				product *= nums[j];
			if(nums[j] < 0 && nums[j] > largest_negative)
	//		{
				largest_negative = nums[j];
	//			cout << largest_negative << endl;
	//		}
			if(nums[j] >= 0 && nums[j] < smallest_positive)
				smallest_positive = nums[j];
		}
		if(only_zeroes == true)
		{
			cout << 0 << " " << 0 << endl;
			continue;
		}
		if(neg_count == 1 && smallest_positive == 0 && !pos_pres)
			max = 0;
		else if(neg_count == 1 && !pos_pres && smallest_positive == INT_MAX)
			max = largest_negative;
		else if(product < 0)
		{
	//		cout << largest_negative << endl;
			max = product/largest_negative;
		}
		else
			max = product;
		if(product < 0)
		{
	//		cout << product << endl;
			min = product;
		}
		else if(!neg_pres)
			min = smallest_positive;
		else
	//	{
	//		cout << largest_negative << endl;
			min = product / largest_negative;
	//	}
		cout << max << " " << min << endl;
	}
	return 0;
}