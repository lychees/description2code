#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
int arr[1002][1002];
vector<long long int>v(1000001);
int dup[1002][1002];
int a1[]={2,2,1,-1,-2,-2,-1,1};
int b1[]={1,-1,-2,-2,-1,1,2,2};
int n,m;
int bfs(int x,int y)
{
    int count=1;
    dup[x][y]=1;
    queue<pair<int,int> >q;
    q.push(make_pair(x,y));
    while(!q.empty())
    {
        x=q.front().first;
        y=q.front().second;
        q.pop();
        for(int k=0;k<8;k++)
        {
            int xf=x+a1[k];
            int yf=y+b1[k];
            if(xf<0 || xf>=n || yf<0 || yf>=m)  continue;
            if(arr[xf][yf] && dup[xf][yf]==0)
            {
                count++;
                q.push(make_pair(xf,yf));
                dup[xf][yf]=1;
            }
        }
    }
    return v[count];
}
int main ()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin>>t;
    v[0]=1;
    for(int i=1;i<=1000000;i++)
        v[i]=(i*v[i-1])%MOD;
    while(t--)
    {
        long q;
        cin>>n>>m>>q;
        memset(arr,0,sizeof(arr));
        memset(dup,0,sizeof(dup));
        for(long i=0;i<q;i++)
        {
        int x,y;
        cin>>x>>y;
        arr[x-1][y-1]=1;
        }
        unsigned long long int ans=1;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(arr[i][j] && dup[i][j]==0)
                {
                ans=(ans%MOD*bfs(i,j)%MOD)%MOD;
                }
            }
        }
        cout<<ans<<"\n";
    }
}
