
#include<iostream>
#include<vector>
#include<stack>
#include<string.h>
using namespace std;
bool game(int indgr[])
{
	int sum=0;
	for(int i=0;i<26;i++)
	{
		if(indgr[i]>0)
			sum++;
	}
	if(sum==0)
		return false;
	return true;
}		
void topological(int graph[][26],int flag[],int n)
{
	int indgr[26];
	while(1)
	{
		for(int i=0;i<26;i++)
		{	
			if(flag[i]>0)
			indgr[i]=0;
			else indgr[i]=-1;
		}
	
		for(int i=0;i<26;i++)
			for(int j=0;j<26;j++)
			{
				if( graph[j][i]==1)
					indgr[i]++;

			}
		bool check=game(indgr);
	
			if(!check)
			{
				for(int i=0;i<26;i++)
					if(flag[i]>0)
						cout<<(char)(i+'a');
				break;
			}
		for(int i=0;i<26;i++)
			if(indgr[i]==0)
			{
				cout<<(char)(i+'a');
				flag[i]=-1;
				for(int j=0;j<26;j++)
					graph[i][j]=-1;	
			}
		cout<<endl;
	}
}	
int main()
{

	int flag[26];
	for(int i=0;i<=25;i++)
		flag[i]=0;
		
	int w;
	char str[103][26];
	cin>>w;
	for(int i=0;i<w;i++)
	{
		cin>>str[i];
		for(int j=0;j<strlen(str[i]);j++)
			flag[str[i][j]-'a']++;
	}
	int graph[26][26];
	for(int i=0;i<=25;i++)
		for(int j=0;j<=25;j++)
			graph[i][j]=-1;
	for(int i=0;i<w-1;i++)
		for(int j=0;j<min(strlen(str[i]),strlen(str[i+1]));j++)
			if(str[i][j]!=str[i+1][j])
			{
				graph[str[i][j]-'a'][str[i+1][j]-'a']=1;
				break;
			}
	
	topological(graph,flag,w);

	return 0;
}