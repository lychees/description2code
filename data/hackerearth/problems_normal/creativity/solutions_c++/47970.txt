/* Author : Pranav
BITS PILANI Hyderabad Campus */
// x1^d +x2^d+x3^d mod n =m ; number of solutions  1=<x1,x2,x3<=up
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <cstring>
#include<limits>
using namespace std;

#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define fr(i,n) for(i=1; i<=n; i++)
#define N 100005
#define mo 1000000007
#define f first
#define s second
typedef vector<int> vi;
typedef pair <int, int> paint;
typedef long long ll;

int main()
     {
     string s1,s2;
          long long t,flag;
          char a[1];
     cin>>t;
   cin.ignore( numeric_limits<streamsize>::max(), '\n' );
     flag=1;
     while(t--)
     {   
     s1.clear();
          s2.clear();
          getline(cin,s1);
                   getline(cin,s2);
         // cout<<s1<<" "<<s2<<" ";
          if(s2.find(s1,0)!=string::npos){
               cout<<"possible\n";
          }
          else
          {
               cout<<"not possible\n";
          }
         
     }
     return 0;
 }