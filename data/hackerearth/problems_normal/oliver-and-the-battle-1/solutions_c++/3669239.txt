#include<bits/stdc++.h>
using namespace std;
vector<int>v[1000010];
int vis[1000010]={0};
queue<int>q;
int bfs(int s)
{
    int cnt=1;
    q.push(s);
    vis[s]=1;
    while(!q.empty())
    {
        int x=q.front();
        q.pop();
        cnt++;
        vector<int>::iterator it;
        for(it=v[x].begin();it<v[x].end();it++)
        {
            if(vis[*it]==0)
            {
                q.push(*it);
                vis[*it]=1;

            }
        }

    }
    return cnt;
}
int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin>>t;
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        int a[n+2][m+2];
        for(int i=0;i<=n+1;i++)
        {
            for(int j=0;j<=m+1;j++)
            {
                //cout<<i<<" "<<j<<endl;
                if(i==0||i==n+1||j==0||j==m+1)
                    a[i][j]=0;
                else
                    cin>>a[i][j];
            }
        }
        //cout<<"1";
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(a[i-1][j]==1)
                    v[(i-1)*m+j-1].push_back((i-2)*m+j-1);
                if(a[i+1][j]==1)
                    v[(i-1)*m+j-1].push_back((i)*m+j-1);
                if(a[i][j-1]==1)
                    v[(i-1)*m+j-1].push_back((i-1)*m+j-2);
                if(a[i][j+1]==1)
                    v[(i-1)*m+j-1].push_back((i-1)*m+j);
                if(a[i+1][j+1]==1)
                    v[(i-1)*m+j-1].push_back((i)*m+j);
                if(a[i+1][j-1]==1)
                    v[(i-1)*m+j-1].push_back((i)*m+j-2);
                if(a[i-1][j+1]==1)
                    v[(i-1)*m+j-1].push_back((i-2)*m+j);
                if(a[i-1][j-1]==1)
                    v[(i-1)*m+j-1].push_back((i-2)*m+j-2);
            }

        }
        //cout<<"2";
        int ans=0,mx=0;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(vis[(i-1)*m+j-1]==0&&a[i][j]==1)
                {
                    int f=bfs((i-1)*m+j-1);
                    //cout<<(i-1)*m+j-1<<" "<<i<<' '<<j<<" "<<f<<endl;
                    ans++;
                    mx=max(mx,f-1);
                }
            }
        }

       // cout<<"3";
        cout<<ans<<" "<<mx<<endl;
        for(int i=0;i<n*m;i++)
        {
            vis[i]=0;
            v[i].clear();
        }

    }
   return 0;
}
