You are given string †s‡ consists of opening and closing brackets of four kinds †<>, {}, [], ()‡. There are two types of brackets: opening and closing. You can replace any bracket by another of the same type. For example, you can replace †<‡ by the bracket †{‡, but you can't replace it by †)‡ or †>‡. (Opening brackets can be replaced by opening brackets only and closing brackets can be replaced by closing brackets only). 
Let's define a †regular bracket sequence‡ (RBS). Empty string is †RBS‡. Let †s1‡ and †s2‡ be a †RBS‡ then the strings †s2, {s1}s2, [s1]s2, (s1)s2‡ are also †RBS‡.

For example the string †"[[(){}]<>]"‡ is †RBS‡, but the strings †"[)()"‡ and †"][()()"‡ are not.
Determine the least number of replaces to make the string †s‡ a †RBS‡.

Input
First line contains †T‡ (number of test cases).
Next line contains a non empty string †s‡, consisting of only opening and closing brackets of four kinds. The length of †s‡ does not exceed 10^6.
Output

If it's impossible to get RBS from s print †Impossible‡.

Otherwise print the least number of replaces needed to get †RBS‡ from †s‡.

SAMPLE INPUT
3
[<}){}
{()}[]
]]

SAMPLE OUTPUT
2
0
Impossible

