#include <stdio.h>
using namespace std;
int max(int a, int b) { return (a > b)? a : b; }
int knapSack(int W, int wt[], int val[], int n)
{
   int i, w;
   int K[n+1][W+1];
 
   // Build table K[][] in bottom up manner
   for (i = 0; i <= n; i++)
   {
       for (w = 0; w <= W; w++)
       {
           if (i==0 || w==0)
               K[i][w] = 0;
           else if (wt[i-1] <= w)
                 K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]],  K[i-1][w]);
           else
                 K[i][w] = K[i-1][w];
       }
   }
 
   return K[n][W];
}
int main()
{
	int load[2005],worth[2005];
    int T,M,L;
    scanf("%d",&T);
    while(T--){
    	scanf("%d",&M);
    	scanf("%d",&L);
    	for(int i=0;i<M;++i){
    		scanf("%d",&load[i]);
    	}
    	for(int i=0;i<M;++i){
    		scanf("%d",&worth[i]);
    	}
    	int ans = knapSack(L,load,worth,M);
    	printf("%d\n",ans);
    	
    }
    return 0;
}
