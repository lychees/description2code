#include <bits/stdc++.h>
using namespace std;
#define LL long long
int linear_search(LL arr[],LL x)
{
    int i=0;
    for(i=0;i<56;i++)
    {
        if(arr[i]>=x)
        return i;
    }
}
LL mypow(LL base,LL exponent)
{
    if(exponent==0)
    return 1;
    else if((exponent&1)==0)
        return mypow(base*base,exponent/2);
    else
        return base*mypow(base*base,(exponent-1)/2);
}
int main()
{
    LL t=0,i,n=0;
    LL arr[64]={0};
    arr[1]=2;
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
    ios_base::sync_with_stdio(0);
    cin>>t;
    for(i=2;i<60;i++)
        {
            arr[i]=i*mypow(2,i)+arr[i-1];
        }
    while(t--)
        {
            cin>>n;
            int res=linear_search(arr,n);
            if(arr[res]==n)
                {
                    cout<<"Earth"<<endl;
                    continue;
                }
            else
            { //represent the difference in 2's base and find the position at corresponding bit
                LL offset=n-arr[res-1];
                LL rank_num=(offset-1)/res ;
                LL rank_offset=(offset-1)%res;
                //convert rank_num to binary
                LL temp=rank_num;
                LL counter=res-1;
                int a[64]={0};
                while(temp!=0)
                    {
                        a[counter--]=temp%2;
                        temp/=2;
                    }
                if(a[rank_offset]==0)
                    cout<<"Hacker\n";
                else
                    cout<<"Earth\n";
            }
        }
    return 0;
}
