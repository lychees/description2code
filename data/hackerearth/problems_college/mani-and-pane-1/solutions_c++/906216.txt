#include <iostream>
#include <iomanip>
#include <algorithm>
#include <cstdio>
#include <map>

typedef long long LL;

unsigned int gcd(unsigned int u, unsigned int v)
{
    int shift;
    if (u == 0) return v;
    if (v == 0) return u;
    shift = __builtin_ctz(u | v);
    u >>= __builtin_ctz(u);
    do {
        v >>= __builtin_ctz(v);
        if (u > v) {
            unsigned int t = v;
            v = u;
            u = t;
        }  
        v = v - u;
    } while (v != 0);
    return u << shift;
}

int main()
{
	clock_t startTime = clock();
	LL t, x, z, gcdarr[101][101][101];
	std::map<LL, LL> mll;;
	
	for (LL a = 1; a <= 100; ++a)
	{
		for (LL b = a + 1; b <= 100; ++b)
		{
			for (LL c = b + 1; c <= 100; ++c)
			{
				 ++mll[(gcd(a, gcd(b, c)))];
			}
		}
	}
	
	//std::cout << mll.size();
	
	//std::cin >> t;
	scanf("%lld", &t);
	
	while (t--)
	{
		//std::cin >> x >> z;
		scanf("%lld%lld", &x, &z);
		LL count = 0;
					
		for (std::map<LL, LL>::iterator it = mll.begin(); it != mll.end(); ++it)
		{
			if ((x - z) % it->first == 0)
			{
				count += 6 * it->second;
			}
		}
	
		//std::cout << std::fixed << std::setprecision(6) << count / (double) 970200 << std::endl;
		printf("%.6f\n", count / (double) 970200);
	}
	
	//std::cout << double( clock() - startTime ) / (double)CLOCKS_PER_SEC<< " seconds." << std::endl;
	
	return 0;
}
