/*
Author:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%   LALIT KUNDU      %%%%%%%% 
%%%%%%%%   IIIT HYDERABAD   %%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*/
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
long long int readint() {long long int n=0,count=0,counti=0; char c;while(1){c=getchar_unlocked();if(c=='-')count=1;else if((c==' '||c=='\n'||c==EOF) && counti==1)break;else if(c>='0' && c<='9'){counti=1;n=(n<<3)+(n<<1)+c-'0';}}if(count==0)return n;else return -n;}
#define sort(arr,n) qsort(arr,n,sizeof(arr[0]),compare)
#define sc(n) scanf("%d",&n)
#define rep(i,start,end) for(i=start; i<end; i++)
#define prd(n) printf("%d",n)
#define prld(n) printf("%ld",n)
#define prlld(n) printf("%lld",n)
#define prllu(n) printf("%llu",n)
#define pn printf("\n")
#define ps printf(" ")
int compare(const void * a, const void * b){return *(int *)a-*(int *)b;}
bool subset[1001][1001];
bool isSubsetSum(int set[], int n, int sum)
{
    int i,j;
    for (int i = 0; i <= n; i++)
        subset[0][i] = true;
    for (int i = 1; i <= sum; i++)
        subset[i][0] = false;
    for (int i = 1; i <= sum; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            subset[i][j] = subset[i][j-1];
            if (i >= set[j-1])
                subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
        }
    }
    return subset[sum][n];
}
int main()
{
    int t,i;
    sc(t);
    while(t--)
    {
        int n,arr[1009],m,prev,now,ans=0,count=1;
        sc(n),sc(m);
        for(i=0; i<m; i++)
            sc(arr[i]);
        sc(prev);
        for(i=1; i<n; i++)
        {
            sc(now);
            if(now!=prev)
            {
                if(isSubsetSum(arr,m,count) == true)
                    ans++;
                count=1;
                prev=now;
            }
            else
                count++;
        }
        if(isSubsetSum(arr,m,count) == true)
            ans++;

        printf("%d\n",ans);
    }
    return 0;
}

