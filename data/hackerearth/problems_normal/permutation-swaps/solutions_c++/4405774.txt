#include <bits/stdc++.h>
using namespace std;
int allot[100002];
vector<int> v[100002];
int visited[100002];

int dfs(int node, int temp)
{
	for(int j = 0 ; j < v[node].size(); j++)
	{
		if(visited[v[node][j]] == 0)
		{
			allot[v[node][j]] = temp;
			visited[v[node][j]] = 1;
			dfs(v[node][j], temp);
		}
	}
}

int main()
{
    int t;
    cin >> t;
    while(t--){
    	int n, m;cin >> n >> m;
    	int a[n+1];int b[n+1];int c[n+1];fill(visited, visited+n+1, 0);
    	fill(allot, allot+n+1, 0);
    	for(int i = 1; i <= n; i++){cin >> a[i];c[a[i]]=i;v[i].clear();}
    	for(int i = 1; i <= n; i++)cin >> b[i];
    	// vector<int> v[n+1];
    	for(int i = 1; i <= m; i++){
    		int x, y;
    		cin >> x >> y;
    		v[x].push_back(y);
    		v[y].push_back(x);
    	}
    	int temp = 1;
    	for(int i = 1; i <= n; i++){
    		if(visited[i] == 0){
    			visited[i] = 1;
    			allot[i] = temp;
    			dfs(i, temp);
    			temp += 1;
    		}
    	}
    	int flag = 0;
    	for(int i = 1; i <= n; i++){
    		if(a[i] != b[i]){
    			int idx = c[b[i]];
    			if(allot[i] != allot[idx]){
    				cout << "NO" << "\n";
    				flag = -1;break;
    			}
    		}
    	}
    	if(flag == 0)
    	{
    		cout << "YES" << "\n";
    	}
    }
    return 0;
}
