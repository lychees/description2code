#include <bits/stdc++.h>
using namespace std;
int n, m, q;
const int oo = 0x3f3f3f3f;
const int MAX = 101;
int comb[MAX];
int c[MAX], k[MAX], z[MAX];
void solve(){
  	scanf("%d %d %d", &n, &m, &q);
  	for(int i = 0; i < n; i++)scanf("%d", k+i);
  	for(int i = 0; i < m; i++)scanf("%d", c+i);
  	for(int i = 0; i < m; i++)scanf("%d", z+i);
  	memset(comb, 0, sizeof comb);
  	for(int i = 0; i < n; i++){
  		for(int j = 0; j < m; j++){
  			if(__gcd(k[i], c[j]) != 1)comb[j] |= (1 << i);
  		}
  	}
  	int ans = 0;
  	for(int i = 0; i < (1 << n); i++){
  		if(__builtin_popcount(i) == q){
  			int cur = 0;
  			for(int j = 0; j < m; j++){
  				if((comb[j]&i) > 0)cur+=z[j];
  			}
  			ans = max(ans,cur);
  		}
  	}
	printf("%d\n", ans);
}
int main(){
  int tc;
  scanf("%d", &tc);
  for(int i = 0; i < tc; i++)solve();
}