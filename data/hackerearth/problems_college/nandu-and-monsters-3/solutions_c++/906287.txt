#include <bits/stdc++.h>
int id[100001];
int a[100001];
int sz[100001],n;
using namespace std;
int root(int i)
{
    while(id[i]!=i)
        i=id[i];
    return i;
}
void open(int i)
{
    if(2*i<=n)
    {
        if(a[2*i]==0)
        {
          if(sz[i]<sz[2*i])
          {
              id[i]=root(2*i);
              sz[2*i]+=sz[i];
          }
          else
          {
              id[2*i]=root(i);
              sz[i]+=sz[2*i];
          }
        }
    }
    if(2*i+1<=n)
    {
        if(a[2*i+1]!=1)
        {
          if(sz[i]<sz[2*i+1])
          {
              id[i]=root(2*i+1);
              sz[2*i+1]+=sz[i];
          }
          else
          {
              id[2*i+1]=root(i);
              sz[i]+=sz[2*i+1];
          }
        }
    }
}
bool isconnected(int i,int j)
{
    if(root(i)==root(j))
        return true;
    else
        return false;
}
int main()
{
    int q,i,j;
    for(i=0;i<100001;i++)
        {
            id[i]=i;
            sz[i]=1;
        }
    scanf("%d%d",&n,&q);
    for(i=1;i<=n;i++)
    {
        scanf("%1d",&a[i]);
    }
    for(i=1;i<=n;i++)
    {
        if(a[i]!=1)
         open(i);
    }
    while(q--)
    {
     scanf("%d%d",&i,&j);
     if(isconnected(i,j)==true && a[i]==0 && a[j]==0)
        printf("Yes\n");
     else
        printf("No\n");
    }
    return 0;
}
