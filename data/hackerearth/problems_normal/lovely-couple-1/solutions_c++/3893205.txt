#include <bits/stdc++.h> 
#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <string.h>
using namespace std;
#define RANGE 1000
static int gcd[RANGE+1][RANGE+1],prime[RANGE*RANGE+1];

int isPrime(int number)
{
	if(number == 1)
	return 0;
	if(prime[number] != -1)
		return prime[number];
    for (int i=2; i*i<=number; ++i) 
    	{
        	if (number % i == 0) 
        	{
        		return prime[number]=0;
        	}
    	}
    return prime[number]=1;
}

int GCD(int a, int b)
{
	int x = a, y = b;
	if(!gcd[a][b])
	{
		
		while(a)
		{
			int rem = b%a;
			b = a;
			a = rem;
		}
		gcd[x][y] = gcd[y][x] = b;
	}
	return gcd[x][y];
}
int main()
{
	int lcm[RANGE+1][RANGE+1],t,ans[RANGE*RANGE+1];
 	memset(lcm,-1,sizeof(lcm));
 	memset(ans,-1,sizeof(ans));
 	memset(prime,-1,sizeof(prime));
 	prime[0] = prime[1]=0;
	cin>>t;
	while(t--)
	{
		int a,b;
		cin>>a>>b;
		if( lcm[a][b] == -1 )
		{
			int aLcm = a*b/GCD(a,b);
			lcm[a][b] = lcm[b][a] = aLcm;
		}
		int aLcm = lcm[a][b];
		//cout<<"aLcm "<<aLcm<<endl;
		if(ans[aLcm] == -1)
		{
			int count = 0;
			for(int i = 1;i<=sqrt(aLcm);++i)
			{
				if(aLcm%i == 0 )
				{
					if(isPrime(i))
						++count;
					if(i*i != aLcm && isPrime(aLcm/i))
						++count;
				}
			}
			//cout<<"count"<<count<<endl;
			if(isPrime(count))
				ans[aLcm] = 1;
			else
				ans[aLcm] = 0;
		}
		if(ans[aLcm] == 0)
			cout<<"No";
		else
			cout<<"Yes";
		cout<<endl;
	}
    //printf("Hello World!\n");
    return 0;
}
