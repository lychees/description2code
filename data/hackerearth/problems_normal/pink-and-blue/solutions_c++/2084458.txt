#include <iostream>
#include<bits/stdc++.h>
#define ll long long
using namespace std;
char arr[100005];
vector<ll> vect[100005];
bool visited[100005];

ll dfs(ll node,char color)
{
	if(visited[node])return 0;
	visited[node]=true;
	ll inver=0;
	if(color=='b'&&arr[node]=='G')
	inver++;
	if(color=='p'&&arr[node]=='B')
	inver++;
	for(ll i=0;i<vect[node].size();i++)
	{
		inver+=dfs(vect[node][i],color=='b'?'p':'b');
	}
	//cout<<inver<<endl;
return inver;	
}
ll min(ll a,ll b){return a<b?a:b;}
int main()
{
    ll std,fr,a,b;
    char d;
    memset(visited,false,sizeof(visited));
    cin>>std>>fr;
    for(int i=0;i<std;i++)
    {cin>>d;arr[i+1]=d;}
    
    for(ll i=0;i<fr;i++)
    {
    	cin>>a>>b;
    	vect[a].push_back(b);
    	vect[b].push_back(a);
    }
    ll count=100005;
    //cout<<dfs(1,'b');
    count=min(count,dfs(1,'p'));
    memset(visited,false,sizeof(visited));
    count=min(count,dfs(1,'b'));
    cout<<count<<endl;
    
    return 0;
}
