#include <iostream>
using namespace std;
int isPrime(long long value)
{
	long long index;
	if(value < 2)
		return 0;
	for(index = 2; index * index <= value; index++)
	{
		if(value % index == 0)
			return 0;
	}
	return 1;
}
typedef struct list
{
	long long value;
	int prime;
}locations;

void insert_list(locations **spots, long long value, long long index)
{
	(*spots)[index].value = value;
	(*spots)[index].prime = isPrime(value);
}
int main()
{
	locations *spots;
	long long 	X,
				Y,
				Q,
				index,
				value,
				N,
				count,
				T;
	char ch;
	cin>>T;
    while(T > 0)
    {
    	cin>>N;
    	spots = (locations *)malloc(sizeof(locations) * N);
    	for(index = 0; index < N; index++)
    	{
    		cin>>value;
    		insert_list(&spots, value, index);
    	}
    	cin>>Q;
    	
    	while(Q > 0)
    	{
    		cin>>ch>>X>>Y;
    		count = 0;
    		switch(ch)
    		{
    			case 'A':for(index = X-1; index < Y; index++)
    						if(spots[index].prime == 1)
    							count++;
    					cout<<count<<"\n";
    					break;
    					
    			case 'C':insert_list(&spots, Y, X-1);
    					break;
    		}
    		Q--;
    	}
    	free(spots);
    	T--;
    }
    return 0;
}
