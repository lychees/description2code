#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;

#define MAX 100000
#define INF 2140000000
#define MOD 1000000007

vector<string> pos(100000);
vector<string> neg(100000);

void fun(string s) {
	vector<char> t;
	int len = s.size();

	for (int i = 0; i < len; ++i) {
		t.push_back(s[i]);
	}

	sort(t.begin(),t.end());

	for (int i = 0; i < len; ++i) {
		cout << t[i];
	}

	cout << endl;
	return;
}

void dfs(string s, int k, int i, int j) {
	if (i == j) {
		return;
	}

	if (k >= 0) {
		pos[k] += s[i];
		//cout << pos[k] << endl;
	}
	else {
		neg[-k] += s[i];
		//cout << neg[-k] << endl;
	}

	if (s[i+2] == '.') {
	//	cout << k-1 << " " << i+2 << " " << i+2 << endl;
	//	cout << k+1 << " " << i+3 << " " << j-1 << endl;
		dfs(s,k-1,i+2,i+2);
		dfs(s,k+1,i+3,j-1);
		return;
	}

	int temp = 0;
	for (int kk = i+3; kk < j+1; ++kk) {
		if (s[kk] == '(') {
			temp++;
		}

		if (s[kk] == ')') {
			temp--;
		}

		if (temp == 0) {
	//		cout << k-1 << " " << i+2 << " " << kk << endl;
	//		cout << k+1 << " " << kk+1 << " " << j-1 << endl;
			dfs(s,k-1,i+2,kk);
			dfs(s,k+1,kk+1,j-1);
			break;
		}
	}

}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("in.txt","r",stdin);
	#endif	
	
	int test;
	cin >> test;

	while (test--) {
		int n;
		string s;

		pos.clear();
		neg.clear();
		pos.resize(20000);
		neg.resize(20000);

		cin >> n >> s;
		dfs(s,0,0,s.size()-1);

		if (n >= 0) {
			if (pos[n].size() > 0) {
				fun(pos[n]);
			}
			else {
				cout << "Common Gandhijee!" << endl;
			}
		}
		else {
			if (neg[-n].size() > 0) {
				fun(neg[-n]);
			}
			else {
				cout << "Common Gandhijee!" << endl;
			}	
		}
	}

	return 0;
}
	