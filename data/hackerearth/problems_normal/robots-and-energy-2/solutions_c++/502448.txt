#include<iostream>
#include<cstdio>
#include<cstring>
#include<queue>
#include<stack>
#include<set>
#include<malloc.h>
using namespace std;
#define cin(n) scanf("%d",&n)
#define ill long long
#define matrix vector<vector<ill> >
#define mod 1000000007

matrix multiply(matrix a,matrix b)
{
    matrix c;
    int row=a.size();
    int col=b[0].size();
    c.resize(row);
    for(int i=0;i<row;i++)
        c[i].resize(col,0);

    int i,j,k;
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            c[i][j]=0;
            for(k=0;k<a[0].size();k++)
            {
                c[i][j]=(c[i][j]+a[i][k]*1LL*b[k][j]%mod)%mod;
            }
        }
    }
    return c;
}

matrix matpow(matrix a,ill b)
{
    matrix c;
    c.resize(a.size());
    int i;
    for(i=0;i<a.size();i++)
        c[i].resize(a[0].size(),0);
    for(i=0;i<a.size();i++)
        c[i][i]=1;

    while(b)
    {
        if(b&1)
            c=multiply(a,c);
        a=multiply(a,a);
        b/=2;
    }
    return c;
}

int check(string s)
{
    string rev=s;
    int len=s.length();

    for(int i=0;i<s.length()/2;i++)
    {
        if(s[i]!=s[len-i-1])
            return 0;
    }
    return 1;
}

int calc(string s)
{
    int len=s.length();
    int i,j,k;
    string ss;
    int val=0;
    set<string>v;
    for(i=0;i<len;i++)
    {
        for(j=i;j<len;j++)
        {
            ss="";
            for(k=i;k<=j;k++)
                ss+=s[k];
            if(check(ss))
            {
                if(v.find(ss)==v.end())
                {
                    val++;
                    v.insert(ss);
                }
            }
        }
    }
    return val;
}
int main()
{
    int t,m,n,i,j,k,l;

    //cin(t);
t=1;
    while(t--)
    {
        cin(m);cin(n);

        int init[m*n+2];
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                string s;
                cin>>s;
                init[i*n+j]=calc(s);
            }
        }
        cin(l);
        int ma[m*n+1][m*n+1];
        memset(ma,0,sizeof(ma));

        for(i=0;i<l;i++)
        {
            cin(j);cin(k);
            int x,y;
            cin(x);cin(y);
            ma[j*n+k][n*x+y]++;
            ma[n*x+y][j*n+k]++;
        }

        matrix a;
        a.resize(m*n);
        for(i=0;i<(m*n);i++)
            a[i].resize(m*n,0);
        for(i=0;i<(m*n);i++)
        {
            for(j=0;j<(m*n);j++)
                 a[i][j]=ma[i][j];
            a[i][i]++;
        }
        int d;

        matrix b;
        b.resize(m*n);
        for(i=0;i<(m*n);i++)
            b[i].resize(1);
        for(i=0;i<(m*n);i++)
        {
        b[i][0]=init[i];
        //cout<<b[i][0]<<" ";
        }
        //cout<<"\n";
        cin(d);

        matrix ans=multiply(matpow(a,d),b);
//matrix ans
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
                cout<<ans[i*n+j][0]<<" ";
            cout<<"\n";
        }
    }
    return 0;
}
