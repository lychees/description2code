def solve():
	row_sum=[0 for i in xrange(n)]
	col_sum=[0 for i in xrange(n)]
	for i in xrange(n):
		for j in xrange(n):
			row_sum[i]+=a[i][j]
			col_sum[j]+=a[i][j]

	heapify(row_sum)
	heapify(col_sum)

	cumulative_row_sum=[0 for x in xrange(k+1)]
	cumulative_column_sum=[0 for x in xrange(k+1)]

	for i in xrange(1,k+1):
		temp=row_sum[0]
		row_sum[0]+=n
		cumulative_row_sum[i]=cumulative_row_sum[i-1]+temp
		heapify(row_sum)
	
	for i in xrange(1,k+1):
		temp=col_sum[0]
		col_sum[0]+=n	
		cumulative_column_sum[i]=cumulative_column_sum[i-1]+temp
		heapify(col_sum)

	ans=1000000000
	for i in xrange(k+1):
		ans=min(ans,cumulative_row_sum[i]+cumulative_column_sum[k-i]+i*(k-i))
	return ans	

from heapq import *
t=input()
while(t>0):
	n,k=map(int,raw_input().strip().split())
	a=[]
	for i in xrange(n):
		a.append([int(x) for x in raw_input().strip().split()])
	print solve()
	t-=1