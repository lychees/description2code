#include <bits/stdc++.h>
using namespace std;
const int MOD = 1000000007;
map <int,int> dp[2005];
bool mark[2005];
int DP(int n, int t)
{
	if(t < 0)
		return 0;
	if(n == 0)
	{
		if(!t)
			return 1;
		return 0;
	}
	if(dp[n].find(t) != dp[n].end())
		return dp[n][t];
	if(mark[n])
		dp[n][t] = (DP(n-1,t-(n-1))+DP(n-1,t-(n+1)))%MOD;
	else
		dp[n][t] = DP(n-1,t);
	return dp[n][t];	
}
int main()
{
	// freopen("input.txt", "r", stdin);
	// ios_base::sync_with_stdio(0);
	int n,k,t;
	scanf("%d %d %d", &n, &k, &t);
	for (int i = 0; i < k; ++i)
	{
		int x;
		scanf("%d", &x);
		mark[x] = true;
	}
	printf("%d\n", DP(n,t));
	return 0;
}