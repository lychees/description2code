//--------Aman Gupta--------//
#include<bits/stdc++.h>
using namespace std;
#define M 1000000007
void nextgreater(int h[],int ng[],int n)
{
	stack<int> s;
	s.push(0);
	for(int i=1;i<n;i++)
	{
		while(!s.empty()&&h[s.top()]<=h[i]){
			ng[s.top()]=i;
			s.pop();
		}
		s.push(i);
	}
	while(!s.empty())
	{
		ng[s.top()]=n;
		s.pop();
	}
}
void prevgreater(int h[],int pg[],int n)
{
	stack<int> s;
	s.push(n-1);
	for(int i=n-2;i>=0;i--)
	{
		while(!s.empty()&&h[s.top()]<=h[i])
		{
			pg[s.top()]=i;
			s.pop();
		}
		s.push(i);
	}
	while(!s.empty())
	{
		pg[s.top()]=-1;
		s.pop();
	}
}
int driverfunc(int h[],int n)
{
	int ng[n],pg[n];
	int gap[n];
	nextgreater(h,ng,n);
	prevgreater(h,pg,n);
	long long int maxx=INT_MIN;
	int ans=-1;
	for(long long int i=0;i<n;i++)
	{
		long long int diff=ng[i]-i;
		if(ng[i]==n)
			diff-=1;
		diff+=i-pg[i];
		if(pg[i]==-1)
			diff-=1;
		//cout<<i<<"  "<<diff<<"  "<<diff*(i+1)<<endl;
		long long int pro=(diff*(i+1))%M;
		if(maxx<pro){
			ans=i+1;
			maxx=pro;
		}
	}
	return ans;
}
int main()
{
	int t,n,h[100005];
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(int i=0;i<n;i++)
			cin>>h[i];
		cout<<driverfunc(h,n)<<endl;
	}
	return 0;
}