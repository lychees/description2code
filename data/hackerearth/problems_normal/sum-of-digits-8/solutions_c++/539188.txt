#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;


#define ll long long
#define ff first
#define ss second
#define mpa make_pair
#define MOD 1000000007
#define pb push_back
#define lld I64d
#define MXN 1000000

int bitcnt(int mask){return __builtin_popcount(mask);}
int SET(int N,int pos){	return N=N | (1<<pos);}
int RESET(int N,int pos){	return N= N & ~(1<<pos);}
int check(int N,int pos){	return (N & (1<<pos));}
int toggle(int N,int pos){if(check(N,pos))return N=RESET(N,pos);return N=SET(N,pos);}
void PRINTBIT(int N){	printf("("); for(int i=6;i>=1;i--)	{bool x=check(N,i);cout<<x;}	puts(")");}
int mod(int a, int b) { return a - a/b * b;}

ll dp[20][140];
bool vis[20][140];
ll A;
ll B;
int S;


ll rec(int pos, int sum)
{
	if(pos == 0) {
		if(sum == 0)
			return 1;
		return 0;
	}
	
	if(vis[pos][sum])
		return dp[pos][sum];
	vis[pos][sum] = true;
	
	ll ans = 0;
	
	for(int i = 0; i < 10; ++i) {
		if(sum - i >= 0)
			ans += rec(pos - 1, sum - i);
	}
	
	return dp[pos][sum] = ans;
}

ll solve(ll data)
{
	//memset(vis, false, sizeof vis);
	
	char cad[100];
	sprintf(cad, "%lld", data);
	
	int len = strlen(cad);
	int rem = len;
	int sum = S;
	ll ans = 0;
	
	for(int i = 0; i < len; ++i) {
		rem--;
		int dig = cad[i] - '0';
		for(int j = 0; j < dig; ++j) {
			if(sum - j >= 0)
				ans += rec(rem, sum - j);
		}
		
		sum -= dig;
	}
	
	return ans;
}

int main()
{
	memset(vis, false, sizeof vis);
	scanf("%lld%lld%d", &A, &B, &S);
	ll ans1 = solve(B + 1) - solve(A);
	
	//cout<<" 
	
	printf("%lld\n", ans1);
	
	ll ans2 = 0;
	
	ll aa = solve(A);
		
	while(B - A >= 4) {
		ll mid = (A + B)/2;
		ll mm = solve(mid + 1);
		
	//	cout<<"A = " << A <<" mid = " << mid <<" B = " << B <<" mm = " << mm << " aa = " << aa <<"\n"; 
		
		if(mm - aa >= 1) {
			B = mid;
		} else
			A = mid;
	}
	
	//cout<<"A = " << A << " B = " << B <<"\n";
	
	for(ll i = A; i <= B; ++i) {
		if(solve(i + 1) - aa >= 1) {
			ans2 = i;
			break;
		}
	}
	
	printf("%lld\n", ans2);
}
