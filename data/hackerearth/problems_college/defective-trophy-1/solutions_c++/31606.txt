//Data Structure includes
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
//Other Includes
#include<iostream>
#include<algorithm>
#include<iomanip>
#include<utility>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
//some common functionn
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
#define FOR(i,a,b)              for(int i=a;i<b;i++)
#define FORs(i,a,b)             for(int i=a;i>=b;i--)
#define fill(a,v)               memset(a,v,sizeof a)
#define abS(x)                  ((x)<0?-(x):(x))
#define mP                      make_pair
#define pB                      push_back
#define error(x)                cout << #x << " : " << (x) << endl
#define ALL(a)                  (a).begin(),(a).end()
#define SZ(a)                   ((int) a.size())
#define SORT(a)                  sort(ALL(a))

using namespace std;

typedef long long LL;



void chekarre(int * arr,int n)
{
    cout<<"[";
    for(int i=0;i<n;i++)
        cout<<arr[i]<<" ";
    cout<<"]"<<endl;
}

bool comp(int i,int j) { return (i>j); }

/*int a[150]={0};
int b[150]={0};

int main()
{
   // freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);

    int n;
    string s1,s2;
    cin>>n;
    cin >>s1;
    cin >>s2;
    ls1=s1.length();
    ls2=s2.length();
    for(int i=0;i<ls1;i++){
        s1[i]=tolower(s1[i]);
        a[s1[i]]++;
        //b[s[i]]++;
    }
    for(int j=0;j<ls2;j++){
        s2[j]=tolower(s2[j]);
        b[s2[j]]++;
    }
    for(i=0;i<150;i++){
        if(a[i]!=b[i]){

        }
    }
    return 0;
}*/

int main(){

    int t,n,k;
    cin>>t;
    while(t--)
    {

        cin>>n;
        if(n==0 || n==1){cout<<0<<endl;}
        else{
            k=1;
            while(1){
            if(pow(3,k)>=n){
            cout<<k<<endl;
            break;
            }
            else
            k++;
          }
        }
        }


return 0;
}
