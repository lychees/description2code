#include <bits/stdc++.h>
using namespace std;

int a, h;

string getRotate(string input)
{
    int curr = input.size();
    curr -= h;
    return input.substr(curr) + input.substr(0, curr);
}

string getAdd(string input)
{
    for (int i = 1; i < input.size(); i+= 2)
    {
        input[i] = (((input[i] - '0') + a) % 10) + '0';
    }
    return input;
}

string answer;

unordered_set<string> isDoing;

void getBest(int index, string str)
{
    if (str < answer)
    {
        answer = str;
    }

    if (isDoing.find(str) == isDoing.end())
    {
        isDoing.insert(str);

        string lastA, lastB;

        lastA = str;
        lastB = str;

        for (int i = 1; i <= 30; i++)
        {
            lastA = getRotate(lastA);
            getBest(index+1, lastA);

            lastB = getAdd(lastB);
            getBest(index+1, lastB);
        }
    }

}

int main()
{
    #ifdef VSP4
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif // VSP4

    int t, n, i, j, ans;
    string str;

    cin >> t;

    while (t--)
    {
    	string str;

    	cin >> str;
    	cin >> a >> h;

    	while (h > str.size())
    	{
            h -= str.size();
    	}

        isDoing.clear();

        answer = str;

        getBest(0, str);

    	cout << answer << "\n";

    }
    return 0;
}
