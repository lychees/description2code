#include<bits/stdc++.h>
using namespace std;

#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

#define mygc(c) (c)=getchar_unlocked()
#define mypc(c) putchar_unlocked(c)
void reader(int *x){int k,m=0;*x=0;for(;;){mygc(k);if(k=='-'){m=1;break;}if('0'<=k&&k<='9'){*x=k-'0';break;}}for(;;){mygc(k);if(k<'0'||k>'9')break;*x=(*x)*10+k-'0';}if(m)(*x)=-(*x);}
template <class T, class S> void reader(T *x, S *y){reader(x);reader(y);}
void writer(int x, char c){int s=0,m=0;char f[10];if(x<0)m=1,x=-x;while(x)f[s++]=x%10,x/=10;if(!s)f[s++]=0;if(m)mypc('-');while(s--)mypc(f[s]+'0');mypc(c);}
template<class T> void writerLn(T x){writer(x,'\n');}

#define MD 1000000007
inline unsigned mulmod(unsigned a, unsigned b, unsigned md){unsigned d,r;asm volatile("mull %4;" "divl %2;" : "=d" (r), "=a" (d) : "r" (md), "a" (a), "d" (b));return r;}

int N, A[200000];
int pw[210000];

int main(){
  int i, res, tmp;

  reader(&N);
  rep(i,N) reader(A+i);

  pw[0] = 1;
  REP(i,1,N+1){
    pw[i] = pw[i-1]<<1;
    if(pw[i] >= MD) pw[i] -= MD;
  }

  res = 0;
  rep(i,N){
    if(i==0) tmp = 1; else tmp = mulmod(pw[i-1],i+2,MD);
    res += mulmod(mulmod(tmp, A[i], MD), pw[N-1-i], MD);
    if(res >= MD) res -= MD;
  }
  writerLn(res);

  return 0;
}
