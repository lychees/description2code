def count(i, j, k) :
    if i < 0 or j < 0 or k < 0 : return 0
    
    if dp[i][j][k] >= 0: return dp[i][j][k]
    
    if block[i][j] :
        dp[i][j][k] = (count(i - 1, j, k - 1) + count(i, j - 1, k - 1)) % 1000007
        
    else :
        dp[i][j][k] = (count(i - 1, j, k) + count(i, j - 1, k)) % 1000007
    
    return dp[i][j][k]
 
N, M, K = map(int, raw_input().strip().split())
block = [[False for j in xrange(M)] for i in xrange(N)]
for k in xrange(K) :
    a, b = map(int, raw_input().strip().split())
    block[a - 1][b - 1] = True
    
dp = [[[-1 for k in xrange(K + 1)] for j in xrange(M)] for i in xrange(N)]
dp[0][0][0] = 0 if block[0][0] else 1
for k in xrange(1, K + 1) :
    dp[0][0][k] = 1
print count(N - 1, M - 1, 0),   
for k in xrange(1, K + 1) :
    print (count(N - 1, M - 1, k) - count(N - 1, M - 1, k - 1)) % 1000007,