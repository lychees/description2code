#include <iostream>
#include <math.h>
using namespace std;

int smallestp(int n)
{
	if(n%2==0)
	 return 2;
	for(int i=3;i*i<=n;i=i+2)
	{
			if(n%i==0)
				return i;
	}
	return n;
}
long long sumofdiv(int n)
{
	int i;
	int sum=1;
	if(n==1)
		return 0;
	for(i=2;i<=sqrt(n);i++)
	{
		if (n%i==0)
		{
			sum= sum + i + n/i;
			if(i == n/i)
				sum -= i;
 
		}
	}
	return sum;
	
}
long long a[100001];
long long sf,gf;
void init()
{
	
	a[0]=0;
	a[1]=0;
	long long pref=0;
	long long preg=0;
	for(int i=2;i<=100000;i++)
	{
		long long crrf=pref+smallestp(i);
		long long crrg=preg+sumofdiv(i);
		a[i]=(crrf+crrg)%i;
		pref=crrf;
		preg=crrg;
	}
	//for(int i=2;i<=10;i++)
	//	cout<<a[i]<<" ";
	sf=pref;
	gf=preg;
	
}
long long solve(int n)
{
	long long ans;
	long long pref=sf;
	long long preg=gf;
	for(int i=100001;i<=n;i++)
	{
		long long newf=pref+smallestp(i);
		long long newg=preg+sumofdiv(i);
		pref=newf;
		preg=newg;
	}
	ans=(pref+preg)%n;
	return ans;
}
int main()
{
    int T;
    cin>>T;
    init();
    while(T--)
    {
    	int n;
    	cin>>n;
    	if(n<=100000)
    		cout<<a[n]<<"\n";
    	else
    		cout<<solve(n)<<"\n";
    }
    return 0;
}
