#include<bits/stdc++.h>
using namespace std;
long int color[100005];
map<long int,long int>mp;
map<long int,long int>mip;

long int find_Distance(long int n)
 {
     mp.clear();
     long int maxx=0,i,strt=0,end=0;
     mip.clear();
     map<long int,long int>:: iterator itr,itr1,itr2;
     map<long int,long int>:: reverse_iterator itr3;

     for(i=0;i<n;i++)
       {
           itr=mp.find(color[i]);

           if(itr==mp.end())
           {

               mp.insert(make_pair(color[i],i));
               mip.insert(make_pair(i,color[i]));
               if(mip.size()>maxx)
                 {
                     maxx=mip.size();
                     itr2=mip.begin();
                     strt=(*itr2).first;
                     itr3=mip.rbegin();
                     end=(*itr3).first;
                 }
           }
           else
           {
               long int val=(*itr).second;
               (*itr).second=i;
               itr1=mip.find(val);
               if(itr1!=mip.end())
               {
                   mip.erase(mip.begin(),itr1);
                   mip.erase(itr1);
               }
               mip.insert(make_pair(i,color[i]));
                if(mip.size()>maxx)
                 {
                     maxx=mip.size();
                     itr2=mip.begin();
                     strt=(*itr2).first;
                     itr3=mip.rbegin();
                     end=(*itr3).first;
                 }
           }

       }

       cout<<strt+1<<" "<<end+1<<endl;
 }

int main()
{
    long int test,i;
    scanf("%ld",&test);
    while(test--)
    {
        long int n;
        scanf("%ld",&n);
        for(i=0;i<n;i++)
          scanf("%ld",&color[i]);
     find_Distance(n);
    }
    return 0;
}
