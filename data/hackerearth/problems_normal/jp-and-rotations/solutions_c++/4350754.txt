#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;


int main() {

	int n = 0; 
	int m = 0;
	cin >> n >> m ;

	vector<long long>initial(n);
	for (int i = 0; i < n; i++) {
		cin >> initial[i];
	}
	
	vector<long long> target(m);
	for (int i = 0; i < m; i++) {
			cin >>  target[i];
	}

	char dir;
	long long steps = 0;
	long long targetpos = 0;
	int i = 0;
	int ans =  -1;
	for (i = 0; i < m; i++) {
		cin >> dir >> steps;
		if (dir == 'L') {
			//if (targetpos < steps)
				targetpos = ((targetpos - steps) + n) % n ;
			//else targetpos = targetpos - steps;
		} else if (dir == 'R') {
			//if (targetpos + steps > (n-1)) 
				targetpos = ((targetpos + steps) + n) % n;
			//else targetpos = targetpos + steps;
		}
		if (initial[0] == target[targetpos]) {
			ans = i + 1;
			break;
	    }
	    //cout << "targetpos" << targetpos << endl;

	}

	cout << ans << endl;

	return 0;

}
