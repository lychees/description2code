#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define debug(...) printf(__VA__ARGS__)
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 200005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}

const int M=33000;
int p[M],q[M],f[1<<10],fac[110],inv[110];
int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=1LL*ans*a%mod;
        b>>=1;a=1LL*a*a%mod;
    }
    return ans;
}
int C(int a,int b){
    ll ans=inv[b];;
    for(int i=0;i<b;i++){
        ans=ans*(a-i)%mod;
    }
    return ans;
}
int main(){
    //ios::sync_with_stdio(0);
    //cout<<fixed<<setprecision(10);
    int T=5,i,j,k,m,n;
    int t=0;
    for(i=2;i<M;i++){
        if(!p[i])q[t++]=i;
        for(j=0;j<t;j++){
            if(1LL*i*q[j]>=M)break;
            p[i*q[j]]=1;
            if(i%q[j]==0){break;}
        }
    }
    fac[0]=1;
    for(i=1;i<=100;i++)fac[i]=1LL*fac[i-1]*i%mod;
    inv[100]=pow(fac[100],mod-2);
    for(i=99;i>=0;i--)inv[i]=1LL*inv[i+1]*(i+1)%mod;
    scanf("%d",&T);
    while(T--){
        int l,r,x;vi v;
        scanf("%d%d%d%d",&n,&l,&r,&x);
        for(i=0;i<t&&q[i]<=x;i++)if(x%q[i]==0){
            k=1;
            while(x%q[i]==0)x/=q[i],k*=q[i];
            v.pb(k);
        }
        if(x>1)v.pb(x);
        m=v.size();
        f[0]=1;
        for(i=1;i<1<<m;i++){
            for(j=0;j<m;j++)if(i>>j&1){f[i]=f[i^(1<<j)]*v[j];break;}
        }
        for(i=0;i<1<<m;i++)f[i]=r/f[i]-(l-1)/f[i];
        ll ans=0;
        for(i=0;i<1<<m;i++){
            j=(1<<m)-1-i;
            int cnt=0;
            for(k=j;k>=0;k=(k-1)&j){
                if(__builtin_popcount(k)&1)cnt-=f[k];
                else cnt+=f[k];
                if(k==0)break;
            }
            k=__builtin_popcount(j);
            if(k&1)ans-=C(cnt+n-1,n);
            else ans+=C(cnt+n-1,n);
        }
        ans%=mod;
        if(ans<0)ans+=mod;
        printf("%d\n",ans);
    }
    return 0;
}