#include <iostream>
#include <vector>
#include <fstream>
#include <climits>
#include <cstdio>

using namespace std;

void parse_test_case(vector<vector<int> > &costs)
{
	int count = 0;
	cin >> count;
	// printf("# of houses: %d\n", count);
	for (int i=0; i<count; i++) {
		costs.push_back(vector<int>(3));
		cin >> costs.back()[0];
		cin >> costs.back()[1];
		cin >> costs.back()[2];
	}
}

int getMinCost(vector<vector<int> > &costs)
{
	int len = costs.size();
	vector<vector<int> > minCosts;
	for (int i=0; i<len; i++)
		minCosts.push_back(vector<int>(3));
	minCosts[0][0] = costs[0][0];
	minCosts[0][1] = costs[0][1];
	minCosts[0][2] = costs[0][2];
	for (int i=1; i<len; i++) {
		for (int c=0; c<3; c++) {
			int minc = INT_MAX;
			for (int oc=0; oc<3; oc++) {
				if (oc == c)
					continue;
				minc = min(minCosts[i-1][oc] + costs[i][c], minc);
			}
			minCosts[i][c] = minc;
		}
	}
	return min(minCosts[len-1][0], min(minCosts[len-1][1], minCosts[len-1][2]));
}

int main()
{
    int nr_tests;
    cin >> nr_tests;
	// printf("# of tests: %d\n", nr_tests);
    for (int i=0; i<nr_tests; i++) {
    	vector<vector<int> > costs;
    	parse_test_case(costs);
    	cout << getMinCost(costs) << endl;
    }
    return 0;
}
