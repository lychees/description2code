#include<bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
#define ll long long
#define mod 1000000007
#define bitcount    __builtin_popcountll
int a[1003][1003],v[1003][1003],s,n,m,fact[1000006];
void dfs(int c1,int c2)
{

    if(c1>1)
    {
        if(c2>2&&a[c1-1][c2-2]&&v[c1-1][c2-2]==0)
        {
            v[c1-1][c2-2]=1;
            s++;
            dfs(c1-1,c2-2);
        }
        if(c2<m-1&&a[c1-1][c2+2]&&v[c1-1][c2+2]==0)
        {
            v[c1-1][c2+2]=1;
            s++;
            dfs(c1-1,c2+2);
        }
    }
    if(c1>2)
    {
        if(c2>1&&a[c1-2][c2-1]&&v[c1-2][c2-1]==0)
        {
            v[c1-2][c2-1]=1;
            s++;
            dfs(c1-2,c2-1);
        }
        if(c2<m&&a[c1-2][c2+1]&&v[c1-2][c2+1]==0)
        {
            v[c1-2][c2+1]=1;
            s++;
            dfs(c1-2,c2+1);
        }
    }
    if(c1<n)
    {
        if(c2>2&&a[c1+1][c2-2]&&v[c1+1][c2-2]==0)
        {
            v[c1+1][c2-2]=1;
            s++;
            dfs(c1+1,c2-2);
        }
        if(c2<m-1&&a[c1+1][c2+2]&&v[c1+1][c2+2]==0)
        {
            v[c1+1][c2+2]=1;
            s++;
            dfs(c1+1,c2+2);
        }
    }
    if(c1<n-1)
    {
        if(c2>1&&a[c1+2][c2-1]&&v[c1+2][c2-1]==0)
        {
            v[c1+2][c2-1]=1;
            s++;
            dfs(c1+2,c2-1);
        }
        if(c2<m&&a[c1+2][c2+1]&&v[c1+2][c2+1]==0)
        {
            v[c1+2][c2+1]=1;
            s++;
            dfs(c1+2,c2+1);
        }
    }
}
int main()
{
   // freopen("in1CAs.txt","r",stdin);
   // freopen("out1CAs.txt","w",stdout);
    int t,i,j,k,q,x,y,ans;
    sd(t);
    fact[0]=1;
    for(i=1;i<=1000000;i++)
        fact[i]=(1ll*fact[i-1]*i)%mod;
    while(t--)
    {
        sd(n);
        sd(m);
        sd(q);
        for(i=0;i<=n;i++)
        {
            for(j=0;j<=m;j++)
                a[i][j]=v[i][j]=0;
        }
        for(i=0;i<q;i++)
        {
            sd(x);
            sd(y);
            a[x][y]=1;
        }
        ans=1;
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=m;j++)
            {
                if(a[i][j]==1&&v[i][j]==0)
                {
                    v[i][j]=1;
                    s=1;
                    dfs(i,j);
                    ans=(1ll*ans*fact[s])%mod;
                }
            }
        }
        printf("%d\n",ans);
    }
    return 0;
}
