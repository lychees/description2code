#include <cstdio>
#include <queue>
#include <iostream>
#include <algorithm>
#include <climits>
using namespace std;
#define pii pair<int,int>
struct node {
	int stx,sty;
	int edx,edy;
	bool vis;
	double slop;
};
#define eps 1e-9

node arr[105];
bool vis[105];
int n;

double findy(int ind , int x) {
	double ex = (arr[ind].edy-arr[ind].sty)*1.0;
	ex /= ((arr[ind].edx-arr[ind].stx)*1.0);
	ex *= (x-arr[ind].stx);
	ex += arr[ind].sty;

	return ex;
}
int find_seg(int x, int y) {
	int ind = -1;
	double prey = -1.0;

	for(int i = 0; i < n; i++) {
		double ny = findy(i,x);
		if(!arr[i].vis && arr[i].stx <= x && arr[i].edx >= x && ((y+eps)-ny) > 0){
			if(ind == -1 || ny-prey > 0){ ind = i; prey = ny;}
		}
	}
	return ind;
}
int main()
{
	int x,x1,x2,y1,y2;
	scanf("%d%d", &x,&n);
	pii st[n],ed[n];
	int y = INT_MAX;
	for(int i = 0; i < n; i++) {
		 scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		 arr[i].stx = x1;
		 arr[i].sty = y1;
		 arr[i].edx = x2;
		 arr[i].edy = y2;
		 arr[i].vis = false;
		 arr[i].slop = (double)(y2-y1)/(double)(x2-x1);
	}

	while(true) {
		int ind = find_seg(x,y);
		if(ind == -1) break;
		arr[ind].vis = true;
		//cout << ind << " ind" << endl;
		if(arr[ind].sty > arr[ind].edy) {x = arr[ind].edx; y = arr[ind].edy;}
		else {x = arr[ind].stx; y = arr[ind].sty;}
	}
	printf("%d\n", x);
return 0;
}