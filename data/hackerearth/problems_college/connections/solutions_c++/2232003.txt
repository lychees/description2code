#include<bits/stdc++.h>
using namespace std;

vector <int> vec[10013];
int visit[100013];
map <int, int> mp;

void dfs (int x, int y) {
	mp[x] = y;
	visit[x] =1;
	for(int i=0;  i<vec[x].size(); i++) {
		int v = vec[x][i];
		if(!visit[v])
			dfs(v,y);
	}
}

int main(){
	long long int n, m;
	scanf("%Ld%Ld",&n,&m);

	for(int i=0;  i<m ; i++) {
		int x, y;
		scanf("%d%d",&x,&y);
		vec[x].push_back(y);
		vec[y].push_back(x);
	}

	for(int i=1; i<=n;  i++){
		if(!visit[i])
			dfs(i,i);
	}

	int q;
	scanf("%d",&q);
	while(q--) {
		int u, v;
		scanf("%d%d",&u,&v);
		if(mp[u] != mp[v])
			printf("No Connection\n");
		else {
			bool flag = false;
			for(int i = 0 ; i < vec[u].size() ; i++) {
				if(vec[u][i] == v)
					flag = true;
			}
			if(flag == true) {
				printf("Direct Connection\n");
			}
			else
				printf("Indirect Connection\n");
			}
		}
	return 0;
}
