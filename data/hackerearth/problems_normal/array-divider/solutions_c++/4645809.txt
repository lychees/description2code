#ifndef PRAGMA_COMMENT_LINKER
#pragma comment(linker, "/STACK:199999999")
#endif

#define  _CRT_SECURE_NO_WARNINGS
//#define  NDEBUG

#pragma warning(error : 4700)
#pragma warning(error : 4715)
#pragma warning(error : 4716)

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <chrono>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <functional>
#include <limits>
#include <list>
#include <map>
#include <memory>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define all(v)                  v.begin(), v.end()
#define db(x)                   cout << #x << " = " << (x) << "\n"
#define fend(x)                 ((x) & ((x)+1)) - 1
#define fenu(x)                 (x) | ((x)+1)
#define forn(i, n)              for (int i = 0; i < (int)n; ++i)
#define for1n(i, _b_, _e_)	for (int i = _b_; i < (int)_e_; ++i) 		                                         
#define ft                      first
#define len(s)                  s.length()
//#define max_value(type)         std::numeric_limits<type>::max()
//#define min_value(type)         std::numeric_limits<type>::min()
#define mp                      std::make_pair
#define pob                     pop_back
#define pof                     pop_front
#define popcnt                  __popcnt
#define popcnt64                __popcnt64
#define pub                     push_back
#define puf                     push_front
#define sc                      second

#ifdef _WIN32
#define LL "%I64d"
#else
#define LL "%lld"
#endif

typedef double                  dbl;
typedef long double             ldbl;
typedef unsigned int			uint;
typedef long long               ll;
typedef unsigned long long      ull;

const   long long               MILLER_RABIN = 3215031751;
const   long double             PI = 3.14159265358979323846;

inline int lg2(ll n) { int h = 0; while ((1ll << h) < n) ++h; return h; }

//struct config_io { config_io() { cin.tie(nullptr); ios_base::sync_with_stdio(false); } } cnf_io;
//struct config_rand { config_rand() { srand(chrono::duration_cast<chrono::nanoseconds>(chrono::high_resolution_clock::now().time_since_epoch()).count()); } } cnf_rand;

//namespace std
//{
//	template<>
//	struct hash < pair<int, int> > {
//		size_t operator()(const pair<int, int> &x) const {
//			return (x.first * 31 + x.second) % ((int)1e9 + 7);
//		}
//	};
//}

inline void scan(int &x) { scanf("%d", &x); }
inline void scan(long long &x) { scanf(LL, &x); }
inline void scan(double &x) { scanf("%lf", &x); }
inline void scan(long double &x) { scanf("%Lf", &x); }
inline void scan(int &x, int &y) { scanf("%d%d", &x, &y); }
inline void scan(int &x, int &y, int &z) { scanf("%d%d%d", &x, &y, &z); }
inline void print(const int x) { printf("%d\n", x); }
inline void print(const long long x) { printf(LL"\n", x); }
inline void print(const double x) { printf("%lf\n", x); }
inline void print(const long double x) { printf("%Lf\n", x); }
inline void print(const int x, const int y) { printf("%d %d\n", x, y); }
inline void print(const int x, const int y, const int z) { printf("%d %d %d\n", x, y, z); }

inline void tobin(long long x) { cout << bitset<64>(x) << endl; }
template<class T> inline void trace(T collection) { for (auto elem : collection) { cout << elem << endl; } }

const ll INF = 1e18;

struct trip {
	ll ans, sq, sum;
	trip() : ans(INF), sq(INF), sum(INF) {}
	trip(ll ans, ll sq, ll sum) : ans(ans), sq(sq), sum(sum) {}
	bool operator<(const trip &o) { return ans < o.ans; }
};

trip dp[510][310];
                                                                                               			
void solve() {
	int n, k;
	scan(n, k);
	vector<int> a(n+1);
	for1n(i, 1, n+1) scan(a[i]);
	vector<ll> s(n+1);
	s[0] = 0;
	for1n(i, 1, n+1) s[i] = s[i-1] + a[i];
	dp[0][0] = trip(0, 0, 0);
	for1n(i, 1, n+1) {
		for1n(j, 1, k+1) {
			forn(l, i) {
				trip prev = dp[l][j-1];
				if(prev.ans == INF) continue;
				ll Si = s[i] - s[l];
				ll nans = prev.ans + j*Si*Si + Si*Si + prev.sq - 2*Si*(Si + prev.sum);
				ll nsq = prev.sq + Si*Si;
				ll nsum = prev.sum + Si;
				trip nstate = trip(nans, nsq, nsum);
				if(nstate < dp[i][j]) {
					dp[i][j] = nstate;
				}
			}
		}
	}
	print(dp[n][k].ans);
	//print(dp[n][k].sq);
	//print(dp[n][k].sum);
}

int main() {
#ifdef HOME
#define TASK "home"
	freopen(TASK".in", "r", stdin); freopen(TASK".out", "w", stdout);
#endif

	int tt = 1;
	//scan(tt);
	forn(i, tt) {
		solve();
	}

#ifdef HOME	
	cout << "\n\nTime: " << clock() / (double)CLOCKS_PER_SEC << endl;
#endif
	return 0;
}