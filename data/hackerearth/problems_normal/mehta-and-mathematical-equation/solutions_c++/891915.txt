/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <complex>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FF(i,a,n) for(i=(a);i<(n);++i)
#define REP(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
#define MAX(a,b) ((a)>(b)?(a):(b))
ill ABS(ill a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif
}

/* Input opener ends */

#define BITS 61
ill n;
int bin[BITS];

#define MOD 1000000007
ill dp[62][5][2];

ill f(int idx,int carry,int And) {
    if ( idx == BITS ) {
        if ( carry || !And ) return 0;
        return 1;
    }
    ill &res = dp[idx][carry][And];
    if ( res != -1 ) return res;
    res = 0;
    
    F(i,0,2) {
        F(j,0,2) {
            F(k,0,2) {

                int sum = carry+i+j+k;
                int base = sum%2;
                int ext = sum/2;

                if ( base == bin[idx] ) {
                    res += f(idx+1,ext,And|(i&j&k));
                }

            }
        }
    }

    res %= MOD;
    return res;
}

int main() {
   // input();

    int t; S(t);
    while ( t-- ) {
        Sl(n);
        F(i,0,BITS) {
            bin[i] = 0;
            if ( n&(1LL<<i) ) bin[i] = 1;
        }
       // F(i,0,BITS) cout << bin[i]; cout << endl;

        M(dp,-1);
        printf("%lld\n", f(0,0,0) );

    }
    
    return 0;
}