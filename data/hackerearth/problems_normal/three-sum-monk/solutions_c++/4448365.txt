#include <bits/stdc++.h>
using namespace std;
void fillCubes(double cubes[])
{
	for (int i = 0; i < 20; ++i)
	{
		cubes[i] = (double)i*(double)i*(double)i;
	}
	return;
}
int main()
{
	int t;
	scanf("%d",&t);
	assert(t >= 1 && t <= 40);
	double cubes[20];
	fillCubes(cubes);
	while(t--)
	{
		int n;
		scanf("%d",&n);
		assert(n >= 3 && n <= 1000);
		double a[510]={0};
		map<double, int> mp;
		for (int i = 1; i <= n; ++i)
		{
			scanf("%lf",&a[i]);
			assert(a[i] >= 1 && a[i] <= 2000);
			mp[a[i]]++;
		}
		sort(a,a+n+1);
		double sum,tmp;
		int t1 = 0,t2 = 0;
		int count = 0;
		for (int i = 1; i <= n-2;)
		{
			t2 = 0;
			for (int j = i+1; j <= n-1;)
			{
				sum = a[i]+a[j];
				for (int k = 0; k < 20; ++k)
				{
					tmp = cubes[k]-sum;
					if(tmp>=a[j] && mp.find(tmp)!=mp.end())
					{
						if(a[j] != tmp)
							count+=mp[tmp];
						else if(a[i] != a[j] && a[j] == tmp)
							count+=(mp[tmp]-1-t2);
						else if(a[i] == a[j] && a[j] == tmp)
							count+=(mp[tmp]-2-t2-t1);
					}
				}
				++j;
				if(a[j] == a[j-1])
					t2++;
				else
					t2=0;
			}
			++i;
			if(a[i] == a[i-1])
				t1++;
			else
				t1=0;
		}
		double den = n*(n-1)*(n-2);
		den /= 6.0;
		printf("%.9lf\n", (double)count/den);
	}
	return 0;
}