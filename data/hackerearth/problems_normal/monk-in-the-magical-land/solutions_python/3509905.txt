def gcd(x,y):
    if y==0:
        return x
    return gcd(y,x%y)
def f(index,count,val):
    global n
    global k
    global keys
    global chests
    global l
    global d
    if (index,count,val) in d:
        return d[(index,count,val)]
    if count==k:
        #print "val =",bin(val)[2:],
        temp=val
        s=0
        x=0
        while temp>0:
            if temp&1==1:
                s+=z[x]
            x+=1
            temp=temp>>1
        return s
    if n-index<k-count:
        return -99999999999999999
    d[(index,count,val)]=max([f(index+1,count+1,val|l[index]),f(index+1,count,val)])
    return d[(index,count,val)]
t=input()
for kk in range(0,t):
    n,m,k=(int(i) for i in raw_input().split())
    keys=[int(i) for i in raw_input().split()]
    chests=[int(i) for i in raw_input().split()]
    z=[int(i) for i in raw_input().split()]
    l=[0]*n
    d={}
    for i in range(0,n):
        for j in range(0,m):
            g=gcd(keys[i],chests[j])
            if g!=1:
                l[i]=l[i]|(1<<j)
    #print l
    #assert False
    print f(0,0,0)