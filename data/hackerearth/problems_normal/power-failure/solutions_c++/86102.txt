#include <iostream>
#include <algorithm>
using namespace std;

#define LIMIT 100001

bool isPrime[LIMIT];
int left_e[LIMIT];

void seive(){

	for(int i = 0; i<LIMIT; i++)
		isPrime[i] = true;

	isPrime[1] = false;

	for(int j = 2; j<10000; j++){
		if(isPrime[j]){
			for(int k = j*j; k<LIMIT; k = k + j){
				isPrime[k] = false;
			}
		}
	}

   /* for(int i = 2; i<500; i++)
        if(isPrime[i])
           cout<<i<<"   ";
    cout<<"\n"; */
}


int main()
{

   seive();

   /* precomputation */

    left_e[LIMIT-1] = 1;

    for(int i = LIMIT-2; i>=1; i--){
    	if(!isPrime[i])
    		left_e[i] = left_e[i+1] + 1;
    	else
    		left_e[i] = left_e[i+1];
    }

    int t;
    cin>>t;


    int s[LIMIT];

    while(t--){

    	int n,m;

    	cin>>n;
    	cin>>m;

    	for(int i = 0; i<n; i++)
    		cin>>s[i];

    	sort(s,s+n);

       /* for(int i = 0; i<n ;i++)
            cout<<s[i]<<"  ";
        cout<<"\n"; */

        long long count = 1;

        for(int i = n-1; i >= 0; i--){
            count = (   count * (long long)(    left_e[s[i]] - left_e[m] + ( isPrime[m] ? 0:1 ) - ( n - 1 - i )   )    ) % 1000000007;
        }

        cout<<count<<"\n";


    }





    return 0;
}
