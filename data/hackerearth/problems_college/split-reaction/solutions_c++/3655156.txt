#include<bits/stdc++.h>
#define MOD 1000000007
using namespace std;
#define ll long long int
ll modmul(ll a, ll b)
{
		ll res = 0;
		ll flag=1;

		if(b == 1) return a;
		if(a==0 || b== 0) return 0;
		if(a<0 || b<0) flag=-1;
		if(a<0) a=-a;
		if(b<0) b=-b;
		//cout<<"a="<<a<<" b="<<b<<endl;
		while(b)
		{
				if(b%2==1) res = (res+a)%MOD;
				a=(a*2)%MOD;
				b/=2;
		}
		//cout<<"return ="<<res<<endl;
		res=res*flag;
		return res%MOD;
}
void _mult(ll M[7][7], ll Md[7][7])
{
		ll R[7][7];
		int i,j,k;
		for(i=0;i<7;++i)
		{
				for(j=0;j<7;++j)
				{
						R[i][j] = 0;
						for(k=0;k<7;++k)
						R[i][j] = (R[i][j] + (M[i][k]+MOD)%MOD * (Md[k][j]+MOD)%MOD)%MOD;
				}
		}
		for(i=0;i<7;++i)
		{
				for(j=0;j<7;++j)
				M[i][j] = R[i][j];
		}
		

}
void _mpow(ll M[7][7], ll p)
{
		if(p==1) return;
		ll RES[7][7];
		int i,j;
		for(i=0;i<7;++i)
		{
				for(j=0;j<7;++j)
				{
						if(i!=j) RES[i][j] = 0;
						else RES[i][j] = 1;
				}
		}
		
		while(p)
		{
				if(p%2==1) _mult(RES,M);
				_mult(M,M);
				p/=2;
		}
		for(i=0;i<7;++i)
		{
				for(j=0;j<7;++j)
				M[i][j] = RES[i][j];
		}
}
void mult(ll M[4][4], ll Md[4][4])
{
		ll R[4][4];
		int i,j,k;
		for(i=0;i<4;++i)
		{
				for(j=0;j<4;++j)
				{
						R[i][j] = 0;
						for(k=0;k<4;++k)
						R[i][j] = (R[i][j] + (M[i][k]+MOD)%MOD * (Md[k][j]+MOD)%MOD )%MOD;
				}
		}
		for(i=0;i<4;++i)
		{
				for(j=0;j<4;++j)
				M[i][j] = R[i][j];
		}
		

}
void mpow(ll M[4][4], ll p)
{
		if(p==1) return;
		ll RES[4][4];
		int i,j;
		for(i=0;i<4;++i)
		{
				for(j=0;j<4;++j)
				{
						if(i!=j) RES[i][j] = 0;
						else RES[i][j] = 1;
				}
		}
		
		while(p)
		{
				if(p%2==1) mult(RES,M);
				mult(M,M);
				p/=2;
		}
		for(i=0;i<4;++i)
		{
				for(j=0;j<4;++j)
				M[i][j] = RES[i][j];
		}
}
ll _fib(int n)
{
		if(n==0) return 1;
		if(n==1) return 3;
		if(n==2) return 7;
		

		ll M[7][7]={{0,0,1,1,0,0,0},{1,0,0,0,0,0,0},{0,1,0,0,0,0,0},{0,0,0,1,1,-1,1},{0,0,0,1,0,0,0},{0,0,0,0,1,0,0},{0,0,0,0,0,0,1}};
		int i,j;
		/*for(i=0;i<7;++i)
		{
				for(j=0;j<7;++j)
				cout<<M[i][j]<<" ";
				cout<<endl;
		}*/
		_mpow(M,n-1);
		return ((M[1][0]*7 +MOD)%MOD + (M[1][1]*3+MOD)%MOD + M[1][2]%MOD + (M[1][3]*6+MOD)%MOD + (M[1][4]*3+MOD)%MOD + (M[1][5]*3+MOD)%MOD + M[1][6]+MOD)%MOD;
}
ll fib(int n)
{
		if(n==0) return 1;
		if(n==1 || n==2) return 3;
		

		ll M[4][4]={{1,1,-1,1},{1,0,0,0},{0,1,0,0},{0,0,0,1}};
		mpow(M,n-1);
		return ((M[1][0]*3 +MOD)%MOD + (M[1][1]*3+MOD)%MOD + (M[1][2]+MOD)%MOD + (M[1][3]+MOD)%MOD)%MOD;
}
int main()
{
		int t;
		scanf("%d",&t);
		while(t--)
		{
				ll n;
				cin>>n;
				
				
				cout<<fib(n)<<" "<<_fib(n)<<endl;
				
		}

		/*ll M[4][4] = {2,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1};
		mpow(M,2);
		int i,j;
		for(i=0;i<4;++i)
		{
				for(j=0;j<4;++j)
				{
						cout<<M[i][j]<<" ";
				}
				cout<<endl;
		}*/
		return 0;
}

