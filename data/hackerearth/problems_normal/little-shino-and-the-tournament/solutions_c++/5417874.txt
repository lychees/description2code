#include <bits/stdc++.h>
using namespace std;

#define _p(...) (void)printf(__VA_ARGS__)
#define forr(x,arr) for(auto&& x:arr)
#define _overload3(_1,_2,_3,name,...) name
#define _rep2(i,n) _rep3(i,0,n)
#define _rep3(i,a,b) for(int i=int(a);i<int(b);++i)
#define rep(...) _overload3(__VA_ARGS__,_rep3,_rep2,)(__VA_ARGS__)
#define _rrep2(i,n) _rrep3(i,0,n)
#define _rrep3(i,a,b) for(int i=int(b)-1;i>=int(a);i--)
#define rrep(...) _overload3(__VA_ARGS__,_rrep3,_rrep2,)(__VA_ARGS__)
#define ALL(x) (x).begin(), (x).end()
#define BIT(n) (1LL<<(n))
#define SZ(x) ((int)(x).size())
#define fst first
#define snd second
using ll=long long;using pii=pair<int,int>;using vb=vector<bool>;
using vi=vector<int>;using vvi=vector<vi>;using vvvi=vector<vvi>;
using vl=vector<ll>;using vvl=vector<vl>;using vvvl=vector<vvl>;
using vd=vector<double>;using vvd=vector<vd>;using vvvd=vector<vvd>;
using vpii=vector<pii>;using vvpii=vector<vpii>;using vvvpii=vector<vvpii>;

void Main() {
  int N, Q;
  scanf("%d%d", &N, &Q);
  vi K(N);
  rep(i, N) scanf("%d", &K[i]);

  int losers = 0;
  vi ans(N);
  vb lose(N);

  auto sim = [&]() {
    vi ps;
    rep(i, N) if (!lose[i]) {
      ps.push_back(i);
      if (SZ(ps) == 2) {
        int p1 = ps[0];
        int p2 = ps[1];
        ans[p1]++;
        ans[p2]++;
        if (K[p1] > K[p2]) lose[p2] = 1;
        else lose[p1] = 1;
        ps.pop_back();
        ps.pop_back();
        losers++;
      }
    }
  };

  while (losers < N-1) {
    sim();
  }

  //cout << "ans:"; rep(ii,SZ(ans)) cout << ' ' << ans[ii]; cout << endl;

  while (Q--) {
    int x;
    scanf("%d", &x);
    x--;
    _p("%d\n", ans[x]);
  }
}
int main() { cin.tie(0); ios::sync_with_stdio(false); Main(); return 0; }
