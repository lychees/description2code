/* Aman Varshney , ZHCET, AMU Computer Engineering */
#include<bits/stdc++.h>
#define sc(n) scanf("%lld",&n)
using namespace std;
typedef long long int ll;
int main()
{
    ll n,t,a,b,i,j,k,case_no;
    ll odd,even;
    sc(t);
    for(case_no=1; case_no<=t; case_no++)
    {
        sc(n);
        map<ll,list<ll> > alist;
        map<ll,bool> check;
        map<ll,ll> level;
        set<ll> vertex;

        for(i=0; i<n; i++)
        {
            sc(a);
            sc(b);
            alist[a].push_back(b);
            alist[b].push_back(a);
            check[a]=false;
            check[b]=false;
            level[a]=0;
            level[b]=0;
            vertex.insert(a);
            vertex.insert(b);
        }
        set<ll>::iterator s_itr;
        ll ans = 0;
        for(s_itr=vertex.begin(); s_itr != vertex.end(); s_itr++)
        {
            a = (*s_itr);
            //cout<<"a "<<a<<endl;
            if(check[a]== false)
            {
                odd=0, even=0;
                list<ll> q;
                level[a] = 1;
                check[a]= true;
                odd++;
                q.push_back(a);
                while(!q.empty())
                {
                    //cout<<"hry";
                    ll u = q.front();
                    q.pop_front();
                    list<ll>::iterator itr = alist[u].begin();
                    for( ; itr!=alist[u].end(); itr++)
                    {
                        ll v = *itr;
                        if(check[v]==false && level[v]!=level[u])
                        {
                            level[v] = level[u]+1;
                            check[v]=true;
                            q.push_back(v);
                            if(level[v]%2 == 0)
                                even++;
                            else
                                odd++;
                        }
                    }
                }
            ans = ans + max(even,odd);
            }
        }
        printf("Case %lld: %lld\n",case_no,ans);

    }
    return 0;

}
