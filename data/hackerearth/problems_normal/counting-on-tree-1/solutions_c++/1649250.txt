#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v; ll w; };

ll MOD = 1000000007;
ll _MOD = 1000000009;
double EPS = 1e-10;
int INF = INT_MAX / 2,K;

void f(int u, int p, vector<vector<int> >& G, vector<int>& a, vector<vector<int> >& dp, vector<int>& x) {
	dp[u][a[u]] = 1;
	x[u] = 2;
	for (int i = 0; i < G[u].size(); i++) {
		int v = G[u][i];
		if (v == p) continue;
		f(v, u, G, a, dp, x);
		for (int j = x[u]; j >= 0; j--)
			for (int k = x[v]; k >= 0; k--)
				if (j + k <= K)
					dp[u][j + k] = (dp[u][j + k] + (ll)dp[u][j] * dp[v][k]) % MOD;
		x[u] = min(K, x[u] + x[v]);
	}
}

int main() {
	int T; cin >> T;
	while (T--) {
		int N; cin >> N >> K;
		vector<int> a(N);
		for (int i = 0; i < N; i++)
			scanf("%d", &a[i]);
		vector<vector<int> > G(N);
		for (int i = 0; i < N - 1; i++) {
			int u, v; scanf("%d%d", &u, &v);
			u--; v--;
			G[u].push_back(v);
			G[v].push_back(u);
		}
		vector<vector<int> > dp(N, vector<int>(max(2, K + 1)));
		vector<int> x(N);
		f(0, -1, G, a, dp, x);
		int sum = 0;
		for (int u = 0; u < N; u++)
			sum = (sum + dp[u][K]) % MOD;
		cout << sum << endl;
	}
}