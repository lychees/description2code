#include<stdio.h>
#include<math.h>
#define mo 1000000007
long long A,B;
long long m[3][3]={{0,0,1},{1,0,0},{0,0,1}};
long long tem[3][3]={{0,0,1},{1,0,0},{0,0,1}};
void mul(long long a[][3])
{
	long long i,j,k;
	/*for(i=0;i<2;i++)
	{
		for(j=0;j<2;j++)
		{
			for(k=0;k<2;k++)
			{
				tem[i][j]=a[i][k]*tem[k][j];
			}
		}
	}*/
	long long q,w,e,r,s,t,w1,r1,t1;
	q=(((a[0][0]*tem[0][0])%mo+(a[0][1]*tem[1][0])%mo)%mo+(a[0][2]*tem[2][0])%mo)%mo;
	w=(((a[0][0]*tem[0][1])%mo+(a[0][1]*tem[1][1])%mo)%mo+(a[0][2]*tem[2][1])%mo)%mo;
	w1=(((a[0][0]*tem[0][2])%mo+(a[0][1]*tem[1][2])%mo)%mo+(a[0][2]*tem[2][2])%mo)%mo;
	e=(((a[1][0]*tem[0][0])%mo+(a[1][1]*tem[1][0])%mo)%mo+(a[1][2]*tem[2][0])%mo)%mo;
	r=(((a[1][0]*tem[0][1])%mo+(a[1][1]*tem[1][1])%mo)%mo+(a[1][2]*tem[2][1])%mo)%mo;
	r1=(((a[1][0]*tem[0][2])%mo+(a[1][1]*tem[1][2])%mo)%mo+(a[1][2]*tem[2][2])%mo)%mo;
	s=(((a[2][0]*tem[0][0])%mo+(a[2][1]*tem[1][0])%mo)%mo+(a[2][2]*tem[2][0])%mo)%mo;
	t=(((a[2][0]*tem[0][1])%mo+(a[2][1]*tem[1][1])%mo)%mo+(a[2][2]*tem[2][1])%mo)%mo;
	t1=(((a[2][0]*tem[0][2])%mo+(a[2][1]*tem[1][2])%mo)%mo+(a[2][2]*tem[2][2])%mo)%mo;
	tem[0][0]=q;
	tem[0][1]=w;
	tem[0][2]=w1;
	tem[1][0]=e;
	tem[1][1]=r;
	tem[1][2]=r1;
	tem[2][0]=s;
	tem[2][1]=t;
	tem[2][2]=t1;
	
}
void power(long long t)
{
	if(t==1)return;
	if(t%2==0)
	{
		power(t/2);
		mul(tem);
	}
	else
	{
		power(t/2);
		mul(tem);
		mul(m);
	}
}
int main()
{
	long long n,t,f0,f1,c;
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld%lld%lld%lld%lld%lld",&n,&f0,&f1,&A,&B,&c);
		//n+=1;
		if(n<=2)
		{
			if(n==1) printf("%lld\n",f0);
			else printf("%lld\n",f1);
		}
		else
		{
			m[0][0]=A;
			m[0][1]=B;
			
			tem[0][0]=A;
			tem[0][1]=B;
			power(n-1);
			//printf("%lld %lld %lld\n%lld %lld %lld\n%lld %lld %lld\n",tem[0][0],tem[0][1],tem[0][2],tem[1][0],tem[1][1],tem[1][2],tem[2][0],tem[2][1],tem[2][2]);
			long long fk2,fk1,fk;
			//fk2=tem[0][0]*f1+tem[0][1]*f0+tem[0][2]*c;
			fk1=(((tem[1][0]*f1)%mo+(tem[1][1]*f0))%mo+(tem[1][2]*c)%mo)%mo;
			//fk=((fk2-c-A*fk1)/B)%mo;
			printf("%lld\n",fk1);
			tem[0][0]=A;tem[0][1]=B;tem[0][2]=1;
			tem[1][0]=1;tem[1][1]=0;tem[1][2]=0;
			tem[2][0]=0;tem[2][1]=0;tem[2][2]=1;
		}
	}
	return 0;
}