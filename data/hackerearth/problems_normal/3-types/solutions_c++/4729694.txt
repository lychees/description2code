#include <bits/stdc++.h>
using namespace std;
const int MAX=1e5+5;
typedef long long ll;
#define pb(a)		push_back(a)
#define pp			pop_back()
#define sz			size()
#define pf(a)		printf("%d",a)
#define sf(a)		scanf("%d",&a)
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef pair<int,pii> node;
pair<int,pii> edg[MAX];
int ar[MAX];
int wo[MAX], men[MAX];
void init(int n){
	for(int i=1;i<=n;i++)ar[i]=i;
}
int root(int a){
	while(a!=ar[a]){
		ar[a]=ar[ar[a]];
		a=ar[a];
	}
	return a;
}
void uni(int a,int b){
	a=root(a);
	b=root(b);
	ar[b]=a;
}
int kru(int m){
	int c=0;
	for(int i=0;i<m;i++){
		int x=edg[i].second.first;
		int y=edg[i].second.second;
		if(root(x)!=root(y)){
			int tmp=edg[i].first;
			if(tmp==3)wo[x]=wo[y]=men[x]=men[y]=1;
			else if(tmp==2){
				if(men[x]&&men[y])c++;
				wo[x]=wo[y]=1;
			}
			else if(tmp==1){if(wo[x]&&wo[y])c++;men[x]=men[y]=1;}
			if(wo[x]&&wo[y]&&men[x]&&men[y])uni(x,y),c++;
		}
	}
	return c;
}
int comp(node a,node b){
	return a.first>b.first;
}
int main()
{
    ios::sync_with_stdio(0);
    int n,m;
    cin>>n>>m;
    int a,b,c;
    init(n);
    for(int i=0;i<m;i++){
    	cin>>a>>b>>c;
    	edg[i]=make_pair(c,pii(a,b));
    }
    sort(edg,edg+m,comp);
    int ans=kru(m);
    for(int i=1;i<=n;i++){
    	if(!(wo[i]&&men[i])){
    		cout<<"-1"<<endl;
    		return 0;
    	}
    }
    cout<<m-ans<<endl;
    return 0;
}
