#include <iostream>
using namespace std;
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <map>
#include <queue>
#include <algorithm>
#include <cmath>
#include <set>
#include <ctime>
#include <stack>
#include <list>
#include <cassert>
#include <iomanip>
#include <deque>
#include <sstream>
#include <fstream>
typedef pair<int,int> pii;
#define rep(i,j,n) for(i=j;i<n;i++)
#define pb push_back
#define ff first
#define ss second 
#define lli long long int
#define get getchar

inline int scan() {
    int n=0,s=1;
    char p=get();
    if(p=='-')  s=-1;
    while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
    if(p=='-') s=-1,p=get();
    while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=get(); }
    return n*s;
}

long long int tree[(int(2e5+100))];
int MaxVal= 1e5 + 10;
long long int read(int idx)
{
	long long int sum=0;
	while(idx)
	{
		sum = max(sum,tree[idx]);
		idx-=(idx&-idx);
	}
	return sum;
}
 
void update(int idx, lli val)
{
	while(idx<=MaxVal)
	{
		tree[idx] = max(val,tree[idx]);
		idx+=(idx&-idx);
	}
}

int main() {
        
    ios::sync_with_stdio(false);
    
    lli answer = 0;
    lli n;
    cin >> n;
    vector < pair<pair<lli,lli>,lli> > a(n);
    
    for (int i = 0; i < n; i++) {
    	cin >> a[i].ss >> a[i].ff.ff;
    	if (a[i].ss < 0) a[i].ss = 0;
    	a[i].ff.ss = i;
    }
    
    
    sort(a.begin(),a.end());
    
    answer = a[0].ss;
    update(a[0].ff.ss+1,a[0].ss);
    
    //cout << a[0].ss << " " << a[0].ff.ff << endl;
    for (int i = 1; i < n; i++) {
    	//cout << a[i].ss << " " << a[i].ff.ff << endl;
    	lli tmp = read(a[i].ff.ss+1);
    	//cout << tmp << " ";
    	tmp += a[i].ss;
    	//cout << tmp << endl;
    	update(a[i].ff.ss+1,tmp);
		answer = max(answer,tmp);    	
    	
    }
    
    cout << answer << endl;
    
    
    return 0;
        
}