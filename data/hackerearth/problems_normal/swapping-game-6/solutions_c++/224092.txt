#include <stdio.h>
#include <iostream>
#include <cstring>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <string>
#include <sstream>
#include <map>
#include <algorithm>
#include <limits>

#define maxN(a,b) ((a>b)?(a):(b))
#define minN(a,b) ((a<b)?(a):(b))
#define INF (int)10e9
#define ABS(n)	((n>0)? n:(-1*n))
#define NINF -(int)10e9
#define eps 10e-9
#define WORDSIZE 31

using namespace std;

typedef vector<int> V;
typedef pair<int,int> PII;
typedef long long ll;
typedef vector<string> VS;
typedef vector<pair<int, int> > VPII;


	  //U  D  L  R
int dx[] = {0, 0, 1, -1};
int dy[] = {1,-1, 0, 0};
// numeric_limits<int>::min();
bool sortPair(const PII p1, const PII p2) {
	if(p1.first > p2.first){
		return false;	
	} else if( p1.second > p2.second ) {
		return false;	
	} 
	return true;
}

int main() {
	int k;
	cin >> k;
	char str[1005], ostr[1005];
	scanf("%s", str);
	int len = strlen(str);
	strcpy( ostr, str);	
	int n = len-1-(len&1);

	int mod, cyc = 0;
	char tstr[1005];
	for(int i = 0; i < len+1; i++){
		int k = 0;
		for(int j = 0; j < len; j+= 2){
			tstr[k++] = str[j];	
		}
		for(int j = n; j > 0; j -= 2){
			tstr[k++] = str[j];	
		}
		tstr[k] = '\0';
		cyc++;
		if( strcmp(tstr, ostr) == 0) {
		//	printf("%s %d\n", tstr, cyc);
			break;
		}
		
		strcpy( str, tstr);
	}
	//printf("%d\n", cyc);
	mod = (k%cyc);
	for(int i = 0 ;i < mod; i++){
		int k = 0;
		for(int j = 0; j < len; j+= 2){
			tstr[k++] = ostr[j];	
		}
		for(int j = n; j > 0; j -= 2){
			tstr[k++] = ostr[j];	
		}
		tstr[k] = '\0';
		strcpy( ostr, tstr);
	}
	printf("%s\n", ostr);
	return 0;
}
