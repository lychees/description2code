#include <bits/stdc++.h>
#define lim 3000
#define f_in(st) freopen(st,"r",stdin);
#define f_out(st) freopen(st,"w",stdout);
using namespace std;
long int GCD[lim+2][lim+2], ans[lim+2][lim+2];
char str[10];
int computeGCD()
{
	//memset(&GCD[0],1,sizeof(long int));
	for(int i=1;i<=lim;i++)
	{
		for(int j=i;j<=lim;j++)
		{
			GCD[i][j]=GCD[j][i]=__gcd(i,j);
		}
	}
	return 0;
}
int precompute()
{
	//memset(&ans[0],0,sizeof(long int));
	for(int i=1;i<=lim;i++)
		ans[i][1]=ans[1][i]=1;
	for(int i=2;i<=lim;i++)
	{
		for(int j=2;j<=lim;j++)
		{
			if(i==j)
				ans[i][j]=ans[i][j]=1;//winning
			else
				{
					int t1=i-GCD[i][j],t2=j-GCD[i][j];
					if(t1==0||t2==0)//winning
						ans[i][j]=1;
					else
					{
						ans[i][j]=!ans[t1][t2];//complement answer of previous iteration
					}
				}
		}
	}
	return 0;
}
int main() 
{
	computeGCD();
	precompute();
	
	int test;
	cin>>test;
	while(test--)
	{
		int a,b;
		cin>>a>>b;
		cin>>str;
		if(!strcmp(str,"Chandu"))
		{
			if(ans[a][b]==1)
				cout<<str<<endl;
			else
				cout<<"Daspal\n";
		}
		else
		{
			if(ans[a][b]==1)
				cout<<str<<endl;
			else
				cout<<"Chandu\n";
		}
	}
	return 0;
}