def merge(start, mid, end, arr, count):
    p = start
    q = mid+1
    a = [0]*(end-start+1)
    k = 0
    c = 0
    for i in xrange(start, end+1):
        if p > mid:
            a[k] = arr[q]
            k += 1
            q += 1
        elif q > end:
            a[k] = arr[p]
            count[arr[p]] += c
            k += 1
            p += 1
        elif arr[p] <= arr[q]:
            a[k] = arr[p]
            count[arr[p]] += c
            k += 1
            p += 1
        else:
            a[k] = arr[q]
            c += 1
            k += 1
            q += 1
    for i in xrange(k):
        arr[start] = a[i]
        start += 1


def merge_sort(start, end, arr, count):
    if (start < end):
        mid = (start+end)/2
        merge_sort(start, mid, arr, count)
        merge_sort(mid+1, end, arr, count)
        merge(start, mid, end, arr, count)


t = int(raw_input())
while t > 0:
    count = [0]*1000001
    n = int(raw_input())
    wt = [0]*n
    for i in xrange(n):
        wt[i] = int(raw_input())
    swt = list(wt)
    merge_sort(0, n-1, swt, count)
    for i in xrange(n):
        print count[wt[i]],

    print '\n',

    t -= 1
