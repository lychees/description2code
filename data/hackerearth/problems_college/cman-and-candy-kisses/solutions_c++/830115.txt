#include <stdio.h>
#include <iostream>
 
using namespace std;

int64_t num= 1000000007;

static int64_t modmul( int64_t a, int64_t b, int64_t mod )
{
       if(a>=mod)
       a %=mod;

       if(b>=mod)
       b%=mod;

       long double res = a;
       res *= b;
       int64_t c = (int64_t)(res / mod);
       a *= b;
       a -= c * mod;
       a %= mod;
       if (a < 0)
       a += mod;
       return a;

}

int64_t modinv(int64_t a,int64_t b)
{
    long long r0=a,r1=b,q;
    long long x0=1,x1=0,y0=0,y1=1,t1,t2;

    while(r1>1)
    {
        q=r0/r1;
        t1=r1;
        r1=r0%r1;
        r0=t1;

        t1=x1;t2=y1;
        x1=x0-q*x1;y1=y0-q*y1;
        x0=t1;y0=t2;
    }
    //cout<<y1<<endl;
    if(y1<0) y1+=a;
    return(y1%a);
}

int64_t bin(int64_t n,int64_t r)
{
	int64_t p=1,res=n;
	for(int64_t i=2;i<=r;i++)
	{
		res=modmul(res,n-i+1,num);
		p=modmul(p,i,num);
	}
	return modmul(res,modinv(num,p),num);
}

int main()
{
	int64_t T;
	cin>>T;
	while(T--)
	{
		int64_t n,r;
		cin>>n>>r;
		int64_t a[n],sum=0;
		for(int64_t i=0;i<n;i++) {cin>>a[i];sum=(sum+a[i])%num;}
		if(r<=sum)	{cout<<0<<endl;continue;}
		int64_t res=bin((r-sum+n-1)%num,n-1);
		cout<<res<<endl;	

	}
	return 0;
}
