#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int t;
#define MAX 100003
char s[MAX];
int n;
long long int k[MAX];
#define MOD 1000000007
int countt[MAX];
int countt1[MAX];
long long int ppow(long long int i, long long int j){
	long long int res = 1LL;
	while (j){
		if (j & 1LL){
			res *= i;
			res %= MOD;
		}
		i *= i;
		i %= MOD;
		j >>= 1LL;
	}
	return res;
}
long long int c(long long int a, long long int b){
	long long int u = k[a];
	long long int s = k[b] * k[a - b];
	s %= MOD;
	return (u*ppow(s, MOD - 2) % MOD) % MOD;
}
int main(){
	k[0] = 1;
	for (int i = 1; i < MAX; i++){
		k[i] = k[i - 1] * (long long int)i;
		k[i] %= MOD;
	}
	scanf("%d", &t);
	while (t--){
		scanf("%s", s);
		scanf("%d", &n);
		int siz=strlen(s);
		for (int i = 0; i < siz; i++){
			countt[i] = countt1[i] = 0;
		}
		for (int i = 0; i < siz; i++){
			if (s[i] == 'l'){
				countt[i] = 1;
			}
			if (i){
				countt[i] += countt[i - 1];
			}
		}
		for (int i = siz - 1; i >= 0; i--){
			if (s[i] == 'l'){
				countt1[i]++;
			}
			if (i != siz - 1){
				countt1[i] += countt1[i + 1];
			}
		}
		n/=2;
		long long int ans = 0;
		for (int i = 0; i < siz; i++){
			if (s[i] == 'u'){
				int mint = min(countt[i], countt1[i]);
			if (n<=mint){
					//cout<<mint<<endl;
					ans += c(countt[i], n)*c(countt1[i], n);
					ans %= MOD;
				}
			}
		}
		printf("%lld\n", ans);
	//	cout<<endl;
	}
	return 0;
}