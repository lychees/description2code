#include <bits/stdc++.h>

using namespace std;

#define endl '\n'
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define rep(i, a, b) for(int i=a;i<b;++i)
#define SZ(x) ((int)(x).size())

typedef vector<int> VI;
typedef long long LL;
typedef pair<int,int> PII;

template<typename TH>
void debug_vars(const char* data, TH head){
	cerr << data << "=" << head << "\n";
}

template<typename TH, typename... TA>
void debug_vars(const char* data, TH head, TA... tail){
	while(*data != ',') cerr << *data++;
	cerr << "=" << head << ",";
	debug_vars(data+1, tail...);
}

const int INF = 0x3f3f3f3f;
const int MAX = 110;
vector<PII> G[MAX];
vector<int> dist;

int N, M;

void bellman_ford(int s){
	dist.assign(N, INF);
	dist[s] = 0;

	rep(i, 0, N-1){
		rep(u, 0, N){
			rep(j, 0, SZ(G[u])){
				PII v = G[u][j];
				dist[v.first] = min(dist[v.first], (dist[u] != INF ? dist[u] + v.second : INF));
			}
		}
	}
}

int main(){
	ios::sync_with_stdio(false); cin.tie(0);

	int T;
	cin>>T;

	rep(inst, 1, T+1){
		cin>>N>>M;

		rep(i, 0, N){
			G[i].clear();
		}

		int u, v, w;
		rep(i, 0, M){
			cin>>u>>v>>w;

			u--;
			v--;

			G[u].pb(mp(v, -w));
			//G[v].pb(mp(u, w));
		}

		bellman_ford(0);

		bool hasNegativeCycle = false;

		rep(u, 0, N){
			rep(j, 0, SZ(G[u])){
				PII v = G[u][j];

				if(dist[u] !=INF && dist[u] + v.second < dist[v.first]){
					//cout<<u<<" -> "<<v.first<<endl;
					hasNegativeCycle = true;
				}
			}
		}

		/*rep(i, 0, N){
			cout<<dist[i]<<" ";
		}
		cout<<endl;*/

		cout<<(hasNegativeCycle ? "Yes" : "No")<<endl;

	}


	return 0;
}





















