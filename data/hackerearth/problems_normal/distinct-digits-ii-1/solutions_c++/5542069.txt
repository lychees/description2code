#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define NIL 0
#define INF (1<<28)
#define MAXN 200001
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 5000000007
#define total 500005
#define M 1000000007
typedef long long int int64;
//int a[1000000];
/*
inline void fast(int &x) {
    register int64 c = getchar_unlocked();
    x = 0;
    int64 neg = 0;
    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
    if(c=='-') {
        neg = 1;
        c = getchar_unlocked();
    }
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(neg)
        x = -x;
}*/
int BIT[12][100005];
int64 arr[100005];
int dis_cou(int64 x){
	int a[10]={0};
	while(x>0){
		a[x%10]++;
		x=x/10;
	}
	int ret=0;
	for(int i=0;i<10;i++){
		if(a[i])
		ret++;
	}
	return ret;
}
void modify(int dig,int idx,int inc){
	while(idx<=100005){
		BIT[dig][idx]+=inc;
		idx+=(idx&(-idx));
	}
}
int query(int dig,int idx){
	int ret=0;
	while(idx){
		ret+=BIT[dig][idx];
		idx-=(idx&(-idx));
	}
	return ret;
}
int main(){
	int n,i;
	cin>>n;
	for(i=1;i<=n;i++){
		cin>>arr[i];
		int x=dis_cou(arr[i]);
		modify(x,i,1);
	}
	int ty,q,c,l,r,u;
	string s;
	int64 v;
	cin>>q;
	while(q--){
		cin>>s;
		if(s=="ADD"){
			cin>>u>>v;
			int x=dis_cou(arr[u]);
			arr[u]+=v;
			arr[u]%=M;
			int x1=dis_cou(arr[u]);
			if(x==x1)
			continue;
			modify(x,u,-1);
			modify(x1,u,1);
			continue;
		}
		if(s=="MUL"){
			cin>>u>>v;
			int x=dis_cou(arr[u]);
			arr[u]*=v;
			arr[u]%=M;
			int x1=dis_cou(arr[u]);
			if(x==x1)
			continue;
			modify(x,u,-1);
			modify(x1,u,1);
			continue;
		}
		if(s=="REP"){
			cin>>u>>v;
			int x=dis_cou(arr[u]);
			arr[u]=v;
			arr[u]%=M;
			int x1=dis_cou(arr[u]);
			if(x==x1)
			continue;
			modify(x,u,-1);
			modify(x1,u,1);
			continue;
		}
		if(s=="MAX"){
			cin>>u>>v;
			for(i=9;i>=1;i--){
				int ans=query(i,v)-query(i,u-1);
				if(ans>0){
					printf("%d %d\n",i,ans);
					break;
				}
			}
	
		}
		if(s=="MIN"){
			cin>>u>>v;
			for(i=1;i<10;i++){
				int ans=query(i,v)-query(i,u-1);
				if(ans>0){
					printf("%d %d\n",i,ans);
					break;
				}
			}
		}
	}
	return 0;
}