#include<bits/stdc++.h>
using namespace std;
int getbits(int x)
{
	int count=0;
	while(x)
	{
		x=x&(x-1);
		count++;
	}
	return count;
}
typedef struct ch ch;
struct ch
{
	int value;
	int gem;
};
int coprime(int x, int y)
{
	if(y!=0)
	return coprime(y,x%y);
	else
	return x;
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n, m, k;
		__int128_t i,j;
		cin>>n>>m>>k;
		int keys[n]; 
		__int128_t temp[n], num, one=1;
		ch chest[m];
		long long int ans=0, sum=0;
		for(i=0;i<n;i++)
		cin>>keys[i];
		for(i=0;i<m;i++)
			cin>>chest[i].value;
		
		for(i=0;i<m;i++)
		cin>>chest[i].gem;
		
		for(i=0;i<n;i++)
		{
			num=0;
			for(j=0;j<m;j++)
			{
				if(coprime(keys[i],chest[j].value)>1)
				{
					num+=(one<<(m-1-j));
				}
			}
			temp[i]=num;
		}
		for(i=1;i<(1<<n);i++)
		{
			if(getbits(i)==k)
			{
				__int128_t c=0;
				for(j=0;j<n;j++)
				{
					if(i&(1<<(n-1-j)))
					{
						c= c|temp[j];
					}
				}
				sum=0;
				for(int p=0;p<m;p++)
					{
						if(c&(one<<p))
						sum+=chest[m-1-p].gem;	
					}
					ans=max(sum,ans);
			}
		}
		cout<<ans<<endl;
	}
}