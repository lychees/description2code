#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define RF(i,a,b) for(int i = (int)(a); i >= (int)(b); i--)
#define gc getchar_unlocked
#define MAX 25
int P[MAX],C[MAX],F[MAX];
int read_int(){
    register int x = 0, c = gc();
    int sign = 1;
    while(c!='-' && (c<48 || c>57) ) c = gc();
    if(c=='-')
        sign = -1, c = gc();
    while(c>=48 && c<=57)
        x = (x<<1) + (x<<3) + c - 48, c = gc();
    return sign*x;
}

bool isPossible(int Pr, int Ca, int Fa, int N)
{
    if(Pr < 0 || Ca < 0 || Fa < 0) return false;
    else if(Pr == 0 && Ca == 0 && Fa == 0) return true;
    else if (N == 0) return false;
    else return isPossible(Pr,Ca,Fa,N-1) || isPossible(Pr-P[N-1],Ca-C[N-1],Fa-F[N-1],N-1);
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int T,GP,GC,GF,N;
    int ap,ac,af;
    bool flag;
    T = read_int();
    F(t,1,T)
    {
        GP = read_int();
        GC = read_int();
        GF = read_int();
        scanf("%d",&N);
        F(i,0,N-1)
        {
        	P[i] = read_int();
        	C[i] = read_int();
        	F[i] = read_int();
        }
        if(isPossible(GP,GC,GF,N)) printf("Case #%d: yes\n",t);
        else printf("Case #%d: no\n",t);
    }
    return 0;
}

