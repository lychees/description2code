#define _CRT_SECURE_NO_WARNINGS
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll; typedef vector<pair<long long,long long> > vpll;
typedef vector<string> vs; typedef long double ld;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int main() {
	const int K = 10;
	const int ps[K] = { 2,3,5,7,11,13,17,19,23,29 };
	int N, W;
	scanf("%d%d", &N, &W);
	vector<pii> items(N);
	rep(i, N) scanf("%d%d", &items[i].first, &items[i].second);
	sort(all(items), greater<pii>());
	vector<vector<long long> > dp(W+1, vector<long long>(K+1, -1));
	dp[0][K] = 0;
	rep(i, N) {
		int p = items[i].first, w = items[i].second;
		for(int j = W - w; j >= 0; -- j) {
			rep(k, K+1) {
				long long x = dp[j][k];
				if(x == -1) continue;
				amax(dp[j + w][k == 0 ? 0 : k-1],
					x + (long long)(k == 0 ? 1 : ps[k-1]) * p);
			}
		}
	}
	long long ans = 0;
	rer(j, 0, W) rep(k, K+1) amax(ans, dp[j][k]);
	printf("%lld\n", ans);
	return 0;
}
 
