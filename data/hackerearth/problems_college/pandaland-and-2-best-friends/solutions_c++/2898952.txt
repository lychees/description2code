#include<map>
#include<iomanip>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<cstring>
#include<string>
#include<math.h>
#include<sstream>
#include<cctype>
#include<set>
#include<queue>
#include<stack>
#include<ctime>
#include<cstdlib>
#include<cassert>
#include<utility>
#include<complex>

using namespace std;

#define L long
#define LL long long
#define ULL unsigned long long
#define D double
//#define LD long double
#define f first
#define s second
//#define x first
//#define y second
//#define G getchar
#define mp make_pair
#define pb push_back
#define INF (1<<30)
#define MOD 1000000007

LL max(LL a,LL b){return (a>b)?a:b;}
inline LL min(LL a,LL b){return (a<b)?a:b;}
LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}
LL ab(LL a){return (a>0)?a:-a;}
LL lcm(LL a,LL b){return (a*b)/gcd(max(a,b),min(a,b));}
LL modpow(LL n,LL k,LL mod)
{LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans;}
LL poww(LL n ,LL k)
{LL ans=1;while(k>0){if(k&1)ans=(ans*n);k>>=1;n=(n*n);}return ans;}
double min(double a,double b){return (a<b)?a:b;}
double max(double a,double b){return (a>b)?a:b;}
double ab(double x){return (x>=0.0)?x:-x;}
int myrandom(int i){return rand()%i;}


vector<LL>V;

int main()
{
    ios::sync_with_stdio(false);
    LL T,sum,u,k,n,i,ans;
    sum=0;
    for(i=0,k=1;sum<=1000000000;i++)
        {
        sum+=k;
        V.pb(sum);
        if(i&1)k++;
        }
    //for(i=0;i<10;i++)cout<<V[i]<<" ";
    cin>>T;
    while(T--)
        {
        cin>>n;
        ans=lower_bound(V.begin(),V.end(),n)-V.begin()+1;
        //assert(ans==(LL)(sqrt(4*n-3)));
        if(n>0)
        ans=sqrt(4*n-3);
        if(n==0)cout<<"0"<<endl;
        else
        cout<<ans<<endl;
        }
    return 0;
}