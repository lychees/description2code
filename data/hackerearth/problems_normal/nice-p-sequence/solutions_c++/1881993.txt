#include <bits/stdc++.h>

using namespace std;
		pair<long long, pair<long long, long long> > extendedEuclid(long long a, long long b) {
    long long x = 1, y = 0;
    long long xLast = 0, yLast = 1;
    long long q, r, m, n;
    while(a != 0) {
        q = b / a;
        r = b % a;
        m = xLast - q * x;
        n = yLast - q * y;
        xLast = x, yLast = y;
        x = m, y = n;
        b = a, a = r;
    }
    return make_pair(b, make_pair(xLast, yLast));
}
 long long gcd(long long a,long long b){
 	long long t;
 	if(a<b)
 	{t=a;a=b;b=t;}
 	if(b==0)
 	return a;
 	else
 	return(b,a%b);
 }
long long modInverse(long long a, long long m) {
    return (extendedEuclid(a,m).second.first + m) % m;
}

int main()
{
    long long t,s,a,p,n,c,a1,i,f;
    cin>>t;
    while(t--){s=0;f=0;
    	cin>>a>>p>>n;
    	a1=a;
    	
    
    	//	cout<<"gcd="<<__gcd(a1,p)<<endl;
    	//	cout<<"a1="<<a1<<" p="<<p<<endl;
    		if(__gcd(a1,p)!=1)
    		{  cout<<-1<<endl;
    	}
   
    
   
  
    else
    	{ c=modInverse(a1,p);
   // cout<<"c="<<c<<endl;
 
    		if(n%2==0)
    	s=(n*c)/2+(n*a1)/2;
    	else
    	s=((n+1)*a1)/2+((n-1)*c)/2;
    cout<<s<<endl;
}
}
}
