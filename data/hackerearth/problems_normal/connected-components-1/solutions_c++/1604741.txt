#include <bits/stdc++.h>
using namespace std;
const int MAXN=100010;
typedef long long ll;
const ll MOD=1000000007ll;
ll fac[MAXN];
void precalc()
{
	fac[0]=1;
	for(int i=1;i<=MAXN-1;i++) {fac[i]=i*fac[i-1];if(fac[i]>=MOD) fac[i]%=MOD;}
}
ll modpow(ll a,ll b)
{
	if(b==0) return 1ll;
	ll half=modpow(a,b/2);
	half*=half;
	half%=MOD;
	if(b&1) return (a*half)%MOD;
	else return half;
}
ll modinv(ll a)
{
	return modpow(a,MOD-2);
}
ll C(int n,int k)
{
	if(k==0) return 1;
	ll enumerator=fac[n];
	ll denominator=(fac[k]*fac[n-k])%MOD;
	return (enumerator*modinv(denominator))%MOD;
}
ll solveeq(int sum,int k)
{
	return C(sum-1,k-1);
}
int main()
{
	precalc();
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,m,c;
		scanf("%d%d%d",&n,&m,&c);
		if(c==0)
		{
			if(m==n) puts("1");
			else puts("0");
			continue;
			
		}
		if(m<c-1) {puts("0");continue;}
		printf("%lld\n",(solveeq(m+2,c+1)*solveeq(n-m,c))%MOD);
	}
	return 0;
}
