#include<bits/stdc++.h>
using namespace std;
vector<string> v[10005];
int bck_sz=555;
struct node{
int x,y,idx;
string s;
};
node q[500005];
unordered_map<string,long int> hx;
long int ans[500005];
bool cmp(node a,node b)
{
    int x=a.x/bck_sz;
    int y=b.x/bck_sz;
    if(x==y)
    {
        if(a.y<b.y)
            return 1;
        else
            return 0;
    }
    else
    {
        if(x<y)
            return 1;
        else
            return 0;
    }
}
void add(int idx)
{
    for(int i=0;i<v[idx].size();i++)
    {
 
 
        hx[v[idx][i]]++;
    }
 
}
void del(int idx)
{
 
     for(int i=0;i<v[idx].size();i++)
        hx[v[idx][i]]--;
}
int main()
{
    int n,m,i,j,k,x,y;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        char s[15];
        string s1;
        scanf("%s",s);
        int l=strlen(s);
        unordered_map<string,bool> mp;
        for(j=0;j<l;j++)
        {
            for(k=j;k<l;k++)
            {
                s1+=s[k];
                if(mp[s1])
                    continue;
                    mp[s1]=true;
                v[i].emplace_back(s1);
 
            }
            s1.clear();
        }
    }
    scanf("%d",&m);
    for(i=0;i<m;i++)
    {
        scanf("%d %d",&x,&y);
        string s;
        cin>>s;
        x--;
        y--;
        q[i].x=x;
        q[i].y=y;
        q[i].idx=i;
        q[i].s=s;
 
    }
    sort(q,q+m,cmp);
    int l=0,r=-1;
    for(i=0;i<m;i++)
    {
        string s=q[i].s;
        x=q[i].x;
        y=q[i].y;
        k=q[i].idx;
 
 
        while(r<y)
        {
            r++;
            add(r);
        }
 
        while(l<x)
        {
 
            del(l);
            l++;
        }
        while(l>x)
        {
            l--;
            add(l);
 
        }
        while(r>y)
        {
            del(r);
            r--;
        }
 
        ans[k]=hx[s];
 
    }
    for(i=0;i<m;i++)
        printf("%ld\n",ans[i]);
    return 0;
}