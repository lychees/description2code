#include<bits/stdc++.h>
using  namespace  std;

 
#define all(p) p.begin(), p.end()
#define mp make_pair
#define pb push_back
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define mems(p, v) memset(p, v, sizeof (p))
#define ff first
#define ss second
#define ll long long
#define llu unsigned long long
#define ld long double
#define vll vector<long long int>  
#define vi vector<int>
#define pii pair <int, int>
#define pll pair <long long int, long long int>
#define psi pair <string, int>
#define ri(n) scanf("%d", &n)
#define rll(n) scanf("%lld", &n)
#define rip(m,n) scanf("%d %d", &m, &n)
#define rllp(m,n) scanf("%lld %lld", &m, &n)
#define rstr(str) scanf("%s", &str)
#define wi(n) printf("%d", n)
#define wll(n) printf("%lld", n)
#define wip(m,n) printf("%d %d", m, n)
#define wllp(m,n) printf("%lld %lld", m, n)
#define wstr(str) printf("%s", str)
#define endl cout<<"\n"
#define sp printf(" ")
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
 
const  double  EPS = 1e-9;
const  int  INF = 0x7f7f7f7f;
int arr[1000006], new_arr[1000006];
int isprime[10000001]={0},i=2,j;
int lol[200], temp;
int  main () 
{
	ios_base::sync_with_stdio(false);
    //freopen ("input.txt", "r", stdin);
    //freopen ("output.txt", "w", stdout);
    int n, t;
	isprime[0]=1;
	isprime[1]=1;
	for(int i=2; i*i<=10000000; i++)
	{
		if(isprime[i]==1)
		  continue;
		for(j=i*2;j<=10000000;j+=i)
		{
		  isprime[j]=1;
		}
	}
	
	int c=0;
	for(int i=3; i<=10000000; i++)
	{
		if(isprime[i]==0)
		{
			arr[c] = i;
			if(c>0)
			{	
				lol[arr[c]-arr[c-1]] = 1;
			}
			c++;
		}
	}
	

	c=0;
	for(int i=2; i<200; i++)
	{
		if(lol[i]==1)
		{
			new_arr[c] = i;
			new_arr[c+1] = i;
			c += 2;
		}
	}
	//sort(new_arr, new_arr+c-1);
	int l, r;
	cin>>t;
	while(t--)
	{
		int flag = 0, a;
		cin>>n;
		if(n%2==1)
		{
			cout<<"NO\n";
			continue;
		}
		l = 0;
		r = c-1;
		while(l<r)
		{
			if(new_arr[l] + new_arr[r] == n)
			{
				flag = 1;
				break;
			}
			else if(new_arr[l] + new_arr[r] < n) l++;
			else r--;
		}
		if(flag == 1)
		cout<<"YES\n";
		else cout<<"NO\n";
	}	
    return  0;
}