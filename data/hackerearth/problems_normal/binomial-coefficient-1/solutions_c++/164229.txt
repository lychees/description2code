#include <iostream>
#include<math.h>
using namespace std;
#define LL long long int 
long long int fact[1000001];
#define MOD 1000000007

LL modpower(LL a, LL x, LL p) {
   //calculates a^x mod p in logarithmic time.
   LL res = 1;
   while(x > 0) {
       if( x % 2 != 0) {
           res = (res * a) % p;
       }
       a = (a * a) % p;
       x /= 2;
   }
   return res;
}

long long power(long long a, long long x, long long p)
{
	long long int temp;
	if(x==0)
	  return 1;
	temp= power(a,x/2,p);
	if(x%2==0)
	  return (temp*temp)%p;
	else
	  return (temp*temp*a)%p;
}

void factorial(long long int n)
{
	fact[0]=1;
	fact[1]=1;
	for(int i=2;i<=n;i++)
	 fact[i]=(fact[i-1]*i)%MOD;
	  //cout<<"factiorial"<<fact[i]<<endl;
	
}

int main()
{
    long long int a,b,n,k,x=1,y=1,f1,f2,z;
    
    cin>>a;
    cin>>b;
    cin>>n;
    cin>>k;
    factorial(1000000);
    x=modpower(a,k,MOD);
    y=modpower(b,n-k,MOD);
    z=(x*y)%MOD;
    
    f1=(fact[n-k]*fact[k])%MOD;
    f1=modpower(f1,MOD-2,MOD);
    f2=(fact[n]*z)%MOD;
    
    cout<<(f2*f1)%MOD<<endl;
    return 0;
}
