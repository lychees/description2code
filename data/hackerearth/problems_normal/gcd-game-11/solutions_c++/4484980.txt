#include <iostream>

#define Bint long long int
#define MAX(a,b) (a)>(b)?(a):(b)
#define MIN(a,b) (a)<(b)?(a):(b)

using namespace std;

Bint gcd_dp[1001][1001];
Bint dp[1001][1001][2];
bool Is[1001][1001][2]= {false};

Bint _GCD(int a, int b);
Bint _swap(int& a, int& b);
Bint GCD(int a, int b) { return b==0?a:GCD(b,a%b);}
void cal_GCD();
char winner[3][30] = {"Arjit", "Chandu Don", "Draw"};
int Game(int a, int b, int turn);

int main(int argc, char* argv[]){
	int T;
	cin >> T;
	cal_GCD();
	
	while(T--){
		int A, B;
		cin >> A >> B;
		
		if(A == 1 && B == 1) cout<< winner[2] <<endl;
		else if (A == 1) cout<< winner[1] <<endl;
		else if (B == 1) cout<< winner[0] <<endl;
		else
		{
			if(Game(A, B, 0)) 
				cout<< winner[0] << endl;	
			else cout<< winner[1] << endl;	
		}
	}
	return 0;
}

int Game(int a, int b, int turn)
{
	if(turn == 0 && a == 1) return 0; // a lose
	
	if(turn == 1 && b == 1) return 0; // b lose
	
	if(Is[a][b][turn]) return dp[a][b][turn];
	Is[a][b][turn] = true;
	
	int win = 0;
	if(turn == 0){
		win |= (!Game(a, b - 1, 1));
		if(gcd_dp[a][b] != 1) win |=(!Game(a, b / gcd_dp[a][b], 1));
	}
	else if(turn == 1){
		win |= (!Game(a - 1, b, 0));
		if(gcd_dp[a][b] != 1) win |=(!Game(a / gcd_dp[a][b], b, 0));
	}
	dp[a][b][turn] = win;
	return win;
}

void cal_GCD(){
	for(int i = 1; i <= 1000; i++) for(int j = 1; j <= i; j++)
		gcd_dp[i][j] = gcd_dp[j][i]= _GCD(i,j);
	return;
}
Bint _swap(int& a, int& b){
	int temp = a;
	a = b;
	b = temp;
}
Bint _GCD(int a, int b){
	if(b > a) _swap(a,b);	
	return GCD(a,b);
}