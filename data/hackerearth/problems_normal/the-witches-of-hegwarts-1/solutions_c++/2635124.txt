#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;
vector <long long int> gra;

int total=0;
void dfs(long long int s);
int main()
{
	
	int ts;
	cin>>ts;
	long long int i,no,temp,j;
	no=0;
	for(i=0;i<ts;i++)
	{
	total=0;	
		gra.clear();
		cin>>no;
		dfs(no);
	}
	
  
    return 0;

}
void dfs(long long int s) {

	int f=-1;
	int j=1;
	int x=0,y=0,z=0;
	int i=0;
	gra.push_back(s);
    while((s!=1)&&(f!=1))
    {	total++;
    	for(int k=i;k<j;k++)
    	{
    		if(gra[k]%3==0){
    			x=gra[k]/3;
    		}
    		if(gra[k]%2==0){
    			y=gra[k]/2;
    		}
    		z=gra[k]-1;
    		
    		if((x==1)||(y==1)||(z==1))
    		{
    			f=1;
    			break;
    		}
    		if(x!=0)
    		{
    			if(find(gra.begin(), gra.end(), x)==gra.end())
    			{
    				gra.push_back(x);
    			}
    			
    		}
    		if(y!=0)
    		{
    				if(find(gra.begin(), gra.end(), y)==gra.end())
    			{
    				gra.push_back(y);
    			}
    			
    		}
    		if(z!=0)
    		{
    				if(find(gra.begin(), gra.end(), z)==gra.end())
    			{
    				gra.push_back(z);
    			}
    		}
    		
    		
    	}
    	i=j;
    	j=gra.size();
    	
    }
    cout<<total<<endl;
}
    
    
    
    
    
    
    
    
    


