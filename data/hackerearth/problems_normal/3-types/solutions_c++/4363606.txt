#include<bits/stdc++.h>
using namespace std;

#define rep(j,n) for(int i=j;i<n;i++)
#define rep2(j,n) for(int i=j;i<n;i--)
#define pb push_back
#define mp make_pair
#define ll long long int
#define pii pair<int,int> 
#define gc getchar_unlocked
#define mod 1000000007
inline void read(int &x){
    x=0;
    register char c=gc();
    for(;c<'0' || c>'9';c=gc());
        for(;c>='0' && c<='9';c=gc())
            x=(x<<3)+(x<<1)+(c-'0');
}
inline void write(int x){

    register char buffor[35];
    register int i=0;
    do{
        buffor[i++]=(x%10)+'0';
        x/=10;
    } while(x);
    i--;
    while(i>=0) putchar_unlocked(buffor[i--]);
    
    putchar_unlocked('\n');
}
vector <vector<pii> > v,j;
vector <bool> g,h;
int n,m,x,y,p;
int co=0,k=0;
bool prim(vector <vector<pii> > z,vector <bool> u){
    pii d;
    int l=0;
    priority_queue <pii> q;
    q.push(mp(0,1));
    while(!q.empty()){
        d=q.top();
        q.pop();
        x=d.first;
        y=d.second;
        if(u[y]==true){
            if(x==2){
            if(k%2!=1)
            co++;
            k++;
            }else
            co++;
            continue;
        }
        u[y]=true;
        l++;
        rep(0,z[y].size()){
            p=z[y][i].second;
            if(u[p]==false)
                q.push(mp(z[y][i].first,p));
        }
    }
    if(l==n)
        return true;
    else return false;
}
int main(){
    read(n);
    read(m);
    v.resize(n+1);
    j.resize(n+1);
    h.resize(n+1);
    g.resize(n+1);
    rep(0,n+1){
        h[i]=false;
        g[i]=false;
    }
    rep(0,m){
        read(x);
        read(y);
        read(p);
        if(p==3){
            v[x].pb(mp(2,y));
            v[y].pb(mp(2,x));
            j[x].pb(mp(2,y));
            j[y].pb(mp(2,x));
        }else if(p==2){
            j[x].pb(mp(1,y));
            j[y].pb(mp(1,x));
        }else{
            v[x].pb(mp(1,y));
            v[y].pb(mp(1,x));
        }
    }
    if(prim(v,h)&&prim(j,g))
        write(co);
    else printf("-1");
}