#include<iostream>
using namespace std;
int mat[103][103];
bool vis[103][103];
int n,m,x1,y1,x2,y2;
bool flag=false;
void dfs(int x,int y)
{
    if(vis[x][y]==true)return;
    if(x==x2 && y==y2)
    {
        flag=true;
        return;
    }
    int tox,toy;
    tox=x+1,toy=y;
    if(tox>=1 && tox<=m && toy>=1 && toy<=n && mat[tox][toy]>mat[x][y])
    dfs(tox,toy);
    tox=x,toy=y-1;
    if(tox>=1 && tox<=m && toy>=1 && toy<=n && mat[tox][toy]>mat[x][y])
    dfs(tox,toy);
    tox=x-1;toy=y;
    if(tox>=1 && tox<=m && toy>=1 && toy<=n && mat[tox][toy]>mat[x][y])
    dfs(tox,toy);
    tox=x;toy=y+1;
    if(tox>=1 && tox<=m && toy>=1 && toy<=n && mat[tox][toy]>mat[x][y])
    dfs(tox,toy);
    return ;
}
int main()
{
    int tc;
    cin>>tc;
    while(tc--)
    {
        cin>>n>>m>>x1>>y1>>x2>>y2;
        for(int i=1;i<=n;++i)
        for(int j=1;j<=m;++j)
            cin>>mat[i][j];
        flag=false;
        dfs(x1, y1);
        (flag==true)?puts("YES"):puts("NO");
    }
    return 0;
}
