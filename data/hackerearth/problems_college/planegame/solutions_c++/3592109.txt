#include <bits/stdc++.h>

using namespace std;

#define ll long long int
#define vi vector<int>
#define all(c) c.begin(), c.end()
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define inf 1e9
#define pl pair<ll,ll>
#define pii pair<pi,pi>
#define f first
#define mp make_pair
#define s second
#define rep(i,a,n) for(int i=a;i<n;i++)
#define repd(i,a,b) for(int (i)=(a); (i)>=(b);i--)
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define present(container, element) (container.find(element) != container.end())
#define cpresent(container, element) (find(all(container),element) != container.end())

//#define test


int f(vector<int> x, vector<int> y) {
    int n = x.size();
    int res = 1;

    if (n <= 2) {
        return n;
    }

    for (int i = 0; i < n; i++) { // point A
        for (int j = 0; j < n; j++) { // point B
            if (i != j) {
                long dx1 = x[j] - x[i];
                long dy1 = y[j] - y[i];

                for (int k = 0; k < n; k++) { // point C
                    int c = 0;
                    if (i != k && j != k) {
                        // count the number of points that are present in any of the 2 lines
                        for (int r = 0; r < n; r++) {
                            long dx2 = x[r] - x[i];
                            long dy2 = y[r] - y[i];
                            // first line
                            if ( dy1 * dx2  == dy2 * dx1  ) {
                                c++;
                            } else {
                                // second line
                                dx2 = x[r] - x[k];
                                dy2 = y[r] - y[k];
                                if ( dy1 * dy2  == - dx2 * dx1 ) {
                                    c++;
                                }
                            }
                        }
                    }
                    res = std::max(res, c);
                }
            }
        }
    }
    return res;
}
int main() {
    std::ios::sync_with_stdio(false); //makes cin and cout faster.
#ifdef test
	freopen("c4.in","rt",stdin);
	freopen("c4.out","wt",stdout);
#endif
    int t;
    cin >> t;
    while(t--) {
        int n;
        cin >> n;
        vector<int> x(n);
        vector<int> y(n);
        for(int i = 0; i < n; i++) {
            cin >> x[i];
        }
        for(int i = 0; i < n; i++) {
            cin >> y[i];
        }
        cout << f(x, y) << endl;
    }
    return 0;
}
