#include <iostream>
using namespace std;
void merge(int A[], int start,int mid,int end)
{
	int p=start;
	int q=mid+1;
	int k=0, Arr[end-start+1];
	for(int i=start;i<=end;i++)
	{
	if(p>mid)
	{
		Arr[k++]=A[q++];
	}
	else if(q>end)
	{
		Arr[k++]=A[p++];
	}
	else if(A[p]>A[q])
	{
		Arr[k++]=A[p++];
	}
	else
	{
		Arr[k++]=A[q++];
	}
  }
	for(int m=0;m<k;m++)
	{
		A[start++]=Arr[m];
	}
}

int * merge_sort(int A[], int start, int end)
{   int mid;
	
	if (start<end)
	   {
	   	mid=(start+end)/2;
	   	merge_sort(A, start, mid );
	   	merge_sort(A, mid+1,end);
	   	merge(A, start,mid, end);
	   }
	return A;   
}



int main()
{
    int T;
    cin>>T;
    if(1<=T<=100)
    {
	for(int s=0;s<T;s++)
    {   int start=0,N,A[100000],end;
        int *ans;
    	cin>>N;
    	end=N-1;
    	for(int i=0;i<N;i++)
    	{
    		cin>>A[i];
    	}
    ans=merge_sort(A,start,end);
    for(int i=0;i<N;i++)
	    {
	    	cout<<*(ans+i)<<" ";
		
		 } 	
	cout<<endl;	 
    }
  }
    return 0;
}
