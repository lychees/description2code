#include <set>
#include <map>
#include <list>
#include <stack>
#include <deque>
#include <queue>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>

#define PI (2 *  acos(0.0))
#define eps 1e-7
#define sf scanf
#define pf printf
#define ab(a) (((a) > 0) ? (a) : -(a))

using namespace std;


long long gcd(long long a , long long b) {  return !b ? a : gcd(b , a % b);  }

long long mulmod(long long a , long long b , long long c)
{
    long long x, y = a % c;
    while(b > 0)
    {
        if(b % 2 == 1) x = (x + y) % c;
        y = (y * 2) % c;
        b = b / 2 ;
    }
    return x % c;
}

int n , cc = 0;
int DP[264][12][12];
int vis[264][12][12];

int call(int pos , int fs , int ls)
{
    if(pos >= n) return 1;
    int &ret = DP[pos][fs][ls];
    if(vis[pos][fs][ls] == cc) return ret;
    ret = 0;
    if(pos == 0)
    {
        for(int i = 1 ; i <= 10 ; ++i)
        {
            ret = ret + call(pos + 1 , i , i);
            ret = ret % 4294967143;
        }
    }
    else
    {
        if(ls - 1 >= 0)
        {
            if(pos + 1 != n) ret = ret + call(pos + 1 , fs , ls - 1);
            else if(abs(fs - (ls - 1)) == 1) ret = ret + call(pos + 1 , fs , ls - 1);
            ret = ret % 4294967143;
        }
        if(ls + 1 <= 10)
        {
            if(pos + 1 != n) ret = ret + call(pos + 1 , fs , ls + 1);
            else if(abs(fs - (ls + 1)) == 1) ret = ret + call(pos + 1 , fs , ls + 1);
            ret = ret % 4294967143;
        }
    }
    vis[pos][fs][ls] = cc;
    return ret;
}

int main()
{
   // freopen("input.txt" , "r" , stdin);
    int t ;
    cin >> t ;
    while(t--)
    {
        cin >> n ;
        ++cc;
        cout << call(0 , 0 , 0) << endl;
    }
    return 0;
}
