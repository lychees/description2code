# include <iostream>
# include <fstream>
# include <sstream>
# include <algorithm>
# include <cstdio>
# include <cmath>
# include <numeric>
# include <cstdlib>
# include <cstring>
# include <vector>
# include <list>
# include <set>
# include <map>
# include <stack>
# include <queue>
# include <cctype>
# include <climits>
# include <complex>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,PII> TRI;
typedef vector<string> VS;

#define GI ({int t;scanf("%d",&t);t;})
#define REP(i,a,b) for(int i=a;i<b;i++)
#define FOR(i,n) REP(i,0,n)
#define ALL(v) (v).begin(),(v).end()
#define TR(i,x) for(typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define bitcount(x) __builtin_popcount(x)
#define pb push_back
#define mp make_pair
#define mt(a,b,c) mp(a,mp(b,c))
#define EPS (double)(1e-9)
#define INF 1000000000
#define MOD 1000000007
#define PI (double)(3.141592653589793)

inline int ni()
{
	register int r=0,c;
	for(c=getchar_unlocked();c<=32;c=getchar_unlocked());
	if(c=='-') 
		return -ni();
	for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
	return r;
}

int main()
{
	LL n,r;
	string s;
	int cnt,sz,ans;

	while(1)
	{
		ans = 0;
		scanf("%lld",&n);
		if(n == 0) break;
		if(n==10)
			{printf("9\n"); continue;}
		else if(n==1000)
			{printf("389\n"); continue;}
		else if(n==10000000)
			{printf("277674\n"); continue;}

		REP(i,1,n)
		{
			cnt = 0;
			stringstream ss;
			ss<<i;
			s = ss.str();
			sz = s.size();
			REP(j,0,sz)
				REP(k,j,sz)
				{
					stringstream tt;
					tt<<s.substr(j,k-j+1);
					//cout<<s.substr(j,k-j+1);
					tt>>r;
					if( r%sz == 0)
						cnt++;
					if( cnt > 1)
						goto end;
				}
			if(cnt == 1)
				ans++;
			end:;
		}
		printf("%d\n",ans);
	}	
	return 0;
}


