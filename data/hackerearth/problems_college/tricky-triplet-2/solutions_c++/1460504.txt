#include <bits/stdc++.h>
// #include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
//#include <tr1/memory>

/* compilation flags: */
/* g++ -g -std=c++0x google_codejam_T.cpp */

using namespace std;
//using namespace std::tr1;

// freopen("input.txt", "rt", stdin);
// freopen("output.txt", "wt", stdout);

#define ALL(c)          (c).begin(), (c).end()
#define RALL(c)         (c).rbegin(), (c).rend()
#define FOR(i,a,b)      for (__typeof(a) i=(a); i != (b); ++i)
#define FOR_ALL(i,c)    for (__typeof((c).begin()) i=(c).begin();   \
                             i != (c).end(); ++i)
#define FOR_RALL(i,c)   for (__typeof((c).rbegin()) i=(c).rbegin(); \
                             i != (c).rend(); ++i)
#define REP(i,a)        for (size_t i=0; i < (a); ++i)
#define SZ(x)           ((size_t) (x).size())
#define SZ_p(x)         ((size_t) (x)->size())
#define SZ_A(array)     (sizeof(array)/sizeof(array[0]))

typedef long double     LD;
typedef long long       LL;
typedef map<int,int>    MII;
typedef set<int>        SI;
typedef vector<int>     VI;
typedef vector<string>  VS;
typedef pair<int,int>   PII;


int INPUT[100003];
int DL[30003];
int DR[30003];

LL find_center(int A[], int I, int mid, int J)
{
    memset(DL,0,sizeof(DL));
    memset(DR,0,sizeof(DR));
    FOR(i,I,mid) ++DL[A[i]];
    FOR(i,mid,J) ++DR[A[i]];
    LL ans = 0;
    FOR(i,I,mid) {
        FOR(j,i+1,mid) {
            int a = A[i];
            int b = A[j];
            int c = b+b-a;
            if (c < SZ_A(DR) && DR[c])
                ans += DR[c];
        }
    }
    FOR(i,mid,J) {
        FOR(j,i+1,J) {
            int b = A[i];
            int c = A[j];
            int a = b+b-c;
            if (a < SZ_A(DL) && DL[a])
                ans += DL[a];
        }
    }
    return ans;
}

LL solve(int A[], int i, int j)
{
    int n = j-i;
    if (n < 3)
        return 0;
    int mid = n/2;
    LL a = solve(A,i,i+mid);
    LL b = solve(A,i+mid,j);
    LL c = find_center(A,i,i+mid,j);
    LL ans = a+b+c;
    return ans;
}

int main()
{
    int N;
    scanf("%d", &N);
    FOR(i,0,N)
        scanf("%d", INPUT+i);
    printf("%d\n", solve(INPUT,0,N));
    exit(0);
}