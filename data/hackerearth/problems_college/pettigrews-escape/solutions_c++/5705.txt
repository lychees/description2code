#include <iostream>
#include <stdio.h>
#include <vector>
using namespace std;
int ans=0;

int matrix[1000][1000];
int marked[1000][1000];
int n;

inline bool isValid (int x, int y){
	if (x>=0 && x<n && y>=0 && y<n && matrix[x][y] != 1){
		//cout<<"checking"<<x<<y<<"\n";
		return true;
	}
	return false;
}

int dfs(int x, int y, int cx, int cy){

	if (x==n-1 && y==n-1) {
		ans++;
		return 0;
	}
	//cout<<x<<y<<cx<<cy<<endl;
	if (marked[x][y] == 1) return 0;
	marked[x][y]=1;
	if (isValid(x-1,y) ){
		
		dfs(x-1,y,x,y);
		//marked[x-1][y]=0;
	}
	if (isValid(x+1,y) ){
		//marked[x+1][y]=1;
		dfs(x+1,y,x,y);
		//marked[x+1][y]=0;
	}
	if (isValid(x,y+1) ){
		//marked[x][y+1]=1;
		dfs(x,y+1,x,y);
		//marked[x][y+1]=0;
	}
	if (isValid(x,y-1) ){
		//marked[x][y-1]=1;
		dfs(x,y-1,x,y);
		//marked[x][y-1]=0;
	}
	marked[x][y]=0;
	return 0;

}

int main(){

	//int n;
	//int matrix[n][n];
	//int marked[n][n];
	cin>>n;
	for (int i=0; i<n; i++){
		for (int j=0; j<n; j++){
			scanf("%d", &matrix[i][j]);
		}
	}
	dfs(0,0,0,0);
	cout<<ans;
	return 0;
}