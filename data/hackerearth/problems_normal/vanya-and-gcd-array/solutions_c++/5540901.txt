#include<bits/stdc++.h>
int M=1e9+7;
int dp[505][105][105];
using namespace std;
int func(int a[],int n,int k,int curr_gcd)
{
    if(n==0)
    {
        if(curr_gcd==1)
            return 1;
        return 0;
    }
    if(dp[n][k][curr_gcd]!=-1)
        return dp[n][k][curr_gcd];
    if(a[n-1]<k)
    {
        return dp[n][k][curr_gcd]=((func(a,n-1,a[n-1],__gcd(a[n-1],curr_gcd)))%M+(func(a,n-1,k,curr_gcd))%M)%M;
    }
    else
        return dp[n][k][curr_gcd]=(func(a,n-1,k,curr_gcd))%M;
}
int main()
{
    int n,a[505];
    cin>>n;
    for(int i=0;i<n;i++)
        cin>>a[i];
    for(int i=0;i<505;i++)
    {
        for(int j=0;j<105;j++)
        {
            for(int k=0;k<105;k++)
                dp[i][j][k]=-1;
        }
    }
    cout<<func(a,n,200,0)<<endl;
    return 0;
}
