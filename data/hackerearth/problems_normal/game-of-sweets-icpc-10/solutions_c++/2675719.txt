#include <bits/stdc++.h>

using namespace std;

#define fr(a,b,c) for(int (a) = (b); (a) < (c); ++(a))
#define rp(a,b) fr(a,0,b)
#define fre(a,b) for(int a = adj[b]; ~a; a = ant[a])
#define cl(a,b) memset((a), (b), sizeof(a))
#define sc(a) scanf("%d", &a)
#define sc2(a,b) scanf("%d%d", &a, &b)
#define sc3(a,b,c) scanf("%d%d%d", &a, &b, &c)
#define scs(s) scanf("%s", s)
#define pri(x) printf("%d\n", x)

#define iter(a) __typeof((a).begin())
#define fore(a,b) for(iter(b) a = (b).begin(); a != (b).end(); ++a)

#define st first
#define nd second
#define mp make_pair
#define pb push_back

#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define _ << ", " <<

const int oo = 0x3f3f3f3f;

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector< vi > vii;

typedef complex<double> cd;
#define N 600009

cd _a[N];

void fft(cd *a, int n, bool inv = 0) {
	if (n == 1) return;
	cd *a0 = a, *a1 = a+n/2;
	rp(i, n) _a[i] = a[i];
	rp(i, n/2) a0[i] = _a[i+i], a1[i] = _a[i+i+1];
	fft(a0, n/2, inv),fft(a1, n/2, inv);
	cd w = exp(cd(0, (inv? -2: 2)*M_PI/n)), wnow = cd(1, 0);
	rp(i, n/2)
		_a[i] = a0[i] + wnow*a1[i],
		_a[i+n/2] = a0[i] - wnow*a1[i], wnow *= w;
	rp(i, n) a[i] = _a[i];
}

int n, mx, a[N];

cd a1[N], a2[N];

void mult() {
	int sz = mx + mx + 2;
	while (sz&(sz-1)) sz++;
	fr(i, mx+1, sz) a1[i] = a2[i] = cd(0);
	fft(a1, sz, 0); fft(a2, sz, 0);
	rp(i, sz) a1[i] *= a2[i];
	fft(a1, sz, 1);
	rp(i, sz) {
		a1[i] /= sz;
		//printf("%lf ", a1[i].real());
	}
	//puts("");
}

int main() {
	while (sc(n) == 1) {
		rp(i, n) sc(a[i]);
		sort(a, a+n);
		mx = a[n-1];
		
		int ans = 0;
		int nn = unique(a, a+n) - a;
		if (nn < n) ans++;
		n = nn;
		
		rp(i, mx+1) a1[i] = a2[i] = cd(0);
		rp(i, n) {
			a1[a[i]] = cd(1);
			a2[mx - a[i]] = cd(1);
		}
		mult();
		
		fr(i, 0, mx) 
			if (a1[i].real() > 0.5 || 
				a1[mx + (mx-i)].real() > 0.5)
			ans++;
		
		pri(ans);
		//return 0;
	}
	return 0;
}




































