#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
using namespace std;
class Comparator {
    string alphabet;
public:
    Comparator(string a) : alphabet(a) {}

    bool operator()(string a, string b) {
        int i = 0;
		while(a[i] == b[i] && i != a.length() && i != b.length()) i++;
		if(i == a.length()) return true;
		if(i == b.length()) return false;
		return ccSort(a[i], b[i]);
    }
    
    bool ccSort(char a, char b)
	{
		int ia, ib;
		for (int i = 0; i < alphabet.length(); i++)
		{
			if(alphabet[i] == a) ia = i;
			if(alphabet[i] == b) ib = i;
		}
		return ia < ib;
	}
};

int main()
{
	int T, N, n;
	string alphabet, temp;
	vector<string> *words;
	cin >> T;

	while(T--)
	{
		cin >> alphabet >> N;
		words = new vector<string>();
		n = N;
		while(n--)
		{
			cin >> temp;
			words->push_back(temp);
		}

		sort(words->begin(), words->end(), Comparator(alphabet));

		for (int i = 0; i < N; i++)
			cout << words->at(i) << endl;
	}
    return 0;
}