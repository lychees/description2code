#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef unsigned long long llu;
llu p = 1000000007;

int root(vector<int>&a,int i){
	while(i!=a[i]){
		a[i]=a[a[i]];
		i=a[i];
	}
	return i;
}

void Union(vector<int>&a,int x,int y){
	int rx = root(a,x);
	int ry = root(a,y);
	a[rx] = ry;
	return ;
}

int main()
{
	int n,m;cin>>n>>m;
	vector<int> a(n);
	vector<llu> A(n);
	for(int i=0;i<n;i++){
		cin>>A[i];
	}
	for(int i=0;i<n;i++){
		a[i] = i;
	}
	for(int i=0;i<m;i++){
		int u,v;
		cin>>u>>v;
		Union(a,u-1,v-1);
	}
	
	map<int,vector<llu>> h;
	for(int i=0;i<n;i++){
		h[root(a,i)].push_back(A[i]);
	}
	
	llu ans = 1;
	for(map<int,vector<llu>>::iterator it=h.begin();it!=h.end();++it){
		llu mx = 0;
		for(int i=0;i<(it->second).size();i++){
			if((it->second).at(i)>mx){
				mx = (it->second).at(i);
			}
		}
		llu count= 0;
		for(int i=0;i<(it->second).size();i++){
			if((it->second).at(i)==mx){
				count++;
			}
		}
		ans = (ans*count)%p;
	}
	cout<<ans<<endl;
    return 0;
}
