#include<bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(i=a;i<b;++i)
#define FORD(i,a,b) for(i=a;i>=b;--i)
#define infi 100000007
#define pb push_back
#define mp make_pair
#define ll long long

int c, n1, n5, n10;
int tot = 0;
int dp[255][205][155];

int fnc(int coke, int n5, int n10) {

    if(dp[coke][n5][n10] != -1)
        return dp[coke][n5][n10];


    if(coke == 0)
        return 0;
    int n1 = tot - ((c - coke) * 8);
    n1 -= (5 * n5);
    n1 -= (10 * n10);
   // cout << n1 <<" "<<n5<<" "<<n10<<endl;
    int ret = infi;
    if(n10 >= 1)
        ret = min(ret, 1 +fnc(coke - 1, n5, n10 - 1));
    if(n5 >= 2) {
        ret = min(ret, 2 +fnc(coke - 1, n5 - 2, n10));
    }
    if(n5 >= 1 && n1 >= 3) {
        ret = min(ret, 4 + fnc(coke - 1, n5 - 1, n10));
    }
    if(n1 >= 8) {
        ret = min(ret, 8 + fnc(coke - 1, n5, n10));
    }
    if(n1 >= 3 && n10 >= 1) {
        ret = min(ret, 4 + fnc(coke - 1, n5 + 1, n10 -1));
    }
  // cout << coke <<"  "<<n1<<" "<<n5<<" "<<n10 <<" "<<ret<< endl;
    return dp[coke][n5][n10] = ret;
}

int main()
{
    int t;
    cin >> t;
    while(t--) {

        cin >> c >> n1 >> n5 >> n10;
        tot = n1 + (5 * n5) + (10 * n10);

        if(tot < 8 * c) {
            cout << -1 << endl;
            continue;
        }
        memset(dp, -1, sizeof(dp));
        cout << fnc(c, n5, n10) << endl;
    }
}
