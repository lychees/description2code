import Queue
def diameter(g, s):
    dist = [float('inf') for _ in g]
    dist.append(float('inf'))
    visit = [False for _ in g]
    visit.append(False)
 
    dist[s] = 0
    visit[s] = True
    q = Queue.Queue()
    q.put(s)
 
    largest = 0
    farnode = 1
 
    while not q.empty():
        u = q.get()
        for v in g[u]:
            if not visit[v[0]]:
                dist[v[0]] = dist[u] + v[1]
                if dist[v[0]] > largest:
                    largest = dist[v[0]]
                    farnode = v[0]
                q.put(v[0])
                visit[v[0]] = True
 
 
    return farnode, largest
 
 
 
if __name__ == '__main__':
    t = input()
 
    while t:
        n = input()
        g = {v:[] for v in xrange(1, n + 1)}
 
        edges = n - 1
        while edges:
            a, b, w = [int(x) for x in raw_input().split()]
            g[a].append((b, w))
            g[b].append((a, w))
            edges -= 1
 
        n, l = diameter(g, 1)
        n, l = diameter(g, n)
 
        if l <= 100:
            print 0, l
        elif l > 100 and l <= 1000:
            print 100, l
        elif l > 1000 and l <= 10000:
            print 1000, l
        elif l > 10000:
            print 10000, l
 
 
        t -= 1