#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

void dg(unsigned long long int a, bool b[]){
	int digit;
	while(a>0){
		digit=a%10;
		a=a/10;
		if(digit==2){
			b[0]=true;
		}
		if(digit==3){
			b[1]=true;
		}
		if(digit==5){
			b[2]=true;
		}
		if(digit==7){
			b[3]=true;
		}
	}
}

void check(bool b[], int number[], int i){
	if(b[0] ){number[0]++;}
	if(b[1] ){number[1]++;}
	if(b[2]){number[2]++;}
	if(b[3] ){number[3]++;}
	if(b[0] && b[1] ){number[4]++;}
	if(b[0] && b[2] ){number[5]++;}
	if(b[0] && b[3]){number[6]++;}
	if(b[1] && b[2]){number[7]++;}
	if(b[1] && b[3]){number[8]++;}
	if(b[2] && b[3]){number[9]++;}
	return;
	
}
void checker(bool b[], int number[], int i){
	if(b[1]==true && (b[2]==true && b[3]==true) ){number[10]++;}
	if(b[1]==true && (b[2]==true && b[0]==true) ){number[11]++;}
	if(b[1]==true && (b[3]==true && b[0]==true) ){number[12]++;}
	if(b[0]==true && (b[2]==true && b[3]==true) ){number[13]++;}
	if((b[1]==true && b[0]==true) && (b[2]==true && b[3]==true)){number[14]++;}
	return;
}

  unsigned long int combine(int a){
 unsigned long int ans=a,b=a-1,c=a-2;if(a<3)return 0;
	bool s2=false,s3=false;
	if(s2==false){if(ans%2==0){ans=ans/2;s2=true;}
	else if(b%2==0 && s2==false){b=b/2;s2=true;}
	else if(c%2==0 && s2==false){c=c/2;s2=true;}
}
if(s3==false){if(ans%3==0){ans=ans/3;s3=true;}
	else if(b%3==0 && s3==false){b=b/3;s3=true;}
	else if(c%3==0 && s3==false){c=c/3;s3=true;}
}
return ans*b*c;
}


vector<unsigned long long int> v,ve;
int main(){
	int n, i, j, number[15],size;
	for(i=0;i<15;i++)number[i]=0;
	unsigned long long int var;
unsigned long	long int  ans=0;
	
	bool b[4];
	cin >> n;
	for(i=0; i<15; i++){
		number[i]=0;
	}
	
	for(i=0; i<n; i++){
		cin >> var;v.push_back(var);}
		size=v.size();
		for(i=0;i<size;i++){
		for(j=0; j<4; j++){
			b[j]=false;
		}
		dg(v[i], b);
		
		check(b, number, i);
		
		checker(b,number,i);
	}
	//for(i=0;i<15;i++)cout<<number[i]<<endl;
	for(i=0;i<4;i++){ans+=combine(number[i]);}
	for(i=10;i<14;i++){ans+=combine(number[i]);}
	for(i=4;i<10;i++){ans=ans-combine(number[i]);}
	{ans=ans-combine(number[14]);}
	
	cout<<ans<<endl;
}
	
