#include <bits/stdc++.h>
using namespace std;


bool subset[100000+1][1000+1];
int sset[1005];
bool isSubsetSum( int n, int sum)
{
    
 
    // If sum is 0, then answer is true
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;
 
    // If sum is not 0 and set is empty, then answer is false
    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;
 
     // Fill the subset table in botton up manner
     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >= sset[j-1])
           subset[i][j] = subset[i][j] || subset[i - sset[j-1]][j-1];
       }
     }
 
   
}
int main()
{ 
  int t;cin>>t;
  while(t--){
 int n,k;
 cin>>n>>k;
    
    int tot=0;
    for(int i=0;i<n;i++){cin>>sset[i];tot+=sset[i];}
    
   isSubsetSum(n,tot);
    if(k<=tot && subset[k][n])cout<<"Yes"<<endl;
    else {cout<<"No"<<endl;
        int tmp1=min(k,tot);
        while( subset[tmp1][n]==0)tmp1--;
        int tmp2=k;
         while(tmp2<=tot&& subset[tmp2][n]==0)tmp2++;
         if(tmp2>tot)cout<<tmp1<<endl;
      else   if(tmp2-k<=k-tmp1)cout<<tmp2<<endl;
         else cout<<tmp1<<endl;
    }
  }
    return 0;
}
