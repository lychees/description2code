#include <bits/stdc++.h>

const int MaxM = 55, MaxN = 55;

int N, M;
int l[MaxM], r[MaxM];
bool used[MaxN];
std::vector<int> a;

bool ok(std::vector<int> v) {
    //printf("try:  "); for (int i = 0; i < N; i++) printf("%d%c", v[i], " \n"[i == N-1]);
    for (int i = 0; i < M; i++) std::sort(v.begin() + l[i] - 1, v.begin() + r[i]);
    for (int i = 1; i < N; i++) if (v[i] < v[i-1]) return false;
    //printf("ok:   "); for (int i = 0; i < N; i++) printf("%d%c", v[i], " \n"[i == N-1]);
    return true;
}

int main()
{
    scanf("%d%d", &N, &M);
    for (int i = 0; i < M; i++) scanf("%d%d", &l[i], &r[i]);
    
    a.resize(N);

    for (int i = 0; i < N; i++) {
        bool allg = true;
        for (int j = 1; j <= N; j++) if (!used[j]) {
            a[i] = j;
            int p = i+1;
            for (int k = N; k >= 1; k--) if (!used[k] && k != j) {
                a[p++] = k;
            }
            if (!ok(a)) {
                allg = false;
                break;
            }
        }
        if (!allg) {
            //printf("rip\n");
            used[a[i]] = true;
            for (i++; i < N; i++) {
                for (int j = 1; j <= N; j++) if (!used[j]) {
                    a[i] = j;
                    int p = i+1;
                    for (int k = N; k >= 1; k--) if (!used[k] && k != j) {
                        a[p++] = k;
                    }
                    if (!ok(a)) {
                        break;
                    }
                }
                used[a[i]] = true;
            }
            for (int i = 0; i < N; i++) printf("%d%c", a[i], " \n"[i == N-1]);
            return 0;
        }
        used[a[i]] = true;
    }
    printf("All ok!\n");
}

