#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("circuit.inp","r",stdin)
#define OUTPUT freopen("circuit.out","w",stdout)
#define FOR(i,l,r) for(auto i=(l);i<=(r);i++)
#define REP(i,l,r) for(auto i=(l);i<(r);i++)
#define FORD(i,l,r) for(auto i=(l);i>=(r);i--)
#define REPD(i,l,r) for(auto i=(l);i>(r);i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=3e3+10;
const string wowel="aeiouy";

int f[N][N][3];
int C[N][N];
int n,k,a[N];
string s;
bool iswowel(char ch){
    for(auto i:wowel) if (ch==i) return 1;
    return 0;
}
void prepare(){
    REP(i,0,N){
        C[i][0]=1;
        FOR(j,1,i) C[i][j]=(C[i-1][j-1]+C[i-1][j])%MOD;
    }
    cin>>n>>k>>s;
    FOR(i,1,n) a[i]=iswowel(s[i-1]);
}
int solve(){
    f[0][0][0]=1;
    FOR(i,1,n){
        if (a[i]){
            ///don't use
            FOR(use,0,k)
                FOR(alr,0,2) f[i][use][0]=(f[i][use][0]+f[i-1][use][alr])%MOD;
            continue;
        }
        ///no use
        FOR(use,0,k)
            FOR(alr,0,1) f[i][use][alr+1]=(f[i][use][alr+1]+f[i-1][use][alr])%MOD;
        ///use
        FOR(use,1,k)
            FOR(alr,0,2) f[i][use][0]=(f[i][use][0]+f[i-1][use-1][alr])%MOD;
    }
//    FOR(i,1,n)
//        FOR(use,0,k)
//            FOR(alr,0,2) cout<<i<<" "<<use<<" "<<alr<<" "<<f[i][use][alr]<<'\n';
    ll ans=0;
    int bad=count(a+1,a+n+1,0);
    FOR(use,0,k) if (2*(bad-use)<=n)
        FOR(i,0,2) ans=(ans+1LL*f[n][use][i]*C[n-bad][k-use])%MOD;
    return (C[n][k]-ans+MOD)%MOD;
}
int main(){
//    freopen("input.inp","r",stdin);
    prepare();
    cout<<solve();
}
