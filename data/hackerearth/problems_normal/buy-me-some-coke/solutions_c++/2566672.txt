#include <iostream>
using namespace std;
# include<cstdio>
#include<algorithm>
int dp[1000][155][55];
bool vis[1000][155][55];
int fuc(int ans,int n,int c1,int c5,int c10){
	if(ans==n)
		return 0;
	int temp=999999999;
	if(vis[c1][c5][c10]==1)
	return dp[c1][c5][c10];
	vis[c1][c5][c10]=1;
	if(c10>0)
	temp=min(temp,1+fuc(ans+1,n,c1+2,c5,c10-1));
	if(c10>0&&c1>=3)
	temp=min(temp,4+fuc(ans+1,n,c1-3,c5+1,c10-1));
	if(c5>=2)
	temp=min(temp,2+fuc(ans+1,n,c1+2,c5-2,c10));
	if(c5>=1&&c1>=3)
	temp=min(temp,4+fuc(ans+1,n,c1-3,c5-1,c10));
	if(c1>=8)
	temp=min(temp,8+fuc(ans+1,n,c1-8,c5,c10));
	dp[c1][c5][c10]=temp;
	return dp[c1][c5][c10];
}
int main() {
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		        for(int i=0;i<1000;++i)
            for(int j=0;j<155;++j)
                for(int k=0;k<55;++k)
                    vis[i][j][k]=false;
		int c1,c5,c10,ans=0;
		cin>>c1>>c5>>c10;
		if(10*c10+5*c5+c1<8*n)
			cout<<-1<<endl;
		else{
			cout<<fuc(0,n,c1,c5,c10)<<endl;
		}
	}
	return 0;
}