#include <bits/stdc++.h>
using namespace std;
#define MAX 1005
#define ll long long
#define mod 1000000007
ll dp[MAX][MAX];

void preproccess()
{
for (int i = 1; i <= 1000; i++) {
dp[1][i] = 1;
}
for (int i = 1; i <= 1000; i++) {
dp[i][1] = 1;
}
for (int i = 2; i <= 1000; i++) {
for (int j = 2; j <= 1000; j++) {
dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
if (dp[i][j] >= mod) {
dp[i][j] %= mod;
}
}
}
}
struct song {
int x, y;
};

bool comp(song a, song b)
{
if (a.x < b.x) {
return true;
}
else if (a.x == b.x) {
if (a.y < b.y) {
return true;
}
else {
return false;
}
}
else {
return false;
}
}

int main()
{
preproccess();
int t;
scanf("%d", &t);
while (t--) {
int n, q;
scanf("%d%d", &n, &q);
vector<song>v(q);
for (int i = 0; i < q; i++) {
scanf("%d%d", &v[i].x, &v[i].y);
v[i].x += 1;
v[i].y += 1;
}
sort(v.begin(), v.end(), comp);
ll ans = 1;
song prev;
prev.x = 1;
prev.y = 1;
for (int i = 0; i < q; i++) {
int x = v[i].x - prev.x + 1;
int y = v[i].y - prev.y + 1;
ans = (((ans % mod) * (dp[x][y] % mod)) % mod);
prev.x = v[i].x;
prev.y = v[i].y;
}
int x = n - prev.x + 1;
int y = n - prev.y + 1;
ans = ((ans % mod) * (dp[x][y] % mod)) % mod;
printf("%lld\n", ans);
}
return 0;
}