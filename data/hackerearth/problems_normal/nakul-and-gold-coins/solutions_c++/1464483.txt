#include <bits/stdc++.h>
#include <iostream>
#include <algorithm>
#include <string>
#include <set>
#include <vector>
using namespace std;
#define MAX 1000006
#define LL long long
bool isprime[MAX];
vector<LL>primes;
vector<int>soln;

void sieve()
{
	memset(isprime, true, sizeof(isprime));
	isprime[0] = isprime[1] = false;	
	for (LL i = 2; i * i <= MAX - 3; i++) {
		if (isprime[i]) {
			for (LL j = i * 2; j < MAX - 3; j += i) {
				isprime[j] = false;
			}
		}
	}
}

int main()
{
	sieve();
	for (LL i = 0; i <=1e6; i++) {
		if (isprime[i]) {
			primes.push_back(i);
		}
	}
	for (LL i = 0; i < primes.size(); i++) {
		for(LL j = i + 1; j < primes.size() && (primes[i] * primes[j]) <= 100000000; j++) {
			soln.push_back(primes[i] * primes[j]);
		}
	}
	sort(soln.begin(), soln.end());
	LL t;
	scanf("%lld", &t);
	while (t--) {
		LL l, r;
		scanf("%lld%lld", &l, &r);
		LL pos1 = upper_bound(soln.begin(), soln.end(), r) - soln.begin();
		LL pos2 = upper_bound(soln.begin() , soln.end(),l - 1) - soln.begin();
		printf("%lld\n", pos1 - pos2) ;
	}
	return 0;
}