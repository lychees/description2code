// Dynamic programming

#include <cstdio>
#include <iostream>
#include <vector>
#define  DEBUG if(0)

using namespace std;

int A[10020];
typedef long long int int32;

int32 max(int32 a,int32 b) { return a > b ? a : b; }
int32 Process(int N)
{
    if(N == 1) return A[0];
    if(N == 2) return max(A[0],A[1]);

    vector<int32> dp;
    dp.resize(N+1);

    dp[0] = A[0];
    dp[1] = A[1];
    dp[2] = A[2] + A[0];

    if( N == 3)
        return max(dp[1],dp[2]);

    for(int i = 3; i < N; ++i)
        dp[i] = max(dp[i-3]+A[i],dp[i-2]+A[i]);

    DEBUG
    {
        for(int i = 0; i < N; ++i )
            cout << dp[i] << " ";
        cout << endl;
    }

    return max(dp[N-1],dp[N-2]);
}

int main()
{
    int T,N,I=1;
    cin >> T;
    while(T--)
    {
        cin >> N;
        for(int i = 0; i < N; ++i)
            cin >> A[i];
        cout << "Case "<< I++ <<": "<< Process(N) << endl;
    }
    return 0;
}
