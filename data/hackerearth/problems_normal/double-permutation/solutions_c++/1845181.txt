#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#ifdef _WIN32
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
#define sz(x) (int((x).size()))
#define bit(x) (1 << (x))
#define cnt1(x) (__builtin_popcount(x))

template<class T>
inline void chkmax(T& x, T y) {
	if (x < y) x = y;
}

template<class T>
inline void chkmin(T& x, T y) {
	if (y < x) x = y;
}

typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
const int MX = 200005;
const int MOD = 1000000007;
int n, m;
int a[MX], v[MX];

void add(int k) {
	for (; k <= n; k += k & -k) v[k]++;
}

int get(int k) {
	int s = 0;
	for (; k > 0; k -= k & -k) s += v[k];
	return s;
}

int main() {
	int i;
	LL rlt;
	
	scanf("%d", &n);
	m = n * 2;
	for (i = 0; i < m; i++) scanf("%d", &a[i]);
	
	if (n == 1) rlt = 1;
	else {
		rlt = 0;
		for (i = m - 1; i >= 0; i--) {
			rlt += get(a[i] - 1) + (m - 1 - i + get(a[i]));
			add(a[i]);
		}
		rlt %= MOD;
		for (i = 2; i < n; i++) rlt = rlt * 2 % MOD;
	}
	printf(LLD "\n", rlt);
	return 0;
}