#include <iostream>
#include <cstdio>
#include <vector>
#include <climits>
#include <cstring>
#include <algorithm>
using namespace std;

#define MAX 1000005

vector<bool> isprime;
vector<int> primes;
void sieve(int n)
{
	isprime.resize(n + 1);
	for (int i = 0; i <= n; i++)
		isprime[i] = 1;
	isprime[1] = 0;
	isprime[2] = 1;
	for (int i = 2; i * i <= n; i++)
		if (isprime[i])
			for (int j = 2; i * j <= n; j++)
					isprime[i * j] = 0;
	for (int i = 2; i < n; i++)
		if (isprime[i])
			primes.push_back(i);
	return;
}

long long count(int n)
{
    long long count = 0;
    for (int i = 0; i < primes.size() && primes[i] < n; i++) {
        int div = n/primes[i];
        count += upper_bound(primes.begin(), primes.begin() + i, div) - primes.begin();
    }
    return count;
}

int main()
{
    sieve(1000000);
    int t;
    scanf("%d", &t);
    while (t--) {
        int l, r;
        scanf("%d%d", &l, &r);
        long long count1 = count(r);
        long long count2 = count(l-1);
        printf("%lld\n", count1 - count2);
    }
}
