//
//  main.cpp
//  Sonya clears the array
//
//  Created by Dhruv Mullick on 05/10/15.
//  Copyright Â© 2015 Dhruv Mullick. All rights reserved.
//

#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define ull unsigned long long
#define pb push_back
#define f first
#define s second
#define PI 3.14159265359
typedef pair<int,int> ii;
typedef pair<int,pair<int,int> > iii;

#define mod

ll dp[510][510];
int A[510];
int n;
vector<int> P;
bool B[1100000];


void sieve()
{
    int i,j;
    fill(B,B+1100000,1);
    B[1]=0;
    for(i=2;i<1100000;i++)
    {
        if(!B[i])
            continue;
        P.pb(i);
        for(j=i*2;j<1100000;j+=i)
            B[j]=0;
    }
    
}


int findcost(int u, int v)
{
    int upos = (int)(lower_bound(P.begin(),P.end(),u)-P.begin());
    int vpos = (int)(lower_bound(P.begin(),P.end(),v)-P.begin());
    
    int c=P[upos]-u+P[vpos]-v;
    
    if(vpos==upos+1)
        return c;
    else if(vpos>=upos+2)
    {
        c+=P[vpos-1]-P[upos];
        return c;
    }
    else
    {
        c+=P[upos+1]-P[vpos];
        return c;
    }
}

int main(int argc, const char * argv[])
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int i,l,j,k;
    
    cin>>n;
    for(i=0;i<n;i++)
        cin>>A[i];
    
    sieve();
//    conv();
    
    if(n==0)
    {
        cout<<0;
        return 0;
    }
    
    for(l=2;l<=n;l+=2)
    {
        for(i=0;i<n;i++)
        {
            j=i+l-1;
            if(j>=n)
                continue;
            if(l==2)
            {
                dp[i][j]=findcost(A[i],A[j]);
            }
            else
            {
                dp[i][j]=findcost(A[i],A[j])+dp[i+1][j-1];
                for(k=i+2;k<=j;k+=2)
                    dp[i][j]=min(dp[i][j],dp[i][k-1]+dp[k][j]);
            }
        }
    }
    
    cout<<(dp[0][n-1]+n/2);
    
    
    return 0;
}
