#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define NIL 0
#define INF (1<<28)
#define MAXN 200001
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 5000000007
#define total 500005
#define M 1000000007
typedef long long int int64;
//int a[1000000];
/*
inline void fast(int &x) {
    register int64 c = getchar_unlocked();
    x = 0;
    int64 neg = 0;
    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
    if(c=='-') {
        neg = 1;
        c = getchar_unlocked();
    }
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(neg)
        x = -x;
}*/
int64 a[100005];
vector<int>v[100005];
void dfs(int nod,int par){
	int64 ret=0;
	for(int i=0;i<v[nod].size();i++){
		int to=v[nod][i];
		if(to==par)
		continue;
		dfs(to,nod);
		int64 tmp=ret*a[to];
		if(tmp>=M)
		tmp%=M;
		ret+=a[to]+tmp;
		if(ret>=M)
		ret%=M;
	}
	a[nod]=ret+1;
}
int main(){
	int n,i,x,y;
	cin>>n;
	for(i=1;i<n;i++){
		cin>>x>>y;
		v[x].pb(y);
		v[y].pb(x);
	}
	dfs(0,-1);
	int64 ans=0;
	for(i=0;i<n;i++){
		ans+=a[i];
		if(ans>=M)
		ans%=M;
	}
	cout<<ans+1<<endl;
	return 0;
}