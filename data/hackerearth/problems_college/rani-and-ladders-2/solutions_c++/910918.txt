#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <limits>
#include <cstdio>

int minMoves(std::vector<int> &vi, int *mii, int n)
{	
	vi.at(n) = 0;
	
	for (int i = n; i >= 1; --i)
	{
		for (int j = 2; j <= 12; ++j)
		{
			if (i - j >= 1)
			{
				if (mii[i - j] != 0)
				{
					vi.at(i - j) = vi.at(mii[i - j]);
				}
				else
				{
					vi.at(i - j) = std::min(vi.at(i - j), 1 + vi.at(i));	
				}
			}
		}
	}
	
	return vi.at(1);
}

int main()
{
	int t, n, l, b, u;
	//std::cin >> t;
	scanf("%d", &t);
	
	while (t--)
	{
		std::cin >> n >> l;
		std::vector<int> vi(n + 1, 999999);
		int mii[n + 1];
		
		for (int i = 0; i < n + 1; ++i)
		{
			mii[i] = 0;
		}
		
		while (l--)
		{
			//std::cin >> b >> u;
			scanf("%d%d", &b, &u);
			mii[b] = u;
		}
		
		//std::cout <<  minMoves(vi, mii, n) << std::endl;
		printf("%d\n", minMoves(vi, mii, n));
	}
	
	return 0;
}
