#include <iostream>
#include <cstdio>
#include <queue>
#include <utility>

using namespace std;

int g[1001][1001], n, m, count;

void check(int, int);

int main()
{
	int q, i, j, x, y;
	scanf("%d %d %d", &n, &m, &q);
	for (i = 1; i <= n; ++i) {
		for (j = 1; j <= m; ++j) {
			scanf("%d", &g[i][j]);
			if (g[i][j]) count++;
		}
	}

	for (; q; --q) {
		scanf("%d %d", &x, &y);
		check(x, y);
		printf("%d\n", count);
	}

	return 0;
}

void check(int x, int y)
{
	if (g[x][y] == 1) {
		g[x][y] = 0;
		count -= 1;
		int a, b, i, j;
		pair <int, int> p;
		queue <pair<int, int> > q;
		q.push(make_pair(x, y));
		while (!q.empty()) {
			p = q.front();
			q.pop();
			a = p.first;
			b = p.second;
			i = a + 1;
			j = b;
			if (i >= 1 && i <= n && j >= 1 && j <= m && g[i][j] == 1) {
				g[i][j] = 0;
				count -= 1;
				q.push(make_pair(i, j));
			}
			i = a - 1;
			j = b;
			if (i >= 1 && i <= n && j >= 1 && j <= m && g[i][j] == 1) {
				g[i][j] = 0;
				count -= 1;
				q.push(make_pair(i, j));
			}
			i = a;
			j = b + 1;
			if (i >= 1 && i <= n && j >= 1 && j <= m && g[i][j] == 1) {
				g[i][j] = 0;
				count -= 1;
				q.push(make_pair(i, j));
			}
			i = a;
			j = b - 1;
			if (i >= 1 && i <= n && j >= 1 && j <= m && g[i][j] == 1) {
				g[i][j] = 0;
				count -= 1;
				q.push(make_pair(i, j));
			}
		}
	}
}