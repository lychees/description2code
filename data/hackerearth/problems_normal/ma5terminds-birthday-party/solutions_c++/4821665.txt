//Type     :
//Code name:
//Status   :
typedef unsigned long long ull; typedef long long ll;typedef long double ld;
#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstdlib> //for qsort
#include<vector>
#include<list>
#include<map>
#include<cstring>
#include<iterator>//(for advance )
#include<algorithm>
#include<utility> //for std::pair
#include<limits> //for numeric limits
#define loop(i,x,n) for(i=x;i<=n;i++)
#define scani(x) scanf("%d",&x)
#define scanfl(x) scanf("%f",&x)
#define scanc(x) scanf("%c",&x)
#define scand(x) scanf("%lf",&x)
#define scanll(x) scanf("%lli",&x)
#define scanl(x) scanf("%ld",&x)
#define scans(x) scanf("%s",x)
#define printi(x) printf("%d\n",x)
#define printl(x) printf("%ld\n",x)
#define printll(x) printf("%lli\n",x)
#define printd(x) printf("%lf\n",x)
#define printfl(x) printf("%f\n",x)
#define printc(x) printf("%c\n",x)
#define prints(x) printf("%s\n",x);
#define string(x) loop(i,0,strlen(x)-1)
#define newline cout<<"\n"
#define SIZE 1000002
#define MOD

using namespace std;
const long N=1000000;
 
bool isprime[SIZE];
 
void sieve(void) 
{
    
    memset(isprime,true,N+1);
    
    isprime[0]=false;
    isprime[1]=false;
    for(long i=2;i*i<=N;++i) 
	{
         if(isprime[i]) 
		 {   
		     // Mark all the multiples of i as composite numbers
             for(long j=i*i;j<=N;j+=i)
                 isprime[j]=false;
         }
    }
}
int main()
{
    //ios_base::sync_with_stdio(false); //Saves time by disabling synchronization
    //cin.tie(NULL);             //To untie cin from cout
    sieve();
    
    long arr[SIZE]={0,1};
    for(long i=2;i<=N;i++)
    {
    	arr[i]=((!isprime[i])&&(i!=4))?arr[i-1]+1:arr[i-1];
	}
	long t;
    
    scanl(t);
    while(t--)
    {
      	long l,r,cards=0;
      	scanf("%ld %ld",&l,&r);
        printl(arr[r]-arr[l-1]);
	}

}






