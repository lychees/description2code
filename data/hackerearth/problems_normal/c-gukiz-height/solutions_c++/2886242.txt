#include <bits/stdc++.h>

using namespace std;
vector <long long > a, prefix;

int n;
long long  sum = 0;
long long height;

const long long INF = 1000000000000000000LL;

bool solve(long long val, int i) {
    long long ans = sum * val + ((val*n + i + 1) *(val*n + i + 2))/2;
    if (ans >= height  - prefix[i]) {
        return true;
    }
    return false;
}

int main() {

        cin>>n>>height;
        a.resize(n);
        prefix.resize(n);
        for(int i = 0; i < n; i++) {
            cin>>a[i];
            sum +=a[i];
            if (i > 0) {
                prefix[i] = prefix[i-1] + a[i];
            } else {
                prefix[0] = a[0];
            }
        }
        if( sum <= 0) {
            bool flag = false;
            long long curr = height;
            for (int i = 0; i < n; i++) {
                curr = curr - (i + 1);
                if( prefix[i] >= curr) {
                    cout<< (i + 1) << endl;
                    return 0;
                }
            }
                        long long answer = INF;
                        for(int i = 0; i < n; i++) {
                            long long minima = -(2*sum + ((long long)n*(2*i + 3)))/(2*(long long)n * n);
                            long long  low = max(0LL, minima+1);
                            long long  high = (5000000000-i)/n;
                            long long ans = INF;
                            while(low <= high) {
                                long long mid = (low + high) / 2;
                                if (solve(mid, i)) {
                                    high = mid - 1;
                                    ans = mid;
                                } else {
                                    low = mid + 1;
                                }
                            }
                            assert(ans != INF);
                            answer = min(answer, ans*n+i+1);
                        }
                        cout << answer << endl;
        } else {
            long long answer = INF;
            for(int i = 0; i < n; i++) {
                long long  low = 0;
                long long  high = 10005;
                long long ans = 0;
                while(low <= high) {
                    long long mid = (low + high) / 2;
                    if (solve(mid, i)) {
                        high  = mid - 1;
                        ans = mid;
                    } else {
                        low = mid + 1;
                    }
                }
                answer = min(answer, ans*n+i+1);
            }
            cout << answer << endl;
        }
}
