#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};
int main()
{
	ios_base::sync_with_stdio(false);
	ll  n, ans, k, i, j, val, req, pos;
	cin >> n >> k;
	vl v(n);
	for( i=0;i<n;i++ )
	{
		cin >> v[i];
	}
	sort( v.begin(), v.end() );
	vl::iterator it1;
	ans = 0;
	for( i=0;i<n-2;i++ )
	{
		for( j=i+1;j<n-1;j++ )
		{
			val = v[i]*v[j];
			if( val > k)
				break;
			req = k/val;
			it1 = upper_bound( v.begin()+j+1, v.end(), req);
			it1--;
			pos = it1-v.begin();
			pos -= j;
			ans += pos;	
		}
	}
	cout << ans;
	//cin >> n;
    return 0;
}
