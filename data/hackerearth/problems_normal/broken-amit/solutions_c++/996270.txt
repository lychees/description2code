#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;
#define ND 30000
#define ED 1000000
#define INF 1000000000LL
#define ll long long 
#define pii pair<ll,ll>
#define f_in(st) freopen(st,"r",stdin);
#define f_out(st) freopen(st,"w",stdout);
#define ll long long

ll n,k,m,eg_no,st,en,rs,fl,mx;
ll to[ED],nx[ED],cap[ED],cst[ED],last[ND],ds[ND],pr[ND],pr_i[ND];
void init()
{
    eg_no=0;
    memset(last,-1,sizeof(last));
}
void add_edge(ll u,ll v,ll cp,ll r_cp,ll cs,ll r_cs)
{
    to[eg_no]=v;cap[eg_no]=cp;cst[eg_no]=cs;nx[eg_no]=last[u];last[u]=eg_no++;
    to[eg_no]=u;cap[eg_no]=r_cp;cst[eg_no]=r_cs;nx[eg_no]=last[v];last[v]=eg_no++;
}
ll bellman()
{
    for(ll i=0;i<ND;i++) ds[i]=INF;
    memset(pr,-1,sizeof(pr));
    memset(pr_i,-1,sizeof(pr_i));
    queue<ll>q;
    ll mrk[ND];
    memset(mrk,0,sizeof(mrk));
    q.push(st);mrk[st]=1;ds[st]=0;
    while(!q.empty())
    {
        ll p=q.front();q.pop();
        mrk[p]=0;
        for(ll i=last[p];i>=0;i=nx[i])
        {
            ll t=to[i];
            if(cap[i]<=0) continue;
            if(ds[t]>ds[p]+cst[i])
            {
                ds[t]=ds[p]+cst[i];
                pr[t]=p;pr_i[t]=i;
                if(mrk[t]==0){ mrk[t]=1;q.push(t); }
            }
        }
    }
    //cout<<ds[en]<<"-\n";
    if(ds[en]==INF) return 0;
    ll x=en,mn=10000000000LL;
    while(pr[x]!=-1){ mn=min(mn,cap[pr_i[x]]);x=pr[x]; }
    //cout<<"\n\n";
    x=en;
    while(pr[x]!=-1)
    {
        ll z=pr_i[x];
        cap[z]-=mn;cap[z^1]+=mn;
        x=pr[x];
    }
    rs+=ds[en];
    return mn;
}    
ll maxflow()
{
    rs=0;
    ll ans=0;
    while(1)
    {
        ll res=bellman();
        if(res==0) break;
        ans+=res;
    }
    //cout<<"ans = "<<ans<<"\n";
    return rs;
}   
ll M[20][20];
ll LV[20],D[20];
int main()
{
 
    ll tt;
    tt = 1;
    for(ll ii=1;ii<=tt;ii++)
    {
        init();
        cin>>n;
        st=2*n;en=2*n+1;
	for(ll i=0;i<n;i++) cin >> LV[i];
	for(ll i=0;i<n;i++) cin >> D[i];
	for(ll i=0;i<n;i++)
		for(ll j=0;j<n;j++)
			M[i][j] = n*LV[i]-(((j*(j+1))/2)*i*(D[i]) + (n-j-1)*(j*i*(D[i])));

        for(ll i=0;i<n;i++) add_edge(st,i,1,0,0,0);
        for(ll i=0;i<n;i++) add_edge(n+i,en,1,0,0,0); 
        for(ll i=0;i<n;i++)
        {
        	for(ll j=0;j<n;j++)
        	{
        		ll x = M[i][j];
        		add_edge(i,n+j,1,0,-x,x);
        	}
        }
	ll ans = 0-maxflow();
        cout<< ans<< "\n";
    }
    return 0;
}