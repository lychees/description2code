#include <iostream>
#include <algorithm>
#include <string>
#include <map>
#include <utility>
using namespace std;
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
    	int n;
    	cin>>n;
    	int q;
    	cin>>q;
		map<string,int> take;
		map<int,string> l; 
		for(int i = 0;i<n;++i)
		{
				string s;
				cin>>s;
				take.insert(pair<string,int>(s,0));
				l.insert(pair<int,string>(i,s));
		}
		map<string,int>::iterator it = take.begin();
		while(q--)
		{
			string name;
			cin>>name;
			int amt;
			cin>>amt;
			int p;
			cin>>p;
			int ac = amt%(p+1);
			int all = amt/(p+1);
			take[name]=take[name]+amt-(ac+all);
			for(int k=0;k<p;++k)
			{
				string prt;
				cin>>prt;
				take[prt]=take[prt]-all;
			}
		}

		for(int i=0;i<n;++i)
		{
			it = take.find(l[i]);
			if(it->second>0)
				cout<<it->first<<" is owed "<<(it->second)<<endl;
			else if(it->second<0)
				cout<<it->first<<" owes "<<-(it->second)<<endl;
			else
				cout<<it->first<<" neither owes nor is owed"<<endl;
			++it;	
		}
    }
    return 0;
}
