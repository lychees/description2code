#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>
using namespace std;

string reverse(string s) {
	stringstream ss;
	for (int i = 0; i < s.size(); i++) ss << s[s.size()-i-1];
	return ss.str();
}

void wordrev(string line, int x) {
	stringstream ss;
	ss << line;
	
	vector<string> v;
	string word;
	
	while (ss >> word) v.push_back(word);
	
	string del = "";
	stringstream response;
	for (int i = 0; i < v.size(); i++) {
		if (i < x) response << del << reverse(v[i]);
		else       response << del << v[i];
		del = " ";
	}
	cout << response.str() << endl;
}

void swap(vector<string>& v, int i, int j) {
	string temp = v[i];
	v[i] = v[j];
	v[j] = temp;
}

void sortuntil(vector<string>& v, int x) {
	for (int i = 0; i < x; i++) {
		int ref = i;
		for (int j = i+1; j < v.size(); j++) {
			if (v[ref].compare(v[j]) > 0) ref = j;
		}
		swap(v, i, ref);
	}
}

void sortword(string line, int x) {
	stringstream ss;
	ss << line;
	
	vector<string> v;
	string word;
	
	while (ss >> word) v.push_back(word);
	
	string del = "";
	stringstream response;
	
	sortuntil(v, x);
	for (int i = 0; i < v.size(); i++) {
		response << del << v[i];
		del = " ";
	}
	cout << response.str() << endl;
}

string subpalin(string line, int x) {
	int p = 0;
	for (int i = 0; i < line.size(); i++) {
		int d;
		for (d = 0; i-d >= 0 && i+d < line.size() && line[i-d] == line[i+d]; d++);
		
		if (d > 1) p++;
		if (p == x) {
			d--;
			stringstream ss;
			for (int j = -d; j <= d; j++) ss << line[i+j];
			return ss.str();
		}
		
		for (d = 0; i-d >= 0 && i+1+d < line.size() && line[i-d] == line[i+1+d]; d++);
		if (d > 0) p++;
		if (p == x) {
			d--;
			stringstream ss;
			for (int j = -d; j <= d+1; j++) ss << line[i+j];
			return ss.str();
		}
	}
	
	return "";
}

int main()
{
    string line;
    getline(cin, line);
    
    int n;
    cin >> n;
    
    while (n--) {
    	string command;
    	int x;
    	
    	cin >> command >> x;
    	
    	if (command.compare("Wordrev") == 0) {
    		wordrev(line, x);
    	}
    	else if (command.compare("sortword") == 0) {
    		sortword(line, x);
    	}
    	else {
    		cout << subpalin(line, x);
    	}
    }
    
    return 0;
}
