/*
 *  greedy_The_legend_of_Tanmay.cpp
 *
 *  Oct 3, 2016
 */


#include <bits/stdc++.h>
using namespace std;

#define iter(c) __typeof((c).begin())
#define tr(i, c) for (iter(c) i = (c).begin(); i != (c).end(); i++)
#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define forn(i, a, b) for (int i = (a); i <= (b); i++)

#define pb push_back
#define mp make_pair
#define f first
#define s second

#define debug(x) cout << #x << "   " << x << endl

typedef long long ll;
typedef pair<int, int> ii;

const int MAXN = int(2e5) + 5;
const ll MOD  = ll(1e9) + 7;

int N, p[20], n[20], pos, neg, zero;

int main() {
//    freopen("input.inp", "r", stdin);
//    freopen("output.out", "w", stdout);
    ios::sync_with_stdio(0);

    int tst; scanf("%d", &tst);
    while (tst--) {
        scanf("%d", &N);

        zero = pos = neg = 0;
        rep(i, 0, N) {
            int x; scanf("%d", &x);
            if (x == 0) zero++;
            else if (x > 0) p[pos++] = x;
            else  n[neg++] = x;
        }

        sort(p, p+pos), sort(n, n+neg);

        ll mx(0), mn(0);
        if (zero) {
            if (!pos && !neg);
            else if (pos == 0) {
                if (neg == 1) mn = n[0], mx = 0;
                else {
                    ll x(1);
                    rep(i, 0, neg-1) x = x * n[i];
                    mx = mn = x;
                    if (neg & 1) mn = x * n[neg-1];
                    else mx = x * n[neg-1];
                }
            }
            else {
                ll x(1); rep(i, 0, pos) x = x * p[i];
                if (neg) {
                    rep(i, 0, neg-1) x = x * n[i];
                    mx = mn = x;
                    if (neg & 1) mn = mn * n[neg-1];
                    else mx = mx * n[neg-1];
                }
                else {
                    mx = x, mn = 0;
                }
            }
        }
        else {
            ll x(0);
            if (pos) {
                x = 1;
                rep(i, 0, pos) x = x * p[i];
                rep(i, 0, neg-1) x = x * n[i];
                mx = mn = x;
                if (neg) {
                    if (neg & 1) mn = mn * n[neg-1];
                    else mx = mx * n[neg-1];
                }
                else mn = p[0];
            }
            else {
                if (neg == 1) mn = mx = n[0];
                else {
                    x = 1;
                    rep(i, 0, neg-1) x = x * n[i];
                    mx = mn = x;
                    if (neg & 1) mn = mn * n[neg-1];
                    else mx = mx * n[neg-1];
                }
            }
        }

        printf("%lld %lld\n", mx, mn);
    }
}
