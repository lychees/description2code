#include<bits/stdc++.h>
using namespace std;
int posxf,posyf;
int n;
int marked[30][30]={0};
int path_size=INT_MAX;
char arr[30][30];
void DFS(int posx,int posy,int counter){
	//printf("%d\n(%d,%d)",counter,posx,posy);
	if(posx==posxf && posy==posyf){
		
		if(counter<path_size){
			path_size=counter;
		}
		return ;	
	}
	else
			if(marked[posx][posy]==0)
			{		
					marked[posx][posy]=1;
					if((arr[posx+1][posy]=='P'||arr[posx+1][posy]=='E') && posx+1<n && marked[posx+1][posy]==0){
						//printf("Goes to first\n");
						DFS(posx+1,posy,counter+1);
					}
					if((arr[posx-1][posy]=='P'||arr[posx-1][posy]=='E') && posx-1>=0 && marked[posx-1][posy]==0){
						//printf("Goes to second\n");
						DFS(posx-1,posy,counter+1);
					}
					if((arr[posx][posy+1]=='P'||arr[posx][posy+1]=='E') && posy+1<n && marked[posx][posy+1]==0){
						//printf("Goes to third\n");
						DFS(posx,posy+1,counter+1);
					}
					if((arr[posx][posy-1]=='P'||arr[posx][posy-1]=='E') && posy-1>=0 && marked[posx][posy-1]==0){
						//printf("Goes to fourth\n");
						DFS(posx,posy-1,counter+1);
					}
					marked[posx][posy]=0;
			}
}
int main(){
	
	int posx,posy;
	scanf("%d",&n);
	
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
		{		scanf(" %c",&arr[i][j]);
				if(arr[i][j]=='S'){
					posx=i;
					posy=j;
				}
				if(arr[i][j]=='E'){
					posxf=i;
					posyf=j;
				}
		}
	
	DFS(posx,posy,0);
	printf("%d",path_size);
	return 0;
}
