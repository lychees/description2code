#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int dp[1001][1001];
int t;
int q;
vector<pair<int, int> > v;
//int maxy[1001];  //?????????
#define MOD 1000000007
int main(){
	scanf("%d", &t);
	while (t--){
		int n;
		scanf("%d", &n);
		memset(dp, 0, sizeof(dp));
		scanf("%d", &q);
		v.clear();
		while (q--){
			int a, b;
			scanf("%d%d", &a, &b);
			v.push_back(make_pair(a, b));
		}
		sort(v.begin(), v.end());
		int maxx = -1;
		bool ok = 0;
		for (int i = 0; i < v.size(); i++){
			if (maxx>v[i].second){
				ok = 1;
				break;
			}
		}
		if (ok){
			puts("0");
			continue;
		}
		v.push_back(make_pair(n - 1, n - 1));
		int ind = 0;
		dp[0][0] = 1;
		for (int i = 0; i < n; i++){
			for (int j = 0; j < n; j++){
				if (make_pair(i, j) == v[ind]){
					ind++;
				}
				if (ind == v.size()){
					break;
				}
				pair<int, int> nex = { i + 1, j };
				if (nex.first<=v[ind].first&&nex.second<=v[ind].second){
					dp[nex.first][nex.second] += dp[i][j];
					dp[nex.first][nex.second] %= MOD;
				}
				nex = { i, j+1 };
				if (nex.first <= v[ind].first&&nex.second <= v[ind].second){
					dp[nex.first][nex.second] += dp[i][j];
					dp[nex.first][nex.second] %= MOD;
				}
			}
		}
		long long int ans = dp[n - 1][n - 1];
		ans %= MOD;
		printf("%lld\n", ans);
	}
	return 0;
}