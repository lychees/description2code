#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <set>
#include <map>
#include <vector>
#include <string>
#include <cmath>
#include <cstring>
#include <queue>
#include <stack>
#include <algorithm>
#include <sstream>
#include <numeric>
#include <cassert>
using namespace std;

#define f first
#define s second
#define mp make_pair
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define forit(it,S) for(__typeof(S.begin()) it = S.begin(); it != S.end(); ++it)
#ifdef WIN32
#define I64d "%I64d"
#else
#define I64d "%lld"
#endif

typedef pair <int, int> pi;
typedef vector <int> vi;
typedef long long ll;

const int maxn = 1555555;
int n, m, pos[555555];
int f[maxn];

void add(int x, int d) {
  while (x < maxn) {
    f[x] += d;
    x = (x | (x + 1));
  }
}

int sum(int x) {
  int res = 0;
  while (x >= 0) {
    res += f[x];
    x = (x & (x + 1)) - 1;
  }
  return res;
}

int main() {
  scanf("%d%d", &n, &m);
  int lg = m;
  int rg = n + m;
  for (int i = 0; i < n; i++) {
    int x;
    scanf("%d", &x);
    pos[x] = lg + i;
    add(lg + i, 1);
  }
  ll res = 0;
  for (int i = 0; i < m; i++) {
    char c;
    int x;
    scanf("%d %c\n", &x, &c);
    int p = sum(pos[x]);
    res += min(p - 1, n - p);

    add(pos[x], -1);
    if (c == 'l') {
      pos[x] = --lg;
    } else {
      pos[x] = rg++;
    }
    add(pos[x], +1);
  }
  cout << res << endl;
  return 0;
}
