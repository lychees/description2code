#include <iostream>
#include <array>
using namespace std;

using ull = unsigned long long;
constexpr ull mod = 1000000007ull;

array<unsigned, 100000> a;
array<unsigned, 100000> b;

ull powm(ull x, unsigned n) {
	ull res = 1;
	while (n) {
		if (n % 2 == 1)
			res = (res * x) % mod;
		x = (x * x) % mod;
		n /= 2;
	}
	return res;
}

ull inversem(ull x) {
	return powm(x, mod - 2);
}

int main() {
	ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    int n;
    cin >> n;
    ull prod = 1;
    int cz = 0;
    for (int i = 0; i < n; ++i) {
    	cin >> a[i];
    	if (a[i]) {
    		b[i] = inversem(a[i]);
    		prod = (prod * a[i]) % mod;
    	} else {
    		++cz;
    	}
    }
    int q;
    cin >> q;
    for (int i = 0; i < q; ++i) {
    	int t, id;
    	cin >> t >> id;
    	if (t) {
    		if (a[id - 1]) {
    			cout << (cz ? 0 : (prod * b[id - 1]) % mod) << '\n';
    		} else {
    			cout << (cz == 1 ? prod : 0) << '\n';
    		}
    	} else {
    		if (a[id - 1]) {
    			ull invi = b[id - 1];
    			prod = (prod * b[id - 1]) % mod;
    		} else {
    			--cz;
    		}
    		cin >> a[id - 1];
    		if (a[id - 1]) {
    			prod = (prod * a[id - 1]) % mod;
    			b[id - 1] = inversem(a[id - 1]);
    		} else {
    			++cz;
    		}
    	}
    }
    return 0;
}
