#include <bits/stdc++.h>
using namespace std;
int maxm=1,minm=1,grp;
void initialize(int arr[],int size[],int n)
{
	for(int i=0;i<n;i++)
	{
		arr[i]=i;
		size[i]=1;
	}
}
int root(int arr[],int i)
{
	while(arr[i]!=i)
	{
		arr[i]=arr[arr[i]];
		i=arr[i];
	}
	return i;
}
void unio(int arr[],int size[],int a,int b)
{
	int root_a=root(arr,a);
	int root_b=root(arr,b);
//	int m,n;
	if(size[root_a]<size[root_b])
	{
		arr[root_a]=arr[root_b];
		size[root_b]+=size[root_a];
		size[root_a]=0;
		minm=min(minm,size[root_a]);
		maxm=max(maxm,size[root_b]);
	}
	else
	{
		arr[root_b]=arr[root_a];
		size[root_a]+=size[root_b];
		size[root_b]=0;
		minm=min(minm,size[root_b]);
		maxm=max(maxm,size[root_a]);
	}
}
int main()
{
    int n,q,a,b,c,d;
    cin>>n>>q;
    int arr[n];
    int size[n];                  grp=n;
    initialize(arr,size,n);
    while(q>0)
    {
    	cin>>a>>b;
    	a--;b--;
    	if(grp==1)
    	cout<<"0\n";
    	else
    	{
    		c=root(arr,a);
    	    d=root(arr,b);
    		if(c==d)
         	{
    	    	cout<<maxm-minm-1<<endl;
    	    }
    	    else
    	    {
    	    	unio(arr,size,a,b);
    	    	if(grp==2)
    	    	cout<<"0\n";
    	    	else
    	        cout<<maxm-minm-1<<endl;
    	        grp--;
    	    }
    	}
    	q--;
    }
    return 0;
}