/* Author : RISHAV GOYAL */

#include <bits/stdc++.h>

using namespace std;

#define LL long long int

#define gcd(a,b) __gcd(a,b)

LL powmod(LL a,int b,int n){LL rm=1;while (b){if (b % 2) { rm = (rm * a) % n; }a = (a * a) % n;b /= 2;}return rm;}

#define SIZE 32000
bool prime[SIZE+1]={false};
int pr[SIZE],npr=0;

void sieve()
{
	int i,j,it,a;
	int sq = sqrt(SIZE);
	for(i=3;i<=sq;i+=2)
	{
		if(prime[i]==false) 
		{
			a=2*i;
			for(j=i*i;j<=SIZE;j+=a) prime[j]=true;
		}
	}

	pr[++npr]=2;
	for(i=3;i<=SIZE;i+=2)
	{
		if(prime[i]==false) pr[++npr]=i;
	}
	pr[npr+1] = 1e9 + 1e3;
}

int inv(LL b,LL a){
	LL m = a,oo=a;
	int p=1;
	
	while ( p<=npr){
		if ( a % pr[p] ==0){
			m /=pr[p];
			m *= (pr[p]-1);
			while ( a % pr[p]==0 ) a/=pr[p];
		}
		p++;
		if ( pr[p] > a) break;
	}
	if ( a>1){
		m /= a;
		m *= a-1;
	}
	return powmod ( b, m-1, oo);
}

int main()
{
	LL a,b,c,ao,bo,co,d,minMoves,g,y,binv;
	sieve();
	int t;
	cin>>t;
	while ( t--){
		cin >> c>> a>> b;
		if ( c % a==0){
			cout << c/a<<endl;
			continue;
		}
		ao = a;
		bo = b;
		co = c;

		d = (a - c%a) % a;
		g = gcd( b, a);
		if ( d % g != 0){
			cout << -1<<endl;
			continue;
		}
		else{
			b/=g;
			d/=g;
			a/=g;
			binv = inv(b,a);
			y = (d * binv ) % a;
			minMoves = y + ( bo * y +  co) /ao;
			cout << minMoves << endl;
		}
	}
	return 0;
}
