#include <cstdio>
#include <algorithm>
#include <vector>
#include <stack>

using namespace std;

int N,M,K,counter,sccs;
vector<int> adj[100013];
int num[100013];
int low[100013];
int visited[100013];
stack<int> scc;
int which[100013];
int has[100013];

void dfs(int x) {
    num[x] = low[x] = counter++;
    scc.push(x);
    for (int i: adj[x]) {
        if (!num[i]) dfs(i);
        if (low[i]) low[x] = min(low[x],low[i]);
    }
    if (low[x]==num[x]) {
        while (true) {
            int v = scc.top();
            scc.pop();
            low[v] = 0;
            which[v] = sccs;
            has[sccs]+=1;
            if (x==v) break;
        }
        sccs+=1;
    }
}

int main() {
	scanf("%d%d",&N,&M);
    for (int i=0;i<M;i++) {
        int a,b;
        scanf("%d%d",&a,&b);
        adj[a].push_back(b);
    }
    counter = 1;
    sccs = 0;
    for (int i=1;i<=N;i++) if (!num[i]) dfs(i);
    for (int i=1;i<=N;i++) printf("%d ",(has[which[i]]>1));
    printf("\n");

    return 0;
}