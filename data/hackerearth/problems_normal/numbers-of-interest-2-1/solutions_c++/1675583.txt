
#include<iostream>
#define N 1000000
#include<cmath>
#include<cstdio>
using namespace std;
int prime[N+1];
long long int yy [1000001];
long long int y [1000001];
long long int x [1000001];
long long int xx [1000001];
 
void sieve(){
    prime[0]=1;
    prime[1]=1;
    for(long long i=2;i<=N;i++){
        if(!prime[i]){
                        prime[i]=i;
            for(long long j=i;j*i<=N;j++){
                prime[j*i]=i;
            }
        }
    }
}

long long int primeFactorize(int n){
    long long int yy=1;
    for( ; n > 1 ; ){
        int p = prime[n] , e = 0 ;
        for( ; n % p == 0 ; n /= p , e++ ) ;  
        yy*= ((p-1)*(pow((double)p,e-1)));
    }
    return yy;
}

long long hh () {
	long long int i;
	long long int j;
	
	i = 1;
	
	while (i < 1000001) {
		j = 2;
		while (j * i < 1000001) {
			xx [i * j] = xx [i * j] + i;
			j++;
		}
		i++;
	}
	
	for (i = 0; i < 100; i++) {
   		//printf ("%lld\n", xx [i]);
   }
}

long long int lowest () {
	long long int i;
	long long int j;
	i = 2;
	
	while (i < 1000001) {
		j = 1;
		if (yy [i] == 0) {
			while (i * j < 1000001) {
				if (yy [i * j] == 0) {
					yy [i * j] = i;
				}
				j++;
			}
		}
		i++;
	}
}

int main()
{
   sieve();
   lowest ();
   hh ();
   long long int t, i;
   scanf("%d",&t);
   x [0] = y [0] = x [1] = y [1] = 0;
   for (i = 2; i < 1000001; i++) {
   		x [i] = x [i - 1] + xx [i];
   		y [i] = y [i - 1] + yy [i];
   }
   for (i = 0; i < 100; i++) {
   	//printf ("%lld %lld\n", x [i], y [i]);
   }
   while(t--)
   {
    int n;
    scanf("%d",&n);
    //long long int ll = ;
    //ll = n - ll;
    printf("%lld\n",(x [n] + y [n])%n);              
   } 
    
   return 0;
}