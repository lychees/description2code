//Author : Jatin Goyal
//codecracker4

#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007  //NA
#define ll long long int
#define dt int
#define all(c) c.begin(), c.end()
#define dcl(a) memset(a,0,sizeof(a))
#define rep(i,a,b) for(i=a;i<=b;i++)
#define tr(container, it) for(vector<dt> ::iterator it= container.begin(); it!=container.end(); it++)
#define trp(container, it) for(vector<pair<dt,dt> >::iterator it = container.begin(); it!=container.end(); it++)
#define tra(container, it) for(nultiset<int>::iterator it = container.rbegin(); it!=container.rend(); it++)
#define pr pair<dt,dt>  //NA
#define mp(a,b) make_pair(a,b)
#define pb push_back  //NA
#define gc getchar  //NA
#define F first
#define S second
int cnt,sarr[26][811111];
int update(int a,int b,int c,int no,int add)
{
    while(a!=b)
    {
        sarr[cnt][c]=sarr[cnt][c]+add;
        if((no<=(a+b)/2)&&(no>=a))
        {
            b=(a+b)/2;
            c=c*2;
        }
        else
        {
            a=((a+b)/2)+1;
            c=c*2+1;
        }
    }
    sarr[cnt][c]=sarr[cnt][c]+add;
    return 0;
}
int sum(int a,int b,int c,int x,int y)
{
    if((x<=a)&&(b<=y)) return sarr[cnt][c];
    if((y<a)||(x>b)) return 0;

    int p1= sum(a,(a+b)/2,c*2,x,y);
    int p2= sum(((a+b)/2)+1,b,c*2+1,x,y);
    return p1+p2;
}

int main()
{
    string str;
    int i,j,m,no,a[26],f,l,r,mid,ct[26];
    char ch;
    dcl(a);
    dcl(ct);

    //freopen("##inp.cpp","r",stdin);
    //freopen("##out.cpp","w",stdout);
	//ios_base::sync_with_stdio(0);
	cin>>str>>m;
	rep(i,0,str.size()-1) a[str[i]-'a']++;

	rep(cnt,0,25)
	{
	    rep(j,0,a[cnt]-1)
	    {
	      update(0,a[cnt]-1,1,j,1);
        //  cout<<sum(0,a[cnt]-1,1,0,j)<<' ';
	    }
	    //cout<<endl;
	}

	while(m--)
    {
        cin>>no>>ch;
        cnt=ch-'a';
        l=0;
        r=a[cnt]-1;
        while(l+1<r)
        {
            mid=(l+r)/2;
            if(sum(0,a[cnt]-1,1,0,mid)>=no) r=mid;
            else l=mid+1;
        }
        rep(mid,l-2,l+2)
        {
            if(mid<0) continue;
            if(sum(0,a[cnt]-1,1,0,mid)==no) break;
        }
        update(0,a[cnt]-1,1,mid,-1);
    }
    
/*
	rep(cnt,0,4)
	{
	    rep(j,0,a[cnt]-1)
	    {
	      cout<<sum(0,a[cnt]-1,1,0,j)<<' ';
	    }
	    cout<<endl;
	}
*/
	rep(i,0,str.size()-1)
	{
	    cnt=str[i]-'a';
	    if(sum(0,a[cnt]-1,1,ct[cnt],ct[cnt])==1) cout<<str[i];
        ct[cnt]++;
	}

}
