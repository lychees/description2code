#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

int arr[100005];

int dsFind(int pos)
{
	if(arr[pos]<0)
		return pos;
	arr[pos] = dsFind(arr[pos]);
	return arr[pos];
}

bool dsUnion(int A, int B)
{
	int x = dsFind(A);
	int y = dsFind(B);
	if(x==y)
		return 0;
	if(arr[x]<arr[y])
	{
		arr[x] += arr[y];
		arr[y] = x;
	}
	else
	{
		arr[y] += arr[x];
		arr[x] = y;
	}
	return 1;
}

bool chkMST(vector<vector<int> > &A, vector<int> &B)
{
	for(int i=0; i<B.size(); i++)
	{
		if(!dsUnion(A[B[i]-1][0], A[B[i]-1][1]))
			return 0;
	}
	return 1;
}

int main()
{
    int t, n, m, a, b;
    vector<vector<int> > g;
    vector<int> sp;
    cin>>t;
    while(t--)
    {
    	memset(arr, -1, sizeof(arr));
    	g.clear();
    	sp.clear();
    	cin>>n>>m;
    	while(m--)
    	{
    		cin>>a>>b;
    		sp.push_back(a);
    		sp.push_back(b);
    		g.push_back(sp);
    		sp.clear();
    	}
    	n--;
    	while(n--)
    	{
    		cin>>a;
    		sp.push_back(a);
    	}
    	if(chkMST(g, sp))
    		cout<<"YES"<<endl;
    	else
    		cout<<"NO"<<endl;
    }
    return 0;
}
