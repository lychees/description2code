/*
* www.hackerearth.com/practice/data-structures/advanced-data-structures/fenwick-binary-indexed-trees/practice-problems/algorithm/string-query-22/
*/
#include <bits/stdc++.h>
using namespace std;
const int MAXN = 2e5 + 3;
int last[MAXN];
int BIT[26][MAXN];
char s[MAXN];
int n, m;
void update(char c, int k, int delta) {
	while (k <= n) {
		BIT[c][k] += delta;
		k += k & -k;
	}
}

int getSum(char c, int k) {
	int ret = 0;
	while (k) {
		ret += BIT[c][k];
		k -= k & -k;
	}
	return ret;
}

int main() {
	//freopen("input.txt", "rt", stdin);
	scanf("%s", s + 1);
	n = strlen(s + 1);
	scanf("%d", &m);
	int pos; char c;
	int l, r, mid, t;

	for (int i = 1; i <= n; ++i) {
		s[i] -= 'a';
		update(s[i], i, 1);
	}

	for (int i = 0; i < m; ++i) {
		scanf("%d %c", &pos, &c);
		l = 1, r = n;
		c -= 'a';
		while (l <= r) {
			mid = (l + r) >> 1;
			t = getSum(c, mid);
			if (t < pos) l = mid + 1;
			else r = mid - 1;
		}
		update(c, l, -1);
	}

	for (int i = 1; i <= n; ++i) {
		t = getSum(s[i], i);
		if (t == last[s[i]] + 1) {
			printf("%c", s[i] + 'a');
		}
		last[s[i]] = t;
	}

	return 0;
}