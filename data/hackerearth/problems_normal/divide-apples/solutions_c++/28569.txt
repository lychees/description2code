#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl

vector<ill> a;
vector<ill> cm;
vector<ill> k;

ill Abs(ill n) {
    if(n<0) return -n;
    return n;
}

int main() {
    ill i,n,x;
    ill sum=0,first;
    Sl(n);
    F(i,0,n) {
        Sl(x);
        sum+=x;
        a.pb(x);
    }
    ill avg = sum/n;
    F(i,0,n) {
        a[i]-=avg;
    }
    sum = 0; first = a[0];
    F(i,0,n) {
        sum+=a[i];
        cm.pb(sum);
        k.pb(sum-first);
    }
    ill K,ans=0;
    sort(cm.begin(),cm.end());
//debug(i,n,cm);
    if ( n%2 == 0 ) {
        K = cm[n/2]+cm[n/2-1];
        K /=2;
        /*
        ill ans1=0,ans2=0;
        K = k[n/2];
        F(i,0,n) {
            ans1 += Abs(cm[i]+K);
        }
        K = k[(n/2)-1];
        F(i,0,n) {
            ans2 += Abs(cm[i]+K);
        }
        ans = min(ans1,ans2); */
    } else {
        K = cm[n/2];
        /*
        K = k[n/2];
        F(i,0,n) {
            ans += Abs(cm[i]+K);
        } */
    }
    F(i,0,n) {
        ans+=Abs(cm[i]-K);
    } printf("%lld", ans);
    return 0;
}