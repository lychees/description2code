#include<bits/stdc++.h>
using namespace std;
long long POWER[64];
long long dp[64][2][3];
long long n;
const int MOD = 1e9+7;
long long go(int idx, bool f, int carry) {
	if(idx==63 and f and !carry) return 1;
	else if(idx==63) return 0;
	if(dp[idx][f][carry]!=-1) return dp[idx][f][carry];
	long long ret=0;
	if(POWER[idx]&n) {
		if(carry==1) ret+=go(idx+1,f,0);
		if(ret>=MOD) ret-=MOD;
		if(!carry) ret+=(3*go(idx+1,f,0))%MOD;
		if(ret>=MOD) ret-=MOD;
		if(carry==2) ret+=(3*go(idx+1,f,1))%MOD;
		if(ret>=MOD) ret-=MOD;
		if(carry==1) ret+=(3*go(idx+1,f,1))%MOD;
		if(ret>=MOD) ret-=MOD;
		if(!carry) ret+=go(idx+1,true,1);
		if(ret>=MOD) ret-=MOD;
		if(carry==2) ret+=go(idx+1,true,2);
		if(ret>=MOD) ret-=MOD;		
	}
	else {
		if(!carry) ret+=go(idx+1,f,0);
		if(ret>=MOD) ret-=MOD;		
		if(carry==2) ret+=go(idx+1,f,1);
		if(ret>=MOD) ret-=MOD;		
		if(carry==1) ret+=(3*go(idx+1,f,1))%MOD;
		if(ret>=MOD) ret-=MOD;		
		if(carry==0) ret+=(3*go(idx+1,f,1))%MOD;
		if(ret>=MOD) ret-=MOD;		
		if(carry==2) ret+=(3*go(idx+1,f,2))%MOD;
		if(ret>=MOD) ret-=MOD;		
		if(carry==1) ret+=go(idx+1,true,2);
		if(ret>=MOD) ret-=MOD;		
	}
	return dp[idx][f][carry]=ret;
}
int main() {
	int t;
	cin>>t;
	POWER[0]=1;
	for(long long i=1;i<64;i++) POWER[i]=POWER[i-1]<<1LL;
	while(t--) {
		memset(dp,-1,sizeof(dp));
		scanf("%lld",&n);
		printf("%lld\n",go(0,false,false));
	}
	return 0;
}