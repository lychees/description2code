#include <bits/stdc++.h>
using namespace std;
long long DP[1000][1000];

int main() {
	int T;
	cin >> T;

	while(T--) {
		memset((void*)*DP, 0, 1000*1000*sizeof(long long));
		string str;
		cin >> str;

		DP[0][0] = 1;
		DP[1][1] = 1;
		if(str[0] == str[1])
			DP[1][0] = 6;
		else DP[1][0] = 2;

		int len = str.length();
		for(int i=2; i<len; i++) {
			int j=i;
			DP[i][j--] = 1;
			if(str[i] == str[j--])
				DP[i][i-1] = 4;
			if(str[i] == str[j--])
				DP[i][i-2] = 9;

			while(j >= 0) {
				if(DP[i-1][j+1] != 0 && str[i] == str[j])
					DP[i][j] = (i-j+1)*(i-j+1);
				else DP[i][j] = 0;
				j--;
			}
			
			long long ans=0;
			for(j=0; j<=i; j++)
				ans += DP[i][j];
			DP[i][0] = DP[i-1][0] + ans;
		}

#ifdef DEBUG
		for(int i=0; i<len; i++) {
			for(int j=0; j<=i; j++)
				cout << setw(5) << DP[i][j] << " ";
			cout << endl;
		}
#endif

		cout << DP[len-1][0] << endl;
	}

	return 0;
}
