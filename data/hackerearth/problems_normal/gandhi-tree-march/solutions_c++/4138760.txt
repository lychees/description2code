#include <bits/stdc++.h>
using namespace std;

struct node {
	char c;
	node * left, *right;

	node(char x) {
		c = x;
		left = right = NULL;
	}
};

void preorder(node * root, map<int,vector<char> > &mp, int idx = 0) {
	if(root == NULL)
		return;
	mp[idx].push_back(root->c);
	preorder(root->left, mp, idx-1);
	preorder(root->right, mp, idx+1);
}

node * constructTree(string &s, int &idx) {
	if(s[idx] == '.') {
		idx++;
		return NULL;
	}

	node * x = new node(s[idx++]);

	if(s[idx] == '(') {
		idx++;
		x -> left = constructTree(s, idx);
		x -> right = constructTree(s, idx);
		idx++;
	} else idx++;

	return x;
}

int main()
{
	int t = 1;
	cin >> t;
	while(t--) {
		int col;
		string s;
		cin >> col >> s;
		int idx = 0;
		node * root = NULL;
		map<int,vector<char> > mp;
		root = constructTree(s, idx);
		preorder(root, mp);
		vector<char> v = mp[col];
		sort(v.begin(), v.end());
		for(int i = 0; i < v.size(); i++)
            cout << v[i];
        if(v.size() == 0)
            cout << "Common Gandhijee!";
        cout << endl;
	}
    return 0;
}
