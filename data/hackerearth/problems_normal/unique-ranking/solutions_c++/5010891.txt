// hackerearth file
#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
#include<string>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%ld",&x)
#define gll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll MOD = 1e9+7;
//const int INF = 0x7f7f7f7f;
const int INF = 111111;
const double eps = 1e-6;
//const long long INF = 1e18;

const int MAXN = 1111111;
vector < pair < int,int > >v[22];
int marks[1111][22];

bool cmp(const pair < int,int >& a,const pair < int,int >& b) {
	if(a.first == b.first) return a.second < b.second;
	return a.first < b.first;
}

int main() {
	//ios_base::sync_with_stdio(false);

	int n,k; scanf("%d %d",&n,&k);
	for (int i = 1; i <= n; i ++) {
		for (int j = 1; j <= k; j ++) {
			int x; scanf("%d",&x);
			v[j].pb(mp(x,i));
			marks[i][j] = x;
		}
	}

	for (int i = 1; i <= k; i ++) sort(v[i].begin(),v[i].end(),cmp);
	
	int q; scanf("%d",&q);
	while (q --) {
		int m; scanf("%d",&m);

		int sub; scanf("%d",&sub);
		int mn = v[sub][0].first;
		
		vector < int > cand;
		for (int i = 0; i < sz(v[sub]); i ++) {
			if(mn < v[sub][i].first) break;
			cand.pb(v[sub][i].second);
		}
		
		for (int i = 1; i < m; i ++) {
			scanf("%d",&sub);

			if(sz(cand) == 1) continue;
			sort(all(cand));
			
			vector < pair < int,int > > cand2;
			for (int j = 0; j < sz(cand); j ++)
				cand2.pb(mp(marks[cand[j]][sub],cand[j]));

			sort(all(cand2),cmp);
			cand.clear(), mn = cand2[0].first;

			for (int ii = 0; ii < sz(cand2); ii ++) {
				if(mn < cand2[ii].first) break;
				cand.pb(cand2[ii].second);
			}
		}
		sort(all(cand));
		printf("%d\n",cand[0]);
	}
	
	return 0;
}
