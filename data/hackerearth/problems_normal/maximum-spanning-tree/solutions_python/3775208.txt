import sys as s
import heapq
INF = 1 + 25 * 10**8
def Prim(G, n, s):
    #dist = [INF] * (n+1)
    marked=[False]*(n+1)
    #dist[s] = 0
    mst=0
    
    heap = []
    heapq.heappush(heap, (0,s))

    while heap:
        d, u = heapq.heappop(heap)
        if marked[u]== True:
            continue#The continue statement, also borrowed from C, continues with the next iteration of the loop
        #if marked[u]==False:
        marked[u]=True  
        mst+=d  

        for (v, w) in G[u]:
            if marked[v]==False:
                #dist[v] = dist[u] + w
                heapq.heappush(heap, (w, v))

    return mst

t=input()
while t!=0:
 n, m = map(int, s.stdin.readline().split())
 G = [[] for i in xrange(n+1)]

 for i in xrange(m):
    x, y, z = map(int, s.stdin.readline().split())
    z=z*(-1)
    G[x].append((y, z))
    G[y].append((x, z))
 print Prim(G,n,1)*(-1)
 t-=1  

