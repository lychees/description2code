#include <iostream>
using namespace std;

typedef long long ll;

/*
function inverse(a, n)
    t := 0;     newt := 1;    
    r := n;     newr := a;    
    while newr ? 0
        quotient := r div newr
        (t, newt) := (newt, t - quotient * newt) 
        (r, newr) := (newr, r - quotient * newr)
    if r > 1 then return "a is not invertible"
    if t < 0 then t := t + n
    return t
*/

ll inv(ll a, ll p){
	ll t = 0;
	ll newt = 1;
	ll r = p;
	ll newr = a;
	
	ll tmp;
	while(newr!=0){
		ll quot = r/newr;
		
		tmp = newt;
		newt = t-quot*newt;
		t = tmp;
		
		tmp = newr;
		newr = r - quot*newr;
		r = tmp;
	}
	
	if(r>1) return -1;
	if(t<0) t+= p;
	return t;
}

int main()
{
    int T;
    cin >> T;
    
    for(int t=0;t<T;t++){
    	ll a, p, n;
    	cin >> a >> p >> n;
    	
    	ll ainv = inv(a, p);
    	if(ainv==-1) cout << "-1" << endl;
    	else{
    		ll ans = (a + ainv)*(n/2) + a*(n%2);
    		cout << ans << endl;
    	}
    }
    
    return 0;
}
