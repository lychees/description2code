#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
#define pll pair<ll,ll>
#define F first
#define S second
#define repl(i,a,b) for(ll i=a;i<=b;++i)
#define pb push_back
#define vll vector<ll>
#define sll vector<sll>
#define mp make_pair
#define M 1000000007
#define ln length()
ll n,m,par[200005],sz[200005],mstree;
vll nb[200005],wt[200005];
bool mst[200005];
struct edge{
ll ind,v1,v2,w;
}e[200005];
bool cmp(edge e1,edge e2){
return(e1.w<e2.w);
}
ll par_find(ll v){
    return par[v]==v?v:par[v]=par_find(par[v]);
}
int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin>>n>>m;
    if(n==1) {
    	cout<<0;
    	return 0;
    }
    repl(i,0,m-1) cin>>e[i].v1>>e[i].v2>>e[i].w,e[i].ind=i;
    repl(i,1,n) par[i]=i,sz[i]=1;
    sort(e,e+m,cmp);
    mst[0]=1;mstree=e[0].w;
    par[e[0].v2]=e[0].v1;
    nb[e[0].v1].pb(e[0].v2);nb[e[0].v2].pb(e[0].v1);
    wt[e[0].v1].pb(e[0].w);wt[e[0].v2].pb(e[0].w);
    repl(i,1,m-1){
        ll p1=par_find(e[i].v1),p2=par_find(e[i].v2);
        if(p1==p2) continue;
        if(sz[p2]>sz[p1]) swap(p1,p2);
        par[p2]=p1;
        sz[p1]+=sz[p2];
        mst[i]=1;mstree+=e[i].w;
        nb[e[i].v1].pb(e[i].v2);nb[e[i].v2].pb(e[i].v1);
        wt[e[i].v1].pb(e[i].w);wt[e[i].v2].pb(e[i].w);
    }
    cout<<mstree;
    
}