#include <bits/stdc++.h>

using namespace std;

#define MAX 100005
#define ff first
#define ss second
#define mp make_pair
#define pb push_back

vector<pair<string, int> > vec[11], arr;
vector<string> str;
vector<int> ind[MAX], pos;

int main(){
	ios_base::sync_with_stdio(false);
	int n;
	cin>>n;

	string s;

	for(int i=1 ; i<=n ; i++){
		cin>>s;
		vec[s.size()].pb(mp(s, i));
	}

	for(int i=1 ; i<11 ; i++)
		sort(vec[i].begin(), vec[i].end());	

	int ct = 0;
	for(int i=1 ; i<11 ; i++){
		string last;
		for(int j=0 ; j<vec[i].size() ; j++){
			if(last == vec[i][j].ff){
				ind[ct].pb(vec[i][j].ss);
			} else {	
				ct++;
				last = vec[i][j].ff;
				ind[ct].pb(vec[i][j].ss);
				arr.pb(mp(last, ct));
			}	
		}
	}

	sort(arr.begin(), arr.end());

	for(int i=0 ; i<arr.size() ; i++)
		str.pb(arr[i].ff), pos.pb(arr[i].ss);

	int q;
	cin>>q;

	while(q--){
		int l, r;
		cin>>l>>r>>s;

		int len = s.size(), index;
		if(binary_search(str.begin(), str.end(), s) == false){
			cout<<0<<"\n";
			continue;
		}

		index = (int)(lower_bound(str.begin(), str.end(), s) - str.begin());
		index = pos[index];

		int a = (int)(lower_bound(ind[index].begin(), ind[index].end(), l) - ind[index].begin());
		int b = (int)(upper_bound(ind[index].begin(), ind[index].end(), r) - ind[index].begin()) - 1;

		cout<<max(0, b - a + 1)<<"\n";
	}	

	return 0;
}