#include <bits/stdc++.h>
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define UP upper_bound
#define LB lower_bound
#define LL long long 
#define Pi 3.14159265358
#define si size()
#define en end()
#define be begin()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define ii set<int>::iterator
#define Tree int ind, int L, int R
#define Left 2*ind,L,(L+R)/2
#define Right 2*ind+1,(L+R)/2+1,R
using namespace std;
LL a[1000002];
LL I[1000002];
LL X[1000002];
LL t1[3000002];
LL t[3000002];
map < LL , LL > f;
LL n, m, k, i, j, q, x, res;
vector < LL > v;
LL sum (LL r)
{
	LL result = 0;
	for (; r >= 0; r = (r & (r+1)) - 1)
		result += t[r];
	return result;
}

void update(LL i, LL delta)
{
	for (; i <=v.si; i = (i | (i+1)))
		t[i] += delta;
}
LL sum1(LL r)
{
	LL result = 0;
	for (; r >= 0; r = (r & (r+1)) - 1)
		result += t1[r];
	return result;
}

void update1(LL i, LL delta)
{
	for (; i <=v.si; i = (i | (i+1)))
		t1[i] += delta;
}
main(){
	   cin>>n>>q;
	   for(i=1;i<=q;i++)
	    {
	     scanf("%d%d",&I[i],&X[i]);
	     a[I[i]]+=X[i];
		 if(!f[a[I[i]]])v.pb(a[I[i]]);	
		}
	   sort(v.be,v.en);
	   for(i=0;i<v.si;i++)f[v[i]]=i;
	   for(i=1;i<=n;i++)a[i]=0;	
	   for(j=1;j<=q;j++)
	    {
	     i=I[j], x=X[j];
		 res-=(sum1(v.si)-sum1(f[a[i]])+1)*a[i];
		 update1(f[a[i]],-1);
		 update(f[a[i]],-a[i]);
		 a[i]+=x;
		 res+=(sum1(v.si)-sum1(f[a[i]])+1)*a[i];
		 update1(f[a[i]],1);
		 update(f[a[i]],a[i]);
		 res+=sum(f[a[i]]-1)-sum(f[a[i]-x]-1);
		 cout<<res<<endl;	
		}
       }
