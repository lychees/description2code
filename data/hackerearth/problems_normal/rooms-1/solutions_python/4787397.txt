import heapq

t = int(raw_input())

for i in range(t):
	n = int(raw_input())
	finish = [None]*n
	start = map(int, raw_input().strip().split(' '))
	duration = map(int, raw_input().strip().split(' '))
	
	for j in range(n):
		finish[j] = start[j]+duration[j]

	sf = zip(start,finish)
	sf.sort(key=lambda t: t[0])
	rooms=[]
	heapq.heappush(rooms, sf[0][1])

	for i in range(1, n):
		if sf[i][0] < rooms[0]:
			heapq.heappush(rooms, sf[i][1])
		elif sf[i][0] >= rooms[0]:
			heapq.heapreplace(rooms, sf[i][1])

	print len(rooms)
