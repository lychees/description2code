#include <iostream>
#include <vector>
#include <queue>
#define MAX 1001
using namespace std;

void bfs(int s, vector<int> ppl[MAX], int dist[MAX])
{
    queue<int> kolejka;
    bool visited[MAX];

    for(int z=0;z<MAX;z++)
        visited[z]=0;

    kolejka.push(s);

    dist[0]=0;

    while(!kolejka.empty())
    {
        int cur=kolejka.front();
        kolejka.pop();
        visited[cur]=1;

        for(int i=0;i<ppl[cur].size();i++)
        {
            if(visited[ppl[cur][i]]==0)
            {
                visited[ppl[cur][i]]=1;
                kolejka.push(ppl[cur][i]);
                dist[ppl[cur][i]]=dist[cur]+1;
            }
        }
    }
}

int main()
{
    int v,e;
    vector<int> ppl[MAX];
    int dist[MAX];
    cin >> v;
    cin >> e;

    for(int i=0;i<MAX;i++)
    {
        dist[i]=-1;
    }

    for(int k=0;k<e;k++)
    {
        int a,b;
        cin >> a;
        cin >> b;
        ppl[a].push_back(b);
        ppl[b].push_back(a);
    }

    bfs(0,ppl,dist);

    for(int h=1;h<v;h++)
    {
        cout << dist[h] << endl;
    }

    return 0;
}
