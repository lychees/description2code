//by Tanmay Chaudhari
#include <bits/stdc++.h>

using namespace std;

#define si(a)				scanf("%d",&a)
#define sl(a)				scanf("%lld",&a)
#define sd(a)				scanf("%lf",&a)
#define ss(a)				scanf("%s",a)
#define pi(a)				printf("%d\n",a)
#define pl(a)				printf("%lld\n",a)
#define LL				    long long 

#define pb(x)				push_back(x)
typedef vector<int>			vi;
typedef pair<int, int>		ii;
typedef vector<ii>			vii;
typedef vector<vii>			vvii;

//FILE *fin = freopen("input.txt","r",stdin);
//FILE *fout = freopen("output.txt","w",stdout);

#define MOD					1000000007
#define MAX					1000005

#define all(a)				a.begin(),a.end()
#define allrev(a)			a.rbegin(),a.rend()			
#define forall(i,a,b)		for(int i=a; i<b; i++)
#define forrev(i,a,b)		for(int i=a; i>=b; i--)
#define w(t)				int t;si(t);while(t--)

#define checkbit(n,b)                ( (n >> b) & 1)
#define DREP(a)                      sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())
#define bit(x,i)					(x&(1<<i))  //select the bit of position i of x
#define lowbit(x)					((x)&((x)^((x)-1))) //get the lowest bit of x
#define hBit(msb,n)					asm("bsrl %1,%0" : "=r"(msb) : "r"(n)) //get the highest bit of x

set <long long > sa;
LL arr[100];
void precompute()
{
	LL a = 0,b=1;
	arr[0] = a; arr[1] = b;
	//sa.insert(a);
	sa.insert(b);
	for (int i = 2; i < 85; i++)
	{
		arr[i] = arr[i - 1] + arr[i - 2];
		sa.insert(arr[i]);
	}
}

int main()
{
	precompute();
	int t;
	LL n, ans, prevans, temp;
	si(t);
	while (t--)
	{
		sl(n);
		temp = n;
		set<long long>::iterator itr;
		ans = 0;
		prevans = ans;
		while (1)
		{
			prevans = ans;
			ans = 0;
			for (itr = sa.begin(); itr != sa.end(); itr++)
			{
				if (*itr <= temp)
					ans++;
			}
			if (prevans == ans)
				break;
			else
				temp = n + ans;
		}
		pl(temp);
	}
	return 0;
}