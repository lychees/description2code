#include <iostream>
#include <vector>
#include <cmath>
#include <unordered_map>

using namespace std;

int main()
{
	long long int t;
	cin>>t;
	while(t--)
	{
		long long int n,l,r,no;
		cin>>n>>l>>r;
		unordered_map<long long int, long long int> mymap;
		vector<long long int> v(n, 0);
		vector<vector<long long int> >out;
		for(long long int i = 0; i < n; i++)
		{
			cin>>no;
			mymap[no] = 1;
		}

		n = mymap.size();
		long long int i = 0;
		for (auto it = mymap.begin(); it != mymap.end(); ++it, i++)
		{
			v[i] = it->first;
			out.push_back(vector<long long int> ());
		}
    	long long int totalComb = (long long int)pow(2, (long long int)n), j;

 		for(i = 0; i < totalComb; i++)
    	{
    		long long int count = 0, mul = 1;
      		for(j = 0; j < n; j++)
      		{
       			if(i & (1<<j))	
       			{
       				count++;
				long long int prev=mul;
       				mul *= v[j];
				
				if(mul<prev)
				{
					mul=1;
					count=-1;
					break;
				}
       			}
       		}
       		if(count > 0)
       		{
       			out[count - 1].push_back(mul);
       		}
    	}

    	long long int sum = 0;
    	bool flag = false;
    	for(long long int i = 0; i < out.size(); i++)
		{
			flag = !flag;
			for(long long int j = 0; j < out[i].size(); j++)
			{
				if(flag)
					sum = sum + ((long long int)(r / out[i][j]) - ((long long int)(l - 1) / out[i][j]));
				else
					sum = sum - ((long long int)(r / out[i][j]) - ((long long int)(l - 1) / out[i][j]));
			}
		}
		cout<<sum<<endl;
	}
	return 0;
}