#include <iostream>
using namespace std;
typedef struct node
{
    int data;
    struct node *next;
}node;

node *CreateNode(int data)
{
    node *temp=new node();
    temp->next=NULL;
    temp->data=data;
    return temp;
}
void PrintMirrorView(int a[],int n)
{
    int sum=1,prod=1;
    cout<< a[0]<<"\n";
    node *f=NULL,*t=NULL;
    while(sum<=n)
    {
        prod=prod*2;
        sum=sum+prod;
        int start=sum-prod;
        int leftNode=-1;
        int rightNode=-1;
        while(start<sum)
        {
            if(a[start]!=0 && leftNode==-1)
                leftNode=start;
            if(a[start]!=0)
            {
                rightNode=start;
            }
            start++;
        }
        if(rightNode!=-1)
        {
            cout<<a[rightNode]<<"\n";
            if(leftNode!=rightNode)
            {
                node *temp=CreateNode(a[leftNode]);
                if(f!=NULL)
                {
                   t->next=temp;                    
                } 
                else
                {
                    f=temp;
                }
                t=temp;
            }
        }
        else
            break;
    }
    while(f!=NULL)
    {
        cout<<f->data<<"\n";
        f=f->next;
    }
}


int main()
{
   int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		int n;
		cin>>n;
		int a[32767];
		for (int j = 0; j < n; j++)
		{
			cin>>a[j];
		}
		PrintMirrorView(a,n);
		cout<<"\n";
	}

   return 0;
}
