//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}

ll invMod(ll n){
    return pwr(n, MOD-2);
}


int n, arr[100005], sieve[100005], mobius[100005], BIT[100005];
vector<int> val[100005];

void update(int idx, int val){
	while(idx <= 100000){
		BIT[idx] += val;
		idx += idx & (-idx);
	}
}

int sum(int idx){
	int ans = 0;
	while(idx){
		ans += BIT[idx];
		idx -= idx & (-idx);
	}
	return ans;
}


int main(){

    ios_base::sync_with_stdio(0);

    sieve[1] = 1;
    for(int i=1;i<=100000;i++)
    	mobius[i] = 1;
    for(int i=2;i<=100000;i++)
    	if(!sieve[i]){
    		for(int j=i;j<=100000;j+=i){
    			sieve[j] = 1;
    			mobius[j] *= -1;
    			if((j/i) % i == 0)	mobius[j] = 0;
    		}
    		sieve[i] = 0;
    	}

// for(int i=1;i<=10;i++)	cout<<mobius[i]<<" ";cout<<endl;

    cin>>n;
    for(int i=0;i<n;i++){
    	cin>>arr[i];
    	for(int j=1;1LL*j*j<=arr[i];j++){
    		if(arr[i] % j != 0)	continue;
    		if(mobius[j] != 0)	val[j].pb(arr[i]);
    		if((arr[i]/j) != j && mobius[arr[i]/j] != 0)	val[arr[i]/j].pb(arr[i]);
    	}
    }

// cout<<"val:\n";
// for(int i=1;i<=8;i++){
// 	cout<<i<<": ";for(auto j : val[i])	cout<<j<<" ";cout<<endl;
// }cout<<endl;

    ll ans = 0;
    for(int i=1;i<=100000;i++){

    	if(mobius[i] == 0)	continue;

    	ll temp = 0;
    	for(auto j : val[i]){
    		temp += sum(100000) - sum(j);
    		update(j, 1);
    	}

    	ans += mobius[i] * temp;
    	for(auto j : val[i])
    		update(j, -1);
    }

    cout<<ans;
    return 0;
}








