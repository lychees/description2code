#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1002;
int dp[MAXN][MAXN];
int val[MAXN];
int wt[MAXN];
int Knap(int n, int w) {
	for(int i=1;i<=n;i++) {
		for(int j=0;j<=w;j++) {
			if(wt[i]<=j)
				dp[i][j]=max(dp[i-1][j],dp[i-1][j-wt[i]]+val[i]);
			else
				dp[i][j]=dp[i-1][j];
		}
	}
	return dp[n][w];
}
int main() {
	int t;
	cin>>t;
	while(t--) {
		int n,w;
		cin>>n>>w;
		memset(dp[0],0,sizeof(dp[0]));
		for(int i=1;i<=n;i++)
			scanf("%d",&wt[i]);
		for(int i=1;i<=n;i++)
			scanf("%d",&val[i]);
		cout<<Knap(n,w)<<endl;
	}
	return 0;
}