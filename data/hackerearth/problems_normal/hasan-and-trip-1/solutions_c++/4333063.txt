#include <bits/stdc++.h>
using namespace std;
#define MAXN 3005
 
std::vector<pair<double,double> > vec;
#define inf INT_MAX
long double f[MAXN];
long double dp[MAXN];
long double dist(int i,int j){
	return (long double)sqrt((vec[i].first - vec[j].first)*(vec[i].first - vec[j].first) + (vec[i].second - vec[j].second)*(vec[i].second - vec[j].second));
}
long double solve(int i,int n){
 
	if(dp[i]!=-inf)
		return dp[i];
	if(i==0)
		return f[i];
	
	for(int j=0;j<i;j++)
		dp[i] = max(dp[i],solve(j,n) - dist(i,j) + f[i]);
		// cout << "value of dp for " << i << " and " << j << " is " << dp[i][j] << endl;
	return dp[i];
}
 
int main(){
 
	int n;
	double x,y;
	cin >> n;
	for(int i=0;i<n;i++){
		cin >> x >> y >> f[i];
		vec.push_back(make_pair(x,y));
	}
	for(int i=0;i<n;i++)
		dp[i] = -inf;
	long double ans  = solve(n-1,n);
	printf("%0.6Lf\n", ans);
	return 0;
}