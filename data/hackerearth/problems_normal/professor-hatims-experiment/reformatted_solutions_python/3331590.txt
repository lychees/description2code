Color = {}


def dfs(u, col, G):
    Color[u] = col
    for child in G[u]:
        if Color[child] == -1:
            if not dfs(child, (col + 1) % 2, G):
                return False
        elif Color[child] == col:
            return False
    return True


T = int(raw_input())
for cs in range(T):
    N, M = map(int, raw_input().split())
    G = {}
    for i in range(1, N + 1):
        G[i] = []
        Color[i] = -1

    for i in range(M):
        x, y = map(int, raw_input().split())
        G[x].append(y)
        G[y].append(x)
    Flag = True
    for i in range(1, N + 1):
        if Color[i] == -1:
            if not dfs(i, 0, G):
                Flag = False
                break
    if not Flag:
        print "Suspicious lizards found!"
    else:
        print "No suspicious lizards found!"
