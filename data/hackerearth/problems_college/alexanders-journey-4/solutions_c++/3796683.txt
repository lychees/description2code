#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<queue>
#include<climits>

using namespace std;

void scan(int &x); //IMPORTANT: for positive only

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define min(a,b) a<b?a:b

int V,src;

int minDistance(int dist[], bool sptSet[])
{
   int tmin = INT_MAX, min_index;

   for (int v = 0; v < V; v++)
     if (sptSet[v] == false && dist[v] <= tmin)
         tmin = dist[v], min_index = v;

   return min_index;
}


int graph[3003][3003]={0};
void dijk(int src)
{
     int dist[V];
     bool sptSet[V];
     for (int i = 0; i < V; i++)
        dist[i] = INT_MAX, sptSet[i] = false;

     dist[src] = 0;

     for (int cnt = 0; cnt < V-1; cnt++)
     {
       int u = minDistance(dist, sptSet);

       sptSet[u] = true;

       for (int v = 0; v < V; v++)

         if (!sptSet[v] && graph[u][v] && dist[u] != INT_MAX
                                       && dist[u]+graph[u][v] < dist[v])
            dist[v] = dist[u] + graph[u][v];
     }

    for (int i = 0; i < V; i++)
      {
          if(i!=src)
          {
              if(dist[i]==INT_MAX) printf("-1 ");
              else printf("%d ",dist[i]);
          }
      }
}


int main(void)
{
  int t;
  cin >> t;
  while(t--)
  {
      int n,m,x,y,r;
      cin >> n >> m;
      V=n;
      fill(graph,0);
      for(int i=0;i<m;i++)
      {
          scan(x);
          scan(y);
          scan(r);
          x--;
          y--;
          if(graph[x][y]!=0)
          {
          graph[x][y] = min(graph[x][y],r);
          graph[y][x] = min(graph[x][y],r);
          }
          else
          {
          graph[x][y] = r;
          graph[y][x] = r;
          	
          }
      }

      cin >> src;

      dijk(--src);
      cout << endl;
  }
  return 0;
}








void scan(int &x)
{
    register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}

   /* register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x; */
}
