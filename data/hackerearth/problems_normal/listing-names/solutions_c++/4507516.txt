#include<iostream>
#include<stdio.h>
#include<string.h>
using namespace std;
void merge(char a[200][200], int top,int mid, int bottom)
{
   char left[200][200],right[200][200];
 int i,j,k,l,m,n,r,p;
	k=0;
	for(i=top;i<=mid;i++)
	{
	strcpy(left[k],a[i]);
	k++;
	}
	p=0;
	for(j=mid+1;j<=bottom;j++)
	{
		strcpy(right[p],a[j]);
		p++;
	}
	m=top,l=0,r=0;
	while(l<=k-1&&r<=p-1)
	{
		if(left[l][0]==right[r][0])
		{
			int z=1;
			while(left[l][z]==right[r][z] && left[l][z]!='\n' && right[l][z]!='\n')
			{
				z++;
			}
			z;
			if(left[l][z]!='\n' && right[l][z]!='\n')
			{
			
			if(left[l][z]<right[r][z])
			{
				strcpy(a[m],left[l]);
				m++;
				l++;
			}
			else
			{
				strcpy(a[m],right[r]);
				m++;
				r++;
			}
		}
		else
		{
			if(left[l][z]=='\n')
			{
				strcpy(a[m],left[l]);
				m++;
				l++;	
			}
			else if(right[l][z]=='\n')
			{
					strcpy(a[m],right[r]);
				m++;
				r++;
			}
			else if(left[l][z]=='\n' && right[l][z]=='\n')
			{
				strcpy(a[m],left[l]);
				m++;
				l++;
					strcpy(a[m],right[r]);
				m++;
				r++;
			}
		}
	}
	
		else  if(left[l][0]<right[r][0])
		{
			strcpy(a[m],left[l]);
			m++;l++;
			
		}
		else if(left[l][0]>right[r][0])
		{
				strcpy(a[m],right[r]);
			m++;
			r++;
		}
	}
	while(l<=k-1)
	{
			strcpy(a[m],left[l]);
			m++;
			l++;
		
	}
	while(r<=p-1)
	{
			strcpy(a[m],right[r]);
		m++;
		r++;
	}
	
}
void mergesort(char a[200][200],int top, int bottom)
{  int mid;
  if(top<bottom)
  {
  	mid=(top+bottom)/2;
  	mergesort(a,top,mid);
  	mergesort(a,mid+1,bottom);
  		merge(a, top, mid, bottom);
  }
 
}

int main()
{
	int tc,k,count;
	char  num[200][200],num1[200][200];
	cin>>tc;
	for(int i=0;i<=tc-1;i++)
	{
		cin>>num[i];
		strcpy(num1[i],num[i]);
	
	}
	mergesort(num1,0,tc-1);
    for(int i=0;i<=tc-1;i++)
	{  count=0;
	    k=i;
		while(strcmp(num1[k],num1[k+1])==0 && k<=tc-1)
		{
			count++;
			k++;
		}
		i=i+count;
			cout<<num1[i]<<" "<<count+1<<"\n";
	}
	return 0;
}

		