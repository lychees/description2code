#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>
#include <functional>
#include <set>
#include <ctime>
#include <random>
using namespace std;


int grundy(map<pair<int,int>, int>& memo, int l, int r){
	if(l==r && l == 0) return 0;
	if(l>r) swap(l,r);
	if(memo.find({l,r}) != memo.end()) return memo[{l,r}];
	set<int> s;
	for(int i=0; i<l; i++){
		s.insert(grundy(memo, i,r));
	}
	for(int i=0; i<r; i++){
		s.insert(grundy(memo, l,i));
	}
	int g = 0;
	while(s.count(g)) g++;
	return memo[{l,r}] = g;
}

int main(){
	
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i=0; i<n; i++){
			cin >> a[i];
		}
		vector<int> x(n);
		for(int i=0; i<n; i++){
			cin >> x[i];
		}

		long long g = 0;
		for(int i=0; i<n; i++){
			long long l = x[i]-1;
			long long r = a[i]-x[i];
			g ^= (l^r);
		}

		if(g==0){
			cout << "Second" << endl;
		}else{
			cout << "First" << endl;
		}

	}
	
	
	/*
	map<pair<int,int>,int> memo;
	for(int i=0; i<10; i++){
		for(int j=0; j<10; j++){
			cout << i << "," << j << " : " << grundy(memo, i,j) << " " << (i^j) << endl;
		}
	}
	*/


	return 0;
}