#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return (r)%MOD;
}
//alice left to right 0
// bob right to left 1


int n,m;
char s[110][110];
int vis[110][111];
vector<pair<int,int>>pos;
void dfs(int r,int c){
   // cout<<"in dfs\n";
    if(r<0||r>=n)return;
    if(c<0||c>=m)return;
    if(s[r][c]=='.'||vis[r][c])return;
    vis[r][c]=1;
    pos.pb(mp(r,c));
    s[r][c]='.';//unmark the position
    dfs(r+1,c);
    dfs(r-1,c);
    dfs(r,c+1);
    dfs(r,c-1);
}


void arrange(){
   /*cout<<"in here\n";
  fr(i,0,n){
        printf("%s\n",s[i]);
     }*/

    fr(i,0,n){
      fr(j,0,m){
         vis[i][j]=0;
      }
    }
    int nr,nc,toshift=n;
   fr(i,0,n){
      fr(j,0,m){

         if(s[i][j]=='x'&&!vis[i][j]){
             pos.clear();
             dfs(i,j);
             toshift=n;
            fr(c,0,pos.size()){
                    nr=pos[c].x;
                    nc=pos[c].y;
                    int k=nr+1;
                    for(;k<n;k++){
                       if(s[k][nc]=='.'){
                          continue;
                       }
                       else{
                        break;
                       }
                    }
                    //printf("now nr=%d nc=%d toshift=%d k=%d\n",nr,nc,toshift,k)
;                    toshift=min(k-nr-1,toshift);
            }

           //   printf("dfs with i=%d j=%d\n shift=%d size=%d\n",i,j,toshift,pos.size());
          // if(toshift==n)toshift=0;
            //new markings
            fr(c,0,pos.size()){
                    nr=pos[c].x;
                    nc=pos[c].y;
                    s[nr+toshift][nc]='x';
                    vis[nr+toshift][nc]=1;//position used ya visited.found support
            }

         }


      }
   }

}


int main(){
    // freopen("testin.txt","r",stdin);
   // freopen("testout.txt","w",stdout);

     si(n),si(m);
     fr(i,0,n){
        scanf("%s",s[i]);
     }
   int q,h;
   si(q);

     fr(i,0,q){
        si(h);
        h=(n-h);

         if(i%2==0){
            fr(j,0,m){
               if(s[h][j]=='x'){
                   s[h][j]='.';
                    break;
               }
            }

         }
         else{
             frn(j,m-1,-1){
               if(s[h][j]=='x'){
                   s[h][j]='.';
                    break;
               }
            }
         }
     //    printf("call no=%d\n",i);
         arrange();

     }
     fr(i,0,n){
        printf("%s\n",s[i]);
     }



return 0;
}
