#include<cassert>
#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)

const LL MAX = 1e10;
int T, L, R;
vector<LL> S;
int main() {
    S.push_back(0);
    for (int i=0; i<(int)S.size(); i++) {
	for (int j=3; j<6; j+=2) {
	    LL x = (LL)S[i] * 10 + j;
	    if (x <= MAX) S.push_back(x);
	}
    }

    scanf("%d", &T);
    REP ($, T) {
	scanf("%d%d", &L, &R);
	assert(1 <= L && L <= MAX);
	assert(L <= R && R <= MAX);
	int ans = upper_bound(S.begin()+1, S.end(), (LL)R) - lower_bound(S.begin()+1, S.end(), (LL)L-1);
	printf("%d\n", ans);
    }
    return 0;
}
