#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include<stack>
#include<limits.h>
#include <queue>
#include <map>
#include <cstdlib>
#include <algorithm>
//psyduck
#define ll long long
#define S(x) scanf("%d",&x)
#define Sf(x) scanf("%f",&x)
#define Slf(x) scanf("%lf",&x)
#define Sl(x) scanf("%lld",&x)
#define P(x)  printf("%d\n", x)
#define Pf(x)  printf("%f\n", x)
#define Plf(x)  printf("%lf\n", x)
#define Pl(x)  printf("%lld\n", x)
#define mem(x,i) memset(x,i,sizeof(x))
using namespace std;

void dba(ll int debug_array[],ll int n){
    for (int i = 1; i <= n; i++)
        cout << debug_array[i]<<" ";
    cout << endl;
}
ll int a[100005];
ll int dp[100005];
int main()
{
    ll int t,i,n;
    Sl(t);

    while(t--){
        Sl(n);
        for (i = 1; i <= n; i++){
            Sl(a[i]);
        }
        dp[n] = a[n];
        for (i = n-1; i >= 1; i--){
            if(a[i] > dp[i+1]){
                dp[i] = a[i];
            }
            else {
                dp[i] = dp[i+1];
            }
        }
        // dba(dp,n);
        ll int share;
        ll int profit = 0;
        if(dp[1] == a[1]){
            share = 0;
        }
        else {
            share = 1;
            profit = profit-a[1];
        }
        for (i = 2; i <= n; i++){
            if(a[i] == dp[i]){
                ll int tmp = share*a[i];
                profit = profit+tmp;
                share = 0;
            }
            else {
                share = share+1;
                profit = profit-a[i];
            }
        }
        cout << profit<<endl;
    }
}
