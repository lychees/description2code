#!/usr/bin/env python

modulo = 1000000007
lim = 1000

# dynamic programming approach:
# \binom{n}{k} = \frac{n!}{k!(n-k)!}
# \binom{n}{k} + \binom{n}{k-1} = \binom{n+1}{k}
all_binoms = [[1]]
for i in xrange(1, lim + 1):
    all_binoms.append([1])
    for j in xrange(1, i + 1):
        if j == i:
            all_binoms[-1].append(1)
        else:
            all_binoms[-1].append(all_binoms[-2][j-1] + all_binoms[-2][j])


def binom(i, n):
    # \binom{n}{i} = \frac{n!}{i!(n-i)!}
    result = 1
    for j in xrange(i + 1, n + 1):
        result *= j
    for j in xrange(2, n - i + 1):
        result //= j
    return result % modulo


T = int(raw_input())
for _ in xrange(0, T):
    N, P = [int(x) for x in raw_input().split()]
    # \sum_{i=0}^{P} \binom{N}{i}
    s = 0
    for i in xrange(0, P + 1):
        # s += binom(i, N)
        s += all_binoms[N][i]
        s %= modulo
    print s
