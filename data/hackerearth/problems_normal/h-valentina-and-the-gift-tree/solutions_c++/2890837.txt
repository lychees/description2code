#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define debug(...) printf(__VA__ARGS__)
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}

const ll bla=(ll)1e9*(-1000); 
vi g[N];
int a[N];
struct node{
    ll l,r,mx,sum;
    node operator +(const node&a)const{
        if(a.mx==bla)return *this;
        if(mx==bla)return a;
        node b;
        b.l=max(l,a.l+sum);
        b.r=max(a.r,r+a.sum);
        b.sum=sum+a.sum;
        b.mx=max(mx,max(a.mx,r+a.l));
        return b;
    }
}dp[N][18];
int p[N][18],d[N];
void dfs(int u,int fa){
    d[u]=d[fa]+1;
    dp[u][0]={a[u],a[u],a[u],a[u]};
    p[u][0]=fa;
    for(int i=1;i<18;i++){
        p[u][i]=p[p[u][i-1]][i-1];
        dp[u][i]=dp[u][i-1]+dp[p[u][i-1]][i-1];
    }
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        dfs(j,u);
    }
}
int lca(int a,int b){
    if(d[a]<d[b])swap(a,b);
    int h=d[a]-d[b];
    for(int i=0;i<18;i++)if(h>>i&1)a=p[a][i];
    if(a==b)return a;
    for(int i=17;i>=0;i--)if(p[a][i]!=p[b][i])a=p[a][i],b=p[b][i];
    return p[a][0];
}
node query(int a,int b,int flag=0){
    node ans={bla,bla,bla,bla};
    for(int i=17;i>=0;i--){
        int x=p[a][i];
        if(d[x]<=d[b])continue;
        //if(d[a]-(1<<i)<d[b])continue;
        ans=ans+dp[a][i];a=p[a][i];
    }

    if(p[a][0]==b)ans=ans+dp[a][0],a=p[a][0];
    //else assert(a==b);
    assert(a==b);
    if(flag)swap(ans.l,ans.r);
    return ans;
}
int main(){
    //ios::sync_with_stdio(0);
    //cout<<fixed<<setprecision(10);
    int T=5,i,j,k,m,n;
    scanf("%d",&n);
    for(i=1;i<n;i++){
        scanf("%d%d",&j,&k);//j--,k--;
        g[j].pb(k);g[k].pb(j);
    }
    for(i=1;i<=n;i++)scanf("%d",&a[i]);
    for(i=0;i<18;i++)dp[0][i]={bla,bla,bla,bla};
    dfs(1,0);
    scanf("%d",&m);
    while(m--){
        int a,b;
        scanf("%d%d",&a,&b);//a--,b--;
        int fa=lca(a,b);
        node ans=query(a,fa)+dp[fa][0]+query(b,fa,1);
        printf("%lld\n",ans.mx);
    }
    return 0;
}