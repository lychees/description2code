#include <stdio.h>
#include <iostream>
#include <queue>
#define FOR(i, a, b) for (int i(a), b_(b); i <= b_; ++i) 
#define FORD(i, a, b) for (int i(a), b_(b); i >= b_; --i)
using namespace std;
template <class T> inline void RD(T &a) {
	register int ch = getchar(); bool ng = 0;
	for (; ch < '0' || ch > '9'; ch = getchar()) if(ch == '-') ng = 1;
	for (a = 0; ch >= '0' && ch <= '9'; ch = getchar()) a = (a<<1) + (a<<3) + (ch ^ '0');
	if (ng) a = ~a + 1;
}
template <class T> inline void WT(T a) {
	if (a < 0) putchar('-'), WT(~a + 1);
	else { if (a > 9) WT(a / 10); putchar(a % 10 ^ '0'); }
} 
const int N = 401;
int n, k, sv[N], sh[N], av[N], ah[N];
priority_queue <int, vector <int>, greater <int> > q;
int main() {
	int nTest; RD(nTest);
	while (nTest--) {
		RD(n), RD(k);
		FOR(i, 1, n) FOR(j, 1, n) {
			int x; RD(x);
			sv[j] += x, sh[i] += x; 
		}
		FOR(i, 1, n) q.push(sv[i]);
		FOR(i, 1, k) {
			int x = q.top();
			av[i] = av[i - 1] + x, q.pop(), q.push(x + n);
		}
		while (!q.empty()) q.pop();
		FOR(i, 1, n) q.push(sh[i]);
		FOR(i, 1, k) {
			int x = q.top();
			ah[i] = ah[i - 1] + x, q.pop(), q.push(x + n);
		}
		while (!q.empty()) q.pop();
		FOR(i, 1, n) sv[i] = sh[i] = 0;
		int res = 1e9;
		FOR(i, 0, k) res = min(res, ah[i] + av[k - i] + i * (k - i));
		WT(res), puts("");
	}
}