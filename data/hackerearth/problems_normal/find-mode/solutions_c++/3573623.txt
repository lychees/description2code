#include <bits/stdc++.h>

using namespace std;

#define DEBUG ON

#ifdef DEBUG
#define dout(...) cout<<__VA_ARGS__
#else
#define dout(...) do_nothing()
#endif

void do_nothing() {}

typedef map<string, int> mymap;

template <typename T1, typename T2>
struct less_second {
    typedef pair<T1, T2> type;
    bool operator ()(type const& a, type const& b) const {
        return a.second > b.second;
    }
};

int main()
{
    map<int, int> numbers;

    priority_queue<int> mode;
    int no_tests;
    scanf("%d", &no_tests);
    while(no_tests--)
    {
        int n_val;
        scanf("%d", &n_val);
        numbers.clear();
        mode=priority_queue<int>();
        for(int i=0;i<n_val;i++)
        {
            int no;
            scanf("%d", &no);
            numbers[no]++;

        }

        vector<pair<int, int> > mapcopy(numbers.begin(), numbers.end());
        sort(mapcopy.begin(), mapcopy.end(), less_second<int, int>());
        vector<pair<int, int> >::iterator iti1;

        int max_no = mapcopy.begin()->second;
        iti1 = mapcopy.begin();

        mode.push(iti1->first);
        iti1++;
        for(; iti1->second == max_no && iti1 != mapcopy.end(); iti1++)
        {
                mode.push(iti1->first);
        }

        int s_size = mode.size();
        while(!mode.empty())
        {
            printf("%d" , mode.top());
            mode.pop();
            if(s_size >1)
                cout<<" ";
            s_size--;
        }
        printf("\n");


    }
    return 0;
}
