#include<bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef long long int ll;
typedef pair<int,int> pii;

int ar[100100];
class node
{
    public :
    	int l,r;
    	int maxi;
};

const int MAXN = 1e5;
node st[4*MAXN+4];

node merge(node a,node b)
{
	node res;
	res.l=a.l;res.r=b.r;
	if(ar[a.maxi]>ar[b.maxi])
		res.maxi = a.maxi;
	else res.maxi = b.maxi;
	return res;
}

void makest(int j,int lx,int rx)
{
    st[j].l=lx;st[j].r=rx;
    if(lx==rx)
    {
    	st[j].maxi=lx;
    	return;
    }
    int mid = (lx+rx)/2;
    makest(2*j,lx,mid);
    makest(2*j+1,mid+1,rx);
    st[j]=merge(st[2*j],st[2*j+1]);
}

node querry(int j,int lx,int rx)
{
    if(st[j].l == lx && st[j].r==rx)
        return st[j];
    if(rx <=st[2*j].r)
        return querry(2*j,lx,rx);
    if(lx >= st[2*j+1].l)
        return querry(2*j+1,lx,rx);
    return merge(querry(2*j,lx,st[2*j].r),querry(2*j+1,st[2*j+1].l,rx));
}
int n;
ll res;
ll val(int l,int r)
{
	if(l==r)
	{
		return 0;
	}
	if(r==(l+1))
		return max(ar[l],ar[r]);
	int w = querry(1,l,r).maxi;
	if(w==l)
	{
		return ar[w]+val(l+1,r);
	}
	if(w==r)
	{
		return ar[w]+val(l,r-1);
	}
	return 2*ar[w]+val(l,w-1)+val(w+1,r);
}
int main()
{
	int test;
	cin>>test;
	for(int z=1;z<=test;z++)
	{
		cin>>n;
		for(int i=1;i<=n;i++)
			scanf("%d",&ar[i]);
		makest(1,1,n);
		cout<<val(1,n)<<endl;
	}
}