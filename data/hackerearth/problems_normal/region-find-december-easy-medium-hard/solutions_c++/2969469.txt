/*input
3
2 2
1 1
1 1
1 3
2 1 1
2 2
3 2
3 2 

*/
#include <bits/stdc++.h>
#include <stdlib.h>
using namespace std;
long long mod=1e9+7;
 
typedef long long unsigned llu;
typedef long long int lld;
typedef long ld;
#define rep(i,a,n) for(long long int i = (a); i <= (n); ++i)
#define repI(i,a,n) for(int i = (a); i <= (n); ++i)
#define repD(i,a,n) for(long long int i = (a); i >= (n); --i)
#define repDI(i,a,n) for(int i = (a); i >= (n); --i)

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld%lld",&a,&b)
#define sc3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scd(a) scanf("%d",&a)
#define scd2(a,b) scanf("%d%d",&a,&b)
#define scd3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("%lf%lf",&a,&b)
#define scf3(a,b,c) scanf("%lf%lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prdL(a) printf("%d\n",a)
#define prdS(a) printf("%d ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a)
#define popcount __builtin_popcountll
#define swap(a,b,t) t=a;a=b;b=t
typedef pair<lld,lld> PA;
 
#define lim 300003
#define lim2 3003
inline lld sqr(lld x) { return x * x; }
map<lld,lld> M,Mn;
// map<lld,lld>::iterator it;
// set<PA>::iterator it;
// std::ios::sync_with_stdio(false);
// string S[lim],T[lim],Q[lim];
 
// multiset<lld> S;
// set<PA> S;
// string S;
 vector<lld> V[lim];
 
// lld dp[3003][3003];
// lld A[lim],dp1[lim],dp2[lim],P[lim];
// bool dp[1002][12][12];
// priority_queue<PA> Q;
// double X[lim],Y[lim],C[lim];
lld A[lim],D[lim],dp[2000][3];
// PA E[lim];
// lld P[lim],Q[lim];
// std::vector<lld> V;
// lld P[lim],Q[lim],R[lim];
// char S[lim];
// double dp[1<<18];
// lld countV=0,op;
lld one,zero,ansR;

void dfs(lld x,lld p){
	lld yes,no,k,t,n;
	n=V[x].size();
	rep(i,0,2) dp[x][i]=0;
	if(D[x]<one){
		// dp[x][0]=1;
		k=1;
		rep(i,0,n-1){
			t=V[x][i];
			if(t!=p){
				dfs(t,x);
				k=k*((dp[t][0]+dp[t][1]+dp[t][2]+1)%mod)%mod;
			}
		}
		dp[x][0]=k;
	}
	else if(D[x]==one){
		// dp[x][1]=1;
		k=1;
		yes=1;
		rep(i,0,n-1){
			t=V[x][i];
			if(t!=p){
				dfs(t,x);
				k=k*((dp[t][1]+dp[t][2]+1)%mod)%mod;
				yes=yes*((dp[t][0]+dp[t][1]+dp[t][2]+1)%mod)%mod;
			}
		}
		dp[x][1]=k;
		dp[x][0]=(yes-k+mod)%mod;
		ansR=(ansR+dp[x][1])%mod;
	}
	else{
		// dp[x][2]=1;
		k=1;
		yes=1;
		no=1;
		rep(i,0,n-1){
			t=V[x][i];
			if(t!=p){
				dfs(t,x);
				k=k*((dp[t][2]+1)%mod)%mod;
				no=no*((dp[t][1]+dp[t][2]+1)%mod)%mod;
				yes=yes*((dp[t][0]+dp[t][1]+dp[t][2]+1)%mod)%mod;
			}
		}
		dp[x][2]=k;
		dp[x][1]=(no-k+mod)%mod;
		dp[x][0]=(yes-no+mod)%mod;
		ansR=(ansR+dp[x][1])%mod;
	}
}

int main(){
    // std::ios::sync_with_stdio(false);
    lld T,i,j,h,l,r,k,s,a,b,c,d,w,x,y,v,z,t,p,q,n,m,curr,prev,sum,ans,pos,val,countA,secondMin,indicator;
    sc(n);
    rep(i,1,n) sc(D[i]);
    rep(i,1,n-1){
    	sc2(j,k);
    	V[j].pb(k);
    	V[k].pb(j);
    }
    sc(q);
    while(q--){
    	sc(one);
    	ansR=0;
    	dfs(1,0);
    	prL(ansR);
    }
	return 0;
}

