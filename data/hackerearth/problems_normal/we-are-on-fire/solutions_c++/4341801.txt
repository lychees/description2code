/*
	by adityaghosh996
*/
#include<bits/stdc++.h>
#define ll long long int
#define in(a) scanf("%lld",&a);
#define pb(a) push_back(a)
using namespace std;
inline ll modPow(ll base,ll exp,ll modulus)
{
  base %= modulus;
  ll result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % modulus;
    base = (base * base) % modulus;
    exp >>= 1;
  }
  return result;
}
inline ll maximum(ll a,ll b,ll c){ll d=(a>=b)?a:b;ll e=(d>=c)?d:c;return e;}
inline bool inrange(ll n,ll m,ll x,ll y)
{
	if(x>0 && x<=n && y>0 && y<=m)
		return true;
	return false;
}
int main()
{
	//ios_base::sync_with_stdio(0);;cin.tie(0);
	ll n,m,q;
	scanf("%lld%lld%lld",&n,&m,&q);
	ll ar[n+1][m+1];
	ll nation=0;
	for(ll i=1;i<=n;i++)
	{
		for(ll j=1;j<=m;j++)
		{
			scanf("%lld",&ar[i][j]);
			if(ar[i][j]==1)
				nation++;
		}
	}
	while(q--)
	{
		queue<pair<ll,ll> > qu;
		pair<ll,ll> p;
		scanf("%lld%lld",&p.first,&p.second);
		if(ar[p.first][p.second]==1)
		{
			nation--;
			ar[p.first][p.second]=0;
			qu.push(p);
			while(!qu.empty())
			{
				ll x=qu.front().first;
				ll y=qu.front().second;
				qu.pop();
				if(inrange(n,m,x-1,y))
				{
					if(ar[x-1][y]==1)
					{
						ar[x-1][y]=0;
						nation--;
						p.first=x-1;
						p.second=y;
						qu.push(p);
					}
				}
				if(inrange(n,m,x+1,y))
				{
					if(ar[x+1][y]==1)
					{
						ar[x+1][y]=0;
						nation--;
						p.first=x+1;
						p.second=y;
						qu.push(p);
					}
				}
				if(inrange(n,m,x,y-1))
				{
					if(ar[x][y-1]==1)
					{
						ar[x][y-1]=0;
						nation--;
						p.first=x;
						p.second=y-1;
						qu.push(p);
					}
				}
				if(inrange(n,m,x,y+1))
				{
					if(ar[x][y+1]==1)
					{
						ar[x][y+1]=0;
						nation--;
						p.first=x;
						p.second=y+1;
						qu.push(p);
					}
				}
			}
		}
		printf("%lld\n",nation);
	}
	return 0;
}