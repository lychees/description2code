#include <iostream>
#include <vector>
#include<cstdio>
#include <algorithm>
using namespace std;

vector<int> vec;

long long ans[19];
long long ax[10][2] = {{0,0},{1,0},{2,0},{2,1},{2,2},{3,2},{3,3},{4,3},{4,4},{5,4}};
long long po[20];

void pre() {
    ans[0] = 0;
    ans[1] = 4;
	for(int i=2;i<=17;i++) {
		ans[i] = 6*ans[i-1] + 4*po[i-1];
	}
	ans[18] = ans[17];
}

int main()
{
    po[0] = 1;
    for(int i=1;i<20;i++) po[i] = po[i-1]*10;
	pre();
    int t;
    long long n;
    scanf("%d",&t);
    while(t--) {
    	scanf("%lld",&n);
    	//cin >> n;
    	vec.clear();
    	while(n) {
    		vec.push_back(n%10);
    		n /= 10;
    	}
    	reverse(vec.begin(),vec.end());
    	int l = vec.size();
    	long long maa = 0;
    	bool f = 0;
    	for(int i=0;i<l-1;i++) {
    		if(!f) maa += ax[vec[i]][0]*(ans[l-i-1]) + ax[vec[i]][1]*po[l-i-1];
    		else {
                maa += vec[i]*po[l-i-1];
    		}
    		if(i<l-1) if(vec[i] == 2 || vec[i] == 3 || vec[i] == 5 || vec[i] == 7) f = 1;
    	}
    	maa += f;
    	if(f) maa += ax[vec[l-1]][0];
    	maa += ax[vec[l-1]][1];
    	if(!f) maa += (vec[l-1]==2 || vec[l-1]==3 || vec[l-1]==5 || vec[l-1]==7);
    	printf("%lld\n",maa);
    	//cout << maa << endl;
    }
    return 0;
}
