#include <iostream>
#include <algorithm>
#include <map>
#include <cmath>
#include <sstream>
#include <string>

using namespace std;

int main(){
		
	string msg;
	
	map<char,int> consonant;
	map<char,int> vowel;
	map<char,int> alphabet;
	
	for(int i = 1; i <= 25; i++){
		if((char(i+64) == 'A' && char(i+96) == 'a') || (char(i+64) == 'E' && char(i+96) == 'e') || (char(i+64) == 'I' && char(i+96) == 'i') || (char(i+64) == 'O' && char(i+96) == 'o') ||(char(i+64) == 'U' && char(i+96) == 'u')){
			vowel[char(i+64)]++;vowel[char(i+96)]++; 
		}else{
			consonant[char(i+96)]++;
			consonant[char(i+64)]++;
		}
		alphabet[char(i+96)]++;
		alphabet[char(i+64)]++;
	}
	
	while(getline(cin,msg)){int cc = 0, cv = 0, alpha = 0, v = 0; bool fv = false, fc = false;
		stringstream token(msg); string parse;
		
		if(msg == "") {cout << "NO\n"; continue;}
		
			while(token >> parse){
				for(int i = 0; i < parse.size(); i++)
					if(alphabet[parse[i]] == 0) parse.erase(parse.begin()+1);
				
				
				for(int i = 0; i < parse.length(); i++){
					
					if(vowel[parse[i]] == 1 && (vowel[parse[i-1]] == 0 || vowel[parse[i+2]] == 0) && vowel[parse[i+1]] == 1) fv = true, cv++;
					if(vowel[parse[i]] == 0 && vowel[parse[i+1]] == 0) fc = true, cc++; 
				}
			}
			//cout << cv << " and " << cc << endl;
			if(fc == true && fv == true) 
				cout << (cc > 1 || cv > 1 ? "YES\n" : "NO\n");
			else cout << "NO\n";		
	}

	return 0;
}