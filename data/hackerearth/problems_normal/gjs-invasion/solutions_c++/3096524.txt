#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
long long memo[1<<20],sl[1<<20];
int n;
long long get(int i,int m)
{
    if(memo[m]!=-1)return memo[m];
    long long o=0;
    int j,p=0;
    for(j=n;j>0;j--)
    {
        if(j!=i && (m&(1<<j))==0)
        {
            o+=get(i+1,m|(1<<j));
            sl[m]+=sl[m|(1<<j)];
            if(memo[m|(1<<j)]!=-1)o+=p*sl[m|(1<<j)];
        }
        if(m&(1<<j))p++;
    }
    if(sl[m])memo[m]=o;
    return o;
}
void solve()
{
    memset(memo,-1,sizeof(memo));
    memset(sl,0,sizeof(sl));
    cin>>n;
    memo[(1<<(n+1))-2]=0;
    sl[(1<<(n+1))-2]=1;
    cout<<get(1,0)<<'\n';
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin>>t;
    while(t--)
        solve();
}
/*
4321 = 6
4312 = 5
4123 = 3
3421 = 5
3412 = 4
3142 = 3
2413 = 3
2341 = 3
2143 = 2
*/
