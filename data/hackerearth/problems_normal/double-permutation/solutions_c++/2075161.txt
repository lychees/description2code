#include<iostream>
using namespace std;
const long long MOD = 1e9 + 7;
const int MAXN = 1e5 + 5;

int sum[MAXN] , a[2 * MAXN] , p[MAXN];
void update(int x)
{
    for(x;x < MAXN;x += (x & -x))
        sum[x] ++;
}
int get(int x)
{
    int ans = 0;
    for(x;x > 0;x -= (x & -x))
        ans += sum[x];
    return ans;
}
int main()
{
    int n;
    cin >> n;
    for(int i = 1;i <= 2 * n;i ++)
        cin >> a[i];

    p[0] = 1ll;
    for(int i = 1;i <= n;i ++)
        p[i] = (p[i - 1] * 2ll) % MOD;

    long long ans = 0;
    for(int i = 2 * n;i >= 1;i --)
    {
        long long le = get(a[i] - 1);
        long long eq = get(a[i]) - get(a[i] - 1);
        long long bi = get(MAXN - 1) - get(a[i]);
        ans = (ans + (le * 3ll * p[n - 2]) % MOD) % MOD;
        ans = (ans + (eq * p[n - 1]) % MOD) % MOD;
        ans = (ans + (bi * p[n - 2]) % MOD) % MOD;
        update(a[i]);
    }
    cout << ans << endl;
    return 0;
}
