#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define pb push_back
#define mp make_pair
#define sz size()
#define ln length()
#define forr(i,a,b)                 for(int i=a;i<b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()	
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
	
#define debug                       if(1)
#define debugoff                    if(0)	

#define print(x)                 cerr << x << " ";    
#define pn()				     cerr << endl;
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define MAX 100010
#define MOD 1000000007
vector<double> v;
int x[MAX],y[MAX];
int main()
{
	ios::sync_with_stdio(false);
	int t,n,a,b;
	double theta,ans;
	cin>>t;
	while(t--)
	{
		v.clear();
		cin>>a>>b;
		cin>>n;
		for(int i=0;i<n;i++){
			cin>>x[i]>>y[i];
			x[i] -= a;
			y[i] -= b;
			theta = acos((x[i]*1.0) / sqrt(x[i]*x[i] + y[i]*y[i])) * 180.0/M_PI;
			//cout<<"ttt"<<theta<<endl;
			if(x[i] <= 0 && y[i] < 0)
				theta = 360-theta;
			else if(x[i] > 0 && y[i]< 0)
				theta  = 360.0 - theta;

			//cout<<theta<<endl;
			v.pb(theta);
		}
		sort(all(v));
		int size= v.size();
		double maxx = v[0];
		for(int i=1;i<size;i++){
			//cout<<"v[i]="<<v[i]<<endl;
			maxx = max(maxx,v[i] - v[i-1]);
		}
		maxx = max(maxx,v[0] + 360.0 - v[size-1]);
		ans = (360-maxx)/360.0;
		ans *= 100.0;
		cout<<fixed<<setprecision(6)<<ans<<endl;
		
	}
	return 0; 
}