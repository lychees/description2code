#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <map>
#include <climits>
#include <cmath>
#include <cstdio>
#include <string>

using namespace std;

#define MOD 1000000007

vector<vector<long long> > multmat(vector<vector<long long> > &A, vector<vector<long long> > &B, int n, int p, int m){
	vector<vector<long long> > C(n, vector<long long>(m,0));
	for(int i=0; i<n; i++){
		for(int k=0; k<p; k++){
			for(int j=0; j<m; j++){
				C[i][j] += A[i][k] * B[k][j];
				C[i][j] %= MOD;
			}
		}
	}
	return C;
}

vector<vector<long long> > mat_pow(vector<vector<long long> > A, int k){
	int n = A.size();
	vector<vector<long long> > ret(n, vector<long long>(n, 0) );
	for(int i=0; i<n; i++){
		ret[i][i] = 1;
	}
	while(k>0){
		if(k&1) ret = multmat(A,ret, n,n,n);
		A = multmat(A,A, n,n,n);
		k>>=1;
	}
	return ret;
}


int main(){
	int T;
	cin >> T;

	vector<long long> v0(2);
	v0[0] = 2;
	v0[1] = 7;

	vector<vector<long long> > b(2,vector<long long>(2,0));
	b[0][0] = 0; b[0][1] = 1;
	b[1][0] = 2; b[1][1] = 1;
	
	for(int t=0; t<T; t++){

		
		long long N;
		cin >> N;

		if(N==1){
			cout << 2 << endl;
			continue;
		}else if(N==2){
			cout << 7 << endl;
			continue;
		}

		vector<vector<long long> > p = mat_pow(b, N-1);
		long long ans = (p[0][0] * v0[0] + p[0][1] * v0[1])%MOD;

		cout << ans << endl;
		
	}
	return 0;
}