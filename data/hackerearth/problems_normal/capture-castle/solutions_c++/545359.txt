#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;


#define ll long long
#define ff first
#define ss second
#define mpa make_pair
#define MOD 1000000007
#define pb push_back
#define lld I64d
#define MXN 1000000

int bitcnt(int mask){return __builtin_popcount(mask);}
int SET(int N,int pos){	return N=N | (1<<pos);}
int RESET(int N,int pos){	return N= N & ~(1<<pos);}
int check(int N,int pos){	return (N & (1<<pos));}
int toggle(int N,int pos){if(check(N,pos))return N=RESET(N,pos);return N=SET(N,pos);}
void PRINTBIT(int N){	printf("("); for(int i=6;i>=1;i--)	{bool x=check(N,i);cout<<x;}	puts(")");}
int mod(int a, int b) { return a - a/b * b;}

int N;
int M;
int gra[1004][1004];
pair<int, int> Des;
int Tim;

void inp()
{
	scanf("%d%d", &M, &N);
	
	for(int i = 1; i <= M; ++i) {
		for(int j = 1; j <= N; ++j) {
			scanf("%d", &gra[i][j]);
		}
	}
	
	scanf("%d%d%d", &Des.ff, &Des.ss, &Tim);
}

/*
int rec(int x, int y)
{
	if(x == Des.ff && y == Des.ss) {
		return 0;
	}
	if(vis[x][y]) {
		
	}
	vis[x][y] = true
}
*/

bool is_range(int x, int y)
{
	if(x <= 0 || y <= 0 || x > M || y > N)
		return false;
	return true;
}

int dij()
{
	queue<pair<int, int> >Qe;
	Qe.push(mpa(1, 1));
	int dist[M + 2][N + 2];
	int vis[M + 2][N + 2];
	memset(dist, 63, sizeof dist);
	memset(vis, false, sizeof vis);
	
	dist[1][1] = gra[1][1];
	
	
	while(!Qe.empty()) {
		pair<int, int> u = Qe.front();
		Qe.pop();
		
		
		for(int i = -1; i <= 1; ++i) {
			for(int j = -1; j <= 1; ++j) {
			
			//	cout<<"X = " << u.ff + i << " Y = " << u.ss + j <<" is_r = " << is_range(u.ff + i, u.ss + j) <<" Dist => " << dist[u.ff][u.ss] <<"\n";
			
				if(((i == 0 || j == 0) && i != j) && is_range(u.ff + i, u.ss + j) && dist[u.ff + i][u.ss + j] > dist[u.ff][u.ss] + gra[u.ff + i][u.ss + j]) {
					Qe.push(mpa(u.ff + i, u.ss + j));
					dist[u.ff + i][u.ss + j] = dist[u.ff][u.ss] + gra[u.ff + i][u.ss + j];
					
			//		cout<<"X = " << u.ff + i << " Y = " << u.ss + j <<"\n";
				}
			}
		}
	
		vis[u.ff][u.ss] = true;
	}
	
	/*
	for(int i = 1; i <= M; ++i) {
		for(int j = 1; j <= N; ++j) {
			cout<< dist[i][j] << " "; 
		}
		puts("");
	}
	puts("----------------------");
	*/
	return dist[Des.ff][Des.ss];
}

void solve()
{
	int min_time = dij();
	
	//cout<< "min_time => " << min_time <<"\n";
	
	if(min_time <= Tim) {
		puts("YES");
		printf("%d\n", Tim - min_time);
	} else
		puts("NO");
}

int main()
{
	int T;
	scanf("%d", &T);
	
	while(T--) {
		inp();
		solve();
	}
	
	return 0; 
}
