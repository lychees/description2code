//Distinct digits hackerearth

#include<cstdio>
#include<iostream>
#include<vector>

using namespace std;

#define maxn 100007
typedef long long ll;

int bit[11][maxn],n ;

int cntdig(ll a)
{
	int vis[10];
	for(int i=0;i<10;i++)
	vis[i]=0;
	int cnt=0;
	while(a>0)
	{
		int k = a%10;
		if(vis[k]==0)
		{
			cnt++;
			vis[k]=1;
		}
		a = a/10;
	}	
	return cnt;
}

void update(int idx,int cnt, int val)
{
	for(int i = idx; i <= n; i += i & -i) 
	bit[cnt][i] += val;
}

int query(int idx,int cnt) 
{
	ll res = 0;
	for(int i = idx; i; i -= i & -i) 
	{
		res += bit[cnt][i];
	}
	return res;
}

int main()
{
		scanf("%d",&n);
		ll arr[n+1];
		for(int i=1;i<=n;i++)
		{
			scanf("%lld",&arr[i]);
			int cnt = cntdig(arr[i]);
			//cout<<cnt<<endl;
			update(i,cnt,1);
			//update(i+1,cnt,-1);
		}
		int q,l,r,ind,c,op;
		ll val;
		scanf("%d",&q);
		for(int i=0;i<q;i++)
		{
			scanf("%d",&op);
			if(op==0)
			{
				scanf("%d %lld",&ind,&val);
				int cnt1 = cntdig(arr[ind]);
				int cnt2 = cntdig(val+arr[ind]);
				arr[ind]=val+arr[ind];
				//if(cnt1!=cnt2)
				//{
					update(ind,cnt1,-1);
				//update(ind+1,cnt1,1);
					update(ind,cnt2,1);
				//update(ind+1,cnt2,-1);
				//}		
			}
			else if(op==1)
			{
				scanf("%d %lld",&ind,&val);
				int cnt1 = cntdig(arr[ind]);
				int cnt2 = cntdig(val);
				arr[ind]=val;
				//if(cnt1!=cnt2)
				//{
					update(ind,cnt1,-1);
				//update(ind+1,cnt1,1);
					update(ind,cnt2,1);
				//update(ind+1,cnt2,-1);
				//}
			}
			else if(op==2)
			{
				scanf("%d %d %d",&l,&r,&c);
				int ans1 = query(l-1,c);
				int ans2 = query(r,c);
				
				printf("%d\n",ans2-ans1);
			}
		}
		return 0;
}