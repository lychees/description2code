#include<bits/stdc++.h>
using namespace std;
int par[100*1000+3];
vector<pair<pair<int,int>,int> >edge;
int root(int i)
{
    return par[i]==i?i:par[i]=root(par[i]);
}
void merge(int a,int b)
{
    if(rand()%2)swap(a,b);
        par[root(b)]=root(a);
}
bool cmp(const pair<pair<int,int>,int>  &A,
        const pair<pair<int,int>,int> &B)
{
    return A.second<B.second;
}
int main()
{
    int N,M;
    scanf("%d %d",&N,&M);
    for(int i=1;i<=N;++i)
        par[i]=i;
    for(int i=0;i<M;++i)
    {
        int u,v,cost;
        scanf("%d %d %d",&u,&v,&cost);
        edge.push_back(make_pair(make_pair(u,v),cost));
    }
    sort(edge.begin(),edge.end(),cmp);
    long long int ans=0;
    for(int i=0;i<(int)edge.size();++i)
    {
        if(root(edge[i].first.first)!=root(edge[i].first.second))
        {
            merge(edge[i].first.first,edge[i].first.second);
            ans+=(long long int)edge[i].second;
        }
    }
    printf("%lld\n",ans);
    return 0;
}
