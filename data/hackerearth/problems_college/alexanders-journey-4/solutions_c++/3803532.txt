/* This program is just for learning and understanding of the Algorithm of Graph Traversal and minimum distance between two points which i have learned from geeksforgeeks
	-- Poojan Trivedi
*/
    #include <stdio.h>
    #include<iostream>
    #include <limits.h>
    using namespace std;
    int a[9][9];
    int V,r,temp2;
    int graph[3001][3001]; 
     
    int minDistance(int dist[], bool sptSet[])
    {
       int min = INT_MAX, min_index;
     
       for (int v = 0; v < V; v++)
         if (sptSet[v] == false && dist[v] <= min)
             min = dist[v], min_index = v;
     
       return min_index;
    }
     
    int printSolution(int dist[], int n)
    {
       for (int i = 1; i < V; i++)
       {
       	if(i != temp2)
       		{
       			if(dist[i]<INT_MAX)
       				cout<<dist[i]<<" ";
       			else cout<<-1<<" ";
       		}
       }
		cout<<endl;      
    }
     
    void dijkstra(int src)
    {
         int dist[V]; 
         bool sptSet[V];
         for (int i = 1; i < V; i++)
            dist[i] = INT_MAX, sptSet[i] = false;
     
                 dist[src] = 0;
     
         for (int count = 0; count < V-1; count++)
         {
           int u = minDistance(dist, sptSet);
     
           sptSet[u] = true;
     
           for (int v = 0; v < V; v++)
     
             if (!sptSet[v] && graph[u][v] && dist[u] != INT_MAX 
                                           && dist[u]+graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
         }
     
         printSolution(dist, V);
    }
     
    int main()
    {
       	int t;
       	cin>>t;
       	while(t--)
       	{
       		cin>>V>>r;
       		V++;
       		for(int i = 0;i<V;i++)
       			for(int j = 0;j<V;j++)
       				graph[i][j] = 0;
       		for(int i = 0;i<r;i++)
       		{
       			int city1,city2;
       			cin>>city1>>city2;
       			int temp;
       			cin>>temp;
       			if(graph[city1][city2] == 0 || graph[city1][city2] > temp)
       				graph[city1][city2] = graph[city2][city1] = temp;
       		}
       		cin>>temp2;
       		dijkstra(temp2);
     
       	}
     
        return 0;
    }