#include <bits/stdc++.h>
using namespace std;

const int maxn = 5000+1;

vector<int> v;
bool p[maxn]; 
int pre[maxn], dp[maxn];

void seive() {
	v.push_back(2);
	for(int i=3; i<maxn; i+=2) {
		if(!p[i]){
			v.push_back(i);
			for(int j=i*i; j<maxn; j+= 2*i) p[j] = true;
		}
	}
}

int main() {

	seive();

	int n; cin>>n;

	for(int i=1;i<=n;++i){
		int x; cin>>x;
		pre[i] = pre[i-1] + x;
	}

	dp[0] = dp[1] = 0;

	for(int i=2; i<=n; ++i) {
		dp[i] = dp[i-1];
		
		for(int j=0; j<v.size() and v[j]<=i; ++j){
			int r = i-v[j]-1;

			if(r == -1) dp[i] = max(dp[i], pre[i]);

			else dp[i] = max(dp[i], dp[r] + (pre[i]-pre[r+1]) );
		}
	}

	cout << dp[n] << endl;
}