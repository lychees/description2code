#include<bits/stdc++.h>

using namespace std;

const int N=1e3+9;
int v[N],tam[N],E[N];

void initialize(){
    for(int i=0;i<N;i++){
        v[i]=i;
        tam[i]=1;
    }
}

int root(int a){
    while(v[a]!=a){
        v[a]=v[v[a]];
        a=v[a];
    }
    return a;
}

void unir(int a,int b){
    int root_a=root(a);
    int root_b=root(b);
    if(tam[root_a]<tam[root_b]){
        v[root_a]=root_b;
        tam[root_b]+=tam[root_a];
    }
    else{
        v[root_b]=root_a;
        tam[root_a]+=tam[root_b];
    }
}

bool find(int a,int b){
    if(root(a)==root(b))
        return true;
    else
        return false;
}

main(){
    map<int,pair<int,int> > m;
    int n,k,a,b;
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%d",&E[i]);
    scanf("%d",&k);
    initialize();
    while(k--){
        scanf("%d%d",&a,&b);
        unir(a,b);
    }
    for(int i=1;i<=n;i++){
        if(m[root(i)].first==0){
            m[root(i)].first=E[i];
            m[root(i)].second=1;
        }
        else{
            if(m[root(i)].first==E[i])
                m[root(i)].second++;
            if(m[root(i)].first>E[i]){
                m[root(i)].first=E[i];
                m[root(i)].second=1;
            }
        }
    }
    map<int, pair<int,int> >::iterator it;
    int res=1;
    for(it=m.begin();it!=m.end();it++)
        res=(res*(it->second).second)%1000000007;
    printf("%d\n",res);
}
