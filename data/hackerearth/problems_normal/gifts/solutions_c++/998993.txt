//	Coded by:  samfisher
#include<bits/stdc++.h>
#define ll long long int
#define vii  vector<ll>::iterator 
#define vli  vector<ll>::iterator 
#define vi  vector<ll> 
#define vl  vector<ll> 
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define REP(i,a,b) for(i=a;i<=b;i++)
#define MOD 1000000007
#define in cin>>
#define i2(x,y) cin>>x>>y
#define i3(x,y,z) cin>>x>>y>>z
#define os(x) cout<<x<<' '
#define on(x) cout<<x<<endl
#define o2(x,y) cout<<x<<' '<<y<<endl
#define o3(x,y,z) cout<<x<<' '<<y<<' '<<z<<endl
#define pn cout<<endl
#define F first
#define S second
#define for_it(it, X) for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
using namespace std;
ll original[5][100009];
ll common[5];
ll KANO[5];
ll tree[5][5][100009];
ll arr[100009];

ll n;
inline ll read(ll typ,ll conv,ll idx){
	ll sum = 0;
	while (idx > 0){
		sum += tree[typ][conv][idx];
		idx -= (idx & -idx);
	}
	return sum;
}

inline void update(ll typ,ll conv,ll idx ,ll val){
	while (idx <= n){
		tree[typ][conv][idx] += val;
		idx += (idx & -idx);
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	ll t,i,j,k,m,a,b,c;	
	in n;
	for(i=0;i<5;i++)KANO[i]=i;
	for(i=0;i<5;i++)
		for(j=1;j<=n;j++)
			{
				in(original[i][j]);
				// update(i,j,0);
			}

	// on("Input Done");
	string inp;
	in inp;
	// on(inp);
	for(i=0;i<inp.size();i++)
	{
		arr[i+1]=inp[i]-'A';
		j=arr[i+1];
		for(t=0;t<5;t++)
		{
			// on(t);
			update(j,t,i+1,original[t][i+1]);
		}
		// on(i);
	}
	// on("Input Done");
	in m;
	ll  ans=0;
	char x,y;
	while(m--)
	{
		
		in inp;
		if(inp[1]=='e')
		{

			i2(x,y);
			// o3("Exchange Query",x,y);
			j=x-'A';
			k=y-'A';
			
			// swap(KANO[j],KANO[k]);
			// o2(KANO[j],KANO[k]);
			t=KANO[j];
			KANO[j]=KANO[k];
			KANO[k]=t;
			// o2(KANO[j],KANO[k]);
			// for(i=0;i<5;i++)
			// {
			// 	o3((char)(i+'A'),"->",(char)(KANO[i]+'A'));
			// }

		}
		else if(inp[1]=='c')
		{
			i2(j,x);
			
			k=x-'A';
			// o3("Update Query",j,k);
			for(i=0;i<5;i++)
				update(arr[j],i,j,-original[i][j]);
			for(i=0;i<5;i++)
				update(k,i,j,original[i][j]);
			arr[j]=k;
			// for(i=1;i<=n;i++)
			// 	os((char)(arr[i]+'A'));
		}
		else
		{
			i2(j,k);
			// o3("Sum Query",j,k);
			ans=0;
			for(i=0;i<5;i++)
			{
				ans+=read(i,KANO[i],k)-read(i,KANO[i],j-1);
			}
			on(ans);

		}
	}

}