// 2015-08-21
#include <bits/stdc++.h>
#include <unordered_map>
#include <array>
#include <forward_list>
#include <unordered_set>
using namespace std;

#ifndef LOCAL
//#define LOCAL
#endif

#define ff first
#define ss second
#define sz(x) (int)((x).size())
#define szo(x) sizeof(x)
#define pub push_back
#define pob pop_back
#define fo(i,j,k) for (int i = j; i <= (int)(k); ++i) // [j..k]
#define fd(i,j,k) for (int i = j; i >= (int)(k); --i) // [j..k]
#define gg cout << "OK\n"

#define SET_BIT(mask, index) (mask |= (1 << index))
#define TEST_BIT(mask, index) (mask & (1 << index))
#define CLEAR_BIT(mask, index) (mask &= ~(1 << index))
#define TOGGLE_BIT(mask, index) (mask ^= (1 << index))
const int INF = 1000000000;
using pii = pair<int, int>;
using pip = pair<int, pii>;
using ll = long long;
using vi = vector<int>;
using vll = vector<ll>;

template<class T> T scan() { T t; cin >> t; return t; }
#define sc(T) scan<decltype(T)>()
#define sci scan<int>()
#define scll scan<ll>()
#define scs scan<string>()

const int MAX_N = 105;

int adjMat[MAX_N][MAX_N], path[MAX_N][MAX_N];

void printPath(int u, int v) {
	if (u != v) {
		printPath(u, path[u][v]);
	}
	cout << v + 1 << " ";
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w+", stdout);
#endif

	int n = sci, r = sci;
	fo(i, 0, n - 1) {
		fo(j, 0, n - 1) {
			adjMat[i][j] = -INF;
			path[i][j] = i;
		}
	}

	fo(i, 0, r - 1) {
		int u = sci, v = sci, w = sci;
		u--;
		v--;
		adjMat[u][v] = adjMat[v][u] = w;
	}
	int src = sci, dest = sci, ppl = sci;
	src--;
	dest--;
	fo(k, 0, n - 1) {
		fo(i, 0, n - 1) {
			fo(j, 0, n - 1) {
				if (min(adjMat[i][k], adjMat[k][j]) > adjMat[i][j]) {
					adjMat[i][j] = min(adjMat[i][k], adjMat[k][j]);
					path[i][j] = path[k][j];
				}
			}
		}
	}
	printPath(src, dest);
	int trips = ppl * 1.0 / (adjMat[src][dest] - 1);
	trips += (remainder(ppl * 1.0, (adjMat[src][dest] - 1)) != 0.0);
	cout << "\n" << trips << "\n";

	return 0;
}
