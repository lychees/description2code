import copy
from math import factorial
import functools

def memoize(func):
    cache = {}
    def memoized(key):
        # Returned, new, memoized version of decorated function
        if key not in cache:
            cache[key] = func(key)
        return cache[key]
    return functools.update_wrapper(memoized, func)


@memoize
def fact(n):
    return factorial(n)

def cat_direct(n):
    return fact(2*n) // fact(n + 1) // fact(n)


for i in range(int(raw_input())):
    print cat_direct(int(raw_input()))
