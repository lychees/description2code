#include<vector>
#include<iostream>
#include<stdio.h>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<math.h>
#include<cstdlib>
#include<ctime>
#include<cstring>
#include<climits>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

#define lli long long int
#define llu unsigned long long int
#define mp make_pair
#define pb push_back
#define F first
#define S second

const double eps = 1e-5;
const lli MOD = 1000000007ll;
const double PI = 3.14159265359;
int INF = 2147483645;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;

int a[300][300];
int dp[300][300];
vector<int> V;
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,m,l,r;
        cin>>n>>m>>l>>r;
        int ans = 0;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
                cin>>a[i][j];
        }
        memset(dp,0,sizeof(dp));
        dp[1][1] = a[1][1];
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(i==1 && j==1)
                    continue;
                dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1] + a[i][j];
            }
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                for(int k=i;k<=n;k++)
                {
                    //cout<<i<<" "<<j<<" "<<k<<endl;
                    int temp = dp[i-1][j-1] - dp[k][j-1];
                    temp = l - temp;
                    //cout<<temp<<endl;
                    int start = j;
                    int end = m+1;
                    while(start!=end)
                    {
                        int mid = (start+end)/2;
                        if(dp[k][mid] - dp[i-1][mid] <= temp)
                        {
                            start = mid+1;
                        }
                        else
                        {
                            end = mid;
                        }
                    }
                    //cout<<start<<" "<<end<<endl;
                    int y1 = start;
                    if(dp[k][y1-1] - dp[i-1][y1-1] == temp)
                        y1--;
                    temp = dp[i-1][j-1] - dp[k][j-1];
                    temp = r - temp;
                    //cout<<temp<<endl;
                    start = j;
                    end = m+1;
                    while(start!=end)
                    {
                        int mid = (start+end)/2;
                        if(dp[k][mid] - dp[i-1][mid] <= temp)
                        {
                            start = mid+1;
                        }
                        else
                        {
                            end = mid;
                        }
                    }
                    int y2 = start;
                    ans+=y2-y1;
                    //cout<<y1<<" "<<y2<<endl;
                }
            }
        }
        cout<<ans<<endl;
    }
    return 0;
}
