#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define ff first
#define ss second
#define pb push_back
#define pf pop_front
#define IOS ios::sync_with_stdio(false)
#define MAXN 100003
ll tree[26][100005];
int s1[100005], cnt[27];
ll n , q , l , r , type ;
string s;
void update(int alpha , int idx ,int val){
    while(idx <= MAXN){
        tree[alpha][idx]+=val;
        idx+=(idx&-idx);
    }
}
ll query(int alpha , int idx){
    ll sum = 0;
    while(idx > 0){
        sum+=tree[alpha][idx];
        idx-=(idx&-idx);
    }
    return sum;
}
int main(){
 
	ll i , j , k;
    cin >> n >> q;
    cin >> s;
    for(i = 0 ; i < s.size() ; i++){
        int val = s[i]-'a';
        s1[i+1] = val;
        update(val,i+1,1);
    }
    char x;
    for(i = 0 ; i < q ; i++){
        cin >> type;
        if(type==1){
            cin >> l >> x;
            int val = x-'a';
            int prev = s1[l];
            update(prev,l,-1);
            update(val,l,1);
            s1[l] = val;
        }
        else{
            memset(cnt,0,sizeof(cnt));
            cin >> l >> r;
            for(j = 0 ; j < 26 ; j++){
                cnt[j] = query(j,r) - query(j,l-1);
            }
            int len = r - l + 1;
            int odd = 0 , even = 0;
            for(j = 0 ; j < 26 ; j++){
                if((cnt[j]&1))
                    odd++;
                else if((cnt[j]!=0) && ((cnt[j]%2)==0))
                    even++;
            }
            if(len&1){
                if(odd == 1)cout << "yes\n";
                else cout <<  "no\n";
            }
            else{
                if(odd == 0)cout << "yes\n";
                else cout << "no\n";
            }
        }
    }
	return 0;
}