#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long int
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define sz(x) ((int) (x).size())
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i = 0;i < N;i++)
#define frep(i,a,b) for(int i = a;i <= b;i++)
#define pii pair<int , int>
#define pll pair<ll , ll>
#define vii vector<int>
#define vpii vector< pii >
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcount(x)
#define print(A,j,k) for(int ii=j;ii<k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)
#define FILE freopen("inp.txt" , "r" , stdin);
#define ld long double

const int MOD = 1e9 + 7;
const int N = 1e6 + 5;

int main(int argc, char const *argv[])
{
	fast;

	CASES {
		int n;
		cin >> n;

		if (n == 1) {
			string a , b;
			cin >> a >> b;
			if (a == b)
				cout << "YES\n";
			else
				cout << "NO\n";
			continue;
		}

		vector< vii > A;
		rep(i , n) {
			string s;
			cin >> s;
			vector<int> V(26 , 0);
			rep(j , s.size())
				V[s[j] - 'a']++;
			A.pb(V);
		}

		string make;
		cin >> make;
		vector<int> mk(26 , 0);
		rep(i , make.size())
			mk[make[i] - 'a']++;

		int hn = n/2;
		set< vector<int> > S;

		bool found = false;

		//n = 5
		//hn = 2
		//take 0..1
		for(int i = 0;i < (1 << hn) ;i++) {
			vector<int> V(26 , 0);
			for(int j = 0;j < hn;j++) {
				if ( ((1 << j) & i)) {
					rep(k , 26)
						V[k] += A[j][k];
				}
			}
			if (V == mk) {
				found = true;
				break;
			}
			S.insert(V);
		}

		if (found) {
			cout << "YES\n";
			continue;
		}

		int nhn = n - hn;
		//hn = 3
		//take 2..4
		for(int i = 0;i < (1 << nhn) ;i++) {
			vector<int> V(26 , 0);
			for(int j = 0;j < nhn;j++) {
				if ( ((1 << j) & i)) {
					rep(k , 26)
						V[k] += A[j + hn][k];
				}
			}
			vector<int> f(26 , 0);
			rep(x , 26)
				f[x] = mk[x] - V[x];
			if (S.find(f) != S.end()) {
				found = true;
				break;
			}
			if (V == mk) {
				found = true;
				break;
			}
		}

		if (found)
			cout << "YES\n";
		else
			cout << "NO\n";
	}

	return 0;
}