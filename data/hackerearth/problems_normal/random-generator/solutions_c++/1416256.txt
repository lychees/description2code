#include <iostream>
#include<climits>
using namespace std;

void swap(int* a, int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
 

int partition (int arr[], int l, int h)
{
    int x = arr[h];    // pivot
    int i = (l - 1);  // Index of smaller element
 
    for (int j = l; j <= h- 1; j++)
    {
        // If current element is smaller than or equal to pivot 
        if (arr[j] <= x)
        {
            i++;    // increment index of smaller element
            swap(&arr[i], &arr[j]);  // Swap current element with index
        }
    }
    swap(&arr[i + 1], &arr[h]);  
    return (i + 1);
}
 
/* arr[] --> Array to be sorted, l  --> Starting index, h  --> Ending index */
void quickSort(int arr[], int l, int h)
{
    if (l < h)
    {
        int p = partition(arr, l, h); /* Partitioning index */
        quickSort(arr, l, p - 1);
        quickSort(arr, p + 1, h);
    }
}

int main()
{
	int t; cin>>t;
	for(int i=1;i<=t;i++){
		int n,k1,p,temp; cin>>n>>k1>>p; int a[n+2];
		for(int j=1;j<=n;j++){
			cin>>a[j];
		}
		
		quickSort(a, 1, n);
		int d=1;
		for(int j=1;j<=n-k1+1;j++){
			if(a[k1+j-1]-a[j]<=2*p){
				d=0; break;
			}
		}
		if(d==1)
		cout<<"YES"<<endl;
		else
		cout<<"NO"<<endl;
		
	}
    return 0;
}
