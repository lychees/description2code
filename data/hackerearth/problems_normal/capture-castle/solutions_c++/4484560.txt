#include<bits/stdc++.h>
#define mp make_pair
#define ff first
#define ss second
using namespace std;
typedef long long int ll;
typedef pair<int,int> ii;
typedef pair<ll,ii> lii;
ll d[1001][1001];
int g[1001][1001];
bool v[1001][1001];
int dx[]={1,0,-1,0},dy[]={0,1,0,-1};
priority_queue<lii,vector<lii>,greater<lii> >pq;
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m;
        scanf("%d%d",&m,&n);
        for(int i=1;i<=m;i++)
            for(int j=1;j<=n;j++)
                scanf("%d",&g[i][j]),d[i][j]=INT_MAX,v[i][j]=false;
        int X,Y,T;
        scanf("%d%d%d",&X,&Y,&T);
        while(!pq.empty())pq.pop();
        d[1][1]=0;
        pq.push(mp(d[1][1],mp(1,1)));
        while(!pq.empty())
        {
            int x=pq.top().ss.ff,y=pq.top().ss.ss;
            pq.pop();
            if(x==X and y==Y)
            {
                d[X][Y]+=g[X][Y];
                break;
            }
            if(v[x][y])continue;
            v[x][y]=true;
            for(int i=0;i<4;i++)
                if(x+dx[i]>=1 and y+dy[i]>=1 and x+dx[i]<=m and y+dy[i]<=n and d[x+dx[i]][y+dy[i]]>d[x][y]+g[x][y])
                {
                    d[x+dx[i]][y+dy[i]]=g[x][y]+d[x][y];
                    pq.push(mp(d[x+dx[i]][y+dy[i]],mp(x+dx[i],y+dy[i])));
                }
        }
        if(d[X][Y]<=T)
            cout<<"YES\n"<<(T-d[X][Y])<<"\n";
        else
            cout<<"NO\n";
    }
    return 0;
}
