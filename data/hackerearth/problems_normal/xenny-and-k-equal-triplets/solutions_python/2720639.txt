def countK(number, K):
	return number.count(K)

def gcf(a, b):
	while b:
		a, b = b, a%b
	return a

def calProbab(N, num_k):
	num = 0
	den = 0
	if num_k < 3:
		num = 0
		a = 1
		b = 1
		for i in xrange(N, N-num_k, -1):
			print i,
			a *= i
		for j in xrange(num_k, 1, -1):
			print j,
			b *= j
		den = a/b
	elif num_k == N:
		num = 1
		den = 1
	else:
		num = num_k * (num_k - 1) * (num_k -2)
		den = N * (N-1) * (N-2)
		div = gcf(num, den)
		num /= div
		den /= div
	return num, den
	
	
for _ in xrange(input()):
	N, K = map(int, raw_input().split())
	number = map(int, raw_input().split())
	result = calProbab(N, countK(number, K))
	
	if result == 1:
		print "1/1"
	else:
		print "%d/%d" % ( result[0], result[1] )