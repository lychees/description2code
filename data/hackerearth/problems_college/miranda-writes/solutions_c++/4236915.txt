//Amit Gupta              
#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
typedef pair<int,int> II;
#define REP(i,i1,n) for(int i=i1;i<n;i++)
#define REPB(i,i1,n) for(int i=i1;i>=n;i--)
#define PB push_back
#define MP make_pair
#define ALL(c) (c).begin(),(c).end()
#define F first
#define S second
#define SZ(a) (LL)a.size()
#define EPS 1e-12
#define MOD 1000000007
#define TR1(x) cerr<<#x<<" : "<<x<<endl
#define TR2(x,y) cerr<<#x<<" : "<<x<<" | "<<#y<<" : "<<y<<endl
#define FAST_IO ios_base::sync_with_stdio(false);cin.tie(NULL)
#define SI(c) scanf("%d",&c)
#define SII(c,d) scanf("%d%d",&c,&d)
#define SLL(c) scanf("%lld",&c)
#define PIN(c) printf("%d\n",c)
#define PLLN(c) printf("%lld\n",c)
#define N 405
#define endl '\n'
#define FILL(ar,vl) for(int i=0;i<N;i++)ar[i]=vl
#define FILL2(ar,vl) for(int i=0;i<N;i++)for(j=0;j<N;j++)ar[i][j]=vl
//--------------------------MAIN CODE STARTS HERE----------------
int d[N][N],dp[1<<16][405];
int b[20],k,n,m;
int rec(int mask,int id) {
    if(mask==(1<<k)-1) {
        return d[id][n];
    }
    if(dp[mask][id]!=-1)
        return dp[mask][id];
    int ans,ans1=MOD;
    REP(i,0,k) {
        int vl=b[i];
        if(!((1<<i)&mask)) {
            ans=d[id][vl]+rec(mask|(1<<i),vl);
            ans1=min(ans,ans1);
        }
    }
    dp[mask][id]=ans1;
    return ans1;
}
int main() {	
    SII(n,m);SI(k);
    REP(i,1,n+1)
        REP(j,1,n+1)
        d[i][j]=MOD;
    REP(i,0,m) {
        int x,y;int z;
        SII(x,y);SI(z);
        d[x][y]=z;
        d[y][x]=z;
    }
    REP(i,0,k)
        SI(b[i]);
    REP(k,1,n+1) {
        REP(i,1,n+1) {
            REP(j,1,n+1) {
                d[i][j]=min(d[i][k]+d[k][j],d[i][j]);
            }
        }
    }
    REP(i,0,(1<<16))
        REP(j,0,405)
        dp[i][j]=-1;
   // memset(dp,-1,sizeof(dp));
    int ans=rec(0,1);
    PIN(ans);
    return 0;
}
