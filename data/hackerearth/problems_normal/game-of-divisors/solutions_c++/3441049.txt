#include <iostream>
using namespace std;

int maxDivisor(int);
int divcount(int n);
int included(int n);
void appendWritten(int i);

int written[20];
int last =-1;

int main ()
{
    int n, T, turn=0, maxd=-1;
    cin>>T;
    for (int j=0; j<T; j++)
    {
        turn=0;
        maxd=-1;
        cin>>n;
        while(maxd!=0)
        {
            maxd = maxDivisor(n);
            appendWritten(maxd);
            //cout<<maxd<<endl;
            turn++;
        }
        cout<<((turn%2)+1)<<endl;
    }
}

int maxDivisor(int n)
{
    int maxd=-1, divno, maxn=0, flag=0;
    for (int i=n/2; i<=n; i++)
    {
        divno = divcount(i);
        if (divno>maxd && included(i)==0)
        {
            flag=1;
            maxd = divno;
            maxn = i;
        }
    }
    return maxn;
}

int divcount(int n)
{
    int divcount=0;
    for (int i=1; i<=n; i++)
    {
        if (n%i==0)
        {
            divcount++;
        }
    }
    return divcount;
}

int included(int num)
{
    for (int i=0; i<=last; i++)
    {
        if (written[i]==num)
            return 1;
    }
    return 0;
}

void appendWritten(int n)
{
    int flag;
    for (int i=1; i<=n; i++)
    {
        flag=0;
        if (n%i==0)
        {
            for (int j=0; j<=last; j++)
            {

                if (written[j]==i)
                    flag=1;
            }
            if (flag==0)
            {
                last++;
                //cout<<i<<" ";
                written[last] = i;
            }
        }
    }
}
