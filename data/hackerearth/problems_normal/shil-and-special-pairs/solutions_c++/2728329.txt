#include <bits/stdc++.h> 
using namespace std;

const int N=100001;
	
#define sc(x) scanf("%d",&(x))
#define fori(n) for(int i=0;i<n;i++)
#define forj(n) for(int j=0;j<n;j++)
#define rep(a,b) for(int i=a;i<=b;i++)

struct node{
	int l;
	int r;
	int idx;
};

node a[N];
int sol[N];
int bit[N];
int pos[N];
int arr[N];

bool compare(const node& lhs, const node& rhs){
	return lhs.r<rhs.r;
}

void update(int idx,int val,int n){
	while(idx<=n){
		bit[idx]+=val;
		idx += (idx & -idx);
	}
}

int query(int idx){
	int sum=0;
	while(idx>0){
		sum += bit[idx];
		idx -= (idx & -idx);
	}
	return sum;
}


////************
int main()
{
	//freopen("input.txt","r",stdin);
	int n,m,d;
	sc(n);sc(m);sc(d);
	rep(1,n){sc(arr[i]);pos[arr[i]]=i;}
	
	fori(m){
		sc(a[i].l);
		sc(a[i].r);
		a[i].idx=i;
	}
	sort(a,a+m,compare);
	int k=0;
	rep(1,n){
		for(int j=max(arr[i]-d,1);j<=min(arr[i]+d,n);j++){
			if(pos[j]<=i){
				update(pos[j],1,n);
			}
		}
		while(k<m && a[k].r==i){
			sol[a[k].idx]=query(a[k].r)-query(a[k].l-1);
			k++;
		}
	}

	fori(m){
		printf("%d\n",sol[i]);
	}

	
	


}