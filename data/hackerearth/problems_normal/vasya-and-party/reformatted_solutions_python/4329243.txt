'''
# Read input from stdin and provide input before running code

name = raw_input('What is your name?\n')
print 'Hi, %s.' % name
'''
MOD = 10**9+7
N, M = map(int, raw_input().split(" "))
kl = map(int, raw_input().split(" "))

# Build graph (int)
nodes = {}
for n in range(N):
    nodes[n+1] = set([])

for i in range(M):
    n1, n2 = map(int, raw_input().split(" "))
    nodes[n1].add(n2)
    nodes[n2].add(n1)

# connected component


def connectedComponent():
    visited = set([])
    for node in nodes:
        # visited
        if node in visited:
            continue
        else:
            components = set([node])
            visiting = set([node])
            while visiting:
                n = visiting.pop()
                visited.add(n)
                components |= nodes[n]
                visiting |= nodes[n] - visited
            numLeaders = 0
            highest = 0
            for c in components:
                if kl[c-1] > highest:
                    highest, numLeaders = kl[c-1], 1
                elif kl[c-1] == highest:
                    numLeaders += 1
            yield numLeaders


# print [x for x in connectedComponent()]
print reduce(lambda a, b: (a*b) % MOD, connectedComponent())
