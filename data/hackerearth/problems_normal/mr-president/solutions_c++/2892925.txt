#include <bits/stdc++.h>
using namespace std;

#define mp make_pair

bool visit[1000006];
long long MST[1000006];

vector< vector< pair<int, long long> > > X(1000006);
priority_queue< pair<long long, int>, vector< pair<long long, int> >, greater< pair<long long, int> > > Q;

int main()
{
    int N, M;
    long long K;
    scanf("%d %d %lld", &N, &M, &K);
    
    while(M--)
    {
    	int A, B;
    	long long C;
    	scanf("%d %d %lld", &A, &B, &C);
    	
    	X[A].push_back(mp(B, C));
    	X[B].push_back(mp(A, C));
    }
    
    if(K<N-1)
    {
    	printf("-1\n");
    	return 0;
    }
    
    visit[1] = true;
    
    for(vector< pair<int, long long> >::iterator it=X[1].begin(); it!=X[1].end(); it++)
    	Q.push(mp(it->second, it->first));
    
    int k = 0;
    long long sum = 0;
    
    while(!Q.empty())
    {
    	pair<long long, int> x = Q.top();
    	Q.pop();
    	
    	if(visit[x.second]==false)
    	{
    		visit[x.second] = true;
    		sum+= x.first;
    		MST[k++] = x.first;
    		
    		for(vector< pair<int, long long> >::iterator it=X[x.second].begin(); it!=X[x.second].end(); it++)
    	Q.push(mp(it->second, it->first));
    	}
    }
    
    if(k!=N-1)
    {
    	printf("-1\n");
    	return 0;
    }
    
    sort(MST, MST+N-1);
    reverse(MST, MST+N-1);
    
    int ans = 0;
    
    for(int i=0; i<N-1; i++)
    {
    	if(sum<=K)
    		break;
    	
    	ans++;
    	sum-= MST[i];
    	sum++;
    }
    
    printf("%lld\n", ans);
    
    return 0;
}
