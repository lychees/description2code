#include<bits/stdc++.h>
const int N = 1000050;
const int BOUND = 1000000;
using namespace std;
set<int> bad;
int n, m, k;
int reach[N];
int ans[N];
int main(){
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	cin >> n >> k >> m;
	for (int i = 0; i < m; i++)
	{
		int val;
		cin >> val;
		bad.insert(val);
	}
	int cur = 1;
	for (int i = 1; i < BOUND; i++)
	{
		reach[i] = 1e9;
	}
	for (int i = 1; i <= n; i++)
	{
		while (reach[cur] <= k || bad.find(cur) != bad.end())
			++cur;
		ans[i] = cur;
		reach[cur] = 1;
		for (int val = 1; val*cur <= BOUND; val++)
		{
			reach[val*cur] = min(reach[val*cur], reach[val] + 1);
		}
	}
	for (int i = 1; i <= n; i++)
	{
		if (i > 1)
			cout << " ";
		cout << ans[i];
	}
	cout << endl;
	return 0;
}
