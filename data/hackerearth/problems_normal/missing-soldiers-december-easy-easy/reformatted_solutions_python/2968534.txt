class Interval:
    def __init__(self, s=0, e=0):
        self.start = s
        self.end = e

    def __repr__(self):
        return "[{}, {}]".format(self.start, self.end)


def merge(intervals):
    if not intervals:
        return intervals
    intervals.sort(key=lambda x: x.start)
    result = [intervals[0]]
    for i in range(1, len(intervals)):
        prev, current = result[-1], intervals[i]
        if current.start <= prev.end:
            prev.end = max(prev.end, current.end)
        else:
            result.append(current)
    return result


tc = int(raw_input())
intervals = []
for _ in range(tc):
    x, y, d = map(int, raw_input().split())
    intervals.append(Interval(x, x+d))
res = merge(intervals)
# print res
print sum([r.end - r.start + 1 for r in res])
