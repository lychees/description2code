#include <bits/stdc++.h>
using namespace std;

#define M1 1000003

char S[1000006];
vector<long long> X(1000006);

int func(int N)
{
	long long hashx1 = 0, k1 = 1;
	
	for(int i=0; i<N; i++)
	{
		hashx1 = (hashx1*M1 + S[i]);
		k1 = k1*M1;
	}
	
	X[0] = hashx1;
	
	int j = 0;
	
	for(int i=N; S[i]!='\0'; i++)
	{
		hashx1 = (hashx1*M1 + S[i]);
		hashx1-= k1*S[j];
		
		j++;
		X[j] = hashx1;
	}
	
	sort(X.begin(), X.begin()+j+1);
	
	for(int i=0; i<=j; i++)
		if(X[i]==X[i-1])
			return 1;
	
	return 0;
}

int solve(int left, int right)
{
	int mid = (left+right)/2;
	int x = func(mid);
	
	if(!x)
		return solve(left, mid-1);
	
	if((mid+right)/2==mid)
	{
		if(func(right))
			return right;
		
		return mid;
	}
	
	return solve(mid, right);
}

int main()
{
    scanf("%s", S);
    
    printf("%d\n", solve(0, strlen(S)));
    
    return 0;
}
