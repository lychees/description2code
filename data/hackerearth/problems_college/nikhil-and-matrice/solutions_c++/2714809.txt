#include <bits/stdc++.h>

using namespace std;

#define mem0(arr) memset(arr , 0 , sizeof arr)
#define memf(arr) memset(arr , false , sizeof arr)
#define memdp(arr) memset(arr , -1 , sizeof arr)
#define rep(i , n) for(int i = 1; i <= n; i++)
#define loop(i , n) for(int i = 0; i < n; i++)
#define pb push_back
#define fi first
#define se second
#define cs(y) cout << "Case " << y << ": "
#define cs2(y) cout << "Case " << y << ":" << "\n"

typedef long long ll;

int n , m  , k , d , t , tem1 , tem2 , tem3 , tem4 , y = 1, sum = 0 , ans = 0;
string s , c;
int arr [10 + 10][10 + 10];

void dfs(int i , int j , int who){

    arr[i][j] = sum++;

    if(who == 0){
        if(j != n - 1 && arr[i][j + 1]  == 0) dfs(i , j + 1 , 0);
        else if(arr[i + 1][j] == 0 && i + 1 < n) dfs(i + 1 , j , 1);
        else return;

    } else if (who == 1){
        if(i != n - 1 && arr[i + 1][j] == 0) dfs(i + 1 , j , 1);
        else if (arr[i][j - 1] == 0 && j - 1 >= 0) dfs(i , j - 1 , 2);
        else return;

    } else if (who == 2){
        if(j != 0 && arr[i][j - 1] == 0) dfs(i , j - 1, 2);
        else if (arr[i - 1][j] == 0 && i - 1 >= 0) dfs(i - 1 , j , 3);
        else return;

    } else {
        if(i > 0 && arr[i - 1][j] == 0) dfs(i - 1 , j , 3);
        else if( arr[i][j + 1] == 0 && j + 1 < n ) dfs(i , j + 1 , 0);
        else return;
    }
}


int main()
{
    ios::sync_with_stdio(false);cin.tie(0);


    cin >>   t             ;

    while(t--){
        sum = 1;
        memset(arr , 0 , sizeof arr);
        cin >> n;
        dfs(0 , 0  , 0);
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                cout << arr[i][j];
            }
            cout << "\n";
        }
        cout << "\n";

    }




    return 0;
}
