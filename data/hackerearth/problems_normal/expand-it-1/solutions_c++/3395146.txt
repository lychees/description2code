#include <iostream>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <vector>
#include <string>
using namespace std;
typedef pair<char, long long> CLL;
vector<CLL> I;
vector<long long> vals;
int main()
{
	string s; cin >> s;
	for (int i = 0, indx = 0; i < s.size();) {
		if (s[i] >= 'a' && s[i] <= 'z') {
			char c = s[i++];
			long long t = 0;
			while (i < s.size() && s[i] >= '0' && s[i] <= '9' ) {
				t *= 10L;
				long long a = s[i] - '0';
				t += a;
				i++;
			}
			CLL l = make_pair(c, t);
			I.push_back(l);
		}
	}
	sort(I.begin(), I.end());
	long long last = 0;
	for (int i = 0; i < I.size(); i++) {
		long long a = last + I[i].second;
		vals.push_back(a);
		last = a;
	}
	int Q; cin >> Q;
	while (Q-- > 0) {
		long long K; scanf("%lld", &K);
		vector<long long>::iterator low = lower_bound(vals.begin(), vals.end(), K);
		if (*low < K) low++;
		int pos = low - vals.begin();
		if (pos > vals.size()) printf("%d\n", -1);
		else printf("%c\n", I[pos].first);
		
	}
}
