#include <iostream>
#include <stdio.h>
#include <fstream>
#include <math.h> 
#include <string.h>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <algorithm>

using namespace std;

#define forn(i, n) for (long i = 0; i < (long)(n); ++i)
#define for1(i, n) for (long i = 1; i <= (long)(n); ++i)
#define ford(i, n) for (long i = (long)(n) - 1; i >= 0; --i)
#define fore(i, a, b) for (long i = (long)(a); i <= (long)(b); ++i)
bool myfunction (int i,int j) { return (i<j); }

typedef long long int int64;
typedef unsigned long long int uint64;
typedef long int int32;
typedef unsigned long int uint32;

int t , n , m;
long long ans;
long long arr [100 + 10];
long long dp [100 + 10][100 + 10];

long long rec(int index, int num){
    if(num <= 0 || index == n - 1) return 0;
    long long &st = dp[index][num];
    if(st != -1) return st;
     long long ans = 0;
    for(int i = index + 1; i < n; i++)
        ans = max(ans , abs(arr[i] - arr[index]) + rec(i , num - 1));
    return st = ans;
}

int main(){
	int64 t;
	cin >> t;
	forn(i,t){
		ans = -1e9;
        cin >> n >> m;
        for(int i = 0; i <= n; i++){
            for(int j = 0; j <= m; j++){
                dp[i][j] = -1;
            }
        }
        for(int i = 0; i < n; i++) cin >> arr[i];
        for(int i = 0; i < n; i++){
            ans = max(ans , rec(i , m - 1));
        }
        cout << ans << "\n";
	}
	return 0;
}