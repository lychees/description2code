#include <iostream>
#include <vector>
#include <set>
#include <stack>
using namespace std;
vector<int> friends[10001];
bool visited[10001];
//int x[10001];
set<int> sit;
set<int> :: iterator it;
int n;
void solve(int u){	  
	sit.insert(u);
	stack<int> s;
    s.push(u);
    visited[u] = true;
    if(friends[u].empty()) return;
    
    while(!s.empty()){
        int v = s.top();
        s.pop();
        sit.insert(v);
        if(friends[u].empty()) break;       
        for (int k:friends[v])
            if (!visited[k]) {
                s.push(k);               
                visited[k] = true;
            }
    }
 
}
	
int main()
{
    int t,f,s;
    scanf("%d",&t);
    int a,b,x;
    while(t--){
    	scanf("%d%d%d",&n,&f,&s);
    	for (int i=1;i<=n;i++) {
    		friends[i].clear();
    		visited[i] = false;
    	}
    	//for (int i=1;i<=n;i++) friends[i] = 0;
    	for (int i=0;i<f;i++){
    		scanf("%d%d",&a,&b);
    		//friends[a] = b;
    		friends[a].push_back(b);
    	}
    	sit.clear();
    	for (int i=0;i<s;i++){
    		scanf("%d",&x);
    		solve(x);
    	}
    	//for (it=sit.begin();it!=sit.end();it++) cout << (*it) << " ";
    	//cout << endl; 
    	printf("%d\n",sit.size());
    	
    }
    return 0;
}
