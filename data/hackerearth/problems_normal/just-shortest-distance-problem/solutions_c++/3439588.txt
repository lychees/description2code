#include <bits/stdc++.h>
#define ll long long
#define ii pair<int,int>
#define FOR(x,n) for(int x = 0; x < n; x++)
using namespace std;

vector<int> dist(1001,(1<<28));
vector<int> edges[1001] = {};
priority_queue< ii, vector<ii>, greater<ii> > pq;

void addEdge(int u, int v){
    edges[u].push_back(v);
    if(dist[v] == -1 || dist[v] > dist[u] + 1){
        dist[v] = dist[u] + 1;
        pq.push({dist[v], v});
    } 
}

void update(){
    while(!pq.empty()){
        int U = pq.top().second, D = pq.top().first; pq.pop();
        if(D > dist[U]) continue;
        for(int x = 0; x < edges[U].size(); x++){
        	int v = edges[U][x];
            if(D + 1 < dist[v])
                dist[v] = D + 1, pq.push({dist[v],v});
        }
    }
}

int main(){
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    dist[1] = 0;
    int N, M, q, X, Y; cin >> N >> M;
    FOR(x,M){
        cin >> q;
        if(q == 1){
            cin >> X;
            update();
            cout << ((1<<28) == dist[X] ? -1 : dist[X]) << '\n';
        }else{
            cin >> X >> Y;
            addEdge(X,Y);
        }
    }
}