#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
using namespace std;
#define x first
#define y second
#define mp(a,b) make_pair(a,b)
#define pll pair<long long,long long>
#define vll vector<pll>
#define mod 1000000007
long n,m;
long int id[1505];
long int size[1505];
long int root(long p)
{
	while(p!=id[p])p=id[p];
	return p;
}
void unionbank(long p,long q)
{
	p=root(p);
	q=root(q);
	if(p==q)return;
	if(size[p]<size[q])swap(p,q);
	size[p]+=size[q];
	id[q]=p;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t;
	cin>>t;
	while(t--)
	{
     vector<pair<long long,pll> > edges;
     cin>>n>>m;
     for(long int i=1;i<=n;i++)
     id[i]=i,size[i]=1;
     long long u,v;long long wt; 
  
    for(long int i=1;i<=m;i++)		
 		{cin>>u>>v>>wt;
 		edges.push_back(mp(wt,mp(u,v))); 
 		}
	
	sort(edges.begin(),edges.end());
	
	long long int e=n-1;
	long long int ans=1;
	for(long int i=0;i<m&&e>0;i++)
	{
		u=edges[i].y.x;
		v=edges[i].y.y;
		wt=edges[i].x;
		if(root(u)==root(v))
		continue;
		unionbank(u,v);
		ans=ans*wt;
		ans=ans%(mod);
		e--;
	}
		cout<<ans<<endl;
		
	}
	
	
	
	
	
	return 0;
}
