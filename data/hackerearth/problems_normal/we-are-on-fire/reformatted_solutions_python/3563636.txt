def burnTheNations(point):

    global unburnt
    global mapOfWorld

    if (mapOfWorld[point[0]][point[1]]) == 0:
        return

    mapOfWorld[point[0]][point[1]] = 0

    unburnt -= 1

# calculate neighbors 'n' of attackPoint that are 1

    neighbor = []

    if point[0] > 1:
        neighbor.append([point[0]-1, point[1]])
    if point[1] > 1:
        neighbor.append([point[0], point[1]-1])
    if point[0] < N:
        neighbor.append([point[0]+1, point[1]])
    if point[1] < M:
        neighbor.append([point[0], point[1]+1])

    for n in neighbor:
        burnTheNations(n)


if __name__ == "__main__":

    temp = []

    temp = map(int, raw_input().split())

    N = temp[0]
    M = temp[1]
    Q = temp[2]

    mapOfWorld = []
    unburnt = 0

    mapOfWorld.append(0)

    for i in range(N):
        tempList = []
        tempList = map(int, raw_input().split())
        tempList.insert(0, 0)
        mapOfWorld.append(tempList)
        unburnt += mapOfWorld[i+1].count(1)

    fireBallAttack = []

    for i in range(Q):
        fireBallAttack.append(map(int, raw_input().split()))

    for i in fireBallAttack:
        burnTheNations(i)
        print unburnt
