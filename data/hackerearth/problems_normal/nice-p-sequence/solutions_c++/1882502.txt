#include <iostream>
using namespace std;
int gcd_iter(int u, int v) {
  int t;
  while (v) {
    t = u; 
    u = v; 
    v = t % v;
  }
  return u < 0 ? -u : u; /* abs(u) */
}
pair<int, pair<int, int> > extendedEuclid(int a, int b) {
    int x = 1, y = 0;
    int xLast = 0, yLast = 1;
    int q, r, m, n;
    while(a != 0) {
        q = b / a;
        r = b % a;
        m = xLast - q * x;
        n = yLast - q * y;
        xLast = x, yLast = y;
        x = m, y = n;
        b = a, a = r;
    }
    return make_pair(b, make_pair(xLast, yLast));
}
 
int modInverse(int a, int m) {
    return (extendedEuclid(a,m).second.first + m) % m;
}
int main()
{	int t;
    cin>>t;
    while(t--){
    
    	long long int a1,p,n;
    	cin>>a1>>p>>n;
    	
    	
    	int aa=gcd_iter(a1,p);
    	int a2=modInverse(a1,p);
    		
    	if(aa==1){
    	if(n==1)
    	cout<<a1<<"\n";
    	else if(n%2==0)cout<<a1*(n/2)+a2*(n/2)<<"\n";
    	else cout<<a1*(n+1)/2+a2*(n-1)/2<<"\n";}
    	else cout<<"-1\n";
    }
    return 0;
}
