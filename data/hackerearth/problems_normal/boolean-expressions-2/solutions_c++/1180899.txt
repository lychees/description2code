#include <bits/stdc++.h>
#define LL long long
#define vi vector<int>
#define N 301
int mod = 1e9+9;
LL dp[2][N][N];//,dp2[N][N];

int a[N];
using namespace std;
/*LL solve(int i,int j,int res,string s){
	if(i==j)return (dp[res][i][j]=(a[i]==res));
	if(dp[res][i][j]!=-1)return dp[res][i][j];
	LL ans=0;
	for(int k=i;k<j;k++){
		//elements i to k form the left operand
		char op = s[k];
		if(op=='a'){
			if(res==0){
				ans= (ans + (solve(i,k,0,s)*solve(k+1,j,0,s))%mod)%mod;
				ans=(ans + (solve(i,k,0,s)*solve(k+1,j,1,s))%mod)%mod;
				ans=(ans + (solve(i,k,1,s)*solve(k+1,j,0,s))%mod)%mod;
			}
			else{
				ans=(ans + (solve(i,k,1,s)*solve(k+1,j,1,s))%mod)%mod;
			}
		}
		if(op=='o'){
				if(res==1){
				ans= (ans + (solve(i,k,1,s)*solve(k+1,j,1,s))%mod)%mod;
				ans=(ans + (solve(i,k,0,s)*solve(k+1,j,1,s))%mod)%mod;
				ans=(ans + (solve(i,k,1,s)*solve(k+1,j,0,s))%mod)%mod;
			}
			else{
				ans=(ans + (solve(i,k,0,s)*solve(k+1,j,0,s))%mod)%mod;
			}
		}
		if(op=='x'){
				if(res==0){
				ans= (ans + (solve(i,k,0,s)*solve(k+1,j,0,s))%mod)%mod;
				ans=(ans + (solve(i,k,1,s)*solve(k+1,j,1,s))%mod)%mod;
				
			}
			else{
				ans=(ans + (solve(i,k,1,s)*solve(k+1,j,0,s))%mod)%mod;
				ans=(ans + (solve(i,k,0,s)*solve(k+1,j,1,s))%mod)%mod;
			}
		}
	}
	return dp[res][i][j]=ans;
}*/
int main() {
	string lit,op;
	cin>>lit>>op;

//	cout<<dp[0][0][0];
	int n = lit.length();
	for(int i=0;i<n;i++)a[i]=lit[i]-'0';
	for(int i=0;i<n;i++){
		dp[0][i][i] = (a[i]==0);
		dp[1][i][i] = (a[i]==1);
	}
	for(int kk=1;kk<n;kk++){
		for(int i=0;i+kk<n;i++){
			int j=i+kk;
			LL ans = 0;
			for(int k=i;k<j;k++){
				char c = op[k];
				if(c=='a'){
					ans = (ans + (dp[0][i][k]*dp[1][k+1][j])%mod)%mod;
					ans = (ans + (dp[1][i][k]*dp[0][k+1][j])%mod)%mod;
					ans = (ans + (dp[0][i][k]*dp[0][k+1][j])%mod)%mod;
				}else
				if(c=='o'){
					ans = (ans + (dp[0][i][k]*dp[0][k+1][j])%mod)%mod;
				}else{
					ans = (ans + (dp[0][i][k]*dp[0][k+1][j])%mod)%mod;
					ans = (ans + (dp[1][i][k]*dp[1][k+1][j])%mod)%mod;
				}
			}
			dp[0][i][j] = ans;
			ans = 0;
			for(int k=i;k<j;k++){
				char c = op[k];
				if(c=='o'){
					ans = (ans + (dp[0][i][k]*dp[1][k+1][j])%mod)%mod;
					ans = (ans + (dp[1][i][k]*dp[0][k+1][j])%mod)%mod;
					ans = (ans + (dp[1][i][k]*dp[1][k+1][j])%mod)%mod;
				}else
				if(c=='a'){
					ans = (ans + (dp[1][i][k]*dp[1][k+1][j])%mod)%mod;
				}else{
					ans = (ans + (dp[0][i][k]*dp[1][k+1][j])%mod)%mod;
					ans = (ans + (dp[1][i][k]*dp[0][k+1][j])%mod)%mod;
				}
			}
			dp[1][i][j] = ans;
		}
	}
	int q;
	cin>>q;
	
	while(q--){
		int l,r;
		char res[10];
		int rres=0;
		scanf("%d%d%s",&l,&r,&res);
		//cin>>res;
		if(res[0] == 't')rres=1;
		printf("%lld\n",dp[rres][l-1][r-1]);
		//cout<<dp[rres][l-1][r-1]<<endl;
	}
	return 0;
}