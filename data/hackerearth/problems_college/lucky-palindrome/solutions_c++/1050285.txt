#include <iostream>
#include<limits.h>
#include<math.h>
using namespace std;
bool isprime (int number)
{
	
	if (number <=1) 	return false;
	else if (number==2) return true;
	else if (number%2 == 0 ) return false;
	else
	{
		bool prime =true;
		double num_d = static_cast <double> (number);
		int limit = static_cast <int> (  sqrt(num_d)  +1  )  ;
		int divisor = 3; 
		while (divisor <= limit)
		{
			if (number%divisor == 0)
			{
				prime = false;
				break;
			}
			divisor+=2;
		}
		
		
		return prime;
	}
}
int pal(string str)
{
	int l=str.length();
	if(l==0 || l==1) return l;
	int i,len=1,maxl=INT_MIN,left,right;
	for(i=1;i<l;i++)
	{
		left=i-1;
		right=i+1;
		while(left>=0 && right<=l && str[left]==str[right])
		{
			len=right-left+1;
			left--;
			right++;
		}
		if(len>maxl)
		 maxl=len;
	}
	for(i=1;i<l;i++)
	{
		left=i-1;
		right=i;
		while(left>=0 && right<=l && str[left]==str[right])
		{
			len=right-left+1;
			left--;
			right++;
		}
		if(len>maxl)
		 maxl=len;
	}
	return maxl;
}
int main()
{
    int t,i,l;
    string str;
    cin>>t;
    while(t--)
    {
    	cin>>str;
    	if(isprime(pal(str)))
    	 cout<<"YES\n";
    	 else
    	   cout<<"NO\n";
    }
    return 0;
}
