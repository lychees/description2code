#include <bits/stdc++.h>
#define pb push_back
using namespace std;
const int z = 102;
int a[z][z];
void merge(int i,int j,vector<int> res[][z])
{
	int x=0,y=0,k=0;
	while(x<res[i][j-1].size() && y<res[i-1][j].size()) {
		if(k==101) return;
		if(res[i][j-1][x]<res[i-1][j][y]) {
			res[i][j].pb(res[i][j-1][x]+a[i][j]);
			x++;
		}
		else {
			res[i][j].pb(res[i-1][j][y]+a[i][j]);
			y++;
		}
		k++;
	}
	while(x<res[i][j-1].size()) {
		if(k==101) return;
		res[i][j].pb(res[i][j-1][x]+a[i][j]);
		x++;k++;
	}
	while(y<res[i-1][j].size()) {
		if(k==101) return;
		res[i][j].pb(res[i-1][j][y]+a[i][j]);
		y++;k++;
	}
	
}
int main()
{
    int t,m,n,q,d,e,f;
    string x;
    cin>>t;
    while(t--) {
    	cin>>m>>n;
    	for(int i=0;i<m;i++) {
    		for(int j=0;j<n;j++) {
    			cin>>x;
    			if(x=="##") {
    				a[i][j]=-10;
    			}
    			else a[i][j]=stoi(x);
    		}
    	}
    	vector<int> res[z][z];
    	res[0][0].pb(a[0][0]);
    	for(int i=1;i<m;i++) {
    		if(a[i][0]==-10) break;
    		res[i][0].pb(res[i-1][0][0]+a[i][0]);
    	}
    	for(int i=1;i<n;i++) {
    		if(a[0][i]==-10) break;
    		res[0][i].pb(res[0][i-1][0]+a[0][i]);
    	}
    	for(int i=1;i<m;i++) {
    		for(int j=1;j<n;j++) {
    			if(a[i][j]==-10) continue;
    			merge(i,j,res); 
    		}
    	}
    	/*for(int i=0;i<m;i++) {
    		for(int j=0;j<n;j++) {
    			for(int k=0;k<res[i][j].size();k++) cout<<res[i][j][k]<<"-";
    			cout<<" ";
    		}
    		cout<<endl;
    	}*/
    	cin>>q;
    	while(q--) {
    		cin>>d>>e>>f;
    		if(a[d][e]==-10) cout<<"Obstacle\n";
    		else if(f>res[d][e].size()) cout<<"Not so many paths\n";
    		else cout<<res[d][e][f-1]<<endl;
    	}
    }
}
