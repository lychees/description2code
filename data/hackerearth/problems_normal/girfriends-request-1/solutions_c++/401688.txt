#include<bits/stdc++.h>

using namespace std;

#define N 1415
#define PB push_back
#define MOD 1000000007
#define MP make_pair
#define S second
#define F first

int ret;
char ch;

inline int gi(){
    ret = 0;
    ch = ' ';
    while(ch < '0' || ch > '9'){
        ch = getchar();
    }
    while(ch <= '9' && ch >= '0'){
        ret *= 10;
        ret += ch - '0';
        ch = getchar();
    }
    return ret;
}

int a[N], dp[N][N];
vector< pair<int, int> > vec;

int main(){
    int n, i, j, u, v, k, l, r, q, m;
    n = gi();
    vec.PB(MP(-1000000000, -1000000000));
    for(i = 1; i <= n; i++){
        a[i] = gi();
        vec.PB(MP(a[i], i));
    }

    sort(vec.begin(), vec.end());
    for(i = 1; i <= n; i++){
        for(j = 0; j <= n; j++){
            dp[i][j] = dp[i - 1][j] + (j >= vec[i].S ? 1 : 0);
            //cout<<dp[i][j]<<" ";
        }
        //cout<<endl;
    }
    q = gi();
    while(q--){
        u = gi();
        v = gi();
        k = (v - u + 2) / 2;
        l = 1;
        r = n;
        while(l < r){
            m = ((l + r)>>1);
            //cout<<l<<" "<<r<<" "<<m<<" "<<dp[m][v]-dp[m][u - 1]<<" "<<k<<endl;
            if(dp[m][v] - dp[m][u - 1] >= k){
                r = m;
            }
            else{
                l = m + 1;
            }
        }
        printf("%d\n", vec[l].F);
    }
    return 0;
}
