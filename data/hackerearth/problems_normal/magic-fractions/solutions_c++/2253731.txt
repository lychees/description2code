//HackerEarth--Magic Fractions
#include<bits/stdc++.h>
#define MAX 505

using namespace std;

typedef long long int lli;
lli ans[MAX],factors[MAX],sieve[MAX];
set<lli> tillNow;
vector<lli> primes;

void fill(){
	
	primes.push_back(2);
	
	for(lli i=4;i<MAX;i+=2)
	  sieve[i]=1;	
	
	for(lli i=3;i<MAX;i+=2)	
		if(!sieve[i]){
			
			primes.push_back(i);
			for(lli j=i*i;j<MAX;j+=i)
			 sieve[j]=1;			
			
		}
		
}

lli fast_expo(lli base,lli expo){
	
	if(expo==0) return 1;
	lli ans=fast_expo(base,expo/2);
	ans=ans*ans;
	if(expo%2==0) return ans;
	else return ans*base;	
}

int main(void){
	
	fill();
	
	lli i,j,k;
    for(i=2;i<=MAX;i++){
    	
    	lli temp=i;
    	
    	j=0;
    	while(temp>1&&j<primes.size()){
    		
    	    if(temp%primes[j]==0) tillNow.insert(primes[j]);
    		j++;
    		
		}
    	
    	factors[i]=tillNow.size();
    	
	}
	
	for(i=2;i<MAX;i++)	
		ans[i]=ans[i-1]+fast_expo(2,factors[i]-1);
			
    cin>>i;
    cout<<ans[i];
	
	return 0;
	
}