#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue>
#include <climits>
#include <cassert> 
 
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
 
#define pb push_back
#define mp make_pair
#define sz size()
#define ln length()
#define forr(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) forr(i,0,n)
#define all(v) v.begin(),v.end()
#define uniq(v) sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a) memset(a,0,sizeof a)
#define debug if(1)
#define debugoff if(0)
 
#define print(x) cerr << x << " ";
#define pn() cerr << endl;
#define trace1(x) cout << #x << ": " << x << endl;
#define trace2(x, y) cout << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cout << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
 
#define MAX 210
#define MOD 1000000007
#define endl '\n'

int arr[MAX];
int visited[MAX];
int ans[MAX];
int pos[MAX];

int a = 1 ; int p = 1;
vector<int> v[MAX];

void dfs(int node , int val){

	//trace2(node,val);

	visited[node]=1;
	ans[a++] = val;
	pos[p++] = node;
	for(int j=0;j<v[node].size();j++){
		int u = v[node][j] ;
		if(!visited[u])
			dfs(u,arr[u]);
	}
	return ;
}


int main(){

	int k;
	string s;
	cin>>k;
	for(int i=1;i<=k;i++)cin>>arr[i];
	forr(i,1,k+1){
		cin>>s;
		rep(j,k){
			if(s[j] == 'Y'){
				v[i].push_back(j+1);
			}
		}
	}

	/*for(int i=1;i<=k;i++){
		trace1(i);
		for(int j=0;j<v[i].sz;j++){

			cout<<v[i][j]<<" ";
		}
		cout<<endl;
	}*/



	for(int i=1;i<=k;i++){

		if(!visited[i]){
			//trace1(i);
			a=1;p=1;
			dfs(i,arr[i]);
			sort(ans+1,ans+a);
			sort(pos+1,pos+p);
			//forr(j,1,a) cout<<ans[j]<<" "; cout<< endl;
			//forr(j,1,a) cout<<pos[j]<<" ";cout<< endl;
			for(int j=1;j<a;j++){
				//trace2(pos[j],ans[pos[j]]);
				arr[pos[j]] = ans[j];
			}
		}
	}
	forr(i,1,k+1) cout<<arr[i]<<" ";
	cout<<endl;
}