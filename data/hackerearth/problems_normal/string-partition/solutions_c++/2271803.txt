#include<bits/stdc++.h>
using namespace std;
int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin>>t;
    assert(1<=t && t<=10);
    while(t--)
    {
        int K,Z,i,n,j,k;
        char str[101];
        int fromto[100][100];
        cin>>K>>Z;
        cin>>str;
        
        n=strlen(str);
        assert(1<=n && n<=100 && 1<=K && K<=100 && 1<=Z && Z<=1000000000);
        for(i=0;i<n;i++)
        {
            long long num=0;
            for(j=i;j<n;j++)
            {
                num=(num*10)+(str[j]-'0');
                if(num>Z)
                    break;
                fromto[i][j]=num;
            }
            for(;j<n;j++)
            {
                fromto[i][j]=-1;
            }
        }
        long long dp[101][100]={0};
        for(i=1;i<=K;i++)
            for(j=0;j<n;j++)
                dp[i][j]=-1;
        for(i=0;i<n && fromto[0][i]!=-1;i++)
        {
            dp[1][i]=fromto[0][i];
        }
        for(i=2;i<=K;i++)
        {
            
            for(j=0;j<n;j++)
            {
                for(k=j+1;k<n;k++)
                 {
                    if(fromto[j+1][k]!=-1 && dp[i-1][j]!=-1)
                    dp[i][k]=max(dp[i][k],dp[i-1][j]+fromto[j+1][k]);
                }
            }
        }
     
        	cout<<dp[K][n-1]<<endl;
    }
    return 0;
}   