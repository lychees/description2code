#include<iostream>
#include<vector>
using namespace std;
long n;
vector <long>arr;
vector <long>size;
vector <long> ht;
int root(long i)
{
	while(i!=arr[i])
	{
		arr[i]=arr[arr[i]];
		i=arr[i];
	}
	return i;
}
long max_s=1;
void merge(int a, int b)
{
	long r_a=root(a);
	long r_b=root(b);
	if(r_a==r_b)
	return;
	long s_a=size[r_a];
	long s_b=size[r_b];
	ht[s_a]--;
	ht[s_b]--;
	ht[s_a+s_b]++;
	arr[r_b]=r_a;
	size[r_a]+=size[r_b];
	if((s_a+s_b)>max_s)
	max_s=s_a+s_b;
}
void answer(int a, int b)
{
	merge(a,b);
	long i=1,j,min_dif=n+1;
	while(ht[i]==0)
	{
		i++;
	}
	if(i==max_s)
	{
		cout<<0<<"\n";
		return;
	}
	while(i<=(max_s-1))
	{
		if(ht[i]>1)
		{
			cout<<0<<"\n";
			return;
		}
		j=i+1;
		while(ht[j]==0)
		{
			j++;
		}
		if((j-i)<min_dif)
		min_dif=j-i;
		i=j;
	}
	cout<<min_dif<<"\n";
}
int main()
{
	int q, ans, a, b;
	cin>>n>>q;
	size.reserve(n);
	ht.reserve(n+1);
	for(int i=0;i<=n;i++)
	{
		arr.push_back(i);
		size.push_back(1);
	}
	ht[1]=n;
	for(int i=0;i<q;i++)
	{
		cin>>a>>b;
		answer(a,b);
	}
	return 0;
}