 #include <iostream>
using namespace std;

const long long  MOD = 10000007;
long long* mul(long long *a,long long *b)
{
	long long *m=new long long[25]{};
	
	for(int i=0;i<5;i++)
	{
		for(int j=0;j<5;j++)
		{
		   long long  sum=0;	
		   for(int g=0;g<5;g++)
		   {
		   	long long k1=*(a+i*5+g);
		   	long long k2=*(b+g*5+j);
		   	sum=(sum+(k1*k2)%MOD)%MOD;
		   }
		    *(m+(i*5)+j)=sum;	
	      	 		
		}
	}
	
	return m; 
}

long long* mul1(long long *a,long long *b)
{
	long long *m=new long long[5]{};
	
	for(int i=0;i<5;i++)
	{
		for(int j=0;j<1;j++)
		{
		   long long  sum=0;	
		   for(int g=0;g<5;g++)
		   {
		   	sum=(sum+((*(a+i*5+g))*(*(b+g*1+j)))%MOD)%MOD;
		   }
		   *(m+(i*1)+j)=sum;	
	
		}
	}
 
	
	
	return m; 
   
}

long long* pow(long long *b,long long n)
{
  
 if(n==1)
  {
  return b;
  }
 if(n%2)
  {
   return mul(b,pow(b,n-1));
  }
  else
  {
  long long *x=pow(b,n/2);
  return mul(x,x);
  }
	
}
long long initial_call(long long* m,long long *b,long long n)
{
	
	if(n==1)
	{
	 return 1;
    }
   long long *k=pow(m,n-1);
   long long *l=mul1(k,b);
  
   return *(l);
   
}

int main()
{
	int t;
	cin>>t;
	long long n;
	while(t>0)
	{
	t--;
	cin>>n;
	long long *w;
	long long *q;
    long long m[5][5];
    long long b[5];
    m[0][0]=1;m[0][1]=2;m[0][2]=3;m[0][3]=2;m[0][4]=1;
	m[1][0]=1;m[1][1]=0;m[1][2]=0;m[1][3]=0;m[1][4]=0;	
	m[2][0]=0;m[2][1]=1;m[2][2]=0;m[2][3]=0;m[2][4]=0;
	m[3][0]=0;m[3][1]=0;m[3][2]=1;m[3][3]=0;m[3][4]=0;
	m[4][0]=0;m[4][1]=0;m[4][2]=0;m[4][3]=1;m[4][4]=0;
	
	b[0]=1;
	b[1]=2;
	b[2]=3;
	b[3]=2;
	b[4]=1;

	
    w=&m[0][0];
	q=&b[0];	
	if(n<6)
	{
		cout<<b[n-1]<<"\n";
	}
	else
	{
	cout<<initial_call(w,q,n-4)<<"\n";
    }
    }
	return 0;
}