 //@author = agrawal1084
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <numeric>
#include <sstream>
#include <iostream>
#include <iomanip>
#include<cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>


using namespace std;

typedef pair<int, int> pii;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef double ld;
typedef vector<ld> vld;


#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define fore(i, a, n) for(int i = (int)(a); i < (int)(n); i++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define last(a) int(a.size() - 1)
#define all(a) a.begin(), a.end()
#define fornl(i,n)   for(ll i=0;i<n;i++)
#define len			  size()
#define s(n)          scanf("%d",&n);
#define slld(n)       scanf("%lld",&n);
#define sf(n)         scanf("%lf",&n);
#define ss(n)         scanf("%s",n);
#define MEM(a,b)      memset(a,(b),sizeof(a))  //memset(arr,0,sizeof(arr))
#define MOD           1000000007
#define nl printf("\n");
/*freopen ("input.txt", "rt", stdin);
freopen ("output.txt", "wt", stdout);*/

    const long double EPS = 1E-9;
    const int INF = (int) 1E9;
    const ll INF64 = (ll) 1E18;

     void swap(string &a,string &b) {
   	 string temp=a;
    	a=b;
    	b=temp;
    	}
    	int sum[100001]={0};
    int main() {
        int n,k,d;
        cin>>n>>k>>d;
        int ar[n];
        forn(i,n) {
        	cin>>ar[i];
        }
        int lastIndex=-1000001;
        int ans = 0; bool suc = 1;
        int lastNonNeg = 0;
        for(int i=0;i<n;i++) {
        	if(ar[i]!=0) {
        		lastNonNeg = i;
        	}
        	sum[i]= sum[i-1]+ar[i];
        	if(i-lastIndex < k) {
        		continue;
        	}
        	
        	if(i-k <-1) {
        		continue;
        	}
        	if(i-k==-1) {
        		if(sum[i]==0) {
        			suc=0;
        			break;
        		}
        		lastIndex = lastNonNeg+k-1;
        		ans++;
        	}
        	else if(sum[i]-sum[i-k] < d) {
        		if(sum[i]-sum[i-k]==0) {
        			suc=0;
        			break;
        		}
				lastIndex = lastNonNeg+k-1;
				ans++;
        	}
        }
        if(suc==0) {
        	cout<<"-1";
        }else {
        	cout<<ans;
        }
        nl
        
        }

