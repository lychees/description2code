#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
	/* Declare all the variables */
	int n, L, D, d[1001], i;
	float p[1001], dp[1001];
	char imp[] = "IMPOSSIBLE";
	
	/* Take all the inputs */
	cin>>n>>L>>D;
	p[0] = 1;
	for(i = 1; i <= n ; i++)
		cin>>p[i];
	p[i] = 1;
	
	d[0] = 0;
	for(i = 1; i <= n; i++)
		cin>>d[i];
	d[i] = D;
	
	cout.setf(ios::fixed);
	// Base cases
	if(d[1] > L || d[n] + L < D)
		cout<<imp;	//impossible to cross	
	else if(D <= L)
		cout<<std::setprecision(6)<<1.000000;	//definite jump
	else {
		/* Start DP! */
		float max = 0, result = 0;
		bool flag = false;
		dp[0] = p[0];
		dp[1] = p[1];
		for(int i=2; i<=(n+1); i++) {
			max = 0;
			for(int j=0; j<i; j++) {
				if(d[j] >= d[i]-L) {
					result = dp[j]*p[i];	//DP Equation
					if(max < result)
						max = result;
				}
			}
			if(max == 0) {
				flag = true;
				break;
			}
			dp[i] = max;
		}
		if(flag == false)
			cout<<std::setprecision(6)<<dp[n+1];
		else
			cout<<imp;
	}
}
