def dfs(graph, color, i, parent):
	color[i]=1
	for x in graph[i]:
		if color[x]==0:
			dfs(graph, color, x, i)
		elif x!=parent:
			return 0
	return 1
t = input()
while t:
    t-=1
    n, m = map(int, raw_input().split())
    graph={}
    for i in range(n):
        graph[i]=[]
    while m:
        m-=1
        x, y = map(int, raw_input().split())
        x-=1
        y-=1
        graph[x].append(y)
        graph[y].append(x)
    color=[0]*n
    flag=1
    for i in range(n):
    	if len(graph[i])>2:
    		flag=0
    	if color[i]==0:
    		if dfs(graph, color, i, -1)==0:
    			flag=0
    if flag==1:
    	print "YES"
    else:
    	print "NO"
    		