#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <cstring>
#include <fstream>
#define ll long long int
using namespace std;
int _gcd(int a, int b)
{
    while(a && b)
    {
        if(a > b) a %= b;
        else b %= a;
    }

    return a + b;
}
int main()
{
   //freopen("in.txt", "r", stdin);
   map<pair<int, int>, int> m;
   vector<pair<int, int> > v;
   vector<pair<int, int> > v2;
   int n;
   ll res = 0;
   scanf("%d", &n);
   for(int i = 0; i < n; i++)
   {
	   int x, y;
	   scanf("%d %d", &x, &y);
	   v.push_back(make_pair(x, y));
	   int d = _gcd(abs(x), abs(y));
	   x /= d;
	   y /= d;
	   m[make_pair(x, y)]++;
	   v2.push_back(make_pair(x, y));
   }
   for(int i = 0; i < v.size(); i++)
   {
	   for(int j = i + 1; j < v.size(); j++)
	   {
		   int x = v[i].first + v[j].first;
		   int y = v[i].second + v[j].second;
		   if(x == 0 && y == 0) continue;
		   int x2 = v2[i].first;
		   int y2 = v2[i].second;
		   int x3 = v2[j].first;
		   int y3 = v2[j].second;
		   int d = _gcd(abs(x), abs(y));
		   x /= d;
		   y /= d;
		   x = -x;
		   if(m.find(make_pair(y, x)) != m.end()) 
		   {
			   res += m[make_pair(y, x)] * 2;
			   if((x2 == y && y2 == x) || (x3 == y && y3 == x)) res -= 2;
		   }
		   x = -x;
		   y = -y;
		   if(m.find(make_pair(y, x)) != m.end()) 
		   {
			   res += m[make_pair(y, x)] * 2;
			   if((x2 == y && y2 == x) || (x3 == y && y3 == x)) res -= 2;
		   }
	   }
   }
   printf("%lld\n", res);
   return 0;
}