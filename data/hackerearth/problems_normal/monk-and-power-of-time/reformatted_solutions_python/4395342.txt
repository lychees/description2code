class Queue:
    def __init__(self, elements):
        self.elements = elements
        self.size = len(self.elements)
        self.front = 0
        self.rear = self.size-1

    def push_to_last(self):
        self.front = (self.front+1) % self.size
        self.read = (self.rear+1) % self.size

    def pop_out(self):
        del self.elements[self.front]
        if (self.front == 0):
            self.rear = self.rear-1
        elif (self.front == self.size-1):
            self.front = 0
        self.size = self.size-1


N = int(input())
calling = raw_input().split()
pref = raw_input().split()
queue = Queue(calling)
time = 0
while (queue.size != 0):
    if (queue.elements[queue.front] == pref[0]):
        queue.pop_out()
        del pref[0]
    else:
        queue.push_to_last()
    time = time+1
print time
