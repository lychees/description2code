#include <bits/stdc++.h>
using namespace std;
string s;
const int N=1e6+1;
long long hsh[N];
long long pw[N];
unordered_set<long long>nig;
bool check(int span)
{
	nig.clear();
	for(int i=0;i+span<=s.size();i++)
	{
		long long Q=hsh[i+span]-hsh[i];
		Q*=pw[1000000-i];
		if(nig.find(Q)!=nig.end())
		return true;
		nig.insert(Q);
	}
	return false;
}
int main()
{
	cin>>s;
	pw[0]=1;
	for(int i=1;i<=1e6;i++)
	pw[i]=pw[i-1]*173;
	for(int i=1;i<=s.size();i++)
		hsh[i]=hsh[i-1]+s[i-1]*pw[i-1];
	int l,r;
	l=0,r=s.size();
	while(l<r)
	{
		int mid=l+(r-l+1)/2;
		if(check(mid))
		l=mid;
		else
		r=mid-1;
	}
	cout<<l<<"\n";
	return 0;
}
