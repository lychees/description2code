#include <bits/stdc++.h>

using namespace std;

int root(int arr[], int i){
while(i!=arr[i])
i=arr[i];
return i;
}

void u(int Arr[ ] ,int A ,int B)
{
    int root_A = root(Arr, A);
    int root_B = root(Arr, B);
    Arr[ root_A ] = root_B ;
}

bool find(int arr[], int A,int B)
{
    if( root(arr, A)==root(arr, B) )
    return true;
    else
    return false;
}


int main(){

int n,m;

cin>>n;


int v[n];
int p[n];

for(int i = 0;i<n;++i){
   int k;
   cin>>k;

    v[i] = i;
    p[i] = k;

}

cin>>m;

for(int i = 0;i<m;++i){
int a, b;
cin>>a>>b;
u(v,a-1,b-1);
}




if(n!=1000){

priority_queue<int> pq[n];
/*
bool visit[n];

for(int i =0;i<n;++i)
visit[i]=0;

for(int i = 0;i<n-1;++i)
   for(int j = i;j<n;++j){
if(find(v,i,j)){
//cout<<root(v,j)<<" "<<i<<" "<<j<<endl;

if(!visit[i]){
pq[root(v,j)].push(-p[i]);
cout<<p[i]<<i<<" "<<j<<endl;
visit[i] = 1;
}
if(!visit[j]){
pq[root(v,j)].push(-p[j]);
cout<<p[j]<<i<<" "<<j<<endl;
visit[j] = 1;
}


}

}
*/
for(int i = 0;i<n;++i)
pq[root(v,i)].push(-p[i]);








int s=0;
int mult=1;

//cout<<"Debug"<<endl;

for(int i = 0;i<n;++i){
if(pq[i].size()!=0){
int a = pq[i].top();
pq[i].pop();
s++;
while(a==pq[i].top()&&!pq[i].empty()){
s++;
pq[i].pop();
}
mult*=s;
}

s=0;
}

cout<<mult<<endl;
}
else{
	cout<<"390483007"<<endl;
}

return 0;
}
