#include<bits/stdc++.h>
using namespace std;
long long int a[1001][1001];
long long int vis[1001][1001];
long long int n;
long long int mod = 1000000007;
bool isvalid(long long int i,long long int j){
	if(i < 0 || i >= n || j < 0 || j >= n){
		return false;
	}
	return true;
}
long long int dfs(long long int i,long long int j){
	if(!isvalid(i,j)){
		return 0;
	}
	if(vis[i][j] >= 0 ){
		return vis[i][j] % mod;
	}
	long long int ans = 1;
	if(isvalid(i+1,j)){
		if(a[i][j] > a[i+1][j]){
			ans = (ans + dfs(i+1,j)) % mod;
		}
	}
	if(isvalid(i-1,j)){
		if(a[i][j] > a[i-1][j]){
			ans = (ans + dfs(i-1,j)) % mod;
		}
	}
	if(isvalid(i,j+1)){
		if(a[i][j] > a[i][j+1]){
			ans = (ans + dfs(i,j+1)) % mod;
		}
	}
	if(isvalid(i,j-1)){
		if(a[i][j] > a[i][j-1]){
			ans = (ans + dfs(i,j-1)) % mod;
		}
	}
	vis[i][j] = ans % mod;
	return vis[i][j];
}
int main(){
	//long long int n;
	cin>>n;
	long long int i,j;
	for(i = 0; i < n; i++){
		for(j = 0; j < n; j++){
			cin>>a[i][j];
			vis[i][j] = -1;
		}
	}
	long long int ans = 0;
	for(i = 0; i < n; i++){
		for(j = 0; j < n; j++){
			ans = (ans + dfs(i,j)) % mod;
		}
	}
	cout<<ans<<"\n";
}