#include<stdio.h>
#include<algorithm>
#include<map>
#include<cctype>
#include<ctime>
#include<set>
#include<string.h>
#include<sstream>
#include<vector>
#include<queue>
#include<stdlib.h>
#include<iostream>
using namespace std;

#define F(i,n) for(i=0;i<n;i++)
#define scan(x) scanf("%d",&x)
#define f(i,a,n) for(i=a;i<n;i++)
#define ulli unsigned long long int 64
#define pb push_back
#define MAX 102
// freopen("input.txt","r',stdin);

int minKey(vector<float>key,vector<bool>visited,int v)
{
  float min= MAX;
  int min_ind=0,i=0;
  F(i,v) if(key[i]< min && visited[i]==false) min=key[i],min_ind=i;
  return min_ind;
}

float prim(vector<vector<float> >graph,int v)
{
  vector<int>parent(v);
  vector<float>key(v,MAX);
  vector<bool>visited(v,false);
  
  parent[0]=-1;
  key[0]=0;
  int i=0,j=0;
  float min_res=0;
  F(i,v-1)
  {
    int u=minKey(key,visited,v);
    visited[u]=true;
    F(j,v)
    {
      if(graph[u][j] && visited[j]==false && graph[u][j]<key[j])
      parent[j]=u,key[j]=graph[u][j];
    }
  }
  i=0;
  F(i,v-1)
  //printf("%d - %d    %d \n", parent[i+1], i+1, graph[i+1][parent[i+1]]);
  min_res+= graph[i+1][parent[i+1]];
  return min_res;
}

main()	
{
    int t,v,x,m,a,b;
    float ti;
    scanf("%d",&t);
    while(t--){
      
      scanf("%d%d",&v,&m);
      vector<vector<float> >graph(v, vector<float>(v, 0));
      
      //F(i,v) F(j,v) graph[i][j]=0;
      while(m--)
      {
	scanf("%d%d%f",&a,&b,&ti);
	graph[a-1][b-1]=ti;
	graph[b-1][a-1]=ti;
      }
      printf("%.2f\n",prim(graph,v));
    }
  return 0;
}