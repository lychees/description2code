
#include <iostream>
#include <vector>
#include <limits.h>

int main() {

	unsigned long long a, b, c, n;
	std::cin >> a >> b >> c >> n;

	// if (a < 2 || b < 2 || c < 2 || n < 2)  return -1;

	std::vector<unsigned long long> A(n);
	std::vector<unsigned long long> B(n);

	unsigned long long abc = a*b*c;
	unsigned long long ab = a*b;
	unsigned long long ac = a*c;
	unsigned long long bc = b*c;

	int M = 1000000007;

	unsigned int i = 0;
	A[0] = a*c;
	A[0]%=M;
	for(i=1 ; i<n ; i++)
	{
		A[i] = (((((A[i-1]*a)%M)*b)%M)*c)%M + (((A[i-1]*a)%M)*b)%M + (((A[i-1]*a)%M)*c)%M;
		A[i] = A[i]%M;
	}
	B[0] = b*c;
	B[0]%=M;
	for(i=1 ; i<n ; i++)
	{
		B[i] = (((((B[i-1]*b)%M)*c)%M)*a)%M + (((B[i-1]*b)%M)*a)%M + (((B[i-1]*b)%M)*c)%M;
		B[i] = B[i]%M;
	} 
	
	unsigned long long minimum1A = ULLONG_MAX;
	unsigned long long minimum2A = ULLONG_MAX;
	unsigned long long minimum1B = ULLONG_MAX;
	unsigned long long minimum2B = ULLONG_MAX;
	unsigned long long minimum = ULLONG_MAX;

	unsigned int min1idxA, min2idxA, min1idxB, min2idxB;

	for (i = 0; i < n; ++i) {
		if (A[i] < minimum1A) {
			minimum1A = A[i];
			min1idxA = i;
		}

		if (B[i] < minimum1B) {
			minimum1B = B[i];
			min1idxB = i;
		}

		if (A[i] < minimum2A && A[i] > minimum1A) {
			minimum2A = A[i];
			min2idxA = i;
		}

		if (B[i] < minimum2B && B[i] > minimum1B) {
			minimum2B = B[i];
			min2idxB = i;
		}
	}

	if (min1idxA != min1idxB) {
		minimum = minimum1A + minimum1B;
	} else {
		if (min1idxA != min2idxB)
			minimum = minimum1A + minimum2B;

		if (min2idxA != min1idxB)
			minimum = std::min(minimum, minimum2A + minimum1B);

		if (min2idxA != min2idxB) {
			minimum = std::min(minimum, minimum2A + minimum2B);
		}
	}


	std::cout << minimum;
	return 0;
}
