#include <iostream>
#include <cmath>
using namespace std;

int is_perfect_cube(int n){
	int root(round(cbrt(n)));
    return n == root * root * root;
}

int find_perfect_cube(int *a,int n,int k)
{
   if (k > n) return 0;
 
 	int count=0;
   int stripSum[n][n];
 
   for (int j=0; j<n; j++)
   {
       
       int sum = 0;
       for (int i=0; i<k; i++)
          sum += *((a+i*n) + j);
       stripSum[0][j] = sum;
 
       
       for (int i=1; i<n-k+1; i++)
       {
            sum += (*((a+(i+k-1)*n)+j) - *((a+(i-1)*n)+j));
            stripSum[i][j] = sum;
       }
   }
 
   
   for (int i=0; i<n-k+1; i++)
   {
      int sum = 0;
      for (int j = 0; j<k; j++)
           sum += stripSum[i][j];
      if(is_perfect_cube(sum)==1)
      	count++;
 
      for (int j=1; j<n-k+1; j++)
      {
         sum += (stripSum[i][j+k-1] - stripSum[i][j-1]);
         if(is_perfect_cube(sum)==1)
      		count++;
      }
   }
   
   return count;
}

int main()
{
    int n,k;
    
    cin>>n>>k;
    
    int a[n][n];
    
    for(int i=0;i<n;i++){
    	for(int j=0;j<n;j++){
    		cin>>a[i][j];
    	}
    }
    
    
    int num=find_perfect_cube((int *)a,n,k);
    
    cout<<num;
    return 0;
}
