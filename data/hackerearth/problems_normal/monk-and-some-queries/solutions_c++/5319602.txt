
#include<bits/stdc++.h>
using namespace std;

void min_heapify(int a[],int i,int n)
{
	int l,r,min;
	l=2*i;
	r=2*i+1;
	
	if(l<=n && a[l]<a[i])
	min=l;
	else
	min=i;
	if(r<=n && a[r]<a[min])
	min=r;
	
	if(min!=i)
	{	swap(a[i],a[min]);
		//cout<<a[i]<<a[min]<<" a ";
		min_heapify(a,min,n);
		
	}
}
void max_heapify(int b[],int i,int n)
{//	cout<<b[0]<<b[2]<<" b ";
	int l,r,min;
	l=2*i;
	r=2*i+1;
	
	if(l<=n && b[l]>b[i])
	min=l;
	else
	min=i;
	if(r<=n && b[r]>b[min])
	min=r;
	
	if(min!=i)
	{	int t=b[i];
		b[i]=b[min];
		b[min]=t;
		//cout<<min<<" ";
		//	cout<<b[1]<<b[3]<<" a ";
		max_heapify(b,min,n);
		
	}
}

void build(int a[],int b[],int n)
{
	for(int i=(n/2);i>0;i--)
	{
		max_heapify(a,i,n);
		min_heapify(b,i,n);
	}
}




int main()
{	long int q;
	int a[100000],b[100000];
	int a1,b1,k=1,k1=1,n=0;
	cin>>q;
	while(q--)
	{
		//int a1,b1,k=0,n=0;
		cin>>a1;
		//	cout<<"a";
		if(a1==1||a1==2)
		{
			cin>>b1;
		//	cout<<"a";
			if(a1==1)
			{
				a[k++]=b1;
				b[k1++]=b1;
				n++;
				if(n>1)
				{	build(a,b,n);
				
				}
				//for(int i=1;i<=n;i++)
				//cout<<b[i]<<" ";
				//cout<<endl;	
				//cout<<"a";
				//for(int i=0;i<n;i++)
				//	cout<<a[i]<<" ";
			}
			else
			{
				if(n>1)
				{	int f=1;
					for(int i=1;i<=n;i++)
					{		if(a[i]==b1)
						{	swap(a[i],a[n]);
						
							f=0;
							max_heapify(a,i,n-1);
							break;
						}
					}
					for(int i=1;i<=n;i++)
					{
						if(b[i]==b1)
						{	swap(b[i],b[n]);
						
							n--;
							k--;
							k1--;
							min_heapify(b,i,n);
							break;
						}		
					
						
					}
					
				
						
				
					if(f==1)
					cout<<"-1"<<endl;
					
				}
				else if(a[1]==b1)
				{	n--;
					k--;
					k1--;
				}
				else
				cout<<"-1"<<endl;
			
				
			}
		}
		else
		{
			if(a1==3 && n>=1)
			cout<<a[1]<<endl;
			
			else if(a1==4 && n>=1)
			cout<<b[1]<<endl;
			
			else
			cout<<"-1"<<endl;
		}
	}
    
    return 0;
}