#include<stdio.h>
#include<cstring>
#include<string>
#include<iostream>
#include<stack>
using namespace std;
typedef long long int ll;
ll ways[70][2][3];
#define scant() int tc;scanf("%d",&tc)
int MOD=1000000007;
stack<int> s;
int main()
{
	scant();
	ll n;
	for(int i=0;i<tc;i++)
	{
		scanf("%lld",&n);
		while(n)
		{
			s.push((n&1)!=0?1:0);
			n=n>>1;
		}
		int si=s.size();
		memset(ways,0,sizeof(ways));
		ways[0][1][0]=1;
		for(int i=1;i<=si;i++)
		{
			int c_bit=s.top();
			s.pop();
			if(c_bit==1)
			{
				ways[i][0][0]=((3*ways[i-1][0][0])%MOD+ways[i-1][1][1])%MOD;
				//cout<<ways[i][0][0]<<endl;
				ways[i][0][1]=(ways[i-1][0][0]+(3*ways[i-1][0][1])%MOD)%MOD;
				//cout<<ways[i][0][1]<<endl;
				ways[i][0][2]=((3*ways[i-1][0][1])%MOD+ways[i-1][1][2])%MOD;
				//cout<<ways[i][0][2]<<endl;
				ways[i][1][0]=((3*ways[i-1][1][0])%MOD+ways[i-1][1][1])%MOD;
				//cout<<ways[i][1][0]<<endl;
				ways[i][1][1]=(ways[i-1][1][0]+(3*ways[i-1][1][1])%MOD)%MOD;
				//cout<<ways[i][1][1]<<endl;
				ways[i][1][2]=((3*ways[i-1][1][1])%MOD+ways[i-1][1][2])%MOD;
				//cout<<ways[i][1][2]<<endl;
			}
			else
			{
				ways[i][0][0]=((3*ways[i-1][0][1])%MOD+ways[i-1][0][0])%MOD;
				//cout<<ways[i][0][0]<<endl;
				ways[i][0][1]=(ways[i-1][1][2]+(3*ways[i-1][0][1])%MOD)%MOD;
				//cout<<ways[i][0][1]<<endl;
				ways[i][0][2]=((3*ways[i-1][0][2])%MOD+ways[i-1][0][1])%MOD;
				//cout<<ways[i][0][2]<<endl;
				ways[i][1][0]=((3*ways[i-1][1][1])%MOD+ways[i-1][1][0])%MOD;
				//cout<<ways[i][1][0]<<endl;
				ways[i][1][1]=(ways[i-1][1][2]+(3*ways[i-1][1][1])%MOD)%MOD;
				//cout<<ways[i][1][1]<<endl;
				ways[i][1][2]=((3*ways[i-1][1][2])%MOD+ways[i-1][1][1])%MOD;
				//cout<<ways[i][1][2]<<endl;
			}
		}
		cout<<ways[si][0][0]<<endl;
	}
}