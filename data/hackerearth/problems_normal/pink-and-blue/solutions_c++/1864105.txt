#include<bits/stdc++.h>
using namespace std;
# define MAX 100001
int visited[MAX];
char gend[MAX];
char color[MAX];
char color1[MAX];
vector <int> adj[MAX];
void dfs(int u,char ch);
void dfs1(int u,char ch);
int main()
{
int n,e,u,v,inv=0,inv1=0;
cin>>n>>e;
for(int i=1;i<=n;i++)
	cin>>gend[i];
for(int i=0;i<e;i++)
	{cin>>u>>v;
	adj[u].push_back(v);
	adj[v].push_back(u);
	}
dfs(1,'p');
for(int i=1;i<=n;i++)
	visited[i]=0;
dfs1(1,'b');
for(int i=1;i<=n;i++)
{
	if((gend[i]=='B' && color[i]=='p') ||(gend[i]=='G' && color[i]=='b') )
		inv++;
	if((gend[i]=='B' && color1[i]=='p') ||(gend[i]=='G' && color1[i]=='b') )
		inv1++;
}
if(inv>inv1)
	cout<<inv1<<endl;
else
	cout<<inv<<endl;
return 0;
}



void dfs(int u,char ch)
{
	visited[u]=1;
	if(ch=='p')
		color[u]='b';
	else
		color[u]='p';
	for(int i=0;i<adj[u].size();i++)
	{
	 int v=adj[u][i];
	if(visited[v]==0)
		dfs(v,color[u]);
	}
	return;
}

void dfs1(int u,char ch)
{
	visited[u]=1;
	if(ch=='p')
		color1[u]='b';
	else
		color1[u]='p';
	for(int i=0;i<adj[u].size();i++)
	{
	 int v=adj[u][i];
	if(visited[v]==0)
		dfs1(v,color1[u]);
	}
	return;
}