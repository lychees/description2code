// /he/feb/TEST/Temple

#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <climits>

using namespace std;

int main() {
    int n_tc = 0;
	cin >> n_tc;

	while (n_tc--) {
		int n_items = 0, sum = 0;
		cin >> n_items;

		vector<int> items(n_items, 0);
		for (int i = 0; i < n_items; i++) {
			cin >> items[i];
			sum += items[i];
		}

		if (sum % 2)
			cout << "NO" << endl;
		else {
			bool possible = false;
			vector<vector<bool> > dp(n_items, vector<bool>((sum / 2) + 1, false));
			for (int i = 0; i < n_items; i++)
				dp[i][0] = true;
			if (items[0] <= sum / 2)
				dp[0][items[0]] = true;

			for (int i = 1; i < n_items; i++) {
				for (int j = 1; j < (sum / 2) + 1; j++) {
					dp[i][j] = dp[i - 1][j];
					if (j >= items[i])
						dp[i][j] = dp[i][j] || dp[i - 1][j - items[i]];
				}
				if (dp[i][sum / 2]) {
					possible = true;
					break;
				}
			}
			if (possible)
				cout << "YES" << endl;
			else
				cout << "NO" << endl;
		}
	}
	return 0;
}