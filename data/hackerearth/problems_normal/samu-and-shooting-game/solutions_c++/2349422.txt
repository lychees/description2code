#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
#define SIO  ios_base::sync_with_stdio ( false )
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vl;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}



template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
const int maxn=1001;
vector<vector<double>> res ;
int x,y,n,w,q1,q2;
long double p1,p2;
long double findP ( int p, int s ) {
//     cout<<p<<" "<<s<<endl;
     if ( s==0 && p>0 ) return 0;
    if ( p<=0 ) return 1;
//     if ( !p && !s ) return 1;
   
    if ( res[p][s]>=0 )
        return res[p][s];
    long double v= max ( findP ( p-y,s-1 ) *p2+findP(p,s-1)*(1-p2),findP ( p-x,s-1 ) *p1+findP(p,s-1)*(1-p1) );
    res[p][s]=v;
    return v;
}
int main() {
    SIO;


    inrep {
     res=    vector<vector<double>> ( maxn,vector<double> ( maxn,-1 ) );

        cin>>x>>y>>n>>w>>q1>>q2;

        p1=q1/100.0;
        p2=q2/100.0;
        res[0][0]=1;
        double v=findP ( w,n );
        printf("%.6f\n",100*v);
//         cout<<v*100<<endl;
    }
}
