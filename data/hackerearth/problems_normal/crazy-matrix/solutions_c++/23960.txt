#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<map>
#include<queue>
#include<set>
#include<cassert>
#include<algorithm>
using namespace std;

int visit[501][501],n,mat[501][501];

int dfs(int i,int j,int b)
{
    if(b==1&&visit[i][j]==2&&i==(n-1)) return 1;
    else if(b==1&&visit[i][j]==2) return 0;
    else if(b==2&&visit[i][j]==2&&j==(n-1)) return 1;
    else if(b==2&&visit[i][j]==2) return 0;
    visit[i][j]=2;
    if(b==1&&i==(n-1)) return 1;
    else if(b==2&&j==(n-1)) return 1;
    int ans=0;
    if(i-1>=0&&!visit[i-1][j]&&mat[i-1][j]==b){visit[i-1][j]=1;ans|=dfs(i-1,j,b);}
    if(j-1>=0&&!visit[i][j-1]&&mat[i][j-1]==b){visit[i][j-1]=1;ans|=dfs(i,j-1,b);}
    if(i+1<n&&!visit[i+1][j]&&mat[i+1][j]==b){visit[i+1][j]=1;ans|=dfs(i+1,j,b);}
    if(j+1<n&&!visit[i][j+1]&&mat[i][j+1]==b){visit[i][j+1]=1;ans|=dfs(i,j+1,b);}
    if(j-1>=0&&i-1>=0&&!visit[i-1][j-1]&&mat[i-1][j-1]==b){visit[i-1][j-1]=1;ans|=dfs(i-1,j-1,b);}
    if(i+1<n&&j-1>=0&&!visit[i+1][j-1]&&mat[i+1][j-1]==b){visit[i+1][j-1]=1;ans|=dfs(i+1,j-1,b);}
    if(j+1<n&&i+1<n&&!visit[i+1][j+1]&&mat[i+1][j+1]==b){visit[i+1][j+1]=1;ans|=dfs(i+1,j+1,b);}
    if(i-1>=0&&j+1<n&&!visit[i-1][j+1]&&mat[i-1][j+1]==b){visit[i-1][j+1]=1;ans|=dfs(i-1,j+1,b);}
    return ans;
}

int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            cin>>mat[i][j];
    int f=0,r=0;
    for(int i=0;i<n;i++)
    {
        if(mat[0][i]==1){
            memset(visit,0,sizeof(visit));
        f=dfs(0,i,1);
        if(f) break;
        }
    }
    for(int i=0;i<n;i++)
    {
        if(mat[i][0]==2){
            memset(visit,0,sizeof(visit));
            r=dfs(i,0,2);
            if(r) break;
        }
    }
    if(f&&r) cout<<"AMBIGUOUS\n";
    else if(f) cout<<1<<"\n";
    else if(r) cout<<2<<"\n";
    else cout<<"0\n";
    return 0;
}
