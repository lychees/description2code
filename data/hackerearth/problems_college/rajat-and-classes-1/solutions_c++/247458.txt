#include <iostream>
#include <vector>
#include <algorithm>
#include<cstdio>
using namespace std;
vector<vector<int> > adj;
int visited[200000]={};
int mini=50000000;
int length=-1;



void dfs(int i)
{

	if(visited[i])
	  return ;

 visited[i]=1;
//cout<<length<<" "<<adj[i].size()<<endl;
int n=adj[i].size();
 if((length<n)||((length==n) && (i<mini)))
 {
 	mini=i;
 	length=n;
 }
 for(int k=0;k<adj[i].size();k++)
      dfs(adj[i][k]);


}




int main()
{
    int n,c;
    cin>>n>>c;

    adj.resize(n+1);
    while(c--)
    {
    	int a,b;
    	scanf("%d%d",&a,&b);
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    }

    vector<int> result;
    for(int i=1;i<=n;i++)
    {
    	mini=2000000;
    	length=-1;
    	if(!visited[i])
    	 {
    	 	dfs(i);
    	 	//cout<<endl;
    	 	result.push_back(mini);

    	 }

    }

    sort(result.begin(),result.end());
    cout<<result.size()<<endl;
    for(int i=0;i<result.size();i++)
    cout<<result[i]<<" ";

}
