/* ***************************
Author: Abhay Mangal (abhay26)
*************************** */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <cstring>
#include <cassert>
#include <numeric>
#include <utility>
#include <bitset>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
using namespace std;
 #define tr(container, it) \
    for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define maX(a,b) (a) > (b) ? (a) : (b)
#define pii pair< int, int >
#define pip pair< int, pii >
#define FOR(i,n) for(int i=0; i<(int)n ;i++)
#define REP(i,a,n) for(int i=a;i<(int)n;i++)
#define pb push_back
#define mp make_pair
typedef long long ll;
//int dx[]= {-1,0,1,0};
//int dy[]= {0,1,0,-1};
const int LIM = 1000000;
int C[1000005];
bool prime[LIM+5];
bool calc(int x)
{
    while(x > 0)
    {
        int y = x%10;
        if(y == 7)
            return true;
        x/=10;
    }
    return false;
}
void sieve()
{
	for(int i=2;i<=LIM;i++)
		prime[i] = 1;
	for(int i=2;i*i<=LIM;i++)
	{
		if(prime[i])
		for(int j=i*i;j<=LIM;j+=i)
		{
			prime[j] = 0;
		}
	}
	for(int i=0;i<7;i++)
        C[i] = 0;
    for(int i=7;i<=LIM;i++)
    {
        C[i] = C[i-1];
        if(!prime[i] && calc(i))
            C[i]++;
    }
}
int main()
{
    sieve();
    //return 0;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int m,n;
        scanf("%d %d",&m,&n);
        int ans = C[n] - C[m-1];
        if(ans == 0)
            ans = -1;
        printf("%d\n",ans);
    }
return 0;
}
