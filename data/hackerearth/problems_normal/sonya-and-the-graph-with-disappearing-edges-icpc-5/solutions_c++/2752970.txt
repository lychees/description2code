#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define RI(a) scanf("%d",&a);
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define TR(a,t) for(__typeof(a.begin()) t=a.begin();t!=a.end();t++)
#define REP(i,l,h) for(int i=(l); i<=(h);i++)
#define REPD(i,h,l) for(int i=(h);i>=(l);i--)
#define ALL(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
#define PRSNT(a,e) (a.find(e) != a.end())
#define MINH priority_queue<int, vector<int>, greater<int> >
#define N 100010
typedef long long LL;
using namespace std;
vector<pair <int,int> > v[N];
int n,m,k;
int tx[N];
int dist[N];
queue<int> q;
LL tim=0;
void scan_undirected_unweighted_graph() {
        int v1,v2;
        REP(i,1,m) {
                cin>>v1>>v2;
                v[v1].PB(MP(v2,i));
                v[v2].PB(MP(v1,i));
        }
}
void bfs(int s) {
 //       visited[s]=1;
        q.push(s);
        dist[1]=0;
        while(!q.empty()) {               
                s=q.front();
                tim++;
                //if(s==n)
                 //cout<<"S"<<" "<<s<<endl;
                q.pop();
                TR(v[s],it) {
            //                    cout<<"hello";
                //if((*it).F==n)
                  //cout<<"S"<<" "<<(*it).F<<endl;
   //                     cout<<((*it).F)<<" "<<((*it).S)<<endl;
              //          cout<<tx[(*it).S]<<" "<<dist[s]<<endl;
                                if(tx[(*it).S]<=dist[s]) continue;
        //                        cout<<"hello";
                        if(dist[(*it).F]>dist[s]+1) {
                                dist[(*it).F]=dist[s]+1;
                                q.push((*it).F);
          //                      cout<<"hello";
                        }
 //                       cout<<dist[(*it).F]<<endl;
                }
        }
}
int main()
{
        int tmp,vv;
        cin>>n>>m>>k;
        scan_undirected_unweighted_graph();
        REP(i,1,n) {
                dist[i]=1e9;
        }
        REP(i,1,m) tx[i]=1e9;
        REP(i,1,k) {
                cin>>tmp>>vv;
                tx[vv]=tmp;
        }

 //       cout<<tx[3]<<endl;
        bfs(1);
        if(dist[n]>1e5) cout<<"-1\n";
        else cout<<dist[n]<<endl;
 //       cout<<tim<<endl;
        return 0;
}
