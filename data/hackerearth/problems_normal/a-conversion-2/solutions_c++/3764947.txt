#include<bits/stdc++.h>
#include<iostream>
using namespace std;
#define fre 	freopen("0.in","r",stdin);freopen("0.out","w",stdout)
#define abs(x) ((x)>0?(x):-(x))
#define MOD 1000000007
#define LL signed long long int
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d\n",x)
#define scanll(x) scanf("%lld",&x)
#define printll(x) printf("%lld\n",x)
#define rep(i,from,to) for(int i=(from);i <= (to); ++i)
#define pii pair<int,int>
#define fi first
#define se second
vector<int> G[2*100000+5];
string X,Y;
int CostTransform(vector<int>&V){
	int ans= 0 ;
	for(int i=0;i<V.size();++i){
		ans += abs(X[V[i]]-Y[i]);
	}
	return ans;
}
int where[15];
int CostShuffle(vector<int>V){
	rep(i,0,V.size()-1)where[V[i]] = i;
	int ans = 0;
	for(int i=0;i<V.size();){
		if(V[i]==i){++i;continue;}
		++ans;
		int lookat = where[i];
		where[i] = i;
		where[V[i]] = lookat;
		swap(V[i],V[lookat]);
	}
	return ans;
}
int main(){
	//fre;
	int T;
	cin>>T;
	assert(1<=T and T<=10);
	while(T--){
		cin>>X>>Y;
		assert(1<=X.size() and X.size()<=8);
		assert(X.size()==Y.size());
		rep(i,0,X.size()-1)assert('A'<=X[i] and X[i]<='Z');
		int ans = MOD;
		vector<int>V;
		rep(i,0,X.size()-1)V.push_back(i);
		do{
			ans =  min(ans, CostShuffle(V) + CostTransform(V));
		}while(next_permutation(V.begin(),V.end()));
		cout<<ans<<endl;
	}
}