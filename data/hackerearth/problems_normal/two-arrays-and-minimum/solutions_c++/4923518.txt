#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#define MOD 1000000007ll
using namespace std;

typedef struct min_tab {
	long long int val;
	int pos;
}min_tab;

int main()
{
	long long int a,b,c,n,i,x3,x4,diff,m1diff,m2diff;
	
	cin>>a>>b>>c;
	cin>>n;
	min_tab x1,min1,min2,min3,min4;
	vector<min_tab> v1,v2;
	
	v1.clear();
	v2.clear();
	
	x1.val= a*c;
	x1.pos= 0;
	v1.push_back(x1);
	
	x1.val= b*c;
	v2.push_back(x1);
	
	//min1.val contains minimum element of A[], min2.val contains the
	//second minimum element of A[]
	//min3.val conatains minimum element of B[], min4.val contains
	//second minimum
	x3= (((((a*b)%MOD)*c)%MOD + (a*b)%MOD)%MOD + (a*c)%MOD)%MOD;
	x4= (((((a*b)%MOD)*c)%MOD + (a*b)%MOD)%MOD + (b*c)%MOD)%MOD;
	min1.val= min2.val= v1[0].val;
	min3.val= min4.val= v2[0].val;
	m1diff= m2diff= LLONG_MAX;
	min1.pos= min2.pos= min3.pos= min4.pos= 0;
	for(i=1;i<n;i++)
	{
		x1.val= ((v1[i-1].val%MOD)*x3)%MOD;
		x1.pos= i;
		v1.push_back(x1);
		if(x1.val<min1.val)
		{
			if(i!=1)
			{
				min2.val= min1.val;
				min2.pos= min1.pos;
				m1diff= min2.val-x1.val;
			}	
			min1.val= x1.val;
			min1.pos= i;
		}	
		else
		{
			diff= x1.val-min1.val;
			if(diff<m1diff)
			{
				m1diff= diff;
				min2.val= x1.val;
				min2.pos= i;
			}	
		}
		x1.val= ((v2[i-1].val%MOD)*x4)%MOD;
		v2.push_back(x1);
		if(x1.val<min3.val)
		{
			if(i!=1)
			{
				min4.val= min3.val;
				min4.pos= min3.pos;
				m2diff= min4.val-x1.val;
			}	
			min3.val= x1.val;
			min3.pos= i;
		}	
		else
		{
			diff= x1.val-min3.val;
			if(diff<m2diff)
			{
				m2diff= diff;
				min4.val= x1.val;
				min4.pos= i;
			}	
		}
	}
	
	if(min1.pos==min3.pos)
		cout<<min(min1.val+min4.val,min2.val+min3.val);
	else
		cout<<min1.val+min3.val;
	
	return 0;
}
