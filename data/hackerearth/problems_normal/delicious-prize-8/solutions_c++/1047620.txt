#include <iostream>
#include <set>
#include <vector>
#include <algorithm>
using namespace std;
 
bool compare(int a , int b) {
	if(a > b) return true;
	return false;
}
 
int main()
{
    int t;
    cin >> t;
    
    for(int i = 1; i <= t; i++) {
    	int n,k;
    	cin >> n >> k;
    	int temp = k;
    	vector <int> factor;
    	int sum = 0;
    	
    	for(int i = 2; i*i <= k; i++) {
    		if(temp % i == 0) {
    			while(temp % i == 0) {
    				factor.push_back(i);
    				temp = temp / i;
    			}
    		}
    	}
    	
    	if(temp > 1) factor.push_back(temp);
    	
    	multiset <int> s;
    	for(int i = 0; i < n; i++) s.insert(1);
    	
    	sort(factor.begin(), factor.end(), compare);
    	
    	for(int i = 0; i < factor.size(); i++) {
    		int x = *s.begin();
    		s.erase(s.begin());
    		s.insert(x*factor[i]);
    	}
    	
    	multiset <int> :: iterator it;
    	
    	for(it = s.begin(); it != s.end(); it++) {
    		sum += *it;
    	}
    	
    	cout << sum << endl;
    }
    return 0;
}