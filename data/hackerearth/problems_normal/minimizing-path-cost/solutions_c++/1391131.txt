/*
 * WarshallAlgo.cpp
 *
 *  Created on: 06-Feb-2015
 *      Author: nb
 */







#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include <string>
#include <algorithm>
#include <sstream>

#include <map>
#include <cmath>
#include <set>
#include <cstring>
#include <bitset>
using namespace std;
#define x first
#define y second
#define VI vector<int>
#define pii pair<int,int>
#define inf 1000000000
#define L(s) ((int)(s).size())
#define pb push_back
#define mp make_pair
#define all(s) (s).begin(), (s).end()
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define REPREV(i, a, b) \
for (int i = int(a); i >= int(b); i--) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define ghei(i)\
scanf("%d",&i)
#define ghel(i)\
scanf("%lld",&i)
#define ghes(i)\
scanf("%s",&i)
map<string,int>m;
map<int,string>rm;
ll e[110][110];
ll dp[110][110];
ll n,k;
void proc(){
	cin>>n>>k;
	REP(i,1,n){
		string s;
		cin>>s;
		m[s] = i;
		rm[i] = s;
	}
		string s,t;
		int x,y,d;
	REP(i,1,k){
		cin>>s>>t>>d;
		x = m[s];
		y = m[t];
		dp[x][y] = dp[y][x]=d;
	}
	REP(i,1,n)dp[i][i] =0;
	REP(k,1,n){
		REP(i,1,n){
			REP(j,1,n){
				if(dp[i][j]>dp[i][k]+dp[k][j]){
					dp[i][j] = dp[i][k]+dp[k][j];
				}
			}
		}
	}

	int q;
	cin>>q;
	REP(i,1,q){
		cin>>s>>t;
		cout<<dp[m[s]][m[t]]<<endl;
	}
}
int main() {
	for(int i=1;i<110;i++){
		for(int j=1;j<110;j++)dp[i][j] = 100000000000;
	}
	proc();
}
