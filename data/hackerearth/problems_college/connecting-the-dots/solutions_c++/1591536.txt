#include <bits/stdc++.h>
using namespace std;

vector<pair<int,int> > adj[1001];
int dist[1001][4];
bool visited[1001][4];
int main()
{
    int n,m,x,y,c;
    scanf("%d %d",&n,&m);
    for(int i=1;i<=m;++i)
    {
    	scanf("%d %d %d",&x,&y,&c);
    	adj[x].push_back(make_pair(y,c));
    	//adj[y].push_back(make_pair(x,c));
    }
    int ans=-1;
    for(int k=1;k<=3;++k)
    {
    	queue<pair<int,int> > q;
    	memset(visited,0,sizeof(visited));
    	memset(dist,0,sizeof(dist));
    	visited[1][k]=1;
    	q.push(make_pair(1,k));
    	while(!q.empty())
    	{
    		pair<int,int> p=q.front();
    		q.pop();
    		if(p.first==n){
    			if(ans==-1 || ans>dist[n][p.second]) ans=dist[n][p.second];
    			break;
    		}
    		for(int i=0;i<adj[p.first].size();++i)
    		{
    			if(!visited[adj[p.first][i].first][adj[p.first][i].second] && adj[p.first][i].second!=p.second)
    			{
    				visited[adj[p.first][i].first][adj[p.first][i].second]=1;
    				q.push(make_pair(adj[p.first][i].first,adj[p.first][i].second));
    				dist[adj[p.first][i].first][adj[p.first][i].second]=dist[p.first][p.second]+1;
    			}
    		}
    	}
    }
    printf("%d\n",ans);
    
    return 0;
}
