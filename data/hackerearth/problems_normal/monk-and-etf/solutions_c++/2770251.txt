#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
const int maxn = 1e7+1e6;
#define ll long long
vector<bool> A(maxn,1);
vector<ll> B;
void pre()
{
	for(int i = 2;i<sqrt(maxn);i++)
	{
		if(A[i])
		{
			for(int j = i*i;j<maxn;j+=i)
			{
				A[j] = 0;
			}
		}
	}
	for(int i = 2;i<maxn;i++)
	{
		if((A[i]))
		{
			B.push_back((ll)i);
		}
	}
}
ll neardiv(ll n, ll p)
{
	return (1+(n-1)/p)*p;
}
ll ans[100009],st[100009];

ll compute(ll L, ll R)
{
	int diff = R-L+5;

	for(int i = 0;i<diff;i++)
	{
		ans[i] = L+i;
		st[i]  = L+i;
	}
	for(int i = 0;B[i]<=sqrt(R);i++)
	{
		ll k = B[i];
		for(ll j = neardiv(L,k);j<=R;j+=k)
		{
			ans[j-L] /= k;
			ans[j-L] *= (k-1);
			while(st[j-L]%k ==0)
			{
				st[j-L] /= k;
			}

		}
	}
	for(int i=0;i+L<=R;i++)
	{
		if(st[i] !=1)
		{
			ans[i] /= st[i];
			ans[i] *= st[i]-1;
		}
	}
	
}
int main()
{   pre();
	ll L, R, T, K;
	scanf("%lld", &T);
	while(T--)
	{
		scanf(" %lld %lld %lld", &L, &R, &K);
		compute(L,R);
		ll cnt=0;
		for(ll i=L; i<=R; ++i)
		{
			if(ans[i-L]%K==0)
				cnt++;
		}
		printf("%Lf\n", (long double) cnt/(R-L+1));
	}
	return 0;
}
