#include <bits/stdc++.h>
 
using namespace std;
 
int cell[20][20],mark[20][20], count_path=0, n;
 
void paths1(int i, int j)
{
	if ((i == n) && (j == n))
	{
		count_path++;
		return;
	}
	mark[i][j] = 1;
	if ((j+1) <= n && mark[i][j+1] == 0 && cell[i][j+1] == 0)
		paths1(i, j+1);
	if ((i+1) <= n && mark[i+1][j] == 0 && cell[i+1][j] == 0)
		paths1(i+1, j);
	if((j-1) >= 1 && mark[i][j-1] == 0 && cell[i][j-1] == 0)
		paths1(i,j-1);
	if((i-1) >= 1 && mark[i-1][j] == 0 && cell[i-1][j] == 0)
		paths1(i-1,j);
	mark[i][j] = 0;
	return;
}
 
int main()
{
	int T;
	cin >> T;
	while(T--)
	{
		//cout << T << endl;
		cin >> n;
		for (int i = 1; i <= n; i++)
		{
			for (int j = 1; j <= n; j++)
			{
				cin >> cell[i][j];
				mark[i][j]=0;
		//		cout << i << j << endl;
			}
		}
		count_path = 0;
		//cout << count_path << endl;
		paths1(1,1);
		cout << count_path << endl;
	}
	return 0;
}