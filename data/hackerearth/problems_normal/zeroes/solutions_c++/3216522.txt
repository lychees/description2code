#include <iostream>
#include <cstdio>
#include <vector>
#include <climits>

using namespace std;

int count [600001] = {0};
int a[600001] = {0};
vector <int> p;
int prime[600001] = {0};

int main () {
    int t, q, n;

    for (int i = 2; i <= 600000; i++) {
        if (prime[i] == 0) {
           // cout << i << "\n";
            p.push_back(i);
            for (int j = i + i; j <= 600000; j += i) {
                prime[j] = 1;
            }
        }
    }

    scanf("%d", &n);

    for (int i = 1; i <= n; i++) {
        scanf("%d", &a[i]);

        //  cout << p.size() << "\n";
     //   cout << p[0] * p[0] << " " << a[i] << "\n";

        int len = p.size();
        //cout << len << "\n";

        for (int j = 0; j < len &&  (p[j] * p[j] <= a[i]); j++) {

            //cout << a[i] <<  "  " << p[j] << "\n";

            while (a[i] % p[j] == 0) {
                a[i] /= p[j];
                count[p[j]]++;
              //  cout << p[j] << "   " << count[p[j]] << "\n";
            }
        }
        if (a[i] != 1) {
            count[a[i]]++;
        }
      //  cout << "out \n";
    }
        scanf("%d", &q);

        for (int i = 0; i < q; i++)  {

            int mn = INT_MAX;
            int x;

            scanf("%d", &x);

            for (int i = 0; i <= p.size() &&  p[i] * p[i] <= x; i++) {
                int cnt = 0;

                while (x % p[i] == 0) {
                    x /= p[i];
                    cnt++;
                }

                if (cnt != 0) {
                    mn = min(count[p[i]] / cnt, mn);
                }

            }

            if (x != 1) {
                mn = min(count[x] / 1, mn);
            }

            printf("%d\n", mn);
        }

    return 0;
}
