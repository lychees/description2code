#include <iostream>
#include <math.h>
using namespace std;

long checkmid(long step, long X[], long N, long K) {
	
long stepsize = 0;
long n = 0, k = 0;

while(true) {
	stepsize += X[n + 1] - X[n];
	if (stepsize <= step) {
		n++;
		if (n == N - 1) {
			return true;
		}
	}
	else {
		stepsize = 0;
		k++;
		if (k == K) {
			return false;
		}
	}
}
}

int main()
{
    long T, N, K;
    cin >> T;
    
    while(T--) {
    	cin >> N >> K;
    	long* X = new long[N];
    	
    	for (long n = 0; n < N; n++) {
    		cin >> X[n];
    	}
    	
    	long start = 0, mid = 0, ans = 0;
    	long end = X[N - 1] - X[0];
    	
    	while(start <= end) {
    		
    		mid = (start + end)/2;
    		if(checkmid(mid, X, N, K)) {
    			ans = mid;
    			end = mid - 1;
    		}
    		else {
    			start = mid + 1;
    		}
    	}
    	cout << ans << endl;
    }
    return 0;
}
