    #include <bits/stdc++.h>
    using namespace std;
    long long int temp;
    long long int fact[1000001];
    #define mod 1000000007
    int vis[1001][1001];
    int t,n,m,q;
    int b[1000001],c[1000001];
    void dfs(int a, int b)
    {
    temp++;
    vis[a][b]=1;
    if((a+2)<=n && (b+1)<=m && vis[a+2][b+1]==2)
    dfs(a+2,b+1);
    if((a+1)<=n && (b+2)<=m && vis[a+1][b+2]==2)
    dfs(a+1,b+2);
    if((a+2)<=n && (b-1)>=1 && vis[a+2][b-1]==2)
    dfs(a+2,b-1);
    if((a+1)<=n && (b-2)>=1 && vis[a+1][b-2]==2)
    dfs(a+1,b-2);
    if((a-1)>=1 && (b+2)<=m && vis[a-1][b+2]==2)
    dfs(a-1,b+2);
    if((a-1)>=1 && (b-2)>=1 && vis[a-1][b-2]==2)
    dfs(a-1,b-2);
    if((a-2)>=1 && (b+1)<=m && vis[a-2][b+1]==2)
    dfs(a-2,b+1);
    if((a-2)>=1 && (b-1)>=1 && vis[a-2][b-1]==2)
    dfs(a-2,b-1);
    }
     
    int main()
    {
    fact[0]=1;fact[1]=1;
    for(int i=2;i<=1000000;i++)
    fact[i]=(i*fact[i-1])%mod;
    cin >> t;
    while(t--)
    {
    memset(vis,0,sizeof vis);
    cin >> n >> m >> q;
    for(int i=0;i<q;i++)
    {
        cin >> b[i] >> c[i];
    vis[b[i]][c[i]]=2;
    }
    long long int ans=1;
    for(int i=0;i<q;i++)
    {
    if(vis[b[i]][c[i]]==2)
    {
    temp=0;
    dfs(b[i],c[i]);
    ans=(ans*fact[temp])%mod;
    }
    }
    cout << ans << endl;
    }
    return 0;
    }