#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N = 1001;
const int MOD = 1000000007;
bool possible[N];
LL dp[N][2];
inline void add(LL &a, LL b) {
    a += b;
    if (a >= MOD) a -= MOD;
}
int main() {
    int n, k, d;
    cin >> n >> k;
    possible[0] = true;
    for (int i = 0; i < k; ++i) {
        cin >> d;
        if (d > n) continue;
        for (int j = d; j <= n; ++j) {
            possible[j] |= possible[j - d];
        }
    }
    dp[0][0] = 1;
    for (int i = 1; i <= n; ++i) {
        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1]) % MOD;
        dp[i][1] = 0;
        for (int j = 1; j <= i; ++j) {
            if (possible[j]) {
                add(dp[i][1], dp[i - j][0]);
            }
        }
    }
    LL res = (dp[n][0] + dp[n][1]) % MOD;
    cout << res;
    return 0;
}