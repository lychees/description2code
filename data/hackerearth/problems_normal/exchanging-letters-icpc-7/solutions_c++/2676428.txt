#define mp make_pair
#include <iostream>
#include <climits>
#include <algorithm>
#include <cstring>
#include <vector>

using namespace std;

const long long MOD = 1000000000 + 7;
int N, K, T;
int ls[2000 + 1];
int o;
long long sum;

long long dp[2001][2001];
long long ncr(int n, int r) {
    r = min(r, n - r);
    if(r == 0)
        return 1;
    if(dp[n][r])
        return dp[n][r];
    dp[n][r] = (ncr(n - 1, r - 1) + ncr(n - 1, r)) % MOD;
    return dp[n][r];
}

int main() {
    cin >> N >> K >> T;
    
    for(int i = 0; i < K; ++i) {
        cin >> ls[i];
        sum += ls[i];
    }
    
    o = (K + T - sum);
    if(abs(o) % 2 != 0)
    {
        cout << 0 << endl;
        return 0;
    }
    o/=2;
    if(o > K || o < 0) {
        cout << 0 << endl;
        return 0;
    }
    
    
    for(int i = 2; i <= K; ++i)
        for(int j = 1; 2 * j <= i; ++j)
            ncr(i, j);

    cout << ncr(K, o) << endl;
}