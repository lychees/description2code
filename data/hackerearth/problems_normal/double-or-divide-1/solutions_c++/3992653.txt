#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
ll mo = 1000000007;
ll po(int m)
{
	if(m==0)return 1;
	ll x = po(m/2);
	x = (x*x)%mo;
	if(m%2)x = (2*x)%mo;
	return x;
}
int a[500005];
int ti[500005];
int b[500005];
int main()
{
  //  printf("Hello World!\n");
  int hi = 500000;
  int n,cur,m,co;
  for(n=2;n<=hi;n++)
  {
  	if(a[n]==0)
  	{
  		for(cur=n;cur<=hi;cur+=n)
  		{
  			m = cur;
  			co  =0;
  			while(m%n==0){
  				m/=n;
  				co++;
  			}
  			if(co>ti[cur])
  			{
  			ti[cur] = co;
  			a[cur] = n;
  			}
  		}
  	}
  }
  multiset<pair<int,int> > s;
  multiset<pair<int,int> >::iterator I;
  scanf("%d%d",&n,&m);
  int st,i;
  for(i=0;i<n;i++)
  {
  	scanf("%d",&b[i]);
  	s.insert(make_pair(b[i],0));
  }
  for(st=1;st<=m;st++)
  {
  	int cur = a[st]%st;
  	if(s.size()==0)break;
  	if(st==1 || cur%2)
  	{
  	//	printf("index %d is ok\n",st);
  		I = s.end();
  		I--;
  			pair<int,int> f = *I;
  			s.erase(I);
  			s.insert(make_pair(f.first,f.second+1));
  	}
  	else {
  	//	printf("index %d is harm\n",st);
  		I = s.begin();
  		pair<int,int> f = *I;
  		s.erase(I);
  		cur = I->first;
  		if(f.second==0)
  		{
  			cur/=2;
  			if(cur!=0)
  			{
  				s.insert(make_pair(cur,0));
  			}
  		}
  		else {
  			s.insert(make_pair(f.first,f.second-1));
  		}
  	}
  }
  printf("%d\n",s.size());
  for(I=s.begin();I!=s.end();I++)
  {
  	ll ff = po(I->second);
  	printf("%lld ",(ff*I->first)%mo);
  }
    return 0;
}
