/*input
5 8
7 2 0 5 8
1 2
2 3
2 4
1 5
Q 1
Q 2
U 2 4
Q 1
Q 2
U 5 3
Q 1
Q 2
*/

/*~~~~~~~~~~~~~~~~~~~~dwij28 == Abhinav Jha~~~~~~~~~~~~~~~~~~~~*/

#include <bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;
ll sum;
std::vector<int> adj[100010]; // adjacency lists for all elements in an array
int visited[100010]; // keeps track of visited nodes
int data[100010];

void dfs(int n) {
	visited[n] = true;
	for (int i = 0; i < adj[n].size(); i++) {
		if ( ! visited[adj[n][i]] ) {
			sum += data[adj[n][i]];
			dfs(adj[n][i]);
		}
	}
}

int main() {
	memset(visited, false, sizeof(visited));
	int n, m, u, v, x;
	char q[1];
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++) scanf("%d", &data[i]);
	for (int i = 1; i <= n-1; i++) {
		scanf("%d%d", &u, &v);
		adj[u].pb(v); //adj[v].pb(u);
	}
	for (int i = 1; i <= n; i++) adj[1].pb(i);
	for (int i = 0; i < m; i++) {
		memset(visited, false, sizeof(visited));
		scanf("%s", q);
		if (q[0] == 'U') {
			scanf("%d%d", &u, &v);
			data[u] = v;
		}
		else {
			sum = 0;
			scanf("%d", &x);
			dfs(x);
			printf("%lld\n", sum + data[x]);
		}
	}
	return 0;
}