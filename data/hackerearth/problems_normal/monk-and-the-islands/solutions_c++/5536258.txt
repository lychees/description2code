#include <bits/stdc++.h>
using namespace std;
vector<int>adj[10010];
bool v[10010]={0};
int l[10010];
void bfs(int s){
	queue<int>q;
	q.push(s);
	l[s]=0;
	v[s]=1;
	while(!q.empty()){
		int p=q.front();
		q.pop();
		for(int i=0;i<adj[p].size();i++){
			if(!v[adj[p][i]]){
				l[adj[p][i]]=l[p]+1;
				q.push(adj[p][i]);
				v[adj[p][i]]=1;
			}
		}	
	}
}
int main()
{
    int t; cin>>t;
    while(t--){
    	memset(v,0,sizeof(v));
    	memset(l,-1,sizeof(l));
    	int n,m; cin>>n>>m;
    	for(int i=0;i<=n;i++){
    		adj[i].clear();
    	}
    	while(m--){
    		int a,b; cin>>a>>b;
    		adj[a].push_back(b);
    		adj[b].push_back(a);
    	}
    	bfs(1);
    	cout<<l[n]<<endl;
    }
    return 0;
}
