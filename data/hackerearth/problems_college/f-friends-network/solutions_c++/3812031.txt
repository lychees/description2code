#include <bits/stdc++.h>
using namespace std;
# define pb push_back
int n;
vector<int> edge[20005];
bool visited[20005],recstack[20005];
bool dfs(int i)
{
    visited[i]=true;
    recstack[i]=true;
    for(vector<int>::iterator it=edge[i].begin();it!=edge[i].end();it++)
    {
        if(!visited[*it])
        {
            if(dfs(*it))
                return true;
        }
        else if(recstack[*it])
            return true;
    }
    recstack[i]=false;
    return false;
}
bool init()
{
    for(int i=0;i<n;i++)
    {
        recstack[i]=false;
        visited[i]=false;
    }
    for(int i=0;i<n;i++)
    {
        if(!visited[i])
        {
            if(dfs(i))
                return true;
        }
    }
    return false;
}
int main()
{
    int t;
    cin>>t;
    int a,b;
    while(t--)
    {
        int k,tt;
        cin>>n;
        
        for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
        {
            cin>>tt;
            if(tt==1)
            	edge[i].pb(j);
        }
        if(init())
            cout<<"Aye"<<endl;
        else
            cout<<"Nae"<<endl;
        for(int i=0;i<n;i++)
            edge[i].clear();
    }
    
    return 0;
}