#include<bits/stdc++.h>
using namespace std;

long long mod=1e9+7;

long long bin_pow(long long a,int n)
{
	if(n==0)
		return 1;
	if(n==1)
		return a;
	long long x=bin_pow(a,n/2);
	if(n%2==0)
	{
		return (x*x)%mod;
	}
	else
	{
		return (a*(x*x)%mod)%mod;
	}
}

unsigned long long binpow(long long a,long long n)
{

	long long pow = n;
	unsigned long long act = a , res = 1;
	while( pow )
	{
		if(pow&1)
		{
			res *= act;
			res %= mod;
		}
		act *= act;
		act %= mod;
		pow >>= 1;
	}
	return res;
}

unsigned long long invmod(long long a)
{
	return binpow(a,mod-2);
}

int main()
{
	int t;
	cin>>t;
	int i,j;
	/*vector<long long> fact(100001);
	fact[1]=1;
	fact[0]=1;
	for(i=2;i<=100000;i++)
	{
		fact[i]=(fact[i-1]*i)%mod;
	}*/
	while(t--)
	{
		int n,k;
		cin>>n>>k;
		long long ans=1;
		for(i=1;i<=n;i++)
		{
			ans=(ans*(k-i+1))%mod;
		}
		cout<<ans<<endl;
	}
	return 0;
}