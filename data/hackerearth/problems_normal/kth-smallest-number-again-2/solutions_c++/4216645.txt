#include<bits/stdc++.h>

using namespace std;

int main()
	{
		int T;
		cin>>T;
		while(T--)
			{
				int N;
				long long int K,a,b;
				vector<pair<long long int,long long int>>aray,new_aray;
				cin>>N>>K;
				for(int i=0;i<N;i++)
					{
						scanf("%lld %lld",&a,&b);
						aray.push_back(make_pair(a,b));
					}
				sort(aray.begin(),aray.end());
				new_aray.push_back(aray[0]);
				long long int top=0;
				for(int i=1;i<aray.size();i++)
					{	long long int a=aray[i].first;
						long long int b=aray[i].second;
						if(a>new_aray[top].second)
							{
								new_aray.push_back(make_pair(a,b));
								top++;
							}
						else
							new_aray[top].second=max(new_aray[top].second,b);
					}
				
				vector<long long int>sum;
				sum.push_back(0);
				for(int i=0;i<new_aray.size();i++)
					{
						long long int diff=new_aray[i].second-new_aray[i].first+1+sum[i];
						sum.push_back(diff);
					}
				for(int i=0;i<K;i++)
					{	
						long long int value;
						scanf("%lld",&value);
						long long int low=0;
						long long int high=new_aray.size();
						
						while(low<=high)
							{
								long long int mid=(low+high)/2;
								if(value>sum[mid] &&(mid==new_aray.size() || value<=sum[mid+1]))
									{
										if(mid==new_aray.size()){
											printf("-1\n");
											break;
										}
										else
											{
												long long int calc=value-sum[mid];
												calc=new_aray[mid].first+calc-1;
												printf("%lld\n",calc);
												break;
											}
									}
								else if(value>sum[mid])
									{
										low=mid+1;
									}
								else
										high=mid-1;
								
							}
						if(low>high)
							printf("-1\n");
					}
			}
		return 0;
	}
