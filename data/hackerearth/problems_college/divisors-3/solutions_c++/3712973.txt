#include <stdio.h>
#include <algorithm>
#include <iostream>
using namespace std;
 
typedef long long ll;
 
ll factors[80];
ll factorCnt1[80];
ll factorCnt2[80];
 
int main() {
    ll n, numPFactor=0;
    ll numFactors = 1;
    scanf("%lld",&n);
    for (ll i=2; i<=1000006; i++){
        ll cnt = 0;
        if (n % i==0){
            while(n%i==0){
                cnt++;
                n=n/i;
            }
            factors[numPFactor] = i;
            factorCnt1[numPFactor] = cnt;
            numPFactor++;
            numFactors *= (cnt+1);
        }
    }
    if(n!=1){
        factors[numPFactor] = n;
        factorCnt1[numPFactor] = 1;
        numPFactor++;
        numFactors *= 2;
    }
    int q;
    scanf("%d",&q);
    while(q--){
        int t;
        ll k;
        scanf("%d%lld",&t,&k);
        ll ans = 1;
        for(int i=0; i<numPFactor; i++){
            int cnt = 0;
            ll p = factors[i];
            while(k%p==0){
                cnt++;
                k=k/p;
            }
            factorCnt2[i] = cnt;
        }
        if (t==1) {
            ans = 1;
            for(int i=0; i<numPFactor; i++){
                ans = ans * (min(factorCnt2[i], factorCnt1[i])+1);
            }
        }
        else{
            ans = 1;
            for(int i=0; i<numPFactor; i++){
                if (factorCnt2[i] > factorCnt1[i]){
                    ans = 0;
                }
                ans = ans * ( factorCnt1[i]-factorCnt2[i]+1 );
            }
            if(k!=1)ans = 0;
            if(t==3)ans = numFactors-ans;
        }
        printf("%lld\n",ans);
    }
    return 0;
}