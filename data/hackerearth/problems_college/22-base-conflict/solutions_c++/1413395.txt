#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>
#include <set>
#include "assert.h"
using namespace std;

long long base_X_to_decimal(string val, int X){
	long long ret = 0;
	long long k = 1;
	for(int i=val.size()-1; i>=0; i--){
		int tmp;
		if('0'<= val[i] && val[i] <= '9'){
			tmp = val[i] - '0';
		}else if('A' <= val[i] && val[i] <= 'Z'){
			tmp = val[i] - 'A' +10;
		}else if('a' <= val[i] && val[i] <= 'z'){
			tmp = val[i] - 'a' +10;
		}else{
			tmp = -1;
		}

		assert(tmp>=0);

		if(tmp >= X) return -1;
		ret += tmp * k;
		k *= X;
	}
	return ret;
}

int main(){
	int n;
	cin >> n;
	vector<string> v(n);
	int min_ = 0;
	for(int i=0; i<n; i++){
		char c[100];
		scanf("%s", c);
		v[i] = c;
	}

	long long x;
	cin >> x;

	for(int k=2; k<=16; k++){
		long long val = 0;
		for(int i=0; i<n; i++){
			long long tmp = base_X_to_decimal(v[i], k);
			if(tmp < 0){
				val = -1;
				break;
			}else{
				val += tmp;
			}
		}
		if(val == x){
			cout << k << endl;
			return 0;
		}
	}

	return 0;
}