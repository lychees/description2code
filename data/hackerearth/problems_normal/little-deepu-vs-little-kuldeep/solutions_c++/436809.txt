#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <cstdlib>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;
long long mod=1000000007;
long long A[2000009];
long long mulmod(long long a, long long b, long long c) { /////// (axb)%c
long long x = 0, y = a % c;
while (b > 0) {
if (b % 2 == 1) {
x = (x + y) % c;
}
y = (y * 2) % c;
b /= 2;
}
return x % c;
}
int modulo(int a,int b,int c) { ////// (a^b)%c
long long x=1,y=a;// long long is taken to avoid overflow of intermediate results
while(b > 0) {
if(b%2 == 1) {
x=(x*y)%c;
}
y = (y*y)%c; // squaring the base
b /= 2;
}
return x%c;
}
int main()
{
int t;
cin>>t;
A[0]=1;
for(int i=1;i<=2000009;i++)
{
A[i]=mulmod(i,A[i-1],mod);
}

while(t--)
{
long long n;
cin>>n;

long long num=1,den=1;


num=mulmod(num,A[2*n],mod);
//num=mulmod(num,A[c],mod);
den=mulmod(den,A[n],mod);
den=mulmod(den,A[n+1],mod);

// ... magic


long long z=modulo(den,mod-2,mod);
z=z%mod;
z=mulmod(z,num,mod);
cout<<z<<endl;



}//while

return 0;
}