
#include <bits/stdc++.h>
using namespace std;

#if !ONLINE_JUDGE
#include "debug.h"
#else
#endif

typedef long long int LL;
typedef unsigned long long LLU;
typedef long double LD;

#define INF 1500000000000000000LL
#define MOD 1000000007
#define F first
#define S second
#define PB push_back
#define MK make_pair
#define LEN(vale) strlen(vale)
#define SZ(vale) (int)vale.size()
#define SQ(A) ((A)*(A))
#define FI(i,fa,fb) for(int i=fa;i<fb;++i)
#define FD(i,fa,fb) for(int i=fa;i>fb;--i)
#define FT(it,S) for(it = (S).begin(); it != (S).end(); ++it) 
#define bits(vale) __builtin_popcount(vale)
#define VT vector

#define SET1(array,val,sz) for(int i=0;i<sz;i++)array[i]=val;
#define SET2(array,val,sz1,sz2) for(int i=0;i<sz1;i++)for(int j=0;j<sz2;j++)array[i][j]=val;

#define ALL(a) a.begin(),a.end()
#define LB (lower_bound)
#define UB (upper_bound)

#define SI(vale) scanf("%d",&vale)
#define PI(vale) printf("%d\n",vale)
#define PIS(vale) printf("%d ",vale)
#define SL(vale) scanf("%lld",&vale)
#define PL(vale) printf("%lld\n",vale)
#define PLS(vale) printf("%lld ",vale)
#define SS(vale) scanf("%s",vale)
#define PS(vale) printf("%s\n",vale)
#define SLD(vale) scanf("%Lf",&vale)
#define PLD(vale) printf("%0.12Lf\n",vale)
#define NL printf("\n")
#define TCS() int testcase; SI(testcase);while(testcase--) 

typedef pair<int,int> PR;
bool deb = false;
const int N = 412;
int n,k,m;
int dp[N][N];
int DP[1<<17][N];
int cit[N];

int cal(int mask,int id) {
     if(mask == ((1<<k)-1))
          return dp[id][n];
     if(DP[mask][id] != -1) return DP[mask][id];
     int ans = MOD;
     FI(i,0,k) {
          int p = cit[i];
          if((mask & (1<<i))) continue;
          ans = min(ans,dp[id][p]+cal(mask|(1<<i),p));
     }
     return DP[mask][id] = ans;
}

int main(){
     //clock_t tStart = clock();
     int t;
     //TCS(){
     SI(n),SI(m),SI(k);
     FI(i,1,n+1)FI(j,1,n+1)dp[i][j] = MOD;
     memset(DP,-1,sizeof(DP));
     FI(i,0,m) {
          int u,v,w;
          SI(u),SI(v),SI(w);
          dp[u][v] = w;
          dp[v][u] = w;
     }
     FI(i,0,k)SI(cit[i]);
     FI(i,1,n+1)dp[i][i] = 0;
     FI(k,1,n+1) {
          FI(i,1,n+1) {
               FI(j,1,n+1) {
                    dp[i][j] = min(dp[i][j],dp[i][k]+dp[k][j]);
               }
          }
     }
     PI(cal(0,1));  
     //exectime();
     return 0;        
}


