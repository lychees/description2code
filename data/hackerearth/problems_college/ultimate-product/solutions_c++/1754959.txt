#include<bits/stdc++.h>
using namespace std;

vector<bool> visited;
vector<vector<int> > graph;
long long  MOD=1000000007;

int bfs(int x)
{
	queue<int> q;
	q.push(x);
	visited[x]=true;
	int count=0;
	while(!q.empty())
	{
		x=q.front();
		q.pop();
		count++;
		for(int i=0;i<graph[x].size();i++)
		 {
		 	if(!visited[graph[x][i]])
		 	  {
		 	  q.push(graph[x][i]);
		 	  visited[graph[x][i]]=true;
		 	 }
		 }
	}
	return count;
}

	
int main()
{
	int n,k;

	 
	cin>>n>>k;
	vector<long long> fact(n+5);
	fact[0]=fact[1]=1;
	for(int i=2;i<=n;i++)
	 {
	 	fact[i]=(i*fact[i-1])%MOD;
	 }
	graph.resize(n);
	visited.resize(n);
	int x,y;
	long long ans=1;
	while(k--)
	{
		cin>>x>>y;
	//	x--;
	//	y--;
		graph[x].push_back(y);
		graph[y].push_back(x);
	}
  for(int i=0;i<n;i++)
   {
   	if(!visited[i])
   	  ans=(ans*fact[bfs(i)])%MOD;
   }
cout<<ans<<endl;
}