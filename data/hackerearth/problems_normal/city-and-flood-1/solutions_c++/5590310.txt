#include<bits/stdc++.h>
using namespace std;
long int root(long int a[],long int i)
{
	while(i!=a[i])
	i=a[i];
	return i;
}
bool find(long int a[],long int i,long int j)
{
	long int x=root(a,i);
	long int y=root(a,j);
	if(x!=y)
	return false;
	return true;
}
void union1(long int a[],long int s[],long int i, long int j)
{
	if(!find(a,i,j))
	{
		long int x=root(a,i);
		long int y=root(a,j);
		if(s[x]>=s[y])
		{
			a[y]=a[x];
			s[x]+=s[y];
		}
		else
		{
			a[x]=a[y];
			s[y]+=s[x];
		}
	}
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(0);cout.tie(0);
  long int n,e,i,x,y,j;
  long int a[100001],s[100001];
  cin>>n;
  cin>>e;
  //long int a[n+1],s[n+1];
  for(i=1;i<=n;i++)
  {a[i]=i;
  s[i]=1;
  }
  while(e--)
  {
  	cin>>x>>y;
  	union1(a,s,x,y);
  }
  long int c=0;
  for(i=1;i<=n;i++)
  {
  	if(i==a[i])
  	c++;
  	
  }
  cout<<c<<endl;
  return 0;
}
