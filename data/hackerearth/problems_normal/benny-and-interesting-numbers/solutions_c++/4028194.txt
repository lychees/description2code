#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define rep(i,a) for(ll i=0;i<a;++i)
#define repp(i,a,b) for(ll i=a;i<b;++i)
#define all(c) (c).begin(), (c).end()
#define FILL(a,x) memset(a,x,sizeof(a))
#define    foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
ll M=1e9+7;



ll mpe(ll base, ll exponent, ll modulus)
{  
    ll result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = result*base%modulus ;
        exponent = exponent >> 1;
        base =  base*base%modulus ;
    }
    return result;
}

const int MAX = 500000;
ll np = 0, prime[MAX + 1];
bool isprime[MAX + 1];

void sieve(int N = MAX)
{
    memset(isprime, true, sizeof isprime);
    isprime[0] = isprime[1] = false;
    for(int i = 2; i < N+1; ++i)
        if(isprime[i])
        {
            for(int j = i; (long long)i*j < N+1; ++j)
                isprime[i*j] = false;
            prime[++np] = i;
        }
}

 
int main()
{
    fastScan;
    sieve();
    ll t;
    cin>>t;
    while(t--){
        ll n;
        cin>>n;
        int f=0;
        int tmp=ceil(sqrt(n));
        repp(i,1,min(np+1,(ll)tmp)){
            if(n%(prime[i]*prime[i])==0){
                f=1;
                break;
            }
        }
        if(f==1)cout<<"No"<<endl;
        else cout<<"Yes"<<endl;
    }
    
    return 0;
}
