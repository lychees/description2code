#include <iostream>
#include<vector>
#include<utility>
#include<algorithm>
using namespace std;
int main()
{
	int n;
	cin >> n;
	long long* t = new long long[n];
	long long* x = new long long[n];
	int i, j, k;
	for (i = 0; i<n; i++)
		cin >> t[i] >> x[i];
	vector<pair<long long, long long>> po, no;
	for (i = 0; i<n; i++)
	{
		pair<long long, long long> p(t[i], x[i]);
		pair<long long, long long> pi( x[i],t[i]);
		if (x[i] - t[i]>0)
			po.push_back(p);
		else
			no.push_back(pi);
	}
	sort(po.begin(), po.end());
	sort(no.begin(), no.end());
	
	
	long long ans = 0, cur = 0;
	for (i = 0; i<po.size(); i++)
	{
		if (po[i].first>cur)
		{
			ans += po[i].first - cur;
			cur = po[i].first;
		}
		cur = cur - po[i].first + po[i].second;
	}
	for (i = no.size() - 1; i >= 0; i--)
	{
		if (no[i].second>cur)
		{
			ans += no[i].second - cur;
			cur = no[i].second;
		}
		cur = cur - no[i].second + no[i].first;
	}
	cout << ans;
	return 0;
}

	