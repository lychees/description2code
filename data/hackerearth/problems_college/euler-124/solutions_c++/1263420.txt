#include<iostream>
#include<cstdio>
#include<algorithm>
#include<memory.h>
#include<vector>
#include<cmath>
#define rep(i,a,b) for(int i=a; i<b; i++)
#define sc(x) scanf("%d", &x)
using namespace std;
struct store{
    int val;
    int rad;
    vector<int> fac;
};
store A[100001];
int prm[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317};
bool isPrime(int n){
    rep(i,0,66){
        if(n%prm[i]==0)return false;
    }
    return 1;
}
bool comp(store a, store b){
    if(a.rad<b.rad)return true;
    else if(a.rad==b.rad){
        if(a.val<b.val)return 1;
        else return 0;
    }
    else return 0;
}
int main(){
    int t;
    A[0].val=0;
    A[0].rad=(int)1e9;
    rep(i,1,100001){
        A[i].val=i;
        int n=i;
        for(int j=0; prm[j]<=n; j++){
            if(n%prm[j]==0){
                A[i].fac.push_back(prm[j]);
                while(n%prm[j]==0)n/=prm[j];
            }
            if(j==65){
                if(n!=1)A[i].fac.push_back(n);
                break;
            }
        }
        if(A[i].fac.size()==0)A[i].rad=i;
        else A[i].rad=1;
        rep(j,0,A[i].fac.size()){
            A[i].rad*=A[i].fac[j];
        }
    }
    sort(A,A+100001,comp);
    /*rep(i,1,11){
        cout<<A[i].val<<" "<<A[i].rad<<endl;
    }*/
    cin>>t;
    while(t--){
        int k;
        sc(k);
        cout<<A[k-1].val<<endl;
    }
}
