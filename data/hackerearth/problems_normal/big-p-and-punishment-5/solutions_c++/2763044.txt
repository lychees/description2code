//Hope is a good thing and maybe the best thing of all...
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <list>
#include <cstdio>
#include <cstring>
#include <cctype>
#include <queue>
#include <set>
#include <climits>
#include <iomanip>
#include <cassert>
using namespace std;

//DEBUG
#define trace(x) cerr << #x << "=" << x <<endl;
#define trace2(x, y) cerr << #x << "=" << x << " " << #y << "=" << y <<endl;
#define trackarr(x, n) {cerr << #x << ":" << endl; for (int p = 0; p < n; p++) {cerr << x[p] << " ";} cerr << endl;}
#define track(x) {cerr << #x << ":" << endl; for (int p = 0; p < x.size(); p++) {cerr << x[p] << " ";} cerr << endl;}
#define trackvv(x) {cerr << #x << ":" << endl; for (int i = 0; i < x.size(); i++) { cerr << "i:" << i << endl; for (int j = 0; j < x[i].size(); j++){cerr << x[i][j] << " ";} cerr << endl;} cerr << endl;}
#define trackcr(x) {cerr << #x << ":" << endl; for (auto i = x.begin(); i != x.end(); i++) {cerr << *i << " ";} cerr << endl;}

//CONSTANTS
#define MAX 100005
#define MOD 1000000007
#define INF 1e9

void readwrite() {
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#else
		ios::sync_with_stdio(false);
	#endif
}

bool isDown[MAX] = {};

void makeSit(vector<vector<int> > &G, int u) {
	isDown[u] = true;
	for (int i = 0;  i < G[u].size(); i++) {
		int v = G[u][i];
		if (!isDown[v]) {
			makeSit(G, v);
		}
	}
}

int main() {
	int t;
	cin >> t;
	while (t--) {
		memset(isDown, 0, sizeof(isDown));
		int n, f, s;
		cin >> n >> f >> s;
		vector<vector<int> > G(n);
		for (int i = 0; i < f; i++) {
			int a, b;
			scanf("%d%d", &a, &b);
			a--, b--;
			G[a].push_back(b);
		}
		for (int i = 0; i < s; i++) {
			int id;
			scanf("%d", &id);
			id--;
			if (!isDown[id]) {
				makeSit(G, id);
			}
		}
		int count = 0;
		for (int i = 0; i < n; i++) {
			if (isDown[i]) {
				count++;
			}
		}
		cout << count << endl;
	}

}
