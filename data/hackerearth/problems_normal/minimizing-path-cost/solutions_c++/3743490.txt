/*input
4 4
Howrah Trivandram Vashi Mysore
Howrah Trivandram 10
Howrah Vashi 20
Trivandram Mysore 100
Mysore Vashi 50
6
Howrah Trivandram
Howrah Vashi
Howrah Mysore
Trivandram Vashi
Trivandram Mysore
Mysore Vashi
*/
#include <bits/stdc++.h>
#include<stdio.h>
using namespace std;
#define pii pair<long long,long long>
#define F(i,a,b) for(ll i = (ll)(a); i <= (ll)(b); i++)
#define RF(i,a,b) for(ll i = (ll)(a); i >= (ll)(b); i--)
#define PI 3.14159265
#define ll long long
#define ff first
#define ss second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define INF 1000000009
#define mod 1000000007
map <string,ll> mymap;
//vector <pii> g[200];
ll arr[200][200];
/*ll djikstra(ll s,ll e)
{
	priority_queue < pii , vector<pii> , greater<pii> > pq;
	bool vis[200];
	memset(vis,0,sizeof(vis));
	ll dist[200];
	F(i,1,199)
		dist[i] = INF;
	pq.push(mp(0,s));
	dist[s]=0;
	while(!pq.empty())
	{
		ll u = pq.top().ss;
		pq.pop();
		if(vis[u])
			continue;
		if(u==e)
			break;
		vis[u]=1;
		ll sz = g[u].size();
		F(i,0,sz-1)
		{
			ll v = g[u][i].ff;
			ll d = g[u][i].ss;
			if(!vis[v] && dist[v]>dist[u]+d)
			{
				pq.push(mp(dist[v],v));
				dist[v] = dist[u]+d;
			}
		}
	}
	return dist[e];
}*/
ll dist[200][200];
void floyd_warshall(ll n)
{
	F(i,1,n)
	{
		F(j,1,n)
		{
			dist[i][j]=arr[i][j];
		}
	}
	F(k,1,n)
	{
		F(i,1,n)
		{
			F(j,1,n)
			{
				if(dist[i][k]+dist[k][j] < dist[i][j])
					dist[i][j] = dist[i][k]+dist[k][j];
			}
		}
	}
}
int main() 
{
	std::ios::sync_with_stdio(false);
	ll n,m;
	cin>>n>>m;
	F(i,1,n)
	{
		string s;
		cin>>s;
		mymap[s]=i;
	}
	F(i,1,n)
	{
		F(j,1,n)
		{
			arr[i][j]=INF;
		}
	}
	F(i,1,m)
	{
		string s1,s2;
		ll d;
		cin>>s1>>s2>>d;
		ll u=mymap[s1];
		ll v = mymap[s2];
		arr[u][v]=d;
		arr[v][u]=d;
		//cout<<u<<" "<<v;
		//g[u].push_back({v,d});
		//g[v].pb(mp(u,d));
		//g[mymap[s1]].push_back(mp(mymap[s2],d));
		//g[mymap[s2]].push_back(mp(mymap[s1],d));
	}
	floyd_warshall(n);
	ll q;
	cin>>q;
	while(q--)
	{
		string s1,s2;
		cin>>s1>>s2;
		//ll ans = djikstra(mymap[s1],mymap[s2]);
		ll ans = dist[mymap[s1]][mymap[s2]];
		cout<<ans<<endl;
	}
	return 0;
}