#include <bits/stdc++.h>
using namespace std;

int n;
int a[20];
int dp[1<<16][101];

int rec(int m, int l) 
{
	if(m == (1 << n) -1) return 0;
	if(dp[m][l] != -1) return dp[m][l];
	int res = 0;
	int val = __builtin_popcount(m) + 1;
	for(int i = 0; i < n; i++) 
	{
		if((m & (1 << i)) == 0) 
		{
			res = max(res, val * abs(l - a[i]) + rec(m | (1 << i), a[i])); 
		}
	}
	return dp[m][l] = res;
}

int main()
{
    int t;
    cin >> t;
    while (t--) 
    {
    	cin >> n;
    	int res = 0;
    	for(int i = 0; i < n; i++) 
    		cin >> a[i];
    	memset(dp, -1, sizeof(dp));
    	for(int i = 0; i < n; i++) 
    		res = max(res, rec((1 << i), a[i]));
    	cout <<  res << endl;
	}
    return 0;
}
