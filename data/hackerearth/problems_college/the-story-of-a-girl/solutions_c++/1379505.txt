#include<stdio.h>
#include<iostream>
using namespace std;
long long int a[2][2]={{0,1},{1,1}},mm[2]={1,1},m[2][2]={{0,1},{1,1}},mod=1000000007;
void power(long long);
void mul(int);
long long fib(long long n)
{
    if(n==0||n==-1)
    {
        return 1;
    }
    else
    {
     power(n);
     return(a[1][0]*mm[0]+a[1][1]*mm[1]);
    }
}
void power(long long n)
{
    if(n==1||n==0)
    return;
    else
    {
    if(n%2==0)
    {
    power(n/2);
    mul(0);
    }
    else
    {
    power(n/2);
    mul(0);
    mul(1);
    }
    return;
    }
}
void mul(int f)
{
long long int a1,b1,c1,d1;
 if(f==1)
 {
a1=(a[0][0]*m[0][0])%mod+(a[0][1]*m[1][0])%mod;
 b1=(a[0][0]*m[0][1])%mod+(a[0][1]*m[1][1])%mod;
 c1=(a[1][0]*m[0][0])%mod+(a[1][1]*m[1][0])%mod;
 d1=(a[1][0]*m[0][1])%mod+(a[1][1]*m[1][1])%mod;
 }
 else
 {
 a1=(a[0][0]*a[0][0])%mod+(a[0][1]*a[1][0])%mod;
 b1=(a[0][0]*a[0][1])%mod+(a[0][1]*a[1][1])%mod;
 c1=(a[1][0]*a[0][0])%mod+(a[1][1]*a[1][0])%mod;
 d1=(a[1][0]*a[0][1])%mod+(a[1][1]*a[1][1])%mod;
 }
 a[0][0]=a1%mod;
 a[0][1]=b1%mod;
 a[1][0]=c1%mod;
 a[1][1]=d1%mod;
}
int main()
{
    int t,n;
    cin>>t;
    while(t--)
    {
    a[0][0]=0;
    a[0][1]=1;
    a[1][0]=1;
    a[1][1]=1;
        cin>>n;
        cout<<fib(n-2)%mod<<endl;
    }
    return 0;
}
