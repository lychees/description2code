def dfs(adj,visited,s,e):
	stack=[]
	stack.append(s)
	visited[s]=True
	minrisk = e[s]
	count=1
	while len(stack)!=0:
		v = stack.pop()
		for i in xrange(len(adj[v])):
			if not visited[adj[v][i]]:
				stack.append(adj[v][i])
				visited[adj[v][i]]=True
				if e[adj[v][i]]<minrisk:
					minrisk=e[adj[v][i]]
					count=1
				elif e[adj[v][i]]==minrisk:
					count+=1	
	return count


n = int(raw_input())
e = map(int,raw_input().split())
adj = [[] for i in xrange(n)]
visited=[False for i in xrange(n)]
k = int(raw_input())
count=0
ans=1
countarr=[]
for i in xrange(k):
	x,y = map(int,raw_input().split())
	x=x-1
	y=y-1
	if y not in adj[x]:
		adj[x].append(y)
		adj[y].append(x)
for i in xrange(n):
	if not visited[i]:
		count=dfs(adj,visited,i,e)
		ans*=count
print ans%1000000007			
	