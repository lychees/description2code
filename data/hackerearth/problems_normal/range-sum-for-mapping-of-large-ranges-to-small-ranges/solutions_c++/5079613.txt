#include<bits/stdc++.h>
using namespace std;
vector<int> arr[100000];
int visited[100000];
vector<int>v;
long long int c=0;
void dfs(int root)
{
	visited[root]=1;
	c++;
	
	for(int i=0;i<arr[root].size();i++)
	{
		int s=arr[root][i];
		if(!visited[s])
		{
			
			dfs(s);
			
		}
	}
	
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{	
	
	int n,k;
	cin>>n>>k;
	for(int i=0;i<n;i++)
	visited[i]=0,arr[i].clear();
	for(int i=0;i<k;i++)
	{
		int x,y;
		cin>>x>>y;
		--x;
		y--;
		arr[x].push_back(y);
		arr[y].push_back(x);
	}
//	memset(visited,0,sizeof visited);
	long long int ans=1LL;
	for(int i=0;i<n;i++)
	{
		if(!visited[i])
		{
			c=0;
			dfs(i);
			if(c>1)
			{
				c = ((c*(c-1))/2)%1000000007 ;
				ans=(ans*c)%1000000007 ;
			}
	   }
	}
	

	cout<<ans<<endl;
	
	}

		
}
		
