#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define PII pair<int,int>
using namespace std;
LL dp[50000];
LL bin(LL x)
{
    int l=0,r=50000;
    LL ans=-1;
    while(l<=r)
    {
        int mid=(l+r)/2;
        if(dp[mid]>x)
        {
            r=mid-1;
        }
        else
        {
            ans=mid;
            l=mid+1;
        }
    }
    return ans;
}
int main()
{
    int t; si(t);
    LL x=1;
    LL ans=0;
    int ct=0;
    while(ans<=1000000000000000000LL)
    {
        ct++;
        ans+=(x*(x+1)*(x+1));
        x++;
        dp[ct]=ans;
    }
    while(t--)
    {
        LL n; scanf("%lld",&n);
        LL ct=bin(n);
        printf("%lld\n",ct);
        if(ct==0) printf("Draw\n");
        else if(ct&1) printf("Dhruv\n");
        else printf("Ketan\n");
    }
	return 0;
}
