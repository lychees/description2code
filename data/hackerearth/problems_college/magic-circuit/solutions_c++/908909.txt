#define _CRT_SECURE_NO_WARNINGS
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll; typedef vector<pair<long long,long long> > vpll;
typedef vector<string> vs; typedef long double ld;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

#define popcount __builtin_popcount
int main() {
	int n, m;
	while(~scanf("%d%d", &n, &m) && n != 0) {
	vector<int> b(n);
	rep(i, n) {
		string s;
		cin >> s;
		rep(j, m) if(s[j] == 'X')
			b[i] |= 1 << j;
	}
	vector<int> ptn(m), pto(1 << m);
	for(int i = 0;i < m;i++){
		ptn[i] = ((1<<i)|(1<<(i+1))|(1<<(i-1)))&((1<<m)-1);
	}
	for(int i = 0;i < 1<<m;i++){
		int bit = 0;
		for(int j = 0;j < m;j++){
			if((i&1<<j)!=0){
				bit ^= ptn[j];
			}
		}
		pto[i] = bit;
	}
 
	int ans = INF;
	if(n == 1){
		for(int i = 0;i < 1<<m;i++){
			if((b[0]^pto[i]) == 0){
				ans = min(ans, popcount(i));
			}
		}
	}else{
		for(int i = 0;i < 1<<m;i++){
			vector<int> bb = b;
			int ct = 0;
			bb[0] ^= pto[i];
			bb[1] ^= i;
			ct += popcount(i);
			for(int j = 0;j < n - 1;j++){
				bb[j+1] ^= pto[bb[j]];
				if(j+2 < n)bb[j+2] ^= bb[j];
				ct += popcount(bb[j]);
			}
			if(bb[n-1] == 0){
				ans = min(ans, ct);
			}
		}
	}
	if(ans == INF)
		puts("-1");
	else
		printf("%d\n", ans);
	}
	return 0;
}
