#include<stdio.h>
#include<assert.h>
#include<stdlib.h>
#include<string.h>
#include<cmath>
#include<iostream>
#include<vector>
#include<sstream>
#include <map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 1000000007
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define pw printf(" ")
#define N 100005
#define inf 1e7
typedef long long int ll;
using namespace std;
 /*
int sum[4*N],fck[4*N];//value
 
void build(int i,int l,int r){
 
if(l==r){
sum[i]=i;fck[i]=-1;return ;}
else{
int m=(l+r)/2;
 
build(2*i,l,m);build((2*i)+1,m+1,r);
 
sum[i]=-1;
fck[i]=-1;

return ;}
}

void update(int ind,int l,int r,int i,int val){
if(l==r){
if(val==1){sum[ind]=l;}else{sum[ind]=-1;}fck[ind]=val;return ;}
 
int m=(l+r)/2;
 
if(i<=m){update(2*ind,l,m,i,val);}
else{update((2*ind)+1,m+1,r,i,val);}
 
int k1=fck[2*ind],k2=fck[(2*ind)+1];
if(k2>=k1){sum[ind]=sum[(2*ind)+1];fck[ind]=fck[(2*ind)+1];}
else{sum[ind]=sum[(2*ind)];fck[ind]=fck[(2*ind)];}
return ;
}

pair<int,int> max_query(int ind,int i,int j,int l,int r){
if(l>r){return make_pair(-1,-1);}
if(i==l&&j==r)
{return make_pair(fck[ind],sum[ind]);}
 
int mid=(i+j)/2;
 
pair <int,int> k1=max_query(ind*2,i,mid,l,min(r,mid)),k2=max_query((ind*2)+1,mid+1,j,max(l,mid+1),r);

if(k2.first>=k1.first){
return k2;}
else{return k1;}

}



 int main()
 {
 int n,i,j,k,cnt;map <int,int> ma,rev,cunt;ma.clear();rev.clear();cunt.clear();
 si(n);si(k);int a[n],b[n];
 rep(i,n){si(a[i]);b[i]=a[i];}
 sort(b,b+n);
 cnt=1;
 rep(i,n){if(i==0){ma[b[i]]=cnt;rev[cnt]=b[i];cnt++;continue;}
 if(b[i]!=b[i-1]){ma[b[i]]=cnt;rev[cnt]=b[i];cnt++;}}
 
 build(1,0,N-1);
 
 for(i=0;i<k;i++){cunt[a[i]]++;
 if(cunt[a[i]]==1){update(1,0,N-1,ma[a[i]],1);}else{update(1,0,N-1,ma[a[i]],-1);}
 }
 for(i=0;i+k-1<n;i++){
 pair<int,int> x=max_query(1,0,N-1,0,N-1);
 if(x.first!=1){cout<<"Nothing";}
 else{cout<<rev[x.second];}
 pn;
 cunt[a[i]]--;
 if(cunt[a[i]]==1){update(1,0,N-1,ma[a[i]],1);}
 else{update(1,0,N-1,ma[a[i]],-1);}
 if(i+k<n){cunt[a[i+k]]++;
  if(cunt[a[i+k]]==1){update(1,0,N-1,ma[a[i+k]],1);}
 else{update(1,0,N-1,ma[a[i+k]],-1);}
 }
 }
 
 return 0;}
 */
 
 int main(){int t;
 si(t);
 while(t--){
 int n,i,j,k;
 si(n);ll a[n+5],b[n+5],ans=1000000000000LL;vector <pair <ll,ll> > v;
 rep(i,n){sll(a[i]);}
 rep(i,n){sll(b[i]);}
 if(n==1){cout<<0;pn;continue;}
 
rep(i,n){v.push_back(make_pair(a[i],a[i]+b[i]));}
sort(v.begin(),v.end());
 ans = 0;
    long long endd = n;
for(long long int i = 1 ; i < endd; i++)
    {
        long long diff = v[i].first - v[i-1].second;
        ans += min(diff*i , diff*(endd-i));
    }
 
 
 cout<<ans;pn;}
 return 0;}
 
 
 