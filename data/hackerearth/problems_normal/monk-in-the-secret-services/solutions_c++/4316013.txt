#include<iostream>
#include<queue>
#include<vector>
#define mod 1000000000;
using namespace std;
vector<pair<int,int>> v[105];
bool vis[105];
long long d[105];
long long h[105];
long long s[105];
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    int n,m;
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
        d[i]=mod;
        h[i]=mod;
        s[i]=mod;
        vis[i]=false;
        v[i].clear();
    }
    for(int i=0;i<m;i++)
    {
        int a,b,c;
        cin>>a>>b>>c;
        v[a].push_back(make_pair(b,c));
        v[b].push_back(make_pair(a,c));
    }
    int a,b,c;
    cin>>a>>b>>c;
    d[a]=0;
    priority_queue<pair<long long,int>, std::vector<pair<long long,int>>, std::greater<pair<long long,int>> > q;
    q.push(make_pair(0,a));
    while(q.size()!=0)
    {
        pair<long long,int> p=q.top();
        q.pop();
        int x=p.second;
        if(vis[x]==true)
            continue;
        vis[x]=true;
        for(int i=0;i<v[x].size();i++)
        {
            int e = v[x][i].first; int w = v[x][i].second;
            if(vis[e]==false)
            {
            if(d[x] + w < d[e]  )
            {
                d[e] = d[x] + w;
                q.push(make_pair(d[e],e));
            }
            }
        }
    }
    for(int i=1;i<=n;i++)
    {
        vis[i]=false;
    }
    h[b]=0;
    q.push(make_pair(0,b));
    while(q.size()!=0)
    {
        pair<long long,int> p=q.top();
        q.pop();
        int x=p.second;
        if(vis[x]==true)
            continue;
        vis[x]=true;
        for(int i=0;i<v[x].size();i++)
        {
            int e = v[x][i].first; int w = v[x][i].second;
            if(vis[e]==false)
            {
            if(h[x] + w < h[e]  )
            {
                h[e] = h[x] + w;
                q.push(make_pair(h[e],e));
            }
            }
        }
    }
    for(int i=1;i<=n;i++)
    {
        vis[i]=false;
        
    }
    s[c]=0;
    q.push(make_pair(0,c));
    while(q.size()!=0)
    {
        pair<long long,int> p=q.top();
        q.pop();
        int x=p.second;
        if(vis[x]==true)
            continue;
        vis[x]=true;
        for(int i=0;i<v[x].size();i++)
        {
            int e = v[x][i].first; int w = v[x][i].second;
            if(vis[e]==false)
            {
            if(s[x] + w < s[e]  )
            {
                s[e] = s[x] + w;
                q.push(make_pair(s[e],e));
            }
            }
        }
    }
    long long z=0;
    for(int i=1;i<=n;i++)
    {
        if(i!=a&&i!=b&&i!=c)
        {
            z=max(z,(d[i]+2*h[i]+s[i]));
        }
    }
    cout<<z<<endl;
}
}