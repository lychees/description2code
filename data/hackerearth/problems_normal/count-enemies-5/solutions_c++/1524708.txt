//Headers
#include<iostream>
#include<cmath>
#include<algorithm>
using namespace std;
//Macros
#define REP(a,b,c,d) for(a=b;a<=c;a+=d)//REPEAT
#define DREP(a,b,c,d) for(a=b;a>=c;a-=d)//DESC REPEAT
#define DTC ios::sync_with_stdio(false)//DEC TIME COMPLEXITY
//Shortcuts
typedef int I;
typedef unsigned int U;
typedef long long LL;
typedef double D;
typedef long double LD;
//Magic Prevention
//const N1=
//const N2=
//const N3=
I main()
{
DTC;
U T;
cin>>T;
cin.ignore(1,'\n');
DREP(T,T,1,1)
{
string S;
getline(cin,S);
I i,k,sum=0;
REP(i,0,I(S.size())-1,1)
{
	if(S[i]=='1'||S[i]=='*'||S[i]=='X'){continue;}
	DREP(k,i-1,0,1)
	{if(S[k]=='X'||S[k]=='1'){S[i]='1';break;}else if(S[k]=='*'){break;}}
	if(S[i]=='O')
	REP(k,i+1,I(S.size())-1,1)
	{if(S[k]=='X'){S[i]='1';break;}else if(S[k]=='*'){break;}}
	if(S[i]=='O'){++sum;}
}
cout<<sum<<endl;
}
}