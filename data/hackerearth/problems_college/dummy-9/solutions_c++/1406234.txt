/*******************
  	Rahul Bhati
	CHARUSAT UNIVERSITY
	***********************/

#include <bits/stdc++.h>

using namespace std;

/* Time saving techniques :D */

typedef long long ll;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;

#define pb              push_back
#define mp              make_pair
#define ff              first
#define ss              second
#define sz              size()
#define ln              length()
#define rep(i,n)        for(int i=0;i<n;i++)
#define fu(i,a,n)       for(int i=a;i<=n;i++)
#define fd(i,n,a)       for(int i=n;i>=a;i--)
#define foreach(it,v)   for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define all(a)          a.begin(),a.end()
#define INF             (int)1e9
#define EPS             (1e-9)
#define INF_MAX         2147483647
#define INF_MIN         -2147483647
#define pi              acos(-1.0)
#define N               1000000
#define dbg(x)          { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y)       { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define mset(a, s)      memset(a, s, sizeof (a))
#define Read(r)         freopen(r, "r", stdin)
#define Write(w)        freopen(w, "w", stdout)

using namespace std;
struct dj
{
    int x;
    int y;
} a[1000];
inline int myf(dj dj1,dj dj2)
{
    if(dj1.x<dj2.x)
        return 1;
    if(dj1.x==dj2.x)
        if(dj1.y<dj2.y)
            return 1;
    return 0;
}
int main()
{
    int n,t,L[1005],len;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&n);
        for(int i=0; i<n; i++)
            scanf("%d",&a[i].x);
        for(int i=0; i<n; i++)
            scanf("%d",&a[i].y);

        sort(a,a+n,myf);

        L[0]=1;
        len=1;
        for(int i=1; i<n; i++)
        {
            L[i]=1;
            for(int j=0; j<i; j++)
            {
                if((a[i].y>=a[j].y)&&(L[i]<L[j]+1))
                    L[i]=L[j]+1;
            }
            if(len<L[i])
                len=L[i];
        }
        printf("%d\n",len);
    }
    return 0;
}

