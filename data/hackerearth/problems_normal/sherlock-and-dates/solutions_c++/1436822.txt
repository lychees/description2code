#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)

template<class T> inline void amin(T &a, T b) { if (a>b) a=b; }
template<class T> inline void amax(T &a, T b) { if (a<b) a=b; }

LL encode(LL y, LL m, LL d) {
    return (y * 12 + m) * 32 + d;
}
int day(int y, int m) {
    bool l = (y % 400 == 0 || (y % 100 && y % 4 == 0));
    if (l && m == 2) return 29;
    int a[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    return a[m];
}
void next(int &y, int &m, int &d) {
    d++;
    if (day(y, m) == d) {
	d = 1;
	m++;
    }
    if (m == 13) {
	m = 1;
	y++;
    }
}
bool lucky(int y, int m, int d) {
    return (d+1 == m && m+1 == y % 100);
}

int T;
vector<LL> X;
int main() {
    int y = 0, m = 1, d = 1;
    int y2, m2, d2;
    for(;;) {
	if (lucky(y, m, d)) {
	    X.push_back(encode(y, m, d));
	}

	next(y, m, d);
	if (y >= 10000) break;
    }

    REP (i, X.size()-1) if (X[i] > X[i+1]) cerr << i << " " ;

    scanf("%d", &T);
    REP ($, T) {
	scanf("%d:%d:%d", &d, &m, &y);
	scanf("%d:%d:%d", &d2, &m2, &y2);
	int ans = upper_bound(X.begin(), X.end(), encode(y2, m2, d2)) - lower_bound(X.begin(), X.end(), encode(y, m, d));
	printf("%d\n", ans);
	    
    }
    // cerr << X.size() << "\n";
    return 0;
}
