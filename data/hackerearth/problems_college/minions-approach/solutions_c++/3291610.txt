#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef pair<ll, ll> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sz size
#define set0(a) memset(a, 0, sizeof(a))
#define setdp(a) memset(a, -1, sizeof(a))
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion
#define MOD 1000000007

struct sort_pred {
	bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) {
    	return left.first < right.first;
	}
};

bool prime[100005];
void SieveOfEratosthenes(ll n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    
    memset(prime, true, sizeof(prime));
 
    for (ll p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (ll i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
 	/*for (int p=2; p<=n; p++)
       if (prime[p])
          cout << p << " ";
    // Print all prime numbers
    */
}

ll gcd(ll a,ll b) {
	if (b == 0) return a;
	return(a % b == 0 ? b : gcd(b, a % b)); 
}

int main()
{
	SieveOfEratosthenes(100005);
	ll t ;
	cin >> t;
	while(t--){
		ll n;
		cin>>n;
		ll c = 0;
		for(ll i = 1 ; i < n ; i++){
			if(gcd(i,n) == 1) c++;
		}
		if(c == 1 || c == 0){
			cout <<"Incorrect\n";
			continue;
		}
		if(prime[c] == 1) cout <<"Correct\n";
		else cout << "Incorrect\n";
	}
	return 0;
}