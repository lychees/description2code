    #include <iostream>
    #include<queue>
    #include<vector>
    #include<algorithm>
    #include<cstdio>
    using namespace std;

    int main()
    {
    long long int n,c=0,i,j,x,y;
    scanf("%lld",&n);
    long long int ar[n+1][n+1];
    vector < vector <long long int> > vis((n+1), vector <long long int> (n+1));
    vector <long long int> v;
    queue <long long int> q;
    for(i=0;i<n;i++)
    {
    for(j=0;j<n;j++)
    scanf("%lld",&ar[i][j]);
    }
    for(i=0;i<n;i++)
    {
    for(j=0;j<n;j++)
    {
    c=0;
    if((ar[i][j]==1)&&(vis[i][j]==0))
    {
    q.push(i);
    q.push(j);
    c++;
    vis[i][j]=1;
    while(!q.empty())
    {
    x=q.front();
    q.pop();
    y=q.front();
    q.pop();
    if((x+1<n)&&(vis[x+1][y]==0)&&(ar[x+1][y]==1))
    {
    q.push(x+1);
    q.push(y);
    vis[x+1][y]=1;
    c++;
    }
    if((y+1<n)&&(vis[x][y+1]==0)&&(ar[x][y+1]==1))
    {
    q.push(x);
    q.push(y+1);
    vis[x][y+1]=1;
    c++;
    }
    if((x-1>=0)&&(vis[x-1][y]==0)&&(ar[x-1][y]==1))
    {
    q.push(x-1);
    q.push(y);
    vis[x-1][y]=1;
    c++;
    }
    if((y-1>=0)&&(vis[x][y-1]==0)&&(ar[x][y-1]==1))
    {
    q.push(x);
    q.push(y-1);
    vis[x][y-1]=1;
    c++;
    }
    }
    v.push_back(c);
    }
    }
    }
    sort(v.begin(),v.end());
    long long int k=v.size(),coun=0;
    cout<<v[k-1];
    return 0;
    }
