#include<bits/stdc++.h>

using namespace std;

int a[10000000];
vector<long long> vec;
vector<long long> ans;
#define MOD 1000000007
void sieve()
{
	a[0] = a[1] = 1;
	
	for(int i = 2; i < 10000000; i++)
	{
		if(a[i] == 0)
		{
			vec.push_back(i);
			
			for(int j = 2; (i*j) < 10000000; j++)
			{
				a[i*j] = 1;
			}
		}
	}
	
	long long prod = 1;
	for(int i = 0; i < (int)(vec.size()); i++)
	{
		prod = (prod * vec[i]) % MOD;
		ans.push_back(prod);
	}
}

string conv(int q)
{
	string ans = "";
	while(q  > 0)
	{
		int r = q%10;
		q /= 10;
		ans += (r+'0');
	}
	reverse(ans.begin(), ans.end());
	return ans;
}
string solve(int a, int b, int c)
{
	int co = 0;
	int flag = 0;
	string ans;
	while(co < c)
	{
		if(a == 0)
		{
			if(flag == 0)
			{
				if((int)(ans.size()) == 0) ans += '0';
				ans += ".";
				
			}
			for(; co < c; co++)
				ans += "0";
			break;
		}
		if(a >= b)
		{
			int rem = a%b;
			int q = a/b;
			string tempi = conv(q);
			ans += tempi;
			a = rem;
		}
		
		else if(a < b)
		{
			
			if(flag == 0)
			{
				flag = 1;
				if((int)(ans.size()) == 0) ans += '0';
				ans += ".";
				a *= 10;
				while(a < b && co < c)
				{
					a *= 10;
					ans += "0";
					co++;
				}
				if(co == c) break;
				int rem = a % b;
				int q = a/b;
				string tempi = conv(q);
				ans += tempi;
				co++;
				a = rem;
			}
			else
			{
				a *= 10;
				while(a < b && co < c)
				{
					a *= 10;
					ans += "0";
					co++;
				}
				if(co == c) break;
				int rem = a%b;
				int q = a/b;
				string tempi = conv(q);
				ans += tempi;
				co++;
				a =  rem;
			}
				
		}
	}
	if(c == 0)
	{
		int q = a / b;
		if(q != 0)
		{
			string tempi = conv(q);
			ans += tempi;
         }			
			else
			ans+="0";		
	}
	return ans;
}

int main()
{
	//sieve();
	int t; 
	cin >> t;
	while(t--)
	{
		int a,b, c;
		cin >> a >> b >> c;
		string ans = solve(a,b,c);
		cout << ans << endl;
	}
	return 0;
}
