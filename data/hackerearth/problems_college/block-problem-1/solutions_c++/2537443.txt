#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007;
#define gc() getchar_unlocked()
inline long long  int read_int()
{
    char c = gc();
    while(c<'0' || c>'9')
    c = gc();
    long long int ret = 0;
    while(c>='0' && c<='9')
    {
    ret = (ret<<3) + (ret<<1) + c - 48;
    c = gc();
    }
    return ret;
}
long long int power(long long int num,long long int p)
{		 
	if(p==0)
	{
		return 1;
	}
	if(p==1)
	{
		return num;
	}
	long long int val,i;
	val = num;
	for(i=2;i<=p;i++)
	{
		num = num*val;
		num = num%mod;
	}
	return num;
}
int main()
{
	long long int test,m,n,sum,i,j;
	long long int t[1001];
	long long int s[1001];
	long long int r[1001];	
	t[0] = t[1] = 1;
	t[2] = 2;
	t[3] = 4;
	t[4] = 8; 
	r[0] = r[1] = 1;
	for(int i=5;i<1001;i++)
	{
		t[i] = (t[i-1] + t[i-2] + t[i-3] + t[i-4])%mod;
	}		 
	s[0] = s[1] = 1;
	test = read_int();
	while(test--)
	{
		n = read_int();
		m = read_int();
		for(int i=0;i<=m;i++)
		{
		      r[i] =  power(t[i],n);
		}
		for(i=2;i<=m;i++)
		{
			sum = 0;
			for(j=1;j<i;j++)
			{
				sum = sum+(s[j]*r[i-j])%mod;
				sum = sum%mod;
		      	}
		      	s[i] = (r[i] - sum);
		      	s[i] = s[i]%mod;
		}
		while(s[m]<0)
		{
		      s[m] = s[m]+mod;
		}
		cout << s[m] << endl;
	}
	return 0;
}