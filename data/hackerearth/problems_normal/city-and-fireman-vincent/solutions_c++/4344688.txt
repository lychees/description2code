#include <iostream>
#include<limits.h>
#include<vector>
#include<algorithm>
#define mod 1000000007
using namespace std;
void initialize(int arr[], int n)
{ for(int i=1; i<=n; i++)
arr[i]=i;}
int root(int arr[], int i)
{ while(arr[i]!=i)
i=arr[i];
return i;}
void unio(int arr[], int r[], int a, int b)
{ int root_a=root(arr, a);
int root_b=root(arr, b);
if(root_a==root_b)
return ;
arr[root_a]=root_b;
}
int main()
{
    long int n, k, m=1, i, a, b;
    cin>>n;
    int r[n+1];
    for(i=1; i<=n; i++)
   cin>>r[i];
   
    cin>>k;
    int arr[n+1];
    initialize(arr, n);
    while(k--)
    { cin>>a>>b;
    unio(arr, r, a, b);}
   vector <int> s[n+1];
   for(i=1; i<=n; i++)
  {  
  	s[root(arr, i)].push_back(r[i]);
  }
  
   for(i=1; i<=n; i++)
   { if(s[i].size()!=0)
    { int x=*min_element(s[i].begin(), s[i].end());
      
    m=(m*count(s[i].begin(), s[i].end(), x))%mod;
      }}
      cout<<m;
     
    
    
       
   
    return 0;
}
