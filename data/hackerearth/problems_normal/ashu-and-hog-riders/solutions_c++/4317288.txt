/*
	by adityaghosh996
*/
#include<bits/stdc++.h>
#define ll long long int
#define in(a) scanf("%lld",&a);
#define pb(a) push_back(a)
using namespace std;
inline ll modPow(ll base,ll exp,ll modulus)
{
  base %= modulus;
  ll result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % modulus;
    base = (base * base) % modulus;
    exp >>= 1;
  }
  return result;
}
inline ll maximum(ll a,ll b,ll c){ll d=(a>=b)?a:b;ll e=(d>=c)?d:c;return e;}
inline bool inrange(ll n,ll i,ll j)
{
	if(i>=0 && i<n && j>=0 && j<n)
		return true;
	return false;
}
int main()
{
	ios_base::sync_with_stdio(0);;cin.tie(0);
	ll n;
	cin>>n;
	ll ar[n][n];
	for(ll i=0;i<n;i++)
	{
		for(ll j=0;j<n;j++)
			cin>>ar[i][j];
	}
	bool visit[n][n];
	memset(visit,false,sizeof(visit));
	ll c=INT_MIN;
	//source is (0,0)
	for(ll i=0;i<n;i++)
	{
		for(ll j=0;j<n;j++)
		{
			if(!visit[i][j] && ar[i][j]==1)
			{
				//bfs
				queue<pair<ll,ll> > cd;
				pair<ll,ll> p;
				p.first=i;p.second=j;
				cd.push(p);
				ll counter=0;
				while(!cd.empty())
				{
					//cout<<cd.size()<<endl;
					ll x=cd.front().first;ll y=cd.front().second;
					visit[x][y]=true;
					cd.pop();
					counter++;
				//	cout<<x<<"\t"<<y<<endl;
					if(inrange(n,x-1,y))
					{
						if(!visit[x-1][y] && ar[x-1][y]==1)
						{
							p.first=x-1;p.second=y;
							cd.push(p);
							visit[x-1][y] = true;
						}
					}
					if(inrange(n,x+1,y))
					{
						if(!visit[x+1][y] && ar[x+1][y]==1)
						{
							p.first=x+1;p.second=y;
							cd.push(p);
							visit[x+1][y] = true;
						}
					}
					if(inrange(n,x,y-1))
					{
						if(!visit[x][y-1] && ar[x][y-1]==1)
						{
							p.first=x;p.second=y-1;
							cd.push(p);
							visit[x][y-1] = true;
						}
					}
					if(inrange(n,x,y+1))
					{
						if(!visit[x][y+1] && ar[x][y+1]==1)
						{
							p.first=x;p.second=y+1;
							cd.push(p);
							visit[x][y+1] = true;
						}
					}
				}
				if(counter>c)
					c=counter;
			}
		}
	}
	cout<<c<<endl;
	return 0;
}