

/**
 	Name: Shivam Mishra
 	handle: shivam217
 **/
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <set>
#include <assert.h>
#include <cstring>
#include <string>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <time.h>
#include <climits>

using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;++i)
#define FORR(i,a,b) for(int i=a;i>=b;--i)
#define FORC(it,container) for(typeof(container.begin()) it=container.begin();it!=container.end();++it)
#define INT(x) scanf("%d",&x)
#define LLD(x) scanf("%lld",&x)
#define STR(x) scanf("%s",x)
#define CHAR(x) scanf("%c",&x)
#define PINT(x) printf("%d\n",x)
#define PLLD(x) printf("%lld\n",x)
#define CLR(x) memset(x,0,sizeof(x));
#define F first
#define S second
#define PB push_back

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef map<int,int> MII;
typedef vector<pair<int,int> > VPII;
typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<LL> VLL;
typedef vector<VI> VVI;
typedef vector<VLL> VVL;
typedef set<int> SI;
typedef set<char> SC;

const int INF = INT_MAX;
const int MAX = 100005;
const int MOD = 1e9 + 7;


int a[1005][1005],b[1005][1005];
int row_max[1005] , col_max[1005];


int main()
{
    int test; INT(test);
    while(test--)
    {
        int n,m; INT(n); INT(m);
        int ans=0;

        FOR(i,0,n)
            FOR(j,0,m)
             {
                  INT(a[i][j]);
                  assert(1<=a[i][j] && a[i][j]<=1E9);
             }

        FOR(i,0,n)
            FOR(j,0,m)
             {
                 INT(b[i][j]);
                 assert(1<=b[i][j] && b[i][j]<=1E9);
             }

        FOR(i,0,n)
        {
            int max1 = INT_MIN;
            FOR(j,0,m)
             {
                 // max1 = max(a[i][j],max1);
                  max1 = max(b[i][j],max1);
             }

            row_max[i] = max1;
        }

         FOR(i,0,m)
        {
            int max1 = INT_MIN;
            FOR(j,0,n)
            {
                max1 = max(a[j][i],max1);
                //max1 = max(b[j][i],max1);
            }

            col_max[i] = max1;
        }

        FOR(i,0,n)
        {
            FOR(j,0,m)
            {
                if(b[i][j]==row_max[i] && a[i][j]==col_max[j])
                    ++ans;
            }
        }

        PINT(ans);


    }

return 0;
}
