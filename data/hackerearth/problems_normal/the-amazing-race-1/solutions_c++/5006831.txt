

    #include <cstdio>
    #include <cassert>
    using namespace std;
    #define MAX 100010
    #define INF 1000000000
    #define MOD 1000000007
    int H[MAX], X[MAX], P[MAX], left[MAX], right[MAX];
    int main(){
    	int T, N, temp;
    	scanf("%d", &T);
    	assert(T>0 and T<=50);
    	while(T--){
    		scanf("%d", &N);
    		assert(N>0 and N<=100000);
    		for(int i=1;i<=N;i++){
    			scanf("%d", &H[i]);
    			assert(H[i]>=0 and H[i]<=1000000);
    		}
    		H[0] = INF;
    		left[0] = 0;
    		left[1] = 0;
    		X[1] = 0;
    		temp = H[1];
    		H[1] = INF;
    		for(int i=2;i<=N;i++){
    			if(H[i]<=H[i-1]){
    				X[i] = 1;
    				left[i] = i-1;
    			}else{
    				int j = i-1;
    				while(H[j]<H[i]){
    					j = left[j];
    				}
    				left[i] = j;
    				X[i] = i-j;
    			}
    		}
    		H[1] = temp;
    		H[N+1] = INF;
    		right[N+1] = N+1;
    		right[N] = N+1;
    		P[N] = 0;
    		H[N] = INF;
    		for(int i=N-1;i>0;i--){
    			if(H[i]<=H[i+1]){
    				P[i] = 1;
    				right[i] = i+1;
    			}else{
    				int j = i+1;
    				while(H[j]<H[i]){
    					j = right[j];
    				}
    				right[i] = j;
    				P[i] = j-i;
    			}
    		}
    		int ans, val;
    		long long t;
    		val = -1;
    		for(int i=1;i<=N;i++){
    			t = X[i] + P[i];
    			t = t*i;
    			t = t%MOD;
    			if(t>val){
    				val = t;
    				ans = i;
    			}
    		}
    		printf("%d\n", ans);
    	}
    	return 0;
    }

