#include <algorithm>
#include <cstdio>
#include <queue>
#include <set>
#include <stack>
#include <vector>

typedef long long ll;

using namespace std;

struct triangle {
	ll a, b, c;
	triangle(ll _a, ll _b, ll _c) {
		a = _a;
		b = _b;
		c = _c;
	}
	triangle() {}
};

bool compare_by_abc(const triangle &t1, const triangle &t2) {
	return (t1.a < t2.a) ||
           ((t1.a == t2.a) && (t1.b < t2.b)) || 
           ((t1.a == t2.a) && (t1.b == t2.b) && (t1.c < t2.c));
}

bool compare_triangles(const triangle &t1, const triangle &t2) {
	return t1.a == t2.a && t1.b == t2.b && t1.c == t2.c;
}

int main() {
	int n;
	
	scanf("%d", &n);
	vector<triangle> triangles(n);
	vector<ll> p(3);
	for(int i = 0; i < n; ++i) {
		scanf("%lld %lld %lld", &p[0], &p[1], &p[2]);
		sort(p.begin(), p. end());
		triangles[i] = triangle(p[0], p[1], p[2]);
	}
	sort(triangles.begin(), triangles.end(), compare_by_abc);
	
	int uniques = 0, counter = 0;
	
	if(n == 1)
		uniques = 1;
	
	for(int i = 0; i < n - 1; ++i) {
		if(compare_triangles(triangles[i], triangles[i+1]))
			counter++;
		else {
			if(counter == 0)
				uniques++;
			if(i == n - 2)
				uniques++;
			counter = 0;
		}
	}
	
	printf("%d\n", uniques);
	
    return 0;
}

