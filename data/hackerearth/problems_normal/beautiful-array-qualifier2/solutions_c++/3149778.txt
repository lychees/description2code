#include<bits/stdc++.h>
using namespace std;

#define sd(mark) scanf("%d",&mark)
#define ss(mark) scanf("%s",&mark)
#define sl(mark) scanf("%lld",&mark)
#define clr(mark) memset(mark,0,sizeof(mark))
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define sz(x) (int((x).size()))
#define PII pair<int,int>
#define PIL pair<int,long long>
#define PLL pair<long long,long long>
#define PIS pair<int,string>
#define MII map<int,int>
#define ll long long
#define FILEIO(name) \
    freopen(name".in", "r", stdin); \
    freopen(name".out", "w", stdout);
#define INF 2000000000 // 2 * 10^9
#define INFLL 1000000000000000000LL  // 10^18
#define M 1000000007

#define N 1000010


vector<ll> primes;
void runEratosthenesSieve(int upperBound) {
      int upperBoundSquareRoot = (int)sqrt((double)upperBound);
      bool *isComposite = new bool[upperBound + 1];
      memset(isComposite, 0, sizeof(bool) * (upperBound + 1));
      for (int m = 2; m <= upperBoundSquareRoot; m++) {
            if (!isComposite[m]) {
                  primes.PB(m);
                  for (int k = m * m; k <= upperBound; k += m)
                        isComposite[k] = true;
            }
      }
      for (int m = upperBoundSquareRoot; m <= upperBound; m++)
            if (!isComposite[m])
                    primes.PB(m);
      delete [] isComposite;
}



bool a[N];
list<ll> pr[26];
int main()
{
    //(2000000);
    ll n,k,m,x,i,j,p;
    sl(n);
    sl(k);
    k = min(k,25LL);
    sl(m);
    memset(a,1,sizeof(a));
    while(m--)
    {
        sl(x);
        if(x<N) a[x] = 0;
    }
    printf("1 ");
    pr[0].PB(1);
    ll cnt = 1;
    list<ll>::iterator it,tit;
    for(i=2;cnt<n;++i)
    {
        //cout << "i: " << i << endl;
        if(!a[i]) continue;
        /*if(i!=primes[cnt-1])
        {
            cout << " @cnt: " << cnt << " i: " << i << " here!!!!->" << endl << endl;
        }*/
        printf("%lld ",i);
        for(j=0;j<k;++j)
        {
            for(it = pr[j].begin();it!=pr[j].end();)
            {
                p = *it;
                    /*if(i==17 && j==5)
                    {
                        cout << " @j: " << j << "  p: " << p << " i: " << i << endl;
                        if(p==208) cout << " found 208 @ 17"<<endl;
                    }*/
                if(p*i>=N)
                {
                        //sz[j]--;
                       /* if(j==5  && i<=17 && p==208)
                        {
                            cout << " p:  " << p << " erased for i: " << i << "@ j: " << j << "!" << endl;
                        }*/
                    tit = it;
                    ++it;
                    pr[j].erase(tit);
                    continue;
                }
                        /*if(i==2||i==13||i==17)
                        {
                            cout << p*i << "\n";
                        }*/
                //cout << "--->"<<p*i<<"\n";
                a[p*i] = 0;
                        //if(i==17 && p*i==3536) cout << " found 3536!!" << endl;
                        //if(p*i== 208) cout<< "pushing 208 @" << min(j+1,k) << endl;
                pr[j+1].PB(p*i);
                ++it;
            }
        }
        //cout << "***********"<<endl << endl;
        cnt++;
    }
}
