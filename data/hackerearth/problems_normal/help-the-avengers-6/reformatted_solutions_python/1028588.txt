def binser(lis, x):
    if x >= lis[-1]:
        return len(lis)-1
    if x < lis[0]:
        return -1
    up = len(lis)-1
    do = 0
    while True:
        i = (up+do)/2
        if lis[i] == x:
            return i
        if lis[i] > x:
            up = i
        else:
            do = i
        if up-do <= 1:
            return do


sieve = {i: 0 for i in range(1, 10**6+1)}
sieve[1] = 1
for i in range(2, 10**6+1):
    if sieve[i] == 0:
        for j in range(2, 1+10**6/i):
            sieve[i*j] = 1
for _ in range(input()):
    n = input()
    s = map(int, raw_input().split())
    lis = []
    for i in range(n):
        if sieve[s[i]] == 0:
            lis.append(i)
    # print lis
    for j in range(input()):
        q = raw_input().split()
        x = int(q[1])
        y = int(q[2])
        if q[0] == 'C':
            x -= 1
            if sieve[s[x]] == 1 and sieve[y] == 0:
                k = binser(lis, x)
                lis = lis[:k+1]+[x]+lis[k+1:]
            elif sieve[s[x]] == 0 and sieve[y] == 1:
                k = binser(lis, x)
                lis = lis[:k]+lis[k+1:]
            s[x] = y
            # print lis
        else:
            if lis == []:
                print 0
            else:
                x -= 2
                y -= 1
                b = binser(lis, y)
                a = binser(lis, x)
                print b-a
