#include <iostream>
#include<cstring>
using namespace std;
struct Dict
{
	int freq;
	char ch;
};
char find(Dict a[],char code[][100], char s[],int len,int n)
{
	for(int i=0;i<n;i++)
	{
		if(strcmp(code[i],s)==0)
			return (a[i].ch);
	}
}
void bubble_sort(Dict arr[], int n)
 {
  for (int i = 0; i < n; ++i)
    for (int j = 0; j < n - i - 1; ++j)
      if (arr[j].freq > arr[j + 1].freq)
     {
        Dict temp = arr[j];
        arr[j]= arr[j + 1];
        arr[j + 1] = temp;
      }
  }	
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	int n;
    	cin>>n;
    	Dict a[n];
    	for(int i=0;i<n;i++)
    	{
    		cin>>a[i].ch>>a[i].freq;
    	}
    	int min=a[0].freq;
    	for(int i=1;i<n;i++)
    	{
    		if(a[i].freq<min)
    		{
    			min=a[i].freq;
    		}
    	}
    	//cout<<"Val of min : "<<min<<endl;
    	bubble_sort(a,n);
    	//cout<<"Sorted "<<endl;
    	for(int j=0;j<n;j++)
    	{
	    	for(int i=0;i<n-1;i++)
	    	{
	    		if(a[i].freq==a[i+1].freq)
	    		{
	    			if(a[i].ch>a[i+1].ch)
	    			{
	    				Dict temp = a[i];
	        			a[i]= a[i + 1];
	        			a[i + 1] = temp;
	    			}
	    		}
	    	}
    	}
    	//cout<<"Sorted 2"<<endl;
    	char code[n][100];
    	strcpy(code[0],"0");
    	//cout<<"co "<<code[0]<<endl;
    	for(int i=1;i<n-1;i++)
    	{
    		//cout<<"hello\n";
    		code[i][0]='1';
    		int k=0,f;
    		for(f=1;code[i-1][k]!='\0';f++)
    		{
    			code[i][f]=code[i-1][k++];
    			//cout<<code[i]<<endl;
    		}
    		code[i][f]='\0';
    		//cout<<code[i]<<endl;
    	}
    	strcpy(code[n-1],code[n-2]);
    	code[n-1][strlen(code[n-1])-1]='1';
    	//cout<<code[n-1]<<endl;
    	int j;
    	char sub[1300]="";
    	char encode[1300]="";
    	cin>>encode;
    	//cout<<encode<<endl;
    	for(int i=0;encode[i]!='\0';)
    	{
    		j=i;
    		//cout<<"value of j at i="<<i<<" iteration: "<<j<<endl;
    		while(encode[i]!='0'&&(i-j)<n-1)
    		{
    			i++;
    		}
    		if(encode[i]=='0'&&i-j<n-1)
    			i++;
    		//cout<<"value of I :: "<<i<<endl;
    		int k;
    		for( k=0;k<(i-j);k++)
    		{
    			sub[k]=encode[j+k];
    		}
    		sub[k]='\0';
    		//cout<<sub<<endl;
    		if(i==j)
    			i++;
    		cout<<find(a,code,sub,i-j,n);
    		
    	}
    	cout<<"\n";
    }
    return 0;
}
