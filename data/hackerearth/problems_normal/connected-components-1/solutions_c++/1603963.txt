/*
***************************************************************************************************************

							Author : Yash Sadhwani

**************************************************************************************************************
*/
#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define sd(x) scanf("%lf",&x)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mod 1000000007
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807


//qsort(ww,cc,sizeof(tp),compare);
/*int compare(const void *a,const void *b){
	ll y=((((tp*)a)->w)-(((tp*)b)->w));
	if(y>0)return 1;
	else if(y==0)return 0;
	else return -1;
}
bool way(ii x,ii y){
	return x.first<y.first or x.first==y.first and x.second<y.second;
}
*/


#define MAXN 100010
#define ls (node<<1)
#define rs ((node<<1)+1)
#define ii pair<int,int>

ll modpow(ll base, ll exponent,ll modulus){
    if(base==0&&exponent==0)return 0;
    ll result = 1;
    while (exponent > 0){
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}

ll fact[MAXN];

inline void pre(void){
	fact[0]=1;
	for(int i=1;i<MAXN;i++){
		fact[i]=(fact[i-1]*i)%mod;
	}
}

ll ncr(int n,int r){
	ll ret;
	if(r>n)return 0;
	ret=fact[n];
	ll foo,bar;
	foo=modpow(fact[n-r],mod-2,mod);
	bar=modpow(fact[r],mod-2,mod);
	ret=(ret*foo)%mod;
	ret=(ret*bar)%mod;
	return ret;
}

int N,M,C;

inline void ReadInput(void){
	si(N); si(M); si(C);
}

inline void solve(void){
	if(C==0 and N!=M){
		printf("0\n");
		return;
	}
	if(C==1){
		printf("%d\n",M+1 );
		return;
	}
	if(C==0){
		printf("%lld\n",1);
		return;
	}
	ll ans,foo,bar;
	foo=ncr(M-1,C-2)+2*ncr(M-1,C-1)+ncr(M-1,C);
	//cout<<ncr(M-1,C-2)<<" "<<ncr(M-1,C-1)<<" "<<ncr(M-1,C)<<endl;
	foo%=mod;
	bar=ncr(N-M-1,C-1);
	ans=(foo*bar)%mod;
	printf("%lld\n",ans );
}

inline void Refresh(void){
	
}

int main()
{	
	ios_base::sync_with_stdio(false);
	int t; si(t);
	pre();
	while(t--){
		ReadInput();
		solve();
	}
    return 0;
}