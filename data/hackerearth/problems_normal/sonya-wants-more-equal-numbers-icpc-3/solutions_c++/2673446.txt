#include<stdio.h>
#include<limits.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<sstream>
#include <map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#include <assert.h>
#define PB push_back
#define MP make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 1000000007
#define inf 1000000007
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define pw printf(" ")
typedef long long int ll;
using namespace std;
int fck[100005],dp[105],n,a[105];


int rec(int i,int sum){int k=0,j,ret=0;
if(i>=n){return 0;}
if(dp[i]!=-1){return dp[i];}
if(a[i]==sum){ret=max(ret,1+rec(i+1,sum));}
else{ret=max(ret,rec(i+1,sum));}

for(j=i;j<n;j++){
k+=a[j];
if(k==sum){ret=max(ret,1+rec(j+1,sum));break;}}

return dp[i]=ret;}


int main()
{int t;
t=1;
 while(t--){
    int i,j,k,l,x,y,mx=0;
    si(n);
    rep(i,n){si(a[i]);}
    
    for(i=0;i<=100000;i++){
    memset(dp,-1,sizeof(dp));
    fck[i]=rec(0,i);mx=max(mx,fck[i]);}
    
    //sort(fck,fck+100000);
    //int ans=fck[100000];
    pi(mx);pn;
    for(i=0;i<=100000;i++){
    if(fck[i]==mx){
    pi(i);pw;}}
    
    
    }
    
 
    return 0;
}