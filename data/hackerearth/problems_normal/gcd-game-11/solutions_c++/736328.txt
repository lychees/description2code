// {{{ Headers
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <cassert>
#include <cctype>
#include <cmath>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

#include <algorithm>
#include <deque>
#include <functional>
#include <iterator>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <fstream>
#include <iostream>
#include <sstream>

#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;
// }}}

typedef long long int64;
const int INF = 0x3f3f3f3f;
template <class T> inline int len (const T &a) { return a.size (); }

int memo [1005][1005];

int
solve (int a, int b) {
    if (a == 1) return 0;
    if (b == 1) return 1;
    if (memo [a][b] != -1) return memo [a][b];
    int ret = ! (solve (b - 1, a));
    if (__gcd (a, b) > 1) ret |= (! solve (b / __gcd (a, b), a));
    return memo [a][b] = ret;
}

int
main () {
#ifdef LOCALHOST
    freopen ("test.in", "r", stdin);
    // freopen ("test.out", "w", stdout);
#endif
    int T, a, b;
    scanf ("%d", &T);
    string s [2] = {"Chandu Don", "Arjit"};
    while (T--) {
        scanf ("%d %d", &a, &b);
        memset (memo, -1, sizeof (memo));
        int ret = solve (a, b);
        if (a == 1 && b == 1) printf ("Draw\n");
        else printf ("%s\n", s [ret].c_str ());
    }

    return 0;
}
