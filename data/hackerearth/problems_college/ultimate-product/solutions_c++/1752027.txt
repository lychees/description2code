#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<map>
#define mod 1000000007
using namespace std;
int p[100001],rankk[100001];
long long fact[100001];
map<int,int> mp;
map<int,int>::iterator it;
void create_set(int x)
{  p[x] = x; rankk[x] = 0; }
int find_parent(int x)
{             if(x!=p[x]) p[x]=find_parent(p[x]);  
              return p[x]; }
void merge(int x,int y)
{             int px,py;
	px=find_parent(x);   py=find_parent(y);
	if(px==py) return;
	if(rankk[px]>rankk[py]) p[py]=px;
	else p[px]=py;
	if(rankk[px]==rankk[py]) rankk[py]++;
}
void factorial()
{
	fact[0]=1;
	fact[1]=1;
	long long i;
	for(i=2;i<=100000;i++)
	fact[i]=(fact[i-1]*i)%mod;
}

int main()
{
  std:ios_base::sync_with_stdio(false);
  long long int n,k,a,b,i;
  long long ans=1;
  factorial();
//  for(i=0;i<20;i++)
//  cout<<fact[i]<<" ";
  cin>>n>>k;
  
  for(i=0;i<n;i++)
  create_set(i);
  
  for(i=0;i<k;i++)
  {
  	cin>>a>>b;
  	merge(a,b);
  }
  
  for(i=0;i<n;i++)
  {
  	mp[find_parent(i)]++;
  }
  
  for(it=mp.begin();it!=mp.end();it++)
  {
  	int val=it->second;
  	ans=(ans*fact[val])%mod;
  }
  cout<<ans<<"\n";
  return 0;
}
