#include <iostream>
#include <cmath>
using namespace std;

int weight[1005];
long long int value[1005];

long long int dp[1005][1005];

long long int knapsack(int n,int w)
{
	dp[0][0] = 0;
	for(int i=1;i<=n;i++)
	{
		for(int j=0;j<=w;j++)
		{
			if(weight[i-1]>j)
				dp[i][j] = dp[i-1][j];
			else
				dp[i][j] = max(dp[i-1][j],dp[i-1][j-weight[i-1]]+value[i-1]);
		}
	}
	return dp[n][w];
}

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		for(int i=0;i<n;i++)
			cin>>weight[i];
		for(int i=0;i<n;i++)
			cin>>value[i];
		for(int i=0;i<n;i++)
		{
			weight[i] = max(i+1-weight[i],0);
		}
		cout<<knapsack(n,m)<<endl;
	}
    return 0;
}
