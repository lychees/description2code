#include<stdio.h>
#include<vector>
#include<iostream>
typedef unsigned long long int ll;
#define MAX 1000000000000000000ll
using namespace std;
vector<ll>v;
ll get(ll l,ll r,ll x)
{
	if(l%x==0)
		return r/x-l/x+1;
	else return r/x-l/x; 
	
	//return r/x-(l-1)/x;
}
int count1(int x)
{
	int c=0;
	while(x)
	{
		if(x&1)
			c++;
		x/=2;
	}
	return c;
}
void getPrimes(int n,int i,int*p)
{
	v.erase(v.begin(),v.end());
	for(int j=0;j<(1<<n);j++)
	{
		if(count1(j)==i)
		{
			ll pro=1;
			int x=j;int index=0;
			while(x)
			{
				if(x&1)
				{
					
					ll q=MAX/pro;
					if(p[index]>q)
					{
						pro=1;
						break;
					}
					
					pro=pro*p[index];
				}
				index++;
				x/=2;
			}
			if(pro!=1)
				v.push_back(pro);
		}
	}
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		ll r,l;
		cin>>n>>l>>r;
		//cout<<"this is a test"<<r<<endl;
		int*p=new int[n];
		for(int i=0;i<n;i++)
			cin>>p[i];
		ll answer=0;
		for(int i=1;i<=n;i++)
		{
			int *arr,count;
			getPrimes(n,i,p);
			for(int j=0;j<v.size();j++)
			{
				//cout<<answer<<endl;
				if(i%2==0)
				{
					answer-=get(l,r,v[j]);
				}
				else 
				{
					answer+=get(l,r,v[j]);
				}
				//cout<<answer<<endl;
			}
		}
		cout<<answer<<endl;
	}
	return 0;
}