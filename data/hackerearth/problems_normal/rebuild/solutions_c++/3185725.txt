#include<bits/stdc++.h>
using namespace std;
const int nax = 1e5 + 5;
int par[nax], deg[nax];
int find(int a) { return a == par[a] ? a : par[a] = find(par[a]); }
void uni(int a, int b) { par[find(a)] = find(b); }
void te() {
	int n, m;
	scanf("%d%d", &n, &m);
	vector<vector<int>> w;
	while(m--) {
		int a, b, cost;
		scanf("%d%d%d", &a, &b, &cost);
		if(a > b) swap(a, b);
		w.push_back(vector<int>{cost,-a,-b});
	}
	sort(w.begin(), w.end());
	for(int i = 1; i <= n; ++i) {
		par[i] = i;
		deg[i] = 0;
	}
	long long total = 0;
	for(vector<int> edge : w) {
		int cost = edge[0];
		int a = -edge[1];
		int b = -edge[2];
		if(find(a) != find(b)) {
			uni(a, b);
			++deg[a];
			++deg[b];
			total += cost;
		}
	}
	printf("%lld\n", total);
	for(int i = 1; i <= n; ++i) printf("%d ", deg[i]);
	puts("");
}
int main() {
	int z;
	scanf("%d", &z);
	while(z--) te();
	return 0;
}