#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int > pii;
typedef pair<int,pii > piii;
//input
#define sc1(x) scanf("%d",&x);
#define sc2(x,y) scanf("%d%d",&x,&y);
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z);

/*
#define sc1(x) scanf("%lld",&x);
#define sc2(x,y) scanf("%lld%lld",&x,&y);
#define sc3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z);
*/

#define pb push_back
#define mp make_pair
#define ini(x,val) memset(x,val,sizeof(x));

#define fs first
#define sc second

//some constants
#define MOD 1000000007
#define inf 99999999
#define linf 99999999999999999ll	//long long inf
#define PI 3.1415926535897932384626
const double eps=0.000000000000001 ;

#define gcd __gcd
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define PrintCont(cont) {printf("\n----------------\n");\
for(typeof(cont.begin()) it = cont.begin();it!=cont.end();++it) cout<<*it<<" ";printf("\n----------------\n");}
#define all(v) v.begin(),v.end()

#define debug(x) cout<<#x<<" :: "<<x<<"\n";
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n";
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n";

#define LIM 100005
int dp[102][102][502],a[105][105],n,m;
bool isingrid(int r,int c)
{
	if(r>=0&&r<n&&c>=0&&c<m)return true;
	return false;
}
int solve(int r,int c,int close)
{
	if(r==n-1 && c==m-1)
	{
		if(a[r][c]<=close)
		return a[r][c];
	}

	int &ans = dp[r][c][close];
	//debug3(r,c,close);
	if(ans!=-1){/*printf("yoyo\n");*/return ans;}
	ans = -inf;
	close-=a[r][c];
	if(isingrid(r+1,c)&& a[r+1][c]<=close)
	{
		ans=max(ans,a[r][c]+solve(r+1,c,close));
	}
	if(isingrid(r,c+1)&& a[r][c+1]<=close)
	{
		ans=max(ans,a[r][c]+solve(r,c+1,close));
	}
	if(isingrid(r+1,c+1)&& a[r+1][c+1]<=close)
	{
		ans=max(ans,a[r][c]+solve(r+1,c+1,close));
	}
	return ans;

}
int main(int argc, char const *argv[])
{
	int t;
	sc1(t);
	while(t--)
	{
		ini(dp,-1);
		int k,i,j;
		sc3(n,m,k);
		for(i=0;i<n;++i)
		{
			for(j=0;j<m;++j)
				sc1(a[i][j]);
		}
		int ans = solve(0,0,k);
		if(ans<0)printf("-1\n");
		else printf("%d\n",ans);

	}
	
	return 0;
}