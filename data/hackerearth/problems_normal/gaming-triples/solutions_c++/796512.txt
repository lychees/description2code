#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <cassert>
#include <vector>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
 #define lim 100001
#define f first
#define s second
#define ll long long

ll n,i,j,q,x,cs,p,s1,s2,m;
ll tree[lim];
pair<ll,ll> A[lim];
vector<ll> a,b,c,d;

ll read(ll idx){
    ll sum = 0;
    while (idx > 0){
        sum += tree[idx];
        idx -= (idx & -idx);
     }
    return sum;
}
void update(ll idx ,ll val=1){
    while (idx <= n){
        tree[idx] += val;
        idx += (idx & -idx);
    }
}
vector<ll> go()
{
  ll i,x;
  vector<ll> V(n);
  sort(A,A+n);
  memset(tree,0,sizeof tree);
  for(i=0;i<n;i++)
  {
    x=-A[i].s;
    V[x-1]=read(x-1);
    update(x);
  }
  return V;
}
int main()
{
  cin>>cs;
  while(cs--)
  {
    cin>>n;
    for(i=0;i<n;i++)
    {
      scanf("%lld",&A[i].f);
      A[i].s=-(i+1);
    }
    cin>>p;
    a=go();
    for(i=0;i<n;i++)
      A[i].s=-n-A[i].s-1;
    b=go();
    for(i=0;i<n;i++)
      A[i].f=-A[i].f;
    d=go();
    for(i=0;i<n;i++)
      A[i].s=-n-A[i].s-1;
    c=go();
    for(i=s1=s2=0;i<n;i++)
    {
      s1+=a[i]*b[n-1-i];
      s2+=c[i]*d[n-1-i];
    }
    if(s1<=s2)
    {
      if(p)
        printf("Ananya\n");
      else
        printf("Sarika\n");
      m=2*s1;
    }
    else
    {
      if(!p)
        printf("Ananya\n");
      else
        printf("Sarika\n");
      m=2*s2+1;
    }
    cout<<m<<"\n";
  }
  return 0;
}
