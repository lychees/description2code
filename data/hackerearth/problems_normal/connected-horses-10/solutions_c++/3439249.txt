#include <bits/stdc++.h>
using namespace std;
#define MOD                     1000000007
#define pb(x)                   push_back(x)
#define mp(x,y)                 make_pair(x,y)
#define FF                      first
#define SS                      second
#define s(n)                    scanf("%d",&n)
#define sl(n)                   scanf("%lld",&n)
#define sf(n)                   scanf("%lf",&n)
#define ss(n)                   scanf("%s",n)
#define sc(n)                   {char temp[4]; ss(temp); n=temp[0];}
#define INF                     (int)1e9
#define LINF                    (long long)1e18
#define EPS                     1e-9
#define maX(a,b)                ((a)>(b)?(a):(b))
#define miN(a,b)                ((a)<(b)?(a):(b))
#define abS(x)                  ((x)<0?-(x):(x))
typedef long long ll;
typedef unsigned long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<ll> vl;
typedef vector<PII> VII;
typedef vector<TRI> VT;

ll t,n,m,q,x,y;
ll fact[1000009];
int mark[1009][1009];
PLL moves[8];

bool check(ll a,ll b)
{
   if(a>=1 && a<=n && b>=1 && b<=m)
      return true;
   return false;
}

ll BFS(ll i,ll j)
{
   queue<PLL> q;
   mark[i][j] = 2;
   q.push(make_pair(i,j));
   ll sz = 0;

   while(!q.empty())
   {
     sz++;
     PLL temp = q.front();
     q.pop();
     ll a = temp.first;
     ll b = temp.second;

     // Check for all eight moves

     for(int i=0;i<8;i++)
     {
       if(check(a+moves[i].first,b+moves[i].second) && (mark[a+moves[i].first][b+moves[i].second]==1))
       {
         q.push(make_pair(a+moves[i].first,b+moves[i].second));
         mark[a+moves[i].first][b+moves[i].second] = 2;  // Visited horse
       }
     }
   }
   return fact[sz];
}

void read()
{
    sl(n);
    sl(m);
    sl(q);
    memset(mark,0,sizeof(mark));

    for(long long int i=0;i<q;i++)
    {
        sl(x);
        sl(y);
        mark[x][y] = 1; // Presence of a horse.
    }

    moves[0] = make_pair(-2,-1);
    moves[1] = make_pair(-1,-2);
    moves[2] = make_pair(1,-2);
    moves[3] = make_pair(2,-1);
    moves[4] = make_pair(2,1);
    moves[5] = make_pair(1,2);
    moves[6] = make_pair(-1,2);
    moves[7] = make_pair(-2,1);
}

void factorial()
{
    fact[0] = 1;
    for(int i=1;i<1000009;i++)
    {
      fact[i] = (i*fact[i-1])%MOD;
    }
}

void solve()
{
    ll ans=1;

    for(ll i=1;i<=n;i++)
    {
        for(ll j=1;j<=m;j++)
        {
            if(mark[i][j] == 1)
            {
                ans = ((ans*BFS(i,j))%MOD);
            }
        }
    }

    cout << ans << endl;
}

int main()
{
  sl(t);
  memset(fact,0,sizeof(fact));
  factorial();
  while(t--)
  {
    read();
    solve();
  }
  return 0;
}
