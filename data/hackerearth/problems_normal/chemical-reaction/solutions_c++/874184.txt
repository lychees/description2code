    /*
    * Astar*
    */
    #include<iostream>
    #include<string>
    #include<cstdio>
    #include<cstring>
    #include<climits>
    #include<bits/stdc++.h>
    using namespace std;
    #define mp make_pair
    #define pb push_back
    #define ll long long
    #define VI vector<int>
    #define PII pair<int,int>
    #define VII vector<PII >
    #define ft first
    #define sd second
    #define rz(v,n) v.resize(n)
    #define VS vector<string>
    #define VL vector<ll>
    #define VLL vector<pair<ll,ll> >
    #define PLL pair< ll,ll >
    #define all(v) v.begin(),v.end()
    #define IT iterator
    // Input/Output
    #define print(v) printf("%d\n",v)
    #define printll(v) printf("%lld\n",v)
    #define scan(v) scanf("%d",&v)
    #define scanll scanf("%lld",&v)
    // loops
    #define FOR(i,a,b) for(int i=a;i<b;i++)
    #define rep(i,n) for(int i=0;i<n;i++)
    //extra
    #define ms(v,val) memset(v,val,sizeof(v))
    #define fill(v,val) fill(all(v),val)
    #define f_in(st) freopen(st,"r",stdin)
    #define f_out(st) freopen(st,"w",stdout)
    #define PIE 3.14159265358979323846264338327950
    #define MOD 1000000007
    #ifdef ONLINE_JUDGE
    inline void inp( int &n )
    {
    n=0;
    int ch=getchar_unlocked();int sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar_unlocked();}
    while( ch >= '0' && ch <= '9' )
    n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();
    n=n*sign;
    }
    #else
    inline void inp(int &n){
    cin>>n;
    }
    #endif
    #define N 500000
    VI st;
    void buildst(int idx,int ss,int se){
    if(ss==se){st[idx]=1;return ;}
    int mid=(ss+se)>>1;
    buildst(2*idx+1,ss,mid);
    buildst(2*idx+2,mid+1,se);
    st[idx]=st[2*idx+1]+st[2*idx+2];
    }
    void update(int idx,int ss,int se,int index){
    if(ss==se){st[idx]=0;return;}
    int mid=(ss+se)>>1;
    if(index<=mid) update(2*idx+1,ss,mid,index);
    else update(2*idx+2,mid+1,se,index);
    st[idx]=st[2*idx+1]+st[2*idx+2];
    }
    int query(int idx,int ss,int se,int k){
    if(ss==se) return ss;
    int mid=(ss+se)>>1;
    return st[2*idx+1]>=k?query(2*idx+1,ss,mid,k):query(2*idx+2,mid+1,se,k-st[2*idx+1]);
    }
    char str[N][15];
    int main(){
    //#ifdef ONLINE_JUDGE
    // f_in("in1.txt");
    //f_out("out1.txt");
    //#endif
    int t;
    inp(t);
    assert(t<=10);
    while(t--){
    int n;
    inp(n);
    assert(n<=1000000);
    VI arr(n);
    //VS str(n);
    int i;
    FOR(i,0,n) scanf("%s",str[i]);
    FOR(i,0,n) inp(arr[i]);
    int size=(ceil)(log2(n))+1;
    st.resize(1<<size);
    buildst(0,0,n-1);
    int MAX=-1;
    FOR(i,1,n){
    int x;
    inp(x);
    int getx=query(0,0,n-1,x);
    MAX=max(MAX,arr[getx]);
    printf("%s %d\n",str[getx],MAX);
    update(0,0,n-1,getx);
    }
    //x=1;
    int getx=query(0,0,n-1,1);
    MAX=max(MAX,arr[getx]);
    printf("%s %d\n",str[getx],MAX);
    update(0,0,n-1,getx);
    }
    return 0;
    }
