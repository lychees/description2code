#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
long long int mod=1000000007;
int main()
{
	ios_base::sync_with_stdio(false);
	long long int p1,p2,result,t,n;
    vector<vector<long long int> > ways(1000+1,vector<long long int> (1000+1,0));
    for(p1=0;p1<=1000;p1++)
    	ways[p1][0]=1;
    for(p1=1;p1<=1000;p1++)
    	for(p2=1;p2<=1000;p2++)
    		ways[p1][p2]=((ways[p1-1][p2]%mod)+(ways[p1-1][p2-1]%mod))%mod;
    cin>>t;
    while(t--)
    {
    	cin>>n;
    	result=1;
    	vector<long long int> maxx(n);
    	for(p1=0;p1<n;p1++)
    		cin>>maxx[p1];
    	sort(maxx.begin(),maxx.end());
    	for(p1=0;p1<n;p1++)
    	{
    		if(maxx[p1]<p1+1)
    			break;
    	}
    	if(p1<n)
    	{
    		cout<<0<<endl;
    		continue;
    	}
    	for(p1=0;p1<n;p1++)
    	{
    		result=((result%mod)*(ways[maxx[p1]-p1][1]%mod))%mod;
    		//cout<<ways[maxx[p1]-p1]<<endl;
    	}
    	cout<<result<<endl;
    }
    
    return 0;
}
