#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;
vector<vector<long long int> > v1,v2,v3;
map<long long int,long long int> mp1,mp2;
map<long long int,long long int>::iterator it;
long long int solve(long long int a,long long int b,long long int c)
{
	if(b==0)
		return 0;
		long long int p1,res=-1e18;
	if(a==c)
	{
		for(p1=0;p1<=100000;p1++)
		{
			if(v2[a][p1]>0&&v2[a][p1]<=b)
				res=max(res,p1);
		}
	}
	else
	{
		if(v3[a+1][b]==-1)
			v3[a+1][b]=solve(a+1,b,c);
		res=max(res,v3[a+1][b]);
		for(p1=0;p1<=100000;p1++)
		{
			if(v2[a][p1]>0&&v2[a][p1]<=b)
			{
				if(v3[a+1][b-v2[a][p1]]==-1)
					v3[a+1][b-v2[a][p1]]=solve(a+1,b-v2[a][p1],c);
				res=max(res,p1+v3[a+1][b-v2[a][p1]]);
			}
		}
	}
	return res;
}
int main()
{
	ios_base::sync_with_stdio(false);
    long long int n,m,p1,p2,result,p3,sum;
    cin>>n>>m;
    v1.resize(n+1);
    v2.resize(n+1);
    v3.resize(n+1);
    v3[0].resize(m+1,0);
    for(p1=1;p1<=n;p1++)
    {
    	cin>>p2;
    	v2[p1].resize(m+1,0);
    	v3[p1].resize(m+1,0);
    	while(p2--)
    	{
    		cin>>p3;
    		v1[p1].push_back(p3);
    	}
    }
    for(p1=1;p1<=n;p1++)
    {
    	for(p2=0;p2<v1[p1].size();p2++)
    	{
    		sum=0;
    		for(p3=p2;p3<v1[p1].size();p3++)
    		{
    			if(p3-p2+1>m)
    				break;
    			sum+=v1[p1][p3];
    			v2[p1][p3-p2+1]=max(v2[p1][p3-p2+1],sum);
    		}
    	}
    }
    
    for(p1=1;p1<=n;p1++)
    {
    	for(p2=1;p2<=m;p2++)
    	{
    		for(p3=0;p3<=p2&&p3<=v1[p1].size();p3++)
    			v3[p1][p2]=max(v3[p1][p2],v3[p1-1][p2-p3]+v2[p1][p3]);
    	}
    }
    cout<<v3[n][m];
    
    /*mp1[0]=0;
    for(p1=0;p1<=n;p1++)
    {
    	mp2.clear();
    	for(it=mp1.begin();it!=mp1.end();it++)
    	{
    		if(it->second==m)
    			continue;
    		for(p2=0;p2<v1[p1].size();p2++)
    		{
    			sum=0;
    			for(p3=p2;p3<v1[p1].size();p3++)
    			{
    				if(it->second+p3-p2+1>m)
    					break;
    				sum+=v1[p1][p3];
    				if(mp2[it->first+sum]==0)
    					mp2[it->first+sum]=it->second+p3-p2+1;
   					else
   						mp2[it->first+sum]=min(mp2[it->first+sum],it->second+p3-p2+1);
    			}
    		}
    	}
    	for(it=mp2.begin();it!=mp2.end();it++)
    	{
    		if(mp1[it->first]==0)
    			mp1[it->first]=it->second;
   			else
   				mp1[it->first]=min(mp1[it->first],it->second);
   		}
    } 
    if(mp1.empty())
    	cout<<0;
    else
    {
    	it=mp1.end();
    	it--;
    	while(it->first!=0&&it->second>m)
    		it--;
    	cout<<it->first;
    } */
    return 0;
}
