#include<iostream>
using namespace std;
void swap(int a[],int n, int m)
{
int t;
t =a[n];
a[n]=a[m];
a[m]=t;	
}
int part(int a[],int b [],int c[],int l,int h)
{
	int x = a[h];
	    int i = (l - 1);
	 
	    for (int j = l; j <= h- 1; j++)
	    {
	        if (a[j] <= x)
	        {
	            i++;
	            swap(a,i,j);
	            swap(b,i,j);
	            swap(c,i,j);
	        }
	    }
	    swap(a,i+1,h);
	    swap(b,i+1,h);
	    swap(c,i+1,h);
	    return (i + 1);	
}
void quicks(int a[],int b[],int c[],int l,int h)
{
	if(l<h)
	{
		
	int p;
	p = part(a,b,c,l,h);
	quicks(a,b,c,l,p-1);
	quicks(a,b,c,p+1,h);
	}
}
int main()
{
	int n;
	
	//int a[10],b[10];
	cin>>n;
	int *a= NULL;
	a =new int[n];
	int *b=NULL;
	b = new int[n];
	int *c=NULL;
	c=new int[n];
	for(int i=0;i<n;i++)
	{
	cin>>a[i];
	cin>>b[i];
	cin>>c[i];
}
	quicks(a,b,c,0,n-1);
	int m,nn,p=0;
	m= a[0];
	nn= a[0] + c[0];
	//cout<<endl;
	/*
	for(int i =0;i<n;i++)
	{
		cout<<a[i]<<" ";
		cout<<b[i]<<" ";
		cout<<c[i]<<endl;
	*/
	//cout<<endl;
	for(int i =1;i<n;i++)
	{
		if(nn>=a[i] && nn<a[i] + c[i])
		{
			nn =a[i] + c[i];
		}
		else if(nn<a[i])
		{
			p = nn - m + 1;
			m = a[i];
			nn = a[i] + c[i];
		
		}
		//cout<<nn<<" "<<m<<" "<<p<<endl;
		
	}
	p = p+ nn - m +1;
	cout<<p;
	delete [] a;
	delete [] b;
	//cout<<endl;
	return 0;
}
