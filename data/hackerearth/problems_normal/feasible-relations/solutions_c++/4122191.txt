#include <iostream>
#include <stack>
#include <vector>
#include <queue>
#include <stdio.h>
#include <map>

using namespace std;

int main()
{
    int t;

    cin >> t;

    while(t--)
    {
        long int n, k;

        cin >> n >> k;

        vector <pair<long int, long int>> _not;

        long int x, y;

        string s;

        vector <long int> graph[n+1];

        while(k--)
        {
            cin >> x >> s >> y;

            if(s=="!=")
            {
                _not.push_back(make_pair(x, y));
            }
            else
            {
                graph[x].push_back(y);

                graph[y].push_back(x);
            }
        }

        long int visited[n+1];

        for(long int i=0;i<=n;i++)
        {
            visited[i]=-1;
        }

        long int group=0, node;

        for(long int i=1;i<=n;i++)
        {
            if(visited[i]==-1)
            {
                group++;

                queue <long int> que;

                que.push(i);

                visited[i]=group;

                while(!que.empty())
                {
                    node=que.front();

                    que.pop();

                    for(long int j=0;j<graph[node].size();j++)
                    {
                        if(visited[graph[node][j]]==-1)
                        {
                            visited[graph[node][j]]=group;

                            que.push(graph[node][j]);
                        }
                    }
                }
            }
        }

        bool valid=true;

        for(long int i=0;i<_not.size();i++)
        {
            if(visited[_not[i].first]==visited[_not[i].second])
            {
                valid=false;

                break;
            }
        }

        if(valid)
        {
            cout << "YES" << endl;
        }
        else
        {
            cout << "NO" << endl;
        }
    }

    return 0;
}
