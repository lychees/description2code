#include <iostream>
using namespace std;
int prime[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59};
 
int good[24+1][60+1][60+1];
int bad[24+1][60+1][60+1];
 
void sol()
{
	int i,j,k,p;
	int n=0,t=0;
	for(i=23;i>=0;i--)
	{
		for(j=59;j>=0;j--)
		{
			for(k=59;k>=0;k--)
			{
				good[i][j][k]=n;
				bad[i][j][k]=t;
				int f=1;
				for(p=0;p<=16;p++)
				{
					if(i%prime[p]==0 && j%prime[p]==0 && k%prime[p]==0)
					{
						bad[i][j][k]++;
						t++;
						f=0;
						break;
					}
				}
				if(f)
				{
					good[i][j][k]++;
					n++;
				}
				//cout<<f<<" "<<k<<" "<<g<<" "<<b<<";;;";
			}
		}
	}
}
int gcd(int a,int b)
{
	if(a==0 || b==0)
	{
		return a+b;
	}
	if(a>b)
	{
		return gcd(b,a%b);
	}
	else
	{
		return gcd(a,b%a);
	}
}
 
int main()
{
	int t;
	cin>>t;
	sol();
	while(t--)
	{
		int h,m,s;
		cin>>h>>m>>s;
		int b = bad[h][m][s];
		int g = good[h][m][s];
		int k = (b==0 || g==0)?1:gcd(b,g);
		cout<<b/k<<":"<<g/k<<endl;
	}
    return 0;
}
