#include<bits/stdc++.h>

using namespace std;

int arr[1005][1005];
long long ans=INT_MIN,local=0;
queue< pair<int,int> > q;

long long bfs(int i, int j)
{
    q.push(make_pair(i,j));
    arr[i][j]=0;
    pair<int,int> p;
    local=1;

    while(!q.empty())
    {
        p=q.front();
        q.pop();
        if(arr[p.first-1][p.second]==1)
            {
                q.push(make_pair(p.first-1,p.second));
                arr[p.first-1][p.second]=0;
                local++;
            }

        if(arr[p.first+1][p.second]==1)
            {
                q.push(make_pair(p.first+1,p.second));
                arr[p.first+1][p.second]=0;
                local++;
            }

        if(arr[p.first][p.second-1]==1)
          {
                q.push(make_pair(p.first,p.second-1));
                arr[p.first][p.second-1]=0;
                local++;
            }

        if(arr[p.first][p.second+1]==1)
           {
                q.push(make_pair(p.first,p.second+1));
                arr[p.first][p.second+1]=0;
                local++;
            }
    }

    return local;
}


int main()
{
    int n;
    cin>>n;

    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++) cin>>arr[i][j];

        for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
        {
            if(arr[i][j]==1)
                ans=max(bfs(i,j),ans);
        }

        cout<<ans<<endl;
        return 0;
}
