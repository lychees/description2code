#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("algo.inp","r",stdin)
#define OUTPUT freopen("algo.out","w",stdout)
#define FOR(i,l,r) for(auto i=(l);i<=(r);i++)
#define REP(i,l,r) for(auto i=(l);i<(r);i++)
#define FORD(i,l,r) for(auto i=(l);i>=(r);i--)
#define REPD(i,l,r) for(auto i=(l);i>(r);i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=1e5+10;

int n,p[N],a[N][2],h[N];
map <int,int> ma;
ll solve(){
    ll ans=0;
    FOR(i,1,n) ma[abs(a[i][0]-a[i][1])]++;
    if (ma[0]==n){
        FOR(i,1,n) ans+=a[i][0];
        return ans;
    }
    for(auto x:ma) if (x.Y&1) return -1;
    FOR(i,1,n) p[i]=abs(a[i][1]-a[i][0]);
    sort(p+1,p+n+1);
    int n1=unique(p+1,p+n+1)-p-1;
    FOR(i,1,n){
        int idx=lower_bound(p+1,p+n1+1,abs(a[i][0]-a[i][1]))-p;
        if (h[idx]) ans+=max(a[i][0],a[i][1]);
        else ans+=min(a[i][0],a[i][1]);
        h[idx]^=1;
    }
    return ans;
}
void prepare(){
    int m;
    ll x;
    scanf("%d%d",&n,&m);
    FOR(i,1,n)
        FOR(j,0,1) scanf("%d",a[i]+j);
    ll poss=solve();
    while (m--){
        scanf("%lld",&x);
        if (poss==x) printf("YES\n");
        else printf("NO\n");
    }
}
int main(){
    prepare();
}
