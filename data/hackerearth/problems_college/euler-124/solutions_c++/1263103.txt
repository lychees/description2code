#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)

template<class T> inline void amin(T &a, T b) { if (a>b) a=b; }
template<class T> inline void amax(T &a, T b) { if (a<b) a=b; }

int T;
int K[100111];
int P[100111], R[100111];

int main() {
    scanf("%d", &T);
    REP (i, T) scanf("%d", K+i);
    // int M = *max_element(K, K+T);
    int M = 100000;
    REP (i, M+1) R[i] = P[i] = i;
    for (int i=2; i*i<=M; i++) {
	if (P[i] != i) continue;
	for (int j=i*i; j<=M; j+=i) P[i] = 0;
	for (int j=i*i; j<=M; j+=i*i) {
	    while (R[j]%(i*i)==0) R[j] /= i;
	}
    }
    //for (int i=1; i<=M; i++) cerr << i << " " << R[i] << "\n";
    vector<pair<int, int> > G;
    for (int i=1; i<=M; i++) G.push_back(make_pair(R[i], i));
    sort(G.begin(), G.end());
    REP (i, T) {
	printf("%d\n", G[K[i]-1].second);
    }
    return 0;
}
