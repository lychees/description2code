#include <iostream>
#include <stack>
#include <math.h>
#include <set>
#include <stdio.h>
#include <algorithm>
#include <assert.h>
#include <map>
#include <queue>
#include <utility>
#include <vector>
using namespace std;
#define endl "\n"
#define mp make_pair
#define int long long
#define pii pair<int , int>
inline int in(){int32_t x ; scanf("%d",&x) ; return x ;}
inline string getStr(){char ch[1000000] ; scanf("%s",ch) ;return ch;}
inline string getStr2() {char ch[5] ; scanf("%s",ch) ; return ch ;};
template<class P, class Q> inline P smin(P &a, Q b) { if (b < a) a = b; return a; }
template<class P, class Q> inline P smax(P &a, Q b) { if (a < b) a = b; return a; }
const int MAX_N = 3e5 + 10;
const int MOD = 1e9 + 7;
inline int gcd( int a, int b ) { return b == 0 ? a : gcd( b, a%b ); }
inline char getCh() {char ch ; scanf(" %c",&ch) ; return ch ;}
int a[MAX_N] , res , dp[MAX_N];
inline void solve( )
{
    int n = in() , k =in();
    for (int i = 0 ; i < n ; i ++){
        a[i] = in();
    }
    res = 0;
    for (int i = 0 ; i< n ; i ++)
    {
        dp[i] = 0;
        if (a[i] <= k){
            dp[i] = a[i] + (i ? dp[i - 1] : 0);
        }
        smax(res , dp[i]);
    }
    cout << res << "\n";
}
int32_t main()
{
    int t = in();
    while (t --) solve();
}