#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
#include <cassert>
#include <vector>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define lim 2010
#define inf 1000000000
#define pb push_back

int cs,c,i,j,k,n,m,res,s,t,x;
int M[lim][lim],P[lim],S[lim];
queue <int> Q;
vector<int> V[lim];

int bfs()
{
  int x,i,mn,j;

  while(!Q.empty())
    Q.pop();
  Q.push(s);
  memset(P,-1,sizeof P);
  P[s]=s;
  while(!Q.empty() && P[t]==-1)
  {
    x=Q.front();
    Q.pop();
	  //for(i=0;i<=t;i++)
	  for(j=0;j<S[x];j++)
    {
      i=V[x][j];
	    if(M[x][i]>0 && P[i]==-1)
	    {
	      P[i]=x;
		    Q.push(i);
	    }
	  }
  }
  if(P[t]==-1)
    return 0;
  x=t;
  mn=M[P[x]][x];
  while(x!=s)
  {
    mn=min(mn,M[P[x]][x]);
	  x=P[x];
  }
  x=t;
  while(x!=s)
  {
    M[P[x]][x]-=mn;
    M[x][P[x]]+=mn;
	  x=P[x];
  }
  return mn;
}
int main()
{
  scanf("%d",&cs);
  for(c=1;c<=cs;c++)
  {
    scanf("%d%d",&n,&m);
	  memset(M,0,sizeof M);
	  s=2*n;
	  t=s+1;
    for(i=0;i<=t;i++)
      V[i].clear();
    while(m--)
    {
      scanf("%d%d",&i,&j);
      i--;
      j--;
		  M[2*i][2*j+1]=1;
      V[2*i].pb(2*j+1);
      V[2*j+1].pb(2*i);
		}
    for(i=0;i<n;i++)
    {
	    M[s][2*i]=1;
	    M[2*i+1][t]=1;
      V[s].pb(2*i);
      V[2*i].pb(s);
      V[2*i+1].pb(t);
      V[t].pb(2*i+1);
	  }
    for(i=0;i<=t;i++)
      S[i]=V[i].size();
	  res=0;
	  while(1)
	  {
	    x=bfs();
	    if(!x)
	      break;
	    res+=x;
	  }
    printf("%d\n",n-res-1);
  }  
  return 0;
}


