#include <bits/stdc++.h>
#define ll long long
using namespace std;

template<typename T, typename U>
inline ostream& operator<<(ostream& os, const pair<T,U> &p){
	os<<"("<<p.first<<","<<p.second<<")";
	return os;
}
template<typename T>
inline ostream& operator<<(ostream& os, const vector<T> &v){
	os<<"[";
	for(auto it = v.begin() ; it != v.end() ; it++){
		if(it != v.begin())
			os<<",";
		os<<*it;
	}
	os<<"]";
	return os;
}

int main()
{
	//freopen("in.txt","r",stdin);
	int n;
	cin>>n;
	vector<pair<ll,int>> cum_sum;
	ll sum = 0;
	for(int i = 0 ; i < n ; i++){
		int num;
		cin>>num;
		sum+=num;
		cum_sum.push_back(make_pair(sum,i));
	}
	sort(cum_sum.begin(),cum_sum.end());
	int max_length = 0;
	int count = 0;
	int min_index = cum_sum[0].second;
	//cout<<"sorted list : "<<cum_sum<<endl;
	if(cum_sum[0].first >= 0){
		count = 1;
		max_length = cum_sum[0].second;
	}
	for(int i = 1 ; i < cum_sum.size() ; i++){
		auto p = cum_sum[i];
		if(p.first >= 0){
			if(p.second+1 > max_length){
				max_length = p.second+1;
				count = 1;
			}
			
			else if(p.second+1 == max_length)
				count += 1;
			
		}
		
		else{
			int diffIndex = p.second - min_index;
			if(diffIndex < 0)
				min_index = p.second;
			else{
				if(diffIndex > max_length){
					max_length = diffIndex;
					count = 1;
				}
				
				else if(diffIndex == max_length)
					count += 1;
			}	
		}
	}
	

if(count > 0)
	cout<<max_length<<" "<<count<<endl;
else
	cout<<-1<<endl;


    return 0;
}
