#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <map>
using namespace std;
//#define SIZE 9000000
//8388660

//bool arr[SIZE] = {false};



unsigned long long int primeFactors(int n,int m)	{
    vector<unsigned int> v1,v2,v3;
    unsigned long long int a = n, b = m ,res = 0;
    while (n % 2 == 0) {
        v1.push_back(2);
        n = n/2;
    }


    for (int i = 3; i <= sqrt(n); i = i+2)	{
        while (n % i == 0) {
            v1.push_back(i);
            n = n/i;
        }
    }

    if (n > 2)
        v1.push_back(n);


    while (m % 2 == 0) {
        v2.push_back(2);
        m = m / 2;
    }


    for (int i = 3; i <= sqrt(m); i = i+2)	{
        while (m % i == 0) {
            v2.push_back(i);
            m = m / i;
        }
    }

    if (m > 2)
        v2.push_back(m);

    sort(v1.begin(),v1.end());
    sort(v2.begin(),v2.end());

    v1.erase( unique ( v1.begin(),v1.end() ), v1.end() );
    v2.erase( unique ( v2.begin(),v2.end() ), v2.end() );

    set_intersection(  v1.begin(), v1.end(), v2.begin(), v2.end(), back_inserter( v3 ) );
    vector<unsigned int> :: iterator it;
    for ( it = v3.begin(); it != v3.end(); ++it)
    	if(!(a % *it) && !(b % *it))
    		++res;
    return res;
}


int main(void) {

    int t = 0;
    scanf("%d",&t);

    while(t--) {

    	unsigned long long int a = 0, b = 0, res = 0;

    	scanf("%llu %llu",&a,&b);
		a = pow(2,a) - 1;
    	b = pow(2,b) - 1;


    	res = primeFactors(a,b);


    	printf("%llu\n",res);

    }


    return 0;
}
