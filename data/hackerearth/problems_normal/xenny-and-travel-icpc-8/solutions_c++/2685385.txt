#include <bits/stdc++.h>
using namespace std;
#define INT_MAX 1000000000

    int n,m;

struct node{
    int x,y;//cost/at
};

 int a[1255][1255],b[1255][1255];
int d1[1255]={0},d2[1255]={0},d3[1255]={0},d4[1255]={0};

class mycomp
{  public:
  bool operator() (const node& lhs, const node& rhs) const
  {
   return lhs.x>rhs.x;
  }
};
void check(int a[1255][1255],int d[1255], int start, int end){
    priority_queue<node,vector<node>,mycomp> my;
    bool v[1255];
    for(int i=0;i<n;i++){
        d[i]=INT_MAX;
        v[i]=false;
    }
    my.push({0,start});
    while(!my.empty()){
    node tmp=my.top();
    my.pop();
    if(v[tmp.y])continue;
    d[tmp.y]=tmp.x;
    v[tmp.y]=true;
   // cout<<"assigning "<<tmp.y<<"--"<<tmp.x<<endl;
    //if(tmp.y==end)return;
    for(int i=0;i<n;i++) {
    
      if(!v[i]){  int cost=tmp.x+a[tmp.y][i];
      if(cost<d[i]){
        my.push({cost,i});
        d[i]=cost;
      }
      }
    }
    }
    
}


int main()
{   
    ios_base::sync_with_stdio(0); cin.tie(NULL);
   cin>>n;
   for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            cin>>a[i][j];
        
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            cin>>b[i][j];
    int u,v;
    cin>>u>>v;
    u--,v--;
   // cout<<u<<v<<endl;
    check(a,d1,u,v);
    check(b,d3,u,v);
    for(int i=0;i<n;i++)
        for(int j=i;j<n;j++){
            swap(a[i][j],a[j][i]);
            swap(b[i][j],b[j][i]);
        }
    check(a,d2,v,u);
    check(b,d4,v,u);
  /*  for(int i=0;i<n;i++)cout<<d1[i]<<' ';cout<<endl;
    for(int i=0;i<n;i++)cout<<d2[i]<<' ';cout<<endl;
    for(int i=0;i<n;i++)cout<<d3[i]<<' ';cout<<endl;
    for(int i=0;i<n;i++)cout<<d4[i]<<' ';cout<<endl;
*/

int min=INT_MAX;
    for(int i=0;i<n;i++){
        if(i!=u && i!=v){
        int tmp=d1[i]+d4[i];
        if(tmp<min)min=tmp;
        }
    }
    for(int i=0;i<n;i++){
        if(i!=u && i!=v){
        int tmp=d2[i]+d3[i];
        if(tmp<min)min=tmp;
        }
    }
    cout<<min;
 
    return 0;
}
