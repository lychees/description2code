__author__ = 'legion'

from sys import stdin, stdout
import itertools

def kbits(n, k):
    result = []
    for bits in itertools.combinations(range(n), k):
        s = ['0'] * n
        for bit in bits:
            s[bit] = '1'
        s = int((''.join(s)), 2)
        result.append(s)
    return create_dict(result)


def create_dict(result):
    set_bits_sum = dict()
    set_bits_sum[result[len(result) - 1]] = result[len(result) - 1]
    i = len(result) - 2
    while i >= 0:
        set_bits_sum[result[i]] = (set_bits_sum[result[i + 1]] + result[i]) % (10 ** 9 + 7)
        i -= 1
    return set_bits_sum


def is_power2(num):
    return ((num & (num - 1)) == 0) and num > 0


def nearest_key(key):
    if is_power2(key):
        return (3 * key) / 4
    else:
        binary_no = "{0:b}".format(key)
        split_list = list(binary_no)
        i = 0
        counter = 0
        while i < len(split_list):
            if (counter != 2) and (split_list[i] == '1'):
                counter += 1
            elif counter == 2:
                split_list[i] = '0'
            i += 1
        return int((''.join(split_list)), 2)


set_dict_keys = kbits(63, 2)

iteration = int(stdin.readline())
for num in xrange(iteration):
    input_no = int(stdin.readline())
    if input_no < 3:
        stdout.write(str(0) + "\n")
    else:
        stdout.write(str(set_dict_keys[nearest_key(input_no)]) + "\n")
