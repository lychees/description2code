//karanaggarwal
#include<bits/stdc++.h>
using namespace std;

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

#define si(x) scanf("%d",&x)
#define F first
#define S second
#define PB push_back
#define MP make_pair

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;

int main()
{
    LL sum = 0;
    map<int,int> M;
    int N; si(N);
    int Q; si(Q);
    while(N--){
        int x,y;
        si(x); si(y); sum += min(x,y);
        M[abs(x-y)]++;
    }
    LL tadd = 0;
    bool can = true;
    for(auto c : M){
        if(c.S & 1){can = false; break;}
        tadd += ((LL)c.F * c.S)/2;
    }
    sum += tadd;
    while(Q--){
        LL x; scanf("%lld",&x);
        if(can and x==sum)
            printf("YES\n");
        else printf("NO\n");
    }
    return 0;	
}
