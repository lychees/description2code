
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;

#if !ONLINE_JUDGE
#include "debug.h"
#else
#endif

#define INF 10001000100LL
#define mod 1000000007

typedef long long int ll;
typedef unsigned long long llu;
typedef long double ld;

#define F first
#define S second
#define pb push_back
#define mk make_pair
#define pp pop_back
#define len(vale) strlen(vale)
#define sz(vale) (int)vale.size()
#define sq(A) ((A)*(A))
#define pc putchar_unlocked
#define gc getchar_unlocked
#define f(i12,fa,fb) for(i12=fa;i12<fb;i12++) 
#define fd(i12,fa,fb) for(i12=fa;i12>fb;i12--) 
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
#define bits(vale) __builtin_popcount(vale)
#define IO ios_base::sync_with_stdio(0); cin.tie(0)

#define set1(array,val,sz) for(int i13=0;i13<sz;i13++)array[i13]=val;
#define set2(array,val,sz1,sz2) for(int i13=0;i13<sz1;i13++)for(int i14=0;i14<sz2;i14++)array[i13][i14]=val;

#define all(a) a.begin(),a.end()
#define lb(a,x) (lower_bound(all(a),x)-a.begin())
#define ub(a,x) (upper_bound(all(a),x)-a.begin())

 
#define si(vale) scanf("%d",&vale)
#define pi(vale) printf("%d\n",vale)
#define pis(vale) printf("%d ",vale)
#define sl(vale) scanf("%lld",&vale)
#define pl(vale) printf("%lld\n",vale)
#define pls(vale) printf("%lld ",vale)
#define ss(vale) scanf("%s",vale)
#define ps(vale) printf("%s\n",vale)
#define sld(vale) scanf("%Lf",&vale)
#define pld(vale) printf("%0.12Lf\n",vale)


typedef pair<int,int> pr;
typedef vector<int> vt;
// min_heap
priority_queue<int,vector<int>,std::greater<int> > pn;
// max_heap
priority_queue<int> pm;
//-----------------------------------------------------------


#define tcs() int testcase; si(testcase);while(testcase--) 
bool deb=false;
const int N=100011;
int k;
vector<int> gr[N];
int vs[N];
int sts[N],ct=0;

void dfs(int v)
{
       int i,j;vs[v]=1;
       f(i,0,sz(gr[v]))
       {
              if(vs[gr[v][i]]==0)
              {
                     dfs(gr[v][i]);
                sts[v]+=sts[gr[v][i]];
              }
       }

       sts[v]++;

       if(sts[v]>=k)
              sts[v]=0,ct++;
}


int main(){
       //IO;
       //clock_t tStart = clock();
       int i,j,n;
       //tcs(){
       si(k);si(n);
       f(i,2,n+1)
       {
              si(j);
              gr[i].pb(j);
              gr[j].pb(i);
       }

       dfs(1);
       pi(ct);

 
       //exectime();
       return 0;        
}
