#include<bits/stdc++.h>
using namespace std;
//typedef vector<int> v;
typedef pair<int,int> ii;
typedef vector<ii> vii;
vector <vii> Adjlist;
queue <int> q;
int bfs_num[100005]={0};
int bfs(int u,int vis)
{
    q.push(u);
    while(!q.empty())
    {
    	u=q.front();
        //cout<<u;
        //printf("Vertex: %d Layer: %d\n",u,dist[u]);
        bfs_num[u]=vis;
        q.pop();
        for(vii::iterator v=Adjlist[u].begin();v!=Adjlist[u].end();v++)
        {
            if(bfs_num[v->first]==0)
            {
                bfs_num[v->first]=vis;

            	q.push(v->first);
            }
        }
    }

}
int a[100005],b[100005];
int main()
{
    int n,k,v,u,t,i;
    scanf("%d",&t);
    while(t--)
    {

        scanf("%d%d",&n,&k);
        for(i=1;i<=n;i++)
        scanf("%d",&a[i]);

        for(i=1;i<=n;i++)
        scanf("%d",&b[i]);

        Adjlist.clear();
        Adjlist.assign(n+1,vii());
        while(k--)
        {
            scanf("%d%d",&u,&v);
            Adjlist[a[u]].push_back(ii(a[v],1));
            Adjlist[a[v]].push_back(ii(a[u],1));
        }
        memset(bfs_num,0,sizeof(bfs_num));
        int count1=1;
        int flag=1;
        for(i=1;i<=n;i++)
        {
            if(a[i]!=b[i])
            {
                if(bfs_num[a[i]]==bfs_num[b[i]])
                {
                    if(bfs_num[a[i]]!=0)
                    continue;
                    else
                    {
                        bfs(a[i],count1++);
                        if(bfs_num[a[i]]==bfs_num[b[i]])
                        continue;
                        else
                        {
                            flag=0;
                            break;
                        }
                    }
                }
                else
                {
                    flag=0;
                    break;

                }
            }
        }
        if(flag==0)
        printf("NO\n");
        else
        printf("YES\n");
    }
    return 0;
}
