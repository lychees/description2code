#include <bits/stdc++.h>
using namespace std;
long long int ok(long long int i, long long int j, long long int n) {
	if (i >= n || j >= n || i < 0 || j < 0) return 0;
	return 1;
}
long long int grph(vector < vector <long long int> > &a,long long int i,long long int j,vector < vector <long long int> > &vis,vector < vector <long long int> > &dp) {
	long long int n = a.size();
	if (vis[i][j] == 1) {
		return dp[i][j]%1000000007;
	}
	if (ok(i+1,j,n) && a[i][j] > a[i+1][j]) {
		if (vis[i+1][j] == 1) {
			dp[i][j] = (dp[i][j] + dp[i+1][j])%1000000007;
		}
		else {
			dp[i+1][j] = grph(a,i+1,j,vis,dp);
			vis[i+1][j] = 1;
			dp[i][j] = (dp[i][j] + dp[i+1][j])%1000000007;
		}
	}
	if (ok(i,j+1,n) && a[i][j] > a[i][j+1]) {
		if (vis[i][j+1] == 1) {
			dp[i][j] = (dp[i][j] + dp[i][j+1])%1000000007;
		}
		else {
			dp[i][j+1] = grph(a,i,j+1,vis,dp);
			vis[i][j+1] = 1;
			dp[i][j] = (dp[i][j] + dp[i][j+1])%1000000007;
		}
	}
	if (ok(i-1,j,n) && a[i][j] > a[i-1][j]) {
		if (vis[i-1][j] == 1) {
			dp[i][j] = (dp[i][j] + dp[i-1][j])%1000000007;
		}
		else {
			dp[i-1][j] = grph(a,i-1,j,vis,dp);
			vis[i-1][j] = 1;
			dp[i][j] = (dp[i][j] + dp[i-1][j])%1000000007;
		}
	}
	if (ok(i,j-1,n) && a[i][j] > a[i][j-1]) {
		if (vis[i][j-1] == 1) {
			dp[i][j] = (dp[i][j] + dp[i][j-1])%1000000007;
		}
		else {
			dp[i][j-1] = grph(a,i,j-1,vis,dp);
			vis[i][j-1] = 1;
			dp[i][j] = (dp[i][j] + dp[i][j-1])%1000000007;
		}
	}
	vis[i][j] = 1;
	return dp[i][j]%1000000007;
}
int main()
{
    long long int i,j,n,s=0;
    cin >> n;
    vector < vector <long long int> > a(n,vector <long long int> (n,0)),vis(n,vector <long long int> (n,0)),dp(n, vector <long long int> (n,1));
    for (i = 0; i < n; i++) {
    	for (j = 0; j < n ; j++) {
    		cin >> a[i][j];
    	}
    }
    for (i = 0; i < n; i++) {
    	for (j = 0; j < n ; j++) {
    		if (vis[i][j] == 0) {
    			dp[i][j] = grph(a,i,j,vis,dp)%1000000007;
    			vis[i][j] = 1;
    		}
    	}
    }
    for (i = 0; i < n; i++) {
    	for (j = 0; j < n ; j++) {
    		s = (s + dp[i][j])%1000000007;
    	}
    }
    cout << s << endl;
    return 0;
}
