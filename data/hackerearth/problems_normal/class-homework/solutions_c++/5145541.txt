#include <iostream>
#include<algorithm>
#include<string.h>
using namespace std;
char str[21];
long long int dp[21][21];
long long int max(long long int a,long long int b)
{
	if(a>b)
	return a;
	else
	return b;
}

int valid(int a,int b)
{
    if(a == b)
    return 1;
    else
    {
    	if(dp[a][b]>1000000000000ll)
    	return 0;
        if(str[a]!='0')
            return 1;
        else
            return 0;
    }
}

int main()
{
	int n;
	cin>>n;
	while(n--)
	{
		
		cin>>str;
		int len = strlen(str);
		
		for(int i=0;i<len;i++)
		{
			for(int j=i;j<len;j++)
			{
				if(i==j)
					dp[i][j] = str[i]-'0';
				else
					dp[i][j] = dp[i][j-1]*10+(str[j]-'0');
				
			}
		}
		if(strlen(str)<4)
			cout<<"unlucky"<<endl;
		else
		{
			long long int sum=-1;
			for(int mid = 2;mid<=len-2;mid++)
			{
				long long int temp1=-1,temp2=-1;
				
				for(int i=1;i<mid;i++)
				{
					if(valid(0,i-1) && valid(i,mid-1))
					{
						temp1 = max(temp1,dp[0][i-1] + dp[i][mid-1]);
						
					}
				//	cout<<temp1<<" ";
					
				}
				for(int j=mid;j<len-1;j++)
				{
					if(valid(mid,j) && valid(j+1,len-1))
						temp2 = max(temp2,dp[mid][j] + dp[j+1][len-1]);
				//	cout<<temp2<<endl;
				}
				if(temp1!=-1 && temp2!=-1)
				sum = max(temp1+temp2,sum);
			}
			if(sum==-1)
				cout<<"unlucky"<<endl;
			else
				cout<<sum<<endl;
		}
	}
    return 0;
}
