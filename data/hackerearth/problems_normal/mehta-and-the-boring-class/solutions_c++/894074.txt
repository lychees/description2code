#include<iostream>
#include<cmath>
#include<cstdio>

using namespace std;

long long int * f = new long long int[1000000];
long long int * sum = new long long int[1000000];

bool prime[1000000];

void primes() {
        prime[1] = false;
        prime[2] = true;
        for(long long int i=2;i<=1000;i++) {
                if(prime[i]) {
                        //strike off all its multiples
                        long long int prod = i*2;
                        while(prod<=1000000) {
                                prime[prod] = false;
                                prod += i;
                        }
                }
        }
}

void preproc() {
        int j = 0;
        f[1] = 0;
        f[2] = 1;
        for(long long int i=3;i<=1000000;i++) {
                for(j=2;j<=sqrt(i);j++) {
                        if(prime[j] && i%j == 0) {
                                f[i] = 1 + f[i/j];
                                break;
                        }
                }
                if(j > sqrt(i)) {
//                      cout << i << " is prime \n";
                        f[i] = 1;
                }
        }

        //now accumulate the sums
        sum[1] = 0;
        sum[2] = 1;
        for(long long int i = 3;i<=1000000;i++)
                sum[i] = sum[i-1]+f[i];
}

int main() {
        long long int tc,a, b;
        scanf("%lld", &tc);
        for(long long int i=0;i<=1000000;i++)
                prime[i] = true;
        primes();
        preproc();
//      cout << "f[43] = " << f[43] << " f[2323] = " << f[2323] << endl;
        for(long long int t=0;t<tc;t++) {
                scanf("%lld %lld",&a,&b);
                printf("%lld\n",(sum[b] - sum[a-1]));// << endl;
        }
        return 0;
}
