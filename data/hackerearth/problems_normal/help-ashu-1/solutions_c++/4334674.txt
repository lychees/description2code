#include <iostream>
#include <bits/stdc++.h>
#define ll long long int
#define mod 1000000007

using namespace std;
int tree[400005];
vector<int>v;

void build(int i,int s,int e)
{
        if(s==e)
                tree[i] = v[s];
        else
        {
                int mid = (s+e)/2;
                build(2*i,s,mid);
                build(2*i+1,mid+1,e);
                tree[i] = tree[i*2] + tree[i*2+1];
        }
}

void update(int i,int s,int e,int idx,int val)
{
        if(s==e)
        {
                tree[i] = val;
                v[idx] = val;
        }
        else
        {
                int mid = (s+e)/2;
                if(idx<=mid)
                        update(2*i,s,mid,idx,val);
                else
                        update(i*2+1,mid+1,e,idx,val);
                tree[i] = tree[2*i] + tree[2*i+1];
        }

}

int query(int i,int s,int e,int l ,int r)
{
        if(r<s || e<l)
                return 0;
        if(l<=s && e<=r)
                return tree[i];
        int mid = (s+e)/2;
        int p1 = query(2*i,s,mid,l,r);
        int p2 = query(2*i+1,mid+1,e,l,r);
        return (p1+p2);
}


int main()
{


        int n,q,inp,l,r,i;
        cin>>n;
        v.push_back(0);
        for(i=1;i<=n;i++)
        {
                cin>>inp;
                if(inp%2)
                        inp = 0;
                else
                        inp = 1;
                v.push_back(inp);
        }
        build(1,1,n);
        cin>>q;
        while(q--)
        {
                cin>>inp>>l>>r;
                if(!inp)
                {
                        if(r%2)
                                r = 0;
                        else
                                r = 1;
                        update(1,1,n,l,r);
                }
                else if(inp==1)
                        cout << query(1,1,n,l,r) << endl;
                else
                        cout << r-l+1-query(1,1,n,l,r) << endl;

        }
        return 0;
}
