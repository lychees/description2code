// Subject:

#include <bits/stdc++.h>
using namespace std;

#define debug(args...) fprintf(stderr,args)
#define quad(x) ((x)*(x))

typedef long long lint;
typedef pair<int,int> pii;
typedef pair<lint,lint> pll;

const int INF = 0x3f3f3f3f;
const lint LINF = 0x3f3f3f3f3f3f3f3fll;
const int MAXD = 1e6+10;

int bit[MAXD];

void bit_update(int i,int val) {
    for(;i<MAXD;i+=i&-i)
        bit[i] += val;
}

int bit_query(int i) {
    int ret = 0;
    for(;i>0;i-=i&-i) ret += bit[i];
    return ret;
}

int main() {
    int n;
    scanf("%d",&n);
    vector<int> blue;
    vector<int> red;
    for(int a=0;a<n;++a) {
        int c,d;
        scanf("%d%d",&c,&d);
        if(c == 1) blue.push_back(d);
        else red.push_back(d);
    }
    sort(blue.begin(),blue.end());
    sort(red.begin(),red.end());
    int ans = 0;
    int at = 0;
    for(int a = 0; a < blue.size(); ++a) {
        while(at < red.size() && 2 * quad(red[at]) <= quad(blue[a]) ) at++;
        if(at == red.size()) break;
        if(quad(red[at]) < 2 * quad(blue[a])) {
            ans++;
            at++;
        }
    }
    printf("%d\n",ans);    
    return 0;
}
