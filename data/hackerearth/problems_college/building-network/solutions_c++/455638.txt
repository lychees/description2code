
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.
 * Created By : Vishwas Tripathi
 * CSE, MNNIT-ALLAHABAD
 * vishfrnds@gmail.com
 _._._._._._._._._._._._._._._._._._._._._.*/


#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
using namespace std;

#define MP make_pair
#define pb push_back
#define rep(i,n) for(i=0;i<n;i++)
#define REP(i,a,b) for(i=a;i<=b;i++)
#define X first
#define Y second
#define all(c) c.begin(),c.end()

#define tr(c, itr) for(itr = (c).begin(); itr != (c).end(); itr++)
//#define tr(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define present(container, element) (container.find(element) != container.end()) //for set,map,etc
#define cpresent(container, element) (find(all(container),element) != container.end()) //for vectors

 typedef long long ll;
 typedef vector<int> vi;
 typedef vector< vi > vvi;
 typedef pair< int,int > ii;

#define sz(a) int((a).size())]
#define clr(a) memset(a,0,sizeof(a))
#define ini(a) memset(a,-1,sizeof(a))


//i/o
#define inp(n) scanf("%d",&n)
#define inp2(n,m) scanf("%d%d",&n,&m)
#define ins(s) scanf("%s",s);
#define out(n) printf("%d\n",n)
#define out2(n,m) printf("%d %d\n",n,m)
#define inc(n) scanf("%c",&n)

//cost
#define MOD 1000000007
#define MOD_INV 1000000006
#define MAX 100009
#define INF 999999999


/*
#define inll(n) scanf("%I64d",&n)
#define inll2(n,m) scanf("%I64d%I64d",&n,&m)
#define outll(n) printf("%I64d\n",n)
#define outll(n) printf("%I64d\n",n)
#define outll2(n,m) printf("%I64d %I64d\n",n,m)
*/

#define inll(n) scanf("%lld",&n)
#define inll2(n,m) scanf("%lld%lld",&n,&m)
#define outll(n) printf("%lld\n",n)
#define outll(n) printf("%lld\n",n)
#define outll2(n,m) printf("%lld %lld\n",n,m)

#include <iostream>
#include <set>
#include <vector>
#define pb push_back
#define ii pair<int, int>
#define MP make_pair
#define MAX 99999999
using namespace std;
int dijkstra(vector<ii> G[], int n, int start, int end)
{
	int ans = 0, i;
	set<ii> q;
	int dist[n + 1];
	for(i = 1; i <= n; i++)
		dist[i] = MAX;
	q.insert(MP(0, start));
	dist[start] = 0;
	while(!q.empty())
	{
		ii top = *q.begin();
		q.erase(q.begin());
		int v = top.second, d = top.first;
		cout<<v<<" "<<d<<endl;
		if(v == end)
			return dist[end];
		vector<ii>::iterator it;
		for(it = G[v].begin(); it != G[v].end(); it++)
		{
			int v2 = it->first, cost = it->second;
			if(dist[v2] > dist[v] + cost)
			{
				if(dist[v2] != MAX)
					q.erase(MP(dist[v2], v2));
				dist[v2] = dist[v] + cost;					
				q.insert(MP(dist[v2], v2));
			}
		}
	}
	return -1;
}

int main()
{
	int n,  s, x, y, c, t, i;
	inp(t);
	while(t--)
	{
		inp(n);
		
		ll mini = 1009999999, ans = 0, e;
		rep(i, n)
		{
			inll(e);
			ans+=e;
			mini = min(e, mini);
		}
		ans -= mini;
		ans += mini*(n - 1);
		outll(ans);
	}
	/*vector<ii> G[n+1];
	for(int i = 0; i < e; i++)
	{
		cin>>x>>y>>c;
		G[x].pb(MP(y, c));
		G[y].pb(MP(x, c));		
	}
	cin>>s>>e;
	cout<<dijkstra(G, n, s, e);
	*/
	return 0;
}