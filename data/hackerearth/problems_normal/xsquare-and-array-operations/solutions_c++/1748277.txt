//Author : Jatin Goyal
//codecracker4

#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007  //NA
#define N 111111
#define ll long long int
#define dt int
#define all(c) c.begin(), c.end()
#define dcl(a) memset(a,0,sizeof(a))
#define rep(i,a,b) for(dt i=a;i<=(dt)(b);i++)
#define tr(container, it) for(vector<dt> ::iterator it= container.begin(); it!=container.end(); it++)
#define trp(container, it) for(vector<pair<dt,dt> >::iterator it = container.begin(); it!=container.end(); it++)
#define tra(container, it) for(typeof(container.begin()) it = container.begin(); it!=container.end(); it++)
#define cc1(a)cout<<#a<<": "<<a<<endl;
#define cc2(a,b)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<< endl;
#define cc3(a,b,c)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<<" , "<<#c<<": "<<c<<endl;
#define cc4(a,b,c,d)cout<<#a<<": "<<a<<" , "<<#b<<": "<<b<<" , "<<#c<<": "<<c<<" , "<<#d<<": "<<d<<endl;
#define pr pair<dt,dt>  //NA
#define mp(a,b) make_pair(a,b)
#define pb push_back  //NA
#define gc getchar  //NA
#define F first
#define S second
int sarr[N],level[N],n;
multiset<pr>m;
set<int>s;
inline int inpi(){char c = gc(); int ret = 0, sign = 1;while((c<'0' || c>'9') && c!='-') c = gc();if(c=='-'){sign = -1;c = gc();}while(c>='0' && c<='9'){ret = 10 * ret + c - 48;c = gc();}if(sign<0) ret = -ret;return ret;}

int main()
{
	//freopen("##inp.cpp","r",stdin);
    //freopen("##out.cpp","w",stdout);
	//ios_base::sync_with_stdio(0);
	int t,n,one,two,ans;
	t=inpi();
	while(t--)
    {
        cin>>n;
        rep(i,0,n-1) {level[i]=inpi(); m.insert(mp(level[i],i)); s.insert(i);}
        level[n]=MOD;

        int dum=n-1;
        ll final=0;
        while(dum--)
        {
            one=n;
            two=n;

            int ind=m.begin()->S;
           // tra(s,it) cout<<*it<<' ';
            set<int>::iterator it=s.upper_bound(ind);
            if(it!=s.end())one=*it;
            it=s.lower_bound(ind);
            if(it==s.begin());
            else two=*(--it);

            s.erase(ind);
            if(level[one]<level[two])ans=one;
            else ans=two;
            m.erase(m.begin());
          //  cc4(ind,ans,one,two);
            final+=level[ans];
        }
        m.clear();
        s.clear();
        printf("%lld\n",final);
    }

}
