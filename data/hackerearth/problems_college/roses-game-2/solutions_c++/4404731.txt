/* NumeriX
   "Hard Work Beats Talent
   When Talent Doesn't Work Hard"
*/
#include <bits/stdc++.h>
#define ll long long int
#define fastIO ios::sync_with_stdio(false);cin.tie(0) 
#define sii(x) scanf("%d",&x)
#define pii(x) printf("%d\n",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld\n",x)
#define pf printf
#define present_set_map(container, element) (container.find(element) != container.end()) 
#define present_vec(container, element) (find(all(container),element) != container.end()) 
#define mp make_pair
#define all(x) x.begin(),x.end()
#define all_rev(x) x.rbegin(),x.rend()
#define pb push_back
#define fr first
#define se second
#define mod 1000000007
using namespace std;

int main()
{
    int tc,n,i,flag,c,next_index,j=1;
    sii(tc);
    while(tc--)
    {
        //printf("Case Num %d\n",j++);
        c=0;
        flag=-1;
        sii(n);
        int arr[n+5];
        map<int,int>visited;
        for(i=0;i<n;i++)
        {
            sii(arr[i]);
            if(arr[i]==i)
                flag=1;
            if(arr[i]==-1)
                c++;
        }
        if(c==0)
            printf("Lose\n");
        else
        {
            if(flag==1)
                printf("Lose\n");
            else
            {
                flag=999;
                //visited[arr[0]]=1;//1 matlab visited 0 mtlb not visited.
                next_index=arr[0];
                while(1)
                {
                    if(visited[next_index]==0)
                    {
                        //printf("c1 visited index %d\n",next_index);
                        visited[next_index]=1;
                        if(arr[next_index]==-1)
                        {
                            flag=99;
                            break;
                        }
                        next_index=arr[next_index];
                        
                    }
                    else if(visited[next_index]==1)
                    {
                        //printf("c2 visited index %d\n",next_index);
                        flag=-999;
                        break;
                    }
                }
                if(flag>0)
                    printf("Win\n");
                else
                    printf("Lose\n");
            }
        }
    }
}