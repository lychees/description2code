#include<bits/stdc++.h>

#define INF 2000000000
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define PI acos(-1.0)
#define EPS 1e-8

#define glue(a,b) a ## b
#define setzero(a) memset(a,0,sizeof(a))
#define sz(a) (int)(a.size())
#define mp make_pair

#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define sf(x) scanf("%lf", &x)
#define ss(a) scanf("%s", a)

#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++))
#define FOR(i,start,end) for(long long i=start; i<=end;i++)

#define trace1(x)                cerr << #x << ": " << x << endl
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
//Works for forward as well as backward iteration

using namespace std;

int s[1010][110][55];


int dp(int c, int n1, int n5, int n10)
{
    if(s[n1][n5][n10]!=-1)
        return s[n1][n5][n10];

    if(c==0)
        return 0;
    int ret=INF;

    if(n10>=1)
        ret = min(ret, dp(c-1, n1+2, n5, (n10)-1) + 1 );
    if(n5>=2)
        ret = min(ret, dp(c-1,n1+2,n5-2,n10)+2);
    if(n10>=1 && n1>=3)
        ret = min(ret, dp(c-1,n1-3,n5+1,n10-1)+4);
    if(n5>=1 && n1>=3)
        ret = min(ret, dp(c-1,n1-3,n5-1,n10)+4);
    if(n1>=8)
        ret = min(ret, dp(c-1, n1-8, n5, n10)+8);

    return s[n1][n5][n10] = ret;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        memset(s,-1,sizeof(s));
        long long int ans=0;
        int n,n1,n5,n10;
        cin>>n>>n1>>n5>>n10;
        if (8*n > n1 + 5*n5 + 10*n10)
        {
            cout<<"-1"<<endl;
            continue;
        }
        cout<<dp(n,n1,n5,n10)<<endl;
    }
    return 0;
}


