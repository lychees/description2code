#include <iostream>
using namespace std;

const int N = 20;
const int M = 1e9 + 7;

int powmod(int a, int b) {
	if (b == 0) {
		return 1;
	}
	if (b & 1) return a * 1LL * powmod(a*1LL*a%M, b/2) % M;
	else return powmod(a*1LL*a%M, b/2) % M;
}

int rev(int n) {
	return powmod(n, M-2);
}

int a[N];

int main()
{
	ios_base::sync_with_stdio(0);
	int t;
	cin >> t;
	for (int k = 1; k <= t; ++k) {
		int n;
		cin >> n;
		for (int i = 0; i < n; ++i) cin >> a[i];
		
		int mx = 0;
		for (int i = 0; i < (1 << n); ++i) {
			int e = 1, d = 0, now = 0;
			for (int j = 0; j < n; ++j) {
				if ((1<<j) & i) {
					e = e*1LL*a[j] % M;
					d = (d+a[j]) % M;
				}
			}
			now = e * 1LL * rev(d) % M;
			mx = max(mx, now);
		}
		cout << "Case #" << k << ": " << mx << '\n';
	}
    return 0;
}
