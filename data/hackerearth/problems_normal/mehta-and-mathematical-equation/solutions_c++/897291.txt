#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
long long n;
string s;
//long long ans;
long long dp[61][3][2];
long long vis[61][3][2];
#define MOD 1000000007

void bin(long long n){
	
	s="";
	while (n){
		if (n&1) s+='1';
		else s+='0';
		n>>=1;
	}
	reverse(s.begin(),s.end());
	
}
long long solve(int m,int carry,int ok){
	if (m==-1){
		if (ok && (!carry)) return 1;
		else return 0;
	}
	if (vis[m][carry][ok]) return dp[m][carry][ok];
	vis[m][carry][ok] = true;
	long long ans = 0;
	for(int i=0;i<=1;i++){
	for(int j=0;j<=1;j++){
	for(int k=0;k<=1;k++){
		int tm = (i+j+k+carry);
	    
	    if (tm%2 == s[m]-'0') ans += solve(m-1,tm/2,ok|(i&j&k))%MOD, ans %= MOD;
	}
	}
	}
	dp[m][carry][ok] = ans;
	return ans;
}
int main()
{
    int t;
    scanf("%d",&t);
    
    while(t--){
        scanf("%lld",&n);	
        bin(n);
        memset(dp,0,sizeof(dp));
        memset(vis,false,sizeof(vis));
        //ans = 0;
        //cout << s.length() << endl;
        cout << solve(s.length()-1,0,0)%MOD << endl;
    }
    return 0;
}
