#include <iostream>
using namespace std;
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <map>
#include <queue>
#include <algorithm>
#include <cmath>
#include <set>
#include <ctime>
#include <stack>
#include <list>
#include <cassert>
#include <iomanip>
#include <deque>
#include <sstream>
#include <fstream>
typedef pair<int,int> pii;
#define rep(i,j,n) for(i=j;i<n;i++)
#define pb push_back
#define ff first
#define ss second 
#define lli long long int
#define get getchar

inline int scan() {
    int n=0;
    char p=get();
    while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
    if(p=='-') p=get();
    while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=get(); }
    return n;
}

int main() {
        
    ios::sync_with_stdio(false);
    
    //clock_t start = std::clock();
    //freopen ("inp.txt","r",stdin);
    //freopen ("out.txt","w",stdout);
    //cout << "Time: " << (std::clock() - start) / (double)(CLOCKS_PER_SEC / 1000) << " ms" << std::endl;

    int t;
    const int maxn = 1<<16 + 100;
    lli answers[20];
    int dp[maxn];
    cin >> t;
    answers[1] = 0;
    answers[2] = 1;
    answers[3] = 4;
    answers[4] = 34;
    answers[5] = 260;
    answers[6] = 2275;
    answers[7] = 21784;
    answers[8] = 228676;
    answers[9] = 2614296;
    answers[10] = 32372805;
    answers[11] = 431971100;
    answers[12] = 6182204006;
    answers[13] = 94495208444;
    answers[14] = 1536740258599;
    answers[15] = 26498747241680;
    answers[16] = 482990781797000;
    while (t--) {
    	int n;
    	cin >> n;/*
    	lli ans = 0;
    	vector <int> gg;
    	for (int i = 1; i <= n; i++)
    		gg.pb(i);
    	do {
    		bool flag = 1;
    		for (int i = 0; i < n; i++) {
    			if (gg[i] == i + 1) {
    				flag = 0;
    				break;
    			}
    		}
    		if (flag)
    		for (int i = 0; i < n; i++) {
    			//cout << gg[i] << " ";
    			for (int j = 0; j < i; j++) {
    				if (gg[i] < gg[j])
    					ans++;
    			}
    		}
  		} while (next_permutation(gg.begin(),gg.end()));*/
  		cout << answers[n] << endl;
    }
    
    
    
    return 0;
        
}