#include <iostream>
#include <vector>
#include <algorithm>
#define mod 1000000007
using namespace std;

long long FillWater(long long* histogram, long long length)
{
    long long waterCollected = 0;
    long long *maxLeft = new long long [length];
    long long *maxRight = new long long [length];

    //For each values, calculate the maximum value to its left
    maxLeft[0] = 0;
    for(long long i = 1; i < length; i++)
    {
        maxLeft[i] = max(histogram[i-1], maxLeft[i-1]);
    }

    
    maxRight[length-1] = 0;
    for(long long i = length - 2; i >= 0; i--)
    {
        maxRight[i] = max(histogram[i+1], maxRight[i+1]);
    }

    
    for(long long i = 0; i < length; i++)
    {
        if(maxLeft[i] > histogram[i] && maxRight[i] > histogram[i])
        {
            waterCollected += (min(maxLeft[i], maxRight[i]) - histogram[i]);
        }
    }
    delete[] maxLeft;
    delete[] maxRight;
    return waterCollected;
}
int main() {
	int t;
	cin >> t;
	while(t--){
	
  long long n;
  //read size of v
  cin>>n;
  long long v[n];
  //read v array
  for(int i =0;i<n;++i)
  cin >> v[i];
  

  cout<<(FillWater(v, n))%mod<<endl;
}
  return 0;
}