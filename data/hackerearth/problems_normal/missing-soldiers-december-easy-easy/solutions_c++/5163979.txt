#include<iostream>
#include<cmath>
#include<algorithm>
#include<vector>
#include<utility>

using namespace std ; 
#define ll long long  // for long integer
#define mp make_pair  // for making pair
#define pb push_back // for adding to the last of vector
#define vp vector<pair<int, int> > // short form of vector pair
#define pi pair<int, int>  //short form of integer pair

vp merge(const vp &x){
    int n = x.size() ; 
    if (n == 1)
        return x ;
    vp res ; 
    res.pb(x[0]) ;
    for(int i = 1 ; i < n ; i ++){
        if(x[i].first <= res.back().second){
            // Peroform merge with the fact that the second of res
            // will always be less in case of non-overlapping vectors
            res.back().second = max(res.back().second, x[i].second);
        }
        else{
            res.pb(x[i]);
        }
    }

    return res;
}


int main()
{
    ll n , x, y, d; 
    ll ans, i ;
    vp input, temp ;
    cin >> n ; 
    for(i = 0 ; i < n ; i++){
        cin >> x >> y >> d ; 
        input.pb(mp(x, x+d));
    }
    sort(input.begin(), input.end());
    temp = merge(input);
    ans = 0 ; 
    n = temp.size() ; 
    for(i = 0 ; i < n ; i++){
        ans += (temp[i].second - temp[i].first + 1);
    }
    cout << ans<<endl ; 
return 0 ;
}