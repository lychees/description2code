#include <bits/stdc++.h>
using namespace std;
#define MAXN 1005
#define inf INT_MAX
int a[MAXN][MAXN];
bool isprime[10005];

void seive(){
	isprime[1]=false;
	for(int i=2;i*i<=10000;i++){
		if(isprime[i]){
			for(int j=i*i;j<=10000;j+=i)
				isprime[j]=false;			
		}
	}
	return;
}
int solve(int a,int k){
	// cout << "solving for " << a << " with k = " << k << endl;
	if(isprime[a])
		return 0;
	else{
		int flag=0, stepcnt=0;
		
		while(a<=10000 && !isprime[a]){
			a+=k;
			stepcnt++;
			if(isprime[a] && a<=10000){
				flag=1;
				// cout << "number is " << a << endl;
			}
		}
		if(flag==1)
			return stepcnt;
		else return inf;
	}
}
int main(){

	int n,k;
	cin >> n >> k;
	memset(isprime,true,sizeof(isprime));
	for(int i=1;i<=n;i++)
				for(int j=1;j<=n;j++)
					cin >> a[i][j];
	if(n<3)
		cout << "no" <<endl;
	else{
			seive();
			// for(int i=2;i<=10000;i++)
			// 		if(isprime[i])
			// 			cout << i << " ";
			// cout << endl;
			int ans=inf,cnt=0,opcnt,a1,b,c,d,cx,cy,e;	
			for(int i=2;i<=n-1;i++){
				for(int j=2;j<=n-1;j++){
					// cout << "solving for center " << i << "," << j  << endl;
					opcnt=0;
					a1=solve(a[i-1][j-1],k);
					// cout << "a1 = " << a1 << endl;
					if(a1==inf)
							continue;
					b=solve(a[i-1][j+1],k);
					// cout << "b = " << b << endl;
					if(b==inf)
							continue;
					c=solve(a[i][j],k);
					// cout << "c = " << c << endl;
					if(c==inf)
							continue;
					d=solve(a[i+1][j-1],k);
					// cout << "d = " << a1 << endl;
					if(d==inf)
							continue;
					e=solve(a[i+1][j+1],k);
					// cout << "e = " << e << endl;
					if(e==inf)
							continue;
					opcnt = a1+b+c+d+e;
					if(opcnt<ans){
						cx = j;
						cy = i;
						ans = opcnt;
						cnt=1;				
					}
				}
			}
			if(ans!=inf){
				cout << "yes" << endl;
				cout << ans << endl;
				cout << cy << " " << cx << endl;
			}
			else cout << "no" <<endl;
	}
	return 0;
}
