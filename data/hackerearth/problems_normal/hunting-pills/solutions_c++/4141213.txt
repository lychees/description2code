#include<bits/stdc++.h>
using namespace std;

vector<int>adj[101];
vector<int>revadj[101];
bool visit[101];
stack<int>st;
void dfs(int);
int dfs2(int);
int arr[101];
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	int n,m,x,y;
	cin>>n>>m;
	for(int i=0;i<n;i++)cin>>arr[i];
	for(int i=0;i<101;i++){adj[i].clear();revadj[i].clear();visit[i]=false;}
	while(m--)
	{
		cin>>x>>y;
		adj[x].push_back(y);
		revadj[y].push_back(x);
	}
	for(int i=0;i<n;i++)if(visit[i]==false)dfs(i);
	for(int i=0;i<n;i++)visit[i]=false;
	int mx=-1;
	while(!st.empty())
	{
		int u=st.top();st.pop();
		if(visit[u])continue;
		else 
		{
			mx=max(mx,dfs2(u));
		}
	}
	cout<<mx<<endl;
	}
	return 0;
}
void dfs(int u)
{
	visit[u]=true;
	for(int i=0;i<adj[u].size();i++)
	{
		int v=adj[u][i];
		if(!visit[v])dfs(v);
	}
	st.push(u);
}
int dfs2(int u)
{
	visit[u]=true;
	int t=arr[u];
	for(int i=0;i<revadj[u].size();i++)
	{
		int v=revadj[u][i];
		if(visit[v]==false)t+=dfs2(v);
	}
	return t;
}