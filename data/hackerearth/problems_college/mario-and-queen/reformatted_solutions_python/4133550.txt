import copy


def cal(l, l1, path, x, y, c, n):
    # print(path)
    path.append((x, y))
    if (x-1 >= 0):
        if (y-1 >= 0 and (x-1, y-1) not in path):
            if (l[x-1][y-1] == 'Q'):
                if (c not in l1):
                    l1.append(c)
            if (l[x-1][y-1] == '.'):
                path1 = copy.copy(path)
                cal(l, l1, path1, x-1, y-1, c+1, n)
        if ((x-1, y) not in path):
            if (l[x-1][y] == 'Q'):
                if (c not in l1):
                    l1.append(c)
            if (l[x-1][y] == '.'):
                path1 = copy.copy(path)
                cal(l, l1, path1, x-1, y, c+1, n)
        if (y+1 < n and (x-1, y+1) not in path):
            if (l[x-1][y+1] == 'Q'):
                if (c not in l1):
                    l1.append(c)
            if (l[x-1][y+1] == '.'):
                path1 = copy.copy(path)
                cal(l, l1, path1, x-1, y+1, c+1, n)
    if (y-1 >= 0 and (x, y-1) not in path):
        if (l[x][y-1] == 'Q'):
            if (c not in l1):
                l1.append(c)
        if (l[x][y-1] == '.'):
            path1 = copy.copy(path)
            cal(l, l1, path1, x, y-1, c+1, n)
    if (y+1 < n and (x, y+1) not in path):
        if (l[x][y+1] == 'Q'):
            if (c not in l1):
                l1.append(c)
        if (l[x][y+1] == '.'):
            path1 = copy.copy(path)
            cal(l, l1, path1, x, y+1, c+1, n)
    if (x+1 < n):
        if (y-1 >= 0 and (x+1, y-1) not in path):
            if (l[x+1][y-1] == 'Q'):
                if (c not in l1):
                    l1.append(c)
            if (l[x+1][y-1] == '.'):
                path1 = copy.copy(path)
                cal(l, l1, path1, x+1, y-1, c+1, n)
        if ((x+1, y) not in path):
            if (l[x+1][y] == 'Q'):
                if (c not in l1):
                    l1.append(c)
            if (l[x+1][y] == '.'):
                path1 = copy.copy(path)
                cal(l, l1, path1, x+1, y, c+1, n)
        if (y+1 < n and (x+1, y+1) not in path):
            if (l[x+1][y+1] == 'Q'):
                if (c not in l1):
                    l1.append(c)
            if (l[x+1][y+1] == '.'):
                path1 = copy.copy(path)
                cal(l, l1, path1, x+1, y+1, c+1, n)


t = int(raw_input())
for i in range(1, t+1):
    n = int(raw_input())
    l = []
    for j in range(n):
        s = raw_input().split()
        l.append(s)
    l1 = []
    for j in range(n):
        for k in range(n):
            if (l[j][k] == 'M'):
                xindex = j
                yindex = k
    # print(l)
    # print(xindex,yindex)
    cal(l, l1, [], xindex, yindex, 1, n)
    l1.sort()
    if (l1 == []):
        print("Case "+str(i) + ": -1")
    else:
        s = ""
        for j in range(len(l1)):
            s += " "+str(l1[j])
        print("Case "+str(i)+": "+str(l1[0])+" <"+s+" >")
