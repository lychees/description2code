#include <bits/stdc++.h>

using namespace std;

int root(int arr[],int i)
{
	while(arr[i]!=i)
	{
		i=arr[i];
	}
	
	return i;
}

bool find(int arr[],int a,int b)
{
	if(root(arr,a)==root(arr,b))
	return true;
	else
	return false;
}

void join(int arr[],int e[],int count[],int a,int b)
{
	int root_a=root(arr,a);
	int root_b=root(arr,b);
	if(e[root_a]<e[root_b]){
		arr[root_b]=root_a;
	}
	else{
		if(e[root_a]==e[root_b])
			count[root_b]+=count[root_a];
		arr[root_a]=root_b;
	}
}

int main()
{
    
    int n;
    
    cin >> n;
    
    int a[n+1];
    int count[n+1];
    int est[n+1];
      int i=1;
    
     while(i<=n)
    {
    	cin >> est[i++];
    }
    int k;
    cin >> k;
  
    for(int l=0;l<=n;l++)
    {
    	a[l]=l;
    	count[l]=1;
    }
    
   
    
    i=1;
    int p,q;
    while(i<=k)
    {
    	cin >> p >> q;
    	if(!find(a,p,q))
    	join(a,est,count,p,q);
    	i++;
    }
    
    unordered_map<int,int> mp;
    
    for(i=1;i<=n;i++)
    {	int root_i=root(a,i);
    	mp[root_i]=count[root_i];
    }
    
    long long int ans=1;
    for(auto it=mp.begin();it!=mp.end();it++)
    {
    	ans = (ans*(it->second))%1000000007;
    }
    cout << ans;
    return 0;
}
