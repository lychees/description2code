#include <bits/stdc++.h>
using namespace std;
long long int 
gcdr (long long int a,long long int b )
{
  if ( a==0 ) return b;
  return gcdr ( b%a, a );
}
long long modular_pow(long long exponent,long long int mod, long long int base)
{
  
   long long result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % mod;
        exponent = exponent >> 1;
        base = (base * base) % mod;
    }
    return result;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
    	long long int a,p;
    	scanf("%lld%lld",&a,&p);
    	if(p%2==0 || gcdr(a,p)!=1) printf("NO\n");
    	else 
    	{
    	a=modular_pow((p-1)/2,p,a);
    	//cout<<a<<endl;
    	if(a%p==1) printf("YES\n");
    	else printf("NO\n");}
    }
    return 0;
}
