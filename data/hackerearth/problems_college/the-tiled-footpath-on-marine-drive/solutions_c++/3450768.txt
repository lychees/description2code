#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int m;
void multiply(int F[2][2], int M[2][2]);

void power(int F[2][2], int n);

/* function that returns nth Fibonacci number */
int fib(int n)
{
  int F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0];
}

/* Optimized version of power() in method 4 */
void power(int F[2][2], int n)
{
  if( n == 0 || n == 1)
      return;
  int M[2][2] = {{1,1},{1,0}};

  power(F, n/2);
  multiply(F, F);

  if (n%2 != 0)
     multiply(F, M);
}

void multiply(int F[2][2], int M[2][2])
{
/*
  int x =  F[0][0]*M[0][0] + F[0][1]*M[1][0];
  int y =  F[0][0]*M[0][1] + F[0][1]*M[1][1];
  int z =  F[1][0]*M[0][0] + F[1][1]*M[1][0];
  int w =  F[1][0]*M[0][1] + F[1][1]*M[1][1];
*/
  int x =  (F[0][0]*M[0][0])%m + (F[0][1]*M[1][0])%m;
  int y =  (F[0][0]*M[0][1])%m + (F[0][1]*M[1][1])%m;
  int z =  (F[1][0]*M[0][0])%m + (F[1][1]*M[1][0])%m;
  int w =  (F[1][0]*M[0][1])%m + (F[1][1]*M[1][1])%m;

  F[0][0] = x%m;
  F[0][1] = y%m;
  F[1][0] = z%m;
  F[1][1] = w%m;
}

int main() {
    int n, t, i, a, b, k, ct;    //1 1 1 2
    cin >> t;
    for(i=0; i<t;i++){
        cin>>n>>k;
        m=pow(2,k);
        ct=fib(n+1);
        if(n==2147483647){
            a=fib(n);
            b=fib(n-1);
            ct=(a+b)%m;
        }
        cout<<ct<<endl;
    }
    //cout<<m<<"\n";
    //cout<<"fib("<<n<<")="<<ct<<"\n"<<2147483647+1;

    return 0;
}


/*

int m;

int bc(int n, int k)
{
    int C[n+1][k+1];
    int i, j;
    for (i = 0; i <= n; i++)
    {
        for (j = 0; j <= min(i, k); j++)
        {
            if (j == 0 || j == i)
                C[i][j] = 1;
            else
                C[i][j] = C[i-1][j-1] + C[i-1][j];
        }
    }
    return C[n][k];
}

       int n2,ob,tp;
        n2=0;
        ct=0;
        m=pow(2,k);
        while(n2*2 <= n){
            if(n2==0 || n2*2==n)    //0100 && 1000
                ct++;
            else{
                ob=n-n2;
                tp=bc(ob,n2);
                cout<<"ob="<<ob<<" n2="<<n2<<" and tp="<<tp<<"\n";
                ct+=tp;
            }
            n2++;
        }

*/
