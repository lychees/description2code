#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair
#define fi first
#define se second

typedef pair<int,int> pint;
typedef long long ll;
typedef vector<int> vi;


#define MAX_N 2005
#define left(i) ((i)*2)
#define right(i) (left(i)+1)

int n,m,a[MAX_N][MAX_N],dr[MAX_N][MAX_N],ul[MAX_N][MAX_N];
int x[MAX_N],bit[MAX_N];
vi rm[MAX_N];

void update(int i, int v)
{
	for (;i<MAX_N; i+=(i&-i))
		bit[i]+=v;
}

int get(int i)
{
	int r=0;
	for (;i>0; i-=(i&-i))
		r+=bit[i];
	return r;
}
#define get(l,r) (r>=l?get(r)-get(l-1):0)

int main()
{
	scanf("%d %d",&n,&m);
	char s[MAX_N];
	for (int i=1; i<=n; i++)
	{
		scanf("%s",s);
		for (int j=1; j<=m; j++)
		{
			a[i][j]=s[j-1]-'0';
			if (a[i][j])
				dr[i][j]=ul[i][j]=0;
			else
				dr[i][j]=ul[i][j]=MAX_N*MAX_N;
		}
	}
	//up
	for (int i=1; i<=m; i++)
		x[i]=0;
	for (int i=1; i<=n; i++)
		for (int j=1; j<=m; j++)
			if (a[i][j])
				x[j]=i;
			else
				ul[i][j]=min(ul[i][j],i-x[j]);
	//down
	for (int i=1; i<=m; i++)
		x[i]=n+1;
	for (int i=n; i>0; i--)
		for (int j=1; j<=m; j++)
			if (a[i][j])
				x[j]=i;
			else
				dr[i][j]=min(dr[i][j],x[j]-i);
	//left
	for (int i=1; i<=n; i++)
		x[i]=0;
	for (int j=1; j<=m; j++)
		for (int i=1; i<=n; i++)
			if (a[i][j])
				x[i]=j;
			else
				ul[i][j]=min(ul[i][j],j-x[i]);
	//right
	for (int i=1; i<=n; i++)
		x[i]=m+1;
	for (int j=m; j>0; j--)
		for (int i=1; i<=n; i++)
			if (a[i][j])
				x[i]=j;
			else
				dr[i][j]=min(dr[i][j],x[i]-j);
	ll ans=0;
	for (int v=1; v<=n; v++)
	{
		int ptr=max(n,m);
		for (int i=0; i<=max(n,m); i++)
			rm[i].clear(),bit[i]=0;
		for (int i=v,j=m; i>0&&j>0; i--,j--)
		{
			update(ptr,1);
			rm[ptr-ul[i][j]].pb(ptr);
			for (vi::iterator it=rm[ptr].begin(); it!=rm[ptr].end(); it++)
				update(*it,-1);
			ptr--;
			ans+=get(ptr+1,dr[i][j]+ptr);
		}
	}
	for (int v=m-1; v>0; v--)
	{
		int ptr=max(n,m);
		for (int i=0; i<=max(n,m); i++)
			rm[i].clear(),bit[i]=0;
		for (int i=n,j=v; i>0&&j>0; i--,j--)
		{
			update(ptr,1);
			rm[ptr-ul[i][j]].pb(ptr);
			for (vi::iterator it=rm[ptr].begin(); it!=rm[ptr].end(); it++)
				update(*it,-1);
			ptr--;
			ans+=get(ptr+1,dr[i][j]+ptr);
		}
	}
	printf("%lld\n",ans);
	return 0;
}
