#include <iostream>
#include <queue>

#define MAX 1000000

using namespace std;

long int sendsTo[MAX+1], t, n, dist[MAX+1];

bool visited[MAX+1];

int loop(long int s, long int d)
{
    queue <long int> que;

    long int curr=s;

    while(curr!=d)
    {
        que.push(curr);

        curr=sendsTo[curr];
    }

    que.push(curr);

    long int _size=que.size();

    while(!que.empty())
    {
        dist[que.front()]=_size;

        que.pop();
    }

    return 0;
}

long int func(long int i)
{
    visited[i]=true;

    if(dist[sendsTo[i]]!=-1)
    {
        dist[i]=dist[sendsTo[i]]+1;
    }
    else
    {
        if(!visited[sendsTo[i]])
        {
            long int temp = func(sendsTo[i]);

            if(dist[i]==-1)
            {
                dist[i]=temp+1;
            }
        }
        else
        {
            loop(sendsTo[i], i);
        }
    }

    return dist[i];
}

int main()
{
    cin >> t;

    while(t--)
    {
        cin >> n;

        for(long int i=0;i<n;i++)
        {
            cin >> sendsTo[i];

            visited[i]=false;

            dist[i]=-1;
        }

        for(long int i=0;i<n;i++)
        {
            if(!visited[i])
            {
                func(i);
            }
        }

        long int ans=0, shit;

        for(long int i=0;i<n;i++)
        {
            if(dist[i]>ans)
            {
                ans=dist[i];

                shit=i;
            }
        }

        cout << shit << endl;
    }

    return 0;
}
