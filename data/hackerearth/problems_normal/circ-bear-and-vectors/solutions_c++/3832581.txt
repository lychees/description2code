#include<bits/stdc++.h>
using namespace std;
const int nax = 5005;
int x[nax], y[nax];
map<pair<int,int>, int> countDirection;

pair<int,int> norm(int x, int y) {
	if(x < 0 || (x == 0 && y < 0)) {
		x *= -1;
		y *= -1;
	}
	int g = __gcd(abs(x), abs(y));
	return make_pair(x / g, y / g);
}

bool para(int x, int y, int x2, int y2) {
	return (long long) x * x2 + (long long) y * y2 == 0;
}

int main() {
	int n;
	scanf("%d", &n);
	assert(3 <= n && n <= 3000);
	for(int i = 0; i < n; ++i) {
		scanf("%d%d", &x[i], &y[i]);
		assert(x[i] != 0 || y[i] != 0);
		assert(max(abs(x[i]), abs(y[i])) <= 1000 * 1000 * 1000);
		countDirection[norm(x[i], y[i])] += 1;
	}
	long long ans = 0;
	for(int i = 0; i < n; ++i)
		for(int j = i + 1; j < n; ++j) {
			int sx = x[i] + x[j];
			int sy = y[i] + y[j];
			if(sx == 0 && sy == 0) continue;
			auto it = countDirection.find(norm(-sy, sx));
			if(it != countDirection.end()) {
				ans += it -> second;
				if(para(sx, sy, x[i], y[i]))
					--ans;
				if(para(sx, sy, x[j], y[j]))
					--ans;
			}
		}
	printf("%lld\n", ans * 2);
	return 0;
}
