#include <bits/stdc++.h>
using namespace std;

const int MAX=100001;
int color[MAX];
int dist[MAX];
int parent[MAX];
int n;

int BFS(vector<int> adj[]){
	
	for(int i=0;i<n;i++){
		color[i]=0;
		dist[i]=-1;
		parent[i]=-1;
	}
	
	queue <int> q;
	color[0]=1;
	dist[0]=0;
	parent[0]=0;
	q.push(0);
	
	while(!q.empty()){
		int u=q.front();
		q.pop();
		for(int i=0;i<adj[u].size();i++){
			int y=adj[u][i];
			if(color[y]==0){
				color[y]=1;
				dist[y]=dist[u]+1;
				parent[y]=u;
				q.push(y);
			}
		}
		color[u]=2;
	}
	return 0;
}

int main(){
    int a,b,x,e;
    cin>>n>>e;
    vector <int> adj[n+1];
    for(int i=0;i<e;i++){
    	cin>>a>>b;
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    }
    cin>>x;
    BFS(adj);
    for(int i=1;i<n;i++)
    	cout<<dist[i]<<endl;
    return 0;
}
