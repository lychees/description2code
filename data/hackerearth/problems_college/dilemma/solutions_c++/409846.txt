#include <iostream>
using namespace std;

long int getOpv3(int &N, int &A, int &B, int &C) {	
	long int ctr = 0;
	if(A+B+C == 0) {
		return 1;
	}
	for(int n=0; n<=N; ++n) {
		for(int i =0; i<= min(A,n); ++i) {
			if(i == n) {
				++ctr;
				continue;
				
			}
			if(i + B + C <= n) {
				if(i+B+C == n) {
					++ctr;
					
				}
				continue;
			}
			int val = n-i;
			if(B >= val && C >= val) {
				ctr += (val+1);
				continue;
			}
		
			int k = min(C, val);
			int j = 0;
			if(k == C){j = min(B,val-C);}
			while(j<=B && k >=0) {
				if(j+k == val) {
					++ctr;
					++j; --k;
				} else {break;}
			}
			
		}
	}
	return ctr;
}



long int getOp(int &N, int &A, int &B, int &C) {
	long int ctr = 0;
	for(int n=0; n<=N; ++n) {
		for(int i =0; i<= A; ++i) {
			for(int j =0; j<=B; ++j) {
				if(i+j > n) {
					break;
				}
				for(int k=0; k<=C; ++k) {
					if(i+j+k == n) {
						++ctr;
					} else if(i+j+k > n) {
						break;
					}
					
				}
			}
		}
	}
	return ctr;
}

long int getOpv2(int &N, int &A, int &B, int &C) {
	int temp1 = N-(A+B+C);
	long int op = (((N+3)*(N+2)*(N+1))/6) - ((temp1*(temp1-1)*(temp1-2))/6);
	return op;
}


int main()
{
	int T;
    cin>>T;
    long int op[T];
    int A,B,C,N;
    for(int i =0; i<T; ++i) {
    	cin>>N>>A>>B>>C;
    	op[i] = getOpv3(N,A,B,C);
    }
     for(int i =0; i<T; ++i) {
     	cout<<op[i]<<endl;
     }
    return 0;
}
