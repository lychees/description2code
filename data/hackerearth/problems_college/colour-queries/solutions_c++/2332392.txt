#include <iostream>
using namespace std;
int cov[100][100];
int cal(int m,int n,long Mat[100][100],int x,int y,long d,int count)
{
	cov[x][y]=1;
	if(x>0 && cov[x-1][y]==0 && ((Mat[x-1][y]>=Mat[x][y] && Mat[x-1][y]-Mat[x][y]<=d)||(Mat[x-1][y]<Mat[x][y] && Mat[x][y]-Mat[x-1][y]<=d)))
	{count=cal(m,n,Mat,x-1,y,d,count+1);}
	if(y>0 && cov[x][y-1]==0 && ((Mat[x][y-1]>=Mat[x][y] && Mat[x][y-1]-Mat[x][y]<=d)||(Mat[x][y-1]<=Mat[x][y] && Mat[x][y]-Mat[x][y-1]<=d)))
	{count=cal(m,n,Mat,x,y-1,d,count+1);}
	if(x<m-1 && cov[x+1][y]==0 && ((Mat[x+1][y]>=Mat[x][y] && Mat[x+1][y]-Mat[x][y]<=d)||(Mat[x+1][y]<Mat[x][y] && Mat[x][y]-Mat[x+1][y]<=d)))
	{count=cal(m,n,Mat,x+1,y,d,count+1);}
	if(y<n-1 && cov[x][y+1]==0 && ((Mat[x][y+1]>=Mat[x][y] && Mat[x][y+1]-Mat[x][y]<=d)||(Mat[x][y+1]<=Mat[x][y] && Mat[x][y]-Mat[x][y+1]<=d)))
	{count=cal(m,n,Mat,x,y+1,d,count+1);}
	return count;
}
int main()
{
    int i,j;
    int m,n,q,x,y;
    cin>>m;
    cin>>n;
    cin>>q;
    long Mat[100][100],d;
    int res[q];
    for(i=0;i<m;i++)
    {
    	for(j=0;j<n;j++)
    	{
    		cin>>Mat[i][j];
    	}
    }
    for(i=0;i<q;i++)
    {
    	cin>>x;
    	cin>>y;
    	cin>>d;
    	for(j=0;j<m;j++)
    	{
    		for(int k=0;k<n;k++)
    		{
    			cov[j][k]=0;
    		}
    	}
    	res[i]=cal(m,n,Mat,x-1,y-1,d,1);
    }
    for(i=0;i<q;i++)
    {
    	cout<<res[i]<<endl;
    }
    return 0;
}

