#include<iostream>
#include<vector>

using namespace std;
void dfs(int s,vector<int>adj[],bool vis[],int &sum)
{   vis[s] = true;
    if(adj[s].size()==0)
    {   sum = 1;
        return;
    }
    else
    {   sum++;
        for(int i=0;i<adj[s].size();i++)
        {   if(vis[adj[s][i]]==false)
                dfs(adj[s][i],adj,vis,sum);
        }
    }
}
int main()
{   int n,d,a,b,sum=0,mxsum=0;
    cin>>n>>d;
    vector<int> adj[n];
    bool vis[n];
    for(int i=0;i<n;i++)
        vis[i]=false;
    for(int i=0;i<d;i++)
    {   cin>>a>>b;
        adj[a-1].push_back(b-1);
    }
    for(int i=0;i<n;i++)
    {   sum=0;
       //if(vis[i]==false)
            //cout<<"i: "<<i<<"\n";
            dfs(i,adj,vis,sum);
            if(i==0)
            mxsum = sum;
            else if(sum<mxsum)
            mxsum = sum;
        //cout<<"sum: "<<sum<<"\n";
        for(int j=0;j<n;j++)
            vis[j]=false;
    }
    cout<<mxsum;
    return 0;
}
