#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
int n,s,d;
ll k;
vector<int>v[100005];
bool root[100005];
int BIT[100005];
ll ans=0;
void upd(int x,int inr){
	for(int i=x;i<=100002;i+=i&(-i))
	BIT[i]+=inr;
}
ll query(ll val){
	ll ret=0;
	val=min(val,(ll)100002);
	while(val){
		ret+=BIT[val];
		val-=(val)&(-val);
	}
	return ret;
}
int cnt[100005];
void dfs(int nod){
	stack<int>s;
	s.push(nod);
	while(!s.empty()){
		nod=s.top();
		if(!cnt[nod]){
			ans+=query(k/nod);
			upd(nod,1);
		}
		if(cnt[nod]==v[nod].size()){
			upd(nod,-1);
			s.pop();
			continue;
		}
		int nxtnode=v[nod][cnt[nod]];
		s.push(nxtnode);
		cnt[nod]++;
	}
}
int main(){
	cin>>n>>k;
	for(int i=1;i<n;i++){
		cin>>s>>d;
		v[s].push_back(d);
		root[d]=true;
	}
	for(int i=1;i<=n;i++){
		if(root[i])
		continue;
		dfs(i);
		break;
	}
	cout<<ans;
	return 0;
}