#include <bits/stdc++.h>
#define ll long long
using namespace std;

int a[100010],cnt[100010],n;
struct tree{
	int x;
	int str;
	int lst;
}tr[4000010];

int build(int i,int j,int idx)
{
	if(i==j)
	{
		tr[idx].x=i;
		if(i<=n)
		tr[idx].str=a[i];
		else
		tr[idx].str=-1;

		tr[idx].lst=0;
		//return a[i];
		return 0;
	}

	int mid = (i+j)/2;
	build(i,mid,2*idx+1);
	build(mid+1,j,2*idx+2);

	if(tr[2*idx+2].str==-1)
	{
		tr[idx]=tr[2*idx+1];
		cnt[tr[idx].x]=tr[idx].lst;
		//cout<<"bye to "<<tr[2*idx+1].str;
		return 0;
		//tr[idx].lst=tr[2*idx+2];
	}
	else if(tr[2*idx+1].str>tr[2*idx+2].str)
	{

		tr[idx].str=tr[2*idx+1].str;
		tr[idx].x=tr[2*idx+1].x;
		tr[idx].lst=tr[2*idx+1].lst+1;
		cnt[tr[2*idx+1].x]=tr[2*idx+1].lst+1;
	cnt[tr[2*idx+2].x]=tr[2*idx+2].lst+1;
		//cout<<"won"<<tr[2*idx+1].str<<"over"<<tr[2*idx+2].str<<endl;
	}
	else{
		tr[idx].str=tr[2*idx+2].str;
		tr[idx].x=tr[2*idx+2].x;
		tr[idx].lst=tr[2*idx+2].lst+1;
		cnt[tr[2*idx+1].x]=tr[2*idx+1].lst+1;
		cnt[tr[2*idx+2].x]=tr[2*idx+2].lst+1;
	//	cout<<"won"<<tr[2*idx+2].str<<"over"<<tr[2*idx+1].str<<endl;
	}
	//cout<<"setting the number of fights of"<<tr[idx].x<<"to"<<tr[idx].lst<<endl;
	

	return 0;


}

unsigned int nxtPwr2(unsigned int n)
{
    unsigned int p = 1;
    if (n && !(n & (n - 1)))
        return n;
 
    while (p < n) {
        p <<= 1;
    }
    return p;
}

int main()
{	
	int q,m,t,x,i;
	//ios::sync_with_stdio(false);


	//freopen("input.txt","r",stdin);
	//cout<<"s";
	scanf("%d%d",&n,&q);

	//cout<<n;
	//cout<<q;

	for(i=1;i<=n;i++)
		{		
			scanf("%d",&a[i]);
			//cout<<a[i]<<endl;
		}

	//cout<<"done array";

	for(i=0;i<400000;i++)
		tr[i].x=-1;

	//cout<<"sd";

	//cout<<"pwr"<<nxtPwr2(n)<<endl;
	build(1,nxtPwr2(n),0);

	while(q--)
	{
		scanf("%d",&x);
		printf("%d\n",cnt[x]);
	}


}

