#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, K, a[1000], pr[1000];
ll dp[600][600];

ll calc(int ind, int k) {
    if(k < 0) return inf * 1ll * inf;
    if(ind == n) {
        if(k == 0) return 0;
        else return inf * 1ll * inf;
    }
    ll &res = dp[ind][k];
    if(res != -1) return res;
    res = inf * 1ll * inf;
    int sum = 0;
    if(ind) sum = pr[ind-1];
    for(int i = ind; i < n; i++) {
        int x = pr[i];
        if(ind) x -= pr[ind-1];
        res = min(res, (K-1) * 1ll * x * x - 2ll * x * sum + calc(i+1, k-1));
    }
    return res;
}

int main(){
    
    cin >> n >> K;
    for(int i = 0; i < n; i++) cin >> a[i];
    
    pr[0] = a[0];
    for(int i = 1; i < n; i++) pr[i] = a[i] + pr[i-1];
    
    memset(dp, -1, sizeof dp);
    
    cout << calc(0, K) << endl;
        
    return 0;
}
