#include <algorithm>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <deque>
#include <vector>
#include <queue>

using namespace std;

#define X first
#define Y second
#define INPUT freopen(".inp","r",stdin)
#define OUTPUT freopen(".out","w",stdout)
#define FOR(i,l,r) for(int i=l;i<=r;i++)
#define REP(i,l,r) for(int i=l;i<r;i++)
#define FORD(i,l,r) for(int i=l;i>=r;i--)
#define REPD(i,l,r) for(int i=l;i>r;i--)
#define ENDL printf("\n")

typedef long long ll;
typedef pair<int,int> ii;

const int inf=2e9;
const int MOD=1e9+7;
const int N=1e6+10;

int n,a[N],s[N];
ll f[N];
void prepare(){
    scanf("%d",&n);
    FOR(i,1,n) scanf("%d",a+i);
    f[0]=0;
    FOR(i,1,n) f[i]=f[i-1]+a[i];
}
void solve(){
    int length=-1,same=0,top=1;
    s[1]=0;
    FOR(i,1,n){
        int L=1,R=top;
        while (L<=R){
            int M=(L+R)>>1;
            if (f[i]>=f[s[M]]) R=M-1;else L=M+1;
        }
        if (f[i]>=f[s[L]]){
            if (i-s[L]==length) same++;
            else if (i-s[L]>length) length=i-s[L],same=1;
        }
        if (f[i]<f[s[top]]) s[++top]=i;
    }
    printf("%d ",length);
    if (length!=-1) printf("%d",same);
}
int main(){
    prepare();
    solve();
}
