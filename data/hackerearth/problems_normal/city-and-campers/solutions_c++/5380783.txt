#include <bits/stdc++.h>
using namespace std;
set<long int > m;
int k=0;
long int find(long int *a,long int x)
{
	long int i=x;
	while(a[i]>=0)
	{
		i=a[i];
	}
	return i;
}
long int  unionn(long int *a,long int x,long int y,long int *delMin)
{
	long int temp;
	
	if(a[x]==-1 && a[y]==-1)
	{
		(*delMin)=(*delMin)-2;
	}
	else if(a[x]==-1 || a[y]==-1)
	{
		(*delMin)=(*delMin)-1;
	}
	if((*delMin)==0 && k==0)
	{
		k++;
		m.erase(1);
	}
//	cout<<" a["<<x<<"] = "<<a[x]<<" a["<<y<<"] = "<<a[y]<<"  ,  ";
	if(abs(a[x])>=abs(a[y]))
	{
		if(a[y]!=-1 && a[y]<0)
		{	m.erase(abs(a[y]));}
		temp=a[y]+a[x];
		a[y]=x;
		a[x]=temp;
//		cout<<" sum = "<<temp<<" ,  ";
		m.insert(abs(temp));
		
	}
	else
	{
		if(a[x]!=-1&& a[x]<0)
		{	m.erase(abs(a[x]));}
		temp=a[y]+a[x];
		a[x]=y;
		a[y]=temp;
		m.insert(abs(temp));
		
	}
	
	
	return temp;
}
int main()
{
	long int n;
	cin>>n;
	long int i=1,a[n+1];
	
	while(i<=n)
	{
		a[i]=-1;
		
		i++;
	}
	m.insert(1);
	long int q;
	i=0;
	cin>>q;
	
	long int e,r,max=0,min=0,group=n,delMin=n;
	while(i<q)
	{
		cin>>e>>r;
		long int j=find(a,e);
		long int k=find(a,r);
		if(j!=k)
		{
			long int p=unionn(a,j,k,&delMin);
			if(abs(p)>abs(max))
			{
				max=abs(p);
			}
			group--;
		}
		set<long int >::iterator it;
		it=m.begin();
//		cout<<"max = "<<max<<" , ";
//		cout<<" min = "<<*it<<" , ";
		if(group>1)
		{
			cout<<max-(*it)<<"\n";
		}
		else{
			cout<<"0\n";
		}
		i++;
	}
}
