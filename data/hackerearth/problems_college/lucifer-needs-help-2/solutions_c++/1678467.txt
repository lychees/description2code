/*mohitmangnani*/
#include<bits/stdc++.h>

#define ll long long int
#define pb push_back
#define mp make_pair
#define s(x) scanf("%lld", &x)
#define SET(x, a) memset(x, a, sizeof(x));
#define trace(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;

#define getcx getchar_unlocked
 
long long int scan()
{
    long long int n=0;
    char ch = getcx();
    long long int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

ll a[1001000];
ll temp[1000100];
int main()
{
	ll n,m;
	n = scan();

	for (int i = 1; i <= n; i++) {
		a[i] = scan();
	}
	m = scan();
	int i,j;
	ll k;
	SET(temp,0);
	while (m--) {
		i = scan();
		j = scan();
		k = scan();
		temp[i] += k;
		temp[j+1] -= k;
//		update(i,k);
//		update(j+1,-k);
	}

	for (int i = 1; i <= n; i++) {
		temp[i] += temp[i-1];
	}

	ll x;
	for (int i = 1; i <= n; i++) {
		x = a[i] + temp[i];
		printf("%lld\n",x);
	}

	return 0;
}
