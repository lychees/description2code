#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;


struct A
{
    string name;

    int point=0;
    int time=0;

};


bool comp(A a, A b)
{
    if(a.point > b.point )
    {
        return true;
    }
    else if(a.point==b.point)
    {
        if(a.time<b.time)
        {
            return true;
        }
        else{
            return false;
        }
    }

    return false;

}
int main()
{
    int n;
    cin>>n;
   map<string , A> M;
    for(int i=1; i<=n; i++)
    {
        string s;
        cin>>s;

        int p;
        cin>>p;
        M[s].point+=p;
        M[s].time = i;
    }

    vector<A> V;
    map<string , A > :: iterator it;
    for( it = M.begin(); it!=M.end() ; it++)
    {
        A temp;
        temp.name = it->first;
        temp.point = it->second.point;
        temp.time = it->second.time;
        V.push_back(temp);
    }

    sort(V.begin(), V.end(), comp);

    cout<<V[0].name<<endl;
    return 0;
}
