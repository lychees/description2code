#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
string s;
int len;
long long dp[66][3][2];

void convert(long long n) {
	s = "";
	while(n>0) {
		s += (n%2)+'0';
		n = n/2;
	}
	reverse(s.begin(),s.end());
	len = s.size();
}
long long f(int index, int carry, bool flag) {
	if(index == -1) {
		 if(!carry && flag) {
		 	return 1;	 	
		 }
		 return 0;
	}
	
	long long ans = 0;
	if(dp[index][carry][flag] != -1) {
		return dp[index][carry][flag];
	}
	for(int x =0;x<=1;x++) {
		for(int y=0;y<=1;y++) {
			for(int z=0;z<=1;z++) {
				if( (carry+x+y+z)%2 == s[index]-48 ) {
					ans = ( ans + f(index-1, (carry+x+y+z)/2,flag||(x+y+z == 3) ) )%mod;	
				}
			}
		}
	}
	
	return dp[index][carry][flag] = ans;
}
int main()
{
    int t;
    long long n;
    scanf("%d",&t);
    while(t--) {
    	memset(dp,-1,sizeof(dp));
    	scanf("%lld",&n);
    	convert(n);
    	long long cnt = f(len-1,0, false);
    	printf("%lld\n",cnt);
    }
    return 0;
}
