#include <iostream>
using namespace std;

bool isPalindrome(string s) {
	for (int i = 0; i < s.size() / 2; i++) {
		if (s[i] != s[s.size() - i - 1]) return false;
	}
	return true;
}

int helper(string s, int begin, int end) {
	int res = 0;
	while(begin >= 0 && end < s.size() && s[begin] == s[end]) {
		res++;
		begin--;
		end++;
	}
	return res;
}

int numberofPalindrome(string s) {
	int start = 0, end = 0;
	int n = s.size(), res = 0;
	
	/*
	for (int i = 0; i < n; i++) {
		for (int j = i; j < n; j++) {
			string curr = s.substr(i, j - i + 1);
			if (isPalindrome(curr)) {
				res++;
			}
		}
	}
	*/
	
	for (int i = 0; i < n; i++) {
		res += helper(s, i, i);
		res += helper(s, i, i + 1);
	}
	return res;
}

int main()
{
	string s;
	cin >> s;
	
    cout << numberofPalindrome(s) << endl;
    return 0;
}
