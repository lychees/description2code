#include <bits/stdc++.h>
using namespace std;

struct point{
	long double x, y;
};

long gcd (long a, long b){
    int m= max(a, b), n= min(a, b), r= 0;
    while(1){
        r= m% n;
        if(r == 0)
            break;
        m= n;
        n= r;
    }
    
    return n;
}

int main()
{
    int N;
    cin >> N;
    vector <point> ar(N);
    
    for(int i= 0; i< N; i++){
    	cin >> ar[i].x >> ar[i].y;
    }
    
    long double sum1= 0, sum2= 0;
    
    for(int i= 0; i< N- 1; i++){
    	sum1 += ar[i].x * ar[i+ 1].y;
    	sum2 += ar[i].y * ar[i+ 1].x;
    }
    
    long double area= 0.5 * abs(sum1- sum2+ (ar[0].y* ar[N- 1].x) - (ar[0].x* ar[N- 1].y));
    long double b= 0;
    long double X, Y;
    for(int i= 0; i< N; i++){
    	X= abs(ar[(i+ 1)% N].x- ar[i].x);
    	Y= abs(ar[(i+ 1)% N].y- ar[i].y);
    	
    	if(X== 0){
    		if(Y!= 0)    			
    			b+= Y;    		
    	}
    	else if(Y== 0)
    		b+= X;
    	else
    		b+= gcd(X, Y);
    }
    
    long i= area- (b/ 2.0) + 1;
    cout << i;
    return 0;
}
