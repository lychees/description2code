#include <cstdio>
#include <iostream>
#include <vector>
#include <list>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <functional>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef vector<int> vi;
typedef vector< vector<int> > vvi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<string> vs;

#define rep(i,n) for(int i=0;i<(n);i++)
#define forup(i,a,b) for(int i=(a);i<=(b);i++)
#define fordn(i,a,b) for(int i=(a);i>=(b);i--)
#define drep(i,n) for(i=0;i<(n);i++)
#define dforup(i,a,b) for(i=(a);i<=(b);i++)
#define dfordn(i,a,b) for(i=(a);i>=(b);i--)
#define all(x) x.begin(),x.end()
#define permute(x) next_permutation(all(x))
#define pb push_back
#define mp make_pair
#define fi first
#define sc second

int main() {
	int t,p,m,x;
	scanf("%d",&t);
	while(t--) {
		scanf("%d%d",&p,&m);
		vi val(m);
		rep(i,m)
			scanf("%d",&val[i]);
		sort(all(val));
		vector<vb> prop(m,vb(p+1,false));
		prop[0][val[0]]=true;
		rep(i,m) prop[i][0]=true;
		forup(i,1,m-1)
			forup(j,1,p) {
				prop[i][j]=prop[i-1][j] or (val[i]==j);
				if(val[i]<=j)
					prop[i][j]=prop[i][j] or prop[i-1][j-val[i]];
			}
		mii cnt;
		rep(i,p) {
			scanf("%d",&x);
			cnt[x]++;
		}
		int ans=0;
		for(mii::iterator it=cnt.begin();it!=cnt.end();it++)
			if(prop[m-1][it->sc]) ans++;
		printf("%d\n",ans);
	}
	return 0;
}
