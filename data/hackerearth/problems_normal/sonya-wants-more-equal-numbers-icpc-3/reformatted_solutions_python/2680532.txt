class count_num:
    def __init__(self):
        self.max_count = 1

    def recursive(self, row, count, elem, matrix):
        self.max_count = max(self.max_count, count)
        for r in range(row, k):
            for c in range(r, k):
                if elem == matrix[r][c]:
                    self.recursive(c+1, count+1, elem, matrix)


k = int(raw_input().strip())
nums = [int(i) for i in raw_input().strip().split()]
matrix = [[0 for i in range(k)]for i in range(k)]
for i in range(k):
    for j in range(i, k):
        if j == 0:
            matrix[i][j] = nums[j]
        else:
            matrix[i][j] = matrix[i][j-1]+nums[j]
# for elem in matrix:
# 	print elem
matrix_fre = [[0 for i in range(k)]for i in range(k)]
max_count = 1
for i in range(k):
    for j in range(i, k):
        row = j+1
        count = 1
        elem = matrix[i][j]
        c = count_num()
        c.recursive(row, count, elem, matrix)
        matrix_fre[i][j] = c.max_count
        max_count = max(max_count, c.max_count)
# print "Freq matrix:",max_count
# for elem in matrix_fre:
# 	print elem
print max_count
dict_res = {}
for i in range(k):
    for j in range(i, k):
        if matrix_fre[i][j] == max_count:
            if matrix[i][j] not in dict_res:
                dict_res[matrix[i][j]] = 1
for elem in sorted(dict_res.keys()):
    print elem,
