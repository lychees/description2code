#include<bits/stdc++.h>
#include<iostream>
using namespace std;
#define fre 	freopen("0.in","r",stdin);freopen("0.out","w",stdout)
#define abs(x) ((x)>0?(x):-(x))
#define MOD 1000000007
#define lld signed long long int
#define pii pair<int,int>
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d\n",x)
#define scanll(x) scanf("%lld",&x)
#define printll(x) printf("%lld\n",x)
vector<int> G[2*100000+5];
#define MAX_N 100000
lld t1[MAX_N+5];
lld t2[MAX_N+5];
lld read(lld *bit,int idx){
    lld sum = 0;
    if(idx==0)
		return 0;
    while (idx > 0){
    	sum += bit[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
void update(lld *bit,int idx ,lld val){
    while (idx <= MAX_N){
        bit[idx] += val;
        idx += (idx & -idx);
    }
}
lld rangeQuery(lld *bit,int i,int j){
	return read(bit,j) - read(bit,i-1);
}
int main(){
	int N,Q,L,R,K;
	lld S,x;
	cin>>N>>Q;
	for(int i=1;i<=N;++i){
		scanll(x);
		update(t1,i,x);
		update(t2,i,i*x);
	}
	while(Q--){
		int C;
		scan(C);
		if(C==1){
			scan(K);
			scan(L);
			scan(R);
			lld ans = 0;
			if(K<=L){
				ans = rangeQuery(t2,L,R) - rangeQuery(t1,L,R)*K;
			}
			else if(K<=R){
				ans = rangeQuery(t2,K,R) - rangeQuery(t1,K,R)*K
					+ rangeQuery(t1,L,K)*K - rangeQuery(t2,L,K);
			}
			else{
				ans = rangeQuery(t1,L,R)*K - rangeQuery(t2,L,R);
			}
			printll(ans);
		}
		else{
			scan(K);
			scanll(S);
			update(t1,K,S);
			update(t2,K,K*S);
		}
	}
}