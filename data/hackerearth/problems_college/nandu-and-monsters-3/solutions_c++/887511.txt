#include <stdio.h>
#include<stdlib.h>
#include <vector>
#include <algorithm>
int main()
{
   int rooms=0;
   int test=0;
   scanf("%d%d",&rooms,&test);
   int i=0;
   char *monsters = (char*)malloc(sizeof(char)*rooms);
   scanf("%s",monsters);
   for(i=0;i<test;i++)
   {
       int x=0;
       int y=0;
       scanf("%d%d",&x,&y);
       std::vector<int> path1;
        std::vector<int> path2;
        while(x>=1){
	        	path1.push_back(x);
	        	x=x/2;
	        }

	    while(y>=1){
	        	path2.push_back(y);
	        	y=y/2;
	        }

    std::reverse(path1.begin(), path1.end());
    std::reverse(path2.begin(), path2.end());
    path1.push_back(-1);
    path2.push_back(-2);

    int k=0;
	       	int index=0;
	        while(k<path1.size() && k<path2.size()){
	        	if(path1.at(k)!=path2.at(k)){
	        		index=k-1;
	        		break;
	        	}
	        	k++;

	        }

	        bool flag = false;
	        for(int j=index;j<path1.size()-1;j++){
	        	if(monsters[path1.at(j)-1]=='1'){
	        		flag=true;
	        		break;
	        	}
	       // System.out.println(path1.get(j));
	        }

	         for(int j=index;j<path2.size()-1 && !flag;j++){
	        	if(monsters[path2.at(j)-1]=='1'){
	        		flag=true;
	        		break;
	        	}
	        	//System.out.println(path2.get(j));
	        }
	         if(flag)
	        {
	        	printf("No\n");
	        }
	        	else{
	        		printf("Yes\n");
	        	}

   }



   return 0;
}
