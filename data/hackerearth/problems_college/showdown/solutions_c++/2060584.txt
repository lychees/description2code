#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define PII pair<int,int>
using namespace std;
    int n;
    vector<int> a,b;
int go(int i,int j)
{
    int s=0;
    while(i<n && j<n)
    {
        if(a[i]>b[j])
        {
            s+=100; i++;j++;
        }
        else if(a[i]<b[j])
        {
            j++;
        }
        else
        {
            int x=s+50+go(i+1,j+1);
            int y=s+go(i,j+1);
            if(x>=y)
            {
                i++;j++; s+=50;
            }
            else j++;
        }
    }
    return s;
}
int main()
{
    si(n);
    REP(i,n) { int x; si(x); a.PB(x);}
    REP(i,n) { int x; si(x); b.PB(x);}
    sort(all(a),greater<int>()); sort(all(b),greater<int>());
    cout<<go(0,0)<<endl;
	return 0;
}
