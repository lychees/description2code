#include<bits/stdc++.h>
#define LL long long int
#define REP(i,n) for(int i=0;i<n;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define TC int t;scanf("%d",&t);while (t-->0)
#define INP(x) scanf("%d",&x)
#define OUT(x) printf("%d\n",x)
#define INPLL(x) scanf("%lld",&x)
#define OUTLL(x) printf("%lld\n",x)
#define INPS(x) scanf("%s",x)
#define MEM(a,b) memset(a,b,sizeof(a))
#define MP make_pair
#define PB push_back
#define PII pair<int,int>
#define PLL pair<long long,long long>
#define VPII vector<pair<int,int >
#define F first
#define S second
#define MOD 1000000007
#define mod 10000007
using namespace std;
LL n,m,k,ux[2000],uy[2000],bx[2000],by[2000],l[2000];
bool visited[2000];
bool Path(LL us, LL bk, LL d)
{
    LL dx = ux[us]-bx[bk];
    dx*=dx;
    LL dy=uy[us]-by[bk];
    dy*=dy;

    return dx+dy<=d;
}
bool DFS(LL u,LL d)
{
    if(u==-1)
        return true;
    if(visited[u])
        return false;
    visited[u]=true;

    REP(i,m)
    {
        int id=l[i];
        if(Path(u,i,d)&&DFS(id,d))
        {
            l[i]=u;
            return true;
        }
    }
    return false;
}
LL Find(LL lm)
{
    memset(l,-1, sizeof(l));
    LL cnt=0;
    REP(i,n)
    {
        memset(visited,0,sizeof(visited));
        if(DFS(i,lm))
            cnt++;
    }
    return cnt;
}
LL BS(LL l,LL r)
{
    if(l==r)
        return l;
    LL mid=(l+r)>>1;
    LL mat=Find(mid);
    return mat>=k?BS(l,mid):BS(mid+1,r);
}
int main()
{
    INPLL(n);INPLL(m);INPLL(k);
    REP(i,n)
    {
        INPLL(ux[i]);INPLL(uy[i]);
    }
    REP(i,m)
    {
        INPLL(bx[i]);INPLL(by[i]);
    }
    OUTLL(BS(0,1e17));

}
