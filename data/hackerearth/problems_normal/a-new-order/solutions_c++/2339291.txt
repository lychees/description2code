#include<iostream>
#include<string>
#include<cstring>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;
int graph[26][26];
int main()
{
           int n;
           cin>>n;
           string arr[n];
           int present[26] = {0};
           for(int i=0;i<26;i++)
                  for(int j=0;j<26;j++)
                        graph[i][j] = 0;
           for(int i=0;i<n;i++)
           {
                  cin>>arr[i];   
                  for(int j=0;j<arr[i].length();j++)
                        present[arr[i][j]-'a'] = 1;   
           }
           for(int i=1;i<n;i++)
           {
            string b = arr[i];
            string a = arr[i-1];
            int cc = 0;
            while(a[cc] && b[cc] && a[cc] == b[cc] )
            {
                  cc++;      
            }
            if(a[cc] && b[cc])
            {
                  graph[a[cc]-'a'][b[cc]-'a'] = 1;      
            }
           }
           int indegree[26] = {0};
           int rank[26] = {0};
           for(int i=0;i<26;i++){    
            for(int j=0;j<26;j++)
             {
                        if(graph[j][i]==1)
                              indegree[i]++;
             }
           }
           queue<int> q;
           vector<int>ans[27];
           for(int i=0;i<26;i++){
            if(indegree[i]==0 && present[i]==1)
            {
                  q.push(i);
                  ans[0].push_back(i);
            }
           }   
            while(!q.empty())
            {
                  int ff = q.front();
                  q.pop();
                  for(int i=0;i<26;i++)
                  {
                        if(graph[ff][i]==1)
                        {
                              indegree[i]--;
                              rank[i] = rank[ff]+1;
                              if(indegree[i]==0)
                              {
                                    q.push(i);      
                                    ans[rank[i]].push_back(i);
                              }
                        }
                  }      
            }
            for(int i=0;i<27;i++)
            {
                  sort(ans[i].begin(),ans[i].end());
                  for(int j=0;j<ans[i].size();j++)
                        cout<<(char)(ans[i][j]+'a');
                  if(ans[i].size()>0)cout<<endl;     
            }
            //getchar();getchar();
}
