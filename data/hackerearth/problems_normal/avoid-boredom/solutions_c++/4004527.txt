#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <assert.h>
using namespace std;
typedef long long ll;
#define MAXN 101
#define INF 0x3FFFFFFFFFFFFFFFLL
ll dp[MAXN][MAXN], A[MAXN];
ll ABS(ll x) {
    if(x < 0) return -x;
    return x;
}
void solve() {
    ll N, M; scanf("%lld %lld", &N, &M);
    for(int i = 0; i < N; i++) scanf("%lld", &A[i]); ll ans = -INF;
    if(M == 1) {
        for(int i = 0; i < N; i++) ans = max(ans, A[i]);
        //assert(0);
        printf("%lld\n", 0);return;
    }
    for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) dp[i][j] = -INF;
    for(int i = 0; i < N; i++) {
        dp[i][0] = 0;
        for(int j = 1; j <= i; j++) {
            dp[i][j] = -INF;
            for(int k = 0; k < i; k++) dp[i][j] = max(dp[i][j], dp[k][j - 1] + ABS(A[k] - A[i]));
        }
        for(int j = i + 1; j < M; j++) dp[i][j] = -INF;
    }
    /*for(int i = 0; i < N; i++) {
        for(int j = 0; j < M; j++)
        printf("%lld ", dp[i][j]); printf("\n");
    }*/
    for(int i = 0; i < N; i++) ans = max(ans, dp[i][M - 1]);
    printf("%lld\n", ans);
}
int main() {
    int t = 1; scanf("%d", &t);
    while(t--) solve();
}
