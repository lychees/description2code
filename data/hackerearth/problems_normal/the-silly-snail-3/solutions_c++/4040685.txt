#include<iostream>
#include<queue>
#include<malloc.h>
using namespace std;
struct node
{
unsigned long long int data;
struct node* left;
struct node* right;
};
struct node* root=NULL;

struct node* getnewnode(unsigned long long int data)
{
struct node* temp=(struct node*)malloc(sizeof(struct node));
temp->data=data;
temp->left=NULL;
temp->right=NULL;
return temp;
}
void preorder(struct node* root)
{ if(root==NULL)
return;
cout<<root->data<<" ";
preorder(root->left);
preorder(root->right);
}

main()
{ long long int t;
cin>>t;
for(long long int z=0;z<t;z++)
{
queue<node*> que;
long long int n;
cin>>n;
for(long long int i=0;i<n;i++)
{ unsigned long long int a,b,c;
cin>>a>>b>>c;
if(i==0)
{root=getnewnode(a);
que.push(root);
}
struct node* temp=que.front();
que.pop();
while(temp->data!=a){
temp=que.front();
que.pop();
}
if(b!=0)
{struct node* temp1=getnewnode(b);
temp->left=temp1;
que.push(temp1);}
if(c!=0){
struct node* temp2=getnewnode(c);
temp->right=temp2;
que.push(temp2);
}
}
preorder(root);
if(n==0)
  cout<<"1";
cout<<endl;
root=NULL;
}
}
