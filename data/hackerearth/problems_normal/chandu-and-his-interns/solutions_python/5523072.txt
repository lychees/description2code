import math
'''
# Read input from stdin and provide input before running code

name = raw_input('What is your name?\n')
print 'Hi, %s.' % name
'''
'''
 So you just need to check if the X is 1 or a prime number or square of a prime number.
'''
a = []
def primes_sieve2(limit=0):
    a = [True] * limit                          # Initialize the primality list
    a[0] = a[1] = False

    for (i, isprime) in enumerate(a):
        if isprime:
            for n in xrange(i*i, limit, i):     # Mark factors non-prime
                a[n] = False
    return a
    
def sieve(n):
 
	isPrime = [True] * (n+1)
	isPrime[0] = False
	isPrime[1] = True
 
	i = 2
	for i in range(2, int(n**0.5)+2):
		if isPrime[i]:
			j = i ** 2
			while j <= n:
				isPrime[j] = False
				j += i
 
	return isPrime
	
n = int(raw_input())
a = sieve(10**7)
while n>0:
    bottle = int(raw_input())
    #=0
    go=int(math.sqrt(bottle))
    # for i2 in xrange(1,go):
    # 	if bottle % i2==0:
    # 		if i2*i2 == bottle:
    # 			div+=1
    # 		else:
    # 			div+=2
    # 	if div > 4:
    # 		break
    sqrtX = int(bottle**0.5)
    if a[bottle] or (sqrtX**2 == bottle and a[sqrtX]):
        print "NO"
    else:
        print "YES"
    n-=1
	
	