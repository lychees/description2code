#include <bits/stdc++.h>
using namespace std;
 
const int N = 1e5 + 100;
const int M = 1e9 + 7;
 
int powmod(int a, int b) {
	int res = 1;
	while (b) {
		if (b&1) res = res*1LL*a % M;
		a = a*1LL*a % M;
		b >>= 1;
	}
	return res;
}
 
int revmod(int a) {
	return powmod(a, M-2);
}
 
int f[N];
int cnt[N];
vector<int> samecnt[N];
map<int, int> mp;
 
int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	f[0] = 1;
	for (int i = 1; i < N; ++i) f[i] = f[i-1]*1LL*i % M;
	int tot = 0;
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i) {
		cin >> cnt[i];
		tot += cnt[i];
		mp.clear();
		for (int j = 0; j < cnt[i]; ++j) {
			int x;
			cin >> x;
			++mp[x];
		}
		for (auto it : mp) {
			samecnt[i].push_back(it.second);
		}
	}
	int ans = f[tot];
	for (int i = 0; i < n; ++i) {
		ans = ans*1LL*revmod(f[cnt[i]]) % M;
		for (auto v : samecnt[i]) {
			ans = ans*1LL*f[v] % M;
		}
	}
	cout << ans << '\n';
    return 0;
}