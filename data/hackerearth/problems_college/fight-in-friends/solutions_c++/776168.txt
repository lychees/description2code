#include<stdio.h>
#include<limits.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<sstream>
#include <map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 1000000007
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define ill long long
#define matrix vector<vector<ill> >
#define pw printf(" ")
//Rsiihsbh jain code
using namespace std;
int n;vector <pair<int,int> > adj[1005];
vector<long long int> dij(int s)
{
    vector<long long int>dis;
    dis.resize(n+1,1e12);
    dis[s]=0;
    priority_queue<pair<long long int,int> >pq;
    pq.push(mp(0,s));
    while(pq.size())
    {
        int d=-pq.top().first;
        int u=pq.top().second;
        pq.pop();
        if(dis[u]<d)
            continue;
        for(int i=0;i<adj[u].size();i++)
        {
            int v=adj[u][i].first;
            if(dis[v]>(dis[u]+adj[u][i].second))
            {
                dis[v]=dis[u]+adj[u][i].second;
                pq.push(mp(-dis[v],v));
            }
        }
    }
    return dis;
}
matrix multiply(matrix a,matrix b)
{
    matrix c;
    int row=a.size();
    int col=b[0].size();
    c.resize(row);
    for(int i=0;i<row;i++)
        c[i].resize(col,0);

    int i,j,k;
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            c[i][j]=0;
            for(k=0;k<a[0].size();k++)
            {
                c[i][j]=(c[i][j]+a[i][k]*1LL*b[k][j]%mod)%mod;
            }
        }
    }
    return c;
}

matrix matpow(matrix a,ill b)
{
    matrix c;
    c.resize(a.size());
    int i;
    for(i=0;i<a.size();i++)
        c[i].resize(a[0].size(),0);
    for(i=0;i<a.size();i++)
        c[i][i]=1;

    while(b)
    {
        if(b&1)
            c=multiply(a,c);
        a=multiply(a,a);
        b/=2;
    }
    return c;
}

int main(){


int i,j,m,b,k,x,s,y;
si(n);si(m);si(s);si(b);s--;b--;
int a[n+7][n+7];

rep(i,n){rep(j,n){a[i][j]=1;}}

rep(i,m){si(x);si(y);x--;y--;a[x][y]=0;a[y][x]=0;}

rep(i,n){rep(j,n){if(a[i][j]==1){adj[i].push_back(make_pair(j,1));}}}
vector <long long int> dis=dij(s);

if(dis[b]>=1e8){cout<<-1;}else{cout<<dis[b];}




return 0;}