#include <bits/stdc++.h>

using namespace std;
/*
int LPS(string a)
{
	int l = a.size();
	int p[l+1][l+1];
	for(int i = 0; i < l; i++) {
		p[i][i] = 1;
	}
	for(int i = 2; i <= l; i++) {
		for(int j = 0; j < l-i+1; j++) {
			int k = j+i-1;
			if(a[j] == a[k] && i == 2) {
				p[j][k] = 2;
			} else if(a[j] == a[k]) {
				p[j][k] = p[j+1][k-1] + 2;
			} else {
				p[j][k] = max(p[j][k-1],p[j+1][k]);
			}
		}
	}
	return p[0][l-1];
}
*/

int LPS(string a)
{
	int n = a.size();
	string b;
	b = a;
	reverse(b.rbegin(),b.rend());
	int l[n+1][n+1];
	for(int i = 0; i <= a.size(); i++) {
		for(int j = 0; j <= b.size(); j++) {
			if(i == 0 || j == 0) {
				l[i][j] = 0;
			} else if(a[i-1] == b[j-1]) {
				l[i][j] = l[i-1][j-1] + 1;
			} else {
				l[i][j] = max(l[i-1][j], l[i][j-1]);
			}
		}
	}
	return l[n][n];
	return 0;
}

int main()
{
	int t,n;
	cin >> t;
	while(t--) {
		string a = "";
		scanf("%d",&n);
		cin >> a;
		cout << n - LPS(a) << endl;
	}
	return 0;
}