#include <iostream>
#include <vector>
#include <cstring>
#include <queue>
using namespace std;
 
#define MAX 100002
#define MOD 1000000007
 
vector<int > G[MAX];
int  visited[MAX];
 
 void DFS(int  node)
 {
 
	visited[node] = 1;
	for(int  i=0;i<G[node].size();i++)
	{
		if(!visited[G[node][i]])
		{
			DFS(G[node][i]);
		}
	}
}
 
int main()
{
 
int t,element,comp;
    cin>>t;
    while(t--)
    {
            memset(visited,0,sizeof(visited));
            //memset(components,0,sizeof(components));
            //memset(slap,0,sizeof(slap));
           
            vector<int> Order;
            int  n,f,s;
            comp=0;
            cin >> n >> f >>s;
            for(int  i=0;i<f;i++)
            {
                int  x,y;
                cin >> x >> y;
                G[x].push_back(y);
            }
            for(int  i=0;i<s;i++)
            {
                cin>>element;
                DFS(element);
 
            }
          for(int i=1;i<n+1;i++)
          	if(visited[i])
          	  comp++;
 
            cout << comp << endl;
            for(int i=0;i<MAX;i++)
            	G[i].clear();
    }
 
}