using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),in.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
//ifstream in("input.txt");
//ofstream out("output.txt");
void solve();
int main()
{
  int t=1;
 cin>>t;
  rep(i,1,t)
  {
    solve();
  }
  return 0;
}
bool dp[101][10001];
int ar[101];
void solve()
{
  int n,i;
  cin>>n;
  rep(i,1,n) 
   cin>>ar[i];
   memset(dp,false,sizeof dp);
  dp[0][0]=true;
  rep(i,0,n)
   dp[i][0]=true;
  rep(i,1,n)
  {
     rep(j,0,10000)
     {
       if(ar[i]<=j)
        dp[i][j]=dp[i][j] or dp[i-1][j-ar[i]] or dp[i-1][j];
       else
        dp[i][j]=dp[i-1][j];
     }
  } 

  int sum=0;
  rep(i,0,10000)
      sum+=(int)dp[n][i];
  cout<<sum;e
}  


























