/*********************************   MH RIYAD  *************************************/
#include <bits/stdc++.h>
#define  pb     push_back
#define  MAX    200005
#define  mod    100000007
#define  read   freopen("input.txt","r",stdin);
#define  write  freopen("output.txt","w",stdout);
#define  inf   (1<<30)
using namespace std;
typedef long long ll ;
typedef unsigned long long ull ;

int fx[]= {+0,+0,+1,-1,-1,+1,-1,+1};
int fy[]= {-1,+1,+0,+0,+1,+1,-1,-1};

int main()
{
  //  read;
    map<string,vector<int> >mp;
    map<string, vector<int>  >:: iterator it;
    vector<int>::iterator up,low;
    int n;
    char ss[12];
    scanf("%d",&n);
    for(int i=0; i<n; i++)
    {
        scanf("%s",ss);
        string str=ss;
        int len=str.size();
        for(int j=0; j<len; j++)
        {
            string temp="";
            for(int k=j; k<len; k++)
            {
                temp+=str[k];
                mp[temp].pb(i);
            }
        }

    }
    for(it=mp.begin(); it!=mp.end(); it++)
    {
        it->second.resize(distance(it->second.begin(),unique(it->second.begin(),it->second.end())));
    }
    int q,l,r;
    scanf("%d",&q);
    int ans;
    while(q--)
    {
        scanf("%d%d",&l,&r);
        scanf("%s",ss);
        string str=ss;
        l--;
        r--;
        if(str.size()==0){
            cout<<(r-l+1)<<endl;
            continue;
        }
        int  low=lower_bound(mp[str].begin(),mp[str].end(),l)-mp[str].begin();
        int  high=upper_bound(mp[str].begin(),mp[str].end(),r)-mp[str].begin();
        ans=high-low;
        printf("%d\n",ans);


    }

    return 0;
}
