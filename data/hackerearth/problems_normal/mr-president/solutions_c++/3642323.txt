/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<int,int>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define INF 1000000007LL
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;

struct node
{
	ll a;
	ll b;
	ll c;
};
ll parent[1000005];
node arr[1000005];
bool comp(node a,node b)
{
	return a.c<b.c;
}
void ini()
{
	for(ll i=0;i<=1000004;i++)
		parent[i]=i;
}
ll root(ll a)
{
	while(a!=parent[a])
		{
		    parent[a]=parent[parent[a]];
		    a=parent[a];
		    
		}
	return a;
}
void uni(ll a,ll b)
{
	ll p=root(a);
	ll q=root(b);
	parent[p]=parent[q];
}
int main()
{

	ll n,m,k;
	sf(n);sf(m);sf(k);
	
	for(ll i=0;i<m;i++)
	{
		ll a,b,c;
		sf(a);sf(b);sf(c);
		arr[i].a=a;
		arr[i].b=b;
		arr[i].c=c;
	}
	sort(arr,arr+m,comp);
	ini();
	ll min_cost=0;
	ll ans=n-1;
	if((n-1)>k)
        ans=-1;
	for(ll i=0;i<m && n > 1;i++)
	{
		ll a=arr[i].a;
		ll b=arr[i].b;
		ll c=arr[i].c;
		if(root(a)!=root(b))
		{
		    uni(a,b);
			n--;
			min_cost+=c;
			if(min_cost+n-1<=k)
				ans=n-1;
		}
	}
	if(n>1)
        ans=-1;
	pf(ans);
}

