#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstdio>
using namespace std;
#define INF 1000000000

vector<pair<int,int> > gr[100005];
int dist[100005],path[100005];
vector<int> vi;
int main()
{
    int t;scanf("%d",&t);
    while(t--){
    	int n,k,i;scanf("%d%d",&n,&k);
    	for(i=0;i<100005;i++)	gr[i].clear();
    	vi.clear();
    	for(i=0;i<k;i++){
    		int u,v,w;scanf("%d%d%d",&u,&v,&w);
    		gr[u].push_back(make_pair(w,v));
    		gr[v].push_back(make_pair(w,u));
    	}
    	int s,d,x;cin>>s>>d>>x;
    	priority_queue<pair<int,int>,vector<pair<int,int> >, greater<pair<int,int>> > q;
    	q.push(make_pair(0,d));
    	fill(dist,dist+100005,INF);
    	dist[d]=0;
    	while(!q.empty()){
    		pair<int,int> f=q.top();
    		int u=f.second;
    		q.pop();
    		for(int j=0;j<gr[u].size();j++){
    			pair<int,int> v=gr[u][j];
    			if(dist[v.second]>dist[u]+v.first){
    				dist[v.second]=dist[u]+v.first;
    				q.push(make_pair(v.first,v.second));
    				path[v.second]=u;
    			}
    		}
    	}
    	int tot=dist[x],tmp=x;
    	//cout<<tot<<endl;
    	if(dist[x]==INF)	cout<<"No Train Found."<<endl;
    	else{
    		while(x!=d){
	    		vi.push_back(x);
	    		x=path[x];
	    	}
	    	x=tmp;
	    //	reverse(vi.begin(),vi.end());
	    //	vi.push_back(d);
	    	q.push(make_pair(0,s));
	    	fill(dist,dist+100005,INF);
	    	dist[s]=0;
	    	while(!q.empty()){
	    		pair<int,int> f=q.top();
	    		int u=f.second;
	    		q.pop();
	    		for(int j=0;j<gr[u].size();j++){
	    			pair<int,int> v=gr[u][j];
	    			if(dist[v.second]>dist[u]+v.first){
	    				dist[v.second]=dist[u]+v.first;
	    				q.push(make_pair(v.first,v.second));
	    				path[v.second]=u;
	    			}
	    		}
	    	}
	    	tmp=d;
	    	if(dist[d]!=INF)
	    	while(s!=d){
	    		vi.push_back(d);
	    		d=path[d];
	    	}
	    	d=tmp;
	    	vi.push_back(s);
	    	if(dist[d]!=INF){
	    		cout<<tot+dist[d]<<endl;
	    		for(i=vi.size()-1;i>=0;i--)	cout<<vi[i]<<" ";
	    		cout<<endl;
	    	}
	    	else	cout<<"No Train Found."<<endl;
    	}
    }
    return 0;
}
