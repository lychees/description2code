#include <iostream>
#include <vector>

using namespace std;

#define pb push_back

typedef long long ll;

const int maxn=100111;
int bit[maxn]={};

ll n,k;


void update(int key, int val){
	while(key<=n){
		bit[key]+=val;
		key+=(key & -key);
	}
}

int query(int key){
	int ans=0;
	while(key>0){
		ans+=bit[key];
		key-=(key & -key);
	}
	return ans;
}

vector<int> adj[maxn];

ll dfs(int nd){
	ll curAns=0;
	ll key=(k/nd<=n)?(k/nd):n;
	curAns=query((int)key);

	update(nd,1);
	for (int i = 0; i < adj[nd].size(); ++i)
	{
		curAns+=dfs(adj[nd][i]);
	}
	update(nd,-1);
	return curAns;
}

int main(){
	cin>>n>>k;
	int p[maxn]={};
	for (int i = 0; i < n-1; ++i)
	{
		int a,b;
		cin>>a>>b;
		p[b]=a;
		adj[a].pb(b);
	}

	for (int i = 1; i <= n; ++i)
	{
		if(p[i]==0){
			cout<<dfs(i);
			break;
		}
	}
	
}