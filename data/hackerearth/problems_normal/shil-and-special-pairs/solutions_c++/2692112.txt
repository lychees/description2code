#include <iostream>
#include <algorithm>
#define MAXN 100010

using namespace std;

int n,m,d,p[MAXN],pos[MAXN];
pair<pair<int,int>, int> q[MAXN];//r,l,i
int b[MAXN];
int ans[MAXN];

void add(int x, int val) {
    for (; x < MAXN; x += x & -x)
        b[x] += val;
}

int get(int x) {
    int res = 0;
    for (; x > 0; x -= x & -x)
        res += b[x];
    return res;
}

int main() {
    ios::sync_with_stdio(0);
    cin >> n >> m >> d;
    for (int i = 1; i <= n; i++) {
        cin >> p[i];
        pos[p[i]] = i;
    }
    for (int i = 0; i < m; i++) {
        int l,r;
        cin >> l >> r;
        q[i] = make_pair(make_pair(r,l),i);
    }
    sort(q,q+m);
    for (int i = 0, x = 0; i < m; i++) {
        int r = q[i].first.first;
        int l = q[i].first.second;
        int idx = q[i].second;
        while (x < r) {
            x++;
            for (int j = -d; j <= d; j++) {
                int z = p[x] + j;
                if (z < 1 || z > n || pos[z] > x) continue;
                add(pos[z], 1);
            }
        }
        ans[idx] = get(r) - get(l-1);
    }
    for (int i = 0; i < m; i++)
        cout << ans[i] << '\n';
}
