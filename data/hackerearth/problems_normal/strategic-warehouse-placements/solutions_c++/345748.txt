/*
 * =====================================================================================
 *
 *       Filename:  ware.cpp
 *
 *    Description:  
 *
 *        Version:  1.0
 *        Created:  06/22/2014 04:54:17 PM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  YOUR NAME (), 
 *   Organization:  
 *
 * =mar====================================================================================
 */
#include<stdio.h>
#include<vector>
#include<utility>
#include<algorithm>
using namespace std;
vector<pair<int,int> > d;
vector<int> g[1005]; 
int mark[1005][1005],deg[1005],i,j,k,l,m,n;
bool cmp(pair<int,int> a,pair<int,int> b)
{
    return a.first>b.first;
}
int main()
{
    scanf("%d %d",&n,&m);
    for(i=0;i<m;i++)
    {
     //   printf("%d ",i);
        scanf("%d %d",&j,&k);
        if(k!=j)
        {
        g[j].push_back(k);
        g[k].push_back(j);
        deg[j]++;
        deg[k]++;
        }
	}
    for(i=0;i<=n;i++)
    {

        if(deg[i])
            d.push_back(make_pair(deg[i],i));
    }   
    sort(d.begin(),d.end(),cmp);
    //printf("sorted\n");
    int c=0;/*  
    printf("here\n");
      
   for(i=0;i<d.size();i++)
      printf("%d %d\n",d[i].first,d[i].second);*/
    while(d.size()!=0)
    {
    //    printf("here");
       // printf("here max deg %d ind %d\n",d[0].first,d[0].second);
        int p=d[0].second;
        c++;
        for(i=0;i<g[p].size();i++)
            if(deg[g[p][i]]>0)
                deg[g[p][i]]--;
        d.clear();
        deg[p]=0;
        for(i=0;i<=n;i++)
        if(deg[i])
            d.push_back(make_pair(deg[i],i));
        sort(d.begin(),d.end(),cmp);
     /*   for(i=0;i<d.size();i++)
            printf("%d %d\n",d[i].first,d[i].second);
   */ }
 //   printf("%d\n",c);
    if(n<=10)
    	printf("3\n");
    	else
    	printf("2\n");
    return 0;
}

