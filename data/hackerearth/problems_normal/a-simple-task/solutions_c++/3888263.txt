
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
using namespace std;

long gcd(long a, long b)
{
	if(b==0)
		return a;
	return gcd(b, a%b);
}

int main(void)
{
	int i, j, n;
	long e, v, g, gn, sg;
	cin>>n;
	set<long> X;
	vector<long> G;

	while(n--)
	{
		cin>>e;
		X.insert(e);
	}

	vector<long> A(X.begin(), X.end());
	n = A.size();

	if(n==1)
	{
		v = A[0];
		for(e=2; e<=v; ++e)
			cout<<e<<" ";
		cout<<endl;
	}

	else
	{
		
		for(i=0; i<n; ++i)
			for(j=i+1; j<n; ++j)
				G.push_back(A[j]-A[i]);
		g = G[0];
		gn = G.size();
		for(i=1; i<gn; ++i)
			g = gcd(g, G[i]);
		
		sg = (long)sqrt(g);
		set<long> S;

		for(e = 2; e<=sg; ++e)
			if(g%e==0)
			{
				S.insert(e);
				S.insert(g/e);
			}
		S.insert(g);
		set<long>::iterator itr;
		for(itr = S.begin(); itr!=S.end(); ++itr)
			cout<<*itr<<" ";
		cout<<endl;
	}


	return 0;
}