#include<bits/stdc++.h>
using namespace std;
int n,q;
#define lx long long
const int maxn = (2*1e5+5);
int indextree[maxn];
lx a[maxn];
int round(lx x)
{
    if (x<0)
        return 0;
    if (x==0)
        return 1;
    int p=x%10;
    int r;
    while(x>0)
    {
        r=x%10;
        x/=10;
    }
    return (p==r);
}
void update(int index,int value)
{
    while(index<=n)
    {
        indextree[index]+=value;
        index+=(index&-index);
    }
}
int query(int index)
{
    int ans=0;
    while(index>0)
    {
        ans += indextree[index];
        index -= (index&-index);
    }
    return ans;
}
int main()
{
    ios::sync_with_stdio(0);
    //freopen("input.txt","r",stdin);
    cin>>n>>q;
    for (int i=1;i<n+1;i++)
    {
        cin>>a[i];
        update(i,round(a[i]));
    }
    while(q--)
    {
        int choice;
        cin>>choice;
        lx int l,r;
        cin>>l>>r;
        if (choice==1)
        {
        cout<<query(r)-query(l-1)<<endl;
        }
        else
        {
            update(l,-round(a[l]));
            a[l]=r;
            update(l,round(a[l]));
        }
    }
    return 0;
}
