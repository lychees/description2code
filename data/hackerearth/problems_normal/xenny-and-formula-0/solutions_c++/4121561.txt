/*    SHUBHAM SINHA    */
 
 
 
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>
 
#define ll long long int
#define maxN 100000
#define maxVal 100000000
#define minVal -100000000
#define mod (ll)1000000007
 
#define gcd(a,b) __gcd(a,b)
 
using namespace std;

ll n;
ll bit[maxN+5]={0};
ll a[maxN+5]; 

void update(ll i,ll v)
{
	while(i<=n)
	{
		bit[i]=(bit[i]+v)%mod;
		i=i+(i&(-1*i));
	}
}

ll query(ll i)
{
	ll r=0;
	while(i>0)
	{
		r=(r+bit[i])%mod;
		i=i-(i&(-1*i));
	}
	return r;
}

int main()
{
    #ifndef ONLINE_JUDGE
    	//freopen("in.txt","r",stdin);
    	//freopen("out.txt","w",stdout);
    #endif
	ll q,i,x,w,d,y,td,total=0,f,ans,c,p;
	scanf("%lld%lld",&q,&n);
	for(i=1;i<=n;i++)
	{
		scanf("%lld",&a[i]);
		total=(total+a[i])%mod;
		update(i,a[i]);
	}
	while(q--)
	{
		scanf("%lld%lld%lld%lld",&x,&w,&d,&y);
		//x is starting point, w is angular speed, d is decelaration and y is update value
		p=(ceil)((double)w/(double)d);
		td=(p*(2*w-(p-1)*d))/2;
		//printf("::%lld\n",td);
		if((x+td)<=n)
		{
			f=x+td;
			ans=query(f)-query(x-1);
			if(ans<0)
				ans+=mod;
		}
		else
		{
			c=((td-(n-x))/n)%mod;
			ans=total-query(x-1);
			if(ans<0)
				ans+=mod;
			f=(x+td)%n;
			ans=(ans+(total*c)%mod)%mod;
			ans=(ans+query(f))%mod;
		}
		printf("%lld\n",ans);
		total=(total+y)%mod;
		a[x]=(a[x]+y)%mod;
		update(x,y);
	}
    return 0;
}