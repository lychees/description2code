// I will always be there for you, even if as an obstacle for you to overcome, my little brother

#include <bits/stdc++.h>

using namespace std;

long long A[100005];
long long dp[100005][2];
int vis[100005][2];
int n;
int tc;

long long f(int idx, int turn)
{
    if ( idx == n ) return 0;
    if ( vis[idx][turn] == tc ) return dp[idx][turn];
    vis[idx][turn] = tc;
    long long ans;
    if ( turn == 0 ) {
        ans = A[idx] + f(idx+1, turn^1);
        if ( idx+1 < n ) ans = max(ans, A[idx] + A[idx+1] + f(idx+2, turn^1));
    }
    else {
        ans = f(idx+1, turn^1);
        if ( idx+1 < n ) ans = min(ans, f(idx+2, turn^1));
    }
    dp[idx][turn] = ans;
    return ans;
}

int main()
{
    int t;
    long long sum;
    scanf("%d", &t);
    for ( tc = 1; tc <= t; tc++ ) {
        scanf("%d", &n);
        sum = 0;
        for ( int i = 0; i < n; i++ ) scanf("%lld", &A[i]), sum += A[i];
        long long fs = f(0,0);
        long long sc = sum - fs;
        if ( fs > sc ) printf("LOSE\n");
        else if ( fs < sc ) printf("WIN\n");
        else printf("DRAW\n");
    }
    return 0;
}
