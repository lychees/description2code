#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LL long long
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define MOD 1000000000
#define SQ 112345
#define N 112345
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, A, B) for (int I = A; I <= B; ++I)
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define PII pair<int,int>

vector<int> vec[N];
LL val[N], a[N];
vector<int> arr[N];
int query(int fac, int x){
    int j = x / fac;
    j--;
    int ans = 0;
    while(j > 0){
        ans = max(ans, arr[fac][j]);
        j -= (j & -j);
    }
    return ans;
}
int update(int fac, int x, int v){
    int j = x / fac;
    while(j * fac < N){
        arr[fac][j] = max(v, arr[fac][j]);
        j += (j & -j);
    }
}


int solve(){
    int n, i, j;
    cin>>n;
    for(i = 1; i <= n; i++){
        sd(a[i]);
    }
    REP(i, 1, N - 1){
        arr[i].PB(0);
    }
    REP(i, 2, N - 1){
        j = 1;
        while(j * i < N){
            arr[i].PB(0);
            j++;
        }
    }
    int x, ans = 1;
    REP(i, 1, n){
        int ma = 1;
        x = a[i];
        if(x == 1){
            continue;
        }
        for(j = 0; j < vec[x].size(); j++){
            ma = max(ma, query(vec[x][j], x) + 1);
        }
        for(j = 0; j < vec[x].size(); j++){
            update(vec[x][j], x, ma);
        }
        ans = max(ans, ma);
    }
    cout<<ans<<endl;
}

int main(){
    int pr[N], i, j;
    REP(i, 1, N - 1){
        pr[i] = 1;
    }
    for(i = 2; i < N; i++){
        if(pr[i] == 1){
            for(j = i; j < N; j += i){
                vec[j].PB(i);
                pr[j] = 0;
            }
        }
    }
    //freopen("in.txt", "r", stdin);
    int t = 1;
    //cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
