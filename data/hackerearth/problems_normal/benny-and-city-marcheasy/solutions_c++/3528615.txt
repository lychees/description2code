#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define m_p make_pair
#define F first
#define S second
#define For(i,a,b) for(int i=a;i<b;i++)
#define Fore(i,a,b) for(int i=a;i<=b;i++)
#define rFore(i,a,b) for(int i=a;i>=b;i--)
#define tr(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)
#define all(a) a.begin(),a.end()
#define mem(a,b) memset(a,b,sizeof(a))
typedef long long int lli;
typedef pair<int,int> pii;
typedef pair<int,pii> pi3;
typedef pair<lli,lli> plli;
typedef vector<int> vi;
typedef vector<pii> vpii;
void sc(int& a){scanf("%d",&a);}
void sc(lli& a){scanf("%lld",&a);}
void sc(int& a,int& b){sc(a);sc(b);}
void sc(lli& a,lli& b){sc(a);sc(b);}
void sc(int& a,int& b,int& c){sc(a,b);sc(c);}
void sc(lli& a,lli& b,lli& c){sc(a,b);sc(c);}
void prl(int a){printf("%d\n",a);}
void prl(lli a){printf("%lld\n",a);}
void prl(){printf("\n");}
void prs(int a){printf("%d ",a);}
void prs(lli a){printf("%lld ",a);}
void prl(lli a, lli b){cout<<a<<" "<<b<<" "<<endl;}
void prl(lli a, lli b, lli c){cout<<a<<" "<<b<<" "<<c<<" "<<endl;}
void prl(lli a, lli b, lli c, lli d){cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;}
void prl(lli a, lli b, lli c, lli d, lli e){cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<endl;}
void prl(lli a, lli b, lli c, lli d, lli e, lli f){cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<" "<<f<<endl;}
int mod=1000000007;
lli modpow(lli a, lli b, lli mod){lli res=1;while(b>0){if(b&1)res=(res*a)%mod;a=(a*a)%mod;b=b/2;}return res%mod;}
#define inf INT_MAX
#define N 2000+5
int a[20][20],row[20],col[20];
int main()
{
	int n,m,c;
	sc(n,m,c);
	For(i,0,n){
		For(j,0,m){
			sc(a[i][j]);
			row[i]+=a[i][j];
			col[j]+=a[i][j];
		}
	}
	int ans=-min(m,n)*c;
	int temprowsum[20];
	For(i,1,1<<m){
		int selected_col=__builtin_popcount(i);
		int rowcol_removed=m-selected_col;
		int sum=0;
		mem(temprowsum,0);
		For(j,0,m){
			if((i>>j)&1){
				sum+=col[j];
				For(k,0,n){
					temprowsum[k]+=a[k][j];
				}
			}
		}
		sum-=c*rowcol_removed;
		sort(temprowsum,temprowsum+n);
		For(k,0,n){
			if(temprowsum[k]>=0) break;
			if(abs(temprowsum[k])>=c){
				rowcol_removed++;
				sum+=abs(temprowsum[k])-c;
			}
		}
		ans=max(ans,sum);
	}
	prl(ans);
}
