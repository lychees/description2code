#include <bits/stdc++.h>
using namespace std;

int b_s(vector<int>&temp, int l, int h, int ele)
{
	int ans = 0;
	while(l <= h) {
		int m = l + (h - l) / 2;
		if(temp[m] >= ele) {
			ans = m;
			h = m - 1;
		}
		else if(temp[m] < ele) {
			l = m + 1;
		}
	}
	return ans;
}

int find(vector<int>&v)
{
	int n = v.size();
	vector<int>temp(n);
	int ans = 0;
	for(int i = 0; i < n; i++) {
		if(i == 0) {
			temp[ans++] = v[i];
		}
		else if(temp[0] >= v[i]) {
			temp[0] = v[i];
		}
		else if(temp[ans - 1] < v[i]) {
			temp[ans++] = v[i];
		}
		else {
			int index = b_s(temp, 0, ans - 1, v[i]);
			temp[index] = v[i];
		}
	}
	return ans;
}

int main()
{
    int t;
    cin >> t;
    while(t--) {
    	int n;
    	cin >> n;
    	vector<int>v(n);
    	for(int i = 0; i < n; i++) {
    		cin >> v[i];
    	}
    	int ans = find(v);
    	//cout << ans << endl;
    	cout << n - ans << endl;
    }
    return 0;
}
