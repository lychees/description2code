#include <stdio.h>
#include <iostream>
using namespace std;
long long getInput() {
	bool minus=false;
	int result=0;
	char c;
	c=getchar();
	while(true) {
		if(c=='-') break;
		if(c>='0' && c<='9') break;
		c=getchar();
	}
	if(c=='-') minus=true; else result= c-'0';
	while(true) {
		c=getchar();
		if(c=='-') break;
		if(c<'0' || c>'9') break;
		result=10*result+ (c-'0');
	}
	if(minus)
		return -result;
	else
		return result;

}
long long gcd(long long a, long long b) {
    return b == 0 ? a : gcd(b, a % b);
}
int main()
{
	int t;
	
	t=getInput();
	for(int i=0;i<t;i++) {
		long long n,k,numbers,kCount=0;
		n=getInput();
		k=getInput();
		for(long j=0;j<n;j++){
			numbers=getInput();
			if(numbers==k) kCount++;
		}
	
	if(kCount==n){
		cout<<1<<"/"<<1;
	}
	else if(kCount<3){
		cout<<0<<"/"<<1;
	}
	else {
		long long numerator[]= {kCount,(kCount-1),(kCount-2)};
		long long denominator[]= {n,(n-1),(n-2)};
		for(int i=0;i<3;i++){
			for(int j=0;j<3 && numerator[i]>1;j++){
				long long gcD= gcd(numerator[i],denominator[j]);
				numerator[i]/=gcD;
				denominator[j]/=gcD;
			}
		}
		cout<<endl<<numerator[0]*numerator[1]*numerator[2]<<"/"<<denominator[0]*denominator[1]*denominator[2];
	}
	}
	return 0;
}

