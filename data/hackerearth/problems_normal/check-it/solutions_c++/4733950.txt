#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return (r)%MOD;
}
int n,m,t;
vector< pair<int,int> >g[5010];
int edge[50010]={};
int vis[5010]={};

void dfs(int u){
   vis[u]=1;
   int v,e;
   fr(i,0,g[u].size()){
      v=g[u][i].first;
      e=g[u][i].second;
      if(!vis[v]&&edge[e]){
         dfs(v);
      }
   }
 
} 

int main(){
  si(t);
  while(t--){
      int u,v;
      si(n);
      si(m);
      fr(i,1,n+1){
      	g[i].clear();
      	vis[i]=0;
      }
      fr(i,0,m){
        edge[i]=0;
       }
      fr(i,0,m){
         si(u),si(v);
        // g[u].pb(v); 
          g[u].pb(mp(v,i+1));
 	    g[v].pb(mp(u,i+1));
      }
      fr(i,0,n-1){
         si(u);
         edge[u]=1;
      }
      dfs(1);   
  int f=0;  
  fr(i,1,n+1){
      if(vis[i]==0){
       f=1;
       break;
     }
    }
  if(f){
   cout<<"NO\n"; 
  }
  else{
   cout<<"YES\n"; 
  }
     
  }   

return 0;
}
