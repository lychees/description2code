#include <iostream>
using namespace std;

void countPath(int mat[20][20],bool visited[20][20],int i, int j,int N,int *count){
	if(i==N-1 && j==N-1){
		*count=*count+1;
		return;
	}

	visited[i][j]=true;
	
	if(i+1<N && !visited[i+1][j] && mat[i+1][j]==0)
		countPath(mat,visited,i+1,j,N,count);
	if(i-1>=0 && !visited[i-1][j] && mat[i-1][j]==0)
		countPath(mat,visited,i-1,j,N,count);
	if(j+1<N && !visited[i][j+1] && mat[i][j+1]==0)
		countPath(mat,visited,i,j+1,N,count);
	if(j-1>=0 && !visited[i][j-1] && mat[i][j-1]==0)
		countPath(mat,visited,i,j-1,N,count);
	
	visited[i][j]=false;
	
}

int main()
{
    int T,N,i,j,count;
    int mat[20][20];
    bool visited[20][20];
    cin>>T;
    while(T--){
    	count=0;
    	cin>>N;
    	for(i=0;i<N;i++)
    		for(j=0;j<N;j++){
    			cin>>mat[i][j];
    			visited[i][j]=false;
    		}
    	if(mat[0][0]==1 && mat[N-1][N-1]==1)
    		count=0;
    	else
    		countPath(mat,visited,0,0,N,&count);
    	cout<<count<<endl;
    }
    return 0;
}
