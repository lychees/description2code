#include<cstdio>
#include<cstdlib>
int greatestcdivisor(long long int num1, long long int num2);
int noofdigit(long long int num1);


int main()
{
    
    long long int no,smaller,greater,diff1,diff2;
    int digit[20],small[20],great[20],i,position,j,d,nodigits;
    int test,tpos;
	long long int vtemp;
	scanf("%d",&test);
	for (int jj=0; jj<test;jj++){
		position=-1;
                smaller=greater=0;
                scanf("%lld", &no);
                d=noofdigit(no);
                nodigits=d;
                vtemp=no;
                while(vtemp>0)
                {
                            small[d-1]=vtemp%10;
                            great[d-1]=vtemp%10;
                            vtemp=vtemp/10;
                            d--;
                }
                for(i=0;i<nodigits;i++)
                {
                                     if(small[i]%2)
                                     {
                                                   position=i;
                                                   break;
                                     }
                }
                if(position==0)
                {
                          if(small[position]==1)
                          {
                                           small[position]=0;
                                           for(i=position+1;i<nodigits;i++)
                                           small[i]=8;
                          }
                          else
                          {
                              small[position]=small[position]-1;
                              for(i=position+1;i<nodigits;i++)
                              small[i]=8;
                          }
                }
                else
                {
                    if(small[position]==1)
                    {
                                     small[position]=0;
                                     for(i=position+1;i<nodigits;i++)
                                     small[i]=8;
                    }
                    else
                    {
                                     small[position]=small[position]-1;
                                     for(i=position+1;i<nodigits;i++)
                                     small[i]=8;
                    } 
                }
                for(i=0;i<nodigits;i++)
                smaller=smaller*10+small[i];
               int temp=position;
               if(position==0)
               {
                         if(great[position]==9)
                         {
                                          great[position]=20;
                                          for(i=position+1;i<nodigits;i++)
                                          great[i]=0;
                         }
                         else
                          {
                              great[position]=great[position]+1;
                              for(i=position+1;i<nodigits;i++)
                              great[i]=0;
                          }
               }
               else if(position>0)
               {
                    if(great[position]<9)
                    {
                    great[position]=great[position]+1;
                    for(i=position+1;i<nodigits;i++)
                    great[i]=0;
                    }
                    else if(great[position]==9)
                    {
                         if(great[position-1]<8)
                         {
                                             great[position]=0;
                                             great[position-1]+=2;
                                             for(i=position+1;i<nodigits;i++)
                                             great[i]=0;
                         }
                         else
                         {
                             tpos=position;
                         while(great[tpos-1]==8&&tpos-1>=0)
                         {
                         great[tpos]=0;
                         tpos--;
                         }
                         if(tpos==0)
                         {
                                    great[tpos]=20;
                         }
                         else
                         {
                          great[tpos]=0;
                         great[tpos-1]+=2;
                         }
                         for(i=position+1;i<nodigits;i++)
                         great[i]=0;
                         }
                         
                    }
               }
              for(i=0;i<nodigits;i++)
               greater=greater*10+great[i];
               diff1=no-smaller;
               diff2=greater-no;
               if(position==-1)
               printf("Unlimited Power\n");
               else
               {
                if(diff2%diff1==0)
                {printf("%lld/",diff2/diff1);
                printf("1\n");
                }
                else
                {
                    long int gdf=greatestcdivisor(diff2,diff1);
                   long a=diff1/gdf;
                   printf("%lld/",diff2/gdf);
                   printf("%lld\n",a);
                }
              }
          }
    }
int greatestcdivisor(long long int num1, long long int num2)
{
    if(num1%num2==0)
    return num2;
    else
    return greatestcdivisor(num2,num1%num2);
}
int noofdigit(long long int num1)
{
    int t=num1;
    int ans=0;
    while(t>0)
    {
                 ans++;
                 t=t/10;
    }
    return ans;
}
