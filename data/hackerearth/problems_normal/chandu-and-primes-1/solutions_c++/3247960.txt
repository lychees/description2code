#define MAXNUM 1000000
#include <stdio.h>

class primes {
public:
	
	int maxnum;
	bool isp[MAXNUM+1];
	int numprimes;
	int pbefore[MAXNUM+1];
	bool isap[MAXNUM+1];
	

	primes (int m) {
		maxnum = m;
		return;
	}

	int isalphaprime(int e) {
		int rem;
		int mul;
		int numdigits;
		mul = 1;
		rem = e;
		numdigits = 0;
		while (rem != 0) {
			rem = rem / 10;
			numdigits++;
			mul = mul * 10;
		}
		rem = e;
		//cout << "nd " << e  << "  " << numdigits <<  " " << mul << '\n';
		while (rem > 0) {
			//cout << "checking " << rem << '\n';
			if (isp[rem]) {
				//cout << "is alpha prime " << e << '\n';
				return true;
			}
			mul = mul / 10;
			rem  =  rem - ((rem / mul) * mul);
		}
		//cout << "not alpha prime " << e << '\n';
		return false;
	}

	void compute(){
		int i,j;
		int currp;
		int nextp;
		bool foundnextprime;
		int currm;
		int prevn, currn;
		int currbefore;
		for (i=0;i<=maxnum;i++) {
			isp[i] = true;
		}
		isp[1] = false;
		currp = 2;
		numprimes = 1;
		foundnextprime = true;
		while (foundnextprime) {
		 	currm = 2;
		 	prevn = currp;
		 	currn = currp * currm;
		 	foundnextprime = false;
			while (true) {
				currn = currp * currm;
				if (currn > maxnum) {
					break;
				}
				isp[currn] = false;
				currm += 1;
			}
			for (i=currp+1;i<=maxnum;i++) {
				if (isp[i]) {
					foundnextprime = true;
					numprimes++;
					nextp = i;
					break;
				}
			}
			currp = nextp;
		}
		currbefore = 0;
		for(i=1;i<=MAXNUM;i++) {
			if(isalphaprime(i)) {
				isap[i] = true;
				currbefore++;
			}
			else {
				isap[i] = false;
			}
			pbefore[i] = currbefore;
		}
		return;
	}
};

primes p(MAXNUM);

int diffp(int l, int r) {
	int currdiff;
	currdiff = p.pbefore[r] - p.pbefore[l];
	if (p.isap[l]) {
		currdiff++;
	}
	return currdiff;
}

int main() {
	int i;
	int idx;
	int q;
	int l, r;
	int currdiff;
	p.compute();
	scanf("%d", &q);
	for(i=0;i<q;i++) {
		scanf("%d %d\n", &l, &r);
		currdiff = diffp(l, r);
		printf("%d\n", currdiff);
		
	}

	return 0;
}
