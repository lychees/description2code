#include <cstdio>
#include <algorithm>

int t, x, y, n, w, p1, p2;
double dp[1001][1001], p, q;

double max(double a, double b)
{
	return a>b?a:b;
}

double maxChance(int coins, int points)
{
	if (points <= 0)
	{
		return 1;
	}
	if (coins == 0)
	{
		return 0;
	}
	if (dp[coins][points] != -1)
	{
		return dp[coins][points];
	}
	double case1 = maxChance(coins-1, points-x) * p + maxChance(coins-1, points) * (1 - p);
	double case2 = maxChance(coins-1, points-y) * q + maxChance(coins-1, points) * (1 - q);
	double ans = max(case1, case2);
	dp[coins][points] = ans;
	return ans;
}

int main()
{
	scanf("%d", &t);
	while (t--)
	{
		scanf("%d %d %d %d %d %d", &x, &y, &n, &w, &p1, &p2);
		p = p1/100.0;
		q = p2/100.0;
		std::fill(&dp[0][0], &dp[0][0] + sizeof(dp)/sizeof(dp[0][0]), -1);
		printf("%.6f\n", 100*maxChance(n, w));
	}
}