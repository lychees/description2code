// Subject:

#include <bits/stdc++.h>
using namespace std;

#define debug(args...) fprintf(stderr,args)

typedef long long lint;
typedef pair<int,int> pii;
typedef pair<lint,lint> pll;

const int INF = 0x3f3f3f3f;
const lint LINF = 0x3f3f3f3f3f3f3f3fll;
const int MAXN = 1010;
const int MOD = 1e9+7;

lint qntd[MAXN][MAXN];
lint total[MAXN];
pii got[MAXN];
pii v[MAXN];

int main() {
    int t;
    for(scanf("%d",&t);t--;) {
        int n,m;
        scanf("%d%d",&n,&m);
        m = min(n,m);
        for(int a=0;a<=m;++a)
            memset(qntd[a],0,sizeof(qntd[a]));
        memset(total,0,sizeof(total));
        total[0] = 1;
        for(int a=0;a<n;++a)
            scanf("%d%d",&got[a].first,&got[a].second);
        int at = 0, idx = 0;
        for(int a=0;a<n;++a) {
            for(int b=0;b<n;++b) {
                if(got[b].first == at) {
                    at = b+1;
                    v[idx++] = got[b];
                    break;
                }
            }
        }
        for(int a=0;a<n;++a) {
            for(int len = min(a+1,m); len >= 1; --len) {
                int x = v[a].second;
                lint before = qntd[len][x];
                qntd[len][x] = total[len-1];
                total[len] += qntd[len][x] - before;
                while(total[len] >= MOD) total[len] -= MOD;
                while(total[len] < 0) total[len] += MOD;
            }
        }
        lint ans = 0;
        for(int len = 1; len <= m; ++len) {
            ans += total[len];
            ans %= MOD;
        }
        printf("%lld\n", ans);
    }        
    return 0;
}
