/*
ye mera template hai
apna khud likho bc :P
*/

/*
Author : Sarvagya Agarwal
*/

#include<bits/stdc++.h>
using namespace std;

//defines
#define openin freopen("input.txt","r",stdin)
#define openout freopen("output.txt","w",stdout)
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
//#define int long long
#define mod 1000000007
#define rep(i,a,n) for(__typeof(n) i=a;i<=n;++i)
#define all(c) (c).begin(),(c).end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

//templates
template <typename T>T expo(T e, T n){T x=1,p=e;while(n){if(n&1)x=x*p;p=p*p;n>>=1;}return x;}
template <typename T>T power(T e, T n, T m){T x=1,p=e;while(n){if(n&1)x=(x*p)%m;p=(p*p)%m;n>>=1;}return x;}
template <typename T> T InverseEuler(T a, T m){return (a==1? 1 : power(a, m-2, m));}
template <typename T> T gcd(T a, T b){while(a%=b^=a^=b^=a); return b;}
template <typename T> T lcm(T a, T b){return (a*(b/gcd(a,b)));}


//debug
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
		cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
		const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

// DOBARA OVERFLOW KI GALTI HUI TO TU CHUTIYA HAI BC
// update : TU CHUTIYA HAI BC
const int MAX = 10000001;
bool v[MAX];
int sp[MAX];
ll ans[MAX];
void sieve()
{
    //trace("haha");
    for(int i=2;i<MAX;i+=2)sp[i]=2;
    for(long long int i=3;i<MAX;i+=2){
        if(v[i]==false)
        {
            //trace(i);
            sp[i] = i;
            for(long long int j=i;(j*i)<MAX;j+=2){
                    //trace(j);
                if(v[i*j]==false){
                    v[i*j]=true;
                    sp[i*j] = i;
                }
            }
        }
    }
    //trace("haha");
    ans[1] = 0ll;
    rep(i,2,MAX-1)
    {
        //trace(i);
        ans[i] = 1 + ans[i/sp[i]];
        //trace(ans[i]);
        //ans[i] += ans[i-1];
        //trace(ans[i]);
    }
    rep(i,2,MAX-1)ans[i]+=ans[i-1];
    //trace("haha");
}
int main()
{
    //fast;
    sieve();
    //rep(i,1,10)trace(i,ans[i]);
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        printf("%lld\n",ans[n]);
    }
    return 0;
}
