#include<bits/stdc++.h>
 
using namespace std;
 
char arr[32][32];
long long  n,cnt=0,mm=INT_MAX;
int visited[32][32];
 
void dfs(long long i,long long j)
{

	if(arr[i][j]=='E')
	{
		mm=min(mm,cnt);
	//	visited[i][j]=0;
		cnt--;
		return ;
	}
	
		visited[i][j]=1; 
	if(i+1<=n && (arr[i+1][j]=='P'||arr[i+1][j]=='E')&& visited[i+1][j]==0)
	{
		cnt++;
		dfs(i+1,j);
	}
	if(i-1 >=1 && (arr[i-1][j]=='P'||arr[i-1][j]=='E')&& visited[i-1][j]==0)
	{
		cnt++;
		dfs(i-1,j);
	}
	if(j+1<=n && (arr[i][j+1]=='P'||arr[i][j+1]=='E')&& visited[i][j+1]==0)
	{
		cnt++;
		dfs(i,j+1);
	}
	if(j-1>=0 && (arr[i][j-1]=='P'||arr[i][j-1]=='E')&& visited[i][j-1]==0)
	{
		cnt++;
		dfs(i,j-1);
	}
	cnt--;
	visited[i][j]=0;
	return ;
}
int main()
{  	
	//freopen("route.in","r",stdin);
	//freopen("route.out","w",stdout);
	
	long long i,j;
	cin>>n;

for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
	cin>>arr[i][j];
	visited[i][j]=0;
}
}
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			if(arr[i][j]=='S')
			{
				dfs(i,j);
				cout<<mm<<endl;
				break;
			}
		}
		
	}
	return 0;
}