#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>

using namespace std;

bool f[1001];
int n, k;
int w[1000];
int dp[1001];
vector<int> ww;
const int M = 1000000007;

int go(int idx) {
	if (idx >= n) return 1;
	int& ret = dp[idx];
	if (ret >= 0) return ret;
	ret = go(idx+1);
	for (int i = 0; i < ww.size(); i++) {
		if (idx+ww[i] > n) break;
		ret += go(idx+ww[i]+1);
		if (ret >= M) ret -= M;
	}
	return ret;
}

int main()
{
	memset(dp, 0xff, sizeof(dp));
	cin >> n >> k;
	for (int i = 0; i < k; i++) cin >> w[i];
	sort(w, w+k);
	f[0] = true;
	for (int i = 0; i < n; i++) if (f[i]) {
		for (int j = 0; j < k; j++) {
			int jj = i + w[j];
			if (jj <= n) f[jj] = true;
		}
	}
	for (int i = 1; i <= n; i++) if (f[i]) ww.push_back(i);
	cout << go(0) << endl;
	
    return 0;
}
