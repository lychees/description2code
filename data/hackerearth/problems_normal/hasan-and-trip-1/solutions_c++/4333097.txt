#include <bits/stdc++.h>
using namespace std;
#define MAXN 3005
 
std::vector<pair<double,double> > vec;
#define inf INT_MAX
long double f[MAXN];
long double dp[MAXN][MAXN];
long double dist(int i,int j){
	return (long double)sqrt((vec[i].first - vec[j].first)*(vec[i].first - vec[j].first) + (vec[i].second - vec[j].second)*(vec[i].second - vec[j].second));
}
long double solve(int n,int i,int j){
 
	if(dp[i][j]!=-inf)
		return dp[i][j];
 
	if(i==j)
		return f[i];
	for(int k=i+1;k<=j;k++){
		dp[i][j] = max(dp[i][j],solve(n,k,j) + f[i] - dist(i,k));
		// cout << "value of dp for " << i << " and " << j << " is " << dp[i][j] << endl;
	}
	return dp[i][j];
}
int main(){
 
	int n,x,y;
	cin >> n;
	for(int i=0;i<n;i++){
		cin >> x >> y >> f[i];
		vec.push_back(make_pair(x,y));
	}
	for(int i=0;i<=n;i++)
		for(int j =0;j<=n;j++)
			dp[i][j] = -inf;
	long double ans  = solve(n,0,n-1);
	printf("%0.6Lf\n", ans);
	return 0;
}