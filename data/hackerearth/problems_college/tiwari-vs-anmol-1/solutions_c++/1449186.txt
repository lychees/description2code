#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }
#define mod 1000000007
long int BITree[1000005];
bool prime[1000001];
long int a[1000001];
long int n1=1000005;
void update(int idx ,int val){
	idx++;
	while (idx <= n1){
		BITree[idx] =(BITree[idx]+val)%mod;
		idx += (idx & -idx);
	}
}
int construct( int n)
{




    for (int i=0; i<n; i++)
        update(i, a[i]);


    return 0;
}
long int read(int idx)
{
   long int sum = 0;
	idx++;
	while (idx > 0){
		sum = (sum+BITree[idx])%mod;
		idx -= (idx & -idx);
	}
	return sum%mod;
}
void sieve(long int n)
{
	memset(prime , true , sizeof(prime));
	a[0]=a[1]=0;
	prime[0] = prime[1] = false;
	long int m = (long int)sqrt(n);
	long int i , k;
	rer(i , 2, m) {
      		if (prime[i]) {
         		for (int k=i*i; k<=n; k+=i) {
            			prime[k]=false;
            			if(a[k]==0)
            			a[k]=i;
            		}
            	}
	}
}
int main()
{
	int i , j ,t , b , c , len;
	scanf("%d" , &t);

	n1=1000004;
	sieve(1000000);

			construct(n1);
	while(t--) {

			scanf("%d%d" ,&b , &c);
				printf("%ld\n" , read(c)-read(b-1));
	}
	return 0;
}
