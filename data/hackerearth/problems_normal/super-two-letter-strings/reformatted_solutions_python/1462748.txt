def stupid(n, p):
    ret = 0
    for i in range(1 << n):
        b = bin(i)[2:].zfill(n)
        if b[0] == '1' or '1' * p in b:
            continue
        ret += 1
    return ret


N = 10 ** 4 + 1
P = 11
MOD = 10 ** 9 + 7
dp = [[[0 for i in range(P)] for k in range(P)] for j in range(N)]

for i in range(P):
    dp[1][i][0] = 1

for i in range(1, N - 1):
    for k in range(1, P):
        for j in range(k):
            dp[i + 1][k][0] = (dp[i][k][j] + dp[i + 1][k][0]) % MOD
            dp[i + 1][k][j + 1] = (dp[i][k][j] + dp[i + 1][k][j + 1]) % MOD

for t in range(input()):
    a, b = map(int, raw_input().split())
    print sum(dp[a][b][:b]) % MOD
