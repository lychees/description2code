#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define vi vector <int> 
#define vl vector <ll>
#define pii pair <int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define FOR(i,n) for(int i =1;i<=n;i++)
#define For(i,n) for(int i=0;i<n;i++)
#define MAX 1000100
#define MOD 1000000007
#define INF 2000000000
#define matrix vector < vector<ll> >
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define pi(x) printf("%d",x);
#define pl(x) printf("%lld",x);
#define graph vector < pair < int,pair<int,int> > >

int parent[1009]={0};
//ll sum=0;

void init(int n)
{
	for(int i=0;i<n;i++)
	parent[i]=i;
}

int find_parent(int x)
{
	return (x==parent[x])?x:parent[x]=find_parent(parent[x]);
}

ll kruskal(graph G)
{
	ll sum=0;
	sort(all(G));
	for(int i=0;i<G.size();i++)
	{
		int par_u=find_parent(G[i].second.first);
		int par_v=find_parent(G[i].second.second);
		if(par_u!=par_v)
		{
			sum+=G[i].first;
			parent[par_u]=par_v;
		}
	}
	return sum;
}

int main()
{
	int t,N;
	cin>>t;
	while(t--)
	{
		graph g;
		cin>>N;
		ll R[N];
		init(N); // NEVER FORGET THIS THING ...
		for(int i=0;i<N;i++)
		scanf("%lld",&R[i]);
		ll w;
		for(int i=0;i<N-1;i++)
		{
			for(int j=i;j<N;j++)
			{
				w=R[i]+R[j];
				g.pb(mp(w,mp(i,j)));
				//G.pb(mp(w,mp(j,i)));
			}
		}
		ll ans=kruskal(g);
		cout<<ans<<endl;
	}
	return 0;
}
