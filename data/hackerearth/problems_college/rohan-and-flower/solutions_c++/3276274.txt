#include<bits/stdc++.h>
#define sz(x) (int)(x.size())
using namespace std;
typedef long long lld;
 
 
lld gcd(lld a, lld b)
{
	if( b == 0) return a;
	return gcd(b, a%b);
}
map<int, int> dp[2014][4]; // what is this data structure
//it is same as dp[2012][4][MA];
// here 3rd state is divisor. it could be any number less than 10 ^ 6
map<int, int> :: iterator it;
// it stores a x and corresponding y
// x -> y
vector<int> a;
int solve(int n, int t, int d)
{
	if(t == 0)
	{
		if(d == 1) return 1;
		return 0;
	}
	else if( n == 0) return 0;
	it = dp[n][t].find(d);
	if(it != dp[n][t].end())
	 return it -> second;
	int ret = 0;
	
	//use it
	int g = gcd(a[n-1], d);
	ret += solve(n-1, t-1, d/g);
	//don't use it
	ret += solve(n-1, t, d);
	dp[n][t][d] = ret;
	return ret;
}
 
int main()
{
	//freopen("Input5.txt", "r", stdin);
	//freopen("Output5.txt", "w", stdout);
	int n, K;
	cin >> n >> K;
	for(int i = 0; i < n; i++)
	{
		int g; cin >> g;
		a.push_back(g);
	}
	int ans = solve(n, 3, K);
	cout << ans << endl;
	// jhhkhkhhkh
	// jkdhskghdkfghdfkghdkgdhgkdhgkdsghkdfsg
	return 0;
}