#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <chrono>
#include <climits>
#include <map>
#include <stack>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <cstddef>
#include <memory>
#include <cinttypes>
#include <bitset>
#include <set>
#include <cstring>
#include <sstream>
#include <functional>
#include <cmath>
#include <queue>
#include <cassert>
#define si(n)scanf("%d",&n)  
#define sll(n)scanf("%lld",&n)
#define pi(n)printf("%d\n",n)
#define pll(n)printf("%lld\n",n)
#define pn()printf("\n")
//@author Jaydeep Maddipati
using namespace std; using ll = long long;
int c[2500][2500], dp[2500][2500];
int main(){
	//freopen("in.txt", "r", stdin);
	std::ios::sync_with_stdio(false); int t; si(t);
	while (t--){
		int n, k; si(n); si(k);
		for (int i = 0; i < n; i++){
			for (int j = 0; j < n; j++){
				si(c[i][j]);
			}
		}
		dp[n - 1][n - 1] = 0;
		for (int i = n - 2; i >= 0; i--){
			dp[n-1][i] = c[n-1][i] + dp[n-1][i + 1];
			dp[i][n - 1] = c[i][n - 1] + dp[i + 1][n - 1];
		}
		for (int i = n - 2; i >= 0; i--){
			for (int j = n - 2; j >= 0; j--){
				dp[i][j] = c[i][j]+max(dp[i + 1][j], dp[i][j + 1]);
			}
		}
		int diff = dp[0][0] - k;
		if (diff >= 0)pi(diff);
		else pi(-1);
	}
	return 0;
}