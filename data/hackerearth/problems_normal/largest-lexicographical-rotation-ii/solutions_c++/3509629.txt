using namespace std;
#include <bits/stdc++.h>
#define foreach(i,n) for(__typeof((n).begin())i =(n).begin();i!=(n).end();i++)
#define sgn(x,y) ((x)+eps<(y)?-1:((x)>eps+(y)?1:0))
#define rep(i,n) for(__typeof(n) i=0; i<(n); i++)
#define mem(x,val) memset((x),(val),sizeof(x));
#define rite(x) freopen(x,"w",stdout);
#define read(x) freopen(x,"r",stdin);
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define sqr(x) ((x)*(x))
#define pb push_back
#define mp make_pair
#define clr clear()
#define inf (1<<30)
#define ins insert
#define xx first
#define yy second
#define eps 1e-9
typedef long long i64;
typedef unsigned long long ui64;
typedef string st;
typedef vector<int> vi;
typedef vector<st> vs;
typedef map<int,int> mii;
typedef map<st,int> msi;
typedef set<int> si;
typedef set<st> ss;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
int minmove(st &inp){
	int len = sz(inp);
    int ret=0,l=0,idx=1;
    while(ret+l+1<len && idx<len){
        int cp=inp[ret+l]-inp[(idx+l)%len];
        if(!cp) l++;
        else if(cp<0) idx+=l+1,l=0;
        else ret=max(ret+l+1,idx), idx=ret+1, l=0;
    }
    return ret;
}
int main() {
    ios_base::sync_with_stdio(0);
    st inp;
    cin >> inp;
    rep( i , sz(inp) ) inp[i] = 25-inp[i]+'a'*2;
    int start = minmove(inp);
    rep( i , sz(inp) ) inp[i] = 25-inp[i]+'a'*2;
    rep(i,sz(inp)){
        cout << inp[start];
        start = ( start + 1 ) % sz(inp) ;
    }
    cout << endl;
    return 0;
}