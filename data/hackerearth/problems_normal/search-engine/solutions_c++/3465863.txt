#include <bits/stdc++.h>

#define all(v) (v).begin(),(v).end()
#define INF int(1e8)
#define NINF int(-1e8)
#define clr(a,v) memset(a,v,sizeof(a))
#define ll long long
#define ull unsigned long long
#define ld long double
#define eps 1e-8
#define PI acos(-1)
#define readFile freopen("in.txt","r",stdin)
#define writeFile freopen("out.txt","w",stdout)
#define fastio ios_base::sync_with_stdio(false)

using namespace std;

const int N = 1000100;
char s[N];

struct node{
    int p;
    node *children[26];
    node(){}
    node(int x){
        p = x;
        clr(children,NULL);
    }
};

void insert(node *root, const char *s, int p){
    if(s[0]=='\0') return;
    int idx = s[0]-'a';
    if(root->children[idx]==NULL) root->children[idx] = new node(p);
    else if(root->children[idx]->p < p) root->children[idx]->p = p;
    insert(root->children[idx],s+1,p);
}

int query(node *root, const char *s){
    if(s[0]=='\0') return root->p;
    int idx = s[0]-'a';
    if(root->children[idx]==NULL) return -1;
    return query(root->children[idx],s+1);
}

int main() {
#ifndef ONLINE_JUDGE
    readFile;
#endif
    fastio;
    int n,q; scanf("%d%d",&n,&q);
    node *trie = new node();
    while(n--){
        scanf("%s",s);
        int p;
        scanf("%d",&p);
        insert(trie,s,p);
    }
    while(q--){
        scanf("%s",s);
        printf("%d\n",query(trie,s));
    }
    return 0;
}