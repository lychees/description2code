#include<stdio.h>
#include<stdlib.h>      //malloc
#include<string.h>      //memset
#include<stdbool.h>
#include<math.h>
#include<iostream>
#include<cstdio>
#include<vector>
#include<queue>
#include<algorithm>     //sort()
#include<cmath>         //abs()
#include<set>
using namespace std;
#define MOD 1000000007
#define SIZE 100005
#define dump(x) printf(#x" = %lld\n",x);
#define INF 200005
typedef long long int ll;
#define max(x,y) ((x) > (y) ? (x) : (y))
#define min(x,y) ((x) < (y) ? (x) : (y))
#define abs(x) ((x) < 0 ? (-(x)) : (x))
#define CONTEST 1
#define EPSILON 8.33e-3
#define LIMIT 5000000
ll scan(void){
    int n=0;
    bool flag = false;
    char ch = getchar_unlocked();
    while((ch<'0'||ch>'9') && ch!='-')
        ch = getchar_unlocked();
    if(ch=='-'){
        flag = true;
        ch = getchar_unlocked();
    }
    while(ch>='0'&&ch<='9'){
        n = (n<<3)+(n<<1)+ch-'0';
        ch = getchar_unlocked();
    }
    if(flag)
        n = -n;
    return n;
}
void print(ll n){
    int i=0;
    char num[20];
    do{
        num[i++] = n%10+'0';
        n/=10;
    }while(n);
    i--;
    while(i>=0)
        putchar_unlocked(num[i--]);
    putchar_unlocked('\n');
}
int main(void){
    int t;
    t=scan();
    while(t--){
        int n,x,i,j;
        n=scan();x=scan();
        int p[1002];
        for(i=0;i<n;i++)
            p[i+1] = scan()-x;
        ll dp[1003][1003]={{0}};
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                if(i<j)
                    dp[i][j] = dp[i][j-1];
                else{
                    dp[i][j] = max(p[j]+dp[i-j][j], dp[i][j-1]);
                }
            }
        }
        printf("%lld\n",dp[n][n]);
    }
    return 0;
}