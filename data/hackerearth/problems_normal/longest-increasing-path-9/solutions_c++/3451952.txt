#include <bits/stdc++.h>
using namespace std;
bool check(int i ,int j,int n,int m) {
	if(i>=0 && i<n && j>=0 && j<m) return true;
	return false;
}
/*void fun(int i,int j,int n,int m) {
	if(check(i,j+1,n,m) && vec[i][j+1]>vec[i][j] ) {
		if(ans[i][j+1]<ans[i][j]+1){
		ans[i][j+1]=ans[i][j]+1;
		fun(i,j+1,n,m);
		}
	}
	if(check(i+1,j,n,m) && vec[i+1][j]>vec[i][j] ) {
		if(ans[i+1][j]<ans[i][j]+1){
		ans[i+1][j]=ans[i][j]+1;
		fun(i+1,j,n,m);
		}
	}
}*/
int main()
{
    int t;
    cin>>t;
    while(t--) {
    	int n,m,i,j,a;
    	cin>>n>>m;
    	int vec[n+1][m+1],ans[n+1][m+1];
    	for(i=0;i<=n;i++) {
    		for(j=0;j<=m;j++) {
    			if(i==0 || j==0) {
    				vec[i][j]=0;
    			}
    			else{
    				cin>>vec[i][j];
    			}
    			ans[i][j]=INT_MIN;
    		}
    	}
    	ans[1][1]=1;
    	int res=0;
    	for(i=1;i<=n;i++) {
    		for(j=1;j<=m;j++) {
    			if(vec[i][j]>vec[i-1][j] && vec[i][j]>vec[i][j-1])
    			ans[i][j]=max(ans[i][j],max(ans[i-1][j],ans[i][j-1])+1);
    			else if(vec[i][j]>vec[i-1][j])
    			ans[i][j]=max(ans[i][j],ans[i-1][j]+1);
    			else if(vec[i][j]>vec[i][j-1])
    			ans[i][j]=max(ans[i][j],ans[i][j-1]+1);
    			if(ans[i][j]>res) res=ans[i][j];
    		}
    	}
    	cout<<res<<endl;
    }
    return 0;
}
