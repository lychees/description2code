/*mjss...................................sugam goyal............................mjss*/
#include<bits/stdc++.h>
using namespace std;
#define LL long long
#define S 1000005
#define W while
#define M 1000000007
#define str string
#define pi 3.14159265
LL mini=INT_MAX;
LL maxi=INT_MIN;
void initi(int a[],int n)
{
	for(int i=0;i<n;i++)
		a[i]=-1;
}
bool cmp(pair<LL,LL> p1,pair<LL,LL> p2)
{
	if(p1.first==p2.first&&p2.second==p1.second)
		return 1;
	if(p1.second==p2.first&&p2.second==p1.first)
		return 1;
	return 0;
}
vector<pair<LL,LL> > v[100003];
int parent[100003];
int finding_time[100003];
int low[100003];
int cnt=1;
vector<pair<LL,LL> > ans[100002];
int visited[100003];
void dfs(int i)
{
	static int cnt=0;
	visited[i]=1;
	for(int j=0;j<v[i].size();j++)
	{
		int k=v[i][j].first;
		int index=v[i][j].second;
		if(parent[i]==k)
			continue;
		else if(visited[k])
			low[i]=min(low[i],low[k]);
		else{
			low[k]=++cnt;
			finding_time[k]=cnt;
			parent[k]=i;
			dfs(k);
			
			if(finding_time[i]<low[k])
			{
				ans[index].push_back(make_pair(i,k));
			}
			low[i]=min(low[i],low[k]);
			 
		}
	}
}
int main()
{
	int n,m1;
	cin>>n>>m1;
	for(int i=0;i<m1;i++)
	{
		LL a,b;
		cin>>a>>b;
		v[a].push_back(make_pair(b,i+1));
		v[b].push_back(make_pair(a,i+1));
	}
	initi(parent,n);
	low[1]=0;
	finding_time[1]=0;
	for(int i=1;i<=n;i++)
	{
		if(!visited[i])
		{
			visited[i]=1;
			dfs(i);
		}
	}
	int q;
	cin>>q;
	W(q--)
	{
		int p;
		cin>>p;
		int flag=0;
		
		if(!ans[p].size())
			cout<<"Happy\n";
		else cout<<"Unhappy\n";
	}	
	cout<<endl;
	return 0;
}