#include<stdio.h>
#include<string.h>
typedef long long LL;
int A[12],R[1005][1030],I[1024004],Q[1024004];
int M[1024004],indx[1024004],X[1024004];
int main() {
    int i,n,T,flag,l,r,j;
    int x,temp,rem,temp1,num;
    char a[30];
    scanf("%d",&T);
    while(T--) {
        getchar();
        n=0;
        for(i=0;i<1005;i++) for(j=0;j<1030;j++) R[i][j]=0;
        gets(a);
        for(i=0;a[i]!='\0';i++) if(a[i]>='0' && a[i]<='9') A[n++]=a[i]-'0';
        scanf("%d",&x);
        for(i=0;i<n;i++) for(j=0;j<n-1;j++) {
            if(A[j+1] < A[j]) {
                temp=A[j+1];
                A[j+1]=A[j];
                A[j]=temp;
            }
        }
        temp1=0;
        r=1;
        for(i=0;i<n;i++) {
            temp1=temp1|(1<<A[i]);
            if(A[i]) {
                Q[r]=A[i]%x;
                rem=Q[r]%x;
                temp=0|(1<<A[i]);
                I[r]=temp;
                R[rem][temp]=1;
                indx[r]=-1;
                M[r]=A[i];
                r++;
            }
        }
        l=1;flag=0;
        while(1) {
            if(l>=r) break;
            if(!Q[l] && I[l]==temp1) {
                temp=l;i=0;
                while(temp!=-1) {
                    X[i++]=M[temp];
                    temp=indx[temp];
                }
                flag=0;
                for(j=i-1;j>=0;j--) {
                    if(X[j]!=0) flag=1;
                    if(flag) printf("%d",X[j]);
                }
                printf(" = %d * ",x);
                flag=0;num=0;
                for(j=i-1;j>=0;j--) {
                    temp=num*10+X[j];
                    num=temp%x;
                    if(temp/x) flag=1;
                    if(flag) printf("%d",temp/x);
                }
                printf("\n");
                flag=1;
                break;
            }
            for(i=0;i<n;i++) {
                temp=I[l]|(1<<A[i]);
                rem=(Q[l]*10+A[i])%x;
                if(!R[rem][temp]) {
                    Q[r]=(Q[l]*10+A[i])%x;
                    M[r]=A[i];
                    indx[r]=l;
                    I[r++]=temp;
                    R[rem][temp]=1;
                }
            }
            l++;
        }
        if(!flag) printf("Impossible\n");
    }
    return 0;
}