#include<bits/stdc++.h>
using namespace std;
#define mk make_pair
#define pb push_back
#define int long long int
#define lf double
#define M 1000000007
std::list<pair<int,int> > v[100005];
std::list<pair<int,int> >::iterator i;
int dis[100005],a[100005],b[100005],t1[100005],t2[100005];
void bu(int in,int v)
{
        for(int i=in;i<100005;i+=(i&-i))
        t1[i]+=v;
}
void bu1(int in,int v)
{
        for(int i=in;i<100005;i+=(i&-i))
        t2[i]+=v;
}
int q(int v)
{
        int sum=0;
        for(int i=v;i>0;i-=(i&-i))
        sum+=t1[i];
        return sum;
}
int q1(int v)
{
        int sum=0;
        for(int i=v;i>0;i-=(i&-i))
        sum+=t2[i];
        return sum;
}
void dijkstra(int s)
{
	dis[s]=0;
	set<pair<int,int> >se;
set<pair<int,int> >::iterator it;
	se.insert(make_pair(0,s));
	while(!se.empty())
	{
		it=se.begin();
		int u=it->second;
		se.erase(it);
		for(i=v[u].begin();i!=v[u].end();i++)
		{
			int dest=i->first;
			int wt=i->second;
			if(dis[dest]>dis[u]+wt)
			{
				if(dis[dest]!=100000000000000000)
				{
					se.erase(se.find(pair<int,int>(dis[dest],dest)));
				}
				dis[dest]=dis[u]+wt;
				se.insert(make_pair(dis[dest],dest));
			}
			
		}
		
	}
}
 main()
{
	
	
		
		
	int vr,e,i,s,a1,b1,wt,ans;
		scanf("%lld %lld %lld",&vr,&e,&s);
		for(i=1;i<=vr;i++)
		{
			scanf("%lld",&a[i]);
			dis[i]=100000000000000000;
		}
		for(i=0;i<e;i++)
		{
			scanf("%lld %lld %lld",&a1,&b1,&wt);
			v[a1].push_front(make_pair(b1,wt));
			v[b1].push_front(make_pair(a1,wt));
		}
		
		
		dijkstra(s);
		for(i=1;i<=vr;i++)
		{
		     //   cout<<dis[i]<<endl;
		        if(dis[i]==100000000000000000)
		        a[i]=0,dis[i]=0;
		        b[i]=a[i]*dis[i];
		}
		for(i=1;i<=vr;i++)
		{
		        bu(i,a[i]);
		        bu1(i,b[i]);
		}
	        for(i=1;i<=vr;i++)
	        {    
	                if(a[i]==0){
	                cout<<"0 ";continue;}
	                   ans=0;
	                ans+=(q(vr)-a[i])*dis[i];
	                ans+=q1(vr)-b[i];
	                printf("%lld ",ans);
	        }


}
