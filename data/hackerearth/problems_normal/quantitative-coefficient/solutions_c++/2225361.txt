#include <bits/stdc++.h>
#define ll             long long
#define pi             pair <int,int>
#define pl             pair <ll,ll>
#define ps             pair <string,string>
#define vi         vector <int>
#define vl             vector <ll>
#define vpi            vector <pi>
#define vpl            vector <pl>
#define st             string
#define vs             vector <st>
#define f(i,a,b)       for(ll i=(a);i<(b);i++)
#define fd(i,a,b)      for(ll i=(a);i>(b);i--)
#define Max(a,b)       ((a)>(b)?(a):(b))
#define Min(a,b)       ((a)<(b)?(a):(b))
#define x              first
#define y              second
#define si(a)          scanf("%d",&a)
#define sii(a,b)       scanf("%d %d",&a,&b)
#define siii(a,b,c)    scanf("%d %d %d",&a,&b,&c)
#define sl(a)          scanf("%lld",&a)
#define sll(a,b)       scanf("%lld %lld",&a,&b)
#define slll(a,b,c)    scanf("%lld %lld %lld",&a,&b,&c);
#define pf             printf
#define pfi(n)         printf("%d\n",n)
#define pfis(n)         printf("%d ",n)
#define pfl(n)         printf("%lld\n",n)
#define pfls(n)        printf("%lld ",n)
#define pfci(n,ans)    printf("Case %lld: %d\n",n,ans)
#define pfcl(n,ans)    printf("Case %lld: %lld\n",n,ans)
#define pfcd(n,ans)    printf("Case %lld: %lf\n",n,ans)
#define pb             push_back
#define all(v)         v.begin(),v.end()
#define mem(a,v)       memset(a,v,sizeof(a))
#define INF 1e17
#define MAX 100007
#define MOD 1000000007
 
using namespace std;
 
ll par[5007];
pl E[MAX];
pl C[MAX];
ll Find (ll a) { return par[a]==a?a:par[a]=Find(par[a]); }
void Union (ll a,ll b){
	par[Find(b)]=Find(a);
}
 
int main(){
	ll T,N,M;
	sl(T);
	while (T--){
		sll(N,M);
		f(i,0,M){
			ll a,b,c;
			slll(a,b,c);
			E[i]={a,b};
			C[i]={c,i};
		}
		f(i,0,N+1) par[i]=i;
		sort (C,C+M);
		ll sum=1;
		ll cnt=0;
		f(i,0,M){
			if (Find(E[C[i].y].x)!=Find(E[C[i].y].y)){
				sum=(sum*C[i].x)%MOD;
				Union(E[C[i].y].x,E[C[i].y].y);
				cnt++;
			}
		}
		if (cnt==N-1) pfl(sum);
		else pf("0\n");
	}
}