#include<bits/stdc++.h>

using namespace std;
#define ll long long int
#define mq 1000000007
#define pb push_back
#define mk make_pair
#define fi first
#define se second
#define pii pair<ll, ll>

int fact[505];

ll invmod(ll a) {

	ll x=1, y=a, b=mq-2;
	while (b>0) {
		if(b%2==1) {
			x=(x*a)%mq;
		}
		a=(a*a)%mq;
		b=b/2;
	}
	
	return x;
}

ll comb(int n, int k) {

	if(k==0 || n-k == 0){
		return 1;
	}

	ll ans=fact[n];
	ans = (ans*invmod(fact[n-k]))%mq;
	ans = (ans*invmod(fact[k]))%mq;
	return ans;

}

int main() {

	vector< double > cube;

	for (int i=1; i*i*i<=6000; i++) {
		cube.pb(i*i*i);
	}

	fact[0]=1;

	for(int i=1; i<505; i++) {
		fact[i]=(i*fact[i-1])%mq;
	}

	int t;
	cin>>t;

	while(t--) {
		int n;
		cin>>n;

		int a[n];

		for(int i=0; i<n; i++) {
			cin>>a[i];
		}

		int occ[n][2005];

		for(int i=0; i<n; i++) {
			for(int j=0; j<2005; j++){
				occ[i][j]=0;
			}
		}

		occ[n-2][a[n-1]]++;

		for(int i=n-3; i>=0; i--){
			for(int j=0; j<2005; j++) {
				occ[i][j] = occ[i+1][j];
			}
			occ[i][a[i+1]] = occ[i+1][a[i+1]]+1;
			
		}

		ll ways=0;
		for(int i =0; i<n; i++) {
			for (int j=i+1; j<n; j++){

				for(int k = 0; k<cube.size(); k++) {

					int c = cube[k] - a[i]- a[j];
					if(c>0 && c<2001 && occ[j][c]!=0) {
						ways = ways + occ[j][c];
					//	cout<<"occ me "<<occ[j][c]<<" "<<i<<" "<<j<<" "<<c<<" "<<cube[k]<<endl;
					}
				}
			}
		}

		double ans;
	//	cout<<ways<<" "<<comb(n,3)<<endl;
		cout<<fixed<<setprecision(9)<<(double)ways/((n-1)*(n-2)*n/6)<<endl;



	}
	return 0;
}
