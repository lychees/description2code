#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long int
#define bg begin()
#define ed end()
#define pb push_back
#define mp make_pair
using namespace std;

int grid[150][150];
bool dp[105][105][505];

void cost(int n,int m,int p)
{
   for(int i=0;i<n;i++)
   {
    for(int j=0;j<m;j++)
    {
      for(int k=grid[i][j];k<=p;k++)
      {
        if( i==0 && j==0)
        {
          if(k==grid[i][j])
            dp[i][j][k] = true;
        }
        else if(i==0)
        {
          dp[i][j][k] = (dp[i][j][k] || dp[i][j-1][k-grid[i][j]]);
        }
        else if(j==0)
        {
          dp[i][j][k] = (dp[i][j][k] || dp[i-1][j][k-grid[i][j]]);
        }
        else
        {
          dp[i][j][k] = (dp[i][j][k] || dp[i][j-1][k-grid[i][j]]);
          dp[i][j][k] = (dp[i][j][k] || dp[i-1][j][k-grid[i][j]]);
          dp[i][j][k] = (dp[i][j][k] || dp[i-1][j-1][k-grid[i][j]]);
        }
      }
    }
  }

}
int main()
{
    int t;
    cin>>t;
    int n,m,p;
    while(t--)
    {

        cin>>n>>m>>p;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
             {
                 cin>>grid[i][j];
                    for(int k=0;k<505;k++)
                        dp[i][j][k]=false;
             }
        }
        cost(n,m,p);
         int ans=0;
  for(ans=p;ans>=0;ans--)
    if(dp[n-1][m-1][ans])
      break;
   cout<<ans<<endl;

    }
    return 0;
}
