#include<bits/stdc++.h>
 
 
using namespace std;
 
#define rep(i,n) for(i=0;i<n;i++)
#define ll long long
#define elif else if
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define gc getchar_unlocked
const int LIM = 1000005;
long long  fact[LIM];
ll mod= 1e9 + 7;
int mat[1000][1000];
int n,m;
void calc_fac()
{
  fact[0] = 1;
  for (int i = 1; i <= 1000000; i++)
    fact[i] = (i * fact[i-1]) % mod;
}
void dfs(int x,int y, int &tmp)
{
  if(x<0 || x>n-1 || y<0 || y>m-1 || mat[x][y]!=1)return;
  tmp++;
  mat[x][y]=2;
  dfs(x+2,y+1,tmp);
  dfs(x+1,y+2,tmp);
  dfs(x-2,y+1,tmp);
  dfs(x-1,y+2,tmp);
  dfs(x-2,y-1,tmp);
  dfs(x-1,y-2,tmp);
  dfs(x+2,y-1,tmp);
  dfs(x+1,y-2,tmp);
  return;
}
int main()
{
  calc_fac();
  int t;
  cin>>t;
  assert(1<=t && t<=10);
  while(t--)
  {
    int q,i,j;
    ll ans=1;
    memset(mat,0,sizeof(mat));
    cin>>n>>m>>q;
    assert(1<=n && n<=1000);
    assert(1<=m && m<=1000);
    assert(1<=q && q<=n*m);
    while(q--)
    {
      cin>>i>>j;
      assert(1<=i && i<=n);
      assert(1<=j && j<=m);
      i--;
      j--;
      mat[i][j]=1;
    }
    for(i=0;i<n;i++)
    {
      for(j=0;j<m;j++)
      {
        if(mat[i][j]==1)
        {
           int temp=0;
           dfs(i,j,temp);
           ans= (ans*fact[temp])%mod;
        }
      }
    }
    cout<<ans<<"\n";
  }
  return 0;
}