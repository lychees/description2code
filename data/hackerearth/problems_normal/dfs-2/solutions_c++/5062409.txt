#include <iostream>
#include<algorithm>
using namespace std;
int binarylow(long long int a[100],long int low,long int high,long int l)
{
	long int mid;
	while(low<=high)
	{
		mid=(low+high)/2;
		if((a[mid]<l) && (a[mid+1]==l || a[mid+1]>l))
		return (mid+1);
		if((a[mid]==l && mid==0))
		return mid;
		if(a[mid]<l)
		low=mid+1;
		if(a[mid]>=l)
		high=mid-1;
	}
}
int binaryhigh(long long int a[100],long int low,long int high,long int r,long int n)
{
	long int mid;
	while(low<=high)
	{
		mid=(low+high)/2;
		if(a[mid]>r && (a[mid-1]==r || a[mid-1]<r))
		return (mid-1);
		if(a[mid]==r && mid==n-1)
		return mid;
		if(a[mid]<r)
		low=mid+1;
		if(a[mid]>r)
		high=mid-1;
		if(a[mid]==r)
		low=mid+1;
	}
}
int main()
{
	long int n,i,q,l,r,lo,ri;
	long long int a[100001];
    cin>>n;
    for(i=0;i<n;i++)
    cin>>a[i];
    cin>>q;
    sort(a,a+n);
    while(q--)
    {
    	cin>>l>>r;
    	if(l<=a[n-1])
    	{
    	  lo=binarylow(a,0,n-1,l);
    	  ri=binaryhigh(a,0,n-1,r,n);
    	  cout<<(ri-lo+1)<<"\n";
    	}
    	else
    	cout<<"0"<<"\n";
     }
    return 0;
}
