// hackerearth file
#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
#include<string>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%ld",&x)
#define gll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll MOD = 1e9+7;
const int INF = 0x7f7f7f7f;
const double eps = 1e-6;

const int maxn = 100010;
ll a[100],b[100];

int main() {
    int t; cin >> t;
	while (t --) {
	    ll m,n,nn; cin >> m >> n >> nn;

		for (int i = 0; i < n; i ++) cin >> a[i];
		sort(a,a + n);

		for (int i = 0; i < nn; i ++) cin >> b[i];

		ll best_res = -1;
		bool flag = false;
		vector < ll > best_found;

		for (int i = 0; i < (1 << nn); i ++) {
			ll sum = 0;
			for (int j = 0; j < nn; j ++) {
				if(i & (1 << j))
					sum += b[j];
			}

			ll total = m - sum;
			vector < ll > res;
			for (int ii = n - 1; ii >= 0; ii --) {
				if(a[ii] <= total) {
					total -= a[ii];
					res.pb(a[ii]);
				}
			}

			if(total == 0) {
				flag = true;
				if(best_res < m - sum) {
					best_res = m - sum;
					best_found = res;
				}
			}
		}

		if(!flag) puts("NO");
		else {
			cout << "YES\n";
			sort(all(best_found));
			for (int i = 0; i < sz(best_found); i ++) cout << best_found[i] << ' ';
			cout << '\n';
		}
	}
    
	return 0;
}
