#include <iostream>
#include <string.h>
#include <stdio.h>
using namespace std;
 
 
int CeilIndex(int A[], int l, int r, int key)
{
	while (r - l > 1)
	{
		int m = l + (r - l)/2;
		if (A[m]>=key)
			r = m;
		else
			l = m;
	}
	return r;
}
int tailTable[1000001];
int LongestIncreasingSubsequenceLength(int A[], int size, int l)
{
 
	int len; 
 
	tailTable[0] = A[0];
	len = 1;
	for (int i = 1; i < size; i++)
	{
		if (A[i] < tailTable[0])
 
			tailTable[0] = A[i];
 
		else if (A[i] > tailTable[len-1]) {
			if (len < l) 
			    tailTable[len++] = A[i];
		}
		else
			tailTable[CeilIndex(tailTable, -1, len-1, A[i])] = A[i];
	}
 
	if (len < l) {
	    return -1;
	} else {
	    return tailTable[l - 1];
	}
 
}
 
int main()
{
	int t;
	cin >> t;
	int arr[1000001];
	while (t--) {
		int n;
		cin >> n;
 
		for (int i = 0; i < n; i++)
			cin >> arr[i];
		int l;
		cin >> l;
		cout << LongestIncreasingSubsequenceLength(arr, n, l)  << endl;
 
	}
 
	return 0;
}