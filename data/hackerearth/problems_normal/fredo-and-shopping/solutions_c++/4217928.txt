#include<bits/stdc++.h>
#define pb push_back
#define PI acos(-1)
#define mp make_pair
#define F first
#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sdl(x) scanf("%lld",&x)
#define sd2l(x,y) scanf("%lld%lld",&x,&y)
#define maxn 1000010
#define S second
#define ll long long int
#define inf 1000000014
#define infl (ll)(1e18+1)
#define mod 1000000007
#define sz(x) (int) x.size()
#define pi pair< int,int >
#define pii pair<pi,int>
#define trace1(x)  cerr << #x << ": " << x << endl
#define trace2(x, y)  cerr << #x << ": " << x << " | " << #y << ": " << y << endl
using namespace std;
int BIT[maxn];
pi arr[maxn];
int actual[maxn];
int n;
void update(int idx,int val)//val is always 1 idx keeps letter
{
	while(idx<=n)
	{
		BIT[idx]+=val;
		idx+= idx & -idx;
	}
	
}
int query(int idx)
{
	int ans=0;
	while(idx!=0)
	{
		ans+=BIT[idx];
		idx-= idx & -idx;
	}
	return ans;
}
int main(int argc, char const *argv[])
{
	//freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    sd(n);int val;
    for (int i = 0; i < n; ++i)
    {
    	sd(val);
    	arr[i].F = val;
    	arr[i].S = i+1;
    }
    sort(arr,arr+n);
    int ctr = 0;int cmax = 0;
    for(int i=0;i<n;i++)
    {
    	if(arr[i].F > cmax)
    	{
    		cmax = arr[i].F;
    		ctr++;
    	}
    	actual[arr[i].S] = ctr;// compressed 
    }
    int a,b,c;
    for(int i=1;i<=n;i++)
    {
    	printf("%d ",query(actual[i]-1));
    	update(actual[i],1);
    }
 return 0;
 } 
