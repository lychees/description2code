    #include<bits/stdc++.h>

    using namespace std;
     #define ll long long int


    int main(void)
    {
        string str;
        cin >> str;
        reverse(str.begin(), str.end());

       static string::size_type fre_arr[26];
        static vector<string::size_type> pos_arr[26];
        static typename vector<string::size_type>::size_type next_to_use[26];

        for (string::size_type i = 0; i < str.size(); i++) {
            fre_arr[str[i]-'a']++;
            pos_arr[str[i]-'a'].push_back(i);
        }

        for (size_t i = 0; i < sizeof(fre_arr)/sizeof(*fre_arr); i++) {
            fre_arr[i] /= 2;
            next_to_use[i] = 0;
        }

        vector<string::size_type> needs(str.size());
        static string::size_type fre_arr_seen[26];
        for (string::size_type i = 1; i <= str.size(); i++) {

            string::size_type j = str.size()-i;
            unsigned hash = str[j]-'a';

            needs[j] = fre_arr[hash]-fre_arr_seen[hash];
            fre_arr_seen[hash] = min(fre_arr_seen[hash]+1, fre_arr[hash]);
        }

        string ans;

        string::size_type next_bottleneck = 0;
        string::size_type last_pos = 0;
        static string::size_type written[26];

        while (ans.size() != str.size()/2) {

            while (!(written[str[next_bottleneck]-'a'] < needs[next_bottleneck]))
                next_bottleneck++;

            string::size_type next_char = 0;
            while (written[next_char] == fre_arr[next_char] ||
                   pos_arr[next_char][next_to_use[next_char]] > next_bottleneck)
                next_char++;

            string::size_type str_pos = pos_arr[next_char][next_to_use[next_char]];

            while (last_pos != str_pos) {
                next_to_use[str[last_pos]-'a']++;
                last_pos++;
            }

            do {
                ans.push_back(next_char+'a');
                written[next_char]++;
                next_to_use[next_char]++;
            } while (written[next_char] < needs[str_pos]);

            last_pos = str_pos+1;

        }
    cout<<ans<<endl;
        
    }
