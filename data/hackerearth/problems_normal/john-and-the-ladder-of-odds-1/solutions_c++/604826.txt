/* Man Mohan Mishra aka m17
   IIIT - Allahabad */
#include <cstdio>
#include <cmath>
#include <cstring>
#include <climits>
#include <cstdlib>
#include <cctype>
#include <iostream>
#include <algorithm>
#include <utility>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <iterator>

#define MOD 1000000009
#define INF 1000000000000000000
#define PI acos(-1)

using namespace std;

int GCD (int a,int b) {
	if (b == 0) return a;
	return(a % b == 0 ? b : GCD(b,a % b));
}

long long int POW (long long int base,long long int exp) {
	long long int val;
	val = 1;
	while (exp > 0) {
		if (exp % 2 == 1) {
			val = (val * base) % MOD;
		}
		base = (base * base) % MOD;
		exp = exp / 2;
	}
	return val;
}

long long int g (long long int n) {
	int i,j,k;
	long long int val[2][2] = {1,0,0,1};
	long long int base[2][2] = {1,1,1,0};
	long long int temp[2][2];
	while (n > 0) {
		if (n % 2 == 1) {
			for (i = 0; i < 2; i++) {
				for (j = 0; j < 2; j++) {
					temp[i][j] = 0;
					for (k = 0; k < 2; k++) {
						temp[i][j] = (temp[i][j] + val[i][k] * base[k][j]) % MOD;
					}
				}
			}
			for (i = 0; i < 2; i++) {
				for (j = 0; j < 2; j++) {
					val[i][j] = temp[i][j];
				}
			}
		}
		for (i = 0; i < 2; i++) {
			for (j = 0; j < 2; j++) {
				temp[i][j] = 0;
				for (k = 0; k < 2; k++) {
					temp[i][j] = (temp[i][j] + base[i][k] * base[k][j]) % MOD;
				}
			}
		}
		for (i = 0; i < 2; i++) {
			for (j = 0; j < 2; j++) {
				base[i][j] = temp[i][j];
			}
		}
		n = n / 2;
	}
	return (val[0][0] * val[0][1]) % MOD;
}

int main()
{
	int t;
	scanf("%d",&t);
	while (t --) {
		long long int n;
		scanf("%lld",&n);
		printf("%lld\n",g(n));
	}
	return 0;
}