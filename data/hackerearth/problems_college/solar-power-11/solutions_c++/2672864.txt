#include <cstdio>
#include <iostream>
#include <string.h>
#define ll long long
#define MOD 1000000007
using namespace std;
ll tree[1024][1024], mat[1024][1024], N;
void add(int x, int y, ll value) {
	for (int i = x; i < N; i |= i + 1)
	{
		for (int j = y; j < N; j |= j + 1)
		{
			tree[i][j] += value;
			tree[i][j] %= MOD;
		}
	}
}
ll sum(int x, int y) {
	ll res = 0;
	for (int i = x; i >= 0; i = (i & (i + 1)) - 1)
		for (int j = y; j >= 0; j = (j & (j + 1)) - 1)
		{
			res += tree[i][j];
			res %= MOD;
		}
	return res;
}
ll query(int x1, int y1, int x2, int y2)
{
	ll res = sum(x2, y2) - sum(x1-1, y2) - sum(x2, y1-1) + sum(x1-1, y1-1);
	res = (res + MOD) % MOD;
	return res;
}
int main()
{
	ios_base::sync_with_stdio(false);
	//cin.tie(0);
	int d;
	cin>>d;
	while(d--)
	{
		memset(tree,0,sizeof(tree));
		memset(mat,0,sizeof(mat));
		ll K;
		cin>>N>>K;
		for (int i = 0; i < N; i++)
		{
			for (int j = 0; j < N; j++)
			{
				mat[i][j] = K;
				add(i,j,K);
			}
		}
		int actions;
		cin>>actions;
		char ch;
		while(actions--)
		{
			cin>>ch;
			if(ch == 'm') // measure
			{
				int x1,y1,x2,y2;
				cin>>x1>>y1>>x2>>y2;
				x1--,y1--,x2--,y2--;
				cout << query(x1,y1,x2,y2) << "\n";
			}
			else // set
			{
				ll x,y,num;
				cin>>x>>y>>num;
				x--,y--;
				ll init = mat[x][y];
				ll new_val = (((init+MOD) % MOD) * ((num+MOD) % MOD)) % MOD;
				add(x,y,((new_val + MOD) - init) % MOD);
				mat[x][y] = new_val;
			}
		}
	}
}
