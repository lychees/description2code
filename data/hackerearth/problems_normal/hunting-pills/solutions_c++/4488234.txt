#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <stack>
#define ll long long int
#define maxN 200
#define maxVal 1e8
#define minVal -1e8
#define mod1e9+7

#define gcd(a,b) __gcd(a,b)

using namespace std;
int visit[105];
vector<int>v[105];vector<int>v1[105];
stack<int> s;
int arr[105];
int dfs1(int in)
{

  //  cout << in << " ";
    int ans = arr[in],i;
    visit[in]=true;
    for(i=0;i<v1[in].size();i++)
    {
        if(visit[v1[in][i]]==false)
            ans =ans+dfs1(v1[in][i]);
    }
    return ans;
}
void dfs(int in)
{
    int i;
    visit[in]=true;
    for(i=0;i<v[in].size();i++)
    {
        if(visit[v[in][i]]==false)
            dfs(v[in][i]);
    }
    s.push(in);
    //cout << in << " ";
}
int main()
{
    int t;
    int n,m,i,j,x,ans=0,a,b,c=0,d=0,ans1;
    ios::sync_with_stdio(false);
    cin >> t;
    while(t--){
            ans = 0;
    cin >> n >> m;
    memset(arr,0,sizeof(arr));
    for(i=0;i<n;i++)
        cin >> arr[i];
    for(i=0;i<=n;i++)
    {
        v[i].clear();
        v1[i].clear();
    }
    for(i=1;i<=m;i++)
    {
        cin >> a >> b;
        v[a].push_back(b);
        v1[b].push_back(a);
    }
    memset(visit,false,sizeof(visit));
    for(i=0;i<n;i++)
    {
        if(visit[i]==false)
            dfs(i);
    }
    memset(visit,false,sizeof(visit));
    while(!(s.empty()))
    {

        x = s.top();
        s.pop();
        if(visit[x]==false)
        {
            //cout << endl;
            ans1=0;
            ans1=dfs1(x);
         //   cout << ans1 << endl;
            ans = max(ans,ans1);
        }

    }
    cout << ans << endl;
    }
}
