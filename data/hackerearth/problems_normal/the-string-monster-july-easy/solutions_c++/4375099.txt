#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define pii pair<int,int>
#define INF 1000000000
#define INFL 1000000000000000000LL
#define sd(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
#define ssl(x) scanf(" %[^\n]s",x)
#define gcd __gcd
#define MOD 1000000007LL
#define N 100001

set<string> st;

struct node{
	int arr[26];
};

string get(node temp){
	string ans="";
	for(int i=0;i<26;i++){
		int len=temp.arr[i];
		while(len--)
			ans+=(char)((int)'a'+i);
	}
	return ans;
}

int main(){
	int t;
	sd(t);
	while(t--){
		int n;
		sd(n);
		int len1=n/2;
		int len2=n-len1;
		string str1[len1];
		string str2[len2];
		st.clear();
		for(int i=0;i<len1;i++)
			cin>>str1[i];
		for(int i=0;i<len2;i++)
			cin>>str2[i];
		string tar;
		cin>>tar;
		node ans;
		for(int i=0;i<26;i++)
			ans.arr[i]=0;
		int len=tar.length();
		for(int i=0;i<len;i++)
			ans.arr[tar[i]-'a']++;
		for(int i=0;i<(1<<len1);i++){
			node temp;
			for(int j=0;j<26;j++)
				temp.arr[j]=0;
			for(int j=0;j<len1;j++){
				if((i&(1<<j))){
					int len=str1[j].length();
					for(int k=0;k<len;k++)
						temp.arr[str1[j][k]-'a']++;
				}
			}
			st.insert(get(temp));
		}
		bool g=0;
		for(int i=0;i<(1<<len2);i++){
			node temp;
			for(int j=0;j<26;j++)
				temp.arr[j]=0;
			for(int j=0;j<len2;j++){
				if((i&(1<<j))){
					int len=str2[j].length();
					for(int k=0;k<len;k++)
						temp.arr[str2[j][k]-'a']++;
				}
			}
			bool h=1;
			for(int j=0;j<26;j++){
				temp.arr[j]=ans.arr[j]-temp.arr[j];
				if(temp.arr[j]<0){
					h=0;
					break;
				}
			}
			if(h){
				if(st.find(get(temp))!=st.end()){
					g=1;
					break;
				}
			}
		}
		if(g)
			printf("YES\n");
		else
			printf("NO\n");
	}
}