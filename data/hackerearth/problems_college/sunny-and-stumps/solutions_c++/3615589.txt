    #include<bits/stdc++.h>
    using namespace std;
    bool vis[1000007];
    typedef pair<long long int, long long int> Point1;
    typedef pair<long long int ,long long int> Pointc;
    typedef pair< Point1 ,Pointc > Point2;
    set <Point2> myset;
    set <Point2> ::iterator it,it1;
    long long gcd(long long int a,long long int b)
    {
    	if(b==0)
    		return a;
    	return gcd(b,a%b);
    }
    int main()
    {
    	ios_base::sync_with_stdio(false);
    	long long t,a,b,c,num;
    	long long n;
    	cin>>t;
    	while(t--)
    	{
    		cin>>n;
    		myset.clear();
    		memset(vis,false,sizeof(vis));
    		while(n--)
    		{
    			cin>>a>>b>>c;
    			if(a<0)
    			{
    				a=-a;b=-b;c=-c;
    			}
    			else if(a==0&&b<0)
    			{
    				b=-b; c=-c;
    			}
    			num=gcd(abs(a),abs(b));
    			long long num2=gcd(num,abs(c));
    			a=a/num2;b=b/num2;c=c/num2;
    			num=gcd(abs(a),abs(b));
    			myset.insert(Point2(Point1(a/num,b/num),Pointc(num,c)));
    		}
    		it=myset.begin();
    		it1=it;
    		it1++;
    		int i=0,j=1;
    		long long max=1,count=1;
    		while(it!=myset.end())
    		{
    			if(!vis[i])
    			{
    				it1=it;
    				j=i;
    				it1++;
    				j++;
    				count=1;
    				while(it1!=myset.end())
    				{
    					if((it->first.first==it1->first.first)&&(it->first.second==it1->first.second)&&((it->second.first*it1->second.second)!=(it1->second.first*it->second.second)))
    					{
    						count++;
    						vis[j]=true;
    						it1++;
    						j++;
    					}
    					else if(it->first.first!=it1->first.first||it->first.second!=it1->first.second)
    					{
    						break;
    					}
    					else
    					{
    						it1++;
    						j++;
    					}
    				}
    			}
    			count>max ? max=count:1;
    			it++;
    			vis[i]=true;
    			i++;
    		}
    		cout<<max<<endl;
    	}
    	return 0;
    }
