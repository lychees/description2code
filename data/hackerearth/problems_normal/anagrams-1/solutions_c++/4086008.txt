#include<bits/stdc++.h>
using namespace std;
int main()
	{
		
		int i,paln,nomove,T,t,j,leng,dont;
		char one;
		int count[26]={0};
		cin>>T;
		getchar();
		for(t=0;t<T;t++)
			{	vector<char> new_v1;
				vector<char> new_v2;
				string s;
				string s1;
				string s2;
				getline(cin,s1);
				//getchar();
				getline(cin,s2);
				int leng1=s1.length();
				int leng2=s2.length();
				i=0;
				while(i<leng1){
				int value=s1[i];
				//cout<<i<<" "<<value<<endl;
				if((value>=65 && value<=90) || (value>=97 && value<=122))
					{
						if(value>=65 && value<=90){
							char ch=s1[i]+32;
							s1[i]=ch;}
							
						i++;
					}
				else
					{	j=i;
						while(j<leng1-1 )
						{
							s1[j]=s1[j+1];
							j++;
						}
						//s1[leng1]='\0';
						leng1=leng1-1;
						//i++;
						s1[leng1]='\0';
				//		cout<<s1<<endl;
					}}
				i=0;
				while(i<leng2){
				int value=s2[i];
				//cout<<i<<" "<<value<<endl;
				if((value>=65 && value<=90) || (value>=97 && value<=122))
					{
						if(value>=65 && value<=90){
							char ch=s2[i]+32;
							s2[i]=ch;}
							
						i++;
					}
				else
					{	j=i;
						while(j<leng2-1 )
						{
							s2[j]=s2[j+1];
							j++;
						}
						//s1[leng1]='\0';
						leng2=leng2-1;
						//i++;
						s2[leng2]='\0';
						//cout<<s2<<endl;
					}}
				vector<char> v1;
				vector<char> v2;
				for(j=0;j<leng1;j++)
					v1.push_back(s1[j]);
				for(j=0;j<leng2;j++)
					v2.push_back(s2[j]);
				//sort(v1.begin(),v1.end());
				//sort(v2.begin(),v2.end());
				
				if(v1.size()==v2.size())
					{
						sort(v1.begin(),v1.end());
						sort(v2.begin(),v2.end());
						string new_s1(v1.begin(),v1.end());
						string new_s2(v2.begin(),v2.end());
						if(new_s1==new_s2)
							cout<<"YES"<<endl;
						else
							cout<<"NO LUCK"<<endl;
							
					}
				else{   int found,in,cnt,start,done,repeat;
					string token;
					string new_s1(v1.begin(),v1.end());
					string new_s2(v2.begin(),v2.end());
					int mini_value=min(new_s1.length(),new_s2.length());
					if(mini_value==new_s1.length()){
						dont=0;
						for(j=0;j<new_s1.length();j++)
							{
								found=new_s2.find(new_s1[j]);
								//cout<<found<<endl;
								if(found==-1){
									cout<<"NO LUCK"<<endl;
									dont=1;
									break;
								}
								else
									new_s2[found]='0';
							}
						if(dont==0){
							for(j=0;j<new_s2.length();j++)
								{
									if(new_s2[j]!='0')
										new_v2.push_back(new_s2[j]);
								}
							string fnl(new_v2.begin(),new_v2.end());
							sort(begin(new_s2),end(new_s2));
							//start=abs(new_s1.length()-new_s2.length());
							s=new_s2.substr(leng1,leng2);
							int count[26]={0};
							//cout<<s<<endl;
		leng=s.length();
		for(i=0;i<leng;i++)
			{
				int x=s[i]-97;
				//cout<<x<<endl;
				count[x]++;
				//cout<<count[x]<<endl;
			}
		//for(i=0;i<26;i++)
		//	cout<<count[i]<<" ";
		//cout<<endl;
		queue<char> start;
		stack<char> end;
		paln=0;
		nomove=0;
		for(i=0;i<26;i++)
			{
				while(count[i]>1)
					{
						char ch=i+97;
						start.push(ch);
						end.push(ch);
						count[i]=count[i]-2;
					}
				if(count[i]==1){
					paln++;
					one=i+97;
					}
				if(paln>1){
					nomove=1;
					cout<<"NO LUCK"<<endl;
					break;
					}
			}
		if(nomove!=1){
		//for(i=0;i<26;i++)
		//	cout<<count[i]<<" ";
		if(paln==1)
			start.push(one);
		//cout<<endl;
		while(!(start.empty()))
			{
				cout<<start.front();
				start.pop();
				
			}
		//cout<<endl;
		while(!(end.empty()))
			{
				cout<<end.top();
				end.pop();
			}
		cout<<endl;}}}
		else if(mini_value==new_s2.length()){
						dont=0;
						for(j=0;j<new_s2.length();j++)
							{
								found=new_s1.find(new_s2[j]);
								//cout<<found<<endl;
								if(found==-1){
									cout<<"NO LUCK"<<endl;
									dont=1;
									break;
								}
								else
									new_s1[found]='0';
							}
						if(dont==0){
							for(j=0;j<new_s1.length();j++)
								{
									if(new_s1[j]!='0')
										new_v1.push_back(new_s1[j]);
								}
							string fnl(new_v1.begin(),new_v1.end());
							sort(begin(new_s1),end(new_s1));
							//start=abs(new_s1.length()-new_s2.length());
							s=new_s1.substr(leng2,leng1);
							leng=s.length();
							int count[26]={0};
							for(i=0;i<leng;i++)
			{
				int x=s[i]-97;
				count[x]++;
			}
		//for(i=0;i<26;i++)
		//	cout<<count[i]<<" ";
		//cout<<endl;
		queue<char> start;
		stack<char> end;
		paln=0;
		nomove=0;
		for(i=0;i<26;i++)
			{
				while(count[i]>1)
					{
						char ch=i+97;
						start.push(ch);
						end.push(ch);
						count[i]=count[i]-2;
					}
				if(count[i]==1){
					paln++;
					one=i+97;
					}
				if(paln>1){
					nomove=1;
					cout<<"NO LUCK"<<endl;
					break;
					}
			}
		if(nomove!=1){
		//for(i=0;i<26;i++)
		//	cout<<count[i]<<" ";
		if(paln==1)
			start.push(one);
		//cout<<endl;
		while(!(start.empty()))
			{
				cout<<start.front();
				start.pop();
				
			}
		//cout<<endl;
		while(!(end.empty()))
			{
				cout<<end.top();
				end.pop();
			}
		cout<<endl;}}}}
		}
	
		return 0;
	}
