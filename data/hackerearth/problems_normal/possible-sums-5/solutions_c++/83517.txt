#include <iostream>
#include <string.h>
#include <algorithm>
using namespace std;
int mem[10000][101];
int maxIndex;
int global[100];
int DP(int sum,int index)
{	if(index == maxIndex) return mem[sum][index] = 0;
	if(mem[sum][index]!= -1) return mem[sum][index];
	if(global[index] == sum) return mem[sum][index] = 1;
	if(global[index] > sum)
	return mem[sum][index] = DP(sum,index+1);
	else 
	return mem[sum][index] =  max(DP(sum,index+1),DP(sum-global[index],index+1));
}
int main()
{
    //cout << "Hello World!" << endl;
    int test;
    scanf("%d",&test);
    while(test--)
    {	memset(mem,-1,sizeof(mem));
    	scanf("%d",&maxIndex);
    	for(int i=0;i<maxIndex;i++)
    		scanf("%d",global+i);
    	int answer = 1;
    	for(int i=1;i<=10000;i++)
    	{
    		if(DP(i,0)==1) answer++;
    	}
    	printf("%d\n",answer);
    }
    return 0;
}
