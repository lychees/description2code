#include <bits/stdc++.h>
using namespace std;

int t;

long long n, k;

long long mod=1000000007;
long long modk;

int m;

long long mac[1007][1007];
long long macp[1007][1007];

long long wek[1007];
long long wekp[1007];

int gra[7];

long long wyn;

long long pam[35][350][350];

void pot(long long v)
{
    while(v)
    {
        if (v&1)
        {
            for (int i=0; i<m; i++)
            {
                wekp[i]=wek[i];
                wek[i]=0;
            }
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<m; j++)
                {
                    wek[j]+=wekp[i]*mac[i][j];
                    if (wek[j]>=modk)
                    wek[j]-=modk;
                }
            }
            for (int i=0; i<m; i++)
            {
                wek[i]%=mod;
            }
        }
        for (int i=0; i<m; i++)
        {
            for (int j=0; j<m; j++)
            {
                macp[i][j]=mac[i][j];
                mac[i][j]=0;
            }
        }
        for (int i=0; i<m; i++)
        {
            for (int j=0; j<m; j++)
            {
                for (int l=0; l<m; l++)
                {
                    mac[i][j]+=macp[i][l]*macp[l][j];
                    if (mac[i][j]>=modk)
                    mac[i][j]-=modk;
                }
                mac[i][j]%=mod;
            }
        }
        v>>=1;
    }
}

int jusz7;

void pie7()
{
    if (jusz7)
    return;
    jusz7=1;
    for (int i=0; i<m; i++)
    {
        pam[0][i][i]=1;
    }
    for (int i=0; i<m; i++)
    {
        for (int j=0; j<m; j++)
        {
            pam[1][i][j]=mac[i][j];
        }
    }
    for (int h=2; h<=30; h++)
    {
        for (int i=0; i<m; i++)
        {
            for (int j=0; j<m; j++)
            {
                for (int l=0; l<m; l++)
                {
                    pam[h][i][j]+=pam[h-1][i][l]*pam[h-1][l][j];
                    if (pam[h][i][j]>=modk)
                    pam[h][i][j]-=modk;
                }
                pam[h][i][j]%=mod;
            }
        }
    }
}

void pot7(long long v)
{
    for (int h=1; v; h++)
    {
        if (v&1)
        {
            for (int i=0; i<m; i++)
            {
                wekp[i]=wek[i];
                wek[i]=0;
            }
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<m; j++)
                {
                    wek[j]+=wekp[i]*pam[h][i][j];
                    if (wek[j]>=modk)
                    wek[j]-=modk;
                }
            }
            for (int i=0; i<m; i++)
            {
                wek[i]%=mod;
            }
        }
        v>>=1;
    }
}

long long rev(long long v)
{
    long long ret=0;
    while(v)
    {
        ret*=10;
        ret+=(v%10);
        v/=10;;
    }
    return ret;
}

int main()
{
    modk=mod*mod;
    gra[1]=10;
    gra[2]=100;
    gra[3]=1000;
    gra[4]=10000;
    gra[5]=100000;
    gra[6]=1000000;
    scanf("%d", &t);
    while(t--)
    {
        scanf("%lld%lld", &n, &k);
        if (n<=5)
        {
            long long wynik=0;
            for (int i=0; i<gra[n]; i++)
            {
                if (!(i%k) && !(rev(i)%k))
                {
                    wynik++;
                }
            }
            printf("%lld\n", wynik);
            continue;
        }
        if (k==10)
        {
            wyn=1;
        }
        if (k==2)
        {
            n-=1;
            m=2;
            mac[0][0]=10;
            mac[0][1]=4*5;
            mac[1][1]=1;
            mac[1][0]=0;
            wek[0]=1;
            wek[1]=0;
            pot(n);
            wyn=wek[1]+5;
        }
        if (k==4)
        {
            n-=3;
            m=2;
            mac[0][0]=10;
            mac[0][1]=20*25;
            mac[1][1]=1;
            mac[1][0]=0;
            wek[0]=1;
            wek[1]=0;
            pot(n);
            wyn=wek[1]+59;
        }
        if (k==8)
        {
            n-=5;
            m=2;
            mac[0][0]=10;
            mac[0][1]=100*125;
            mac[1][1]=1;
            mac[1][0]=0;
            wek[0]=1;
            wek[1]=0;
            pot(n);
            wyn=wek[1]+1392;
        }
        if (k==5)
        {
            n-=1;
            m=2;
            mac[0][0]=10;
            mac[0][1]=1*2;
            mac[1][1]=1;
            mac[1][0]=0;
            wek[0]=1;
            wek[1]=0;
            pot(n);
            wyn=wek[1]+2;
        }
        if (k==3)
        {
            m=3;
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<m; j++)
                {
                    mac[i][j]=0;
                }
            }
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<10; j++)
                {
                    mac[i][(i+j)%3]++;
                }
            }
            wek[0]=1;
            wek[1]=0;
            wek[2]=0;
            pot(n);
            wyn=wek[0];
        }
        if (k==9)
        {
            m=9;
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<m; j++)
                {
                    mac[i][j]=0;
                }
            }
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<10; j++)
                {
                    mac[i][(i+j)%9]++;
                }
            }
            wek[0]=1;
            wek[1]=0;
            wek[2]=0;
            wek[3]=0;
            wek[4]=0;
            wek[5]=0;
            wek[6]=0;
            wek[7]=0;
            wek[8]=0;
            wek[9]=0;
            pot(n);
            wyn=wek[0];
        }
        if (k==6)
        {
            n-=1;
            m=4;
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<m; j++)
                {
                    mac[i][j]=0;
                }
            }
            for (int i=0; i<m-1; i++)
            {
                for (int j=0; j<10; j++)
                {
                    mac[i][(i+j)%3]++;
                }
                for (int j=2; j<10; j+=2)
                {
                    for (int l=0; l<10; l+=2)
                    {
                        if (!((i+j+l)%3))
                        {
                            mac[i][3]++;
                        }
                    }
                }
            }
            mac[3][3]=1;
            wek[0]=1;
            wek[1]=0;
            wek[2]=0;
            wek[3]=0;
            pot(n);
            wyn=wek[3]+2;
        }
        if (k==7)
        {
            m=344;
            for (int i=0; i<m; i++)
            {
                for (int j=0; j<m; j++)
                {
                    mac[i][j]=0;
                }
                wek[i]=0;
            }
            for (int i=0; i<7; i++)
            {
                for (int j=0; j<7; j++)
                {
                    for (int l=0; l<7; l++)
                    {
                        for (int o=0; o<10; o++)
                        {
                            int ii=(i*10+o)%7;
                            int jj=(j+l*o)%7;
                            int ll=(l*10)%7;
                            mac[i+7*j+49*l][ii+7*jj+49*ll]++;
                        }
                        if (!i && !j)
                        {
                            mac[49*l][m-1]++;
                        }
                    }
                }
            }
            for (int i=1; i<10; i++)
            {
                wek[(i%7)+(i%7)*7+49*3]++;
            }
            mac[m-1][m-1]=1;
            pie7();
            pot7(n);
            wyn=wek[m-1]+1;
        }
        printf("%lld\n", wyn%mod);
    }
    return 0;
}
