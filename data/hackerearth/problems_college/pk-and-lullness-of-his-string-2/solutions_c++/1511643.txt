#include <iostream>
#include<string.h>
using namespace std;

#define mod 1000000007

int64_t f[100005],f1[100005];

int power(int a,int b)
 {
 	if(b==0)
 	  return 1;
 	if(b==1)
 	  return a;
 	int64_t t=power(a,b/2);
 	t*=t;
 	t%=mod;
 	return (t*power(a,b%2))%mod;
 }

int inv(int a)
 {
 	return power(a,mod-2);
 }

int main()
{
    int t;
    cin>>t;
    f[1]=1;
    f1[1]=1;
    f[0]=1;
    f1[0]=1;
    for(int i=2;i<=100002;i++)
      {
      	f[i]=f[i-1]*i;
      	f[i]%=mod;
      }
    for(int i=2;i<=100002;i++)
     {
     	f1[i]=f1[i-1]*inv(i);
     	f1[i]%=mod;
     }
    while(t--)
     {
     	char s[100005];
     	int64_t dp[100005],dp1[100005];
     	int64_t ans=0;
     	cin>>s;
     //	cout<<s;
     	int n;
     	cin>>n;
     	int x=(n-1)/2;
     	int l=strlen(s);
     if(s[0]=='l')
     	 dp[0]=1;
     	else dp[0]=0;
     	if(s[l-1]=='l')
     	 dp1[l-1]=1;
     	else dp[l-1]=0;
     	dp[l]=0;
     	dp1[l]=0;
     for(int i=1;i<l;i++) 
     	 {
     	 	if(s[i]=='l')
     	 	  dp[i]=dp[i-1]+1;
     	 	else dp[i]=dp[i-1];
     	 }
     	for(int i=l-1;i>=0;i--) 
     	 {
     	 	if(s[i]=='l')
     	 	  dp1[i]=dp1[i+1]+1;
     	 	else dp1[i]=dp1[i+1];
     	 }
     	 for(int i=0;i<l;i++)
     	  {
     	  	if(s[i]=='u')
     	  	 {
     	  	 	if(dp[i]<x||dp1[i]<x)
     	  	 	 {
     	  	 	 	continue;
     	  	 	 }
     	  	 	else
     	  	 	 {
     	  	 	 	int64_t r,s;
     	  	 	 	r=((((f[dp[i]]*f1[dp[i]-x])%mod)*f1[x])%mod);
     	  	 	 	s=((((f[dp1[i]]*f1[dp1[i]-x])%mod)*f1[x])%mod);
     	  	 	 //	cout<<dp1[i]<<"\n";
     	  	 	 	r=r*s;
     	  	 	 	r%=mod;
     	  	 	 	ans+=r;
     	  	 	 	ans%=mod;
     	  	 	 }
     	  	 }
     	  }
     	  cout<<ans<<"\n";
     }
}
