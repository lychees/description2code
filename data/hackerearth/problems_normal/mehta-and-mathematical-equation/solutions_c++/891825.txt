#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <stack>
#include <queue>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <utility>
#include <fstream>

using namespace std;

#define PB push_back
#define MP make_pair
#define S second
#define F first
#define MOD 1000000007
#define INF 1000000007
#define MAXN 500000
#define LL long long
#define LD long double
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define N 1001

LL tp[70], max_val = 62, dp[70][2];

inline void Solve(){
    LL x, prev = 0, i, n;
    cin>>x;
    for(i = 0; i <= max_val; i++){
        if(tp[i] & x) n = i;
    }
    memset(dp, 0, sizeof(dp));
    dp[n + 1][0] = 1;
    dp[n + 1][1] = 0;
    for(i = n; i >= 0; i--){
        if(tp[i] & x){
            dp[i][1] = dp[i + 1][0] + 3 * dp[i + 1][1];
            dp[i][0] = 3 * dp[i + 1][0];
        }
        else{
            dp[i][0] = dp[i + 1][0] + 3 * dp[i + 1][1];
            dp[i][1] = 3 * dp[i + 1][1];
        }
        dp[i][0] %= MOD;
        dp[i][1] %= MOD;
    }
    x %= MOD;
    LL ans = ( (x + 2) * (x + 1) )/ 2;
    ans %= MOD;
    ans -= dp[0][0];
    ans %= MOD;
    if(ans < 0) ans += MOD;
    cout<<ans<<endl;
    return;
}

int main(){
    //freopen("input.txt", "r", stdin);
    LL t = 1, tt = 0, i = 0;
    tp[0] = 1;
    for(i = 1; i <= max_val; i++){
        tp[i] = tp[i - 1] * 2;
    }
    sld(t);
    while(t--){
        Solve();
    }
    return 0;
}
