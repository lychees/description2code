

    #include<iostream>
    #include<bits/stdc++.h>
    using namespace std;
    #define MOD 1000000007
    #define ft first
    #define sd second
    #define VI vector<int>
    #define VLL vector<long long int>
    #define PII pair<int,int>
    #define pb push_back
    #define rsz(v,n) v.resize(n)
    // input and output
    #define scan(x) scanf("%d",&x)
    #define scanll(x) scanf("%lld",&x)
    #define ll long long int
    #define rep(i,x,y) for(i=x;i<y;i++)
    #define print(x) printf("%d\n",x)
    #define printll(x) printf("%lld\n",x)
    #define all(v) v.begin(),v.end()
    #define ms(v) memset(v,0,sizeof(v))
    #define FOR(i,a,b)  for(i=a;i<b;i++)
    #define f_in(st) freopen(st,"r",stdin)
    #define f_out(st) freopen(st,"w",stdout)
    #define PIE 3.14159265358979323846264338327950
    #ifdef ONLINE_JUDGE
     inline void inp( int &n )
     {
        n=0;
        int ch=getchar_unlocked();int sign=1;
        while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar_unlocked();}
        while(  ch >= '0' && ch <= '9' )
                n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();
        n=n*sign;
      }
    #else
    inline void inp(int &n){
     cin>>n;
    }
    #endif
    map<string,int > M;
    vector<vector<int> > M1;
    vector<string > arr;
    int main(){
     int n;
     inp(n);
     arr.resize(n);
     int count=0;
     for(int i=0;i<n;i++) cin>>arr[i];
     string temp;
     for(int i=0;i<n;i++){
      int len=arr[i].length();
      for(int j=0;j<len;j++){
         for(int k=j;k<len;k++)
         {
            temp.pb(arr[i][k]);
            if(M[temp]==0){
              ++count;
              M[temp]=count;
           }
         }
         temp.clear();
      }
     }
      M1.resize(count+1);
     temp.clear();
     for(int i=0;i<n;i++){
      int len=arr[i].length();
      for(int j=0;j<len;j++){
         for(int k=j;k<len;k++)
         {
            temp.pb(arr[i][k]);
            int idx=M[temp];
            if(M1[idx].size()==0||*M1[idx].rbegin()!=i)
             M1[idx].pb(i);
         }
         temp.clear();
      }
     }
      int q;
      inp(q);
      int l,r,idx,ans;
      while(q--){
        inp(l);
        inp(r);
        cin>>temp;
        l--;
        r--;
        idx=M[temp];
        ans=upper_bound(all(M1[idx]),r)-lower_bound(all(M1[idx]),l);//<<endl;
        printf("%d\n",ans);
      }
     return 0;
    }

