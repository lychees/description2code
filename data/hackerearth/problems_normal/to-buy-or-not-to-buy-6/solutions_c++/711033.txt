/* @author :nitish bhagat */

//header files
#include <cstdlib>
#include <stdio.h>
#include <cstring>
#include <complex>
#include <vector>
#include <cmath>
#include <ctime>
#include <iostream>
#include <numeric>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <iomanip>
#include <utility>
#include <locale>
#include <sstream>
#include <string> // this should be already included in <sstream>

using namespace std;

//short lazieeeeeee
#define FOR(i,n) for(i=0;i<n;i++)
#define FORI(i,a,n) for(i=a;i<n;i++)
#define FORC(it,C) for(it=C.begin();it!=C.end();it++)
#define scanI(x) scanf("%d",&x)
#define scanD(x) scanf("%lf",&x)
#define print(x) printf("%d\n",x)
#define ll  long long
#define number32 4294967296ull
#define MAX 2000001
#define len(s) s.length()
#define ff first
#define ss second
#define MOD 1000000007

using namespace std;

//containers
typedef map<int,int> Mii;
typedef map<char,int> Mci;
typedef pair<int,int> Pii;
typedef vector<int> vi;
typedef vector<int> vc;
typedef vector<ll> vl;

//iterators
typedef map<int,int>::iterator Miii;
typedef map<char,int>::iterator Mcii;

int v[2005];
int A[2005][2005];
int n,m;
void dfs(int in,int p)
{
    v[in]=1;
    for(int i=1;i<=n;i++)
    {
        if(A[in][i]==-1) continue;
        if(v[i]==0 && A[in][i]<p)
            dfs(i,p);
    }
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int x,y,pp,z;
        memset(A,-1,sizeof(A));
        cin>>n>>m;
        for(int ii=0;ii<m;ii++)
        {
            cin>>x>>y>>pp;
            A[x][y]=A[y][x]=pp;
        }
        cin>>z;
        int ans=0;
        for(int ii=0;ii<z;ii++)
        {
            cin>>x>>y;
            memset(v,0,sizeof(v));
            dfs(x,A[x][y]);
            if(v[y]==0) ans++;
        }
        int gc=__gcd(z,ans);
        cout<<(ans/gc)<<"/"<<(z/gc)<<"\n";
    }
    return 0;
}
