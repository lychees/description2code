/*
 ***************************************************************************************************************
 
 Author : Tapan Sahni
 
 **************************************************************************************************************
 */

#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define LL long long
#define si(x) scanf("%d",&x)
#define sc(x) scanf("%c",&x)
#define sl(x) scanf("%I64d",&x)
#define prl(x) printf("%I64d",x)
#define pri(x) printf("%d\n",x)
#define prs(x) printf("%s\n",x)
typedef pair<int, int> ii;
typedef pair<LL, LL> iil;
typedef pair<LL, iil> iiil;
typedef pair<ii, int> iii;
typedef pair<ii, ii> iiii;
#define vl vector<ll>
#define vi vector<int>
#define vii vector<ii>
#define vvl vector< vl >
#define vvi vector< vi >
#define vvii vector< vii >
#define sz size()
#define pb push_back
#define F first
#define S second
#define mem(x,y) memset(x,y,sizeof(x))
#define rep(i,a,b) for(int i=(a);i<(b);i++)
#define mod 1000000007
#define pb push_back

const int maxn = 300000 + 2;
const int INF  = 1e9 + 7;
//const LL INF = 0x0123456789ABCDEFLL;
int a[maxn];
struct BIT{
    LL t[maxn + 6];
    
    void upd(int i, LL v){
        for (; i <= maxn ; i += i & -i) t[i] += v;
    }
    
    LL get(int i){
        LL s = 0;
        for (; i; i -= i & -i) s += t[i];
        return s;
    }
};
void ref(){
    
}
LL modpow(LL base, LL exponent,LL modulus){
    if(base==0&&exponent==0)return 0;
    LL result = 1LL;
    while (exponent > 0){
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
inline void solve(void){
        int n;
        cin >> n ;
        BIT bit1 ;
        fill(bit1.t , bit1.t + maxn , 0);
        LL m = modpow(2 , n-2 , mod);
        n =2*n;
        for(int i = 0 ;i < n;i++){
            cin >> a[i];
        }
        if(n == 2) {
         cout <<"1\n";
         return;
        }
        LL ans  = 0;
    for(int i = 0; i < n;i++){
            int a2 = 1 - (bit1.get(a[i]) - bit1.get(a[i] - 1));
            int a1 = 2*(a[i] - 1) -  bit1.get(a[i] - 1);
            int a3 = n - i - 1 - a1 - a2;
            ans += 3 * a1;
            ans%=mod;
            ans += 2 * a2;
            ans%=mod;
            ans += a3;
            ans%=mod;
            bit1.upd(a[i] , 1);
        }
        ans = ans * m;
        ans%=mod;
        cout << ans;
    
}
/*void init() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
}*/
int main(int argc, const char * argv[]){
   // init();
    solve();
    return 0;
}
