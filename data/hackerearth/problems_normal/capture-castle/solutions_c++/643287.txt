#include <bits/stdc++.h>
using namespace std;
#define s(n) scanf("%d",&n)
int main()
{
	int test;
	s(test);
	while(test--){
		int m,n;
    s(m);s(n);
    int grid[m][n];
    int i,j;
    int visited[m][n];
    int cost[m][n];
    for(i=0;i<m;i++){
    	for(j=0;j<n;j++){
    		s(grid[i][j]);
    		visited[i][j] = 0;
    		cost[i][j] = 999;
    	}
    }
    int gx,gy,t;
    s(gx);s(gy);
    s(t);
    gx--;
    gy--;
    cost[0][0] = grid[0][0];
    queue< pair< int,int > >q;
    int dx[] = {0,0,1,-1};
    int dy[] = {-1,1,0,0};
    visited[0][0] = 1;
    q.push(make_pair(0,0));
    while(!q.empty()){
    	int x = q.front().first;
    	int y = q.front().second;
    	q.pop();
    	for(i=0;i<4;i++){
    		int x1 = x+dx[i];
    		int y1 = y+dy[i];
    		if(x1>=0&&x1<m&&y1>=0&&y1<n){
    			if(cost[x1][y1]>cost[x][y]+grid[x1][y1]){
    				cost[x1][y1] = cost[x][y]+grid[x1][y1];
    				//if(!visited[x1][y1])
    				q.push(make_pair(x1,y1));visited[x][y]=1;
    			}
    		}
    	}
    }
   // if(x==gx&&y==gy){
    		if(cost[gx][gy]<t)
    		printf("YES\n%d\n",t-cost[gx][gy]);
    		else{
    			cout<<"NO\n";
    		}
    		//break;
    //	}
	}
    return 0;
}
