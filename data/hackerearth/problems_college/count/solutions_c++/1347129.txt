/*
Template belongs to : Himanshu Jaju [himanshujaju]
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define msi       map<string,int>
#define msit      map<string,int>::iterator
#define pb        push_back
#define mp        make_pair

#define GI(x)     scanf("%d",&x)
#define PI(x)     printf("%d",x)

#define FOR(i,a,b)      for(int i=a;i<b;i++)
#define RFOR(i,a,b)     for(int i=b-1;i>=a;i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       10000007

#define PI  acos(-1)

#define CASE(x)   cout<<"Case "<<x<<": ";

int main()
{
      VLL odd(100010),even(100010);
      even[0] = odd[0] = 0;
      FOR(i,1,100001)
      {
            if(i%2 == 0)
            {
                  odd[i] = odd[i-1];
                  even[i] = even[i-1] + i;
            }
            else
            {
                  odd[i] = odd[i-1] + i;
                  even[i] = even[i-1];
            }
      }
      DRT()
      {
            int r,c;
            cin>>r>>c;
            int x = min(r,c);
            LL ans_odd = odd[x];
            LL ans_even = even[x];
            //cerr<<ans_even<<" "<<ans_odd<<endl;
            if(c<=r){
            int odd_rows = (max(r,c) - x)/2;
            int even_rows = (max(r,c) - x) - odd_rows;
            int y = x+1;

            if(y%2 && max(r,c)%2)
            {
                  even_rows = (max(r,c) - y)/2;
                  odd_rows = (max(r,c) - x) - even_rows;
            }
            else if(y%2 == 0 && max(r,c)%2 == 0)
            {
                  odd_rows = (max(r,c) - y)/2;
                  even_rows = (max(r,c) - x) - odd_rows;
            }

            ans_odd += 1LL*odd_rows*x;
            ans_even += 1LL*even_rows*x;}
            cout<<ans_even<<" "<<ans_odd<<endl;
      }
      return 0;
}
