#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return (r)%MOD;
}
int vis1[101][101]={{}};
int vis2[101][101]={{}};
int a[101][101];
int n;

int fun1(int pr,int pc){
    if(pr==n){
        return 1;
    }
    else if(pr<n){
        if(pc<0||pc>n){
            return 0;
        }
    }

     if(vis1[pr][pc])return 0;
     vis1[pr][pc]=1;

    if(a[pr][pc]!=1){
        return 0;
    }

         int f;
        f=fun1(pr+1,pc);
          if(f){
            return 1;
          }
        f=fun1(pr+1,pc+1);
          if(f){
            return 1;
          }
        f=fun1(pr+1,pc-1);
          if(f){
            return 1;
          }
        f=fun1(pr+1,pc);
          if(f){
            return 1;
          }

  return 0;
}

int fun2(int pr,int pc){
    if(pc==n){
        return 1;
    }
    else if(pc<n){
        if(pr<0||pr>n){
            return 0;
        }
    }
     if(vis2[pr][pc])return 0;
       vis2[pr][pc]=1;

    if(a[pr][pc]!=2){
        return 0;
    }

         int f;
        f=fun2(pr,pc+1);
          if(f){
            return 1;
          }
        f=fun2(pr-1,pc+1);
          if(f){
            return 1;
          }
        f=fun2(pr,pc+1);
          if(f){
            return 1;
          }
        f=fun2(pr+1,pc+1);
          if(f){
            return 1;
          }

  return 0;

}


int main(){
   si(n);
   fr(i,0,n){
      fr(j,0,n){
         si(a[i][j]);
      }
   }
   int f1=0,f2=0;
   fr(i,0,n){
    	if(!vis1[0][i]){
           f1|=fun1(0,i);
    	}
    }
    fr(i,0,n){
    	if(!vis2[i][0]){
    	   f2|=fun2(i,0);
    	}
    }

   if(f1&&f2){
    cout<<"AMBIGUOUS\n";
   }
   else if(f1){
      pi(1);pln;
   }
   else if(f2){
     pi(2);pln;
   }
   else{
     pi(0);pln;
   }

 return 0;
}
