#include<iostream>
#include<cstdio>
#include<iomanip>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
#include<sstream>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
int power(int a,int b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	int temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
		int dfs(int v,vb& visited,vi& ans)
		{
			visited[v] = true;
			vi::iterator it;
			for( it=adj[v].begin();it!=adj[v].end();it++ )
			{
				if(!visited[*it])
				{
					ans[v] += dfs(*it,visited,ans);
				}
			}
			ans[v]++;
			return ans[v];
		}
};

int main()
{
	ios_base::sync_with_stdio(false);
	int i, n, u, v;
	cin >> n;
	graph g(n);
	vi ans(n);
	for( i=0;i<n-1;i++ )
	{
		cin >> u >> v;
		u--;
		v--;
		g.add_edge( u, v);
	}
	vb visited(n);
	g.dfs(0, visited, ans);
	ans[0]--;
	for( i=0;i<n;i++ )
	{
		cout << ans[i] << " ";
	}
    return 0;
}