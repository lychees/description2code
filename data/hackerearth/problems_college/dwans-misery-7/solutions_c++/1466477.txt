#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>
using namespace std;
#define fr(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (int i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (int i = (n) - 1; i >= 0; i--)
#define foreach(it, ar) for ( typeof(ar.begin()) it = ar.begin(); it != ar.end(); it++ )
#define fill(ar, val) memset(ar, val, sizeof(ar))
#define uint64 unsigned long long
#define int64 long long
#define all(ar) ar.begin(), ar.end()
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define BIT(n) (1<<(n))
#define AND(a,b) ((a) & (b))
#define OR(a,b) ((a) | (b))
#define XOR(a,b) ((a) ^ (b))
#define sqr(x) ((x) * (x))
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;
typedef vector<int> vi;
#define PI 3.1415926535897932385
#define INF 1000111222
#define eps 1e-7
#define maxN 100010
#define ll long long int
int n;
ll a[maxN], f[maxN], g[maxN];
int main() {
	
	int cases, caseNo = 0;
	for (scanf("%d", &cases); cases--; ) {
	scanf("%d", &n);
	fr(i, 1, n) scanf("%lld", &a[i]);
	f[0] = g[0] = f[1] = 0;
	g[1] = a[1];
	fr(i, 2, n) {
	f[i] = max(f[i - 1], f[i - 2] + a[i]);
	g[i] = max(g[i - 1], g[i - 2] + a[i]);
	}
	printf("%lld\n",max(f[n], g[n - 1]));
	}
	return 0;
}