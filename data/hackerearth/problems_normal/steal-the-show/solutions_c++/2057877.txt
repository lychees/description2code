// monera
#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define f(i,a,b) for(int i =a; i <=b ; i++)
#define all(a) a.begin(),a.end()
#define ff first
#define ss second
#define sqr(x) ((x)*(x))
#define EPS 1e-9
#define db(var) cout<<var<<" ";
#define el cout<<endl;
#define p(A,a,b)  f(i,a,b) cout<<A[i]<<" ";
#define sj  cout<<"OK"<<endl;
#define ll long long int 


//functions
#define count_1(n)    __builtin_popcountll(n)
#define gcd(a,b) __gcd(a,b)
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )

#define MOD 1000000007
#define PI acos(-1.0)
#define e exp(1.0)
#define EPS 1e-9
#define INF    2047483647
#define INFLL  9023372036854775807LL

using namespace std;

int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};



int main() 
{
    ios :: sync_with_stdio(0);
     
     int x,y,z;
     cin>>x>>y>>z;
     
     vector<int > v;
     v.pb(x),v.pb(y),v.pb(z);
     
     int n;
     cin>>n;
     
     f(i,0,n-1)
     {
     	int x;
     	cin>>x;
     	v.pb(x);
     }
     
     sort(all(v));
     ll ans=INFLL;
     do
     {
     	int l=v.size();
     	
     	if(l&1)
     	{
     		if((v[l/2]==x) && ((v[0]==y && v[l-1]==z) ||(v[0]==z && v[l-1]==y) ))
     		{
     			int res=0;
     			f(i,1,v.size()-1)
     			{
     				res+=abs(v[i-1]-v[i]);
     			}
     			
     			if(res<ans)
     			ans=res;
     		}
     	}
     	
     	else
     	{
     		if((v[l/2]==x || v[l/2-1]==x) && ((v[0]==y && v[l-1]==z) ||(v[0]==z && v[l-1]==y) ))
     		{
     			int res=0;
     			f(i,1,v.size()-1)
     			{
     				res+=abs(v[i-1]-v[i]);
     			}
     			
     			if(res<ans)
     			ans=res;
     		}
     	}
     	
     }while(next_permutation(v.begin(),v.end()));
     
     cout<<ans<<endl;
	
  return 0;
}