#include<bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	cin >> n;
	int i, j;
	vector<string> dic;
	string s;
	int present[26];
	for (i = 0; i<n; i++)
	{
		cin >> s;
		dic.push_back(s);
		int l = s.length();
		for (j = 0; j<l; j++)
			present[s[j] - 97] = 1;
	}
	int size = dic.size();


	int smallerAplhabet[26][26];
	int alphaCount[26];

	for (i = 0; i<26; i++)
	{
		alphaCount[i] = 0;
		for (j = 0; j<26; j++)
			smallerAplhabet[i][j] = 0;
	}
	for (i = 0; i<size; i++)
	{

		for (j = i + 1; j<size; j++)
		{
			int len1 = dic[i].length();
			int len2 = dic[j].length();
			int l1 = 0, l2 = 0;

			while (l1<len1 && l2<len2 && dic[i][l1] == dic[j][l2]){
				l1++;
				l2++;
			}
			if (l1 != len1 && l2 != len2 && smallerAplhabet[dic[j][l2] - 97][dic[i][l1] - 97] == 0)
			{
				smallerAplhabet[dic[j][l2] - 97][dic[i][l1] - 97] = 1;
				alphaCount[dic[j][l2] - 97]++;
			}
		}
	}
	int temp[26];
	while (true)
	{
		for (i = 0; i<26; i++)
			temp[i] = alphaCount[i];

		bool flag = false;
		for (i = 0; i<26; i++)
		{
			if (alphaCount[i]>0)
				flag = true;
		}


		for (i = 0; i<26; i++)
		{
			if (temp[i] == 0 && present[i] == 1)
			{
				cout << (char)(i + 97);
				temp[i] = -1;
				present[i] = 0;

				for (j = 0; j<26; j++)
				{
					if (smallerAplhabet[j][i] == 1)
					{
						smallerAplhabet[j][i] = 0;
						alphaCount[j]--;
					}
				}
			}

		}

		for (i = 0; i<26; i++)
			temp[i] = alphaCount[i];
		cout << endl;
		if (flag == false)
			break;


	}

}
