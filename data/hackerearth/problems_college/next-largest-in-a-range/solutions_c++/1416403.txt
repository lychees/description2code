#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<map>
#include<stdlib.h>
#include<algorithm>
#include<limits.h>
#include<stack>
#include<deque>
#include<set>

using namespace std;

#define i_n(a)       scanf("%d",&a)
#define l_n(a)       scanf("%lld",&a)
#define LL           long long int
#define pb(a)        push_back(a)
#define pp           pair<int,int>
#define vv           vector<int>
#define vvp          vector<pp>
#define i_p(a)       printf("%d\n",a)
#define l_p(a)       printf("%lld\n",a)
#define pnt(expr)    printf(#expr"\n")
#define reset(a,val) memset(a,val,sizeof(a))
#define m1           1000000000
#define mod          1000000007
#define pr(cn,x)     ((cn).find(x)!=(cn).end())
#define tr(cn,it)    for(typeof((cn).begin()) it=(cn).begin();it!=(cn).end();it++)
#define read()       freopen("fraud.in","r",stdin)
#define write()      freopen("fraud.out","w",stdout)





bool cmp(const pair<int, int>& p1, const pair<int, int>& p2)
{
    return p1.first < p2.first;
}

int main()
{
   int n,l,r,q;
   vv v;
   i_n(n);i_n(l);i_n(r);i_n(q);
     for(int i=0;i<n;i++)
     {
         int a;
         i_n(a);
         if(i>=l&&i<=r)
            v.pb(a);
     }
     sort(v.begin(),v.end());
     int lx=v.size();
     while(q--)
     {
         int a;
         i_n(a);
         a++;
         int idx;
         idx=lower_bound(v.begin(),v.end(),a)-v.begin();
         if(idx<0||idx==lx)
            i_p(-1);
         else
            i_p(v[idx]);
     }
  return 0;
}
