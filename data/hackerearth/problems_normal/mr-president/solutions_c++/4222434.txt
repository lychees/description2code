#include <bits/stdc++.h>
using namespace std;
#define ll long long

ll find(ll x, ll parent[]){
	while(parent[x]!=x){
		parent[x] = parent[parent[x]];
		x = parent[x];
	}
	return x;
}

void Union(ll x, ll y, ll parent[]){
	ll x_parent = find(x, parent);
	ll y_parent = find(y, parent);
	parent[x_parent] = parent[y_parent];
}

ll transform(pair<ll, pair<ll,ll> >e[], ll parent[], ll m, ll k, ll n){
	ll cost=0, ans=n-1;
	if(k<n-1) ans = 1e9;
	for(ll i=0; i<m; i++){
		ll src = e[i].second.first, des = e[i].second.second;
		cost = e[i].first;
		if(find(src, parent)!=find(des, parent)){
			Union(src, des, parent);
			--n;
			k-=cost;
			if(k>=n-1) ans=n-1;
		}
	}
	if(n>1 || ans>1e7) ans=-1;
	return ans;
}

int main(){
	ll k, n,m;
    cin>>n>>m>>k;
    pair<ll, pair<ll,ll> >e[m];
    ll parent[n+1];
    for(ll i=0; i<=n; i++){
    	parent[i]=i;
    }
    for(ll i=0; i<m; i++){
    	ll a, b, c;
    	cin>>a>>b>>c;
    	e[i] = make_pair(c, make_pair(a,b));
    }
    sort(e,e+m);
    cout<<transform(e, parent, m, k, n)<<endl;
    return 0;
}
