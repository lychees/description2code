#include <cstdlib>
#include <iostream>
#include <stdio.h>
#include <cstring>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <map>
#include <stack>
#include <cmath>
#include <set>
#include <ctype.h>
#include <bitset>

#define INF 0x3F3F3F3F
#define rep(i, a, b) for (int i = int(a); i < int(b); i++)
#define TRvii(c, it) for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define tr(it, s)  for ( typeof ( s.begin( ) ) it=s.begin( ); it!=s.end( ); it++ )
#define pb push_back
#define clr(a) memset((a),0,sizeof(a))
#define pi 3.1415926535897932384626433832795028841971
#define debug(x) cout << #x << " = " << x << endl;
#define all(S) (S).begin(), (S).end()
#define MAXV 1005
#define F first
#define S second
#define EPS 1e-9

using namespace std;

typedef long long ll;
typedef pair < int, int >  ii;
typedef vector < int >  vi;
typedef vector < ii >  vii;

struct circ{
    int x, y, r;
};

circ c[12];

int main(){


    int n, x, y, r, ans=0;

    scanf("%d",&n);

    rep(i,0,n)
        scanf("%d%d%d",&c[i].x,&c[i].y,&c[i].r);

    int p;

    rep(i,1,1001){
        rep(j,1,1001){
            p = 0;
            rep(k,0,n){
                double dist = sqrt((c[k].x-i)*(c[k].x-i) + (c[k].y-j)*(c[k].y-j));
                if(dist <= c[k].r)
                    p++;
            }
            if(p >= 2)
                ans++;
        }
    }

    printf("%d\n",ans);

    return 0;
}