#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)				memset(a,b,sizeof a)
#define pb				push_back

int n,q;
int a[511111];
const int mod = 1000000007;

int qp(ll c,ll st){
	ll r=1;
	while(st){
		if(st&1)r*=c,r%=mod;
		c*=c,c%=mod;
		st>>=1;
	}
	return r;
}

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
#endif

	cin>>n>>q;
	REP(i,n)scanf("%d",a+i);
	sort(a,a+n);
	REP(i,q){
		char c;int m;
		scanf(" %c %d",&c,&m);
		if(c=='<'){
			int num = lower_bound(a,a+n,m) - a;
			printf("%d\n",qp(2,num));
		}else if(c=='>'){
			int num = a+n-lower_bound(a,a+n,m+1);
			ll res = qp(2,num) - 1;
			if(res<0)res+=mod;
			res *= qp(2,n-num);
			res %= mod;
			printf("%d\n",res);
		}else{
			int res = qp(2,n);
			int num = lower_bound(a,a+n,m) - a;
			res -= qp(2,num);
			num = a+n-lower_bound(a,a+n,m+1);
			ll r2 = qp(2,num)-1;
			if(r2<0)r2+=mod;
			r2*=qp(2,n-num);r2%=mod;
			res-=r2;
			while(res<0)res+=mod;
			printf("%d\n",res);
		}
	}


#ifdef LocalHost
	//printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}