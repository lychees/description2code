using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define PI 2 * acos(0)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;

ll ans,snt,C[500+10][500+10];
int n;

int check(int n){
    FOR(i,2,n)
    if (n%i==0) return false;
    return true;
}

int main(){
 //   freopen("magic-fractions.inp", "r", stdin);
 //   freopen("magic-fractions.out", "w", stdout);
    ios_base::sync_with_stdio (false);
    cin.tie();
    cin >> n;
    snt=0;
    ans=0;
    C[0][0]=1;
    FORE(i,1,n){
        C[i][0]=C[i][i]=1;
        FOR(j,1,i) C[i][j]=C[i-1][j]+C[i-1][j-1];
    }
    FORE(i,2,n){
        if (check(i)) snt++;
        FORE(j,1,snt/2){
            if (j*2==snt) ans+=C[snt][j]/2;
            else ans+=C[snt][j];
        }
        ans++;
    }
    cout << ans;
}






