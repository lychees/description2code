#include <bits/stdc++.h>
using namespace std;

int prime[100010];
int st[5000001];

void construct(int arr[],int i,int j,int index)
{
	if(i>j) return;
	if(i==j) {
		if(prime[arr[i]]==1) st[index]=  arr[i];
		else st[index] = -1;
	} else {
		construct(arr,i,(i+j)/2,index*2);
		construct(arr,(i+j)/2+1,j,index*2 + 1);
		st[index] = max(st[index*2],st[index*2+1]);
	}
}

void update(int x,int y,int a,int b,int index)
{
	if((a<x) || (a>y)) return;	
	if(x==y) {
		if(prime[b]==1) st[index]= b;
		else st[index] = -1;
	} else {
		update(x,(x+y)/2,a,b,index*2);
		update((x+y)/2+1,y,a,b,index*2+1);
		st[index] = max(st[index*2],st[index*2+1]);
	}
}

int query(int x,int y,int a,int b,int index)
{
	if((x>y)||(b<x)||(y<a)) return -1;

	if((a<=x)&&(b>=y)) return st[index];
	else return (max(query(x,(x+y)/2,a,b,index*2),query((x+y)/2+1,y,a,b,index*2+1)));
}

int main()
{
	int i,j,n,m,q,a,b;

	n = 100009;

	for(i=0;i<=n;i++) prime[i] = 1;

	prime[1] = 0;
	prime[0] = 0;

	for(i=2;i<=sqrt(n);i++) {
		if(prime[i]) {
			for(j=i*i;j<=n;j+=i) prime[j] = 0;
		}
	}

	scanf("%d%d", &n,&m);

	int arr[n];

	for(i=0;i<n;i++) scanf("%d", &arr[i]);

	construct(arr,0,n-1,1);

	while(m--) {
		scanf("%d%d%d", &q,&a,&b);

		if(q==1) printf("%d\n", query(0,n-1,a-1,b-1,1));
		else if(q==0) update(0,n-1,a-1,b,1);
	}


	return 0;
}
