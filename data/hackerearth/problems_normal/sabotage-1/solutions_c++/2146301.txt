// LUCIFER <3 SLS <3

#include <bits/stdc++.h>

using namespace std;

#define s(x) scanf("%d", &x)
#define p(x) printf("%d\n", x)
#define pb push_back

void link(int x, int y, int p[], int rnk[])
{
    if (rnk[x] > rnk[y])
        p[y] = x;
    else {
        p[x] = y;
        if (rnk[x] == rnk[y])
            rnk[y]++;
    }
}

int findset(int x, int p[])
{
    if (x != p[x])
        p[x] = findset(p[x], p);
    return p[x];
}

int main()
{
    int n, m, i;
    s(n);
    s(m);
    int p[n+1];
    int rnk[n+1];
    for (i = 1; i <= n; i++) {
        p[i] = i;
        rnk[i] = 0;
    }
    vector <int> ans;
    vector < pair < pair <int, int> , int> > v(m);
    pair < pair <int, int> , int> tmp;
    for (i = 0; i < m; i++) {
        s(v[i].first.first);
        s(v[i].first.second);
        v[i].second = i+1;
    }
    for (i = m-1; i >= 0; i--) {
        tmp = v[i];
        tmp.first.first = findset(tmp.first.first, p);
        tmp.first.second = findset(tmp.first.second, p);
        if (tmp.first.first != tmp.first.second)
            link(tmp.first.first, tmp.first.second, p, rnk);
        else
            ans.pb(tmp.second);
    }
    p(ans.size());
    for (i = ans.size()-1; ans.size() && i >= 0; i--)
        p(ans[i]);
    return 0;
}
