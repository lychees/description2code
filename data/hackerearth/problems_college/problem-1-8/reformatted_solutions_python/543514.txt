from string import ascii_lowercase
from collections import OrderedDict

od = OrderedDict((ch, idx) for idx, ch in enumerate(ascii_lowercase, 1))


class check():
    def __init__(self, name, name_array):
        self.name = name
        self.name_array = name_array
        self.name_array_2 = []
        self.max = len(name)
        self.name_array_len = len(name_array)
        self.r = ''
        self.b = True
        self.ret()

    def ret(self):
        for i in range(0, self.name_array_len):
            if (self.name_array[i] == self.name):
                print self.name_array[i]
                return 0
        for i in range(0, self.name_array_len):
            if (len(self.name_array[i]) > len(
                    self.name) and self.name_array[i][0:len(self.name)] == self.name):
                self.name_array_2.append(self.name_array[i])
        self.name_array = list(self.name_array_2)

        if (len(self.name_array) == 0):
            print self.name
            return 0
        if (len(self.name_array) == 1):
            print self.name_array[0]
            return 0

        for i in range(0, len(self.name_array)-1):
            if (len(self.name_array[i]) > len(self.name_array[i+1])):
                self.max = len(self.name_array[i])

            else:
                self.max = len(self.name_array[i+1])

        for i in range(0, self.max):
            if (self.b):
                for p in range(0, len(self.name_array)-2):
                    if ((len(self.name_array[p]) > len(
                            self.name)+i) and (len(self.name_array[p+1]) > len(self.name)+i)):
                        if (od[(self.name_array[p][len(self.name)+i])] <
                                od[(self.name_array[p+1][len(self.name)+i])]):
                            self.r = self.name_array[p]
                            self.b = False
                        elif (od[(self.name_array[p][len(self.name)+i])] > od[(self.name_array[p+1][len(self.name)+i])]):
                            self.r = self.name_array[p+1]
                            self.b = False
                        else:
                            self.b = True
                    elif ((len(self.name_array[p])) == (len(self.name)+i)):
                        print self.name_array[p]
                        return 0
                    elif ((len(self.name_array[p+1])) == (len(self.name)+i)):
                        print self.name_array[p+1]
                        return 0
            elif (self.b == False):
                print self.r
                return 0


name = raw_input()
name_array_len = input()
name_array = []
for i in range(0, name_array_len):
    name_array.append(raw_input())
check(name, name_array)
