#include <iostream>

using namespace std;

int v[5000];
bool primes[5001];
int table[5000];
int rec[5000];


void init(){
	for(int i = 0;i <= 5000;++i) primes[i] = false;
	for(int i = 2;i <= 5000;++i){
		if(!primes[i]){
			int index = 2;
			while(index*i <= 5000){
				primes[index*i] = true;
				index++;
			}
		}
	}
	primes[0] = true;
	primes[1] = true;
	return;
}

int recur(int i,int n){
	if(i >= n) return 0;
	int ans = 0;
	if(rec[i] != -1) return rec[i];
	for(int j = 2;i+j-1 < n;++j){
		if(!primes[j]) ans = max(ans,table[i+j-1]-table[i]+v[i] + recur(i+j+1,n));
	}
	ans = max(ans,recur(i+1,n));
	return rec[i] = ans;
}

int main()
{
	int n = 0,ans = 0;
	cin>>n;
	init();
	for(int i = 0;i < n;++i)
		cin>>v[i];
	table[0] = v[0];
	for(int i = 1;i < n;++i){
		table[i] = table[i-1]+v[i];
	}
	if(!primes[n]) cout<<table[n-1]<<endl;
	else{
		for(int i = 0;i < n;++i) rec[i] = -1;
		cout<<recur(0,n)<<endl;
	}
    return 0;
}
