#include <iostream>
#include <map>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
 
long long  dp[20][200][2000];
int d[20];
 
long long  solver(int pos, int s, int sq, int check){
	if(pos==-1)
		return __gcd(s,sq)==1;
	if(check==0 && dp[pos][s][sq]!=-1)
		return dp[pos][s][sq];
	int curr;long long ans=0;
	if(check==1)
		curr=d[pos];
	else
		curr=9;
	for(int i=0;i<=curr;i++)
		ans+=solver(pos-1,s+i,sq+i*i,check && curr==i);
	if(check==0)
		return (dp[pos][s][sq]=ans);
 
	return ans;
}
 
long long int solve(long long int n){
	int len=0;
	if(n==0)
        return 0;
	while(n>0){
		d[len++]=n%10;
		n/=10;
	}
	return solver(len-1,0,0,1);
}
 
 
int main(){
	int t;cin >> t;
	memset(dp,-1,sizeof(dp));
	while(t--){
		long long  l,r;
		cin >> l >> r;
		long long  ans=solve(r)-solve(l-1);
		cout << ans << endl;
	}
	return 0;
}