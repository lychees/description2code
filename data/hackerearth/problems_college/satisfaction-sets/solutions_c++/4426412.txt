#include<iostream>
#include<list>
#include<vector>
using namespace std;

void display(list<int> &p)
{

    list<int> :: iterator l;
    for(l=p.begin(); l!=p.end();++l)
        cout<<*l<<" ";
    cout<<endl;

}
int main()
{

list <int> a[100],d[100];
vector<int> v;
int n,k;int b;
cin>>n;
for(int i=0;i<n;i++)
{
    cin>>k;

    for(int j=0;j<k;j++)
    {
        cin>>b;
        a[i].push_back(b);
    }


}
    for(int i=0;i<n;i++)
       {
           d[i]=a[i];
       }

list<int> listb,listc,listd;
listb=a[0];
for(int i=1;i<=n-1;i++)
{
    listb.merge(a[i]);

}
/*cout<<endl;
display(listb);
cout<<endl;
*/
listb.sort();



listb.unique();
 /*cout<<"...............union"<<endl;*/
 //display(listb);

//cout<<"........"<<endl;

for(int i=0;i<n;i++)
{
    d[i].sort();
    d[i].unique();

}

  /*  for(int i=0;i<n;i++)
        display(d[i]);*/

listc=d[0];
for(int i=1;i<=n-1;i++)
{
    listc.merge(d[i]);

}
//display(listc);

 list<int> :: iterator l1;

    for(l1=listc.begin(); l1!=listc.end();++l1)
      v.push_back(*l1);
int m=1;
for(int i=0;i<v.size();i++)
{
h: if(i<v.size()) {} else break;

  g:
      if(v[i]==v[i+1]) { ++m;
       if(m==n) { listc.remove(v[i]); i=i+2;    m=1;  goto h; }

       ++i; goto g;}
       else{
        ++i;
        m=1;
        goto h;
       }

}

//display(listc);
listc.unique();
//display(listc);

list<int> :: iterator l3,l2;
int sum,sum1;
sum=0;
sum1=0;

    for(l3=listc.begin(); l3!=listc.end();++l3)
      sum=sum+(*l3);
      
      
       for(l2=listb.begin(); l2!=listb.end();++l2)
      sum1=sum1+(*l2);


      cout<<sum-sum1;






    return 0;
}
