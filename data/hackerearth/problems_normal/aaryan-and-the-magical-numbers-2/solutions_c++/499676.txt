/*
	NISHANT GUPTA
	CSE-MNNIT ALLAHABAD
*/
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <cctype>
#include <utility>
#include <map>
#include <string>
#include <climits>
#include <set>
#include <string>
#include <sstream>
#include <utility>
#include <ctime>
#include <cassert>
#include <fstream>
using namespace std;
typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> II;
typedef vector<long long> VLL;
typedef vector<bool> VB;
#define SZ(A) ((int)A.size())
#define LEN(A) ((int)A.length())
#define MS(A) memset(A, 0, sizeof(A))
#define MSV(A,a) memset(A, a, sizeof(A))
#define MAX(a,b) ((a >= b) ? (a) : (b))
#define MIN(a,b) ((a >= b) ? (b) : (a))
#define ABS(a) (((a) > 0) ? (a) : (-a))
#define MP make_pair
#define X first
#define Y second
#define PB push_back
#define FOUND(A, x) (A.find(x) != A.end())
#define getcx getchar_unlocked
#define INF 0x3f3f3f3f
#define INFL (LL(1e18))
#define EPS 1e-12
#define chkbit(s, b) (s & (1<<b))
#define setbit(s, b) (s |= (1<<b))
#define clrbit(s, b) (s &= ~(1<<b))
#define rep(i, a, n) for(i = a; i < n; i++)
#define rev(i, a, n) for(i = a; i > n; i--)
#define FORALL(itr, c) for(itr = (c).begin(); itr != (c).end(); itr++)
#define ALL(A) A.begin(), A.end()
#define LLA(A) A.rbegin(), A.rend()
inline void inp( int &n )
{
	n=0;    int ch=getcx();int sign=1;
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
	while(  ch >= '0' && ch <= '9' )
	n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	n=n*sign;
}
inline void inp1( LL &n )
{
	n=0;    LL ch=getcx();LL sign=1;
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
	while(  ch >= '0' && ch <= '9' )
	n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	n=n*sign;
}

LL dp[19];
string convert(LL n)
{
	LL i,j,k;
	string s;
	if(n==0)return "0";
	for(i=n;i;i/=10)
	{
		s=(char)(i%10+48)+s;
	}
	return s;
}
LL invert(string s,LL st,LL end)
{
	LL x=0,i,j;
	for(i=st;i<end;i++)
	{
		x=x*10+(s[i]-48);
	}
	return x;
}
LL power(LL base,LL e,LL ans)
{
	if(!e)return ans;
	if(e&1)ans=(ans*base);
	return power((base*base),e>>1,ans);
}
LL cal(LL n)
{
	string s=convert(n);
	LL i,j,k,p,left,l=s.length(),ans=0;
	for(i=0;i<l;i++)
	{
		left=l-i-1;
		for(j=0;j<(s[i]-48);j++)
		{
			if(j==2||j==3||j==5||j==7)
			ans+=(power(10,left,1));
			else ans+=dp[left];
		}
		k=s[i]-48;
		if(k==2||k==3||k==5||k==7){break;}
	}
	ans+=invert(s,i+1,l);
	return ans;
}

int main()
{
	LL i,j,k,n,t;
	inp1(t);

	dp[0]=0;
	dp[1]=4;
	rep(i,2,19)
	{
		dp[i]=dp[i-1]+(4*power(10,i-1,1)+5*dp[i-1]);
		//cout<<dp[i]<<" ";
	}
	while(t--)
	{
		inp1(n);
		printf("%lld\n",cal(n+1));
	}
	return 0;
}
