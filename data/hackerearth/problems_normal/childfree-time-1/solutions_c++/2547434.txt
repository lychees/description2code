/*
 *ID:   Cowboy
 *TASK:
 *Judge:
 */
#include <bits/stdc++.h>
#define INF 0x7fffffff
#define INFLL 1e17
#define PI 2*acos(0.0)
using namespace std;

#define FS first
#define SC second
#define PB(t) push_back(t)
#define ALL(t) t.begin(),t.end()
#define MP(x, y) make_pair((x), (y))
#define Fill(a,c) memset(&a, c, sizeof(a))

typedef pair<int, int> II;
typedef vector<int> VI;
typedef vector<II> VII;
int R, P;
vector<VII>G;
VI topSort, visit;

void DFS( int node ){
	visit[node] = 1;
	for( int v, i=0; i < G[node].size(); i++){
		v = G[node][i].first;
		if( !visit[v] )
			DFS(v);
	}
	topSort.PB( node );
}

int main(){
#ifndef ONLINE_JUDGE
   freopen("input.txt", "rt", stdin);
//   freopen("output.txt", "wt", stdout);
#endif
    ios::sync_with_stdio( false );
    cin.tie( NULL );
    int u, v, w;
    while( cin>>R>>P ){
    	G.assign(R, VII() );
    	for( int i=0; i < P; i++) {
    		cin>>u>>v>>w;
    		u--;v--;
    		G[u].PB( MP(v, w) );
    	}
    	topSort.clear();
    	visit.assign(R, 0);
    	for( int i=0; i < R; i++){
    		if( !visit[i] )
    			DFS(i);
    	}
    	vector<long long>dist(R, 0);
    	long long res = 0;
    	for( int i=R-1; i >=0 ; i--){
    		u = topSort[i];
    		for( int j=0; j < G[u].size(); j++){
    			v = G[u][j].first;
    			w = G[u][j].second;
    			dist[v] = max(dist[v], dist[u]+w+2);
    		}
    		res = max(res, dist[u]);
    	}
    	cout<< res <<endl;
    }
return 0;
}
