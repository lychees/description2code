#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;

long modular_pow(long base, long exponent, long modulus) {
    long result = 1;
    while (exponent > 0) {
        if ((exponent & 1) == 1)
           result = (result * base) % modulus;      
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}

int nthdigit(double x, double y, long n) {
    double temp = (x * modular_pow(10, n-1, y) / y); //this is the formula
    return int(10 * temp) % 10; //extracts 1st decimal digit
}

int main() {
    double x,y;
    int n,t;
    cin>>t;
    while(t--)
    {
    
    cin>>x>>y>>n;

    //cout <<setprecision(200) << x/y <<endl;
    
   
        cout << nthdigit(x,y,n);
   
    cout <<endl;
}
}
