#include<bits/stdc++.h>
#include <iostream>
#include <numeric>
#define ll long long
#define ull unsigned long long  
#define mpa make_pair
#define pb push_back
#define ff first
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define ss second
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define fre     freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define scan(x) scanf("%lld",&x)
using namespace std;
ll modpow(ll a,ll n,ll temp){ll res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;} 
//ll a[100005],n,dp[1000005]={0},b[1000005],c[100005],dp1[1000005],bit[100005];
//ll vis[100005];
//vector<ll> adj[100005];
#define pi 3.1415926536
#define sz(x) x.size()
ll ison(ll mask,ll pos){
	return (mask&(1<<pos));
}
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef pair<ll, ll> pii;
ll cbit(ll n){ll k=0;while(n) n&=(n-1),k++;return k;}
ll nbit(ll n){ll k=0;while(n) n/=2,k++;return k;}
//ll b1[1001][1001],b2[1001][1001],g1[1001][1001],g2[1001][1001],w[1001][1001];
//bool a1[101][101],a2[102][101],a3[103][101];
ll mod=1e9+7;
int sgn(ll x) {
  return x < 0 ? -1 : !!x;
}
//pair<ll,ll> a[1000005];
/*void upd(ll ind,ll val){
    if(ind==0) return;
    while(ind<=n){
        bit[ind]+=val;
        ind+=(ind&-ind);
    }
}
ll qu(ll ind){
  ll k=0; while(ind>0){
    k+=bit[ind];
    ind-=(ind&-ind);
  }
    return k;
}*/
//pair<ll,ll> a[30005],dp[30005];
//ll dp[2001][2001];
//double p,dp[2002][2002];
//ll vis[100005];
//vector<pair<ll,ll> >adj[100005]
/*ll prim(ll s){
	priority_queue<pair<ll,ll> > q;
	ll i,j,k,l,ans=0;
	pair<ll,ll>p;
	q.push(mpa(0,s));
	while(!q.empty()){
		p=q.top();
		if(vis[p.ss]) continue;
		vis[p.ss]=true;
		ll c=-1*(p.ff);
		ll v=p.ss;
		ans+=c;
		for(i=0;i<adj[v].size();i++){
			if(!vis[adj[v][i].ss])
			q.push((adj[v][i]));
		}
	}
	return ans;
}*/
//ll path[1004][1004];
//ll a[1005][1005];
//pair<ll,ll> p[100005];
/*bool isp(ll x,ll y,ll n,ll m){
	if(x>=1 && x<=n && y>=1 && y<=m) return 1;
	else return 0;
}*/
vector<pii> e[100007];
ll n;
//ll cnt[1005];
/*ll dfs(ll v){
	vis[v]=true;
	ll numv=0;
	for(ll i=0;i<adj[v].size();i++) {
		if(!vis[adj[v][i]]){
			ll cnt=dfs(adj[v][i]);
			if(cnt%2==0) ans++;
			else
			numv+=cnt;
		}
	}
	return numv+1;
}*/
vi distra(ll s){
	vi d(n,mod),vis(n);
	d[s]=0;
	set<pii> q;
	q.insert(mpa(0,s));
	while(!q.empty()){
		ll v=q.begin()->ss;
		q.erase(q.begin());
		vis[v]=1;
		for(ll i=0;i<e[v].size();i++){
		    ll u=e[v][i].ff;
			ll nd=d[v]+e[v][i].ss;
			if(vis[u]) continue;
			if(d[u]<=nd) continue;
			q.erase(mpa(d[u],u));
			d[u]=nd;
			q.insert(mpa(d[u],u));
	    }
	}
	return d;
}

/*void transform(ll x,ll y){
	if(diff==1){
		ll t=y;
		y=n-y+1;
		x=t;
	}
	else if(diff==2){
		x=n-x+1;
		y=m-y+1;
	}
	else if(diff=3){
		x=x+m-1;
		y=y;
	}
	else if(diff==-1){
		
		
	}
	
}*/
//ll a[100005],po[100005],c[100005],temp[100005]; 
ll a[500005],b[500005],c[500005];
ll vis[5005];
ll ans=0;
int main(){
ll t,n,k,i,j,l,m;
cin>>t;
while(t--){
	ll ans=0;
cin>>n>>k;
l=n*n;
for(i=1;i<=n;i++){
	for(j=1;j<=n;j++){
		if(j==k) ans+=l-(i-1)*(n-k+1)-(n-j);
	}
}
cout<<ans<<endl;
/*for(i=1;i<=n;i++){
	for(j=1;j<=n;j++){
		if(j>=k) {
		cout<<l-(i-1)*(n-k+1)-(n-j)<<" ";
		if(j==k) ans+=l-(i-1)*(n-k+1)-(n-j);
		}
		else cout<<(i-1)*(k-1)+j<<" ";
	}
	cout<<endl;
}*/
	
	
	
}
}

	





