#include <cstdio>
using namespace std;

long findMaxValue(long weight[],long values[],long n,long capacity) {
   long knapsack[capacity+1];
   knapsack[0] = 0;
   long items[n+1];
   items[0] = -1;
   long i,j;
   for(j=1;j<=capacity;j++) {
      items[j] = items[j-1];
      long max = knapsack[j-1];
      for(i=0;i<n;i++) {
         long x = j-weight[i];
         if(x >= 0 && (knapsack[x] + values[i]) > max) {
            max = knapsack[x] + values[i];
            items[j] = i;
         }
         knapsack[j] = max;
      }
   }
   return knapsack[capacity];
}

int main()
{
	int T;
	scanf("%d", &T);
	for(int t=1; t<=T; t++)
	{
		long n, p;
		scanf("%ld", &n);
		long m[n], w[n];
		for(long j=0; j<n; j++)
		{
			scanf("%ld", &p);
			w[j] = j+1;
			m[j] = p;
		}
		printf("%ld\n", findMaxValue(w, m ,n ,n));
	}
	return 0;
}
