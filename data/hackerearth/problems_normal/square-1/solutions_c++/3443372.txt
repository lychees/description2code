

    #include<bits/stdc++.h>
    const int N = 100500;
    const int MAGIC = 201;
    const double INF = 1e18;
    using namespace std;
    int n;
    struct pt
    {
    	double x;
    	double y;
    };
    pt p[N];
    pt cur[N];
    pt rotate(pt p, double ang)
    {
    	pt res;
    	res.x = p.x*cos(ang) - p.y*sin(ang);
    	res.y = p.x*sin(ang) + p.y*cos(ang);
    	return res;
    }
    double eval(double ang)
    {
    	for (int i = 0; i < n; i++)
    	{
    		cur[i] = rotate(p[i], ang);
    	}
    	double minx, maxx, miny, maxy;
    	minx = miny = 1e9;
    	maxx = maxy = -1e9;
    	for (int i = 0; i < n; i++)
    	{
    		minx = min(minx, cur[i].x);
    		miny = min(miny, cur[i].y);
    		maxx = max(maxx, cur[i].x);
    		maxy = max(maxy, cur[i].y);
    	}
    	return max(maxy - miny, maxx - minx);
    }
    int main(){
    	cin >> n;
    	for (int i = 0; i < n; i++)
    	{
    		cin >> p[i].x >> p[i].y;
    	}
    	double ans = 1e9;
    	for (int block = 0; block < MAGIC; block++)
    	{
    		double l, r;
    		l = block*M_PI / MAGIC;
    		r = (block + 1)*M_PI / MAGIC;
    		for (int iter = 0; iter < 65; iter++)
    		{
    			double mid1, mid2;
    			mid1 = l * 2 + r;
    			mid2 = l + 2 * r;
    			mid1 /= 3;
    			mid2 /= 3;
    			double res1 = eval(mid1);
    			double res2 = eval(mid2);
    			if (res1 < res2)
    				r = mid2;
    			else
    				l = mid1;
    			ans = min(ans, res1);
    		}
    	}
    	cout.precision(4);
    	cout << fixed << ans << endl;
    	cin.get(); cin.get();
    	return 0;
    }

