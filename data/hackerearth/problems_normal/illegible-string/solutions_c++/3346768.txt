#include <bits/stdc++.h>

using namespace std;

int odd_w_v(char str[], int n, int i, int ar[])
{
	//cout << "got << it << " << endl;
	int c_w = 0, k;
	for (k = i; k < n; k++)
	{
		if (str[k] != 'w')
		{
			//cout << "got w " << endl;
			break;
		}
		c_w++;
	}
	if (k < n && str[k] == 'v')
	{
		//cout << "m s " << endl;
		ar[0] = c_w + 1;
		ar[1] = k;
		return 1;
	}
	return 0;
}


int find_min(char str[], int n)
{
	int c = 0, i = 0;
	int flag[n], flag1 = 0;
	int ar[2];
	memset(flag, 0, sizeof(flag));
	memset(flag, 0, sizeof(flag));
	
	while (i < n)
	{
		flag1 = 0;
		if (str[i] == 'v' && flag[i] != -1)
		{
			if (str[i + 1] == 'v' && flag[i] != -1)
			{
				flag[i] = -1;
				flag[i + 1] = -1;
				c++;
				i = i + 2;
				flag1 = 1;
			}
			else if (odd_w_v(str, n, i + 1, ar))
			{
				//cout << "got it " << endl;
				flag[ar[1]] = -1;
				flag1 = 1;
				c = c + ar[0];
				i = ar[1] + 1;
			}
		}
		if (flag1 == 0)
		{
			flag[i] = -1;
			c++;
			i++;
		}
	}
	return c;
}

int find_max(char str[], int n)
{
	int c = 0;
	for (int i = 0; i < n; i++)
	{
		if (str[i] == 'w')
			c = c + 2;
		else 
			c++;
	}
	return c;
}

int main()
{
	int n;
	cin >> n;
	char str[n];
	for (int i = 0; i < n; i++)
		cin >> str[i];
	int res_min = find_min(str, n);
	int res_max = find_max(str, n);
	cout << res_min << " " << res_max << endl;
	return 0;
}