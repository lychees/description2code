__author__ = 'anshu'


def myMax(a, b):
    if (a > b):
        return a
    else:
        return b


def maximumWeightThatCanbeRescued(
        total_items,
        listOfWeights,
        listOfValues,
        thresholdWeight):
    knapsack = []
    for i in range(0, total_items+1):
        tempList = []
        for j in range(0, thresholdWeight+1):
            tempList.append(0)
        knapsack.append(tempList)

    for i in range(0, total_items+1):
        for j in range(0, thresholdWeight+1):
            if (i == 0 or j == 0):
                knapsack[i][j] = 0
            elif (listOfWeights[i-1] <= j):
                knapsack[i][j] = myMax(
                    listOfValues[i-1] + knapsack[i-1][j-listOfWeights[i-1]], knapsack[i-1][j])
            else:
                knapsack[i][j] = knapsack[i-1][j]

    return knapsack[total_items][thresholdWeight]


no_of_test_cases = int(raw_input())

for i in range(0, no_of_test_cases):
    total_items = int(raw_input())
    thresholdWeight = int(raw_input())
    if (total_items > 0 and thresholdWeight > 0):
        listOfWeights = map(
            lambda x: int(x), str(
                raw_input()).strip().split(' '))
        listOfValues = map(
            lambda x: int(x), str(
                raw_input()).strip().split(' '))
        print maximumWeightThatCanbeRescued(total_items, listOfWeights, listOfValues, thresholdWeight)
    else:
        print 0
