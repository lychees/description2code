#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long int
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define sz(x) ((int) (x).size())
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i = 0;i < N;i++)
#define frep(i,a,b) for(int i = a;i <= b;i++)
#define pii pair<int , int>
#define pll pair<ll , ll>
#define vii vector<int>
#define vpii vector< pii >
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcount(x)
#define print(A,j,k) for(int ii=j;ii<=k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)
#define FILE freopen("inp.txt" , "r" , stdin);
#define ld long double

const int MOD = 1e9 + 7;
const int N = 1e6 + 5;

int A[1003];
ll dist[10004];
int vis[10004];

int main(int argc, char const *argv[])
{
	fast;

	int n , q;
	cin >> n >> q;

	rep(i , n)
		cin >> A[i];
	
	sort(A , A + n);

	for(int i = 0;i < A[0];i++) {
		dist[i] = INF;
	}
	
	// for(int i = 0;i < n;i++)
	// 	dist[ A[i] % A[0] ] = min(dist[A[i] % A[0]] ,(ll) A[i]);
	// dist[0] = A[0];
	set<ll> S;
	S.insert(0);

	while (S.size() > 0) {
		ll w = (*S.begin());
		S.erase(S.begin());
		int v = w % A[0];
		if (vis[v])
			continue;
		vis[v] = 1;
		for(int i = 0;i < n;i++) {
			int nx = (w + A[i]) % A[0];
			if (w + A[i] < dist[nx]) {
				dist[nx] = w + A[i];
				if (vis[nx] == 0)
					S.insert(w + A[i]);
			}
		}
	}
	
	// for(int i = 0;i < A[0];i++)
	// 	cout << dist[i] << ' ';
	// cout << '\n';
	
	while (q--) {
		int x;
		cin >> x;
		if (x < A[0] || dist[x % A[0]] == INF)
			cout << "NO\n";
		else if (dist[x % A[0]] > x)
			cout << "NO\n";
		else
			cout << "YES\n";
	}	

	return 0;
}