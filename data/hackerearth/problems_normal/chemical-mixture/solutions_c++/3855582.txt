#include <iostream>
#include <vector>
#include <algorithm>
#include <string.h>
#define MAXN 100
#define INF 1e19
using namespace std;
typedef long long ll;

int n1 , n2;
int f;
ll m;
ll amulus[MAXN];
ll water[MAXN];
int vis[MAXN];
vector <ll> sums;
vector <ll> v;

void gen(ll s , ll idx){
    if(idx == -1){sums.push_back(s);return;}

    gen(s , idx-1);
    gen(s+water[idx] , idx-1);
}

void output(vector <ll> u){
    cout << "YES" <<'\n';
    sort(u.begin() , u.end());
    for(int i=0; i<u.size(); i++)
        cout <<u[i] <<" ";
    cout <<'\n';
}

void check(ll val , vector <ll> u){
    //cout << val << endl;
    if(val == 0) {output(u);f=1;return;}

    if(amulus[0] > val) return;

    if(amulus[0] == val && vis[0] == 0){
        u.push_back(amulus[0]);
        val = 0;
        check(0 , u);
        vis[0] = 1;
        return;
    }


    for(int i=1; i<=n1; i++)
    if(val < amulus[i] && val >= amulus[i-1] && vis[i-1] == 0){
        //cout << val <<" ";
        val -= amulus[i-1];
        //cout << val << endl;
        vis[i-1] = 1;
        u.push_back(amulus[i-1]);
        check(val , u);
    }
}

int main(){
    int T;
    cin >> T;

    while(T--){
        cin >> m >> n1 >> n2;
        for(int i=0; i<n1; i++)
            cin >> amulus[i];
        for(int i=0; i<n2; i++)
            cin >> water[i];

        amulus[n1] = INF;

        sort(amulus , amulus + n1+1);
        sums.clear();
        gen(0 , n2-1);
        sort(sums.begin() , sums.end());
        //for(int i=0; i<sums.size(); i++)
        //    cout << sums[i] <<endl;

        f = 0;
        for(int i=0; i<sums.size(); i++){
            if(i == 0 || sums[i] != sums[i-1]){
                memset(vis , 0 , sizeof vis);
                if(m - sums[i] >= 0)   check(m - sums[i] , v);
                //cout << f << endl;
                if(f) break;
            }
        }

        if(!f) cout <<"NO"<<'\n';
    }


    return 0;
}
