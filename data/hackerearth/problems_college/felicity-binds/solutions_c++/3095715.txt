#include <iostream>
using namespace std;
void merge(int a[], int l, int m , int r)
{
	int i,j,k;
	int n1 = m - l +1;
	int n2 = r - m;
	int L[n1], R[n2];
	for(i = 0; i < n1;i++)
	{
		L[i] = a[l+i];
		
	}
	for(j = 0; j < n2;j++)
	{
		R[j] = a[m+j+1];
	}
	i = 0;
	j = 0;
	k = l;
	while(i < n1 && j < n2)
	{
		if(L[i] <= R[j])
		{
			a[k] = L[i];
			i++;
		}
		else
		{
			a[k] = R[j];
			j++;
		}
		k++;
	}
	while(i < n1)
	{
		a[k] = L[i];
		i++;
		k++;
	}
	while( j < n2)
	{
		a[k] = R[j];
		j++;
		k++;
	}
}
void mergesort(int a[], int l, int r)
{
	int m;
	
	if(l < r)
	{
		m = l+ (r-l)/2;
		mergesort(a,l,m);
		mergesort(a, m+1, r);
		merge(a, l, m ,r);
	}
}
int main()
{
	int i,n,t;
	
	cin >> t;
	while(t--)
	{
		cin >> n;
		int a[n],b[n];
		for(i = 1;i <= n;i++)
		{
			cin >> a[i];
		}
		for(i = 1;i <= n;i++)
		{
			cin >> b[i];
		}
		mergesort(a,1,n);
		mergesort(b,1,n);
		long long int sum=0;
		for(i = 1;i <= n;i++)
		{
			sum += a[i] * b[i];
		}
		cout << sum << endl;
	}
    return 0;
}
