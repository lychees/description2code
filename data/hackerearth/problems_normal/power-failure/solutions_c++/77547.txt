#include <iostream>
#include <algorithm>
#include <math.h>
using namespace std;
long long int como[100001];
long long int mod=1000000007;
void composite()
{
	for(long long int i=0;i<=100000;i++)
	como[i]=1;
	como[0]=0;
	como[1]=0;
	for(long long int i=2;i<=sqrt(100000);i++)
	{
		if(como[i]==1)
			for(long long int j=i*i;j<=100000;j=j+i)
			como[j]=0;
	}
	for(long long int i=1;i<=100000;i++)
	if(como[i]==0)
	como[i]=como[i-1]+1;
	else
	como[i]=como[i-1];
}
int main() {
	composite();
	long long int t;
	cin>>t;
	while(t--)
	{
		long long int n,m,ans=1;
		cin>>n>>m;
		long long int a[n];
		for(long long int i=0;i<n;i++)
		cin>>a[i];
		sort(a,a+n);
		reverse(a,a+n);
		if(a[0]>m)
		cout<<"0"<<endl;
		else
		{
			for(long long int i=0;i<n;i++)
			{
				ans=(ans*(como[m]-como[a[i]-1]-i))%mod;
			}
			cout<<ans<<endl;
		}
	}
	// your code goes here
	return 0;
}