#include <iostream>
using namespace std;
struct node
{
	char c;
	node* parent;
	node* left;
	node* right;
	node(char c_):c(c_)
	{
		parent = left = right = NULL;
	}
};
void transverse(node *n, int& count, int C,int list[])
{
	if (count == C)
	{
		if (n->c >= 'a' && n->c <= 'z') 
		{
			++list[n->c-'a'];
		}
	}
	if (n->left)
	{
		--count;
		transverse(n->left,count,C,list);
		++count;
	}
	if (n->right)
	{
		++count;
		transverse(n->right,count,C,list);
		--count;
	}
};
int main()
{
	int T;
	cin >> T;
	for(int i = 0; i < T; ++i)
	{
		int C;
		cin >> C;
		string str;
		cin >> str;
		int N = str.size();
		node *head = new node(str[0]);
		node *next = head;
		bool leftside = true;
		for(int j = 1; j < N; ++j)
		{
			if (str[j] == '(')
			{
				leftside = true;
			}else if (str[j] == '.')
			{
				leftside = ((leftside)?false:true);
			}else if (str[j] >= 'a' && str[j] <= 'z')
			{
				if(leftside)
				{
					node *n = new node(str[j]);
					n->parent = next;
					next->left = n;
					next = n;
					leftside = false;
				}else
				{
					node *n = new node(str[j]);
					n->parent = next;
					next->right = n;
					next = n;
					leftside = true;
				}
			}else if (str[j] == ')')
			{
				next = next->parent;
				leftside = false;
			}
		}
		int list[26];
		for(int j = 0; j < 26; ++j)
		{
			list[j] = 0;
		}
		int count = 0;
		transverse(head,count,C,list);
		bool toprint = false;
		for(int j = 0; j < 26; ++j)
		{
			while(list[j] > 0)
			{
				toprint = true;
				cout << char('a'+j);
				--list[j];
			}
		}
		if (toprint == false)
		{
			cout << "Common Gandhijee!";
		}
		cout << endl;
	}
    //cout << "Hello World!" << endl;
    return 0;
}
