#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <memory.h>
#include <set>
#include <map>

using namespace std;

const int LIM = 1000000;

set<int> bad, can[155];

int main() {
  int n, k, m;
  scanf("%d%d%d", &n, &k, &m);
  for (int i = 0; i < m; ++i) {
    int x;
    scanf("%d", &x);
    bad.insert(x);
  }
  can[0].insert(1);
  int left = n, hasOne = 0;
  for (int i = 1; ; ++i) {
    if (bad.count(i)) continue;
    if (k < 100 && can[k].count(i)) continue;
    if (hasOne) {
      bool good = true;
      for (int j = 1; j <= k && j <= 20; ++j) {
        if (can[j].count(i)) {
          good = false;
          break;
        }
      }
      if (!good) continue;
    }

    printf("%d ", i);
    if (--left == 0) break;

    if (i == 1) hasOne = true;
    else {
      for (int j = 0; j < 20; ++j) {
        if (can[j].size() == 0) break;
        for (int x : can[j]) {
          if (1LL * x * i <= LIM) {
            can[j + 1].insert(x * i);
          } else {
            break;
          }
        }
      }
    }
  }
  printf("\n");
  return 0;
}

