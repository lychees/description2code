/*
 * dp on trees
 */
#include <iostream>
#include <vector>
#define pb push_back
using namespace std;

const int N = 1e5 + 10;
vector<int> g[N];
vector<int> topo;
vector<int> ways;
vector<bool> mark;

void dfs(int u) {
    mark[u] = true;
    for(int v : g[u]) {
        if(not mark[v]) dfs(v);
    }
    topo.pb(u);
}

int main() {
    int a, b, n;
    scanf("%d", &n);
    while(scanf("%d%d", &a, &b) and a + b) {
        g[a].pb(b);
    }
    mark.assign(n + 1, false); 
    dfs(1);

    ways.assign(n + 1, 0); ways[1] = 1;
    for(auto it = topo.rbegin() ; it != topo.rend(); ++it) {
        int u = *it;
        for(int v : g[u]) {
            ways[v] += ways[u];
        }
    }
    cout << ways[n] << "\n";
}
