#include<bits/stdc++.h>
using namespace std;
#define M2H 1005500
bool arr[M2H+1];
long prime[M2H];
long i,j,z=0,c;
long chk_pld(long x)
{ 
    long rev=0,rem,temp=x;
    while(x>0)
    {
              rem=x%10;
              rev=rev*10+rem;
              x=x/10;
    }
    if(temp==rev)
    return 1;
    else
    return 0;
}
int main()
{
	memset(arr,1,sizeof(arr));arr[1]=1;arr[2]=1;
	for(i=4;i<=M2H;i+=2)arr[i]=0;
   for(i=3;i<=sqrt(M2H);i+=2)
   {
   	if(arr[i]!=0)arr[i]=1;
   	for(j=i+i;j<=M2H;j+=i)arr[j]=0;
   }
   for(i=1;i<=M2H;i++)if(arr[i]==1)prime[z++]=i;
   //cout<<z<<' '<<prime[z-1]<<endl;
   int test; cin>>test;
   while(test--)
   {
   long n;cin>>n;
   for(i=1;i<z;i++)if(prime[i]>=n){c=i;break;}
   //cout<<c<<' '<<cout<<prime[c]<<endl;
   for(i=c;;i++)
   {
   	if(chk_pld(prime[i]))
   	{
   		cout<<prime[i]<<endl;break;
	}
   }
   }
} 