#include <bits/stdc++.h>
#define ll long long

using namespace std;

ll bit[2][100005];

#define MAXVAL 100005

void update(int sw, int idx, ll val)
{
    while (idx < MAXVAL) {
        bit[sw][idx] += val;
        idx += (idx & -idx);
    }
}

ll query(int sw, int idx)
{
    ll retval = 0;

    while (idx > 0) {
        retval += bit[sw][idx];
        idx -= (idx & -idx);
    }

    return retval;
}

int main()
{
    int n, qu, i, type, l, r, k, x;
    ll t1, t2, t3, t4;

    scanf("%d %d", &n, &qu);

    for (i = 1; i <= n; i++) {
        scanf("%d", &x);

        update(0, i, (ll)x * (ll)i);
        update(1, i, (ll)x);
    }

    while (qu--) {
        scanf("%d %d %d", &type, &k, &l);

        if (type == 1) {
            scanf("%d", &r);

            if (k <= l) {
                t1 = query(0, r) - query(0, l - 1);
                t2 = query(1, r) - query(1, l - 1);

                printf("%lld\n", t1 - (k * t2));
            }

            else if (k >= r) {
                t1 = query(0, r) - query(0, l - 1);
                t2 = query(1, r) - query(1, l - 1);

                printf("%lld\n", k * t2 - t1);
            }

            else {
                t1 = query(0, k - 1) - query(0, l - 1);
                t2 = query(1, k - 1) - query(1, l - 1);

                t3 = query(0, r) - query(0, k);
                t4 = query(1, r) - query(1, k);

                //cout << t1 << " " << t2 << " " << t3 << " " << t4 << endl;

                printf("%lld\n", t3 - (k * t4) + (k * t2) - t1);
            }
        }

        else {
            update(0, k, (ll)k * (ll)l);
            update(1, k, (ll)l);
        }
    }

    return 0;
}
