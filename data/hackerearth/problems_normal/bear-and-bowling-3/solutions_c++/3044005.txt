// 6 * (2^N-1) + 12 * (2^N-1 + 2^1) + 8 * (2^N-1 + 4) + 
/*

{1, 2}
{}
{1}
{2}
{1, 2}
1*2^N-1 + 2 * (2 ^N - 1 + 1)

{1, 2, 3}
{}
{1}
{2}
{3}
{1, 2}
{1, 3}
{2, 3}
{1, 2, 3}

1 * 2^N - 1 + 2 * (2 ^N - 1 + 2) + 3 * (2 ^N - 1 + 4)

{1, 2, 3, 4}
{}
{1}
{2}
{3}
{4}
{1, 2}
{1, 3}
{1, 4}
{2, 3}
{2, 4}
{3, 4}
{1, 2, 3}
{1, 2, 4}
{1, 3, 4}
{2, 3, 4}
{1, 2, 3, 4}

1 * 2^N-1 + 2 * (2^N-1 + 4) + 3 * (2 ^ N - 1 + 8) + 4 * (2 ^ N - 1 + 12)

{1, 2, 3, 4, 5}
{}
{1}
{2}
{1, 2}
{1, 3}
{1, 4}
{1, 5}
{2, 3}
{2, 4}
{2, 5}
{1, 2, 3}
{1, 2, 4}
{1, 2, 5}
{1, 3, 4}
{1, 3, 5}
{1, 4, 5}
{1, 2, 3, 4}
{1, 2, 3, 5}
{1, 2, 4, 5}
{1, 3, 4, 5}
{1, 2, 3, 4, 5}
{2, 3, 4}
{2, 3, 5}
{2, 4, 5}
{2, 3, 4, 5}


1 * 2^N-1 + 2 * (16 + 8)

*/




#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007

int main()
{
    int N;
    scanf("%d", &N);
    
    long long Arr[N + 1];
    long long Pw = 1;
    for(int i = 0; i < N; ++i) {
    	scanf("%lld", &Arr[i]);
    	if(i > 0)
    		Pw *= 2;
    	if(Pw >= MOD)
    		Pw %= MOD;
    	
    }
    
  //  cout<<"Pw => " << Pw << "\n";
    
    long long ans = 0;
    long long pp = 0;
    long long tt = 1;
    
    
    for(int i = 0; i < N - 2; ++i) {
    	tt *= 2;
    	if(tt >= MOD)
    		tt %= MOD;
    }
    
   // cout<<"tt => " << tt <<"\n";
    int cnt = 0;
    for(int i = 0; i < N; ++i) {
    	ans += (Pw + pp) * Arr[i];
    	if(ans >= MOD)
    		ans %= MOD;
    	if(i == 0) {
    		pp = tt;
    		cnt = 2;
    	} else {
    		pp = tt * cnt;
    	
    		cnt++;
    	}
    	if(pp >= MOD)
    		pp %= MOD;
    }
    
    cout<< ans << "\n";
    
    
    return 0;
}
