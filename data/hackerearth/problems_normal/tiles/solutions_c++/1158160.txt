/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-11
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256
#define right adsgasgadsg
#define free adsgasdg
 
using namespace std;

vector<vector<long long> > mult(vector<vector<long long> > v1,vector<vector<long long> > v2)
{
 vector<vector<long long> > res;
 res=v1;
 for (int i=0;i<res.size();i++)
  for (int j=0;j<res[i].size();j++)
   res[i][j]=0;
 
 for (int i=0;i<res.size();i++)
  for (int j=0;j<res.size();j++)
   for (int k=0;k<res.size();k++)
   res[i][j]=(res[i][j]+v1[i][k]*v2[k][j])%bs;
 return res;
}

vector<vector<long long> > one(long sz)
{
 vector<vector<long long> > res;
 res.resize(sz);
 for (int i=0;i<res.size();i++)
  res[i].resize(sz);
 for (int i=0;i<res.size();i++)
  for (int j=0;j<res[i].size();j++)
   res[i][j]=(i==j);
   return res;
}

vector<vector<long long> > pw(vector<vector<long long> > a,long long b)
{
 if (b==0)return one(a.size());
 if (b%2) return mult(a,pw(a,b-1));
 return pw(mult(a,a),b/2);
}

long tests,n,m,ar[10];
long tar[100];

bool bad()
{
 ar[m]=0;
 long cnt=0;
  for (int i=0;i<m+1;i++)
 {
  if (ar[i]!=2)
  {
   if (cnt%2)return true;
   cnt=0;
  }
  else ++cnt;
 }
 return false;
}

int main(){
//freopen("lattice.in","r",stdin);
//freopen("lattice.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
 cin>>m>>n;
 vector<vector<long long> > v;
 v.resize(1<<m);
 for (int i=0;i<v.size();i++)
  v[i].resize(1<<m);
 for (int i=0;i<v.size();i++)
  for (int j=0;j<v[i].size();j++)
   v[i][j]=0;
 
 long mg=1;
 for (int i=1;i<=m;i++)
  mg*=3;
  
 for (int mask=0;mask<(1<<m);mask++)
  for (int amask=0;amask<mg;amask++)
  {
   long er=0;
   long tm=amask;
   for (int j=0;j<m;j++)
   {
    ar[j]=tm%3;tm/=3;
   }
   
   for (int j=0;j<m;j++)
    tar[j]=0;
    
   if (bad())er=1;
   
   for (int i=0;i<m;i++)
   {
    if (mask&(1<<i))
     if (ar[i]==1)er=1;
    if (ar[i])
     tar[i]=1;
   }
   if (er)continue;
   long tt=0;
   for (int i=m-1;i+1;--i)
    tt=tt*2+tar[i];
   v[mask][tt]++;
  }
  
  v=pw(v,n);
/*  for (int i=0;i<v.size();i++)
  {
      for (int j=0;j<v[i].size();j++)
       cout<<v[i][j]<<" ";
      cout<<endl;
  }
  cout<<endl;*/
  long long res=0;
  for (int i=0;i<v.size();i++)
   res+=v[v.size()-1][i];
  cout<<res%bs<<endl;
}

cin.get();cin.get();
return 0;}
