#include <bits/stdc++.h>

using namespace std;
typedef vector<long long> row;
typedef vector<row>grid;

int N;
long long K;
int source;
int destination;

grid mul(const grid &a, const grid &b)
{
	grid c = grid(N,(row(N,0)));
	for(size_t i = 0; i < c.size(); i++)
		for(size_t j = 0; j < c[i].size(); j++)
			for(size_t k = 0; k < a[i].size(); k++)
				c[i][j] = (c[i][j]+(a[i][k]*b[k][j]))%1000000007;
				
	return c;
}

grid pow(const grid &m, long long n)
{
	if(n == 0 || n == 1 || n < 1)
		return m;
	grid c = pow(m,n/2);
	c = mul(c,c);
	if(n&1)
		c = mul(c,m);
	return c;
}


void solve()
{
	
	
	scanf("%d%lld%d%d", &N, &K, &source, &destination);
	
	grid mat = grid(N, row(N, 0));
	for(int i = 0; i < N; ++i) {
		for(int j = 0 ; j < N; ++j) {
			scanf("%lld", &mat[i][j]);
		}
	}
	
	grid ma = pow(mat, K);
	printf("%lld\n", ma[source][destination]);
}

int main()
{
	int T;
	scanf("%d", &T);
	while(T--)
		solve();
	return 0;
}

