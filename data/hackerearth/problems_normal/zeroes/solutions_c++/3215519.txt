#include<bits/stdc++.h>
using namespace std;
long long prime[]={2,3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397};

void primef(long long n,long long arr[]){

    for(long long i=0;i<78;i++){
        while(n%prime[i]==0){
            arr[prime[i]]++;
            n/=prime[i];
        }
    }
    if(n>2)
        arr[n]++;
}

int main(){

    long long n,arr[100005];
    scanf("%lld",&n);
    for(long long i=0;i<n;i++){
        scanf("%lld",&arr[i]);
    }
    long long fact[100005]={0};
    for(long long i=0;i<n;i++){
        primef(arr[i],fact);
    }
//    for(int i=0;i<20;i++){
//        printf("%d ",fact[i]);
//
//    }
//    printf("\n");
    long long q,val;
    scanf("%lld",&q);
    while(q--){
        scanf("%lld",&val);
        long long count1;
         long long result=1000000000;

        for(long long i=0;i<78;i++){
                count1=0;
        while(val%prime[i]==0){
            count1++;
            val/=prime[i];
        }
        if(count1>0)
        result=min(result,fact[prime[i]]/count1);
    }
    if(val>2)
        result=min(result,fact[val]);
        printf("%lld\n",result);
    }

return 0;
}
