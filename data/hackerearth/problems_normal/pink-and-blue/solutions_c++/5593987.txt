/******************
*	Subham kumar  *
	
*******************/

#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
typedef unsigned long long int ulli;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define boost ios_base::sync_with_stdio(false);cin.tie(0); cout.tie(0)
#define pb push_back
#define fl(i,a,b) for(int i=int(a);i<=int(b);i++)
#define mp make_pair
#define all(c) c.begin(),c.end()
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
vi g[3000000];
int vis[3000000];
void dfs(int st){
	for(int i=0;i<g[st].size();i++){
		int v=g[st][i];
		if(vis[v]==0){
			if(vis[st]==1){
				vis[v]=2;
			}else{
				vis[v]=1;
			}
			dfs(v);
		}
	}
}
int main(){
boost;
	int n,m;
	cin>>n>>m;
	char a[n+1];
	fl(i,1,n){
		cin>>a[i];
	}
	fl(i,0,m-1){
		int u,v;
		cin>>u>>v;

		g[u].pb(v);
		g[v].pb(u);

	}
	//cout<<"here"<<endl;

	int flag=0;
fl(i,1,n){

	if(vis[i]==0){
		//cout<<i<<endl;
		if(a[i]=='B'){
			vis[i]=1;
			dfs(i);
		}else{
			vis[i]=2;
			dfs(i);
		}
		
	}
}

lli inv=0;
fl(i,1,n){
	
	if(vis[i]==1 && a[i]=='G'){
		inv++;
	}
	if(vis[i]==2 && a[i]=='B'){
		inv++;
	}
}
lli mn=0,inv2=0;
fl(i,1,n){
	
	if(vis[i]==1 && a[i]=='B'){
		inv2++;
	}
	if(vis[i]==2 && a[i]=='G'){
		inv2++;
	}
}
mn=min(inv,inv2);


cout<<mn<<endl;
 	



return 0;
}
 	