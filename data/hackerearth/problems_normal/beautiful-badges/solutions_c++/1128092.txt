
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cctype>

#include <string>
#include <list>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <utility>
#include <algorithm>

using namespace std;

#define ST first
#define ND second
#define PB push_back
#define SZ(a) ((int)((a).size()))

#define SCI(n) scanf("%d", &n)
#define SCL(n) scanf("%lld", &n)
#define SCF(f) scanf("%f", &f)
#define SCD(d) scanf("%lf", &d)
#define SCS(s) scanf("%s", s)
#define SCW(n) while (SCI(n) != EOF && n)
#define SCR(n) for (SCI(n); n--;)
#define readline(line) fgets(line, sizeof line, stdin)
#define wreadline(line) while (readline(line), !feof(stdin))

#define CLR(a, x) memset(a, x, sizeof a)
#define CNT(i, n) for (auto i = (n);; i++)
#define CNTDOWN(i, n) for (auto i = (n);; i--)
#define REP(i, n) for (auto i = 0; i < (n); i++)
#define FOR(i, a, b) for (auto i = (a); i < (b); i++)
#define FORI(i, a, b, inc) for (auto i = (a); i < (b); i += (inc))
#define FORD(i, a, b) for (auto i = (a); i >= (b); i--)
#define FORDI(i, a, b, inc) for (auto i = (a); i >= (b); i -= (inc))
#define FORT(a, b) for (auto a = (b).begin(); a != (b).end(); a++)
#define FORTR(a, b) for (auto a = (b).rbegin(); a != (b).rend(); a++)

#define valid(i, j, n) (0 <= (i) && (i) < (n) && 0 <= (j) && (j) < (n))
#define convert(i, j, n) (((i)*(n)) + (j))
#define odd(x) ((x) & 1)
#define even(x) (!odd(x))
#define EPSILON 0.000001
#define INF 1000000000
#define INF64 ((int64)1 << 61)
#define MOD 1000000007

typedef long long int int64;
typedef unsigned char byte;
typedef pair<string, string> ss;
typedef vector<string> vs;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;

typedef vector<int64> vl;	
typedef vector<vl> vvl;
typedef pair<int64,int64> ll;
typedef vector<ll> vll;
typedef vector<vll> vvll;

typedef pair<int64, int> li;
typedef vector<li> vli;

// #define DEBUG

///////////////////////////////

// const double sqrt2 = sqrt((double)2);

#define N 1010
int blue[N], yellow[N], f[N];

int main(int argc, char const *argv[])
{
	int n, c, l;
	CLR(blue, 0);
	CLR(yellow, 0);
	SCI(n);
	REP (i, n) {
		SCI(c);SCI(l);
		if (c == 1) blue[l]++;
		else yellow[l]++;
	}
	
	queue<ii> q;
	FOR (i, 1, 1001)
		if (blue[i])
			q.push(ii(i, blue[i]));
	
	int ans = 0;
	FOR (i, 1, 1001) {
		if (yellow[i]) {
			while (!q.empty() && 2*q.front().ST*q.front().ST <= i*i)
				q.pop();
			while (!q.empty() && yellow[i] > 0) {
				if (2*i*i <= q.front().ST*q.front().ST)
					break;
				if (yellow[i] >= q.front().ND) {
					ans += q.front().ND;
					yellow[i] -= q.front().ND;
					q.pop();
				}
				else {
					ans += yellow[i];
					q.front().ND -= yellow[i];
					yellow[i] = 0;
				}
			}
			if (q.empty()) break;
		}
	}
	printf("%d\n", ans);
	return 0;
}
