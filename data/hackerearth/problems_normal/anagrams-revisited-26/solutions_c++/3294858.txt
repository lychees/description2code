#include <iostream>
#include <map>
#include <string>
#include <algorithm>
using namespace std;
int cmpfunc (const void * a, const void * b)
{
   return ( *(char*)a - *(char*)b );
}
int main()
{
    int N;
    cin>>N;
    string s;
    map<string,int> mymap;
    map<string,int>::iterator it;
    int i=0;
    for(i=0;i<N;++i){
    	cin>>s;
    	sort(s.begin(),s.end());
    	//qsort(s, s.size(), sizeof(char), cmpfunc);
    	it = mymap.find(s);
    	if(it!= mymap.end()){
    		it->second++;
    	}else {
    		mymap.insert(pair<string,int>(s,1));
    	}
    }
    int max=1;
    for(it = mymap.begin();it!=mymap.end();it++) {
    	if(max<it->second) max = it->second;
    }
    for(it = mymap.begin();it!=mymap.end();it++) {
    	if(max==it->second) {cout<<max; break;}
    }
    return 0;
}
