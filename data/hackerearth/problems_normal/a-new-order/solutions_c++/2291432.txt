#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <climits>
#include <vector>
#include <sstream>
using namespace std;

int diff(string s1,string s2) {
    int mn = min((int)s1.size(),(int)s2.size());
    for(int i = 0;i < mn;++i) {
        if(s1[i]!=s2[i]) {
            return i;
        }
    }
    return -1;
}

int main() {
    int n;
    cin>>n;
    vector<string>w(n);
    for(int i = 0;i < n;++i) {
        cin>>w[i];
    }
    int dep[256][256];
    int cnt[256],cnt1[256];
    memset(cnt, -1, sizeof(cnt));
    memset(dep, 0, sizeof(dep));
    for(int i = 0;i < n;++i) {
        for(int j = 0;j < (int)w[i].size();++j) {
            cnt[w[i][j]] = 0;
        }
    }
    for(int i = 0;i < n;++i) {
        for(int j = i+1;j < n;++j) {
            int firstDiff = diff(w[i],w[j]);
            if(firstDiff == -1) {
                continue;
            }
            if(dep[w[j][firstDiff]][w[i][firstDiff]]) continue;
         
            dep[w[j][firstDiff]][w[i][firstDiff]] = 1;
            cnt[w[j][firstDiff]]++;
        }
    }
    while (true) {
        string s;
        for(int i = 0;i < 256;++i) cnt1[i] = cnt[i];
        for(int i = 0;i < 256;++i) {
            if(cnt[i] == 0) {
                s += (char)i;
                for(int j = 0;j < 256;++j) {
                    if(dep[j][i]) --cnt1[j];
                    dep[j][i] = 0;
                }
                cnt1[i]=-1;
            }
        }
        for(int i = 0;i < 256;++i) cnt[i] = cnt1[i];
       // cout<<s<<" --> "<<cnt['c']<<"\n";
        if(s == "") {
            break;
        }
        cout<<s<<"\n";
    }
    return 0;
}