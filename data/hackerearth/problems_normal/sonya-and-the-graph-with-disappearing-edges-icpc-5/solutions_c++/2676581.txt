#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define maxn 100009

struct step{
	ll ei;
	ll time;
	step(ll e,ll t){ei= e;time = t;}
	step(){ei = time = 0;}
};

ll si[maxn];ll ei[maxn];ll tim[maxn];
ll n,m,k;
vector<pair<ll,ll> > adjlist[maxn];

bool operator<(const step &a,const step &b){
	if(a.time<b.time)return true;
	if(a.time==b.time&&a.ei<b.ei)return true;
	return false;
}


bool taken[maxn];
set<step> s;


ll dijstra(){
	if(n==1)return 0;
	fill(taken,taken+n+5,0);
	taken[1] = 1;
	for(int i=0;i<(int)adjlist[1].size();i++){
		if((adjlist[1][i].second==-1)||(adjlist[1][i].second!=-1&&adjlist[1][i].second>0)){s.insert(step(adjlist[1][i].first,1));}
	}

	while(!s.empty()){
		step tt = *s.begin();
		if(tt.ei==n)return tt.time;
		s.erase(s.begin());
		if(!taken[tt.ei]){
			taken[tt.ei] = 1;
			for(int i=0;i<(int)adjlist[tt.ei].size();i++){
				if(!taken[adjlist[tt.ei][i].first]){
					if((adjlist[tt.ei][i].second==-1)||(adjlist[tt.ei][i].second!=-1&&adjlist[tt.ei][i].second>tt.time)){s.insert(step(adjlist[tt.ei][i].first,tt.time+1));}

				}
			}
		}
	}





	return -1;//change
}














int main() {
	cin>>n>>m>>k;
	fill(tim,tim+m+5,-1);
	for(int i=1;i<=m;i++){cin>>si[i];cin>>ei[i];}
	for(int i=0;i<k;i++){
		ll t1,t2;
		cin>>t1>>t2;
		tim[t2] = t1;
	}
	for(int i=1;i<=m;i++){
		adjlist[si[i]].push_back(make_pair(ei[i],tim[i]));
		adjlist[ei[i]].push_back(make_pair(si[i],tim[i]));
	}

	cout<<dijstra()<<endl;


}
