'''
Created on 07-Jan-2016

@author: jana
'''

import sys


class Worker:
    def __init__(self, T, X, Y):
        self.T = T
        self.X = X
        self.Y = Y


def sort_key(a, b):
    if a.T == b.T:
        if a.Y == b.Y:
            return a.X < b.X
        return a.Y > b.Y
    return a.T < b.T


Worker.__lt__ = lambda self, other: sort_key(self, other)

no_of_workers, area_to_paint = [int(element)
                                for element in sys.stdin.readline().split()]
list_l = []
for i in range(no_of_workers):
    element = sys.stdin.readline().split()
    list_l.append(Worker(int(element[0]), int(element[1]), int(element[2])))

list_l.sort()
area_painted = 0
best_speed = 0
cost = 0
last_time = list_l[0].T

for work in list_l:
    area_painted += best_speed*(work.T-last_time)
    if area_painted >= area_to_paint:
        break
    if best_speed < work.Y:
        best_speed = work.Y
        cost += work.X
    last_time = work.T

print(cost)
