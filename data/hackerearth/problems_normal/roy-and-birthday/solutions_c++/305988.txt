#include <iostream>
using namespace std;
#include <cstdio>
#include <bits/stdc++.h>
#define MOD 1000000007
#define LL long long
LL fact(LL n) {
	LL f = 1;
	for(int i =1;i<=n;i++)
	{
		f = (f*i)%MOD;
	}
	return f;
}
LL modulo(LL a,LL b,LL c){
    long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%MOD;
}
int main()
{
   int t;
   cin >> t;
   string s;
   while(t--) {
   	cin >> s;
   	int n = s.size();
   	LL res = 1;
   	LL v_cnt = 0;
   	vector<int> cnt_map(26,0);
   	for(int i =0;i<n;i++) {
   		cnt_map[s[i]-'a']++;
   	}
   	LL cons = 0;
   	LL tmp = 1;
   	LL tmp2 = 1;
   	for(int i = 0;i<26;i++) {
   	
   		if ( i == 0 || i == 4  || i == 8 || i == 14 || i == 20){
   		   v_cnt += cnt_map[i];
   		   tmp2 = (tmp2*fact(cnt_map[i]))%MOD;
   		}
   		 else {
   		   tmp = (tmp*fact(cnt_map[i]))%MOD;
   		   cons += cnt_map[i];
   		 }
   	}
   	res = (res*(fact(cons)))%MOD;
   	res = (res*(modulo(tmp,MOD-2,MOD)))%MOD;
   	int available = cons+1;
   	if (available < v_cnt){
   	cout << -1 << endl;
   	continue;
   	}
   	LL res2 = fact(v_cnt)%MOD;
   	res2 = (res2*modulo(tmp2,MOD-2,MOD))%MOD;
   	res = (res*res2)%MOD;
    LL tmp3 = fact(available)%MOD;
    LL tmp4 = ((fact(v_cnt)%MOD)*fact(available-v_cnt))%MOD;
    tmp3 = (tmp3*modulo(tmp4,MOD-2,MOD))%MOD;
    res = res*tmp3%MOD;
    cout << res << endl;
   }
}
