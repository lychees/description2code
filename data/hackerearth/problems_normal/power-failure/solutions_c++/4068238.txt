/* NumeriX
   "Hard Work Beats Talent
   When Talent Doesn't Work Hard"
*/
#include <bits/stdc++.h>
#define ll long long int
#define si(x) scanf("%d",&x)
#define pii(x) printf("%d\n",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld\n",x)
#define present_set_map(container, element) (container.find(element) != container.end()) 
#define present_vec(container, element) (find(all(container),element) != container.end()) 
#define mp make_pair
#define all(x) x.begin(),x.end()
#define all_rev(x) x.rbegin(),x.rend()
#define pb push_back
#define fr first
#define se second
using namespace std;
 
ll arr[1000005];
ll p_arr[1000005];
ll inp[1000005];
 
void sieve()
{
    ll i,j;
    arr[1]=-1;
    for(i=2;i<=1000000;i++)
    {
        for(j=i*i;j<=1000000;j+=i)
            arr[j]=-1;
    }
    p_arr[0]=0;
    for(i=1;i<=1000000;i++)
    {
        if(arr[i]==0)
            p_arr[i]=p_arr[i-1];
        else if(arr[i]==-1)
            p_arr[i]=p_arr[i-1]+1;
    }
}
int main()
{
    sieve();
    ll tc,i,j=1,m,n,N,mod=1e9+7,ans,flag;
    sll(tc);
    while(tc--)
    {
        scanf("%lld %lld",&n,&m);
        flag=0;
        for(i=0;i<n;i++)
            sll(inp[i]);
        sort(inp,inp+n);
        ll ctr=0;
        ans=1;
        for(i=n-1;i>=0;i--)
        {
            if(inp[i]<=m)
            {
                if(arr[inp[i]]==-1)
                        N=p_arr[m]-p_arr[inp[i]]-ctr+1;
                else
                    N=p_arr[m]-p_arr[inp[i]]-ctr;
                ctr++;
            //printf("nCr=%lldC1\n",N);
                ans=(ans%mod*N%mod)%mod;
            }
            else
            {
                ans=0;
                break;
            }
        }
        pll(ans);
    }
    return 0;
}