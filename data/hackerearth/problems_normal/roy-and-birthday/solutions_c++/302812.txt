#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <iostream>
#include <algorithm>
#include <functional>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
using namespace std;

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;

#define PB push_back
#define MP make_pair
#define clr(a,b)	(memset(a,b,sizeof(a)))
#define rep(i,a)	for(int i=0; i<(int)a.size(); i++)

const int INF = 0x3f3f3f3f;
const double eps = 1E-8;


const LL mod = 1000000007LL;
LL p[1000010], inv[1000010], inv2[1000010];

int T;
string s;
int cnt[26];

int main()
{
	p[0] = p[1] = 1;
	for(int i=2; i<=1000002; i++)
		p[i] = (p[i-1] * i) % mod;

	inv[0] = inv2[0] = 1;
	inv[1] = inv2[1] = 1;
	for(int i=2; i<=1000002; i++)
		inv[i] = inv[mod%i] * (mod-mod/i)%mod;


	for(int i=2; i<=1000002; i++)
		inv2[i] = (inv2[i-1] * inv[i])% mod;

	cin>>T;
	while(T--)
	{
		cin>>s;
		clr(cnt, 0);
		for(int i=0; i<s.size(); i++)
			cnt[s[i]-'a' ] ++;

		int c1 = 0, c2 = 0;
		c1 += cnt['a' - 'a' ];
		c1 += cnt['e' - 'a' ];
		c1 += cnt['i' - 'a' ];
		c1 += cnt['o' - 'a' ];
		c1 += cnt['u' - 'a' ];

		c2 = s.size() - c1;

		if(c1 > c2 + 1)
			cout<<-1<<endl;
		else
		{
			LL ans = p[c2];
			for(int i=0; i<26; i++)
			{
				if(i+'a' == 'a')	continue;
				if(i+'a' == 'e')	continue;
				if(i+'a' == 'i')	continue;
				if(i+'a' == 'o')	continue;
				if(i+'a' == 'u')	continue;

				ans = ans * inv2[cnt[i] ] % mod;
			}



			ans = (ans * p[c2 + 1]) % mod;

			ans = (ans * inv2[c2 + 1 - c1]) % mod;

			ans = (ans * inv2[c1 ]) % mod;


			ans = ans * p[c1] % mod;
			ans = ans * inv2[ cnt['a' - 'a'] ] % mod;
			ans = ans * inv2[ cnt['e' - 'a'] ] % mod;
			ans = ans * inv2[ cnt['i' - 'a'] ] % mod;
			ans = ans * inv2[ cnt['o' - 'a'] ] % mod;
			ans = ans * inv2[ cnt['u' - 'a'] ] % mod;

			cout<<ans<<endl;
		}


	}




	return 0;
}
