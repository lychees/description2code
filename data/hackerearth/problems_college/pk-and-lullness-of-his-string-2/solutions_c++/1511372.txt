#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

#define MOD 1000000007



typedef long long LL ;
#define MAXN 100001
LL factr[MAXN] ;

int preprocess(){
	factr[0] = 1 ;
	factr[1] = 1 ;
	for(int i=2;i<MAXN;i++){
		factr[i] = (i*factr[i-1])%MOD ;
	}
	
}


LL invers_mod(LL a,LL pow,LL mod){
	
	if(pow ==1){
		return a%mod ;
 	}
	if(!pow)
		return 1 ;
	if(pow%2){
		return (a*invers_mod(a,pow-1,mod) )%mod ;
	}
	else{
		LL x = invers_mod(a,pow/2,mod) ;
		return (x*x)%mod ;
	}
}



LL calcomb(LL n ,LL r){
	
	LL a = factr[n] ;
	LL b = invers_mod(factr[r],MOD-2,MOD) ;
	a = (a*b)%MOD ;
	LL c = invers_mod(factr[n-r],MOD-2,MOD) ;
	
	LL ans = (a*c)%MOD ;
	return ans ;
}

int main(){
	preprocess() ;
	int test ;
	cin>>test ;
	while(test--){
		
		string s ;
		int d ;
		cin>>s>>d ;
		vector<int> v(s.size()+1,0) ;
		if(s[0]=='l')
			v[0] = 1 ;
		for(int i=1;i<s.size();i++){
			v[i] = v[i-1] ;
			if(s[i]=='l')
				v[i]++ ;
			//cout<<v[i]<<" " ;
		}
		vector<int> v1(s.size()+1,0) ;
		if(s[s.size()-1]=='l')
			v1[s.size()-1] = 1 ;
		for(int i=s.size()-2;i>=0;i--){
			v1[i] = v1[i+1] ;
			if(s[i]=='l')
				v1[i]++ ;
			//cout<<v1[i]<<" " ;
		}
		LL ans = 0 ;
 		for(int i=0;i<s.size();i++){
			if(s[i]=='u'){
				LL x = v[i] ;
				LL y = v1[i] ;
				LL lans = 0 ;
				LL rans = 0 ;
				if(x>=d/2){
					lans = calcomb(x ,d/2) ;
				}
				if(y>=d/2){
					rans = calcomb(y ,d/2) ;
				}
			//	if(lans && rans)
			//		cout<<lans<<" "<<rans<<endl ;
				ans+=(rans*lans)%MOD ;
				ans%=MOD ;
			}
		}
	//	cout<<v[3]<<" "<<v1[3]<<endl ;
		cout<<ans<<endl ;
		
	}
}


