#include<bits/stdc++.h>
using namespace std;
int arr[200][200];
int dp[101][101][501];
int n,m;
int solve(int,int,int);
int main()
{
int test;int i,j;int p;
cin>>test;int t;int k;
for(t=0;t<test;t++)
{
  cin>>n>>m>>k;
  for(i=0;i<n;i++)
  {
    for(j=0;j<m;j++)
    {
      cin>>arr[i][j];
      for(p=0;p<=k;p++)
      {
        dp[i][j][p]=-2;
      }
    }
  }
  cout<<solve(0,0,k)<<"\n";
}


return 0;
}//main

int solve(int x,int y, int k)
{
  if (x<0 || x>=n || y<0 || y>=m || k<0)
  return -1;
  else if (x==n-1 && y==m-1 && k>=arr[n-1][m-1])
  {
    return arr[n-1][m-1];
  }
  else if (dp[x][y][k]!=-2)
  return dp[x][y][k];
  else
  {
    int val1 = solve(x+1,y,k-arr[x][y]);
    dp[x][y][k]=-1;
    if (val1!=-1)
    {
      dp[x][y][k]=max(dp[x][y][k],val1+arr[x][y]);
    }
    int val2 = solve(x,y+1,k-arr[x][y]);
    if (val2!=-1)
    {
    dp[x][y][k]=max(dp[x][y][k],val2+arr[x][y]);
    }
    int val3 = solve(x+1,y+1,k-arr[x][y]);
    if (val3!=-1)
    {
      dp[x][y][k]=max(dp[x][y][k],val3+arr[x][y]);
    }
    return dp[x][y][k];
  }

}
