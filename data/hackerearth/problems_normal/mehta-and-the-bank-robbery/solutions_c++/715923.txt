#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <cmath>
#include <climits>
#include <iostream>
#include <vector>
#include <unordered_map>
#include <list>
#include <queue>
#include <algorithm>
#include <limits>
#include <bitset>
using namespace std;

//Shorthands
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<vi> vvi;
typedef long long ll;
typedef vector<ii> vii;
#define sd(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define For(i, j, k) for (int i = j; i <= k; i++)
#define Ford(i, j, k) for (int i = j; i >= k; i--)
#define sz(a) int((a).size())
#define rsz resize
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define abs(x) (((x) > 0) ? (x) : (-(x)))

//DEBUG
#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

//Constants
#define MOD 1000000007
#define INF 1e7

//Power
ll pow(ll n, int m)
{
    if(m==0)
    return 1;
    ll x=pow(n,m/2);
    if(m%2==0)
               return (x*x)%MOD;
    else
               return (((x*x)%MOD)*n)%MOD;
}

vector<bool> isvisited;


void input()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
    #endif // ONLINE_JUDGE
}

void output()
{
    #ifndef ONLINE_JUDGE
        freopen("output.txt", "w", stdout);
    #endif // ONLINE_JUDGE
}

vector<pair<ll, ll> > item;

int primes[] = {1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29} ;

ll dp[2][2005][15];

int main()
{
    ios::sync_with_stdio(false);
    int n, W;
    cin >> n >> W;
    item.resize(n + 1);
    for (int i = 1; i <= n; i++)
        cin >> item[i].first >> item[i].second;
    sort(all(item));
    int current = 0, prev = 1;
    for (int i = 1; i <= n; i++) {
        for (int prm = 0; prm  <= 10; prm++) {
            for (int j = 1; j <= W; j++) {
                ll v = item[i].first, w = item[i].second;
                ll maxv = dp[prev][j][prm];
                if (j >= w) {
                    if (prm > 0) maxv = max(maxv, primes[prm] * v + dp[prev][j - w][prm - 1]);
                    maxv = max(maxv, v + dp[prev][j - w][prm]);
                }
                dp[current][j][prm] = maxv;
            }
        }
        swap(current, prev);
    }

    cout << dp[prev][W][10] << endl;
}
