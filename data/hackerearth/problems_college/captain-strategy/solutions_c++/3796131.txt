#include<bits/stdc++.h>
using namespace std;
int a[100010],vis[100010],w=0;
int dfs(vector<vector<int> >& edge,int vertex)
{
	vis[vertex]=1;
	w+=a[vertex];
	for(auto i: edge[vertex])
	{
		if(!vis[i])
		{
			dfs(edge,i);
		}
	}
	return w;
}
int main()
{
    int n,q;
    cin>>n>>q;
    for(int i=1;i<=n;i++)
    {
    	cin>>a[i];
    }
    vector<vector<int> > edge;
    edge.resize(n+1);
    for(int i=0;i<n-1;i++)
    {
    	int a,b;
    	cin>>a>>b;
    	edge[a].push_back(b);
    //	edge[b].push_back(a);
    }
   // for(int i=1;i<=n;i++) cout<<weight[i]<<" ";
    while(q--)
    {
    	char ch;
    	cin>>ch;
    	if(ch=='Q')
    	{
    		int val;
    		cin>>val;
    		w=0;
    		for(int i=1;i<=n;i++) vis[i]=0;
    		cout<<dfs(edge,val)<<endl;
    	}
    	else
    	{
    		int a1,b;
    		cin>>a1>>b;
    		a[a1]=b;
    	}
    }
    return 0;
}
