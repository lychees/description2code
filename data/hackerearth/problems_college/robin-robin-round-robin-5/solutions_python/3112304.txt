def prepare(C,N,P):
    global waitTimes
    global ranks
    waitTimes = [0]
    ranks = list(range(0,len(P)))
    for i in range(1,len(P)):
        waitTimes.append(waitTimes[i-1]+min(P[i-1],C))
 
    pSorted = [(i,(N*((d-1)//C))+i) for (i,d) in enumerate(P)]
    
    pSorted.sort(key = lambda p:p[1])
 
    order = 1
    for i,_ in pSorted:
        ranks[i] = order  
        order += 1
 
 
def readInts():
    return map(int,raw_input().split())
 
(N,C) = readInts()
P = readInts()
prepare(C,N,P)
Q = readInts()[0]
for _ in range(0,Q):
    (M,D) = readInts()
    if M==1:
        print(waitTimes[D-1])
    else:
        print(ranks[D-1])