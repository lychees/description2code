#include<bits/stdc++.h>
using namespace std;
#define bucket 320
static char str[200001];
static bool is_palin[320][320];
int bucket_start(int ind){
	return (ind*bucket);
}
int bucket_end(int ind){
	return ((ind+1)*bucket-1);
}
int bucket_no(int ind){
	return (ind/bucket);
}
int main(){
	memset(is_palin,false,sizeof(is_palin));
	int n,q;
	scanf("%d %d",&n,&q);
	scanf("%s",str);
	for(int i=0;i<320;i++){
		for(int j=0;j<320;j++){
			int s = bucket_start(i);
			int e = bucket_end(j);
			bool f = true;
			for(int k=s;k<s+bucket;k++){
				if(str[s]!=str[e]){
					f = false;
					break;
				}
			}
			is_palin[i][j] = f;
		}
	}
	while(q--){
		int ty;
		scanf("%d",&ty);
		if(ty==0){
			int ind;
			char c;
			scanf("%d %c",&ind,&c);
			ind--;
			str[ind] = c;
			int i = bucket_no(ind);
			for(int j=0;j<320;j++){
				int s = bucket_start(i);
				int e = bucket_end(j);
				bool f = true;
				for(int k=s;k<s+bucket;k++){
					if(str[s]!=str[e]){
						f = false;
						break;
					}
				}
				is_palin[i][j] = is_palin[j][i] = f;
		}
		} else {
			int l,r;
			scanf("%d %d",&l,&r);
			l--,r--;
			if((r-l+1)<=bucket){
				bool f = true;
				for(int i=l;i<=r;i++){
					if(str[i]!=str[r-i+l]){
						f = false;
						break;
					}
				}
				puts(f?"Yes":"No");
			} else {
				int s = bucket_no(l);
				int e = bucket_no(r);
				bool f = true;
				for(int i=l;i<=bucket_end(s);i++){
					if(str[i]!=str[r-i+l]){
						f=false;
						break;
					}
				}
				s++;
				e--;
				while(s<=e){
					if(is_palin[s][e])
						s++,e--;
					else {
						f=false;
						break;
					}
				}
//assert(false);
				puts(f?"Yes":"No");
			}
		}
	}
	return 0;
}