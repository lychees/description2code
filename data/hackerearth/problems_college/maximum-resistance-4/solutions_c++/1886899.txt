#include <string>
#include <cmath>
#include <fstream>
#include <iostream>
#include <sstream>
#include <list>
#include <algorithm>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <numeric>
#include <bitset>
#include <deque>
//#include <random>
#include <string.h>
#include <stdlib.h>
#include <vector>
#include <unordered_map>
#include <thread>

const long long LINF = (1e18);
const int INF = (1<<28);
const int sINF = (1<<23);
const int MOD = 1000000007;
const double EPS = 1e-6;

using namespace std;

class CircuitsConstruction {

public:

    int maximizeResistance(string circuit, vector <int> conductors) {
        stack<int> s;
        for (int i=(int)circuit.size()-1; i>=0; --i) {
            if (circuit[i] == 'X') {
                s.push(1);
            } else {
                int p = s.top(); s.pop();
                int q = s.top(); s.pop();
                if (circuit[i] == 'A')
                    s.push(p+q);
                else
                    s.push(max(p, q));
            }
        }
        int c = s.top();
        sort(conductors.rbegin(), conductors.rend());
        return accumulate(conductors.begin(), conductors.begin()+c, 0);
    }




};




int main() {
	int t=0;
	cin>>t;
	while(t--)
	{
	string s;
	cin>>s;
	size_t n = std::count(s.begin(), s.end(), 'X');
	vector<int>v(n+1);
	int i=1;
while(i<=n)	
{
	cin>>v[i++];
	
	
}
CircuitsConstruction a;
cout<<a.maximizeResistance(s,v)<<endl;


	}





}