#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int t;
int main(){
	scanf("%d", &t);
	while (t--){
		int n;
		scanf("%d", &n);
		vector<int> v;  //plus
		vector<int> vv;  //minus
		v.clear();
		vv.clear();
		int unit = n / 2;
		for (int i = 0; i < n; i++){
			int a;
			scanf("%d", &a);
			if (i < unit){
				v.push_back(a);
			}
			else{
				vv.push_back(a);
			}
		}
		int a = v.size();
		map<long long int, int> m[2];
		m[0].clear();
		m[1].clear();
		long long int ans = 0;
		for (int i = 1; i < (1 << a); i++){
			long long int sum = 0;
			bool ok = 0;
			for (int j = 0; j < v.size(); j++){
				if ((i >> j) & 1){
					sum += v[j];
					if (v[j]>0){
						ok = true;
					}
				}
				
			}
			ok=1;
			if (ok&&sum == 0LL){
				ans++;
			}
			if (m[ok].count(sum)){
				m[ok][sum]++;
			}
			else{
				m[ok][sum] = 1;
			}
		}
		a = vv.size();
		for (int i = 1; i < (1 << a); i++){
			long long int sum = 0;
			bool ok = 0;
			for (int j = 0; j < vv.size(); j++){
				if ((i >> j) & 1){
					sum += vv[j];
					if (vv[j] > 0){
						ok = true;
					}
				}
			}
			ok=1;
			if (sum == 0LL && ok){
				ans++;
			}
			sum = 0 - sum;
			for (int j = 0; j < 2; j++){
				if ((j | ok)){
					if (m[j].count(sum)){
						ans += m[j][sum];
					}
				}
			}
		}
		printf("%lld\n", ans);
	}
	return 0;
}