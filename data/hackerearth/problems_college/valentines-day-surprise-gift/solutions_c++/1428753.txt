#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#define PII 3.14159265359
using namespace std;
#define MOD 1000000007
long long int r[31];
long long int ppow(long long int i, long long int j){
	long long int res = 1;
	while (j){
		if (j % 2LL){
			res *= i;
			res %= MOD;
		}
		i *= i;
		i %= MOD;
		j >>= 1LL;
	}
	return res;
}
#define MAX 100001
bool use[MAX];
vector<int> prime;
void d(){
	prime.push_back(2);
	for (int i = 3; i<MAX; i += 2){
		if (use[i] == false){
			prime.push_back(i);
			for (int j = i * 2; j<MAX; j += i){
				use[j] = true;
			}
		}
	}
}
int main(){
	double ans = pow(2.0, 4.0);
	d();
	r[0] = r[1] = r[2] = 1;
	for (int i = 3; i <=10; i++){
		long long int a = 1LL;
		for (int i1 = 0; i1 < prime.size() && prime[i1] <= i; i1++){
			if (prime[i1] % 2){
				a *= prime[i1];
			}
		}
		r[i] = a;
	}
	for (int i = 11; i <= 30; i++){
		int n4 = ceil((double)(i) / 4.0);
		int n5 = ceil((double)(i) / 5.0);
		int n10 = ceil((double)(i) / 10.0);
		r[i] = r[n5] * r[n10];
		r[i] %= MOD;
		r[i] *= ppow(2, n4);
		r[i] %= MOD;
	}
	int t;
	scanf("%d", &t);
	while (t--){
		int n;
		scanf("%d", &n);
		int maxt = r[n];
		maxt*=5;
		long long int maxtt=0;
		for (int i = r[n]; i <= maxt; i+=r[n]){
			for(int j=r[n];j<=maxt;j+=r[n]){
				if(__gcd(i,j)==r[n]){
			//		cout<<i<<" "<<j<<endl;
					maxtt=max(maxtt,ppow(i,j));
					maxtt=max(maxtt,ppow(j,i));
				}
			}
		}
		printf("%lld\n",maxtt);
	}
	return 0;
}