#include<iostream>
#include<algorithm>
#include<set>
#include<cstdio>
#include<cstdlib>
#include<map>
#include<list>
#include<vector>
#include<iterator>
#include<stack>
#include<deque>
#include<queue>
#include<fstream>
#include<cmath>
#include<climits>
#include<cstring>
#include<string>
#include<iomanip>
using namespace std;
#define ll long long
#define ull unsigned ll
#define f(i,n) for(int i=0;i<n;i++)
#define fr(i,s,e) for(int i=s;i<e;i++)
#define mh(a, d) make_heap(a, a+d)
#define pushh(a, d) push_heap(a, a+d)
#define poph(a, d) pop_heap(a, a+d)
#define sh(a, d) sort(a, a+d)
#define mhm(a, d) make_heap(a, a+d, MIN_HEAP)
#define pushhm(a, d) push_heap(a, a+d, MIN_HEAP)
#define pophm(a, d) pop_heap(a, a+d, MIN_HEAP)
#define shm(a, d) sort(a, a+d, MIN_HEAP)

ll fact(ll n) { ll f=1; fr(i, 1, n+1) f*=i; return f; }
ll factmod(ll n, ll m) { ll f=1; fr(i, 1, n+1) { f*=i; f%=m; } return f; }
ll gcd(ll a, ll b) { ll tem; while(b) { tem=b; b=a%b; a=tem; } return a; }
ll power(ll a, ll n) { ll res=1, cur=a; while(n) { if(n&1) res*=cur; cur*=cur; n>>=1; } return res; }
ll powermod(ll a, ll n, ll mod) { ll res=1, cur=a; while(n) { if(n&1) { res*=cur; res%=mod; } cur*=cur; n>>=1; cur%=mod; } return res; }

void scan(int &n) { register char ch; n=0; for(ch=getchar();ch>'9'||ch<'0';ch=getchar()); for(;ch<='9'&&ch>='0';ch=getchar()) n=(n<<3)+(n<<1)+ch-'0';}
void scan(ll &n) { register char ch; n=0; for(ch=getchar();ch>'9'||ch<'0';ch=getchar()); for(;ch<='9'&&ch>='0';ch=getchar()) n=(n<<3)+(n<<1)+ch-'0';}
void scan(ull &n) { register char ch; n=0; for(ch=getchar();ch>'9'||ch<'0';ch=getchar()); for(;ch<='9'&&ch>='0';ch=getchar()) n=(n<<3)+(n<<1)+ch-'0';}
void print(int t) { printf("%d", t); }
void print(ll t) { printf("%lld", t); }
void print(ull t) { printf("%llu", t); }
void println(int t) { printf("%d\n", t); }
void println(ll t) { printf("%lld\n", t); }
void println(ull t) { printf("%llu\n", t); }
/*
void redirect() { freopen("in.in", "r", stdin); freopen("out.out", "w", stdout); }
void close() { fclose(stdin); fclose(stdout); }
*/


int main() {
	bool MIN_HEAP(int, int );
 	ios::sync_with_stdio(false);
	long long t;
	ll n, tem;
	cin>>t;
	while(t--) {
		cin>>n;
		tem = 1;
		while(tem<=n) 
			tem<<=1;
		tem>>=1;
		n -= tem;
		n <<= 1;
		n += 1;
		cout<<n<<endl;
	}
				
	return 0;
}

bool MIN_HEAP(int one, int two) { return one>two; }
