#include "bits/stdc++.h"
using namespace std;
const int N = 1505;
const int mod = 1e9 + 7;
int add(int a , int b){
    int res = a + b;
    if(res >= mod){
        return res - mod;
    }
    return res;
}
int mult(int a , int b){
    long long res = a;
    res *= b;
    if(res >= mod){
        return res % mod;
    }
    return res;
}
int n;
int arr[N];
vector < int > v[N];
int x , y;
int q;
int k;
bool mark[N][N];
map < int , int > ans;
int cur;
int dfs(int node , int parent){
    int ret = 1;
    for(int x : v[node]){
        if(x != parent){
            if(arr[x] > arr[cur]){
                int val = dfs(x , node);
                ret = mult(ret , add(val , 1));
            }
            else if(arr[x] == arr[cur] && (!mark[cur][x])){
                int val = dfs(x , node);
                ret = mult(ret , add(val , 1));
                mark[x][cur] = 1;
                mark[cur][x] = 1;
            }
        }
    }
    return ret;
}
int main(){
    scanf("%d" , &n);
    for(int i = 1 ; i <= n ; ++i){
        scanf("%d" , arr + i);
    }
    for(int i = 1 ; i < n ; ++i){
        scanf("%d %d" , &x , &y);
        v[x].emplace_back(y);
        v[y].emplace_back(x);
    }
    for(int i = 1 ; i <= n ; ++i){
        cur = i;
        ans[arr[i]] = add(ans[arr[i]] , dfs(i , -1));
    }
    scanf("%d" , &q);
    while(q--){
        scanf("%d" , &k);
        printf("%d\n" , ans[k]);
    }
}