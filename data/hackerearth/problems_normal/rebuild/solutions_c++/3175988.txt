//Done by: gohan95

#include<bits/stdc++.h>

using namespace std;

//Taken from "competitive programming" by Steven Halim
// Shortcuts for "common" data types in contests
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)

#define s(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sz size
#define set0(a) memset(a, 0, sizeof(a))
#define setdp(a) memset(a, -1, sizeof(a))
#define setinf(a) memset(a, 127, sizeof(a))
#define INF 2000000000
#define MOD 1000000007

int in[100005], p[100005];
vector <pair <int, pii> > v;

int find_par(int x)
{
    if (p[x] != x)
        p[x] = find_par(p[x]);

    return p[x];
}

int main()
{
    int t, n, m, x, y, z, t1, t2;
    ll cost;

    s(t);

    while (t--) {
        s(n);
        s(m);

        v.clear();
        set0(in);

        REP (i, 1, m) {
            s(x);
            s(y);
            s(z);

            v.pb(mp(z, mp(n - min(x, y), n - max(x, y))));
        }

        sort(v.begin(), v.end());

        REP (i, 0, n)
            p[i] = i;

        cost = 0;
        REP (i, 0, m - 1) {
            t1 = find_par(v[i].se.fi);
            t2 = find_par(v[i].se.se);

            if (t1 != t2) {
                p[t1] = t2;

                cost += v[i].fi;

                in[v[i].se.fi]++;
                in[v[i].se.se]++;
            }
        }

        cout << cost << endl;

        for (int i = n - 1; i >= 0; i--)
            printf("%d ", in[i]);
        cout << endl;
    }

    return 0;
}
