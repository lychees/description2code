#include <iostream>
using namespace std;
#include <stdio.h>
#define SIZE 1001
int map[SIZE][SIZE] = { { -1 } };
int visited[SIZE][SIZE] = { {0} };
int N = 0, M = 0;
int Ans=0;
int isValid(int y, int x)
{
	return (x > 0 && x<=M && y > 0 && y<=N);
}
void recursion(int x, int y)
{
	int dy[4] = { 1,  0, -1, 0};
	int dx[4] = { 0,  1,  0,-1 };
	visited[x][y] = 1;
	if(map[x][y]==1)
	{
	    Ans=Ans-1;
	}
	for (int i = 0; i < 4; i++)
	{
		int newX = y + dx[i];
		int newY = x + dy[i];
		if (isValid(newY, newX) && map[newY][newX] == 1 && visited[newY][newX] == 0)
		{
			visited[newY][newX] = 1;
			recursion(newY, newX);
			map[newY][newX] = 99;
			visited[newY][newX] = 0;
		}
	}
  visited[x][y] = 0;
   map[x][y]=99;
}
int main()
{
		int Q=0;
		N=0;M=0;Ans=0;
		scanf("%d %d %d\n", &N, &M,&Q);
		//printf("%d %d %d\n", N, M,Q);
		for (int j = 1; j<=N; j++)
		{
			for (int i = 1; i<=M; i++)
			{
				scanf("%d ", &map[j][i]);
				visited[j][i]=0;
				if(map[j][i]==1)
				    Ans=Ans+1;
			}
		}
		
		for (int i = 0; i<Q; i++)
		{
			int x=0,y=0;
			scanf("%d %d\n",&x,&y);
			//printf("%d %d\n",x,y);
			int count=0;
			if (map[x][y] == 1)
			{
				recursion(x, y);
			}

			printf("%d\n", Ans);
		}

	return 0;
}
