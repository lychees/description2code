#include <bits/stdc++.h>
using namespace std;
void srch(struct node *);
struct node{
	struct node* children[26]={NULL};
	int weight = 0;
}*root = NULL,*temp,*temp2;
int ans=0;
int main() {
	int n,q,i,j,w,l,test,t=1;
	char c,last;
	string str;
	map <string,int> m;
	scanf("%d %d\n",&n,&q);
	root = (struct node *)malloc(sizeof(struct node));
	for(i = 0; i<n; i++)
	{
		temp = root;
		scanf("%c",&c);
		while(c!=' ')
		{
			//printf("c is %c\n",c);
			if(temp->children[c-97] == NULL)
			{
				temp2 = (struct node *)malloc(sizeof(struct node));
				temp->children[c-97] = temp2;
			}
			temp = temp->children[c-97];
			scanf("%c",&c);
		}
		scanf("%d\n",&w);
		//printf("weight is %d\n",w);
		temp->weight = w;
	}
	temp = root;
	for(i = 0; i<q; i++)
	{
		str="";
		temp = root;
		test= 0;
		ans = 0;
		scanf("%c",&c);
		while(c!='\n' && t>0)
		{
			str+=c;
			if(test == 0)
			{
				if(temp->children[c-97] == NULL)
					test = 1;
				else
				{
					temp = temp->children[c-97];
				}
			}
			t=scanf("%c",&c);
		}
		if(test == 1)
			printf("-1\n");
		else
		{
			if(m.find(str) == m.end())
			{
				srch(temp);
				m[str] = ans;
				printf("%d\n",ans);
			}
			else
			{
				printf("%d\n",m[str]);
			//	printf("hi");
			}		
		}
	}
	return 0;
}
void srch(struct node * temp3)
{
	int i;
	if(temp3->weight!=0)
		ans = max(ans,temp3->weight);
	else
	{
		for(i = 0; i<26; i++)
		{
			if(temp3->children[i]!=NULL)
			{
				//printf("i is %d\n",i);
				srch(temp3->children[i]);
			}	
		}
	}
}