#include <bits/stdc++.h>
using namespace std;

void DFS(long int i,list<long int> *v)
{
	cout<<i<<" ";
//	vis[i]=1;
	list<long int>::iterator it;
	it=v[i].begin();
	while(it!=v[i].end())
	{
//		if(vis[*it]==-1)
//		{
			DFS(*it,v);
//		}
		it++;
	}
}
int main()
{
	long int t;
	cin>>t;
	while(t--)
	{
		list<long int> *v=new list<long int> [100001];
		long int n,i=0,a,b,c;
		cin>>n;
		while(i<n)
		{
			cin>>a>>b>>c;
			if(b!=0)
			{
				v[a].push_back(b);
			}
			if(c!=0)
			{
				v[a].push_back(c);
			}
			i++;
		}
//		long int vis[n];
//		i=0;
//		while(i<n)
//		{
//			vis[i]=-1;
//			i++;
//		}
		i=1;
		DFS(1,v);
//		while(i<100001)
//		{
//			v[i].clear();
//			i++;
//		}
		cout<<endl;
	}
}
