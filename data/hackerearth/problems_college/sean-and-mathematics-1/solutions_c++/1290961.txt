/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-9
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512
#define right adsgasgadsg
#define free adsgasdg
 
using namespace std;

long tests;
long ar[100];
long n;
vector<long long> v1,v2;
vector<pair<long long, long long> > tv1,tv2;
long q;
long long ans;

void generate1(long long s1,long ps)
{
 if (ps==q){v1.push_back(s1);return;}
 generate1(s1+ar[ps],ps+1);
 generate1(s1,ps+1);
}

void generate2(long long s1,long ps)
{
// cout<<"^^"<<s1<<" "<<ps<<endl;
 if (ps==n){v2.push_back(s1);return;}
 //cout<<s1<<"  "<<ps<<endl;
 generate2(s1+ar[ps],ps+1);
 generate2(s1,ps+1);
}

vector<pair<long long, long long> > comp(vector<long long> v)
{
 vector<pair<long long, long long> > res;
 long cnt=0;
 for (int i=0;i<v.size();i++)
 {
  if (i>0&&v[i]!=v[i-1])
  {
   res.push_back(make_pair(v[i-1],cnt));
   cnt=1;
  }
  else ++cnt;
 }
 res.push_back(make_pair(v[v.size()-1],cnt));
 return res;
}

int main(){
//freopen("alter.in","r",stdin);
//freopen("alter.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
 cin>>n;
 for (int i=0;i<n;i++)
  cin>>ar[i];
 v1.clear();
 v2.clear();
 q=n/2;
// cout<<"%"<<q<<endl;
 generate1(0,0);
 generate2(0,q);   
 sort(v1.begin(),v1.end());
 sort(v2.begin(),v2.end());
 tv1=comp(v1);
 tv2=comp(v2);
 
 for (int i=0;i<tv2.size();i++)
  tv2[i].first*=-1;
 ans=0;
 sort(tv2.begin(),tv2.end());
 long p=0;
 for (int i=0;i<tv1.size();i++)
 {
  while (p<tv2.size()&&tv2[p].first<tv1[i].first) 
   ++p;
  if (p<tv2.size()&&tv2[p].first==tv1[i].first)
   ans+=tv1[i].second*tv2[p].second;
 }
/* for (int i=0;i<tv1.size();i++)
 {
  cout<<tv1[i].first<<"  "<<tv1[i].second<<" ";
 }
 cout<<endl;
 for (int i=0;i<tv2.size();i++)
 {
  cout<<tv2[i].first<<"  "<<tv2[i].second<<" ";
 }
 cout<<endl;
 */
 cout<<ans-1<<endl;
}

cin.get();cin.get();
return 0;}
