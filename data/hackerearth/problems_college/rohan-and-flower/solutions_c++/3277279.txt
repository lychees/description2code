/***********************

Shubham Singhal

Codechef - torque
Hackerearth - torque
Spoj - torque
Hackerrank - torquecode
Codeforces - torquecode
***********************/
# include <bits/stdc++.h>
# define MOD 1000000007
# define gc getchar_unlocked
# define LL long long
# define L long
# define pb push_back
# define pINF 999999
# define nINF -999999
using namespace std;
template<class T>
void scanint(T &x)
{
    register T c = gc();
    x = 0;
    T neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
 L b[20005];
LL counter=0,k;

void combinationUtil( int n, int r, int index, L data[], int i)
{

    if (index == r)
    {
    	L product=1;
        for (int j=0; j<r; j++)
        {
        	product*=data[j];
        }
        if(product%k==0)
          counter++;
        return;
    }
 
    if (i >= n)
        return;
 
    data[index] = b[i];
    combinationUtil(n, r, index+1, data, i+1);
 
    combinationUtil( n, r, index, data, i+1);
}
void printCombination(int n, int r)
{
	L data[3];
    combinationUtil(n, r, 0, data, 0);
}
int main()
{
    int n;
    scanint(n);
   // int k;
    scanint(k);
    
    if(n>=1000){
    	L bb[n];
    int sz=0;
    for(int i=0;i<n;i++)
    {
        scanint(bb[i]);
        /*if(bb%k==0)
        {
        	counter+=;
        }
        else
        {
        	b[sz]=bb;
        	sz++;
        }*/
    }
    sort(bb,bb+n);
    for(int i=n-1;i>=0;i--)
    {
        //scanint(bb[i]);
        if(bb[i]%k==0)
        {
        	counter+=(i)*(i-1)/2;
        }
        else
        {
        	b[sz]=bb[i];
        	sz++;
        }
    }
    int r = 3;
    printCombination(sz, r);
    cout<<counter;}
    else
    {
    	for(int i=0;i<n;i++)
    {
        scanint(b[i]);
        /*if(bb%k==0)
        {
        	counter+=;
        }
        else
        {
        	b[sz]=bb;
        	sz++;
        }*/
    }
    //sort(bb,bb+n);
    /*for(int i=n-1;i>=0;i--)
    {
        //scanint(bb[i]);
        if(bb[i]%k==0)
        {
        	counter+=(i)*(i-1)/2;
        }
        else
        {
        	b[sz]=bb[i];
        	sz++;
        }
    }*/
    int r = 3;
    printCombination(n, r);
    cout<<counter;
    }
    return 0;
}
