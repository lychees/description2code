#include<bits/stdc++.h>

using namespace std;

typedef long long ll;

const int max_k= 1100;
const int max_num= 3e5;
const ll mod= 1e9+7;


ll n, m, fact[max_num], inv[max_num], x[max_k];

ll power(ll a, ll b)
{
    if(b==0)
    return 1;

    ll c= power((a*a)%mod, (b>>1))%mod;
    if(b&1)
    {
        c= (c*a)%mod;
    }

    return c;
}

void precompute()
{
    ll i, j;

    fact[0]= 1;

    inv[0]= 1;

    for(i=1;i<max_num;++i)
    {
        fact[i]= (i*fact[i-1])%mod;

        inv[i]= power(fact[i], mod-2);
    }
}



int main()
{
    ll t, i, j, sum, k, m, num, dino, ans;

    precompute();

    scanf("%lld", &t);

    while(t--)
    {
        scanf("%lld %lld", &k, &m);

        sum= 0;

        for(i=0;i<k;++i)
        {
            scanf("%lld", &x[i]);
            sum+= x[i];
        }

        num= m-sum+k-1;

        dino= k-1;

        if(num<dino)
        {
            printf("0\n");
        }
        else
        {
            ans= ( ( (fact[num]*inv[dino])%mod) *inv[num-dino])%mod;
            printf("%lld\n", ans);
        }
    }

    return 0;
}
