#include<iostream>
#include<string>
#include <math.h>
using namespace std;
class palindrome
{
    string m,n;
    long long int ans,mlen,nlen;
    public:
        palindrome()
        {
            ans=0;
            cin>>m>>n;
            mlen=m.length();
            nlen=n.length();
            if(check_validity())
            {//cout<<"valid";
                concat_beg(0,mlen-1);
                concat_end(0,mlen-1);
                for(long long int i=1;i<=(mlen)/2;i++)
                {
                    if(m[i-1] == m[mlen-i])
                    {
                        concat_beg(i,mlen-i-1);
                        if(i <= mlen-i-1)
                            concat_end(i,mlen-i-1);
                    }
                    else
                        break;
                }
            }
            print_ans();
        }
        void concat_beg(int st,int en)
        {
            string str="";
            for(long long int i=0;i<nlen;i++)
                str.push_back(n[i]);
            if(st<=en)
                for(long long int i=st;i<=en;i++)
                    str.push_back(m[i]);
            if(check_pal(str))
            {
                ans++;
               // cout<<"\n palindrome : "<<str <<" at ind i="<<st<<" to end = "<<en;
            }
        }
        void concat_end(int st,int en)
        {
            string str="";
            if(st<=en)
                for(long long int i=st;i<=en;i++)
                    str.push_back(m[i]);
            for(long long int i=0;i<nlen;i++)
                str.push_back(n[i]);
            if(check_pal(str))
            {
                ans++;
                //cout<<"\n palindrome : "<<str;
            }
        }
        bool check_pal(string str)
        {
            int len=str.length();
            for(long long int i=0;i<len/2;i++)
                if(str[i] != str[len-1-i])
                    return false;
            return true;
        }
        bool check_validity()
        {
            int arr[26]={0};
            bool flag=true;
            for(long long int i=0;i<mlen;i++)
                arr[m[i]-97]++;
            for(long long int i=0;i<nlen;i++)
                arr[n[i]-97]++;
            for(int i=0;i<26;i++)
            {
                if(arr[i]%2 == 1 && flag)
                    flag=false;
                else if(arr[i]%2 == 1)
                    return false;
            }
            return true;
        }
        void print_ans()
        {
            cout<<ans<<"\n";
        }

};
int main()
{
    long long int notc;
    cin>>notc;
    while(notc--)
    {
        palindrome obj;
    }
}
