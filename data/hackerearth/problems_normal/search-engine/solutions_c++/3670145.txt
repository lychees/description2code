#include <bits/stdc++.h>

using namespace std;

struct trie{
	trie *next[26];
	int priority;
};

void insert(trie *root, string s, int priority){
	for(int i=0 ; i<s.size() ; i++){
		int index = s[i] - 'a';
		if(root->next[index] == NULL){
			root->next[index] = (trie *)malloc(sizeof(trie));
			root->next[index]->priority = 0;
			for(int j=0 ; j<26 ; j++)
				root->next[index]->next[j] = NULL;
		}
		root = root->next[index];
		root->priority = max(root->priority, priority);
	}
}

int search(trie *root, string s){
	for(int i=0 ; i<s.size() ; i++){
		int index = s[i] - 'a';
		if(root->next[index] == NULL)
			return -1;
		root = root->next[index];
	}
	return root->priority;
}

int main(){
	ios_base::sync_with_stdio(false);
	int n, q;
	cin>>n>>q;

	trie *root = (trie *)malloc(sizeof(trie));
	root->priority = 0;
	for(int i=0 ; i<26 ; i++)
		root->next[i] = NULL;

	for(int i=0 ; i<n ; i++){
		string s;
		int priority;
		cin>>s>>priority;
		insert(root, s, priority);
	}

	for(int i=0 ; i<q ; i++){
		string s;
		cin>>s;

		cout<<search(root, s)<<"\n";
	}

	return 0;
}