#include<bits/stdc++.h>

using namespace std;

#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 0x3f3f3f3f
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()

int n;
int a[1255][1255],b[1255][1255];
int sdr[1255],sdw[1255];
int tdr[1255],tdw[1255];
int vis[1255];

void go_s(int s,int d[1255],int f)
{
    int i;
    mset(vis,0);
    for(i=0;i<n;i++)
        d[i] = INF;
    priority_queue < pii > pq;
    d[s] = 0;
    pq.push(mp(0,s));
    while(!pq.empty())
    {
        pii cur = pq.top();
        pq.pop();
        int u = cur.ss;
        if(vis[u])
            continue;
        for(i=0;i<n;i++)
        {
            int v = i;
            if(i == u)
                continue;
            if(vis[v])
                continue;
            if(!f)
            {
                if(d[u] + a[u][v] < d[v])
                {
                    d[v] = d[u] + a[u][v];
                    pq.push(mp(-d[v],v));
                }
            }
            else
            {
                if(d[u] + b[u][v] < d[v])
                {
                    d[v] = d[u] + b[u][v];
                    pq.push(mp(-d[v],v));
                }
            }
        }
        vis[u] = 1;
    }
}

void go_t(int s,int d[1255],int f)
{
    int i;
    mset(vis,0);
    for(i=0;i<n;i++)
        d[i] = INF;
    priority_queue < pii > pq;
    d[s] = 0;
    pq.push(mp(0,s));
    while(!pq.empty())
    {
        pii cur = pq.top();
        pq.pop();
        int u = cur.ss;
        if(vis[u])
            continue;
        for(i=0;i<n;i++)
        {
            int v = i;
            if(i == u)
                continue;
            if(vis[v])
                continue;
            if(!f)
            {
                if(d[u] + a[v][u] < d[v])
                {
                    d[v] = d[u] + a[v][u];
                    pq.push(mp(-d[v],v));
                }
            }
            else
            {
                if(d[u] + b[v][u] < d[v])
                {
                    d[v] = d[u] + b[v][u];
                    pq.push(mp(-d[v],v));
                }
            }
        }
        vis[u] = 1;
    }
}

int main()
{
    int i,j;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    int s,t;
    scanf("%d%d",&s,&t);
    s--,t--;

    go_s(s,sdr,0);
    go_s(s,sdw,1);
    go_t(t,tdr,0);
    go_t(t,tdw,1);

    int ans = INF;

    for(i=0;i<n;i++)
    {
        if(i == s || i == t)
            continue;
        ans = min(ans,min(sdr[i] + tdw[i],sdw[i] + tdr[i]));
    }
    printf("%d\n",ans);
    return 0;
}
