#include <iostream>
#include<vector>
#include<math.h>
#include<algorithm>
using namespace std;

int main()
{
    int N,M,K;
    cin>>N>>M>>K;
    long double dx,dy;
    vector<pair<long double,long double> > Biker,Bikes;
    for(int i=0;i<N;i++)
    {
    	cin>>dx>>dy;
    	Biker.push_back(make_pair(dx,dy));
    }
    for(int i=0;i<M;i++)
    {
    	cin>>dx>>dy;
    	Bikes.push_back(make_pair(dx,dy));
    }
    vector<pair<long double, int> > dist;
    for(int i=0;i<N;i++)
    {
    	for(int j=0;j<M;j++)
    	{
    		long double r = (Biker[i].first-Bikes[j].first)*(Biker[i].first-Bikes[j].first)+(Biker[i].second-Bikes[j].second)*(Biker[i].second-Bikes[j].second);
    		dist.push_back(make_pair(r,j));
    	//	cout<<r<<" ";
    	}
    }
    sort(dist.begin(),dist.end());
    int mm[M];
    for(int i=0;i<M;i++)mm[i]=0;
    long double res=0;
    //cout<<"\n";
    for(int i=0;i<dist.size()&&K>0;i++)
    {
    //	cout<<dist[i].first<<" "<<dist[i].second<<" ";
    	if(mm[dist[i].second]==0)
    	{
    		
    		mm[dist[i].second]=1;
    		res=dist[i].first;
    		K--;
    	}
    }
    cout<<res<<"\n";
    return 0;
}
