#include <bits/stdc++.h>
using namespace std;
const int MAX = 1000000 + 7;
int parent[MAX];
int a[MAX];
int b[MAX];
string st[MAX];
int N;
int find ( int x )
{
	
	if(parent[x] == -1)
	return x;
return parent[x] = find(parent[x]);
	
}
void unio( int x , int y)
{
int k1  = find(x);
int k2 = find(y);

parent[k1] = k2;

return;
}
int main()
{
   int T , M;
   cin >> T;
   while ( T--)
   {
   	cin >> N >> M;
   	for(int i = 1; i <= N ; i++)
   	parent[i] = -1;
   	for(int i = 0; i < M ; i++){
   	cin >> a[i] >>st[i] >> b[i];
   	 
   	 if(st[i] == "=")
   	 {
   	 	if(find(a[i]) != find(b[i]))
   	 	unio(a[i] , b[i]);
   	 	
   	 }
   }
   bool flag = 1;
   for(int i = 0; i < M ; i++)
    {
    	if(st[i] == "!=")
    	{
    	 int k1 = find(a[i]);
    	 int k2 = find(b[i]);
    	 if(k1 == k2)
    	 {
    	 	flag = 0;
    	 	break;
    	 }
    	}
    	
    }
    if(flag)
    cout <<"YES"<<endl;
    else
    cout <<"NO"<<endl;
   }
    return 0;
}
