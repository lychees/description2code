/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll t;
    cin>>t;
    while(t--)
    {
        ll n,m,b;
        cin>>n>>m>>b;
        vector< int >v1[n+1];
        int cost1[n+1][n+1];
        int cost2[n+1][n+1];
        for(ll i=1;i<=m;i++)
        {
            ll u,v,c,d;
            cin>>u>>v>>c>>d;
            v1[v].pb(u);
            cost1[u][v]=c;
            cost2[u][v]=d;
        }

        ll dp[n+1][b+1];
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=b;j++)
            {
                if(i==1)
                    dp[i][j]=0;
                else
                    dp[i][j]=INT_MAX;
            }
        }
        for(int i=2;i<=n;i++)
        {
            for(int j=1;j<=b;j++)
            {
                ll k1=INT_MAX;
                for(int k=0;k<v1[i].size();k++)
                {
                    int node=v1[i][k];
                    if(cost1[node][i]<=j)
                    {
                      k1=min(k1,dp[node][j-cost1[node][i]]+cost2[node][i]);
                    }
                }
                dp[i][j]=min(dp[i][j],k1);
            }
        }
        ll q;
        cin>>q;
        while(q--)
        {
            ll x,y;
            cin>>x>>y;
        if(dp[x][y]==INT_MAX)
            {
                cout<<-1<<"\n";
            }
            else
            {
                cout<<dp[x][y]<<"\n";
            }
        }

    }
}
