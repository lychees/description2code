#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Node
	{
		int data;
		bool visited;
		struct Node *left,*right;
	};
struct Node *newNode(int value)
	{
		struct Node *temp=(struct Node*)malloc(sizeof(struct Node));
		temp->data=value;
		temp->left=NULL;
		temp->right=NULL;
		temp->visited=false;
		return temp;
	}
			
void printnode(struct Node *root)
	{
		if(root!=NULL)
			{
				printnode(root->left);
				cout<<root->data<<" ";
				printnode(root->right);
			}
	}
void rightviewUtil(struct Node *root,int level,int *max_level)
	{
		if(root==NULL) return;
		if(*max_level<level && !(root->visited))
			{
				root->visited=true;
				cout<<root->data<<endl;
				*max_level=level;
			}
		rightviewUtil(root->right,level+1,max_level);
		rightviewUtil(root->left,level+1,max_level);
	}
void leftviewUtil(struct Node *root,int level,int *max_level)
	{
		if(root==NULL) return;
		if(*max_level<level &&!(root->visited))
			{
				root->visited=true;
				cout<<root->data<<endl;
				*max_level=level;
			}
		leftviewUtil(root->left,level+1,max_level);
		leftviewUtil(root->right,level+1,max_level);
	}
				
void rightview(struct Node *root)
{
    int max_level = 0;
    rightviewUtil(root, 1, &max_level);
}
void leftview(struct Node *root)
	{
		int max_level=0;
		leftviewUtil(root,1,&max_level);
	}
int main()
	{
		int t;
		cin>>t;
		while(t--)
			{
				int n;
				
				cin>>n;
				int v[n+1];
				int x;
				for(int i=1;i<=n;++i)
					{
						cin>>v[i];
					}
				//cout<<"hi"<<endl;
				struct Node *root=newNode(v[1]);
					vector <struct Node* > V(100000);
					V[1]=(root);
				for(int i=1;i<=n;++i)
					{
						if(v[i])
							{
								struct Node *parent=V[i];
								if(2*i<=n && v[2*i])
									{
										parent->left=newNode(v[2*i]);
										V[2*i]=parent->left;
									}
								 if((2*i+1)<=n && v[2*i+1]){
									parent->right=newNode(v[2*i+1]);
									V[2*i+1]=parent->right;
									}
							}
							
						}
				
				//printnode(root);
				//cout<<endl;
				rightview(root);
				leftview(root);
				cout<<endl;
			}
		return 0;
	}
