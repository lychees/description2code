#include <bits/stdc++.h>

#define readFile freopen("inn.txt","r",stdin)
#define writeFile freopen("out.txt","w",stdout)
#define fastio ios_base::sync_with_stdio(false)

using namespace std;

const int N = 100010;
int n; char s[N*10];
long long res[N];

struct node{
    long long cnt;
    node *ch[26];
    node(){
        cnt = 0;
        memset(ch,0,sizeof(ch));
    }
}*trie;

void insert(node *root, const char *w){
    if(w[0]=='\0') return;
    int e = w[0]-'a';
    if(root->ch[e]==NULL) root->ch[e] = new node();
    root->ch[e]->cnt++;
    insert(root->ch[e],w+1);
}

inline long long sqr(long long x) { return x*x; }

void solve(node *root, int depth = 0){
    if(root==NULL) return;
    long long cnt = 0, sqcnt = 0;
    for(int i = 0; i < 26; i++){
        if(root->ch[i]!=NULL){
            cnt += root->ch[i]->cnt;
            sqcnt += sqr(root->ch[i]->cnt);
            solve(root->ch[i],depth+1);
        }
    }
    long long a = (sqr(cnt)-sqcnt)/2;
    res[depth] += a;
    a = root->cnt-cnt;
    res[depth] += a*cnt;
    res[depth] += (a*(a-1))/2;
}

int main() {
#ifndef ONLINE_JUDGE
    readFile;
    writeFile;
#endif
    fastio;
    scanf("%d",&n);
    int mx = 0;
    trie = new node();
    for(int i = 0; i < n; i++){
        scanf("%s",s);
        int x = strlen(s);
        s[x] = '\0';
        insert(trie,s);
        mx = max(mx,x);
    }
    for(int i = 0; i < 26; i++) if(trie->ch[i]!=NULL) trie->cnt += trie->ch[i]->cnt;
    solve(trie);
    for(int i = 0; i <= mx; i++) printf("%lld ",res[i]);
    return 0;
}