#include<cstdio>
#include<cstring>
#define MAXN 1000000

bool isPrime[MAXN+11];
int pn,fn,factor[MAXN],power[MAXN],prime[MAXN];
bool flag;
void init(){
    memset(isPrime,true,sizeof(isPrime));
    pn=0;
    prime[pn++]=2;
    for(int i=4;i<=MAXN;i+=2){
        isPrime[i]=false;
    }
    for(int i=3;i<=MAXN;i+=2){
        if(isPrime[i]){
                prime[pn++]=i;
            for(int j=i+i;j<=MAXN;j+=i){
                isPrime[j]=false;
            }
        }
    }
    return ;
}
void split(int n){
    fn=0;
    flag=isPrime[n];
    memset(factor,0,sizeof(factor));
    memset(power,0,sizeof(power));
    for(int i=0;i<pn&&prime[i]*prime[i]<=n;i++){
        if(n%prime[i]==0){
                int cnt=0;
            while(n%prime[i]==0){
                n/=prime[i];
                cnt++;
            }
            factor[fn]=prime[i];
            power[fn++]=cnt;
        }
    }
    if(n>1){
        factor[fn]=n;
        power[fn++]=1;
    }
    return ;
}
void out(){
    if(flag){
        printf("2^0\n");
        return ;
    }
    if(factor[0]>2){
        printf("2^0");
        for(int i=0;i<fn;i++){
            printf("*%d^%d",factor[i],power[i]);
        }
    }
    else{
        printf("%d^%d",factor[0],power[0]);
         for(int i=1;i<fn;i++){
            printf("*%d^%d",factor[i],power[i]);
        }
    }
    printf("\n");
}
int main(){
    init();
    int cs;
    scanf("%d",&cs);
    while(cs--){
        int n;
        scanf("%d",&n);
        split(n);
        out();
    }
    return 0;
}
