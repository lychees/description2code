#include <iostream>
#include <vector>
#include <map>
#include <cstring>
#include <algorithm>
using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define F(i,a,b) for(int i=a;i<b;i++)
#define Fd(i,a,b) for(int i=a;i>=b;i--)

#define mpair make_pair


#define getcx getchar_unlocked
#include <stdio.h>


inline int fi ( ){//fast input function
    int n=0;
    int ch=getcx();
    while( ch < '0' || ch > '9' ){
    	ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
    n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
    return n;
}


vi arr;
bool sum[1000001];
bool subsum(int n){
    F(i,0,n){
        Fd(j,1000000-arr[i],0){
            if(sum[j]){
                sum[j+arr[i]] = true;
            }
        }
    }
}



int main()
{
    int N, Z, T, temp;
    N = fi();
    arr.resize(N);
    F(i,0,N){
        arr[i]=fi();
    }
    T = fi();

    memset(sum,0, sizeof(sum));

    sum[0]=true;

    subsum(N);
    //sort(all(arr));
    F(i,0,T){
        Z= fi();
        printf("%s\n", sum[Z]?"Yes":"No" );
    }

}
