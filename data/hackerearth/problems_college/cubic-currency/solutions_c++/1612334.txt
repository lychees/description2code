#include <iostream>
#include <cstring>
using namespace std;
 
typedef long long int64;
#define N 10001
#define C 21
 
int64 nWay[N][C];
int cube[C],t;
 
int64 getNWay(int n, int c) {
    if (n == 0)
        return 1;
    if (c == C)
        return 0;
    if (nWay[n][c] != -1)
        return nWay[n][c];
    for (int i = 0; i * cube[c] <= n; ++i)
        nWay[n][c] += getNWay(n - cube[c] * i, c + 1);
    return ++nWay[n][c];
}
 
int main() {
    // init
    scanf("%d",&t);
    while(t--){
    for (int i = 1; i <= C; ++i)
        cube[i - 1] = i * i * i;
    memset(nWay, -1, sizeof nWay);
    // solve
    int n;
    while (cin >> n)
        cout << getNWay(n, 0) << endl;
    }
    return 0;
}
