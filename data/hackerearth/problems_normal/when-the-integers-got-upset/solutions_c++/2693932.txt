/*
ID :
PROG :
LANG : C++
*/
#include<fstream>
#include<algorithm>
#include<string.h>
#include<string>
#include<vector>
#include<utility>
#include<iostream>
#include<math.h>
#include<stack>
#include<queue>
#include<set>
#include<map>
using namespace std;

#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define INF 1000000000
#define LL long long int
#define EPS 1e-11
#define PI 3.14159265359

int tc , n , a[15] , p[15] , ans , dp[15][15][(1<<12) + 3];

int solve(int i2 , int i1 , int bitmask) {
    if (bitmask + 1 == (1 << n)) return 0;
    if (dp[i2][i1][bitmask] != -1) return dp[i2][i1][bitmask];
    
    int on = 0;
    for (int i = 0; i < 15; i++) if (((1<<i)&bitmask) > 0) on++;
    
    int ret = INF;
    for (int i = 0; i < n; i++) {
        if (i == i2 || i == i1 || ((1<<i)&bitmask) > 0) continue;
        
        ret = min(ret , p[on] * (a[i2] ^ a[i1] ^ a[i]) + solve(i1 , i , bitmask | (1 << i)));
    }
    
    return dp[i2][i1][bitmask] = ret;
}

int main(void)
{
    cin >> tc;
    for (int cases = 1 ; cases <= tc; cases++) {
        cin >> n;
        for (int i = 0; i < n; i++) cin >> a[i];
        for (int i = 0; i < n; i++) cin >> p[i];
        
        ans = INF;
        memset(dp , -1 , sizeof(dp));
        
        for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) {
            if (i == j) continue;
            ans = min(ans , solve(i , j , (1<<i) | (1<<j)));
        }
        
        cout << ans << endl;
    }
             


}
