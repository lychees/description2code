#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define MAXN 100001

vector<int> adj[MAXN];
LL arr[MAXN], dp[MAXN], inv[MAXN];

void dfs(int u, int p = 0) {
  LL a = arr[u], b = 1 - arr[u] + 1;
  for (int v: adj[u]) {
    if (v != p) {
      dfs(v, u);
      a += dp[v];
      b += inv[v];
    }
  }
  dp[u] = min(a, b);
  inv[u] = min(a + 1, b - 1);
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL); 

  int n; cin >> n;
  for (int i = 0; i < n - 1; i++) {
    int u, v; cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }
  for (int i = 1; i <= n; i++) cin >> arr[i];
  for (int i = 1, v; i <= n; i++) cin >> v, arr[i] ^= v;
  dfs(1);
  LL ans = min(dp[1], 1 + inv[1]);
  cout << ans << endl;
  
  return 0;
}
