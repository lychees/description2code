#include<bits/stdc++.h>
using namespace std;
void minHeapify(int arr[],int i,int n){
	int left=2*i;
	int right=2*i+1;
	int smallest=i;
	if(left <=n && arr[left]<arr[smallest]){
		smallest=left;
	}
	if(right<=n && arr[right]<arr[smallest]){
		smallest=right;
	}
	if(smallest!=i){
		int t=arr[i];
		arr[i]=arr[smallest];
		arr[smallest]=t;
		minHeapify(arr,smallest,n);
	}
}
void build(int arr[],int n){
	for(int i=n/2;i>=1;i--){
		minHeapify(arr,i,n);
	}
}
int main(){
	string line;
	getline(cin,line);
//	cout<<line<<endl;
	vector<string> v;
	v.clear();
	char ch=' ';
	int pos=line.find(ch);
	int init=0;
	int len=line.length();
	while(pos!=std::string::npos){
		v.push_back(line.substr(init,pos-init+1));
		init=pos+1;
		pos=line.find(ch,init);
	}
	v.push_back(line.substr(init,min(pos,len)-init+1));
//	for(int i=0;i<v.size();i++)cout<<v[i]<<endl;
	int a;
//	stringstream ss(v[0]);
//	ss>>a;
//	cout<<a<<endl;
	vector<int> arr;
	for(int i=0;i<v.size();i++){
		stringstream ss(v[i]);
		ss>>a;		
		arr.push_back(a);
//		cout<<arr[i+1]<<" ";
	}
//	cout<<endl;
//	build(arr,v.size()+1);
	sort(arr.begin(),arr.end());
	cout<<arr[0]<<endl;
	return 0;
}
