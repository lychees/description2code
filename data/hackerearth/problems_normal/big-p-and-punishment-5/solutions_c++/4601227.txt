//
//  main.cpp
//  BigPAndPunishmentHE
//
//  Created by Shashank Shekhar on 30/07/16.
//  Copyright Â© 2016 Shashank Shekhar. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
#include <unordered_map>
#include <map>
#include <set>
#include <queue>
#include <cstring>
#include <sstream>
#include <iterator>
#define minInt INT_MIN
#define maxInt INT_MAX
#define umaxInt UINT_MAX
#define llminInt LLONG_MIN
#define llmaxInt LLONG_MAX
#define MOD 1000000007
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define fr(i,a,N) for (int i =a;i<N;i++)
#define fre(i,a,N) for (int i =a;i<=N;i++)
#define lli long long int
#define ui unsigned int
#define pii pair<int,int>
#define vi vector<int>
#define vpii vector<pair<int,int>>
using namespace std;

vi adj[10002];
bool vis[10002];
int dp[10002];
int bfs (int i) {
    queue<int> q;
    vis[i]=1;
    int c =0;
    q.push(i);
    while (!q.empty()) {
        int val = q.front();
        q.pop();c++;
        fr(j,0,adj[val].size()) {
            if (!vis[adj[val][j]]) {
                q.push(adj[val][j]);
                vis[adj[val][j]] = 1;
            }
        }
    }
    return c;
}
int dfs (int i) {
    if (dp[i]!=-1) return dp[i];
    vis[i] = true;
    int c = 1;
    fr(j,0,adj[i].size()) {
        if(!vis[adj[i][j]])
            c+=dfs(adj[i][j]);
    }
    return dp[i] = c;
}

int main(int argc, const char * argv[]) {
    // insert code here...
    int t,n,f,s,a,b;
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >>t;
    for (;t>0;--t ) {
        memset(vis,0,sizeof vis);
        fre(i,0,10002)
        adj[i].clear();
        cin >>n>>f>>s;
        fre(i,1,f) {
            cin >>a>>b;
            adj[a].pb(b);
        }
        fill(dp,dp+ 10002,-1);
        int ans = 0;
        fre(i,1,s) {
            cin >>a;
            if (vis[a]) continue;
            ans+= dfs(a);
        }
        cout << ans<< "\n";
    }
    return 0;
}
