#include <iostream>
#include <vector>
#include <algorithm>
using namespace std ;
bool contains(long long int u);
bool full(long long int u);
vector<int> v ;
int main()
{
	int t ;
	cin >> t ;
	long long int x ;
	int y ;
	bool p ;
	long long int i,j;
	while(t--)
	{
		p = false;
		v.clear();
	do{
		cin >> y;
		v.push_back(y);
		
	}while(cin.get()!='\n');
	cin >> x ;
	//cout << x << endl ;
	//cout << v[1] << endl;
	for(i=1;i<=9999999;i++)
	{
	 if(contains(i*x) && full(i*x))
	 {
	 	p = true;
	 	cout << i*x << " " << "=" << " " << x << " "<<"*"<<" "<< i << endl;
	 	break;
	 }
	}
	if(p==false)
	cout << "Impossible" << endl;
	}
	
}
bool contains(long long int u)
{
	int i,j ;
	int r ;
	while(u>0)
	{
		r = u%10 ;
		if(find(v.begin(),v.end(),r)!=v.end())
		{
		u = u/10 ;
		}
		else
		{
			return false;
		}
	}
	return true;
}
bool full(long long int u)
{
	int i,j ;
	vector<int> l ;
	int p ;
	while(u>0)
	{
		p = u%10;
		l.push_back(p);
		u = u/10 ;
	}
	
	int q = v.size();
	for(i=0;i<q;i++)
	{
		if(find(l.begin(),l.end(),v[i])!=l.end())
		{
		}
		else
		{
			return false;
		}
	}
	return true;
}

