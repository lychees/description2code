#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ull;

ull myAbs(ull x) {
	if( x < 0) {
		return -1*x;
	} else {
		return x;
	}
}

int main()
{
	int T;
	cin >> T;
	while(T--) {
		int N;
		cin >> N;
		std::vector<ull> ip;
		while(N--) {
			ull x;
			cin >> x;
			ip.push_back(x);
		}
		std::sort(ip.begin(), ip.end());
		ull M1, M2;
		M1 = 0;
		M2 = 0;
		N = ip.size();
		if(N%2) {
			M1 = ip[(N-1)/2];
		} else {
			ull X = ip[(N-1)/2] + ip[(N-1)/2+1];
			if(X%2) {
				M1 = X/2;
				M2 = M1+1;
			} else {
				M1 = X/2;
			}
		}
		ull ans = 0;
		for(int i=0; i<ip.size(); i++) {
			ans += abs(ip[i] - M1);
		}
		if(M2) {
			ull ans2 = 0;
			for(int i=0; i<ip.size(); i++) {
				ans2 += myAbs(ip[i] - M2);
			}	
			if(ans2 < ans) {
				ans = ans2;
			}
		}
		cout << ans << endl;
	}
    return 0;
}
