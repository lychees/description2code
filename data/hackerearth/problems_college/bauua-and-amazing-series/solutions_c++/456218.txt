/*
	NISHANT GUPTA
	CSE-MNNIT ALLAHABAD
*/
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <cctype>
#include <utility>
#include <map>
#include <string>
#include <climits>
#include <set>
#include <string>
#include <sstream>
#include <utility>
#include <ctime>
#include <cassert>
#include <fstream>
using namespace std;
typedef long long llu;
typedef vector<int> VI;
typedef pair<int, int> II;
typedef vector<long long> VLL;
typedef vector<bool> VB; 
#define SZ(A) ((int)A.size())
#define LEN(A) ((int)A.length())
#define MS(A) memset(A, 0, sizeof(A))
#define MSV(A,a) memset(A, a, sizeof(A))
#define MAX(a,b) ((a >= b) ? (a) : (b))
#define MIN(a,b) ((a >= b) ? (b) : (a))
#define ABS(a) (((a) > 0) ? (a) : (-a))
#define MP make_pair
#define X first
#define Y second
#define PB push_back
#define FOUND(A, x) (A.find(x) != A.end())
#define getcx getchar_unlocked
#define INF 0x3f3f3f3f
#define INFL (LL(1e18))
#define EPS 1e-12 
#define chkbit(s, b) (s & (1<<b))
#define setbit(s, b) (s |= (1<<b))
#define clrbit(s, b) (s &= ~(1<<b))
#define rep(i, a, n) for(i = a; i < n; i++)
#define rev(i, a, n) for(i = a; i > n; i--)
#define FORALL(itr, c) for(itr = (c).begin(); itr != (c).end(); itr++)
#define ALL(A) A.begin(), A.end()
#define LLA(A) A.rbegin(), A.rend()
inline void inp( int &n )
{ 
	n=0;    int ch=getcx();int sign=1;   
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();} 
	while(  ch >= '0' && ch <= '9' )    
	n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	n=n*sign;
}   	
inline void inp1( llu &n )
{ 
	n=0;    llu ch=getcx();llu sign=1;   
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();} 
	while(  ch >= '0' && ch <= '9' )    
	n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	n=n*sign;
}   	
llu A, B, C,f1,f0;
llu a[3][3],ans[3][3];
llu fib(llu n)
{
		//if(n==1)return 0;
	llu r,i,j,k,m,b[3][3];
    a[0][0]=A;a[0][1]=B;a[0][2]=C;a[1][0]=1;a[1][1]=0;a[1][2]=0;
    a[2][0]=0;a[2][1]=0;a[2][2]=1;
    ans[0][0]=1;ans[0][1]=0;ans[0][2]=0;
    ans[1][0]=0;ans[1][1]=1;ans[1][1]=0;
    ans[2][0]=0;ans[2][0]=0;ans[2][2]=1;
    
       if(n==1)return f0;
       m=1000000007;n-=2;
        while(n!=0)
        {
            r=n%2;n/=2;
            if(r)
            {for(i=0;i<3;i++){for(j=0;j<3;j++){b[i][j]=0;}}
                for(i=0;i<3;i++)
                {
                    for(j=0;j<3;j++)
                    {
                        for(k=0;k<3;k++)
                        {
                            b[i][j]+=((ans[i][k]*a[k][j])%m);
                        }
                    }
                }
                for(i=0;i<3;i++){for(j=0;j<3;j++)ans[i][j]=b[i][j];}
            }
            for(i=0;i<3;i++){for(j=0;j<3;j++){b[i][j]=0;}}
            for(i=0;i<3;i++)
                {
                    for(j=0;j<3;j++)
                    {
                        for(k=0;k<3;k++)
                        {
                            b[i][j]+=((a[i][k]*a[k][j])%m);
                        }
                    }
                }
                for(i=0;i<3;i++){for(j=0;j<3;j++)a[i][j]=b[i][j];}
        }
        llu mul=0;
        mul=((ans[0][0]*f1)%m+(ans[0][1]*f0)%m+(ans[0][2]*1)%m)%m;
        return mul;
}      

int main()
{
	llu i,j,k,n,t;
	inp1(t);
	while(t--)
	{
		inp1(n);inp1(f0);inp1(f1);inp1(A);inp1(B);inp1(C);
		printf("%lld\n",fib(n));
	}
	return 0;
}