#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-(a)) : (a))
#define EQ(a,b) ( (fabs((a)-(b))<EPS) ? (1) : (0))





typedef long long LL;
//typedef __int64 LL;




struct rect
{
  int x1,y1;
  int x2,y2;
}r[3];


int vals[1000];


int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,j,k,n;

    int T,X1,Y1;
    scanf("%d",&T);
    while(T--)
    {

      for(i=0;i<2;i++)
      {
        scanf("%d %d %d %d",&r[i].x1,&r[i].y1,&r[i].x2,&r[i].y2);
      }


      r[2].x1=max(r[0].x1,r[1].x1);
      r[2].y1=max(r[0].y1,r[1].y1);

      r[2].x2=min(r[0].x2,r[1].x2);
      r[2].y2=min(r[0].y2,r[1].y2);

      if(r[2].x1<r[2].x2 && r[2].y1<r[2].y2) printf("Rectangle\n");
      else if(r[2].x1==r[2].x2 && r[2].y1==r[2].y2) printf("Point\n");
      else if(r[2].x1<=r[2].x2 && r[2].y1<=r[2].y2) printf("Line\n");
      else printf("Apart\n");
    }




    return 0;
}
