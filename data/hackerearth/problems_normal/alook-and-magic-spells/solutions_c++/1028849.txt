#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
const int modP=1000000007;
#define fi "INPUT.INP"
#define fo "OUTPUT.OUT"
#define foru(i,l,r) for(int i=l;i<=r;++i)
int test,n,res;
struct matrix{
    int m,n,matrix[5][5];
};
matrix base,a;
matrix mul(matrix a,matrix b){
    matrix c; c.m=a.m; c.n=b.n;
    foru(i,1,c.m)
        foru(j,1,c.n){
            c.matrix[i][j]=0;
            foru(t,1,a.n){
                int tmp=(1ll*a.matrix[i][t]*b.matrix[t][j])%modP;
                c.matrix[i][j]=(c.matrix[i][j]+tmp)%modP;
            }
        }
    return c;
}
matrix POW(matrix x,int k){
    if (k==1) return x;
    matrix c=POW(x,k/2);
    c=mul(c,c);
    if (k%2) c=mul(c,x);
    return c;
}
int main(){
    //freopen(fi,"r",stdin);
    //freopen(fo,"w",stdout);
    scanf("%d",&test); base.m=3; base.n=3;
    base.matrix[1][1]=1; base.matrix[1][2]=2; base.matrix[1][3]=4;
    base.matrix[2][1]=0; base.matrix[2][2]=2; base.matrix[2][3]=4;
    base.matrix[3][1]=0; base.matrix[3][2]=1; base.matrix[3][3]=0;
    while (test--){
        scanf("%d",&n);
        if (n==1) printf("2\n");
        else{
            a.m=3; a.n=1;
            a.matrix[1][1]=14;
            a.matrix[2][1]=12;
            a.matrix[3][1]=2;
            if (n==2) printf("14\n");
            else{
                matrix tmp_base=POW(base,n-2);
                a=mul(tmp_base,a);
                printf("%d\n",a.matrix[1][1]);
            }
        }
    }
    fclose(stdin);
    fclose(stdout);
}
