def base3Modifier(base3List, iteration):
    localBase3 = list(base3List)
    bitLoc = int(iteration/2)
    bitRemainder = iteration % 2
    if (bitRemainder == 0):
        if (localBase3[bitLoc] == '2'):
            localBase3[bitLoc] = '1'
        elif (localBase3[bitLoc] == '1'):
            localBase3[bitLoc] = '0'
        else:
            localBase3[bitLoc] = '2'
    else:
        if (localBase3[bitLoc] == '2'):
            localBase3[bitLoc] = '0'
        elif (localBase3[bitLoc] == '1'):
            localBase3[bitLoc] = '2'
        else:
            localBase3[bitLoc] = '1'
    result = int(''.join(localBase3), 3)
    return result


ip1 = raw_input()
ip2 = raw_input()
base2 = int(ip1, 2)
base2Range = len(ip1)
base3Range = 2*len(ip2)
for i in range(base2Range):
    modBase2 = base2 ^ int('1', 2) << i
    for j in range(base3Range):
        modBase3 = base3Modifier(ip2, j)
        if (modBase2 == modBase3):
            print(modBase2)
            break
