//#pragma comment(linker, "/STACK:640000000")

#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
 
using namespace std;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define forr(i, l, r) for(int i = int(l); i <= int(r); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))
 
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
 
const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-9;
const ld pi = ld(3.1415926535897932384626433832795);
 
inline bool in(int i, int j, int n, int m) {
    return i >= 1 && i <= n && j >= 1 && j <= m;
}
 
inline int myrand() {
    return (rand() ^ (rand() << 15));
}
 
const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, 1, 0, -1};
 
const int N = 4444;

int n, k, t;
int a[N];

inline void gen() {
    return;
}

inline bool read() {
	if(!(cin >> n >> k >> t)) return false;
	forn1(i, k) assert(cin >> a[i]);
    return true;
}

const int MOD = INF + 7;

inline void add(int &a, const int b) {
	a += b;
	if(a >= MOD) a -= MOD;
	return;
}

inline int mul(int a, int b) {
	li res = a * 1LL * b;
	if(res >= MOD) res %= MOD;
	return int(res);
}

int f[N];

int binPow(int a, int n) {
	if(n == 0) return 1;
	if(n & 1) return mul(a, binPow(a, n - 1));
	int res = binPow(a, n >> 1);
	return mul(res, res);
}

inline int C(int n, int k) {
	int nom = f[n];
	int denom = mul(f[k], f[n - k]);
	return mul(nom, binPow(denom, MOD - 2));
}

inline void solve() {
	f[0] = 1;
	for(int i = 1; i < N; i++) f[i] = int((f[i - 1] * 1LL * i) % MOD);
	sort(a + 1, a + k + 1);
	int minS = 0;
	forn1(i, k) minS += a[i] - 1;

	int ans = 0;
	for(int cntr = 0; cntr <= k; cntr++) {
		int sum = minS + cntr * 2;
		if(sum == t) {
			add(ans, C(k, cntr));
		}
	}

	cout << ans << endl;
    return;
}
 
int main() {
#ifdef _DEBUG
    assert(freopen("input.txt", "rt", stdin));
    assert(freopen("output.txt", "wt", stdout));
#endif
 
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;
 
    srand(int(time(NULL)));

    int T = 1;
    //assert(scanf("%d", &T) == 1);

    forn(i, T) {
        //cerr << "TEST == " << i + 1 << endl;
        assert(read());
        solve();
    }
 
#ifdef _DEBUG
    cerr << "TIME == " << clock() << " ms" << endl;
#endif
    return 0;
}