#include <iostream>
#include <vector>
#include <algorithm>

#define ll long long

using namespace std;


int main()
{
	long long t;
	cin>>t;
	while(t--)
	{
		vector< pair<long long ,long long> >vec;
		long long n,a,b,c,p,q,i=0;
		cin>>n>>a>>b>>c;
		for(i=0;i<n;i++)
		{
			cin>>p>>q;
			vec.push_back(make_pair (p,0));
			vec.push_back(make_pair (q,1));
		}
		sort(vec.begin(),vec.end());
		n = n<<1;
		long long int maxcost=0;
		long long int curoverlap=0;

		for( i=0;i<n;i++)
		{
			if(vec[i].second==0)
				curoverlap++;
			else
				curoverlap--;

			long long int active=curoverlap;
			long long int closed=(i-curoverlap+1)/2;
			long long int rest=n/2-active-closed;
			long long int cost=active*b+closed*c+rest*a;
			if(maxcost<cost)
			{
				maxcost=cost;
			}
		}
		cout<<maxcost<<endl;
	}
}
