/*Author : Vineet Kumar */
#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<climits>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<bitset>
#include<stack>
#include<queue>
using namespace std;

#define FOR(i,a,b) 	for(int i= (int )a ; i < (int )b ; ++i)
#define rep(i,n) 	FOR(i,0,n)
#define INF		INT_MAX
#define ALL(x) 		x.begin(),x.end()
#define LET(x,a)	__typeof(a) x(a)
#define IFOR(i,a,b) 	for(LET(i,a);i!=(b);++i)
#define EACH(it,v) 	IFOR(it,v.begin(),v.end())
#define pb 		push_back
#define sz(x) 		int(x.size())
#define mp 		make_pair
#define fill(x,v)	memset(x,v,sizeof(x))
#define max(a,b)	((a)>(b)?(a):(b))
#define min(a,b)	((a)<(b)?(a):(b))
#define	si(n)		scanf("%d",&n)
#define pi(n)		printf("%d ",n)
#define pil(n)		printf("%d\n",n)
#define sd(n)		scanf("%lf",&n)
#define sl(n)		scanf("%lld",&n)
#define pl(n)		printf("%lld\n",n)
#define ss(n)		scanf("%s",n)
#define scan(v,n)	vector<int> v;rep(i,n){ int j;si(j);v.pb(j);}
#define mod (int)(1e9 + 7)
#define F first
#define S second
typedef pair<int,int> PI;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
int n;
int a[1000005];
int tr[3000005][6];
void build(int p,int b,int e)
{
	int i,c;
	if(b>e)
		return;
	if(b==e)
	{
		tr[p][a[b]]++;
		tr[p][4] = 0;
		tr[p][5] = 0;
		return;
	}
	c=p*2;
	build(c,b,(b+e)/2);
	build(c+1,(b+e)/2+1,e);
	rep(i,4)
		tr[p][i] = tr[c][i] + tr[c+1][i];
	tr[p][4] = tr[p][5] = 0;
}

void update(int p,int b,int e,int l,int r,int val)
{
	int i,c,m;
	if(b>e || r<b || l>e)
		return;
	if(l<=b && r>=e)
	{
		if(val==1)
		{
			int temp = tr[p][3];
			for(i=3;i>0;i--)
				tr[p][i] = tr[p][i-1];
			tr[p][0] = temp;
		}
		else if(val==2)
		{
			swap(tr[p][0],tr[p][2]);
			swap(tr[p][1],tr[p][3]);
		}
		else if(val==3)
		{
			int temp = tr[p][0];
			for(i=0;i<=2;i++)
				tr[p][i] = tr[p][i+1];
			tr[p][3] = temp;
		}
		tr[p][4] += val;
		tr[p][4] %= 4;
		if(tr[p][4])
			tr[p][5] = 1;
		//printf("updated %d-%d %d-%d\n",b,e,l,r);
		return;
	}
	c=p*2;
	m = (b+e)/2;
	if(tr[p][5])
	{
		tr[p][5] = 0;
		int val = tr[p][4];
		tr[p][4] = 0;
		update(c,b,m,1,n,val);
		update(c+1,m+1,e,1,n,val);
		rep(i,4)
			tr[p][i] = tr[c][i] + tr[c+1][i];
	}
	update(c,b,m,l,r,val);
	update(c+1,m+1,e,l,r,val);
	rep(i,4)
		tr[p][i] = tr[c][i] + tr[c+1][i];
	tr[p][4] = 0;
	tr[p][5] = 0;
	return;
}

pair<PI,PI> query(int p,int b,int e,int l,int r)
{
	int c=2*p,i,m;
	if (b>e || b>r || e<l )
		return mp(mp(0,0),mp(0,0));
	if (l <= b && r >= e)
		return mp(mp(tr[p][0],tr[p][1]),mp(tr[p][2],tr[p][3]));
	m = (b+e)/2;
	if(tr[p][5])
	{
		tr[p][5] = 0;
		int val = tr[p][4];
		tr[p][4] = 0;
		update(c,b,m,1,n,val);
		update(c+1,m+1,e,1,n,val);
		rep(i,4)
			tr[p][i] = tr[c][i] + tr[c+1][i];
	}
	pair<PI,PI> q1 =  query(c,b,m,l,r);
	pair<PI,PI> q2 =  query(c+1,m+1,e,l,r);
	return mp(mp(q1.first.first + q2.first.first,q1.first.second+q2.first.second),mp(q1.second.first+q2.second.first,q1.second.second+q2.second.second));
}
void print(int n,int l,int h,int c)
{
	if(c>100)
		return;
	printf("%d-%d ",l,h);
	rep(i,4)
		pi(tr[n][i]);
	pil(tr[n][5]);
	if(l==h)
		return;
	print(n*2,l,(l+h)/2,c+1);
	print(n*2+1,(l+h)/2 + 1,h,c+1);
}
int main()
{
	int i,j,t,m;
	int x,y,r;
	si(n);
	fill(a,0);
	build(1,1,n);
	rep(i,20000)
		rep(j,20000)
		{
			int l = 1;
		}
	//print(1,1,n);
	si(m);
	string s;
	FOR(i,1,m+1)
	{
		cin >> s;
		while(sz(s) && isalpha(s[0])==0)
			cin >> s;
		if(s=="C")
		{
			si(x);
			si(y);
			si(r);
			r %= 4;
			if(r)
				update(1,1,n,x,y,r);
		}
		else if(s=="A")
		{
			si(x);
			si(y);
			si(r);
			r %= 4;
			r *= -1;
			r = (r+4)%4;
			if(r)
				update(1,1,n,x,y,r);
		}
		else if(s=="Q")
		{
			si(x);
			si(y);
			pair<PI,PI> q = query(1,1,n,x,y);
			int ans = max(q.first.first,max(q.first.second,max(q.second.first,q.second.second)));
			pil(ans);

		}
		//printf("%s %d %d\n",s.c_str(),x,y);
		//print(1,1,n,0);
	}
	return 0;
}

