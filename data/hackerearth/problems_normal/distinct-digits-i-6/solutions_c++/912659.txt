#include<iostream>
#include<vector>
#include<set>
using namespace std;
 
#define MAXVAL 100007

int distArr[11][MAXVAL]={0} ;
int n;

int findDistinct(long long val)
{
	set<int> Qs;
	do{						
          Qs.insert(val % 10);
	  }while(val /= 10);
	 return Qs.size();
}
 
void updateVal(int index, int count, int val)
{
	for(int i = index; i <= n; i += i & -i) 
	distArr[count][i] += val;
}
 
int getCount(int index,int count) 
{
	long long res = 0;
	for(int i = index; i; i -= i & -i) 
	{
		res += distArr[count][i];
	}
	return res;
}
 
int main()
{
	    
		std::cin>>n;
		long long *arr = new long long[n+1];
		for(int i = 1 ; i <= n; i++)
		{
			cin>>arr[i];
			int count = findDistinct(arr[i]);
			updateVal(i, count, 1);

		}

		int q, l, r, index, c, op;
		long long val;
		std::cin>>q;
		for(int i=0;i<q;i++)
		{
			cin>>op;
			if(op == 0)
			{
				cin>>index; cin>>val;
				int count1 = findDistinct(arr[index]);
				int count2 = findDistinct(val+arr[index]);
				arr[index] = val + arr[index];
				updateVal(index, count1,-1);
				updateVal(index, count2,1);
		
			}
			else if(op == 1)
			{
				cin>>index; cin>>val;
				int count1 = findDistinct(arr[index]);
			    int count2 = findDistinct(val);
				arr[index] = val;
				updateVal(index, count1,-1);
				updateVal(index, count2,1);

			}
			else
			{
                cin>>l; cin>>r; cin>>c;
				int count1 = getCount(l-1, c);
				int count2 = getCount(r, c);				
				cout<<count2 - count1<<endl;
			}
		}
		return 0;
}
