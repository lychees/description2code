#include <iostream>
#include <vector>
#include <cstdio>
#include <cmath>
#include <algorithm>

#define ll long long
#define MOD 1000000007

using namespace std;

ll powerMod(ll a, ll b) {
	
	ll ans=1;
	while(b) {
		if(b&1) {
			ans*=a;
			if(ans>=MOD) {
				ans%=MOD;
			}
		}
		a*=a;
		if(a>=MOD) {
			a%=MOD;
		}
		b>>=1;
	}
	
	return ans;
}

vector <ll> fact(100005), ifact(100005);

void precompute() {
	fact[0]=1;
	fact[1]=1;
	
	for(ll i=2; i<100005; i++) {
		fact[i] = i*fact[i-1];
		if(fact[i]>MOD) {
			fact[i]%=MOD;
		}
	}
	
	ifact[100004] = powerMod(fact[100004], MOD-2);
	
	for(ll i=100003; i>=0; i--) {
		ifact[i]=(i+1)*ifact[i+1];
		if(ifact[i]>=MOD) {
			ifact[i]%=MOD;
		}
	}
	
}

ll nCr(ll n, ll r) {
	ll ans = 1;
	ans*=fact[n];
	ans*=ifact[r];
	if(ans>MOD) {
		ans%=MOD;
	}
	ans*=ifact[n-r];
	if(ans>MOD) {
		ans%=MOD;
	}
	return ans;
}

int main()
{
    int t;
    cin>>t;
    precompute();
    while(t--) {
    	ll n, k;
    	cin>>n>>k;
    	vector <ll> strength(n);
    	for(int i=0;i<n;i++) {
    		cin>>strength[i];
    	}
    	sort(strength.begin(), strength.end());
    	ll sum=0;
    	for(int i=1; i<=n; i++) {
    		if(n-i<k-1) {
    			break;
    		}
    		sum+=strength[i-1]*nCr(n-i, k-1);
    		if(sum>=MOD) {
    			sum%=MOD;
    		}
    	}
    	printf("%lld\n", sum);
    }
    return 0;
}
