//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}

ll invMod(ll n){
    return pwr(n, MOD-2);
}


int n, m, factor[55], col[100005];

bool ok(int mid){

    int last = 0;
    for(int i=1;i<=n;i++){

        int f = factor[col[i]];
        int temp = (last/f)+1;
        last = temp*f;

// cout<<i<<" "<<i<<" last = "<<last<<endl;

        while(1){

            bool bad = false;
            for(int j=col[i]+1;j<=m;j++)
                if(last % factor[j] == 0)
                    bad = true;
            if(!bad)    break;
            last += f;
        }

// cout<<last<<endl;

        if(last > mid)  return false;
    }
    return true;
}


int main(){

    ios_base::sync_with_stdio(0);

    cin>>n>>m;
    for(int i=1;i<=m;i++)
        cin>>factor[i];
    for(int i=1;i<=n;i++)
        cin>>col[i];

// cout<<ok(42);

    int ans = 1e9, lo = n, hi = 1e9;
    while(lo <= hi){

        int mid = (lo + hi)/2;
        if(ok(mid)){
            ans = min(ans, mid);
            hi = mid-1;
        }
        else
            lo = mid+1;
    }

    cout<<ans;
    return 0;
}







