/* AKSHIT CHOPRA , BITS Pilani*/
// sab - moh - maya
#include <bits/stdc++.h>
using namespace std;

#define endl '\n'
#define spc ' '  
#define pi 2*acos(0.0) 
#define mpr make_pair
#define fi first
#define sc second
#define pb push_back
#define ffor(i,a,b) for( __typeof(b) i = a; i<=b ; ++i )
#define rfor(i,a,b) for( __typeof(b) i = a; i>=b ; --i )
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define count_one(a)    __builtin_popcountll(a)
#define isPower_2(a)      (a)&(a-1)==0
#define what_is(x) cerr << #x << " is " << x << endl;
#define sz(a)           (int)(a.size())
#define all(c)          (c).begin(),(c).end()
#define allr(c)         (c).rbegin(),(c).rend()
// #define loop(c,i)       for(typeof(c.begin()) i = c.begin(); i != c.end(); i++)
// #define loopr(c,i)      for(typeof(c.rbegin()) i = c.rbegin(); i != c.rend(); i++)
#define UNIQUE(a)       sort(all(a)), (a).erase(unique(all(a)),(a).end())
#define present(c,x)    ((c).find(x) != (c).end())
#define cpresent(c,x)   (find(all(c),x) != (c).end())


const int inf = 2000000000;

typedef long long LL;
typedef vector<int> vi;
typedef vector<pair<int,int> >vpii;
typedef vector <LL> vll;
typedef vector <pair<LL,LL> > vpll;
typedef pair <int,int> pii;
typedef pair <LL,LL> pll;

void io()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cout.precision(15);
}

//Fast Reader
// template<class T>inline bool read(T &x){int c=getchar_unlocked();int sgn=1;while(~c&&c<'0'||c>'9'){if(c=='-')sgn=-1;c=getchar_unlocked();}for(x=0;~c&&'0'<=c&&c<='9';c=getchar_unlocked())x=x*10+c-'0'; x*=sgn; return ~c;}


LL mulmod(LL a,LL b, LL m){LL q=(LL)(((long double)a*(long double)b)/(long double)m);LL r=a*b-q*m;if(r>m)r%=m;if(r<0)r+=m;return r;}/* for TOO LARGE mod of the order 10^18 etc */

template<typename T>T mod(T a,T b){while(a < 0)a+=b ;return a%b ;}
template <typename T>T power(T e, T n, T m){T x=1,p=e;while(n){if(n&1)x=mod(x*p, m);p=mod(p*p, m);n>>=1;}return x;}
template <typename T>T power(T e,T n){T x=1,p=e;while(n){if(n&1)x=x*p;p=p*p;n>>=1;}return x;}
template <typename T> T InverseEuler(T a, T m){return (a==1? 1 : power(a, m-2, m));}/*use IFF m is a prime number */
template <typename T> T gcd(T a, T b){return __gcd(a,b);}
template <typename T> T lcm(T a, T b){return (a*(b/gcd(a,b)));}

int exEuler(int a,int b,int &x,int &y)
{
    if(a == 0)
    {
        x = 0 ;
        y = 1 ;
        return b ;
    }
    if(b == 0)
    {
        x = 1 ;
        y = 0 ;
        return a ;
    }
    int x1,y1 ;
    int g = exEuler(b%a , a , x1,y1) ;
    x = y1 - (b/a)*x1 ;
    y = x1 ;
    return g ; // return gcd of a,b ;
}
/*
#define MAX 50005
#define mod 1000000009
bool sv[MAX] ;
//vector<LL> primes ;
void sieve()
{
    sv[1] = 1 ;
    sv[2] = 0 ;
    for(LL i=3;i<MAX;i+=2)
    {
        if(sv[i] == 0)
        {
            for(LL j=i*i;j<MAX;j += 2*i)
            {
                if(sv[j] == 0) 
                 sv[j] = 1 ;
            }
        }
    }
   /* primes.pb(2) ;
    for(LL i=3;i<MAX;i+=2)
    {
        if(sv[i] == 0)
            primes.pb(i) ;
    }    
}
*/
#define MAXN 100002
vi g[MAXN] ;
bool vis[MAXN] ;
int timer ;
int d[MAXN] ;
int f[MAXN] ;   
void dfs(int s)
{
    timer++ ;
    d[s] = timer ;
    vis[s] = 1 ;
    for(int i = 0 ; i < sz(g[s]) ; i++)
    {
        if(!vis[g[s][i]])
        {
            dfs(g[s][i]) ;
        }
    }
    timer++ ;
    f[s] = timer ;
}
bool contains(int x,int y)
{
    return ( (d[x] < d[y]) && (f[y] < f[x])) ;
}
int main(int argc,char* argv[]) 
{ 
    io() ;   
    #ifndef ONLINE_JUDGE
        freopen("inp.txt", "r", stdin);
    #endif
    int n,t ;
    cin >> n ;
    int u,v ;
    ffor(i,1,n-1)
    {
        cin >> u >> v ;
        g[u].pb(v) ;
        g[v].pb(u) ;
    }
    dfs(1) ;
    int q , x ,y;
    cin >> q ;
    while(q--)
    {
        cin >> t >> x >> y;
        
        if(t==0)
        {
            if(contains(x,y))
            {
                cout << "YES\n" ;
            }
            else
            {
                cout << "NO\n" ;
            }
        }
        else
        {
            if(contains(y,x))
            {
                cout << "YES\n" ;
            }
            else
            {
                cout << "NO\n" ;
            }
        }
    }
    return 0 ;
}  