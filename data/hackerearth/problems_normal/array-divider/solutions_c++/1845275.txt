#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#ifdef _WIN32
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
#define sz(x) (int((x).size()))
#define bit(x) (1 << (x))
#define cnt1(x) (__builtin_popcount(x))

template<class T>
inline void chkmax(T& x, T y) {
	if (x < y) x = y;
}

template<class T>
inline void chkmin(T& x, T y) {
	if (y < x) x = y;
}

typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
const LL INF = 1000000000000000000LL;
const int MX = 505;
int A[MX], N, K;
LL S[MX];
LL val[MX][MX];

LL sqr(LL x) {
	return x * x;
}

int main() {
	
	int i, j, k;
	
	scanf("%d%d", &N, &K);
	S[0] = 0;
	for (i = 1; i <= N; i++) {
		scanf("%d", A + i);
		S[i] = S[i - 1] + A[i];
	}
	
	for (i = 0; i <= N; i++) for (j = 0; j <= N; j++) val[i][j] = INF;
	val[0][0] = 0;
	for (i = 1; i <= N; i++) {
		for (j = 1; j <= K; j++) {
			for (k = 0; k < i; k++) val[i][j] = min(val[i][j], val[k][j - 1] + sqr(S[i] - S[k]));
		}
	}
	
	printf(LLD "\n", K * val[N][K] - sqr(S[N]));
	return 0;
} 