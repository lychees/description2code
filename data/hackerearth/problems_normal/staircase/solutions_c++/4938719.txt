#include <bits/stdc++.h>

using namespace std;

void fun(int n) {
    int jack[n + 1];
    int jill[n + 1];

    jack[0] = jill[0] = 0;
    jack[1] = jill[1] = 1;
    jack[2] = jill[2] = 2;
    jack[3] = 4;
    jill[3] = 3;

    for (int i = 4; i <= n; i++) {
        jack[i] = jack[i - 1] + jack[i - 2] + jack[i - 3];
        jill[i] = jill[i - 1] + jill[i - 2];
    }

    cout << "Jack-" << jack[n] << endl;
    cout << "Jill-" << jill[n] << endl;
}

int main() {
    int t, n, m, x, y, h;
    long long int A[100005];
    int dp[100005] = {1};

    cin >> n;
    if (n < 0) {
        cout << "ERROR\n";
        return 0;
    }
    fun(n);
    /*
    scanf("%d", &t);
    while (t--) {
        cin >> n;
        vector<pair<int, int> > v;
        for (int i = 0; i < n; i++) {
            cin >> x >> y;
            v.push_back(make_pair(x, y));
        }

        sort(v.begin(), v.end());
        long long int dp[2002];
        memset(dp, 0, sizeof(dp));
        dp[0] = v[0].second;
        for (int i = 1; i < n; i++) {
            dp[i] = v[i].second;
            for (int j = i - 1; j >= 0; j--) {
                if (v[i].first > v[j].first && v[j].second < v[i].second && dp[j] + v[i].second > dp[i]) {
                    dp[i] = dp[j] + v[i].second;
                    //dp[i] = max(dp[i], dp[i] + v[j].second);
                }
            }
        }

        long long int mx = 0;
        for (int i = 0; i < n; i++) {
            //cout << dp[i] << " ";
            mx = max(mx, dp[i]);
        }
        cout << mx << endl;
    }
    */
    return 0;
}

/*
1 3
1 70
2 4
3 5

4 1 3 2 1 2 5
2 1 3 2 1 2 3
*/


