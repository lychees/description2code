#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

bool arr[1000005]={false};

void markmultiples(ll n,ll limit){
    ll i=2;
    while(i*n<=limit){
        arr[i*n]=true;
        i++;
    }
}
void sieve(int n){
    ll limit=ll(sqrt(n));
    for(ll i=2;i<=limit;i++){
        if(!arr[i]){
            //cout<<i<<endl;
            markmultiples(i,limit);
        }
    }
}

int phi(int n)
{    
    int result = n;   // Initialize result as n
 
    // Consider all prime factors of n and subtract their
    // multiples from result
    for (int p=2; p*p<=n; ++p)
    {
        // Check if p is a prime factor.
        if (n % p == 0)
        {
            // If yes, then update n and result 
            while (n % p == 0)
                n /= p;
            result -= result / p;
        }
    }
 
    // If n has a prime factor greater than sqrt(n)
    // (There can be at-most one such prime factor)
    if (n > 1)
        result -= result / n;
    return result;
}

int main()
{
	arr[0]=true;
    arr[1]=true;
    
    sieve(1000005);
	
	int t;
	scanf("%d",&t);
	ll n;
	while(t--){
		scanf("%lld",&n);
		int res = phi(n);
	
		if (arr[res]==false)
			cout<<"Correct\n";
		else
			cout<<"Incorrect\n";
	}
	return 0;
}
