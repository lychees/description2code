#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <vector>
#include <string>
using namespace std;

typedef unordered_map<string , vector<int> > M;

int main()
{
	int N,Q,n,i,j;
	M H;
	string S;
	vector<int>::iterator l;
	cin >> N;
	for(n=1;n<=N;n++)
	{
		cin >> S;
		for(i=0;i<S.size();i++)
		{
			for(j=S.size()-i;j>0;j--)
			{
				H[S.substr(i,j)].push_back(n);
			}
		}
	}
	for(M::iterator m = H.begin();m!=H.end();m++)
	{
		l = unique((*m).second.begin(),(*m).second.end());
		(*m).second.erase(l,(*m).second.end());
	}
	cin >> Q;
	while(Q--)
	{
		cin >> i >> j >> S;
		cout << 
			upper_bound(H[S].begin(),H[S].end(),j)-lower_bound(H[S].begin(),H[S].end(),i)
		<< endl;
	}
    return 0;
}
