#include <bits/stdc++.h>
using namespace std;
vector <int> s;
void makeSieve(int n){
	s.resize(n+1,-99);
	s[0] = s[1] = 1;
	for(int i=2;i<n+1;i++){
		for(int j=2;j*i<n+1;j++){
			s[i*j] = 1;
		}
	}
}
int main() {
	int n;
	cin>>n;
	vector<long long int> v;
	vector<long long int>dp(n,0);
	long long int temp;
	makeSieve(n);
	for(int i=0;i<n;i++){
		cin>>temp;
		v.push_back(temp);
	}
	for(int i=1;i<n;i++){
		v[i] = v[i-1] + v[i];
	}
	int i,j;
	if(n==0||n==1){
		cout<<0<<endl;
		return 0;
	}
	long long int maxm;
	for(i=n-2;i>0;i--){
		maxm = 0;temp=0;
		for(j=i;j<n;j++){
			if(s[j-i+1]==-99){
				temp = v[j]-v[i-1];
				if(j+2<n){
					temp+=dp[j+2];
				}
				temp = max(temp,dp[i+1]);	
				if(temp>maxm){
					maxm = temp;
				}
			}
		}
		dp[i] = maxm;
	}
	//i=0 case
	maxm = 0;temp=0;
	for(j=i;j<n;j++){
		if(s[j-i+1]==-99){
			temp = v[j];
			if(j+2<n){
				temp+=dp[j+2];
			}
			temp = max(temp,dp[i+1]);
			if(temp>maxm){
				maxm = temp;
			}
		}
	}
	dp[i] = maxm;
	cout<<maxm<<endl;
	return 0;
}