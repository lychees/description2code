def fx(c,i,j,l1,l2):
 #print 'input of fx =',c,i,j,d
 if (i,j) in d:return d[(i,j)]
 #print l1,i,l2,j
 if i!=l1:
  if j!=l2:
   if c[i+1][j]>c[i][j]:
    if c[i][j+1]>c[i][j]:
     x= fx(c,i+1,j,l1,l2)
     y= fx(c,i,j+1,l1,l2)
     if x>y:
      d[(i+1,j)]=fx(c,i+1,j,l1,l2)
      d[(i,j)]=1+d[(i+1,j)]
      return d[(i,j)]
     else:
      d[(i,j+1)]=fx(c,i,j+1,l1,l2)
      d[(i,j)]=1+d[(i,j+1)]
      return d[(i,j)]
    else:
     d[(i+1,j)]=fx(c,i+1,j,l1,l2)
     d[(i,j)]=d[i+1,j]+1
     return d[(i,j)]
   else:
    if c[i][j+1]>c[i][j]:
     d[(i,j+1)]=fx(c,i,j+1,l1,l2)
     d[(i,j)]=d[i,j+1]+1
     return d[(i,j)]
    else:
     d[(i,j)]=1
     return d[(i,j)]
  else:
   if c[i+1][j]>c[i][j]:
     d[(i+1,j)]=fx(c,i+1,j,l1,l2)
     d[(i,j)]=d[i+1,j]+1      
     return d[(i,j)]
   else:
    d[i,j]=1
    return d[(i,j)]
 else:
  if j!=l2:
   if c[i][j+1]>c[i][j]:
    d[(i,j+1)]=fx(c,i,j+1,l1,l2)
    d[(i,j)]=d[i,j+1]+1
    return d[(i,j)]
   else:
    d[(i,j)]=1
    return d[(i,j)]     
  else:
   d[(i,j)]=1
   return d[(i,j)]




for kldx in range(int(raw_input())):
 a = map(int,(raw_input()).split())
 d={}
 c=[]
 for ksa in range(a[0]):
  c.append(map(int,(raw_input()).split()))
 print fx(c,0,0,a[0]-1,a[1]-1)