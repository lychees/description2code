



#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
using namespace std;
#define MAX 100010
#define MOD 1000000007
long long vis[MAX];
long long total[MAX];
long long  countn=0;
long long fact[MAX];
long long ans=1;
vector<long long>v[MAX];
 void cfact()
 {
     fact[0]=1,fact[1]=1;
     for(long long i=2;i<MAX;i++)
     {
         fact[i]=fact[i-1]*i;
         //cout<<fact[i]<<" ";
         fact[i]=fact[i]%MOD;
     }
 }

long long  dfs(long long node)
{
    total[countn]++;
    //cout<<"node "<<node <<" countn "<<countn<<" total[countn] "<<total[countn]<<endl;
    vis[node]=1;
   // cout<<" v[node].size() "<<v[node].size()<<endl;
    for(long long i=0;i<v[node].size();i++)
    {
        if(!vis[v[node][i]])
        dfs(v[node][i]);
    }
}
int main()
{
    cfact();
memset(vis,0,sizeof(vis));
memset(total,0,sizeof(total));
long long int n,k,i;
cin>>n>>k;

while(k--)
{
   long long  a,b;
    cin>>a>>b;
    v[a].push_back(b);
    v[b].push_back(a);

}
for(i=0;i<n;i++)
{
    if(!vis[i])
    {dfs(i);
    countn++;}
}
//cout<<"countn "<<countn<<endl;
//cout<<fact[2]<<endl;
for(long long j=0;j<countn;j++)
{
    ans*=fact[total[j]];
    //cout<<" total[j] "<<total[j] <<" ans of fact "<< ans <<endl;
   // cout<<" ans "<<ans<<endl;
    ans=ans%MOD;
}
cout<<ans<<endl;
    return 0;
}
