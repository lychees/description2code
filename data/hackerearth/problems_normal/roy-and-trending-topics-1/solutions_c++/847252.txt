#include <iostream>
#include <map>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <utility>
using namespace std;
int main() {
	int N;
	map < int, long long > scoreMap;
	vector<std :: pair <long long, int> > scoreDiffMap;
	cin >> N;
	for (int i = 0; i < N; i++) {
		int ID, Z, P, L, C, S;
		scanf("%d %d %d %d %d %d", &ID, &Z, &P, &L, &C, &S);
		long long score = P * 50L + L * 5L + C * 10L + S * 20L;
		long long scoreDiff = score - Z;
		scoreMap[ID] = score;
		scoreDiffMap.push_back(std::make_pair(scoreDiff,ID));
	}
	sort(scoreDiffMap.begin(), scoreDiffMap.end());
	reverse(scoreDiffMap.begin(), scoreDiffMap.end());
	for (int i = 0 ; i < 5 && i < N; i++) {
		cout << scoreDiffMap[i].second << " " << scoreMap[scoreDiffMap[i].second] << endl;
	}
	return 0;
}
