//#define ONLINE_JUDGE
#ifdef ONLINE_JUDGE
#include "bits/stdc++.h"
using namespace std;
#else
#include "header.h"
#include "debug.h"
#endif
#define sz(s) int((s).size())
#define clr(a) memset(a,0,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define rep(i,n) for(int(i)=0; (i)<(n);++(i))
#define ru(i,a,b) for(int(i)=a;(i)<=(b);++(i))
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
typedef long long LL; typedef vector <int> vi; typedef pair<int,int> pii; typedef map <int,int> mii; template <class T> inline T sqr(T x) {return x*x;} inline int ins(int x,int y,int m,int n){return (x>=1&&x<=m&&y>=1&&y<=n);} template <class T> inline T gcd(T a,T b){return (!b? a : gcd(b,a%b));} template <class T> inline T ABS(T x){return ((x)>0?(x):(-(x)));}
const int N = 1 << 4;

inline long long ncr (long long n, long long r) {
  long long ret;
  if (r == 1) ret = n;
  if (r == 2) ret = n * (n - 1) / 2;
  if (r == 3) ret = n * (n - 1) * (n - 2) / 6;
  return ret;
}

int hush [N];
int main() {
  #ifndef ONLINE_JUDGE
    freopen ("in.txt","r",stdin);
  #endif
  cin.sync_with_stdio(0); cin.tie(0);
  string str;
  int n;
  cin >> n;
  int mask = 0;
  mask |= (1 << 2);
  mask |= (1 << 3);
  mask |= (1 << 5);
  mask |= (1 << 7);
  int fuss [8];
  fuss [2] = 0;
  fuss [3] = 1;
  fuss [5] = 2;
  fuss [7] = 3;
  for (int i = 0; i < n; ++i) {
    cin >> str;
    int orr = 0;
    for (char ch : str) {
      int dig = ch - 48;
      if (((1 << dig) & mask) > 0) {
        orr |= (1 << fuss [dig]);
      }
    }
    ++ hush [orr];
  }
  long long ans = 0;
  for (int i = 1; i < (1 << 4); ++i) {
    if (hush [i] >= 3) {
      ans += 1ll * ncr (hush [i], 3);
    }
    for (int j = i + 1; j < (1 << 4); ++j) {
      if (((i & j) > 0) && hush [i] > 0 && hush [j] > 0) {
        if (hush [i] >= 2) ans += 1ll * ncr (hush [i], 2) * ncr (hush [j], 1);
        if (hush [j] >= 2) ans += 1ll * ncr (hush [i], 1) * ncr (hush [j], 2);
      }
      for (int k = j + 1; k < (1 << 4); ++k) {
        if (((i & j & k) > 0) && hush [i] > 0 && hush [j] > 0 && hush [k] > 0) {
          ans += 1ll * hush [i] * hush [j] * hush [k];
        }
      }
    }
  }
  cout << ans << '\n';
}
    
    
      
    
