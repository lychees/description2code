#include <bits/stdc++.h>
#define ll long long 

using namespace std;
ll ways[1<<17],sum[1<<17];
ll solve(int n)
{
	memset(ways,0,sizeof(ways));
	memset(sum,0,sizeof(sum));
	ways[0]=1;
	int y=1<<n;
	for(int mask=0;mask<y;mask++)
	{
		for(int i=0;i<n;i++)
		{
			if(!(mask&(1<<i)))
			{
				if(__builtin_popcount(mask)!=i)
				{
					int bigger=0;
					for(int j=i+1;j<n;j++)
					{
						if(mask&(1<<j))
							bigger++;
					}
					ways[mask|(1<<i)]+=ways[mask];
					sum[mask|(1<<i)]+=sum[mask]+bigger*ways[mask];
				}
			}
		}
	}
	return sum[(1<<n)-1];
}
int main()
{
   	int t;
   	cin>>t;
   	while(t--)
   	{
   		int n;
   		cin>>n;
   		cout<<solve(n)<<"\n";
   	}
    return 0;
}
