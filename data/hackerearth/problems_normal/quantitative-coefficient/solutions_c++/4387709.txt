#include <iostream>
#include<vector>
#include<queue>
#include<utility>
#include<functional>
using namespace std;
#define mod 1000000007
typedef pair<long long, int> p;

long long int prim(int x, bool marked[], vector<p> v[])
{ priority_queue<p, vector<p> , greater <p>> q;
int y;
q.push(make_pair(0, x));
p P;
long long int mincost=1;
while(!q.empty())
{ P=q.top();
q.pop();
x=P.second;
if(marked[x]==false)
{    if(P.first!=0)
	mincost=(mincost*P.first)%mod;
marked[x]=true;}
for(int i=0; i<v[x].size(); i++)
{ y=v[x][i].second;
if(marked[y]==false)
{ q.push(v[x][i]);}}}
return mincost;}
int main()
{
   int t, n, m, a, b;
   long long int w;
   cin>>t;
   while(t--)
   { cin>>n>>m;
   bool marked[n+1];
   std::fill_n(marked, n+1, false);
   vector <p> v[n+1];
   for(int i=0; i<m; i++)
   { cin>>a>>b>>w;
   v[a].push_back(make_pair(w, b));
   v[b].push_back(make_pair(w, a));}
   cout<<prim(1, marked, v)<<endl;}
    return 0;
}
