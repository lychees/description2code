#include <iostream>
#include<list>
#include<queue>
using namespace std;
void bfs(list<int> g[],int s,int n){
    int d[n+1];
    int d1[n+1];
    for(int i=0;i<n;i++){
        d[i]=100000000;
        d1[i]=0;
    }
    d1[0]=1;
    d[0]=0;
    
    queue <int> q;
    q.push(0);
    while(!(q.empty())){
      int u=q.front();
      q.pop();
       list<int>::iterator i;
       for(i=g[u].begin();i!=g[u].end();i++){
         if(d1[*i]==0){
            d1[*i]=1;
            d[*i]=d[u]+1;
            q.push(*i);
         }
       }


      d1[u]=2;

    }
    int m=0;
    for(int i=1;i<n;i++)
    cout<<d[i]<<endl;
    
    
}
int main()
{
   
    int n;
    cin>>n;
    list<int>graph[n+1];
    int m;
    cin>>m;
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }int s=1;
    bfs(graph,0,n);
    
    
   
    return 0;
}
