n, k = map(int, raw_input().split())
block = map(int, raw_input().split())
dig = map(int, raw_input().split())


ans = 1
for i in range(len(block)):
    # every possible divisor of block[i] upto k digits
    total = (10**k - 1) / block[i] + 1
    # every possible divisor of block[i] that fits in k digits and Most
    # Significant Digit is dig[i]+1
    x2 = ((dig[i]+1)*(10**(k-1))-1)/block[i]
    # every possible divisor of block[i] that fits in k digits and Most
    # Significant Digit is dig[i]
    x1 = (dig[i]*(10**(k-1))-1)/block[i]
    # only the divisors which have dig[i] in their MSD
    startingWithDig = x2-x1

    temp = total-startingWithDig                    # total valid thing
    ans *= temp

mod = 10**9 + 7
print ans % mod
