#include <iostream>
#include <cstdio>
#include <queue>
#include <vector>
#include <cstring>
#define ll long long int

using namespace std;
/*
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <queue>
#include <vector>
#include <iostream>
#define ll long long int
using namespace std;
*/
ll a[1010][1010];
ll visit[1010][1010];
ll  n, m;

ll valid(ll x, ll y) {
	if (x < 0 || x >= n)
		return 0;
	if (y < 0 || y >= m)
		return 0;

	return 1;
}


ll bfs(ll x, ll y) {
	queue<pair<ll, ll> >q;
	q.push(make_pair(x, y));
	visit[x][y] = 1;
	ll ans = 0, p1, p2, i, j;
	pair<ll, ll> p;
	while (!q.empty()) {
		p = q.front();
		q.pop();
		p1 = p.first;
		p2 = p.second;
		ans++;
		for (i = -1; i <= 1 ; i++) {
			for (j = -1; j <= 1; j++) {
				if (valid(p1+i, p2+j)) {
					if (a[p1+i][p2+j] == 1 && visit[p1+i][p2+j] != 1) {
						q.push(make_pair(p1+i, p2+j));
						visit[p1+i][p2+j] = 1;
					}
				}
			}
		}
	}
	return ans;
}


int main()
{
	ll t, i, j, ans, ans1, maxi;
	cin >> t;

	while (t--) {
		maxi = 0;
		ans1 = 0;
		memset(visit, 0, sizeof(visit));
		cin >> n >> m;
		for (i = 0; i < n; i++) {
			for (j = 0; j < m; j++) {
				cin >> a[i][j];
			}
		}

		for (i = 0; i < n; i++) {
			for (j = 0; j < m; j++) {
				if (a[i][j] == 1 && visit[i][j] == 0) {
					ans1++;
				
					ans = bfs(i, j);
					if (ans > maxi) {
						maxi = ans;
					}
				}
			}
		}
		cout << ans1 << " " << maxi << endl;
	}

	return 0;
}



