#include <iostream>
using namespace std;
int dp[155][155][55];
int t,n,a,b,c,sm=0;
int search(int n,int b,int c)
{
	if(n==0) return 0;
	if(dp[n][b][c] != 0) return dp[n][b][c];
	dp[n][b][c]=1<<30;
	int z=sm-8*(::n - n) -5*b - 10*c;
	if(c>=1) dp[n][b][c] = min(dp[n][b][c],search(n-1,b,c-1)+1);
	if(b>=2) dp[n][b][c] = min(dp[n][b][c],search(n-1,b-2,c)+2);
	if(c>=1 && z >= 3) dp[n][b][c] = min(dp[n][b][c],search(n-1,b+1,c-1)+4);
	if(b>=1 && z >= 3) dp[n][b][c] = min(dp[n][b][c],search(n-1,b-1,c)+4);
	if(z >= 8) dp[n][b][c] = min(dp[n][b][c],search(n-1,b,c)+8);
	return dp[n][b][c];
}
int main() {
	//int t,n,a,b,c;
	cin>>t;
	while(t--)
	{
		cin>>n>>a>>b>>c;
		sm = a+5*b+10*c;
		if(8*n > sm) {cout<<"-1\n";continue;}
			for(int i=0;i<155;i++)
			 for(int j=0;j<155;j++)
			  for(int k=0;k<55;k++)
			   dp[i][j][k]=0;
			cout<<search(n,b,c)<<endl;
			
		
	}
}