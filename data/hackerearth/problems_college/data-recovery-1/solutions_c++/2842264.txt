#include <bits/stdc++.h>
#include <stdlib.h>
using namespace std;
long long mod=1e9+7;
 
typedef long long unsigned llu;
typedef long long int lld;
typedef long ld;
#define rep(i,a,n) for(long long int i = (a); i <= (n); ++i)
#define repI(i,a,n) for(int i = (a); i <= (n); ++i)

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld%lld",&a,&b)
#define sc3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scd(a) scanf("%d",&a)
#define scd2(a,b) scanf("%d%d",&a,&b)
#define scd3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("%lf%lf",&a,&b)
#define scf3(a,b,c) scanf("%lf%lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prdL(a) printf("%d\n",a)
#define prdS(a) printf("%d ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a)
#define popcount __builtin_popcountll
#define swap(a,b,t) t=a;a=b;b=t
typedef pair<lld,lld> PA;
 
#define lim 1000003
#define lim2 3003
map<char,lld> M,Mn;
inline lld sqr(lld x) { return x * x; }
// map<lld,lld>::iterator it;
set<PA>::iterator it;
// std::ios::sync_with_stdio(false);
// string S[lim],T[lim];
 
// multiset<lld> S;
set<PA> S;
// string S;
vector<lld> V[lim];
 
// lld dp[lim];
// bool dp[5005][5005];
// priority_queue<PA> Q;
lld A[lim],B[lim],C[lim],ANS[lim];
// lld P[lim],Q[lim],R[lim];
// char S[lim];


int main(){
	// std::ios::sync_with_stdio(false);
    lld T,i,j,k,l,r,s,a,b,c,d,w,x,y,v,z,m,n,t,p,q,curr,sum,ans,pos,val,secondMin,countA,indicator;
    sc(n);
    rep(i,0,n-1){
    	sc(k);
    	sc(A[0]);
    	B[A[0]]=1;
    	rep(j,1,k-1){
    		sc(A[j]);
    		B[A[j]]=1;
    		C[A[j]]++;
    		V[A[j-1]].pb(A[j]);
    	}
    }
    rep(i,0,lim-1){
    	if(B[i]==1){
    		S.insert(mp(C[i],i));
    	}
    }
    b=0;
//    for(it=S.begin();it!=S.end();it++){
//    	PA po=*it;
//    	printf("%lld(%lld) ",po.ss,po.ff);
//    }
//    printf("\n");
    while(S.size()!=0){
    	PA po;
    	po=*(S.begin());
    	S.erase(po);
//    	for(it=S.begin();it!=S.end();it++){
//    		PA po=*it;
//    		printf("%lld(%lld) ",po.ss,po.ff);
//	    }
//	    printf("\n");
    	ANS[b++]=po.ss;
    	B[po.ss]=0;
    	for(i=0;i<V[po.ss].size();i++){
    		t=V[po.ss][i];
    		if(B[t]==1){
    			S.erase(mp(C[t],t));
    			C[t]--;
    			S.insert(mp(C[t],t));
    		}
    	}
//    	for(it=S.begin();it!=S.end();it++){
//    		PA po=*it;
//    		printf("%lld(%lld) ",po.ss,po.ff);
//	    }
//	    printf("\n");
    }
    rep(i,0,b-1) prS(ANS[i]);
    return 0;
}