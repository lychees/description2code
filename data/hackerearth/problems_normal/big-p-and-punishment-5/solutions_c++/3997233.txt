#include <bits/stdc++.h>

using namespace std;

int n, f , s , t, tem1, tem2, ans;
vector < int > arr [10000 + 10];
int vis[10000 + 10];


void dfs(int index){

    vis[index] = true;
    ans++;                                              // increase the number of students who sat down.

    for(int i = 0; i < (int) arr[index].size(); i++){   // traverse through student friends

        int friendd = arr[index][i];
        if(!vis[friendd]) dfs(friendd);                 // if this friend hasn't sat down before.

    }
}

int main()
{
    //ios::sync_with_stdio(false);cin.tie(0);

    cin >>       t         ;

    while(t--){

        ans = 0;

        cin >> n >> f >> s;

        for(int i = 0; i <= n; i++){    // clean Data structure for every test

            vis[i] = false;
            arr[i].clear();
        }

        for(int i = 0; i < f; i++){

            cin >> tem1 >> tem2;
            arr[tem1].push_back(tem2);      // push the firends of each student
        }

        for(int i = 0; i < s; i++){

            cin >> tem1;

            if(!vis[tem1]) dfs(tem1);       // if this student hasn't sat down before.
        }

        cout << ans << "\n";
    }

    return 0;
}