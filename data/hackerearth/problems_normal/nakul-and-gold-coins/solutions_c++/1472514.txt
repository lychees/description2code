#include <bits/stdc++.h>
#define MAX 1000000

using namespace std;

bitset <MAX+1> vis;
vector <int> primes;
//Code for FAST INPUT :)
template <typename T>
inline void fi(T *a)
{
register char c=0;
while (c<33) c=getchar();//_unlocked();
*a=0;
int tmp = 0;
while (c>33)
{
if ( c == 45 ) tmp = 1;
else *a=*a*10+c-'0';
c=getchar();//_unlocked();
}
if ( tmp == 1 ) *a = 0-(*a);
}


void pre()
{
	for ( int i = 3; i <= 1000; i += 2 ) {
		if ( vis[(i-3)>>1] ) continue;
		for ( int j = i*i; j <= MAX; j += 2*i ) {
			vis[(j-3)>>1] = true;
		}
	}
	primes.push_back(2);
	for ( int i = 0; i < MAX/2-1; i++ ) {
        if ( !vis[i] ) primes.push_back(2*i+3);
	}
	return;
}

int main()
{
	int t;
	pre();
	fi(&t);
	while ( t-- ) {
		int a,b;
		fi(&a), fi(&b);
		long long ans = 0;
		for ( int i = 0; i < primes.size() && primes[i] <= b; i++ ) {
            int lef = a/primes[i];
            if ( a%primes[i] != 0 ) lef++;
            lef = max(lef, primes[i]+1);
            int righ = b/primes[i];
            if ( righ < lef ) continue;

            ans += upper_bound(primes.begin(),primes.end(),righ) - lower_bound(primes.begin(),primes.end(),lef);
		}
		cout << ans << endl;
	}
	return 0;
}
