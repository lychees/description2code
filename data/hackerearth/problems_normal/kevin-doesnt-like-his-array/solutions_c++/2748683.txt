#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define inrep int t;cin>>t; while(t--)
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
int main() {
    ios_base::sync_with_stdio ( false );
    int n;
    cin>>n;
    vi a ( n );
    cin>>a;
    map<int,int> occ;
    int last=a[0];
    reu ( i,1,n ) {
        if ( a[i]==last ) occ[a[i]]++;
        last=a[i];
    }
    if ( occ.empty() ) {
        cout<<"0\n";
        return 0;

    }
    int s=0, maxv=-1,maxn=-1;
    for ( pii p: occ ) {
        s+=p.second;
        if ( p.second>maxv ) {
            maxv=p.second;
            maxn=p.first;
        }
    }
    if ( maxv>s-maxv ) {
        int pairs=s-maxv;
        int single=maxv-pairs;
        int found=0;
        last=a[0];
        reu ( i,1,n ) {
            if ( a[i]!=last &&a[i]!=maxn &&last!=maxn ) found++;
            last=a[i];
        }
        if(a[0]!=maxn)found++;
        if(a.back()!=maxn)found++;
        if ( found>=single ) cout<<pairs+single<<endl;
       else cout<<"-1\n";

    } else {
        cout<<s/2+s%2<<endl;
    }
}
