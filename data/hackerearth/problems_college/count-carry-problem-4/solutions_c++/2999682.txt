#include<bits/stdc++.h>

#define PB push_back
#define MP make_pair
#define F first
#define S second

#define RI(a) scanf("%d",&a);
#define RIL(a) scanf("%lld",&a);
#define PI(a) printf("%d\n",a);
#define PIL(a) printf("%lld\n",a);

#define SZ(a) (int)(a.size())

#define SET(a,b) memset(a,b,sizeof(a))

#define TR(a,t) for(__typeof(a.begin()) t=a.begin();t!=a.end();t++)

#define REP(i,l,h) for(int i=(l); i<=(h);i++)
#define REPD(i,h,l) for(int i=(h);i>=(l);i--)

#define ALL(a) a.begin(),a.end()

#define DRT()  int t; cin>>t; while(t--)

#define PRSNT(a,e) (a.find(e) != a.end())

#define MINH priority_queue<int, vector<int>, greater<int> >

#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define N 100001
#define MOD 1000000007

typedef long long LL;

using namespace std;
string a,b;
int carr,cnt, l,r;
int main()
{
  DRT() {
    carr = 0;
    cnt = 0;
    cin>>a>>b;
    l = SZ(a);
    r = SZ(b);
    while(l && r) {
      if(carr + a[l-1]-'0' + b[r-1]-'0' > 9) {
        cnt++;
        carr = (a[l-1]-'0' + b[r-1]-'0' + carr)/10;
      }
      else carr = 0;
      l--;
      r--;
    }
    if(cnt == 0) cout<<"No carry operation\n";
    else if(cnt == 1) cout<<"1 carry operation\n";
    else cout<<cnt<<" carry operations\n";
  }
  return 0;
}
