#include <bits/stdc++.h>

using namespace std;

#define ll long long

#define rnge 1e9

ll dish[1000010];
ll pos[1000010];

bool check(int mid, int n, int m)                //binary_search for zero time
{
    int x, y;
    x = y = 0;
    while (x < n && y < m)
    {
        if(abs(pos[x] - dish[y]) <= mid) 
        {
            x++;
            y++;
        }
        else 
         y++;
    }
    if(x == n) 
     return true;
    return false;
}

ll solve(int n, int m)                         // binary_search for zero time.
{
    int right = rnge;
    int left = 0;
    while (left < right) 
    {
        int mid = (left + right)/2;
        if(check(mid, n, m)) 
         right = mid;
        else 
         left = mid + 1;
    }
    return left;
}

int main()
{

    int t;
    scanf("%d", &t);
    while(t--)
    {
        int n, m;
        scanf("%d%d", &n, &m);
        for (int i = 0; i < n; i++) 
        {
            scanf("%lld", &pos[i]);
        }
        for (int i = 0; i < m; i++)
        {
            scanf("%lld", &dish[i]);
        }
        sort(pos, pos + n);                    
        sort(dish, dish + m);
        cout << solve(n, m) << endl;
    }
    return 0;
}