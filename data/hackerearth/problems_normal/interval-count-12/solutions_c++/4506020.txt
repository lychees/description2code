#include<iostream>
#include<cmath>
#include<cstring>
#include<string>
#include<bitset>
#include<assert.h>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<limits.h>
#include<stack>
#include<stdio.h>
#include<queue>
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define mod 1000000007 // 10**9 + 7
#define INF 1e9
#define FOR(i,a,b) for(int (i) = (a); (i) < (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a)-1; (i) >= (b); --(i))
#define CLEAR(a) memset((a),0,sizeof(a))
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define rrep(i, b, a) for (int i = b; i > a; i--)
#define all(v) v.begin(), v.end()
#define GETCHAR getchar_unlocked
#define pi(n) printf("%d\n",n)
#define pll(n) printf("%lld\n",n)
#define rk() int t; scanf("%d",&t); while(t--)
using namespace std;
const double pi = acos(-1.0);
//freopen("in","r",stdin);
//freopen("out","w",stdout);
//snprintf(buff, sizeof(buff), "%d", a);
const int er[8] = {-1,-1,0,1,1,1,0,-1};
const int ec[8] = {0,1,1,1,0,-1,-1,-1};
const int fr[4] = {-1,1,0,0};
const int fc[4] = {0,0,1,-1};
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vec;
typedef vector<pii> vpii;
ll po(ll a,ll p)
{ll ret = 1;while(p){if(p&1)ret = (ret*a)%mod;a=(a*a)%mod;p=p>>1;}return ret%mod;}
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define sqrt(x) sqrt(abs(x))
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
int n;
int x[100];
ll l, r;
ll getans(int mask){
	ll val = 1;
	double dval = 1;
	rep(i,n){
		if(mask & (1 << i)){
			val *= x[i];
			dval *= x[i];
		}
	}
	if(dval>r*2)return 0;
	return r/val-(l-1)/val;
}
int main(){
    
   // freopen("samp.txt","r",stdin);
   // freopen("sampout.txt","w",stdout);
    rk(){
		cin>>n>>l>>r;
		assert(1<=n && n<=10);
		assert(1<=l && l<=1e18);
		assert(1<=r && r<=1e18);
		rep(i,n){
			cin>>x[i];
			assert(1<x[i] && x[i]<1000);
		}
		ll ans = 0;
		for(int i=1; i<(1<<n); i++){
			if(__builtin_popcount(i)%2)
				ans+= getans(i);
			else
				ans-= getans(i);
		}
		cout<<ans<<endl;
	}
	return 0;
}