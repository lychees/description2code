#include <iostream>
using namespace std;
bool bs(int A[], int length, int item) 
{
    int left = 0, right = length - 1, mid;
    while (left <= right) 
    {
        mid = left + (right - left) / 2;        // finding middle index
        if (A[mid] == item)
            return true;                // item found
        else if (item < A[mid])
            right = mid - 1;            // recurse on left sub-array
        else
            left = mid + 1;             // recurse on right sub-array
    }
    return false;                        // item not found
}
int main()
{
    long long t,i,k,l,m,n;
    cin>>t;
    while(t--)
    {
    		cin>>n;
    		
    		long long a[n],b[n],max=0;
    		for(i=0;i<n;i++)
    		cin>>a[i];
    		for(i=0;i<n;i++)
    		cin>>b[i];
    		for(i=0;i<n;i++)
    		{
    			for(k=i;k<n;k++)
    			if(b[k]-a[i]>=0)
    			{
    				if(k-i>max)
    				max=k-i;
    			}
    			else break;
    		}
    		cout<<max<<endl;	
    		}
    		
    return 0;
}
