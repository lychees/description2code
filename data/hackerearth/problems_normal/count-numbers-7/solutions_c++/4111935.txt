#include <bits/stdc++.h>
using namespace std;

vector<long long> pr;
long long solve(long long x)
{
    long long res,product;
    int n,cnt;
    res = 0;
    n = pr.size();
    for (int mask=1;mask<(1<<n);mask++)
    {
        product = 1;
        for (int j=0;j<n;j++)
        {
            if (mask&(1<<j)) product*=pr[j];
        }
        cnt = __builtin_popcount(mask);
        if (cnt&1) res+=(x/product); else res-=(x/product);
    }
    return res;
}

int main()
{
    int K,T,x;
    long long A,B;
    cin>>K>>T;

    for (int i=0;i<K;i++)
    {
        cin>>x;
        pr.push_back(x);
    }
    while (T--)
    {
        cin>>A>>B;
        cout<<solve(B)-solve(A-1)<<endl;
    }

    return 0;
}
