#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007

typedef long long ll;

ll a, b, c, d, e, f, f0, f1, g0, g1;
ll m[35][6][6];
ll v[10], w[10];

void mount() {
    m[1][0][0] = a;
    m[1][1][0] = b;
    m[1][2][1] = 1;
    m[1][2][2] = c;
    m[1][3][2] = d;
    m[1][0][3] = 1;
    m[1][0][4] = 1;
    m[1][4][4] = 1;
    m[1][2][5] = 1;
    m[1][5][5] = 1;
    for (int z = 2; z < 33; z++) {
        for (int i = 0; i < 6; i++) {
            for (int j = 0; j < 6; j++) {
                for (int k = 0; k < 6; k++) {
                    m[z][i][j] += m[z-1][i][k] * m[z-1][k][j];
                    m[z][i][j] += MOD;
                    m[z][i][j] %= MOD;
                }
            }
        }
    }
}

void mult(int p) {
    for (int i = 0; i < 6; i++) {
        w[i] = 0;
        for (int j = 0; j < 6; j++) {
            w[i] += m[p][j][i] * v[j];
            w[i] += MOD;
            w[i] %= MOD;
        }
    }
    for (int i = 0; i < 6; i++) {
        v[i] = w[i];
    }
}

int main() {
    scanf("%lld %lld %lld %lld %lld %lld %lld %lld %lld %lld", &a, &b, &c, &d, &e, &f, &f0, &f1, &g0, &g1);
    mount();
    int q;
    scanf("%d", &q);
    while (q--) {
        ll k;
        scanf("%lld", &k);
        v[0] = f1;
        v[1] = g0;
        v[2] = g1;
        v[3] = f0;
        v[4] = f0;
        v[5] = g0;
        int p = 1;
        while (k) {
            if (k % 2) {
                mult(p);
            }
            k /= 2;
            p++;
        }
        ll ans = v[4] * e + MOD;
        ans %= MOD;
        ans += v[5] * f + MOD;
        ans %= MOD;
        printf("%lld\n", ans);
    }
    return 0;
}
