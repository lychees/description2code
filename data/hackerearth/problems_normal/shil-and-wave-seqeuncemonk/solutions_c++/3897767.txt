#include<iostream>
#include<algorithm>

using namespace std;

int const N = 1e5 + 41;
int const MOD = 1e9 + 7;

int F[2][N], a[N], n, ans;

void upd(int id, int x, int v){
	while(x < N){
		F[id][x] += v;
		F[id][x] %= MOD;
		x |= (x+1);
	}
}

int get(int id, int x){
	int ret = 0;
	while(x >= 0){
		ret += F[id][x];
		ret %= MOD;
		x = (x&(x+1))-1;
	}
	return ret;
}

int main(){
	scanf("%d",&n);
	for(int i=0;i<n;++i){
		int cur0, cur1, v;
		scanf("%d",&v);
		
		cur0 = get(1, N-1) - get(1, v);
		cur0 %= MOD;
		if(cur0 < 0){
			cur0 += MOD;
		}
		ans += cur0;
		ans %= MOD;

		cur1 = get(0, v-1);
		ans += cur1;
		ans %= MOD;

		upd(0, v, cur0+1);
		upd(1, v, cur1+1);
	}
	printf("%d\n",ans);


	return 0;
}