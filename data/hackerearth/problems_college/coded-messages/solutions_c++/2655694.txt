#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=30;
const int mxv=2e4+10;
//const int mxv=20;

char s[mx];
int val[7]={1,5,10,50,100,500,1000};

string f[mxv];
string ToRoman(int number){
   if (number < 1) return "";            
   if (number >= 1000) return "G" + ToRoman(number - 1000);
   if (number >= 900) return "EG" + ToRoman(number - 900); 
   if (number >= 500) return "F" + ToRoman(number - 500);
   if (number >= 400) return "EF" + ToRoman(number - 400);
   if (number >= 100) return "E" + ToRoman(number - 100);            
   if (number >= 90) return "CE" + ToRoman(number - 90);
   if (number >= 50) return "D" + ToRoman(number - 50);
   if (number >= 40) return "CD" + ToRoman(number - 40);
   if (number >= 10) return "C" + ToRoman(number - 10);
   if (number >= 9) return "AC" + ToRoman(number - 9);
   if (number >= 5) return "B" + ToRoman(number - 5);
   if (number >= 4) return "AB" + ToRoman(number - 4);
   if (number >= 1) return "A" + ToRoman(number - 1);
   return "";
}
int main(){
   vector<pair<int,string> >ve;
   for(int i=0;i<7;i++)ve.push_back(make_pair(val[i],string(1,'A'+i)));
   for(int i=0;i<7;i++){
      for(int j=0;j<i;j++){
         int v=val[i]-val[j];
         string x=string(1,'A'+j)+string(1,'A'+i);
         ve.push_back(make_pair(v,x));
      }
   }
   sort(ve.begin(),ve.end());
   //   for(int i=0;i<int(ve.size());i++){ cout<<ve[i].first<<"->"<<ve[i].second<<endl; }
   int cnt=ve.size();
   f[0]="";
   for(int i=1;i<mxv;i++){
      f[i]="";
      for(int j=cnt-1;j>=0;j--){
         if(ve[j].first<=i){
            string bet=ve[j].second+f[i-ve[j].first];
            if(f[i]=="" || bet.size()<f[i].size()){
               f[i]=bet;
            }
         }
      }
   }
//   for(int i=1;i<100;i++)cout<<i<<"->"<<f[i]<<endl;
   int t;
   /*
   cout<<f[956]<<endl;
   cout<<f[123]<<endl;
   cout<<f[995]<<endl;
   cout<<f[983]<<endl;
*/

   scanf("%d",&t);
   while(t--){
      scanf("%s",s);
      int n=strlen(s);
      int v=val[s[0]-'A'];
      char bef=s[0];
      for(int i=1;i<n;i++){
         if(s[i]<=bef){
            v+=val[s[i]-'A'];         
            bef=s[i];
         }
         else{
            v+=val[s[i]-'A'];
            v-=2*val[bef-'A'];
            bef='Z';
         }
      }
      //      cout<<"v="<<v<<endl;
//      cout<<f[v]<<'\n';
      cout<<ToRoman(v)<<endl;
   }
   return 0;
}

