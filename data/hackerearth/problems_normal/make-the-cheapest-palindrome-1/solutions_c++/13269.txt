#include<stdio.h>
#include<iostream>

//#define DEBUG

#ifdef DEBUG
 #define debug(str) std::cout<<str<<" Line:"<<__LINE__<<std::endl
#endif
#ifndef DEBUG
 #define debug(str) /* Nothing*/
#endif
#define FOR(i,n) int i;for(i=0;i<n;i++)
#define LESS_OF(A,B) (A>=B?B:A)

int length(const char* string)
{
     int length=0;
     for(length=0;string[length]!='\0';length++);
     return length;
}

int main()
{
  int iTestCases,aCost,bCost,iLessCost,iCost=0,iLength,iRevCounter;
  char palindrom[10001];
  scanf("%d",&iTestCases);
  FOR(i,iTestCases)
  {
    iCost=0;
    scanf("%s%d%d",&palindrom,&aCost,&bCost);
    iLessCost=LESS_OF(aCost,bCost);
    iLength=length(palindrom);
    iRevCounter=iLength-1;
    FOR(i,iLength/2)
    {
        debug("Palindrome["<<i<<"]="<<palindrom[i]<<" & Palindrome["<<iRevCounter<<"]="<<palindrom[iRevCounter]);
        if(palindrom[i]=='/')
        {
            if(palindrom[iRevCounter]=='/') iCost+=iLessCost*2;
            if(palindrom[iRevCounter]=='a') iCost+=aCost;
            if(palindrom[iRevCounter]=='b') iCost+=bCost;
        }
        if(palindrom[i]=='b')
        {
            if(palindrom[iRevCounter]=='/') iCost+=bCost;
            if(palindrom[iRevCounter]=='a') {iCost=-1;break;}
        }
         if(palindrom[i]=='a')
        {
            if(palindrom[iRevCounter]=='/') iCost+=aCost;
            if(palindrom[iRevCounter]=='b') {iCost=-1;break;}
        }
        debug("Cost ="<<iCost);
      iRevCounter--;
    }
    printf("%d\n",iCost);
  }
}


