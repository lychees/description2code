#include<bits/stdc++.h>
using namespace std;
#define INF 100005
int n,m;
int dist[105];
vector<pair<int,pair<int,int> > >vec;
void business(int x)
{
    int p,q;
    for(p=0;p<n-1;p++)
    {
        for(q=0;q<m;q++)
        {
            int weight=vec[q].first;
            int src=vec[q].second.first;
            int dest=vec[q].second.second;
            if(dist[src]!=INF && dist[dest]>dist[src]+weight)
                dist[dest]=dist[src]+weight;
        }
    }
    for(p=0;p<m;p++)
    {
        int weight=vec[p].first;
        int src=vec[p].second.first;
        int dest=vec[p].second.second;
        if(dist[src]!=INF && dist[dest]>dist[src]+weight)
        {
            cout<<"Yes\n";
            return;
        }
    }
    cout<<"No\n";
    return;
}
int main()
{
    ios::sync_with_stdio(false);
    int t,i,x,y,w;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        for(i=0;i<m;i++){
            cin>>x>>y>>w;
            vec.push_back(make_pair(-w,make_pair(x,y)));
        }
        for(i=1;i<=n;i++)
            dist[i]=INF;
        dist[1]=0;
        business(1);
        vec.clear();
    }
    return 0;
}
