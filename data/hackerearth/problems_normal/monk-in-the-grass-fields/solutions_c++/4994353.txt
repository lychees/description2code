#include <iostream>
#include <cstring>
#define N 201
using namespace std;

int matrix[N][N];
int rowSum[N];
int colSum[N];

int s_row[401];
int s_col[401];

int main()
{
    int t;
    cin >> t;
    while(t--)
    {
    	int n, k;
    	cin >> n >> k;
    	memset(rowSum, 0, sizeof rowSum);
    	memset(colSum, 0, sizeof colSum);
    	memset(s_row, 0, sizeof s_row);
    	memset(s_col, 0, sizeof s_col);
    	
    	for(int i = 0; i < n; i++)
    	{
    		for(int j = 0; j < n; j++)
    		{
    			cin >> matrix[i][j];
    			rowSum[i] += matrix[i][j];
    			colSum[j] += matrix[i][j];
    		}
    	}
    	for(int i = 1; i <= k; i++)
    	{
    		int row_i = 0;
    		for(int j = 0; j < n; j++)
    		{
    			if(rowSum[j] < rowSum[row_i])
    				row_i = j;
    		}
    		s_row[i] = rowSum[row_i] + s_row[i-1];
    		rowSum[row_i] += n;
    	}
    	
    	for(int i = 1; i <= k; i++)
    	{
    		int col_i = 0;
    		for(int j = 0; j < n; j++)
    		{
    			if(colSum[j] < colSum[col_i])
    				col_i = j;
    		}
    		s_col[i] = colSum[col_i] + s_col[i-1];
    		colSum[col_i] += n;
    	}
    	int ans = 1e8;
    	for(int i = 0; i <= k; i++)
    		ans = min(ans, s_row[i] + s_col[k-i] + i*(k - i));
    	
    	cout << ans << endl;
    	
    	
    }
}
