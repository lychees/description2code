#include <iostream>
using namespace std;
int ar[1000+10];
int val[1000+10];
int dp[1000+10][1000+10];
long long calans(int w,int n)
{
	//cout<<"inside cal ans"<<w<<n<<endl;
	if(dp[n][w]!=-1)
	   return dp[n][w];
	if(n==0 or w==0)
	   return 0;
	if(ar[n-1]>w)
	   return (dp[n][w]=calans(w,n-1));
	   
	   return (dp[n][w]=max(calans(w-ar[n-1],n-1)+val[n-1],calans(w,n-1)));
}

int main()
{
   int t;
   cin>>t;
   while(t--)
   {
   	int n;
   	int w;
   	cin>>n>>w;
   	for(int i=0;i<n;i++)
   	{
   		cin>>ar[i];
   	}
   	for(int i=0;i<n;i++)
   	{
   		cin>>val[i];
   	}
   	for(int i=0;i<=n;i++)
   	{
   		for(int j=0;j<=w;j++)
   		    dp[i][j]=-1;
   	}
   
   	cout<<calans(w,n)<<endl;
   
   }
    return 0;
}
