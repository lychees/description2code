#include<algorithm>
#include<cstdio>
#include<cstring>
#include<iostream>
#include<map>
#include<numeric>
#include<queue>
#include<set>
#include<vector>

#define REP(i,n) for(int (i)=0;(i)<(n);(i)++)
#define all(a) (a).begin(),(a).end()
#define sz(a) (a).size()
#define pb push
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

int dp[65][222][222];
int exist[222];
int s;
int f(int rem, int prev, int i){
    if(i == s){
        if(rem >= 0)
            return prev + exist[i];
        else
            return 1000000000;
    }
    if(rem < 0){
        return 1000000000;
    }

    if(dp[rem][prev][i] != -1) return dp[rem][prev][i];

    int p;

    if(exist[i]){
        if(prev == 0){
            p = f(rem-1, 1, i+1);
        }else{
            p = f(rem, prev+1, i+1);
        }
    }else{
        if(prev == 0){
            p = f(rem, 0, i+1);
        }else p = min(prev + f(rem, 0, i+1), f(rem, prev+1, i+1));
    }

    return dp[rem][prev][i] = p;

}

int main(){
    int t; cin >> t;
    while(t--){

        memset(dp, -1, sizeof dp);
        int m, c;
        cin >> m >> s >> c;
        memset(exist, 0, sizeof exist);

        for(int i = 0; i < c; i++){
                int x;
                cin >> x;
                x--;
                exist[x] = 1;
        }

        cout << f(m, 0, 0) << endl;
    }
    return 0;

}

