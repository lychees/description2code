#include <iostream>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;

int mark[1000005];
int lv[105];
int a[100005];

queue<int> q;
vector<int> le,ri;

int main()
{
	ios::sync_with_stdio(false);
	int t,n,i,j,k,l,r,cur,lev,fl,left,right,ne;
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(i=1;i<=n;i++)
			cin>>a[i];
		
		while(q.size()!=0)
			q.pop();
		
		for(i=0;i<=1000000;i++)
			mark[i]=0;
		for(i=0;i<100;i++)
			lv[i]=0;
		
		le.clear();
		ri.clear();
		ne=1;
		k=1;
		q.push(1);
		while(q.size()!=0)
		{
			cur=q.front();
			q.pop();
			
			if(cur==ne)
			{
				if(mark[ne]!=1)
				{
					ri.push_back(ne);
					mark[ne]=1;
				}
				if(mark[k]!=1)
				{
					le.push_back(k);
					mark[k]=1;
				}
				ne=0;
			}
			
			l=2*cur;
			r=2*cur+1;
			if(a[r]>0)
			{
				q.push(r);
				if(ne==0)
					ne=r;
			}
			if(a[l]>0)
			{
				q.push(l);
				if(ne==0)
					ne=l;
			}
			k=cur;
		}
		
		if(mark[k]!=1)
		{
			le.push_back(k);
			mark[k]=1;
		}

		for(i=0;i<ri.size();i++)
			cout<<a[ri[i]]<<endl;
		for(i=0;i<le.size();i++)
			cout<<a[le[i]]<<endl;
		cout<<endl;
	}
	
    return 0;
}
