#include <bits/stdc++.h>
using namespace std;
long long lim = 999999999;
long long dp[5100][15][15];
long long a[13];
long long p[13];
long long n;
long long coun(long long k)
{
    long long sum = 0;
    while(k&(k-1))
        {

            sum++;
            k = k&(k-1);
        }
    return sum;
}
long long solve(long long done,long long fi,long long sec)
{
    if(dp[done][fi][sec] != -1)
        return dp[done][fi][sec];
    long long pos = __builtin_popcountll(done);
    long long val = (a[fi]^a[sec]);
    if(pos == n)
        return 0;
        long long tmp = lim;
        
    for(long long i = 0;i< n;i++)
    {
        if(!((1<<i)&(done)))
        {
            
            tmp = min(tmp,(val^a[i])*p[pos] + solve((done|(1<<i)),i,fi));
        }
    }
    dp[done][fi][sec] = tmp;
    return tmp;
}
int main()
{
    long long t;
    cin>>t;
    while(t--)
    {
        memset(dp,-1,sizeof(dp));

        cin>>n;


        for(long long i = 0;i< n;i++)
        {
            cin>>a[i];
        }
        for(long long i = 0;i< n;i++)
        {
            cin>>p[i];
        }
    long long ans = lim;
        for(long long i  = 0;i<n;i++)
        {
            for(long long j = 0;j< n;j++)
            {
                if(i == j)
                    continue;
                long long fi = 1<<i;
                long long sec = 1<<j;
                long long done = (fi|sec);
                ans = min(ans,solve(done,i,j));

            }
        }
        cout<<ans<<endl;
    }
}
