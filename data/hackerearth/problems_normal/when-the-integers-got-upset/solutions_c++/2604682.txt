#include <iostream>
#include <algorithm>
#define endl "\n"
using namespace std;

int dp[5000][15][15];

int c[15],p[15];
int t,n;
int nsb(int x)
{
	int c=0;
	while(x)
	{
		x=x&(x-1);
		++c;
	}
	return c;
}

int f(int mask,int fir,int sec)
{
	if(dp[mask][fir][sec]!=-1)
		return dp[mask][fir][sec];
	int ans=1e9,val=c[fir]^c[sec],sb=nsb(mask);
	if(sb==n)
		return 0;
	for(int i=0;i<n;++i)
		if((mask&(1<<i))==0)
		{
			ans=min(ans,(val^c[i])*p[sb]+f(mask|(1<<i),sec,i));
		}
	return dp[mask][fir][sec]=ans;
}
int main()
{
	ios::sync_with_stdio(false);
    cin>>t;
    while(t--)
    {
    	cin>>n;
    	fill(&dp[0][0][0],&dp[0][0][0]+5000*15*15,-1);
    	//fill(**dp,sizeof(dp))
    	for(int i=0;i<n;++i)
    		cin>>c[i];
    	for(int i=0;i<n;++i)
    		cin>>p[i];
    	int ans=1e9;
    	for(int i=0;i<n;++i)
    		for(int j=0;j<n;++j)
    		{
    			if(j==i)
    				continue;
    			int msk=((1<<i)|(1<<j));
    			ans=min(ans,f(msk,i,j));
    		}
    	cout<<ans<<endl;
    }
    return 0;
}
