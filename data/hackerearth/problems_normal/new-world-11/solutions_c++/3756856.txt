#include<bits/stdc++.h>
using namespace std;
long long n;
long long k;
long long bin_search(long long l,long long r,vector<long long> &arr);
long isValid(long long x,vector<long long> &arr);
int main()
{
    int t;
    std::ios::sync_with_stdio(false);
    cin>>t;
    while(t--)
    {
        cin>>n>>k;
        vector<long long> arr(n);
        long long i,j;
        for(i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        long long maxLen=arr[n-1]-arr[0];
        long long ans;
        /*for(i=1;i<=maxLen;i++)
        {
            cout<<"i:"<<i<<":"<<isValid(i,arr)<<"\n";

        }*/
        ans=bin_search(1,maxLen,arr);
        if(isValid(ans,arr)==0)
            ans++;
        cout<<ans<<"\n";
    }
    return 0;
}
long long bin_search(long long l,long long r,vector<long long> &arr)
{
    if(l==r)
        return l;
    else
    {
        long long mid=l+(r-l)/2;
        if(isValid(mid,arr)==1)
        {
            if(l<mid)
                bin_search(l,mid-1,arr);
            else
                return mid;
        }
        else{
            if(mid<r)
                bin_search(mid+1,r,arr);
            else
                return mid;
        }
    }
}
long isValid(long long x,vector<long long> &arr)
{
    long long src,dest,jumps=0;
    src=0;
    while(src<n-1)
    {
        long long tmp=arr[src]+x;
     //   cout<<"tmp:"<<tmp<<" ";
        vector<long long>::iterator it=upper_bound(arr.begin(),arr.end(),tmp);
        if(it==arr.end())
        {
            src=n-1;
            jumps++;
        }
        else
        {
            it--;
            long long dest=it-arr.begin();
         //   cout<<"dest:"<<dest<<"\n";
            if(dest==src)
               return 0;
            else
            {
                src=dest;
                jumps++;
            }
        }
    }
    if(jumps<=k)
        return 1;
    else
        return 0;
}
