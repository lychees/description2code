#include <math.h>
#include <iostream>
#include <map>
#include <vector>
#include <set>
#include <cstring>
#include <algorithm>
#include <stack>
#include <queue>
#include <cstring>
#include <sstream>
#include <stdio.h>
using namespace std;
const int N=100005;
int n;
int q;
int mx,mn;
int a,b;
set<pair<int,int> > s;
set<pair<int,int> > :: iterator it;
class un{
public:
    int p[N];
    int rank[N];
    int cc[N];
    un(int x){
        for(int i=1;i<=x;i++){
            p[i]=i;rank[i]=0;cc[i]=1;
            s.insert(make_pair(1,i));
        }
    }
    int get(int x){
        if(p[x]==x){return x;}
        return p[x]=get(p[x]);
    }
    
    bool merge(int i,int j){
        int x=get(i);
        int y=get(j);
        if(x!=y){
            if(rank[x]>rank[y]){swap(x,y);}
            p[x]=y;
            s.erase(make_pair(cc[x],x));
            s.erase(make_pair(cc[y],y));
            cc[y]+=cc[x];
            s.insert(make_pair(cc[y],y));
            cc[x]=0;
            if(rank[x]==rank[y]){rank[y]++;}
            
        }
        return x!=y;
    }
    
    
    
};
int main(){
    scanf("%d %d",&n,&q);
    un U(n);
   
    while(q--){
        scanf("%d %d",&a,&b);
        U.merge(a,b);
        printf("%d\n",(--s.end())->first-s.begin()->first);
        
        
    }
    
    
    return 0;
}