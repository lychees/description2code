#include<bits/stdc++.h>
#define sd(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define For(n) for(int i=0;i<n;i++)
#define ll long long
#define pii pair<int,int>
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define CLR(x) memset(x,0,sizeof(x));
#define N 1000000000000000000
using namespace std;
ll pw(ll a,ll b){
    if(b==0)
        return 1;
    if(b==1)
        return a;
    ll tmp=pw(a,b/2);
    if(b%2)
        return (((a*tmp))*tmp);
    else
        return (tmp*tmp);

}
long long hcf(long long a,long long b){
	if(!b)
	return a;
	return hcf(b,a%b);
}
/*ll recus(ll n,ll k,bool flag){
    if(n<k)
        return 0;
    if(n==k&&flag)
        return 1;
    if(flag){
        if(k==1){
            return pw(2,n-1);
        }
        if(dp[n-1][k][0]==-1)
            dp[n-1][k][0]=recus(n-1,k,0);
        if(dp[n-1][k][1]==-1)
            dp[n-1][k][1]=recus(n-1,k,1);
        //cout<<n-1<<" "<<k<<" "<<1<<" "<<tmp2<<endl;
        //cout<<n-1<<" "<<k<<" "<<0<<" "<<tmp1<<endl;
        return dp[n-1][k][1]+dp[n-1][k][0]-pw(2,n-1-k)+pw(2,n-k);
    }
    else{
        if(n==1){
            return 0;
        }
        if(k==0)
            return pw(2,n-1);
        if(dp[n-1][k][0]==-1)
            dp[n-1][k][0]=recus(n-1,k,0);
        if(dp[n-1][k][1]==-1)
            dp[n-1][k][1]=recus(n-1,k,1);
        //cout<<n-1<<" "<<k<<" "<<1<<" "<<tmp2<<endl;
        //cout<<n-1<<" "<<k<<" "<<0<<" "<<tmp1<<endl;
        return dp[n-1][k][1]+dp[n-1][k][0];
    }
}*/
ll dp[61]={0};
int main(){
    ios::sync_with_stdio(false);
    int n,k;
    ll num,den,hc;
    cin>>n>>k;
    dp[k]=1;
    for(int i=k+1;i<=n;i++){
        dp[i]=2*dp[i-1]+((ll)1<<(i-k-1));
        if(n-k-1>0)
            dp[i]-=dp[i-k-1];//cout<<curr<<" ";
    }
    num=dp[n];
    den=(ll)1<<n;
    hc=hcf(num,den);
    num/=hc;den/=hc;
    cout<<num<<"/"<<den<<endl;
}

