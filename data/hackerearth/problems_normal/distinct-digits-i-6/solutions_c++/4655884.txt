#include<bits/stdc++.h>
using namespace std;
int bit[13][100001];
int n;
void update(int x,int v,int count_dig)
{
    while(x<=n)
    {
        bit[count_dig][x]+=v;
        x+=x&(-x);
    }
}
int get_sum(int x,int count_dig)
{
    int s=0;
    while(x>0)
    {
        s+=bit[count_dig][x];
        x-=x&(-x);
    }
    return s;
}
int get_dig(long long x)
{
    bool b[13];
    for(int i=0;i<10;++i) b[i]=false;
    while(x)
    {
        b[x%10ll]=true;
        x/=10;
    }
    int c=0;
    for(int i=0;i<10;++i) if(b[i]) c++;
    return c;
}
void sol()
{
    int i,q;
    int x,y;
   long long  z;
    cin>>n;
    long long a[n+1];
    int dig[n+1];
    for(i=1;i<=n;++i) cin>>a[i];
    for(i=1;i<=n;++i)
       {
           q=get_dig(a[i]);
           update(i,1,q);
           dig[i]=q;
           //cout<<dig[i]<<' ';
       }
    cin>>q;
    while(q--)
    {
        cin>>x;
        if(x==0)
        {
            cin>>y>>z;
            update(y,-1,dig[y]);
            a[y]+=z;
            dig[y]=get_dig(a[y]);
            update(y,1,dig[y]);
        }
        else if(x==1)
        {
            cin>>y>>z;
            a[y]=z;

            update(y,-1,dig[y]);
            a[y]=z;
            dig[y]=get_dig(z);
            update(y,1,dig[y]);
        }
        else
        {

            cin>>i>>y>>z;
            cout<<get_sum(y,z)-get_sum(i-1,z)<<endl;
        }
    }

}
int main()
{
    sol();
    return 0;
}
