    
    #include <bits/stdc++.h>
    #include <limits.h>
    using namespace std;
    typedef long long ll;
    typedef pair<int, int> ii;
    typedef vector<ii> vii;
    typedef vector<int> vi;
     
    #define MOD (ll)1000000007
    #define pb 	push_back
    #define EPS 1e-9
    #define FOR(i, n)	for(int i = 0;i < n; i++)
    #define pi(a)   printf("%d\n", a)
    #define all(c)  c.begin(), c.end()
    #define tr(container, it)   for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
    #define gc getchar_unlocked
     
    template <typename T> T gcd(T a, T b){return (b==0)?a:gcd(b,a%b);}
    template <typename T> T lcm(T a, T b){return a*(b/gcd(a,b));}
    template <typename T> T mod_exp(T b, T p, T m){T x = 1;while(p){if(p&1)x=(x*b)%m;b=(b*b)%m;p=p>>1;}return x;}
    template <typename T> T invFermat(T a, T p){return mod_exp(a, p-2, p);}
    template <typename T> T exp(T b, T p){T x = 1;while(p){if(p&1)x=(x*b);b=(b*b);p=p>>1;}return x;}
     
    void si(int &x){
        register int c = gc();
        x = 0;
        int neg = 0;
        for(;((c<48 || c>57) && c != '-');c = gc());
        if(c=='-') {neg=1;c=gc();}
        for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
        if(neg) x=-x;
    }
     
    int main(){
    	int len;
    	si(len);
    	string input;
    	cin>>input;
    	int maxx = 0;
    	int countW = 0, countN = 0;
    	for(int i = 0;i < input.size(); i++){
    		if(input[i] == 'w'){
    			countW++;
    		}else
    			countN++;
    	}
    	maxx = countN + (2*countW);
    	int minn = 0;
    	char output[(int)4e6+5];
    	int j = 0;
    	for(int i= 0;i < input.size(); i++){
    		if(input[i]=='w'){
    			output[j] = 'v';
    			j++;
    			output[j] = 'v';
    			j++;
    		}else{
    			output[j] = input[i];
    			j++;
    		}
    	}
    	output[j] = '\0';
    	int i;
    	for(i = 0;i < j-1; i++){
    		if(output[i] == 'v' && output[i+1] == 'v'){
    			minn++;
    			i++;
    		}else
    			minn++;
    	}
    	if(i == j-1)
    		minn++;
    	cout<<minn<<' '<<maxx<<endl;
    	return 0;
    }