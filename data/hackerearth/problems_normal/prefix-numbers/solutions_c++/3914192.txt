#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define MEMS(a,b) memset((a),(b),sizeof(a))
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define LL long long
#define U unsigned

int getTo(int a, int b, int c) {
	return c + b * 9 + a * 36;
}

vector<vector<U int> > mul(vector<vector<U int> > &a, vector<vector<U int> > &b) {
	vector<vector<U int> > res = a;
	FOR(i,0,a.size()) {
		FOR(j,0,a.size()) {
			res[i][j] = 0;
			FOR(k,0,a.size()) {
				if ((a[i][k]) && (b[k][j]))
					res[i][j] += a[i][k]*b[k][j];
			}
		}
	}
	return res;
}

vector<vector<U int > > A,b;

vector<vector<U int> > r(LL k) {
	if (k == 1)
		return A;
	vector<vector<U int> > res = r(k/2);
	res = mul(res,res);
	if (k&1)
		res = mul(res,A);
	return res;
}

void go(int a, int b, int c, int dig) {
	int from = getTo(a,b,c);
	int na = (a*10+dig)%7;
	int nb = (b*10+dig)%4;
	int nc = (c*10+dig)%9;
	int to = getTo(na,nb,nc);
	if ((dig == 1) || (dig == 2) || (dig == 5)) {
		A[from][to] = 1;
		return;
	}
	if (dig == 3) {
		if (nc%3 == 0)
			A[from][to] = 1;
		return;
	}
	if (dig == 4) {
		if (nb%4 == 0)
			A[from][to] = 1;
		return;
	}
	if (dig == 6) {
		if ((nb%2 == 0) && (nc % 3 == 0))
			A[from][to] = 1;
		return;
	}
	if (dig == 7) {
		if (na == 0)
			A[from][to] = 1;
		return;
	}
	if (dig == 8) {
			if (b == 0)
				A[from][to] = 1;
			return;
		}
	if (dig == 9) {
			if (nc == 0)
				A[from][to] = 1;
			return;
		}
}



int main()
{
#ifdef Fcdkbear
        freopen("in.txt", "r", stdin);
        //freopen("out.txt", "w", stdout);
        double beg = clock();
#endif

        A.resize(9*4*7);
        FOR(i,0,A.size()) {
        	A[i].resize(7*4*9,0);
        }
        FOR(i,0,7) {
        	FOR(j,0,4) {
        		FOR(k,0,9) {
        			FOR(dig,1,10) {
        				go(i,j,k,dig);
        			}
        		}
        	}
        }
        /*FOR(i,0,A.size()) {
        	FOR(j,i+1,A.size()) {
        		if (A[i] == A[j])
        			cout<<i<<" "<<j<<endl;
        	}
        }*/
        LL n;
        cin>>n;
        b = r(n);
        U int res = 0;
        FOR(i,0,b.size())
        	res += b[0][i];
        cout<<res<<endl;

#ifdef Fcdkbear
        double end = clock();
        fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
        return 0;
}
