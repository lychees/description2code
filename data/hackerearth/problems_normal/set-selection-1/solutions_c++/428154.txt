#include <bits/stdc++.h>
using namespace std;
#define m() int main()
#define tc(t) int t; si(t); while(t--)
#define ret(x) return x
#define ll long long
#define vi vector <int> 
#define vl vector <ll>
#define pii pair <int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define FOR(i,n) for(int i =1;i<=n;i++)
#define For(i,n) for(int i=0;i<n;i++)
#define MAX 1000100
#define MOD 1000000007
#define INF 2000000000
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define pi(x) printf("%d \n",x)
#define pl(x) printf("%lld \n",x)
#define matrix vector < vector<ll> >
#define graph vector < pair < int,pair<int,int> > >

bool subset[1000005][105];
int n;
int arr[105];
void subsetsum()
{
	//bool subset[z+1][n+1];
	for(int i = 1;i<=1000000;i++)
	subset[i][0]=false;
	for(int i=0;i<=n;i++)
	subset[0][i]=true;
	for(int i=1;i<=1000000;i++)
	{
		for(int j=1;j<=n;j++)
		{
			subset[i][j]=subset[i][j-1];
			if (i >= arr[j-1])
            subset[i][j] = subset[i][j] || subset[i - arr[j-1]][j-1];
		}
	}
	//ret(subset[z][n]);
}
m()
{
	int z ;
	si(n);
	//int arr[n];
	For(i,n)
	{
		si(arr[i]);
	}
	subsetsum();
	tc(T)
	{
		si(z);
		if(subset[z][n]) cout<<"Yes"<<endl;
		else cout<<"No"<<endl;
	}
	ret(0);
}
	