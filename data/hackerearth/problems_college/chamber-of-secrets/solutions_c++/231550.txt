#include <iostream>
#include <cstdio>
#include <cstdlib>

#define MAX_SIZE 100001
#define MODULUS_NUM 1000000007

int sum1[MAX_SIZE];
int sum2[MAX_SIZE];
int index;


void reset();
void addNum(int inputNum);

long long getSum(int w, int x, int y, int z); //For testing purposes

int main(int argc, char* argv[]){

	int cases;
	scanf("%d",&cases);

	for(int i=0; i<cases; i++){
		reset();
		int n,q;
		scanf("%d %d",&n,&q);
		for(int j=0; j<n ;j++){
			int inputNum;
			scanf("%d ", &inputNum);
			addNum(inputNum);
		}

		for(int j=0; j<q; j++){
			int w,x,y,z;
			scanf("%d %d %d %d ", &w, &x, &y, &z);
			printf("%lld\n",getSum(w,x,y,z));
		}
	}

	return 0;
}

void reset(){
	index=0;
}

void addNum(int inputNum){
	if(index>0){
		sum1[index] = ( (long long)sum1[index-1] + (long long)inputNum )%MODULUS_NUM;
		sum2[index] = ( (long long)sum2[index-1] + (index+1)*(long long)inputNum )%MODULUS_NUM;
	} else {
		sum1[0]=inputNum;
		sum2[0]=inputNum;
	}
	index++;
}

long long getSum(int w, int x, int y, int z){
	long long interResult= ( ((long long)sum2[x+z-1]-sum2[x+y-2])%MODULUS_NUM 
						+ ((long long)(w-x)*( (long long)sum1[x+z-1]-sum1[x+y-2]  ))%MODULUS_NUM  )%MODULUS_NUM;
	return (interResult+MODULUS_NUM)%MODULUS_NUM;
}
