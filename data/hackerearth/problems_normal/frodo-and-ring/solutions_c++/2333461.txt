#include<bits/stdc++.h>
using namespace std;

#define PB push_back
#define MP make_pair
#define F first
#define S second
//#define LET(it,a) __typeof(a) it(a)
#define LET(it,container) __typeof(container.begin()) it(container.begin())
#define ITER(it,container) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define LL long long
const int MOD = 1e9 + 7;
const int INF = INT_MAX;

int n,m;
char mp[203][203];
int dp[203][203];

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&n,&m);
		getchar();
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				//scanf("%c",&mp[i][j]);
				mp[i][j] = getchar();
				getchar();
			}
		}
		
		memset(dp, 0, sizeof(dp));
		if(mp[0][0] == 'L')
		{
			printf("0\n");
			continue;
		}
		if(mp[0][0] == 'D')
		{
			printf("-1\n");
			continue;
		}
		else
			dp[0][0] = 150;
	
		for(int j=1;j<m;j++)
		{
			if(dp[0][j-1] == -1)
			{
				dp[0][j] = -1;
				continue;
			}
			if(mp[0][j] == 'D')
			{
				if(dp[0][j-1] >= 100)		
					dp[0][j] = dp[0][j-1] - 100;	
				else
					dp[0][j] = -1;
			}
			else if(mp[0][j] == 'T')
				dp[0][j] = dp[0][j-1] + 150;
			else
				dp[0][j] = dp[0][j-1];
		}
		for(int i=1;i<n;i++)
		{
			if(dp[i-1][0] == -1)
			{
				dp[i][0] = -1;
				continue;
			}
			if(mp[i][0] == 'D')
			{
				if(dp[i-1][0] >= 100)		
					dp[i][0] = dp[i-1][0] - 100;	
				else
					dp[i][0] = -1;
			}
			else if(mp[i][0] == 'T')
				dp[i][0] = dp[i-1][0] + 150;
			else
				dp[i][0] = dp[i-1][0];
		}
		for(int i=1;i<n;i++)
		{
			for(int j=1;j<m;j++)
			{
				int prv = max(dp[i][j-1], dp[i-1][j]);
				if(prv == -1) 
				{
					dp[i][j] = -1;
					continue;
				}
				if(mp[i][j] == 'D')
				{
					if(prv >= 100)
						dp[i][j] = prv - 100;
					else
						dp[i][j] = -1;
				}
				else if(mp[i][j] == 'T')
					dp[i][j] = prv + 150;
				else
					dp[i][j] = prv;
			}
		}
		/*
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				cout << dp[i][j] << " ";
			}
			cout << endl;
		}
		*/
		printf("%d\n",dp[n-1][m-1]);
	}
	return 0;
}
