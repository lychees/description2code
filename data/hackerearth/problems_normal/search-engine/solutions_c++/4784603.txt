#include <bits/stdc++.h>
using namespace std;
#define LL             long long
#define endl           '\n'
#define all(x)         x.begin(), x.end()
#define fill(a, b)     memset(a, b, sizeof a)

const double eps = 1e-15;
const double pi = acos(-1.0);
const LL Mod = 1000000007;
const int N = 1e6 + 5;
int ks = 0;



struct trie {
    trie *path[26];
    int mx;
    trie() {
        for (int i = 0; i < 26; i++) path[i] = NULL;
        mx = -1;
    }
};

void add(trie *node, char s[], int w) {
    for (int i = 0; s[i]; i++) {
        int to = s[i] - 'a';
        if (node -> path[to] == NULL) {
            node -> path[to] = new trie();
        }
        node -> mx = max(node -> mx, w);
        node = node -> path[to];
    }
}

int query(trie *node, char s[]) {
    for (int i = 0; s[i]; i++) {
        int to = s[i] - 'a';
        if (node -> path[to] == NULL) {
            return -1;
        }
        node = node -> path[to];
    }
    return node -> mx;
}

int main() {

    int n, q;
    trie *root = new trie();
    scanf("%d%d", &n, &q);

    while (n--) {
        char s[N];
        int w;
        scanf("%s%d", s, &w);
        add(root, s, w);
    }
    while (q--) {
        char s[N];
        scanf("%s", s);
        printf("%d\n", query(root, s));
    }
}