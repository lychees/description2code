#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <fstream>
#include <set>
#include <map>
#include <cmath>
#pragma comment(linker,"/STACK:16777216")
#define MAXN 10010000

using namespace std;

int say1[MAXN],say2[MAXN],u,v;
bool used[MAXN],sade[100010];

int primes[10001],cnt,t,cnt1,cnt2,sadeler1[50],sadeler2[50],x1,x2,ans;

void era(){

for(int i=2;i<100;i++)
if(sade[i]==0)
    for(int j=2*i;j<=3300;j+=i)
        sade[j]=1;
return;
}

int main()
{
    era();

    for(int i=2;i<=3300;i++)
        if(sade[i]==0)
            primes[++cnt]=i;

    cin>>t;

    while(t--){
        x1=x2=0;
        ans=0;
        scanf("%d %d",&u,&v);

        for(int i=1;i<=cnt;i++)
        {
            //cout<<i<<" xa"<<endl;
            if(u%primes[i]==0)
            {
                cnt1=0;
                while(u%primes[i]==0)
                    u=u/primes[i],cnt1++;
                say1[primes[i]]=cnt1;
                sadeler1[++x1]=primes[i];
            }
            if(v%primes[i]==0)
            {
                cnt2=0;
                while(v%primes[i]==0)
                    v=v/primes[i],cnt2++;
                say2[primes[i]]=cnt2;
                sadeler2[++x2]=primes[i];
            }
        }

        if(u!=1)
            say1[u]=1,sadeler1[++x1]=u;
        if(v!=1)
            say2[v]=1,sadeler2[++x2]=v;

        for(int i=1;i<=x1;i++){
            //cout<<i<<" "<<say1[sadeler1[i]]<<" "<<say2[sadeler1[i]]<<endl;
            ans+=abs(say1[sadeler1[i]]-say2[sadeler1[i]]);
        //cout<<ans<<" xa"<<endl;
        }

        for(int i=1;i<=x2;i++)
            if(say1[sadeler2[i]]==0)
                ans+=say2[sadeler2[i]];

        for(int i=1;i<=x1;i++)
            say1[sadeler1[i]]=0;

        for(int i=1;i<=x2;i++)
            say2[sadeler2[i]]=0;

        printf("%d\n",ans);

    }


    return 0;
}
