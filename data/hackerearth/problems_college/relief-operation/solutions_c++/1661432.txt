#include<iostream>
using namespace std;
#include<cstdio>

int max(int a, int b) { return (a > b)? a : b; }
long int knapSack(int W, int wt[], int val[], int n)
{
   int i, w;
   long int K[n+1][W+1];

   for (i = 0; i <= n; i++)
       for (w = 0; w <= W; w++)
           if (i==0 || w==0)
               K[i][w] = 0;
           else if (wt[i-1] <= w)
                 K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]],  K[i-1][w]);
           else
                 K[i][w] = K[i-1][w];
             return K[n][W];
}

int main()
{
    int t,w[20010],val[20010],l,m,i;
    cin>>t;
    while(t--)
    {
        cin>>m>>l;
        for(i=0;i<m;i++)
        cin>>w[i];
        for(i=0;i<m;i++)
        cin>>val[i];
        cout<<"\n"<<knapSack(l,w,val,m);
    }
    return 0;
}