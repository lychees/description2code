#include<cstdio>
#include<cmath>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
#define pii pair< int,int >
#define MOD 1000000007

using namespace std;
typedef int ll;

ll mat[202][202], ans, vis[202][202], a, b, d[202][202];
queue< pii > qu;

inline ll Scan_f()
{
	register ll noRead = 0;
	//register char p=getchar_unlocked();
	register char p = getc(stdin);
	//for(;p<48 || p>57;p=getchar_unlocked());
	for (; p<48 || p>57; p = getc(stdin));
	//while(p>47 && p<58){ noRead = (noRead << 3) + (noRead << 1) + (p - '0');p=getchar_unlocked();}
	while (p>47 && p<58){ noRead = (noRead << 3) + (noRead << 1) + (p - '0'); p = getc(stdin); }
	return noRead;
};

void solve(int x, int y)
{
	pii u;
	qu.push(pii(x, y));
	while (!qu.empty())
	{
		u = qu.front();
		qu.pop();
		x = u.first;
		y = u.second;
		if (vis[x][y])
			continue;
		if (x + 1 <= a && mat[x + 1][y] > mat[x][y])
		{
			d[x + 1][y] = d[x][y] + 1;
			qu.push(pii(x + 1, y));
		}
		if (y + 1 <= b && mat[x][y + 1] > mat[x][y])
		{
			d[x][y + 1] = d[x][y] + 1;
			qu.push(pii(x, y + 1));
		}
		vis[x][y] = 1;
		ans = max(ans, d[x][y]);
	}
}

int main()
{
	ll T, i, j;
	T = Scan_f();
	while (T > 0)
	{
		a = Scan_f();
		b = Scan_f();
		for (i = 1; i <= a; i++)
		{
			for (j = 1; j <= b; j++)
				mat[i][j] = Scan_f();
		}
		ans = 1;
		memset(vis, 0, sizeof(vis));
		memset(d, 0, sizeof(d));
		d[1][1] = 1;
		solve(1, 1);
		printf("%d\n", ans);
		T--;
	}
	return 0;
}

