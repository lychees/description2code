#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int n;
int a[111111];
int r[2][1<<20];

void setVal(int t,int pos, int val){
	pos += 1<<17;
	while(pos){
		r[t][pos]=max(r[t][pos],val);
		pos>>=1;
	}
}

int getMax(int t,int p1,int p2){
	p1+=1<<17;
	p2+=1<<17;
	int res = 0;
	while(p1<=p2){
		res=max(res,r[t][p1]);
		res=max(res,r[t][p2]);
		p1=(p1+1)>>1;
		p2=(p2-1)>>1;
	}
	return res;
}

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
//	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){
		cin>>n;
		REP(i,n)scanf("%d",a+i);
		int res = 0;
		if(n==1)res=1;
		else{
			vi v;
			REP(i,n)v.pb(a[i]);
			UN(v);
			REP(i,n)a[i]=lower_bound(v.begin(),v.end(),a[i])-v.begin();
			CL(r,0);
			REP(i,n){
				int res1 = getMax(0,0,a[i])+1;
				int res0 = getMax(1,a[i],100000)+1;
				setVal(0,a[i],res0);
				setVal(1,a[i],res1);
				res=max(res,max(res0,res1));
			}
		}
		cout<<res<<endl;
	}

#ifdef LocalHost
	printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}