#ifndef PRAGMA_COMMENT_LINKER
#pragma comment(linker, "/STACK:199999999")
#endif

#define  _CRT_SECURE_NO_WARNINGS
//#define  NDEBUG

#pragma warning(error : 4700)
#pragma warning(error : 4715)
#pragma warning(error : 4716)

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <chrono>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <functional>
#include <limits>
#include <list>
#include <map>
#include <memory>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define all(v)                  v.begin(), v.end()
#define db(x)                   cout << #x << " = " << (x) << "\n"
#define fend(x)                 ((x) & ((x)+1)) - 1
#define fenu(x)                 (x) | ((x)+1)
#define forn(i, n)              for (int i = 0; i < (int)n; ++i)
#define for1n(i, _b_, _e_)	for (int i = _b_; i < (int)_e_; ++i) 		                                         
#define ft                      first
#define len(s)                  s.length()
//#define max_value(type)         std::numeric_limits<type>::max()
//#define min_value(type)         std::numeric_limits<type>::min()
#define mp                      std::make_pair
#define pob                     pop_back
#define pof                     pop_front
#define popcnt                  __popcnt
#define popcnt64                __popcnt64
#define pub                     push_back
#define puf                     push_front
#define sc                      second

#ifdef _WIN32
#define LL "%I64d"
#else
#define LL "%lld"
#endif

typedef double                  dbl;
typedef long double             ldbl;
typedef unsigned int			uint;
typedef long long               ll;
typedef unsigned long long      ull;

const   long long               MILLER_RABIN = 3215031751;
const   long double             PI = 3.14159265358979323846;

inline int lg2(ll n) { int h = 0; while ((1ll << h) < n) ++h; return h; }

//struct config_io { config_io() { cin.tie(nullptr); ios_base::sync_with_stdio(false); } } cnf_io;
//struct config_rand { config_rand() { srand(chrono::duration_cast<chrono::nanoseconds>(chrono::high_resolution_clock::now().time_since_epoch()).count()); } } cnf_rand;

//namespace std
//{
//	template<>
//	struct hash < pair<int, int> > {
//		size_t operator()(const pair<int, int> &x) const {
//			return (x.first * 31 + x.second) % ((int)1e9 + 7);
//		}
//	};
//}

inline void scan(int &x) { scanf("%d", &x); }
inline void scan(long long &x) { scanf(LL, &x); }
inline void scan(double &x) { scanf("%lf", &x); }
inline void scan(long double &x) { scanf("%Lf", &x); }
inline void scan(int &x, int &y) { scanf("%d%d", &x, &y); }
inline void scan(int &x, int &y, int &z) { scanf("%d%d%d", &x, &y, &z); }
inline void print(const int x) { printf("%d\n", x); }
inline void print(const long long x) { printf(LL"\n", x); }
inline void print(const double x) { printf("%lf\n", x); }
inline void print(const long double x) { printf("%Lf\n", x); }
inline void print(const int x, const int y) { printf("%d %d\n", x, y); }
inline void print(const int x, const int y, const int z) { printf("%d %d %d\n", x, y, z); }

inline void tobin(long long x) { cout << bitset<64>(x) << endl; }
template<class T> inline void trace(T collection) { for (auto elem : collection) { cout << elem << endl; } }

const int ML = 1e5+10;
int nn;
const int MOD = 1e9+7;
int a[2*ML];
int t1[ML], t2[ML];

int sum (int* t, int r)
{
	int result = 0;
	for (; r >= 0; r = (r & (r+1)) - 1)
		result += t[r];
	return result;
}

void inc (int* t, int i, int delta)
{
	for (; i < nn; i = (i | (i+1)))
		t[i] += delta;
}

int sum (int* t, int l, int r)
{
	return sum (t, r) - sum (t, l-1);
}

int pow_mod(int a, int p) {
    if(p < 0) return 0;
    int res = 1;
    while(p) {
        if(p & 1) {
            res = (res * 1ll * a) % MOD;
        }
        a = (a * 1ll * a) % MOD;
        p >>= 1;
    }
    return res;
}

void solve() {
    int n;
    scan(n);
    nn = n+1;
    forn(i, 2*n) scan(a[i]);
    int ans1 = 0, ans2 = 0;
    int mult1 = pow_mod(2, n-2);
    int mult2 = pow_mod(2, n-1);
    forn(i, 2*n) {
        int a1 = sum(t1, a[i]-1);
        int a2 = sum(t2, a[i]-1);
        int b = sum(t1, a[i], a[i]);
        int c1 = sum(t1, a[i]+1, n);
        int c2 = sum(t2, a[i]+1, n);
        
        int ap1 = b;
        int ap2 = sum(t2, a[i], a[i]);
        //db(a[i]);
        //db(ap1), db(ap2);
        if(!ap1 && !ap2) {
            inc(t1, a[i], 1);
        }
        else if(ap1) {
            inc(t1, a[i], -1);
            inc(t2, a[i], 1);
        }
        
        ans1 = (ans1 + (a1+c1)) % MOD;
        ans2 = (ans2 + (a2+b+c1+3*c2)) % MOD;
        //ans = (ans + b*pow_mod(2, n-1)) % MOD;
        //ans = (ans + c1*pow_mod(2, n-1) + c1*pow_mod(2, n-2)) % MOD;
        //ans = (ans + 3*c2*pow_mod(2, n-1)) % MOD;
        
        //cout << "Iteration " << i << ": " << 
        //ans << " " << a1 << " " << a2 << " " << b << " " << c1 << " " << c2 << endl;
    }
    ans1 = (ans1 * 1ll * mult1) % MOD;
    ans2 = (ans2 * 1ll * mult2) % MOD;
    print((ans1 + ans2) % MOD);
}

int main() {
#ifdef HOME
#define TASK "home"
	freopen(TASK".in", "r", stdin); freopen(TASK".out", "w", stdout);
#endif

	int tt = 1;
	//scan(tt);
	forn(i, tt) {
		solve();
	}

#ifdef HOME	
	cout << "\n\nTime: " << clock() / (double)CLOCKS_PER_SEC << endl;
#endif
	return 0;
}