#include<bits/stdc++.h>
using namespace std;

const int N=500010;

int tree[N];
char str[N][15];
int tms[N];

int query(int idx) {
    int sum=0;
    while(idx) {
        sum+=tree[idx];
        idx-=(idx&-idx);
    }
    return sum;
}
void update(int idx,int val) {
    while(idx<N) {
        tree[idx]+=val;
        idx+=(idx&-idx);
    }
    return;
}
int queryS(int val) {
    int lo=0,hi=N-1;
    int ans=0;
    while(lo<=hi) {
        int mid=lo+hi>>1;
        int res=query(mid);
        if(res>=val) {
            ans=mid;
            hi=mid-1;
        } else if(res<val) {
            lo=mid+1;
        }
    }
    return ans;
}
int main() {
    int tt;
    scanf("%d",&tt);
    while(tt--) {
        int n;
        scanf("%d",&n);
        for(int i=1;i<=n;i++) {
        	tree[i]=0;
        }
        for(int i=1;i<=n;i++) {
            scanf("%s",str[i]);
            update(i,1);
        }
        for(int i=1;i<=n;i++) {
            scanf("%d",tms+i);
        }
        int maxVal=0;
        for(int i=1;i<n;i++) {
            int k;
            scanf("%d",&k);
            int pos=queryS(k);
            maxVal=max(maxVal,tms[pos]);
           	printf("%s %d\012",str[pos],maxVal);
            update(pos,-1);
        }
        int pos=queryS(1);
        maxVal=max(maxVal,tms[pos]);
        printf("%s %d\012",str[pos],maxVal);
    }
    return 0;
}
