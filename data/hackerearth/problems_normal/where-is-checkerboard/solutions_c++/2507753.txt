#include <bits/stdc++.h>
using namespace std;

long long dp1[32],dp[2000][2000];

int main()
{
	int n,m;
	cin>>n>>m;
	vector<string> grid;
	int i,j,k;
	string s;
	for(i=0;i<n;i++)
	{
		cin>>s;
		grid.push_back(s);
	}
	
	if(n<32 || m<32)
	{
		cout<<0<<endl;
	}
	else
	{
		long long a=0,b=0,count=0;
		long long two[33];
		
		two[0]=1;two[1]=2;
		for(i=2;i<33;i++)
		{
			two[i]=two[i-1]*2;
		}
		
		bool flag=true;
		for(i=0;i<32;i++)
		{
			if(flag)
			{
				a+=two[i];
				flag=!flag;
			}
			else
			{
				flag=!flag;
			}
		}
		
		flag=false;
		for(i=0;i<32;i++)
		{
			if(flag)
			{
				b+=two[i];
				flag=!flag;
			}
			else
			{
				flag=!flag;
			}
		}
		
		for(i=0;i<32;i++)
		{
			dp1[i]=a;
			dp1[i+1]=b;
			i++;
		}
		
		for(i=0;i<n;i++)
		{
			a=0;
			for(j=0;j<32;j++)
			{
				if(grid[i][j]=='#')
				{
					a+=two[31-j];
				}
			}
			dp[i][0]=a;
			for(j;j<m;j++)
			{
				if(grid[i][j-32]=='#')
				{
					a-=(two[31]);
				}
				a=a<<1;
				if(grid[i][j]=='#')
				{
					a++;
				}
				dp[i][j-31]=a;
			}
		}
		
		for(i=0;i<=(n-32);i++)
		{
			for(j=0;j<(m-31);j++)
			{
				for(k=i;k<i+32 && k<n;k++)
				{
					if(dp1[k-i]!=dp[k][j])
					{
						break;
					}
				}
				if(k==(i+32))
				{
					count++;
				}
			}
		}
		cout<<count<<endl;
	}
		
    return 0;
}
