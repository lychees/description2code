//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <unordered_set>
#include <unordered_map>


using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(int i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(int i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)

struct bla
{
	LL m[2][2];
};

const LL mod = 1000000009;

bla operator * (const bla &a, const bla &b)
{
	bla c;
	REP(i, 2)
		REP(j, 2)
		{
			c.m[i][j] = 0;
			REP(k, 2)
				c.m[i][j] = (c.m[i][j] + a.m[i][k] * b.m[k][j]) % mod;
		}
	return c;
}


void wyp(bla wyn)
{
	REP(i, 2)
	{
		REP(j, 2)
			cout << wyn.m[i][j] << " ";
		cout << "\n";
	}
}
LL licz(LL n)
{
	bla pocz;
	pocz.m[0][0] = 1;
	pocz.m[0][1] = 1;
	pocz.m[1][0] = 1;
	pocz.m[1][1] = 0;
	//wyp((pocz * pocz) * pocz);
	bla wyn;
	REP(i, 2)
		REP(j, 2)
			if(i == j)
				wyn.m[i][j] = 1;
			else
				wyn.m[i][j] = 0;
	while(n > 0)
	{
		if(n % 2)
			wyn = wyn * pocz;
		pocz = pocz * pocz;
		n /= 2;
	}
	return (wyn.m[0][0] * wyn.m[0][1]) % mod;
	
	 
}

void jebaj()
{
	LL n;
	cin >> n;
	LL a = licz(n);
	cout << a << "\n";
}

int main()
{
	IOSYNC;
	int t;
	//t = 1;
	cin >> t;
	
	REP(i, t) 
	{
		jebaj();
	}
}

