#include <bits/stdc++.h>
using namespace std;
#define FL(a,i,n) for(int i=a;i<n;i++)
#define RFL(a,i,n) for (int i=a;i>n;i--)
#define PI(a) printf("%d\n",a)
#define PLLI(a) printf("%lld\n",a)
#define LL long long
#define SI(a) scanf("%d",&a)
#define SII(a,b) scanf("%d%d",&a,&b)
#define SIII(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define SLLI(a) scanf("%lld",&a)
#define W(t) while(t--)
#define PB push_back
#define MP make_pair
#define MOD 1e9+7
#define debug1(a)           cout <<#a<<": "<<a<<endl;
#define debug2(a, b)        cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<< endl;
#define debug3(a, b, c)     cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<endl;
#define debug4(a, b, c, d)  cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl;
#define debug5(a, b, c, d, e) cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<<": "<<e<<endl;

int siz,cnt=0,k;
char maze[109][109];
int val[100][100]={0};
queue<pair<int,int> > que;

void bfs(pair<int,int> pp){
    /*if(pp.first)
        if(!val[pp.first-1][pp.second] && maze[pp.first-1][pp.second]=='1') {  
            val[pp.first-1][pp.second]=val[pp.first][pp.second]+1;
            que.push(make_pair(pp.first-1,pp.second));
        }
    if(pp.second)
        if(!val[pp.first][pp.second-1] && maze[pp.first][pp.second-1]=='1') {
            val[pp.first][pp.second-1]=val[pp.first][pp.second]+1;
            que.push(make_pair(pp.first,pp.second-1));
        }*/
    if(pp.first!=siz-1)
        if(!val[pp.first+1][pp.second] && maze[pp.first+1][pp.second]=='1') {
            val[pp.first+1][pp.second]=val[pp.first][pp.second]+1;
            que.push(make_pair(pp.first+1,pp.second));
        }
    if(pp.second!=siz-1)
        if(!val[pp.first][pp.second+1] && maze[pp.first][pp.second+1]=='1') {
            val[pp.first][pp.second+1]=val[pp.first][pp.second]+1;
            que.push(make_pair(pp.first,pp.second+1));
        }
    que.pop();
}

int main(){
    int t; SI(t); 
    W(t){
        SII(siz,k);
        FL(0,i,siz) FL(0,j,siz)  maze[i][j]='0';
	    FL(0,i,siz) { getchar(); FL(0,j,siz) cin >> maze[i][j]; }
	    
        memset(val,0,sizeof(val));
        val[0][0]=1;
        que.push(make_pair(0,0));
        while(!que.empty()){
            bfs(que.front()); 
        }
        if(val[k-1][k-1] && maze[0][0]=='1')
            PI(val[k-1][k-1]-1);
        else
            cout << "-1\n";
    }
    return 0;
}
 