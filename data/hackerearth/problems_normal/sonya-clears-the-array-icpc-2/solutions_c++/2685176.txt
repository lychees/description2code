#include<bits/stdc++.h>
#define vi vector<int>
#define pb push_back
#define fill(arr,v) memset( arr , v , sizeof(arr) )
#define fori(i,s,n) for(i=s ; i < n ; i++)
#define ll long long int
#define mod 1000000009
#define sc(n) cin >> n
#define pr(n) cout << n
#define gcd   __gcd
using namespace std;
int arr[2000006] , nxt[2000004] , last[2000005];
vi prime ;
map< int , int > h ;
int id = 0;
void f()
{
  int i , j ;
  arr[0] = arr[1] = 1;
  for( int i = 2 ; i <= 2000005 ; ++i )
  {
    if( !arr[i] )
    {
      for( int j = 2*i ; j <= 2000005 ; j += i )
      {
        arr[j]++;
      }
    }
  }
  for( int i = 2000003 ; i >= 0 ; i--)
  {
    if( !arr[i] )
      nxt[i] = i;
    else nxt[i] = nxt[i+1];
  }
  for( int i = 1 ; i <= 2000003 ; i++ )
  {
    if( !arr[i] )
      last[i] = i;
    else last[i] = last[i-1];
  }

}
int cal(int a,int b)
{
    int sub=a+b;
      if (a<=b&&last[b-1]>=a)
            return nxt[b]+last[b-1]-a-b;
        a=max(a,b);
          a=nxt[a];
            b=nxt[a+1];
              return a+b-sub;
}

int dp[502][502] , ele[502];
int main()
{
  f();
  int i , j , n ;
  cin >> n;
  fori( i , 1 , n+1)
    cin >> ele[i];
  fori( i , 0 , 502)
    fori( j , 0 , 502)
     dp[i][j] = 0;
  for( int j = 1 ; j <= n ; j++ )
  {
    for( int i = j-1 ; i >=1 ; i -= 2 )
    {
      dp[i][j] = 1e9;
      for( int k = i  ; k < j ; k += 2 )
      {
        dp[i][j] = min( dp[i][j] , dp[i][k-1] + dp[k+1][j-1] + cal( ele[k] , ele[j] ) );
      }
    }
  }
        

  cout << dp[1][n] + n / 2 << endl;
      
  return 0;
}
