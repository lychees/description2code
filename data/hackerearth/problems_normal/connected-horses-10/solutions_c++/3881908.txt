#include <bits/stdc++.h>

using namespace std;

#define boost ios::sync_with_stdio(true); cin.tie(0); cout.tie(0);
#define pii pair<int,int>
#define vpii vector<pair<int,int> >
#define vvpii vector<vector<pair<int,int> > >
#define vvii vector<vector<int> >
#define vii vector<int>
#define pb push_back
#define mp make_pair
#define ll long long
#define mod 1000000007


int visited[1002][1002];
int n,m;
int a[1002][1002];


void init()
{
	for(int i=0;i<1002;i++)
	{
		for(int j=0;j<1002;j++)
		{
			visited[i][j]=0;
			a[i][j]=0;
		}	
	}
}

bool validate(int x,int y)
{
	if(!(x>0 && x<=n && y>0 && y<=m))
		return false;
	return true;
}

int bfs(int x,int y)
{
	visited[x][y]=1;
	queue<pair<int,int> > q;
	q.push(make_pair(x,y));
	int count=0;
	while(!q.empty())
	{
		pii r=q.front();
		q.pop();
		if(a[r.first][r.second]==1)
			count++;	
		visited[r.first][r.second]=1;
		for(int i=-2;i<=2;i++)
		{
			for(int j=-2;j<=2;j++)
			{
				if(i==j || i==0 ||j==0 || i==-j )
					continue;
				if(validate(r.first+i,r.second+j) && visited[r.first+i][r.second+j]==0 && a[r.first+i][r.second+j]==1)
				{
					visited[r.first+i][r.second+j]=1;
				//	cout<<"Pushed "<<r.first+i<<" "<<r.second+j<<endl;
					q.push(mp(r.first+i,r.second+j));
				}
			}
		}
	}
	return count;
}

ll facmod(int n)
{
	int i;
	long long ans=1;
	for(i=1;i<=n;i++)
	{
		ans=(ans*i)%mod;
	}
	return ans;
}


int main()
{
	boost;
	int t;
	cin>>t;
	while(t--)	
	{
		int q;
		cin>>n>>m>>q;
				
		vector<pii> v;
		init();
		while(q--)
		{
			int x,y;
			cin>>x>>y;
			a[x][y]=1;
			v.pb(make_pair(x,y));
		}
		int i,j;
		vii result;
		for(vpii::iterator iter=v.begin();iter!=v.end();iter++)
		{
			if(visited[iter->first][iter->second]==0)
			{
				//cout<<"Unvisited Pair is "<<iter->first<<" "<<iter->second<<endl;
				result.pb(bfs(iter->first,iter->second));
				//cout<<endl;
			}	
		}
		//so far got the result i.e count of elements in each connected component
		ll ans=1;
		for(vii::iterator iter=result.begin();iter!=result.end();iter++)
		{

			//cout<<"iter "<<*iter<<endl;	
			ans=(ans*facmod(*iter))%mod;
		}
		cout<<ans<<endl;
	}
}