#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
#include <cstring>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()
#define MEM(a, b) memset(a, (b), sizeof(a))
#define CLR(a) memset(a, 0, sizeof(a))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define DEBUG 1

using namespace std;

int e[105][105]={0};
vector<int> myvec;
int a[105],k;
int vis[105]={0};

void dfs(int i,int col)
{
	if(vis[i]==0)
	{
		vis[i]=col;
		myvec.push_back(a[i]);
		for(int j=0;j<k;j++)
		{
			if(e[i][j]==1 && vis[j]==0)
				dfs(j,col);
		}
	}
}
int main()
{
	cin>>k;
	int i,j;
	for(i=0;i<k;i++)
	{
		cin>>a[i];

	}
	
	string s;
	for(i=0;i<k;i++)
	{
		cin>>s;
		for(j=0;j<s.size();j++)
		{
			if(s[j]=='Y')
				e[i][j]=1;
		}
	}
	int col=1;
	for(i=0;i<k;i++)
	{
		if(vis[i]==0)
		{	
			dfs(i,col);
			col++;
		}
		sort(myvec.begin(),myvec.end());
		int g=0;
		for(j=0;j<k;j++)
		{
			if(vis[j]==col-1)
			{
				a[j]=myvec[g];
				g++;
			}
		}
		myvec.clear();
	}
	for(i=0;i<k;i++)
	{
		cout<<a[i];
		if(i!=k-1)
			cout<<" ";
	}
	cout<<endl;

	return 0;
}
