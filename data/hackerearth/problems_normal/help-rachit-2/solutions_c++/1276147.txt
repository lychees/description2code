#include <iostream>
#include <math.h>
using namespace std;

long getPrimes(long);
bool isPrime(long);

long primes [100001] = {0};
long calcSize = 0;
double n,d;

int main()
{
	primes[3] = 3;
	primes[5] = 5;
	primes[7] = 8;
    long tests, size;
    calcSize = 10001;
    getPrimes(calcSize);
    
    cin>>tests;
    
    while(tests--)
    {
    	cin>>size;
    	
    	if(size>calcSize)
    	{
    		n = getPrimes(size);
    		calcSize = size;
    	}
    	else
    		n = primes[size];
    		
    	d = 2*size-1;
    	
    	printf("%3.6f",(n/d*100));
    	cout<<endl;
    }
    
   	return 0;
}

    
long getPrimes(long size)
{
	if(primes[size] > 0)
		return primes[size];
	else
	{
		int p = 0;
		long num = size*size;
		for(int i=0; i<4; i++)
		{
			if(isPrime(num))
				p++;
			num -= 2*(size/2);
		}
		primes[size] = (p + getPrimes(size-2));
		return primes[size];
	}
}


	bool isPrime(long n)
	{
		if(n==1 || n==2)
		{
			return false;
		}	
		for(long i=2; i<=sqrt(n); i++)
		{
			if(n%i == 0)
				return false;
		}
		return true;
	}