#include <bits/stdc++.h>

using namespace std;

long long int poweroftwo[60];

string rotation (string m, long long int k)
{
	int i,p=m.size();
	string a;
	k%=p;
	for (i=0;i<p;++i)
		a.push_back(m[(p-k+p+i)%p]);
	return a;
}

string xorfunction (string p, string q)
{
	string ans;
	int i,k=p.size();
	for (i=0;i<k;++i)
	{
		if (p[i]==q[i])
			ans.push_back('0');
		else
			ans.push_back('1');
	}
	return ans;
}

string recursion (string z, long long int n, long long int p)
{
	if (n==0)
		return z;
	long long int i,s;
	for (i=0;i<50;++i)
		if (poweroftwo[i]>n)
			break;
	s=poweroftwo[i-1];

	z = xorfunction(z, rotation(z,p*s));
	
	return recursion(z,n-s,p);
}

int main()
{
	long long int t,n,m,p,x,i,j,k,l;
	poweroftwo[0]=1;
	for (i=1;i<60;++i)
		poweroftwo[i]=2*poweroftwo[i-1];
		
	scanf ("%lld",&t);
	while (t--)
	{
		scanf ("%lld %lld %lld %lld",&n,&m,&p,&x);
		
		string s;
		cin >> s;
		
		string result,dummy;
		
		result = recursion(s,n-1,p);
		
		if (x==1)
		{
			for (i=0;i<m;++i)
				dummy.push_back('1');
			
			result = xorfunction(result, dummy);
		}
		cout<<result<<endl;
	}
	
	return 0;
}