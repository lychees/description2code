#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define sz 100001

bool visit[sz];
int in[sz], out[sz] ,dp[sz],t;
vector<int>adj[sz];
void dfs(int,int);
int main()
{
	int m;
	cin>>m;
	while(m--)
	{
		t=0;
		int n,x;
		cin>>n;
		//initialise and construct graph
		for(int i=0;i<=n;i++)
		{
			visit[i]=false;
			adj[i].clear();
		}
		for(int i=1;i<=n;i++)
		{
			cin>>x;
			adj[x].pb(i);
			adj[i].pb(x);
		}
		dfs(0,0);
		// query
		int q;
		cin>>q;
		while(q--)
		{
			int x,y;
			cin>>x>>y;
			if(in[y]<in[x]  && out[x]<out[y])cout<<dp[x]-dp[y]-1<<endl;
			else cout<<-1<<endl;
		}
	}
	return 0;
}

void dfs(int u,int l)
{
	visit[u]=true;
	dp[u]=l+1;
	in[u]=++t;
	for(int i=0;i<adj[u].size();i++)
	{
		int v=adj[u][i];
		if(visit[v]==false)
		{
			dfs(v,dp[u]);
		}
	}
	out[u]=++t;
}