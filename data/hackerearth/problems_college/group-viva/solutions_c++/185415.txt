	#include<iostream>
	#include<cmath>
	#include<cstring>
	#include<cstdio>
	#include<vector>
	using namespace std;
	bool a[100001] ={false};
	int t;
	unsigned long long n,r,prod =1,count;
	unsigned long long gcd(unsigned long long b,unsigned long long c)
	{
		if(c==0) return b;
		gcd(c,b%c);
	}
	void fraction(unsigned long long b,unsigned long long c)
	{
		unsigned long long d = gcd(c,b);
		//cout<<d<<endl;

			printf("%llu/%llu\n",b/d,c/d);
		
	}
	int main()
	{
		
		a[0] = true;
		a[1] = true;
	for(long long i=4;i<=100000;i+=2) a[i] =true;
	for(long long i =3;i<=sqrt(100000);i+=2){
		for(long long j=i*i;j<=100000;j+=i){
			a[j]=true;
		}
	}
	//ios_base::sync_with_stdio(false);
	
		//ios_base::sync_with_stdio(false);
		scanf("%d",&t);
		while(t--){
			prod =1;
			scanf("%llu%llu",&n,&r);
			unsigned long long temp = r-1;
			for(unsigned long long i=2;i<=(unsigned long long)sqrt(r);i++)
			{
				count =0;
				if(!a[i]){
					while(temp%i==0) {
						temp /= i;
						count++;
					}
					prod *= count+1;
				}
				
			}
			if(temp!=1) prod *=2;
			if(prod==1) prod=2;
		//	cout<< prod<<endl;
		//	cout<<n-prod<<endl;
			fraction(n-prod,n);
			
		}
	}