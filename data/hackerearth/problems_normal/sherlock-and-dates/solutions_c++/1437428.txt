#include <map>
#include <set>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cassert>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;

struct date
{
	int d, m, y;
	date(int _d, int _m, int _y)
	{
		d = _d, m = _m, y = _y;
	}
	bool valid()
	{
		if (d < 1 or d > 31) return false;
		if (y < 0 or y > 10000) return false;
		if (m < 1 or m > 12) return false;
		int days[] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
		if (d > days[m]) return false;
		if (m == 2 and d == 29)
		{
			if (y % 4 != 0 or y % 400 == 0) return false;
			return true;
		}
		return true;
	}
	bool operator <= (const date& that) const
	{
		if (y < that.y) return true;
		if (y > that.y) return false;
		if (m < that.m) return true;
		if (m > that.m) return false;
		if (d < that.d) return true;
		if (d > that.d) return false;
		return true;
	}
};

int go(date d1, date d2)
{
	int ret = 0;
	int y1 = d1.y, y2 = d2.y;
	for (int y = y1; y <= y2; y++)
	{
		int m = y % 100 - 1;
		int d = m - 1;
		date D(d, m, y);
		if (D.valid() and d1 <= D and D <= d2) ret++;
	}
	return ret;
}

int main()
{
//	freopen("in", "r", stdin);
	int t; scanf("%d", &t);
	while (t--)
	{
		int d, m, y;
		scanf("%d:%d:%d", &d, &m, &y);
		date d1(d, m, y);
		scanf("%d:%d:%d", &d, &m, &y);
		date d2(d, m, y);
		printf("%d\n", go(d1, d2));
	}
	return 0;
}