//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000009LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}

ll invMod(ll n){
    return pwr(n, MOD-2);
}


int n, have[100005], need[100005], DP[100005][2];
vector<int> adj[100005];


void dfs(int v, int par){

	int c0 = 0, c1 = 0;
	for(auto vv : adj[v])
		if(vv != par){
			dfs(vv, v);
			c0 += DP[vv][0];
			c1 += DP[vv][1];
		}

	if(have[v] == need[v]){

		DP[v][0] = min(c0, (1+c1)+1);
		DP[v][1] = min(c1+1, c0+1);
	}
	else{

		DP[v][0] = min(c0+1, c1+1);
		DP[v][1] = min(c1, (1+c0)+1);
	}
}


int main(){

    ios_base::sync_with_stdio(0);

    cin>>n;
    int e = n-1;
    while(e--){
    	int a, b;
    	cin>>a>>b;
    	adj[a].pb(b);
    	adj[b].pb(a);
    }

    for(int i=1;i<=n;i++)	cin>>have[i];
    for(int i=1;i<=n;i++)	cin>>need[i];

    dfs(1, -1);
	cout<<DP[1][0];
    return 0;
}




