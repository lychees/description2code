    //Author : Kipawa
	//You can still hail MEGATRON

using namespace std;

#include<bits/stdc++.h>

#define wl(n) while(n--)
#define fl(i,a,b) for(i=a; i<b; i++)
#define rev(i,a,b) for(i=a; i>=b; i--)
#define scan(n) scanf("%d", &n)
#define scans(s) scanf("%s", s)
#define scanc(c) scanf("%c", &c)
#define scanp(f) scanf("%f", &f)
#define scanll(l) scanf("%lld", &l)
#define scanllu(u) scanf("%llu", &u)
#define print(n) printf("%d\n", n)
#define prints(s) printf("%s\n", s)
#define printc(c) printf("%c\n", c)
#define printp(f) printf("%f\n", f)
#define printll(l) printf("%lld\n", l)
#define printllu(u) printf("%llu\n", u)
#define nline printf("\n")
#define mclr(strn) strn.clear()
#define ignr cin.ignore()
#define MOD 1000000007
#define ll long long int
#define u64 unsigned long long int
#define PB push_back

ll fac[1000005], ifac[1000005];
ll ahas[26], bhas[26];

ll fast_pow(long long base, long long n,long long M)
{
	if(n==0)
		return 1;
	if(n==1)
		return base;
	long long halfn=fast_pow(base,n/2,M);
	if(n%2==0)
		return ( halfn * halfn ) % M;
	else
		return ( ( ( halfn * halfn ) % M ) * base ) % M;
}

void banao()
{
	ll i;
	ll x = 1;
	fac[0] = ifac[0] = 1LL;
	fl(i,1,1000005)
	{
		fac[i] = (fac[i-1]*i)%MOD;
		//ifac[i] = fast_pow(fac[i], MOD-2, MOD);
	}
}

int main()
{
	int t;
	scan(t);
	banao();
	wl(t)
	{
		string a,b;
		cin>>a>>b;
		memset(ahas,0,sizeof(ahas));
		memset(bhas,0,sizeof(bhas));

		ll i;
		ll n1 = a.size(), n2 = b.size();

		fl(i,0,n2)
			bhas[b[i]-'a']++;

		fl(i,0,n1)
			ahas[a[i]-'a']++;

		bool flag = 0;
		ll x,y,ans=1;

		fl(i,0,26)
		{
			if(ahas[i]>=bhas[i])
			{
				x = fac[ahas[i]];
				//y = fast_pow(fac[bhas[i]], MOD-2, MOD);
				y = fast_pow(fac[ahas[i] - bhas[i]], MOD-2, MOD);
				//y = (ifac[bhas[i]] * ifac[ahas[i]-bhas[i]])%MOD;
				ans = (ans * ((x*y)%MOD))%MOD;
			}
			else
				flag = 1;
		}

		if(flag)
			printf("0\n");
		else
			printll(ans);
	}	
	return 0;
}
