#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define ll long long int
#define II pair<int,int>
#define faster std::ios::sync_with_stdio(false);cin.tie(NULL)
const int N=1e5+5;
int startTime[N],endTime[N];
int Time=0;
bool vis[N];
vector<int>g[N];
void dfs(int x){
	vis[x]=true;
	startTime[x]=Time++;
	int len=g[x].size();
	for(int i=0;i<len;i++){
		int v=g[x][i];
		if(vis[v]==false){
			dfs(v);
		}
	}
	endTime[x]=Time++;
}
bool isInSubtree(int x,int y){  // x is in subtree rooted at y
	return (startTime[x]>startTime[y] && endTime[x]<endTime[y]);
}
int main(){
	int n;scanf("%d",&n);
	int x,y,q,d;
	for(int i=0;i<n-1;i++){
		scanf("%d%d",&x,&y);
		g[x].pb(y);
	}
	dfs(1);
	scanf("%d",&q);
	while(q--){
		scanf("%d%d%d",&d,&x,&y);
		if(!isInSubtree(x,y) && !isInSubtree(y,x)){
			printf("NO\n");
			continue;
		}
		if(d==0){
			if(isInSubtree(y,x)==true){
				printf("YES\n");			
			}
			else{
				printf("NO\n");
			}
		}
		else{
			if(isInSubtree(x,y)==true){
				printf("YES\n");			
			}
			else{
				printf("NO\n");
			}			
		}
	}
	return 0;
}