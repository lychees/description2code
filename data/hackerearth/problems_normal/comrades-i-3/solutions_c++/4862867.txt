#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
using namespace std;
#define REP(n)                  for(int i=0;i<n;i++)
#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
#define sc(n)                   {char temp[4]; ss(temp); n=temp[0];}
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-9
#define maX(a,b)				((a)>(b)?(a):(b))
#define miN(a,b)				((a)<(b)?(a):(b))
#define abS(x)					((x)<0?-(x):(x))
typedef unsigned long long ll;
typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<ll> vl;
typedef vector<PII> VII;
typedef vector<TRI> VT;
/*Main code begins now */
int p[100000+5];
vector<int> adj[100005];
int st[100005],f[100005],dp[100005];
int tym=0;
void dfs(int v,int d){
	st[v]=++tym;	
	dp[v]=d;
	for(vector<int>::iterator it=adj[v].begin();it!=adj[v].end();it++){
		dfs(*it,d+1);
	}
	f[v]=++tym;
}
int main(){
	int t;
	s(t);
	while(t--){
		int n;
		s(n);
		for(int i=0;i<n;i++) adj[i].clear();
		for(int i=1;i<=n;i++) {
			s(p[i]);
			adj[p[i]].push_back(i);	
		}
		int m;
		s(m);
		tym=1;
		dfs(0,1);
		while(m--){
			int x,y;
			s(y);
			s(x);
			if(st[x]<st[y] && f[x]>f[y]) {
				printf("%d\n",dp[y]-dp[x]-1);
			} else puts("-1");
		}
	}
}