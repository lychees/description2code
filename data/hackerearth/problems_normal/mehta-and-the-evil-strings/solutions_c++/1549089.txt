//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000007
#define INF INT_MAX
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

ll N ;int  M ;
ll temp[16][16];
ll X[16][16],Y[16][16];

void mult(ll A[][16] , ll B[][16])
{
  memset(temp,0,sizeof(temp));
  for(int i=0;i<M;i++)
  {
    for(int j=0;j<M;j++)
    {
      for(int k=0;k<M;k++)
      {
        temp[i][j]+=(A[i][k]*B[k][j])%MOD;
        temp[i][j]%=MOD;
      }
    }
  }
  for(int i=0;i<M;i++)
  {
    for(int j=0;j<M;j++)
    {
      A[i][j]=temp[i][j];
    }
  }
}

void pow(ll A[][16],ll b)
{ 
  memset(X,0,sizeof(X));
  memset(Y,0,sizeof(Y));
  for(int i=0;i<M;i++)
  { 
    X[i][i]=1;
    for(int j=0;j<M;j++)
    {
      Y[i][j]=A[i][j];
    }
  } 
  while(b)
  {
    if(b%2)
    mult(X,Y);
    mult(Y,Y);
    b/=2;
  }
  for(int i=0;i<M;i++)
  {
    for(int j=0;j<M;j++)
    {
      A[i][j]=X[i][j];
    }
  }
}

int main()
{
	M = 16 ;
	int m[10] = { 0 };
	m[2] = 8 ;
	m[3] = 4 ;
	m[5] = 2 ;
	m[7] = 1 ;
	m[6] = 12 ;
	m[8] = 8 ;
	int t;
	si(t);
	while(t--)
	{
		sl(N);
		ll A[16][16] ; ll ans = 0 ;
		memset( A , 0 , sizeof(A));
		for(int k = 1 ; k < 10 ; k++ )
		{
		  for(int i = 0 ; i < 16 ; i++ )
		  {
			  for(int j = 0 ; j < 16 ; j++ )
			  {
				  if( (i ^ m[k] ) == j )
				  A[i][j]++;
				  
			  }
		  }
		}
		pow(A , N );
		for(int i = 1 ; i < 16 ; i++ )
		{     
			 ans += A[0][i] ;
			 ans %= MOD ;
		}
		
		pl(ans);nl;
	}
}
