#include<bits/stdc++.h>
using namespace std;
vector< pair<int,int> >adj[1000000];
int visited[1000000];
int dist[1000000];
void dij(int s)
{
    priority_queue< pair<int,int> >pq;
    pq.push(make_pair(0,s));
    dist[s]=0;
    while(!pq.empty())
    {
        pair<int,int> top=pq.top();
        pq.pop();
        int u=top.second;
        if(visited[u])
            continue;
            visited[u]=1;
        for(int i=0;i<adj[u].size();i++)
        {
            int node=adj[u][i].second;
            int wt=adj[u][i].first;
            if(dist[node]>=dist[u]+wt)
            {
                dist[node]=dist[u]+wt;
                pq.push(make_pair(-dist[node],node));

            }
        }
    }
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {

        int n,m,q;
        cin>>n>>m;
        for(int i=1;i<=n;i++)
        {
            visited[i]=0;
            adj[i].clear();
            dist[i]=INT_MAX;
        }
        for(int i=0;i<m;i++)
        {
            int a,b,c;
            cin>>a>>b>>c;
            adj[a].push_back(make_pair(c,b));
            adj[b].push_back(make_pair(c,a));
        }
        dij(1);
	cin>>q;
	while(q--)
	{
		int j,k;
		cin>>j>>k;
		if(2*dist[j]>k)
			cout<<0<<endl;
		else
			cout<<(k-2*dist[j])<<endl;
	}
	}
	return 0;
}
