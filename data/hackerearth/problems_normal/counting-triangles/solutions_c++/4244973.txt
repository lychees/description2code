#include <iostream>
#include <set>
#include <algorithm>
using namespace std;
typedef long long ll;
string concatinator(ll a,ll b,ll c)
{
	int temp[2];
	temp[0]=a,temp[1]=b,temp[2]=c;
	sort(temp,temp+3);
	string s=to_string(temp[0]);
	s+=to_string(temp[1]);
	s+=to_string(temp[2]);
	return s;
}
int main(void)
{
	ll t;
	cin>>t;
	set <string> s;
	pair<set<string>::iterator,bool> ret;
	vector <string> v;
	while(t--)
	{
		ll a,b,c;
		cin>>a>>b>>c;
		v.push_back(concatinator(a,b,c));
	}
	ll repeat=0;
	sort(v.begin(),v.end());
	for(ll i=1;i<v.size()-1;i++)
	{
		if(v[i]!=v[i+1]&&v[i]!=v[i-1])
		{
			repeat++;
		}
	}
	if(v[0]!=v[1])repeat++;
	if(v[v.size()-1]!=v[v.size()-2])repeat++;
	cout<<repeat<<endl;
/*	for(ll i=0;i<v.size();i++)
	{
	//	cout<<v[i]<<endl;
		ret=s.insert(v[i]);
		if(ret.second==false)repeat++;
		
	}*/
//	cout<<s.size()-repeat<<endl;
}