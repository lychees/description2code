//Type     :
//Code name:
//Status   :
typedef unsigned long long ull; typedef long long ll;typedef long double ld;
#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstdlib> //for qsort
#include<vector>
#include<list>
#include<map>
#include<cstring>
#include<iterator>//(for advance )
#include<algorithm>
#include<utility> //for std::pair
#include<limits> //for numeric limits
#define loop(i,x,n) for(i=x;i<=n;i++)
#define scani(x) scanf("%d",&x)
#define scanfl(x) scanf("%f",&x)
#define scanc(x) scanf("%c",&x)
#define scand(x) scanf("%lf",&x)
#define scanll(x) scanf("%lli",&x)
#define scanl(x) scanf("%ld",&x)
#define scans(x) scanf("%s",x)
#define printi(x) printf("%d\n",x)
#define printl(x) printf("%ld\n",x)
#define printll(x) printf("%lli\n",x)
#define printd(x) printf("%lf\n",x)
#define printfl(x) printf("%f\n",x)
#define printc(x) printf("%c\n",x)
#define prints(x) printf("%s\n",x);
#define string(x) loop(i,0,strlen(x)-1)
#define newline cout<<"\n"
#define SIZE 1000555
const long N=1000555;
using namespace std;
 
bool isprime[SIZE];long spf[SIZE];
void sieve(long N) 
{
    
    memset(isprime,true,N);
    isprime[0]=false;
    isprime[1]=false;
  	for(long i=2;i*i<=N;++i) 
	{
         if(isprime[i]) 
		 {   
				for(long j=i*i;j<=N;j+=i)
                {
                	isprime[j]=false;
                	if(!spf[j]) spf[j]=i;
                } 
                 
         }
    }
}
int main()
{
	sieve(N);
    
    //before queries
   /* for(long i=2;i<=N;i++)
    {
    	if((isprime[i])&&(spf[i]==0))
	  	spf[i]=i;
	}
    //for(long i=2;i<=N;i++)  cout<<i<<" "<<spf[i]<<"\n";	
    */
   long q;
   cin>>q;
   while(q--)
   {
   	long n;
    scanl(n);
    if(isprime[n]) cout<<0<<endl;
    else
    printl(n-spf[n]);  
    }
   
 }