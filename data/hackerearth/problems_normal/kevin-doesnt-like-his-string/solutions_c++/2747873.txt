#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define FF first
#define SS second

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

const int N = 100001;

string s;
int X[26], Y[26];

vector<int > v[26];
bool removed[N];

int main() {
  int n,k;
  S2(n,k);
  cin >> s;

  rep(i,0,s.size()) {
    X[s[i]-'a']++;
    v[s[i]-'a'].push_back(i);
  }

  string ans;

  rep(i,0,s.size()) {
    int a,b;
    a = b = -1;
    rep(j,0,s[i]-'a') if(X[j]) {
      a = j;
      break;
    }
    rep(j,0,s[i]-'a') if(Y[j]) {
      b = j;
      break;
    }

    // printf("%d %d\n",a,b);

    if(removed[i]) {
      rep(j,0,26) if(X[j]) {
        a = j;
        break;
      }
      rep(j,0,26) if(Y[j]) {
        b = j;
        break;
      }
      if(a != -1 && b != -1) {
        if(b <= a) {
          ans += b + 'a';
          Y[b]--;
        } else {
          ans += a + 'a';
          X[a]--;
          removed[v[a].back()] = true;
          v[a].pop_back();
          k--;
        }
      } else if(a != -1 && b == -1) {
        ans += a + 'a';
        X[a]--;
        removed[v[a].back()] = true;
        v[a].pop_back();
      } else if(a == -1 && b != -1) {
        ans += b + 'a';
        Y[b]--;
        k--;
      } else {
        rep(j,0,26) if(Y[j]) {
          ans += j + 'a';
          Y[j]--;
          break;
        }
      }
    } else if(!removed[i]) {
      if(k <= 1) a = -1;
      // printf("%d %d %d\n",i,a,b);
      if(a != -1 && b != -1) {
        if(b <= a) {
          ans += b + 'a';
          Y[b]--;
          X[s[i]-'a']--;
          Y[s[i]-'a']++;
          k--;
        } else {
          ans += a + 'a';
          X[a]--;
          removed[v[a].back()] = true;
          v[a].pop_back();
          k--;
          X[s[i]-'a']--;
          Y[s[i]-'a']++;
          k--;
        }
      } else if(a != -1 && b == -1) {
        ans += a + 'a';
        X[a]--;
        removed[v[a].back()] = true;
        v[a].pop_back();
        k--;
        X[s[i]-'a']--;
        Y[s[i]-'a']++;
        k--;
      } else if(a == -1 && b != -1) {
        ans += b + 'a';
        Y[b]--;
        X[s[i]-'a']--;
        Y[s[i]-'a']++;
        k--;
      } else {
        ans += s[i];
        X[s[i]-'a']--;
      }
    } else {
      ans += s[i];
    }

    if(!k) {
      // printf("here %d\n",i);
      rep(j,i+1,n) {
        if(removed[j]) {
          rep(k,0,26) if(Y[k]) {
            Y[k]--;
            ans += k + 'a';
            break;
          }
        } else {
          ans += s[j];
        }
      }
      break;
    }
  }

  cout << ans << "\n";

  return 0;
}