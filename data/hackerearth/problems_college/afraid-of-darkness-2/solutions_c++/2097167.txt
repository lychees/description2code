#include <iostream>

int partition(int *A,int p,int r)
{
	int i=p-1,j=p;
	while(j<r)
	{
		if(A[j]<A[r])
		{
			i++;
			int t=A[i];
			A[i]=A[j];
			A[j]=t;
		}
		j++;
	}
	int t=A[i+1];
	A[i+1]=A[r];
	A[r]=t;
	return i+1;
} 
void quicksort(int *A,int p,int r)
{
	if(p<r)
	{
		int q=partition(A,p,r);
		quicksort(A,p,q-1);
		quicksort(A,q+1,r);
	}
} 
int main()
{
	int t, n,m[25005],sum=0,j=0,day,i;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for(i=0;i<n;i++)
			scanf("%d",&m[i]);	
		quicksort(m,0,n-1);
		day=0,j=0;
		do{
			day++;
			for(j=n-1;j>=n-day;j--)
			{
				m[j]=m[j]-1;
			}
			quicksort(m,0,n-1);	
		}while(day!=n && m[n-(day+1)]!=0);
		printf("%d\n",day);
	}
	return 0;
}