#include<bits/stdc++.h>
using namespace std;
#define rep(i, a, b)	for(int i=a; i<b; i++)
const int N = 1250, DIST_MAX = 10000;
int a[N][N], b[N][N], road[N], rail[N], n;
bool vroad[N], vrail[N];

int minDistance(int dist[], bool sptSet[])
{
   int min = DIST_MAX, min_index;
 
   for (int v = 0; v < n; v++)
     if (sptSet[v] == false && dist[v] <= min)
         min = dist[v], min_index = v;
   return min_index;
}

int main(){
	int u, v, dist = 100000;
	scanf("%d",&n);
	rep(i, 0, n)	rep(j, 0, n)	scanf("%d",&a[i][j]);
	rep(i, 0, n)	rep(j, 0, n)	scanf("%d",&b[i][j]);
	scanf("%d %d", &u, &v);
	u--;
	v--;
	
	for (int i = 0; i < n; i++)
       	road[i] = DIST_MAX, vroad[i] = false;
    road[u] = 0;
    vroad[v] = true;
 
	for (int count = 0; count < n-1; count++)
	{
		int u = minDistance(road, vroad);
		vroad[u] = true;
		for (int v = 0; v < n; v++)
			if (!vroad[v] && road[u] != DIST_MAX && road[u]+a[u][v] < road[v])
	    		road[v] = road[u] + a[u][v];
	}

	for (int i = 0; i < n; i++)
       	rail[i] = DIST_MAX, vrail[i] = false;
    rail[v] = 0;
 	vrail[u] = true;

	for (int count = 0; count < n-1; count++)
	{
		int u = minDistance(rail, vrail);
		vrail[u] = true;
		for (int v = 0; v < n; v++)
			if (!vrail[v] && rail[u] != DIST_MAX && rail[u]+b[v][u] < rail[v])
	    		rail[v] = rail[u] + b[v][u];
	}
	rep(i, 0, n){
		if( i!=u && i!=v )
			dist = min(dist, road[i]+rail[i]);
	}


	for (int i = 0; i < n; i++)
       	road[i] = DIST_MAX, vroad[i] = false;
    road[v] = 0;
    vroad[u] = true;
 
	for (int count = 0; count < n-1; count++)
	{
		int u = minDistance(road, vroad);
		vroad[u] = true;
		for (int v = 0; v < n; v++)
			if (!vroad[v] && road[u] != DIST_MAX && road[u]+a[v][u] < road[v])
	    		road[v] = road[u] + a[v][u];
	}

	for (int i = 0; i < n; i++)
       	rail[i] = DIST_MAX, vrail[i] = false;
    rail[u] = 0;
 	vrail[v] = true;

	for (int count = 0; count < n-1; count++)
	{
		int u = minDistance(rail, vrail);
		vrail[u] = true;
		for (int v = 0; v < n; v++)
			if (!vrail[v] && rail[u] != DIST_MAX && rail[u]+b[u][v] < rail[v])
	    		rail[v] = rail[u] + b[u][v];
	}
	rep(i, 0, n){
		if( i!=u && i!=v )
			dist = min(dist, road[i]+rail[i]);
	}
	printf("%d\n",dist);
}	