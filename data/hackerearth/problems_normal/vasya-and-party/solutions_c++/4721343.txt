#include <bits/stdc++.h>

using namespace std;
#define SIZE 1000001
#define MOD 1000000007

void dfs(int v, list<int>*adj,int*visited,vector<long long int>&vec,long long int *k,long long&current)
{
    visited[v] = 1;
    vec.push_back(k[v]);
    current = max(current, k[v]);
    list<int>::iterator i;
    for(i = adj[v].begin();i!=adj[v].end();i++)
    {
        if(!visited[*i])
        {
            dfs(*i,adj,visited,vec,k,current);
        }
    }
}


void vasyaandparty()
{
    int n,m;
    cin>>n>>m;
    int a,b;
    long long int k[n];
    for(int i =0;i<n;i++)
    {
        cin>>k[i];
    }

    list<int>*adj = new list<int>[n];
    for(int i =0;i<m;i++)
    {
        cin>>a>>b;
        adj[a-1].push_back(b-1);
        adj[b-1].push_back(a-1);
    }
    int visited[n];
    memset(visited, 0, sizeof(visited));
    long long int cc[n];
    int j = 0;

    long long int current = INT_MIN;
    vector<long long int>vec;
    for(int i =0;i<n;i++)
    {
        if(visited[i]==0)
        {
            dfs(i,adj,visited,vec,k,current);
            int siz = vec.size();
            int freq = 0;
            for(int x = 0;x<siz;x++)
                if(vec[x]==current)
                    freq++;
            cc[j++] = freq;
            current = INT_MIN;
            vec.clear();
        }
    }

    long long int ans = 1;
    for(int i =0;i<j;i++)
    {
        ans = (ans%MOD * cc[i]%MOD)%MOD;
    }
    cout<<ans<<endl;
}

int main()
{
//    string a = "abcaa";
//    set<char>s(begin(a)+1, begin(a)+2);
//    set<char>::iterator i;
//    for(i = s.begin();i!=s.end();i++)

//    cout<<*i;
//    cout<<endl;
    //littleshinoandtournament();
    vasyaandparty();
    return 0;
}
