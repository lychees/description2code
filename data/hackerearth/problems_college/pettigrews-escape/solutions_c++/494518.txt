#include <iostream>
using namespace std;

static int count = 0;
int *visited;


int a[][4] = {{-1,0},{0,1},{1,0},{0,-1}};

void solveMaze (int cell[][85],int n,int currCell_i,int currCell_j){
	
	if (currCell_i == n-1 && currCell_j == n-1)
		count++;
	else {
		
		visited[currCell_i * n + currCell_j] = 1;
		for (int i = 0;i < 4;i++){
			
			int nextCell_i = a[i][0] + currCell_i;
			int nextCell_j = a[i][1] + currCell_j;
			
			if(nextCell_i >= 0 && nextCell_i < n && nextCell_j >= 0 && nextCell_j < n){
				
				if(!visited[nextCell_i * n + nextCell_j] && cell[nextCell_i][nextCell_j] == 0){
					solveMaze (cell, n, nextCell_i, nextCell_j);
					
				}
				
			}
			
			
		}
		visited[currCell_i * n +currCell_j] = 0;
	}
	
}
int main()
{
	int T;
	cin >> T;

	int cell[85][85];
	visited = new int[T*T]();	
	for(int i = 0;i < T;i++)
		for(int j = 0;j < T;j++)
			cin >> cell[i][j];
	
	solveMaze(cell,T,0,0);
	cout << count;
	
    return 0;
}
