#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e3+2;
long long dp[MAXN][MAXN];
const int MOD = 1e9+7;
int n,m;
long long go(int idx, int cur) {
	if(idx==n+1 and n-cur>cur)
		return 1;
	else if(idx==n+1)
		return 0;
	if(dp[idx][cur]!=-1)
		return dp[idx][cur];
	int can=idx/(m+1);
	if(can>cur)
		return dp[idx][cur]=(go(idx+1,cur)+go(idx+1,cur+1))%MOD;
	else
		return dp[idx][cur]=go(idx+1,cur)%MOD;
}
int main() {
	int t;
	cin>>t;
	while(t--) {
		memset(dp,-1,sizeof(dp));
		cin>>n>>m;
		cout<<go(1,0)<<endl;
	}
	return 0;
}