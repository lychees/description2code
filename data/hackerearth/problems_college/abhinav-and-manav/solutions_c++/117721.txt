#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;
long long mirror(long long n)
{
    long long a=0;
    long long mu=1;
    while(n)
    {
        a=a+(9-n%10)*mu;
        mu*=10;
        n/=10;
    }
    return a;
}
int noofdig(long long n)
{
    int a=0;
    while(n)
    {
        a++;
        n/=10;
    }
    return a;
}
long long hor(int dig)
{
    int i=1;
    long long a=1;
    while(i<dig)
        {
            a*=10;
            i++;
        }
        return 5*a;
}
long long last(int dig)
{
    int i=0;
    long long a=1;
    while(i<dig)
    {
        a*=10;
        i++;
    }
    return a-1;
}
int main()
{
    int t;
    scanf(" %d",&t);
    while(t--)
    {
    long long a,b;
        scanf(" %lld %lld",&a,&b);
        int nb=noofdig(b);
        long long opt=hor(nb);
        long long zer=last(nb);
        long long ans;
    //    opt--;
    //    cout<<"opt "<<opt<<" xzero "<<zer<<endl;
        if(opt<=b && opt>=a)
        {
        //    printf("%lld\n",opt*mirror(opt));
        ans=opt;
        }
        else
        {
            if(noofdig(a)==noofdig(b))
            {
                if(b<opt)
                {
                    ans=b;
                }
                else
                {
                    ans=a;
                }
            }
            else
            {
                if(b==zer)
                {
                    b--;
                }
                ans=b;
            }


        }
          printf("%lld\n",ans*mirror(ans));
      /*  long long a;
        cin>>a;
        int b=noofdig(a);
        cout<<noofdig(a)<<" "<<hor(b)<<" "<<last(b)<<endl;*/

    }
	return 0;
}
