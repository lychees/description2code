#include<iostream>
#include<utility>
#include<queue>
#include<algorithm>
#include<list>
#define ii pair< int ,int >
#define MAX 555
#define MAXM 100005 
using namespace std;
typedef long long ll;
 
list<ii> adj[MAX];
 
struct cmp{
       bool operator()(const ii &a,const ii &b)
       {
            return a.first>b.first;
            }
            };
 
 
void addEdge(int u,int v,int wt)
{
     adj[u].push_back(make_pair(v,wt));
     adj[v].push_back(make_pair(u,wt));
     }
 
 
int d[MAX];
 
 
void initialize(int src)
{
     for(int i=0;i<MAX;i++)
     d[i]=MAXM;
 
     d[src]=0;
     }
 
     void dijsktra(int src)
     {
 
    priority_queue< ii ,vector< ii >, cmp > pq;
    pq.push(make_pair(0,src));
 
    while(!pq.empty())
    {
 
    ii p=pq.top();                  
     pq.pop();
 
     list<ii>::iterator it;
 
     for(it=adj[p.second].begin();it!=adj[p.second].end();it++)
     {
     int u=p.second;
     int v=it->first;
     int wt=it->second;                                                          
 
               if(d[v]>d[u]+wt) 
              {
               d[v]=d[u]+wt;
               pq.push(make_pair(d[v],v));
               }                                               
     }                 
 
 
    }
 
          }
 
int main()
{
   
 int n,m;
 cin>>n;
 
 
 
 for(int i=0;i<n;i++)
 {
         int u,v,wt;
         cin>>u>>v>>wt;
         addEdge(u,v,wt);
         }   
 
         int src,des;
         cin>>src;
 
    initialize(src);
    dijsktra(src);
    cin>>m;
    for(int i=0;i<m;i++){
    cin>>des;
    if(d[des]!=MAXM)
      cout<<d[des]<<endl;
      else
      cout<<"NO PATH\n";
    }
    //system("pause");
    return 0;
}