#include<bits/stdc++.h>
using namespace std;
void prefix_function(string pat, int m, int prefix_table[])
{
    int i,j;
    i=1;j=0;
    prefix_table[0]=0;
    while(i<m)
    {
        if(pat[j]==pat[i])
        {
            prefix_table[i]=j+1;
            j++;
            i++;
        }
        else
        {
            if(j!=0)
            {
                j=prefix_table[j-1];
            }
            else
            {
                prefix_table[i]=0;
                i++;
            }
        }
    }
}
int kmp(string txt, string pat,int n, int m)
{
    int prefix_table[m];
    prefix_function(pat,m,prefix_table);
    int i=0,j=0,flag=0;
    while(i<n)
    {
        if(pat[j]==txt[i])
        {
            i++;
            j++;
        }
        else
        {
            if(j!=0)
            {
                j=prefix_table[j-1];
            }
            else
            {
                i++;
            }
        }
    }
    return (i-j);
}
string mix(string txt,string pat)
{	
	 int n=txt.size();
	 int m=pat.size();
	 int i;
	 vector<char>vec;
	 int pos=kmp(txt,pat,n,m);
	 for(i=0;i<pos;i++)
	 {
	 	vec.push_back(txt[i]);
	 }
	 for(i=0;i<m;i++)
	 {
	 	vec.push_back(pat[i]);
	 }
	 string temp;
	 for(i=0;i<vec.size();i++)
	 {
	  	temp+=vec[i];
	 }
	return temp;
}
int main()
{
	int t;
	cin>>t;
    string str[t];
    int i;
    int a[10],ans=1000000;
   	for(i=0;i<t;i++)
    {
    	cin>>str[i];
    	a[i]=i;
	}
	do
    {
    	string res;
        res=str[a[0]];
        for(i=1; i<t; i++)
        {
           	res=mix(res,str[a[i]]);
        }
        if(res.length()<ans)
        {
        	ans=res.length();
        }
    }while(next_permutation(a,a+t));
    cout<<ans<<endl;
}
