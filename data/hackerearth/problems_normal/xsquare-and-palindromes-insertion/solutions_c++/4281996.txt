#include <bits/stdc++.h>
using namespace std;
#define ll int
#define F(i,a,b) for(ll i=(ll)a;i<=(ll)b;i++)
int min(int a,int b)
{
	int v=(a>=b)?a:b;
	return v;
}
ll find(string s)
{
	int len=s.length();
	int table[len][len];
	memset(table,0,sizeof(table));
	int l,h;
	F(gap,1,len-1)
	{
	  for(l=0,h=gap;h<len;++l,++h)
	  table[l][h]=(s.at(l)==s.at(h))?(table[l+1][h-1]):(min(table[l+1][h],table[l][h-1])+1);
	}
	return table[0][len-1];
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	string s;
    	cin>>s;
    	int flag=0;
    	int count[26]={0};
    	F(i,0,s.length()-1)
    	count[s.at(i)-97]++;
    	F(i,0,25)
    	{
    		if(count[i]%2!=0)
    		flag++;
    	}
    	if(flag<=1)            // only one odd present and so shuffing can be done
    	cout<<"0"<<"\n";
    	else
    	{
    	cout<<flag-1<<"\n";
    	}
    }
    return 0;
}
