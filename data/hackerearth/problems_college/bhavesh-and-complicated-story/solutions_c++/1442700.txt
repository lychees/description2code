
#define MAX 1000005
#include <bits/stdc++.h>
using namespace std;


int getSum(int BITree[], int n, int index)
{
    int sum = 0;

    index = index + 1;

    while (index>0)
    {
        sum += BITree[index];
        index -= index & (-index);
    }
    return sum;
}


void updateBIT(int *BITree, int n, int index, int val)
{

    index = index + 1;

    while (index <= n)
    {

       BITree[index] += val;


       index += index & (-index);
    }
}


int *constructBITree(int arr[], int n)
{

    int *BITree = new int[n+1];
    for (int i=1; i<=n; i++)
        BITree[i] = 0;

    for (int i=0; i<n; i++)
        updateBIT(BITree, n, i, arr[i]);



    return BITree;
}

int freq[MAX]={0};
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        freq[x]++;
    }

    int *BITree = constructBITree(freq,MAX);

    int q;
    cin>>q;
    while(q--)
    {
        int type;
        cin>>type;
        if(type==0)
        {
            int x,y;
            cin>>x>>y;
            if(x==0)
                cout<<getSum(BITree, MAX, y)<<'\n';
            else
                cout<<getSum(BITree, MAX, y)-getSum(BITree, MAX, x-1)<<'\n';
        }

        else
        {
            int z;
            cin>>z;
            if(type==2)
                updateBIT(BITree, MAX, z, 1);
            else
                updateBIT(BITree, MAX, z, -1);
        }
    }

    return 0;
}
