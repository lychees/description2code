#include <bits/stdc++.h>
#include <stdlib.h>
using namespace std;
typedef long long ll;
int main()
{
    int t=0;
    cin>>t;
    while(t--)
    {
    	int n=0;
    	cin>>n;
    	int arr[n];
    	for(int i=0; i<n; i++)
    		scanf("%d",&arr[i]);
    	
    	if(n == 1)
    	{
    		cout<<1<<"\n";
    		continue;
    	}
    	
		ll maxSight = 0; 
		int index = -1;
    	
    	ll DP1[n];
    	ll DP2[n];
    	
    	memset(DP1, 0, sizeof(DP1));
    	memset(DP2, 0, sizeof(DP2));
    	
	   	for(int i=0; i<n; i++)
	    {
	    		int j=i-1;
	    		
	    		while(j>=0 && arr[i] > arr[j] && DP1[j])
	    		{
	    			DP1[i] += DP1[j];
	    			j = j - DP1[j];
	    		}
	    		
	    		if(j>=0)
	    			DP1[i]++;
	   	}

	  	for(int i=n-1; i>=0; i--)
	    {
	    	int j=i+1;
	    	while(j<n && arr[i] > arr[j] && DP2[j])
	    	{
	    		DP2[i] += DP2[j];
	    		j = j + DP2[j];
	    	}
	    	
	    	if(j < n)
	    			DP2[i]++;
	    }
   	

	   	for(int i=0; i<n; i++)
	   	{
   			ll sight = 0;
    		//cout<<sightArr[i]<<"\t";	
    		sight = ((DP1[i] + DP2[i])*(i+1)) % 1000000007;
    		if(sight > maxSight)
    		{
    			maxSight = sight;
    			index = i+1;
    		}
	    }
    	
    	printf("%d\n", index);
    }
    return 0;
}
