//template belongs to
// __  __    _        _     _____
//|  \/  |  / \      / \   |__  /
//| |\/| | / _ \    / _ \    / /
//| |  | |/ ___ \  / ___ \  / /_
//|_|  |_/_/   \_\/_/   \_\/____|

#include <bits/stdc++.h>
using namespace std;

#define fst ios_base::sync_with_stdio(0)
#define inpt int t; cin>>t; while(t--)
#define foru(i, a, b) for(i = a; i < b ; i++)
#define ford(i, a, b) for(i = a; i > b ; i--)
#define fori(it, v) for(it = v.begin(); it != v.end(); it++)
#define v(t) vector<t>
#define vti(t) vector<t>::iterator
#define sz(v) v.size()
#define clr(v) v.clear()
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define mtti(t1,t2) map<t1,t2>::iterator
#define itf(it) it->first
#define its(it) it->second
#define MOD 1
#define INF 1

typedef long long int ll;

v(int) primes;
int arr[5000003] = {0};

void sieve(int limit)
{
    int i;
    foru(i,2,limit+1) arr[i] = 1;
    i = 2;
    while(i<=limit)
    {
        primes.pb(i);
        int j = 2*i;
        while(j<=limit)
        {
            arr[j] = 0;
            j+=i;
        }
        i++;
        while(i<=limit && !arr[i])
            i++;
    }
}

int main()
{
    fst;
#ifndef ONLINE_JUDGE
    freopen("in", "r", stdin);
#endif
    sieve(5000001);
    inpt
    {
        int x, y;
        cin >> x >> y;
        ll ans = 0;
        if(x==y)
        {
            if(binary_search(all(primes), y)) cout << -y << endl;
            else cout << y << endl;
        }
        else
        {
            while(x!=y)
            {
                //cout << x << " " << y << endl;
                if(x>y)
                {
                    if(binary_search(all(primes), x)) ans -= x;
                    else ans += x;
                    x >>= 1;

                }
                else
                {
                    if(binary_search(all(primes), y)) ans -= y;
                    else ans += y;
                    y >>= 1;

                }
            }
            if(binary_search(all(primes), y)) ans -= y;
            else ans += y;

            cout << ans << endl;
        }


    }
    return 0;
}

