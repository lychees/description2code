#include<bits/stdc++.h>
using namespace std;
const int MAXN = 35;
long long dp[2*MAXN+10][MAXN][MAXN];
const int MOD = 1e9+9;
int x2,y2;
long long go(int chan, int x, int y) {
	if(max(x,y)-min(x,y)>=2 and max(x,y)>=11 and (x!=x2 or y!=y2))
		return 0;
	else if(x==x2 and y==y2)
		return 1;
	else if(x>x2 or y>y2)
		return 0;
	if(dp[chan][x][y]!=-1)
		return dp[chan][x][y];
	long long &ret=dp[chan][x][y];
	ret=(go(chan+1,x+1,y)%MOD+go(chan+1,x,y+1)%MOD)%MOD;
	return ret;
} 
int main() {
	int t;
	cin>>t;
	for(int var=1;var<=t;var++) {
		memset(dp,-1,sizeof(dp));
		int x1,y1;
		cin>>x1>>y1>>x2>>y2;
		bool f=true;
		if(x1>x2 or y1>y2)
			f=false;
		else if(max(x2,y2)>11) {
			if(max(x2,y2)-min(x2,y2)!=2)
				f=false;
		}
		else if(max(x2,y2)==11) {
			if(min(x2,y2)>9)
				f=false;
		}
		else
			f=false;
		if(!f) {
			cout<<"Case "<<var<<": "<<-1<<"\n";
			continue;
		}
		long long ans=go(1,x1,y1);
		if(!ans)
			ans=-1;
		cout<<"Case "<<var<<": "<<ans<<"\n";
	}
	return 0;
}//