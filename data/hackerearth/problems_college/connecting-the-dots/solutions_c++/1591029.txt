#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LL long long
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define MOD 1000000000
#define SQ 112345
#define N 112345
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, A, B) for (int I = A; I <= B; ++I)
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define PII pair<int,int>

int val[N][3], vis[N][3];
vector<pair<int, int> > adj[N];
int solve(){
    int n, m, x, y, c;
    cin>>n>>m;
    REP(i, 1, m){
        sd(x); sd(y); sd(c);
        adj[x].PB(MP(y, c));
    }
    queue<pair<int, int> > q;
    q.push(MP(1, 1));
    q.push(MP(1, 2));
    q.push(MP(1, 3));

    val[1][1] = 0;
    val[1][2] = 0;
    val[1][3] = 0;

    vis[1][1] = 1;
    vis[1][2] = 1;
    vis[1][3] = 1;
    while(!q.empty()){
        x = q.front().F;
        y = q.front().S;
        int ch, i;
        for(i = 0; i < adj[x].size(); i++){
            ch = adj[x][i].F;
            c = adj[x][i].S;
            if(c == y) continue;
            if(vis[ch][c] == 0){
                vis[ch][c] = 1;
                q.push(MP(ch, c));
                val[ch][c] = val[x][y] + 1;
            }
        }
        q.pop();
    }
    int ans = 5 * n;
    REP(i, 1, 3){
        if(vis[n][i] == 1){
            ans = min(ans, val[n][i]);
        }
    }
    if(ans == 5 * n){
        cout<<-1<<endl;
    }
    else 
    	cout<<ans<<endl;
}

int main(){

    //freopen("in.txt", "r", stdin);
    int t = 1;
//    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
