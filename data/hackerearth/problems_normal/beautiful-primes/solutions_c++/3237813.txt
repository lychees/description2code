//includes all headers
#include<bits/stdc++.h>

//change/set namespace
using namespace std;

//Define useful macros

/* MIN MAX macros */
#define min(a,b) (((a)<(b))?(a):(b))                            // Compute Minimum of two numbers
#define max(a,b) (((a)>(b))?(a):(b))                            // Compute Maximum of two numbers

/* Loop macros */
#define FOR(i,a,b) for(int i= (int )a,_1##i=(b) ; i <= _1##i ; ++i)     // loop to iterate over [a,b] -- increasing sequence
#define FORD(i,a,b) for(int i= (int )a,_1##i=(b) ; i >=_1##i  ; --i)    // loop to iterate over [b,a] -- decreasing sequence
#define REP(i,c) for(int _1##i=(c)-1,i=0 ; i <=_1##i ; ++i)             // loop to iterate over [0,c) -- increasing sequence

/* Initialization macro -- Also fill() can do same thing using fill(a,a+c,b) */
#define MEMSET(a,b,c) REP(i,(c))a[i]=(b)                        // macro to initialize array "a" with value "b" over the range [0,c)

/* Iterator macros */
#define LET(x,a) __typeof(a) x(a)                               // create a copy(temp/local scope) of "a" in "x"        Eg. --int n=100;LET(N,n);cout<<N;//prints 100
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)                    // supports - Iterate over a container                      --helper
//***********//
#define EACH(it,v) IFOR(it,v.begin(),v.end())                   // Iterate over a container
#define ALL(x) x.begin(),x.end()                                // define the whole range of a container
#define VFIND(c,x) (find(ALL(c),(x)) != (c).end())              // find key "x" in vector "c"

/* Fast i/o macros */
#define gc() getchar_unlocked()                                 //thread unsafe version of getchar()
#define pc(x) putchar_unlocked(x)                               //thread unsafe version of putchar()

//remove below two lines when submitting code
#define getchar_unlocked() getchar()                            //USELESS while executing on on-line JUDGE                  --REMOVE WHILE SUBMITTING
#define putchar_unlocked(x) putchar(x)                          //USELESS while executing on on-line JUDGE                  --REMOVE WHILE SUBMITTING

/* Data type related macros */
#define lli long long int                                       // lli as shorter name %lld is format specifier
#define PB push_back                                            // push_back() for vector
#define F first                                                 // for pairs - get first member
#define S second                                                // for pairs - get second member

//typedefinitions
typedef pair<int,int> PI;                                       // pair of two integers
typedef pair<PI,int> PPII;                                      // pair of PI and int i.e., F is of form pair<int,int> and S of int

//Define constants here
#define INF INT_MAX
#define NINF INT_MIN

/*****************************************************************
************************ START HERE ******************************
************************ START HERE ******************************
******************************************************************/

lli mod =  1e9+7;
int expo(int A,int b)
{
    lli ans=1,a=A;
    while(b)
    {
        if(b&1)ans=(ans*a)%mod;
        a=(a*a)%mod;
        b>>=1;
    }
    return ans;
}
//Main code
int p[100000],a[100000];
int main()
{
    ios_base::sync_with_stdio(false);
    int t,x;
    cin>>t;
    while(t--)
    {
        cin>>x;
        lli temp=1;
        REP(i,x)
        {
            cin>>p[i];
        }
        REP(i,x)
        {
            cin>>a[i];
        }
        REP(i,x)
        {
            temp=(temp*p[i])%mod;
            temp=(temp*(expo(p[i],a[i])-1+mod))%mod;
            temp=(temp*expo(p[i]-1,mod-2))%mod;
        }
        cout<<temp<<endl;
    }
    return 0;
}


