#include <iostream>
#include <cmath>
using namespace std;

void solve( int p , int d ){
	int r = 1 , newp = 1 , newd =  1 ;
	if( p == 1 ){
		cout<<0<<endl ;
		return ;
	}
	int r1 = (int)(log(d) / log(2));
	int s1 = pow(2, r1);
	if( s1 < p ){
	   r += r1 ;
	   newp = s1 ;
	   newd = s1 ;
	   newp += newd ;
       newd = d ;
       r++;
       int newr = (p-newp)/d ;
	   int u = (p-newp)%d ;
	   if( u > 0 )
           r = r + newr +1 ;
	   else
		   r = r + newr  ;
       
	}
	else{
	
	//cout<<r1<<" "<<s1<<endl ;
	  while(newp < p  ){
		if( newd * 2 <= d ){
		    newp = newp * 2  ;
			newd = newd * 2  ;
			
		}
		else{
		   
			newp += newd ;
		    newd = d ;
			
		} 
		r++ ;
		//cout<<r<<" "<<newp<<" "<<newd<<endl ;
	  }
	}
	cout<<r<<endl ;
}

int main()
{
    int n ,t;
	cin>>n ;
	for( int i = 0 ; i < n ; i++ ){
	    int p,  d;
		cin>>p>>d ;
		
		solve( p , d ) ;
	}
	//cin>>t ;
    return 0;
}
