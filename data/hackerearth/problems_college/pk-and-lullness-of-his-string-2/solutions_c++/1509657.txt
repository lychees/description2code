#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;
#define LL long long
#define pb push_back
#define pLL pair<LL,LL>
#define ff first
#define ss second
#define pii pair<int,int>
#define rep(i,a,b) for(LL i=a;i<=b;++i)
#define ld long double
#define tr(n) cin>>n
#define tr2(n,m) cin>>n>>m
#define tr3(a,b,c) cin>>a>>b>>c
#define mp make_pair
#define vLL vector<LL>
#define vpLL vector<pLL>
#define vii vector<pii>
#define vii vector<pii>
#define vld vector<ld>
#define pld pair<ld,ld>
#define vpld vector<pld>
#define Si set<int>
#define SLL set<LL>
#define SpLL set<pLL>
#define Sii set<pii>
#define fill(a,v) memset(a,v,sizeof(a))
#define oo 1000000007
#define M 1000000007

LL poww(LL a , LL n)
{
  if(n==0)
    return 1LL;
  if(n==1)
    return a%M;
  LL v=poww(a,(n/2));
  v=(v*v)%M;
  if(n%2)
  {
    v=(v*a)%M;
  }
  return v;
}

LL dp1[200005];
LL dp2[200005];
string s;
LL ncr[200005];


int main()
{
	int t;
  cin>>t;
  while(t--)
  {
    memset(dp1,0,sizeof(dp1));
    memset(dp2,0,sizeof(dp2));
    memset(ncr,0,sizeof(ncr));



    LL n,l;
    cin>>s>>l;
    n=s.size();
    LL r=(l/2);

     ncr[r]=1;
     for(LL i=r+1;i<=100005;++i)
     {
      ncr[i]=(i*ncr[i-1])%M;
      ncr[i]*=poww(i-r,M-2);
      ncr[i]%=M;
     } 
 /*    for(int i=0;i<=n;++i)
     {
     	cout<<ncr[i]<<" ";
     }cout<<endl;*/
	for(int i=0;i<s.size();++i)
  	{
    dp1[i+1]+=dp1[i];dp1[i+1]%=M;
    if(s[i]=='l')dp1[i+1]++;
    dp1[i+1]%=M;
  	}

	for(int i=s.size()-1;i>=0;--i)
  	{
    dp2[i+1]+=dp2[i+2];dp2[i+1]%=M;
    if(s[i]=='l')dp2[i+1]++;
    dp2[i+1]%=M;
  	}
  LL anse=0;
  for(int i=1;i<=n;++i)
  {
    if(s[i-1]=='u')
    {
      anse+=(ncr[dp1[i-1]]*ncr[dp2[i+1]]);
      anse%=-M;
    }

  }
  cout<<anse<<endl;
	}
	return 0;
}
