/*
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-8
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256

const int N = 1500000;

using namespace std;

int pw[N];
int dp[505000][15];
int cnt[505000];
int n, m, k;

void add(int &a, int b)
{
	a += b;
	if (a >= bs)
		a -= bs;
}

int main(){
	//freopen("route.in","r",stdin);
	//freopen("route.out","w",stdout);
	//freopen("C:/input.txt","r",stdin);
	//freopen("C:/output.txt","w",stdout);
	ios_base::sync_with_stdio(0);
	//cin.tie(0);

	pw[0] = 1;
	for (int i = 1; i <= 1000000; i++)
		pw[i] = pw[i - 1] * 2 % bs;

	cin >> n >> k >> m;
	for (int i = 1; i <= n; i++)
	{
		int val;
		cin >> val;
		cnt[val]++;
	}
	dp[0][0] = 1;

	for (int i = 1; i <= k; i++)
	{
		for (int j = 0;  j <= m; j++)
		{
			add(dp[i][j], dp[i - 1][j]);
			if (j)
			{
				int ways = 1ll * (pw[cnt[i]]-1) * dp[i - 1][j - 1] % bs;
				add(dp[i][j], ways);
			}
		}
	}
	
	int ans = 0;
	for (int i = 0; i <= m; i++)
	{
		add(ans, dp[k][i]);
	}
	cout << ans << endl;
	
	cin.get(); cin.get();
	return 0;
}