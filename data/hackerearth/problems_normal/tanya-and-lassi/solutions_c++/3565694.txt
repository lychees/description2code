#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
int maximum_profit(int l, int available_lassi, int L, int cost[]){
	if(l == L)
		return 0;
	if(l + 1 > available_lassi){
		return 0;
	}
	return max(cost[l] + maximum_profit(l, available_lassi - (l + 1), L, cost), maximum_profit(l + 1, available_lassi, L, cost));
}
int main()
{
    int T = 0;
    scanf("%d", &T);
    for(int t = 0; t < T; t++){
    	int L = 0;
    	scanf("%d", &L);
    	int cost[L];
    	for(int l = 0; l < L; l++){
    		scanf("%d", &cost[l]);
    	}
		unsigned long long int Mem[L + 1], MemPre[L+1];
		for(int i = 0; i <= L; i++)
			MemPre[i] = 0;
		for(int i = L - 1; i >= 0; i--){
			for(int j = i + 1; j <= L; j++){
				if(i + 1 > j)
					Mem[j] = 0;
				else{
					int k = j - (i + 1);
					unsigned long long int d =0;
					unsigned long long int c =0;
					if(!(i + 1 > k))
						c = Mem[k];
					if(!(i + 2 > j))
						d = Mem[j];
					Mem[j] = max(cost[i] + c, d);
					//cout << "(" << i << ", " << j  << ")";
					//cout << "(" << i << ", " << j - (i + 1) << ")";
					//cout << Mem[j] << " " << c << " " << MemPre[j] << endl;;
				}
				//cout << Mem[j] << " ";
			}
			for(int j = i + 1; j <= L; j++)
				MemPre[j] = Mem[j];
			//cout << endl;
		}
    	//printf("%d\n", maximum_profit(0, L, L, cost));
    	printf("%lld\n", Mem[L]);
    }
    return 0;
}
