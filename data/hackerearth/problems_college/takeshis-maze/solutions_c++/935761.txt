#include <algorithm>
#include <assert.h>
#include <bitset>
#include <cmath>
#include <ctype.h>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <limits.h>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <stdio.h>
#include <string>
#include <string.h>
#include <time.h>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;
typedef pair<int,int> ipair;
typedef vector<int> vi;

#define MAX 1000000007
#define MOD 1000000007
#define F first
#define S second
#define SZ size()
#define BG begin()
#define EN end()
#define FI freopen("I.txt","r",stdin)
#define FO freopen("O.txt","w",stdout)
#define GT(a) int a;scanf("%d",&a)
#define PT(a) printf("%d\n",a)
#define MP(a,b) make_pair(a,b)
#define PB(a) push_back(a)
#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define rev(i,n) for(int i=n;i>=0;i--)
#define take(ar,n) int ar[n][n]; rep(i,n) rep(j,n) cin>>ar[i][j]
#define MS(a,b) memset(a,b,sizeof(a))
bool valid(int a,int b,int n)
{
    if(a>=0 && a<n && b>=0 && b<n) return true;
    else return false;
}
int main()
{
    GT(test);
	while(test--)
	{
		GT(n);
		GT(c);
		take(ar,n);
		int r=0;
		for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(valid(i-1,j,n) && valid(i,j-1,n)) ar[i][j]+=max(ar[i-1][j],ar[i][j-1]);
                else if(valid(i-1,j,n) && !valid(i,j-1,n)) ar[i][j]+=ar[i-1][j];
                else if(!valid(i-1,j,n) && valid(i,j-1,n)) ar[i][j]+=ar[i][j-1];
            }
        }
        printf("%d\n",ar[n-1][n-1]>=c?ar[n-1][n-1]-c:-1);
	}
    return 0;
}