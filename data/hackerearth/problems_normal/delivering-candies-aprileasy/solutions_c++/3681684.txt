using namespace std;
#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <stack>
#include <cstring>
#include <cmath>
#include <set>

#define MAX 100100
#define pb push_back
#define mp make_pair
#define F first
#define S second

typedef long long ll;

int n, m, s, v[MAX];
vector<pair<int, int> > adj[MAX];
set<pair<ll, int> > myS;
ll dist[MAX];
bool ctrl[MAX];

void f(){
	
	for(int i = 0;i < adj[s].size();i++){
		myS.insert(mp((ll)adj[s][i].F, adj[s][i].S));
	}
	
	ctrl[s] = true;
	dist[s] = 0;
	
	while(!myS.empty()){
		pair<ll, int> aux = *myS.begin();
		myS.erase(aux);
		
		if(ctrl[aux.S]) continue;
		dist[aux.S] = aux.F;
		ctrl[aux.S] = true;
		
		for(int i = 0;i < adj[aux.S].size();i++){
			if(!ctrl[adj[aux.S][i].S])
				myS.insert(mp(aux.F+(ll)adj[aux.S][i].F, adj[aux.S][i].S));
		}
	}
}

int main(){
	
	cin >> n >> m >> s;
	for(int i = 1;i <= n;i++) cin >> v[i];
	for(int x, y, c, i = 0;i < m;i++){
		cin >> x >> y >> c;
		
		adj[x].pb(mp(c, y));
		adj[y].pb(mp(c, x));
	}
	
	memset(dist, -1, sizeof(dist));
	memset(ctrl, false, sizeof(ctrl));
	f();
	
	ll res = 0;
	ll sum = 0;
	for(int i = 1;i <= n;i++) if(dist[i] == -1) v[i] = 0;
	for(int i = 1;i <= n;i++){ res += dist[i]*(ll)v[i]; sum += (ll)v[i]; }
	
	for(int i = 1;i <= n;i++){
		if(dist[i] == -1) cout << 0;
		else cout << (res-dist[i]*(ll)v[i])+(sum-(ll)v[i])*dist[i];
		cout << " \n"[i == n];
	}

	return 0;
}
