#include <bits/stdc++.h>
#define ll long long
using namespace std;
char mat[1010][1010];
ll int dpr[1010][1010],dpc[1010][1010];
string s;
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll int m,n,ans;
	cin>>m>>n;
	ll int i,j,r1,r2,c1,c2;
	for(i=0;i<m;i++)
	{
		cin>>s;
		for(j=0;j<n;j++)
		mat[i][j]=s.at(j);
	}
	for(i=0;i<m;i++)
	{
		ans=0;
		for(j=n-1;j>=0;j--)
		{
			if(mat[i][j]=='x')//swamp
			{
				ans=0;
			}
			else
			ans+=1;
			dpr[i][j]=ans;
		}
	}
	for(j=0;j<n;j++)
	{
		ans=0;
		for(i=(m-1);i>=0;i--)
		{
			if(mat[i][j]=='x')//swamp
			{
				ans=0;
			}
			else
			ans+=1;
			dpc[i][j]=ans;
		}
	}
	/*
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		cout<<dpr[i][j]<<" ";
		cout<<endl;
	}
	cout<<endl;
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
		cout<<dpc[i][j]<<" ";
		cout<<endl;
	}
	*/
	vector<ll int> v;
	vector<ll int>::iterator it1,it2;
	ans=0;
	for(r1=0;r1<m;r1++)
	{
		for(r2=r1+1;r2<m;r2++)
		{
			v.clear();
			for(j=0;j<n;j++)
			{
				if(dpc[r1][j]>=(r2-r1+1))
				{
					v.push_back(j);
					//~ cout<<r1<<" "<<r2<<" "<<j<<endl;
				}
				
			}
			for(j=0;j<v.size();j++)
			{
				c1=v[j];
				if(mat[r1][c1]=='x'||mat[r2][c1]=='x')
				continue;
				//~ cout<<upper_bound(v.begin(),v.end(),c1+dpr[r2][v[j]]-1)-v.begin()<<endl;
				//~ cout<<upper_bound(v.begin(),v.end(),c1+dpr[r1][v[j]]-1)-v.begin()<<endl;
				c2=min(upper_bound(v.begin(),v.end(),c1+dpr[r2][v[j]]-1)-v.begin(),upper_bound(v.begin(),v.end(),c1+dpr[r1][v[j]]-1)-v.begin());
				if(c2>0)
				c2=v[c2-1];
				if(c2>c1)
				{
					//~ cout<<r1<<" "<<r2<<" "<<c1<<" "<<c2<<endl;
					ans=max(ans,(2*((r2-r1)+(c2-c1))));
				}
			}
		}
	}
	if(ans==0)
	cout<<"impossible"<<endl;
	else
	cout<<ans<<endl;
	return 0;
}
