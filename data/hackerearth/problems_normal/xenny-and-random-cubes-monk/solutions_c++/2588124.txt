/*
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
#include <assert.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-8
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512

using namespace std;

void add(int &a,int &b)
{
	a+=b;
	if (a>=bs)
		a-=bs;
}

int n,k;
string S[20][20];
string st;
int dp[20][1<<15];

int main(){
//freopen("beavers.in","r",stdin);
//freopen("beavers.out","w",stdout);
//freopen("F:/in.txt","r",stdin);
//freopen("F:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>n>>k;
for (int i=0;i<n;i++)
{
	for (int j=0;j<6;j++)
	{
		cin>>S[i][j];
	}
}

cin>>st;
dp[0][0]=1;
for (int i=0;i<n;i++)
	for (int mask=0;mask<(1<<st.size());mask++)
	{
		for (int j=0;j<6;j++)
		{
			for (int ad=0;ad<st.size();ad++)
			{
				if (S[i][j][0]==st[ad]&&((mask&(1<<ad))==0))
					add(dp[i+1][mask|(1<<ad)],dp[i][mask]);
				
			}
		}
			add(dp[i+1][mask],dp[i][mask]);
	}

//cout<<dp[2][1]<<endl;

cout<<dp[n][(1<<k)-1]<<endl;

//cin.get();cin.get();
return 0;}