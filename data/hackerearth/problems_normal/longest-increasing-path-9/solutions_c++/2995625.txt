#include<bits/stdc++.h>
#define ll long long int
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define w(t) while(t--)
#define f(i,n) for(i=0;i<n;i++)
#define fd(i,n) for(i=n-1;i>=0;i--)
#define p(a) printf("%d",a)
#define pl(a) printf("%lld",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define ent printf("\n")
#define maxn 100000
#define mod 1000000007
#define po(a,b) (long long int)pow((double)(a),(double)(b))
#define abs(a) (long long int)abs((double)(a))
#define min(a,b) (a<b?a:b)
#define max(a,b) (a>b?a:b)
using namespace std;
ll arr[102][102],dp[102][102];
int main()
{ll t,n,m,i,j,max;
  sl(t);
   w(t)
    {memset(dp,0,sizeof(dp));
    	sl(n);sl(m);
    	 f(i,n)
    	  f(j,m)sl(arr[i][j]);
    	  dp[0][0]=1;max=1;
    	   for(i=1;i<n;i++)
    	    {
    	    	if(arr[i][0]>arr[i-1][0])dp[i][0]=dp[i-1][0]+1;
    	    	 else break;
    	          if(dp[i][0]>max)max=dp[i][0];   	
    	    }
    	    for(i=1;i<m;i++)
    	    {
    	    	if(arr[0][i]>arr[0][i-1])dp[0][i]=1+dp[0][i-1];
    	    	 else break;
    	    	  if(dp[0][i]>max)max=dp[0][i];   
    	    }
    	    for(i=1;i<n;i++)
    	     {
    	     	for(j=1;j<m;j++)
    	     	 {
    	     	 	if(arr[i-1][j]<arr[i][j] && arr[i][j-1]<arr[i][j] && dp[i-1][j]!=0 && dp[i][j-1]!=0)
    	     	 	  dp[i][j]= 1 + max(dp[i-1][j],dp[i][j-1]);
    	     	 else if(arr[i-1][j]<arr[i][j] && arr[i][j-1]<arr[i][j] && dp[i-1][j]==0 && dp[i][j-1]!=0)
    	     	     dp[i][j]= 1 + dp[i][j-1];
    	     	  else if(arr[i-1][j]<arr[i][j] && arr[i][j-1]<arr[i][j] && dp[i-1][j]!=0 && dp[i][j-1]==0)
    	     	        dp[i][j]= 1 + dp[i-1][j];
    	     	  else if(arr[i-1][j]<arr[i][j] && arr[i][j-1]>=arr[i][j] && dp[i-1][j]!=0)
    	     	 	  dp[i][j]= 1 + dp[i-1][j];
    	     	 else if(arr[i-1][j]>=arr[i][j] && arr[i][j-1]<arr[i][j] && dp[i][j-1]!=0)
    	     	 	  dp[i][j]= 1 + dp[i][j-1];
    	     	 	  else
    	     	 	  dp[i][j]=0;
    	     	 	   if(dp[i][j]>max)max=dp[i][j];   
    	     	 	  //pl(dp[i][j]);printf(" ");
    	     	 	   
    	     	 }
    	     	// ent;
    	     }
    	     /*f(i,n)
    	     {
    	     	f(j,m)
    	     	{pl(dp[i][j]);printf(" ");}
    	     	ent;
    	     }*/
    	     pl(max);ent;
    }
}