#include<bits/stdc++.h>
#define ll long long
#define gc getchar_unlocked
#define pc putchar_unlocked
#define repl(i, a, b) for(i=a; i<b; i++)
#define repe(i, a, b) for(i=a; i<=b; i++)
#define per(i, a, b) for(i=a; i>=b; i--)
#define vi vector<int>
#define vl vector<long>
#define vll vector<long long>
#define pb(x) push_back(x)
#define ppb pop_back()
#define lt(i) (i<<1)
#define rt(i) ((i<<1)+1)
#define mp(a, b) make_pair(a, b)
#define ln length()
#define ms0(a) memset(a, 0, sizeof(a))
#define sz size()
#define md(a, b) ((a+b)>>1)
#define ff first
#define ss second
#define pii pair<int, int>
#define pll pair<long, long>
#define pLL pair<long long, long long>
#define all(v) v.begin(),v.end()
#define pn pc('\n');
using namespace std;


void sll(ll &x)
{
    register char c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

void wll(ll a)
{
        if(a<0)
        {
                pc('-');
                a=-a;
        }

        char snum[100];
        int i=0;
        do
        {
                snum[i++]=a%10+48;
                a=a/10;
        }
        while(a!=0);
        --i;
        while(i>=0)
        putchar_unlocked(snum[i--]);
        putchar_unlocked('\n');
}

ll power(ll a, ll b, ll mod)
{
        ll ret = 1 ;
        while(b)
        {
                if(b & 1 ) ret = ret*a % mod;
                a = a*a % mod;
                b >>= 1 ;
        }
        return ret;
}

ll gcd(ll a, ll b)
{
    while(b) b ^= a ^= b ^= a %= b;
    return a;
}

ll arr[2000000];

int main()
{
	ll t, i, j, k, l;
	sll(t);
	while(t--)
	{
		ll n, w, mat[30][30]={0};
		sll(n);sll(w);
		repl(i,0,n)
		repl(j,0,n)sll(mat[i][j]);
		ll ans=1;
		repl(i,1,1<<n){
			arr[i]=0;
			if(!(i&(i-1)))
				continue;
			arr[i]=INT_MAX;
			ll cnt=0;
			repl(j,0,n){
				if(i&(1<<j)){
					cnt++;
					ll mn=INT_MAX;
					ll temp=i^(1<<j);
					repl(k,0,n){
						if(temp&(1<<k)){
							mn=min(mat[j][k], mn);
						}
					}
					arr[i]=min(arr[i], arr[temp]+mn);
				}				
			}
			if(arr[i] <= w)ans=max(ans, cnt);
		}
		wll(ans);
	}
	return 0;
}