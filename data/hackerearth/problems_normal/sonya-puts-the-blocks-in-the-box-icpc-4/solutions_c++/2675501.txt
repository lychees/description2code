#include<iostream>
#include<algorithm>
#include<vector>
#include<assert.h>
#include<deque>
using namespace std;

int const N = 101;
int const M = 1001;

int n, m;
long long dpAll[N][M], dp[M], ans, sum;
vector<int> a[N];

void calc(int id){
	for(int i=0;i<M;++i){
		dp[i] = 0;
	}
	for(int i=0;i<a[id].size();++i){
		sum = 0;
		for(int j=0;j+i<a[id].size() && j<M-1;++j){
			sum += a[id][i+j];
			dp[j+1] = max(dp[j+1], sum);
		}
	}
}

int main(){
#ifdef _DEBUG
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	scanf("%d%d",&n,&m);
	for(int i=0;i<n;++i){
		int len;
		scanf("%d",&len);
		for(int j=0;j<len;++j){
			int v;
			scanf("%d",&v);
			a[i].push_back(v);
		}
	}

	for(int i=1;i<=n;++i){
		calc(i-1);
		for(int j=0;j<=m;++j){
			for(int k=0;k+j<=m;++k){
				dpAll[i][k+j] = max(dpAll[i][k+j], dpAll[i-1][j] + dp[k]);
			}
		}
	}
	
	for(int i=0;i<=m;++i){
		ans = max(ans, dpAll[n][i]);
	}
	printf("%lld\n",ans);

	return 0;
}