#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;

int n;
#define MAX 1001
int a[1001];
vector<int> vv[1001];
int l;
int r;
vector<int> g;
int main(){
	int q;
	scanf("%d%d%d%d", &n,&l,&r,&q);
	int unit = sqrt(n);
	unit++;
	for (int i = 0; i < n; i++){
		scanf("%d", &a[i]);
		if (l <= i&&i <= r){
			g.push_back(a[i]);
		}
		vv[i / unit].push_back(a[i]);
	}
	sort(g.begin(), g.end());
	while (q--){
		int x;
		scanf("%d", &x);
		int ind = upper_bound(g.begin(), g.end(), x)-g.begin();
		if (ind == g.size()){
			puts("-1");
		}
		else{
			printf("%d\n", g[ind]);
		}
	}
	return 0;
	for (int i = 0; i <= n / unit; i++){
		sort(vv[i].begin(), vv[i].end());
	}
	//int q;
	scanf("%d", &q);
	while (q--){
		int l, r;
		scanf("%d%d", &l, &r);
		int aa = l / unit;
		int bb = r / unit;
		int mint = INT_MAX;
		for (int i = aa + 1; i < bb; i++){
			//int ind = lower_bound(vv[i].begin(), vv[i].end(),)
		}
	}
	return 0;
}