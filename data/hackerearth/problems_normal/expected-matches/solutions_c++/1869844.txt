#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, m, t;
double dp[1010][1010], a[1010][1010];

void solve() {
    cin >> n >> m;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) scanf("%lf", &a[i][j]);
    }
    for(int i = 0; i < n; i++) {
        dp[i][m] = 0;
    }
    for(int i = 0; i < m; i++) dp[n][i] = 0;
    for(int i = n-1; i >= 0; i--) {
        for(int j = m-1; j >= 0; j--) {
            dp[i][j] = 1 + a[i][j] * dp[i][j+1] + (1-a[i][j]) * dp[i+1][j];
        }
    }
    printf("%.6lf\n", dp[0][0]);
}

int main(){
    
    cin >> t;
    
    while(t--) solve();
        
    return 0;
}
