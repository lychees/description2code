#include <bits/stdc++.h>
using namespace std;
typedef struct chirag
{
	long long value,id;
}chirag;
bool mycomp(chirag c1,chirag c2)
{
	return (c1.value<c2.value);
}
int main()
{
    //cout << "Hello World!" << endl;
    long long i=0,n,x,p,len,start,end,ss,es,ans;
    //cin>>n>>start>>end;
    scanf("%lld %lld %lld",&n,&start,&end);
    len=n*2;
    ans=end-start;
    chirag c[len];
    map<long long,long long > m;
    while(n--)
    {
    	//cin>>x>>p;
    	scanf("%lld %lld",&x,&p);
    	ss=x-p;
    	es=x+p;
    	if ((es<=start) || (ss>=end))
			continue;
    	if(ss<start)
    		ss=start;
    	if(es>end)
    		es=end;
    	c[i].value=ss;
    	c[i].id=1;
    	i++;
    	c[i].value=es;
    	c[i].id=0;
    	i++;
    	if(m.find(ss)!=m.end())
    	{
    		if(m[ss]<es)
    		{
    			m.erase(ss);
    			m.insert(make_pair(ss,es));
    		}
    	}
    	else
    		m.insert(make_pair(ss,es));
    }
    if(i==0)
    {
    	cout<<ans<<endl;
    	return 0;
    }
    len=i;
    sort(c,c+len,mycomp);
    long long initial,key,prevend,sum=0,next;
    initial=c[0].value;
    prevend=m[initial];
    sum=prevend-initial;
    for(i=1;i<len;i++)
    {
    	key=c[i].id;
    	if(key==1)
    	{
    		
    		initial=c[i].value;
    		if(initial>prevend)
    			prevend=initial;
    		next=m[initial];
    		if(next>prevend)
    		{
    			sum=sum+next-prevend;
    			prevend=next;
    		}
    	}
    }
    ans=ans-sum;
   	printf("%lld",ans);
    return 0;
  }
