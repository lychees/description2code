/*
Date:March 1, 2014
Contest:HackerEarth March Easy
Program Code:None
Program Description:Chandu and his game

submitted by
Arjun Mishra
*/
#include<iostream>
#include<cstdio>
#include<math.h>
#include<stdlib.h>
#include<string.h>
#include<algorithm>
#include<map>
#include<vector>
//#define getchar_unlocked() getchar()
typedef long long LL;
using namespace std;
inline int read() //faster input for integer
{
	int n = 0;
	register char c = getchar_unlocked();//register is used due to its repeated use
	while (!('0' <= c && c <= '9'))
 	{
  		c = getchar_unlocked();
 	}
 	while ('0' <= c && c <= '9')
	{
  	n = (n<<3) + (n<<1) +  c - '0';//equivalent to n = n*10 + c - 48;
  	c = getchar_unlocked();
	}
 return n;
}
LL minimum(LL x,LL y)
{
return (x>=y)?(y):(x);
}
LL absolute(LL x)
{
return (x>=0)?(x):(-x);
}
int main()
{
	int test;
		LL N,K,x[100001],y[100001],i,corners[4]={},corner=0;
		N=read();
		K=read();
		for(i=0;i<K;i++)
			x[i]=read();
		for(i=0;i<K;i++)
			y[i]=read();
		for(i=0;i<K;i++)
		{
			corners[0]=absolute(x[i]-1)+absolute(y[i]-1);
			corners[1]=absolute(x[i]-1)+absolute(y[i]-N);
			corners[2]=absolute(x[i]-N)+absolute(y[i]-1);
			corners[3]=absolute(x[i]-N)+absolute(y[i]-N);
			corner+=minimum(minimum(corners[0],corners[1]),minimum(corners[2],corners[3]));
		}
		printf("%lld\n",corner);
			
	
//	getchar();
	return 0;
}
