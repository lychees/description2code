//
//  main.cpp
//  Xenny and Travel
//
//  Created by Dhruv Mullick on 05/10/15.
//  Copyright Â© 2015 Dhruv Mullick. All rights reserved.
//

#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define ull unsigned long long
#define pb push_back
#define f first
#define s second
#define PI 3.14159265359
typedef pair<int,int> ii;
typedef pair<int,pair<int,int> > iii;

int A[1500][1500],B[1500][1500];
int Ro[1500],Rot[1500],Ra[1500],Rat[1500];

set<ii> S;

void dijkstra(int D[1500][1500],int dist[1500], int n, int u)
{
    int i,j,d;
    
    for(i=1;i<=n;i++)
        dist[i]=1e8;
    
    dist[u]=0;
    S.insert(ii(0,u));
    
    while(!S.empty())
    {
        d=(*S.begin()).f;
        u=(*S.begin()).s;
        S.erase(S.begin());
        for(i=1;i<=n;i++)
        {
            if(i==u)
                continue;
            if(dist[i]>dist[u]+D[u][i])
            {
                if(dist[i]!=1e8)
                    S.erase(S.find(ii(dist[i],i)));
                
                dist[i]=dist[u]+D[u][i];
                S.insert(ii(dist[i],i));
            }
        }
    }
    
}

int main(int argc, const char * argv[])
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int n,i,j,u,v,minc=1e8;
    cin>>n;
    for(i=1;i<=n;i++)
        for(j=1;j<=n;j++)
            cin>>A[i][j];
    
    for(i=1;i<=n;i++)
        for(j=1;j<=n;j++)
            cin>>B[i][j];
    
    cin>>u>>v;
    
    dijkstra(A,Ro,n,u);
    dijkstra(B,Ra,n,u);
    
    for(i=1;i<=n;i++)
        for(j=1;j<=n;j++)
            if(i<=j)
            {
                swap(A[i][j],A[j][i]);
                swap(B[i][j],B[j][i]);
            }
    
    dijkstra(A,Rot,n,v);
    dijkstra(B,Rat,n,v);
    
    for(i=1;i<=n;i++)
    {
        if(i==u || i==v)
            continue;
        else
            minc=min(minc,min(Ro[i]+Rat[i],Ra[i]+Rot[i]));
    }
    
    cout<<minc;
    
    return 0;
}
