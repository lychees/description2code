// hackerearth file
#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%ld",&x)
#define gll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll MOD = 1e9+7;
const int INF = 0x7f7f7f7f;
const double eps = 1e-6;

const int maxn = 100010;
int arr[maxn];
int small[maxn],big[maxn];
int dpsmall[maxn],dpbig[maxn];

int main() {
	ios_base::sync_with_stdio(false);
	
	int t; cin >> t;
	while (t --) {
		int n; cin >> n;
		for (int i = 0; i < n; i ++) cin >> arr[i];

		stack < pii > st;
		memset(small,-1,sizeof small);
		memset(big,-1,sizeof big);
		
		for (int i = 0; i < n; i ++) {
			if(st.empty()) {
				st.push(mp(arr[i],i));
				continue;
			}
			int x = st.top().first;
				while (arr[i] <= x) {
					int idx = st.top().second;
					small[idx] = i;
					st.pop();
					if(st.empty()) break;
					x = st.top().first;
				}
			st.push(mp(arr[i],i));
		}

		while (!st.empty()) st.pop();
		
		for (int i = 0; i < n; i ++) {
			if(st.empty()) {
				st.push(mp(arr[i],i));
				continue;
			}
			int x = st.top().first;
				while (arr[i] >= x) {
					int idx = st.top().second;
					big[idx] = i;
					st.pop();
					if(st.empty()) break;
					x = st.top().first;
				}
			st.push(mp(arr[i],i));
		}

		for (int i = 0; i < n; i ++) {
			if(small[i] == -1) small[i] = n;
			if(big[i] == -1) big[i] = n;
		}
		
		dpsmall[n] = dpbig[n] = 0;
		for (int i = n - 1; i >= 0; i --) {
			dpsmall[i] = max(dpsmall[big[i]],dpbig[big[i]] + 1);
			dpbig[i] = max(dpsmall[small[i]] + 1,dpbig[small[i]]);
		}

		cout << max(dpsmall[0],dpbig[0]) << "\n";
	}
	return 0;
}
