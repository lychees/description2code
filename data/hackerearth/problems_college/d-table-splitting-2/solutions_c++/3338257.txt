#include <bits/stdc++.h>
using namespace std;

int t;

int n, m;

char wcz[2][1000007];

map < int , int > mapa[1000007];

int wyn;

int k;
int oj[5000007];

int l;

int p;

int fin(int v)
{
    if (v!=oj[v])
    oj[v]=fin(oj[v]);
    return oj[v];
}

void uni(int v, int u)
{
    v=fin(v);
    u=fin(u);
    if (v!=u)
    oj[u]=v;
}

int main()
{
    scanf("%d", &t);
    while(t--)
    {
        scanf("%d%d", &n, &m);
        wyn=1;
        oj[0]=0;
        k=0;
        for (int i=0; i<=n; i++)
        {
            mapa[i].clear();
        }
        for (int i=1; i<=n; i++)
        {
            p=(i&1);
            scanf("%s", wcz[p]+1);
            if (i==1)
            {
                for (int j=1; j<m; j++)
                {
                    if (wcz[p][j]!=wcz[p][j+1])
                    {
                        //printf("%d %d\n", 0, j);
                        k++;
                        mapa[0][j]=k;
                        oj[k]=k;
                        uni(0, k);
                    }
                }
            }
            if (i==n)
            {
                for (int j=1; j<m; j++)
                {
                    //printf("%d %d\n", n, j);
                    if (wcz[p][j]!=wcz[p][j+1])
                    {
                        k++;
                        mapa[n][j]=k;
                        oj[k]=k;
                        uni(0, k);
                    }
                }
            }
            if (i!=1)
            {
                if (wcz[p][1]!=wcz[p^1][1])
                {
                    //printf("%d %d\n", i-1, 0);
                    k++;
                    mapa[i-1][0]=k;
                    oj[k]=k;
                    uni(0, k);
                }
                if (wcz[p][m]!=wcz[p^1][m])
                {
                    //printf("%d %d\n", i-1, m);
                    k++;
                    mapa[i-1][m]=k;
                    oj[k]=k;
                    uni(0, k);
                }
                for (int j=1; j<m; j++)
                {
                    l=0;
                    if (wcz[p][j]!=wcz[p^1][j])
                    l++;
                    if (wcz[p][j+1]!=wcz[p^1][j+1])
                    l++;
                    if (wcz[p^1][j]!=wcz[p^1][j+1])
                    l++;
                    if (wcz[p][j]!=wcz[p][j+1])
                    l++;
                    if (l)
                    {
                        //printf("%d %d\n", i-1, j);
                        k++;
                        mapa[i-1][j]=k;
                        oj[k]=k;
                        if (mapa[i-1][j-1] && wcz[p^1][j]!=wcz[p][j])
                        uni(k, mapa[i-1][j-1]);
                        if (mapa[i-1][j+1] && wcz[p][j+1]!=wcz[p^1][j+1])
                        uni(k, mapa[i-1][j+1]);
                        if (mapa[i-2][j] && wcz[p^1][j]!=wcz[p^1][j+1])
                        uni(k, mapa[i-2][j]);
                        if (mapa[i][j] && wcz[p][j]!=wcz[p][j+1])
                        uni(k, mapa[i][j]);
                    }
                }
            }
        }
        for (int i=1; i<=k; i++)
        {
            if (fin(i)!=fin(0))
            {
                wyn=0;
            }
        }
        if (wyn)
        printf("YES\n");
        else
        printf("NO\n");
    }
    return 0;
}
