#include<bits/stdc++.h>
using namespace std;

int dfs(int k,int a[],int vis[],vector<int>g[])
{
	vis[k]=1;
	int r=0;
	for(int i=0;i<g[k].size();i++)
	{
		if(vis[g[k][i]]==0)
		{
			r+=dfs(g[k][i],a,vis,g);
		}
	}
	return r+a[k];
}
int main()
{
	int n,m;
	cin>>n>>m;
	int a[n];
	for(int i=1;i<=n;i++)
	{
		cin>>a[i];
	}
	vector<int>g[n+1];
	int vis[n+1];
	for(int i=1;i<=n-1;i++)
	{
		int u,v;
		cin>>u>>v;
		g[u].push_back(v);
	}
	for(int i=1;i<=m;i++)
	{
		char c;
		int k;
		cin>>c;
		if(c=='Q')
		{
			cin>>k;
			memset(vis,0,sizeof(vis));
			cout<<dfs(k,a,vis,g)<<endl;
		}
		if(c=='U')
		{
			int h,j;
			cin>>h>>j;
			a[h]=j;
		}
	}
}