#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;

vector<long long> graph[100005];
bool vis[100005];
ll height[100005];
ll strt[100005],fin[100005];
ll n,x,y,ans,tym=0;

void dfs(long long v,long long d)
{
  //  if(x==0)
    //    return false;
    tym++;
    height[v]=d;
    strt[v]=tym;
    ll i;
    //bool temp;
    //vis[x]=true;
   // if(x==y)
     //   return true;
   // else

        for(i=0;i<graph[v].size();i++)
        {
            //if(!vis[graph[x][i]])
              //  {
                //    ans++;
                     dfs(graph[v][i],d+1);
                //}
        }

    tym++;
    fin[v]=tym;
    return;
    //return (temp==true);

}

int main()
{


    ll t,i,q,num,j;
    scanf("%lld",&t);
    while(t--)
    {
        scanf("%lld",&n);

        //temp=n;
        for(i=0;i<=n;i++)
            graph[i].clear();/*
        for(i=0;i<5;i++)
        {
            for(j=0;j<graph[i].size();j++)
                printf("%lld ",graph[i][j]);
            printf("\n");
        } */
        for(i=1;i<=n;i++)
        {
            scanf("%lld",&num);
           // graph[num].clear();

            graph[num].push_back(i);

        } /*
        for(i=0;i<5;i++)
        {
            for(j=0;j<graph[i].size();j++)
                printf("%lld ",graph[i][j]);
            printf("\n");
        }*/

        dfs(0,1);
        scanf("%lld",&q);

        while(q--)
        {
            //memset(vis,false,sizeof vis);
            ans=0;
            scanf("%lld%lld",&x,&y);
           // x--;
            //y--;
            if(strt[x]>strt[y]&&fin[x]<fin[y])
                printf("%lld\n",height[x]-height[y]-1);
            else
                printf("-1\n");
        }
    }

    return 0;
}
