#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int>   II;
typedef vector< II >      VII;
typedef vector<int>     VI;
typedef vector< VI > 	VVI;
typedef long long int 	LL;
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))
#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)
#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif
//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);
const int N = int(1e6)+1;
const int M = int(1e6)+1;
const int C = int(1e9)+1;
VII g[N];
int indeg[N];
LL dp[N];
int main()
{
	int n,m;
	si(n);si(m);
	assert(n<N && m<M);
	for(int i=0;i<m;i++)
	{
		int u,v,w;
		si(u);si(v);si(w);
		assert(1<=u && u<=n);
		assert(1<=v && v<=n);
		assert(1<=w && w<=C);
		g[v].PB(MP(u,w));
		indeg[u]++;
	}
	queue<int> Q;
	for(int i=1;i<=n;i++)
		if(!indeg[i])
		{
			Q.push(i);
			dp[i]=0;
		}
	while(!Q.empty())
	{
		int u=Q.front();
		Q.pop();
		for(int i=0;i<SZ(g[u]);i++)
		{
			int w = g[u][i].F;
			dp[w] = max(dp[w],dp[u]+g[u][i].S+2);
			indeg[w]--;
			if(!indeg[w])
				Q.push(w);
		}
	}
	LL ans = 0;
	for(int i=1;i<=n;i++)
		ans = max(ans,dp[i]);
	lldout(ans);
	return 0;
}