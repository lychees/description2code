#include <bits/stdc++.h>
using namespace std;
bool isSubsetSum(int set[], int n, int sum)
{
    bool subset[sum+1][n+1];
 
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;
 
    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;
     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >= set[j-1])
           subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
       }
     }
 
     return subset[sum][n];
}
int main()
{
    int t,n,s,i,k,l;
    cin>>t;
    while(t--) {
    	cin>>n>>k;
    	int a[n];
    	s = 0;
    	int maxi = -1,mini=100000;
    	for(i = 0; i < n; i++) {
    		cin>>a[i];
    		s += a[i];
    		maxi = max(maxi,a[i]);
    		mini = min(mini,a[i]);
    	}
    	if(maxi > k) {
    		puts("NO");
    	}
    	else if(s <= 2*k) {
    		if(isSubsetSum(a,n,k))
    			puts("YES");
    		else {
    			l = k;
    			while(k--) {
    				if(isSubsetSum(a,n,k)) {
    					break;
    				}
    			}
    			if(s-k <= l)
    				puts("YES");
    			else
    				puts("NO");
    		}
    	}
    	else {
    		puts("NO");
    	}
    }
	return 0;
}
