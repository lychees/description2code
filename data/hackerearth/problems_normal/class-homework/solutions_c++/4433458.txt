using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
void solve();
int main()
{
  int t=1;
  cin>>t;
  while(t--)
  solve();
  return 0;
}
ll ar[21][21];
string s;
ll dp[5][21];

ll isval(int i,int j)
{
  string g;
  for(i;i<=j;i++)
     g.pb(s[i]); 
  if(g[0]=='0'&&g.size()>1)
   return -1;
  if(g.size()>14)
   return -1;
  ll sum=0LL;
  int n=g.size();
  rep(i,0,n-1) 
    sum=sum*10LL+g[i]-'0';
  if(sum<=1000000000000LL)  
  return sum;
  else
    return -1;
}
void pre()
{
  int i,j,k,n;
  n=s.size();
  for(i=0;i<n;i++)
     for(j=i;j<n;j++)
          ar[i][j]=isval(i,j);    
}
void solve()
{
  int k,i,j,n;
  cin>>s;
  if(s.size()<4)
  {
    cout<<"unlucky";e
    return ;
  }
  pre();
  n=s.size();
  for(i=0;i<n;i++)      
    dp[1][i]=ar[0][i];  
  for(k=2;k<=4;k++)
  {
    for(i=0;i<n;i++)
    {
       dp[k][i]=-1;
       for(j=i-1;j>=(k-2);j--)
       {         
          if(ar[j+1][i]>=0&&dp[k-1][j]>=0)
          {
            dp[k][i]=max(dp[k][i],dp[k-1][j]+ar[j+1][i]);
          }
       }
    }
  }
  if(dp[4][n-1]!=-1)
    cout<<dp[4][n-1];
  else
    cout<<"unlucky";e
}



























