using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

bool f[1000000+10];
int a[32000+10],t[400000+10],u,v,test,n,q;
char type;

void build(int k, int l, int r, int i){
    if (i>r || i<l) return;
    if (i==l && i==r){
        t[k]=f[a[i]];
        return;
    }
    int m=(l+r)/2;
    build(k*2,l,m,i);
    build(k*2+1,m+1,r,i);
    t[k]=t[k*2]+t[k*2+1];
}

int query(int k, int l, int r, int i, int j){
    if (i>r || j<l) return 0;
    if (i<=l && r<=j) return t[k];
    int m=(l+r)/2;
    int t1=query(k*2,l,m,i,j);
    int t2=query(k*2+1,m+1,r,i,j);
    return t1+t2;
}

int main(){
 //   freopen("help-the-avengers-6.inp", "r", stdin);
 //   freopen("help-the-avengers-6.out", "w", stdout);
    memset(f,true,sizeof(f));
    f[1]=false;
    FORE(i,2,1000000)
    if (f[i])
    FORE(j,2,1000000/i) f[i*j]=false;

    ri(test);
    while (test--){
        ri(n);
        FORE(i,1,n) ri(a[i]);
        FORE(i,1,n) build(1,1,n,i);
        ri(q);
        while (q--){
            scanf("%s %d %d\n", &type, &u, &v);
            if (type=='C'){
                a[u]=v;
                build(1,1,n,u);
            }
            else printf("%d\n",query(1,1,n,u,v));
        }
    }
}
