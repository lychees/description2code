#include <iostream>
#include<cstring>
#include <vector>
#include<algorithm>
 
using namespace std;
 
bool isPrime[10000000];
 
void sieve(long long N) 
{
    for(long i = 0; i <= N;++i) {
        isPrime[i] = true;
    }
    isPrime[0] = false;
    isPrime[1] = false;
    for(long long i = 2; i * i <= N; ++i) {
         if(isPrime[i] == true) {
             // Mark all the multiples of i as composite numbers
             for(long long j = i * i; j <= N ;j += i)
                 isPrime[j] = false;
        }
    }
}

long long hcf(long long n1,long long n2)
{
	if(n2%n1==0)
	{
		return n1;
	}
	else
	{
		return (hcf(n2%n1,n1));
	}
}

int main()
{
	long long t;
	cin >> t;
	while(t--)
	{
		long long n,count=0;
		cin >> n;
		sieve(100000);
		for(long long i=1;i<= n;i++)
		{
			if(hcf(i,n)==1)
			{
				count++;
			}
		}
		if(isPrime[count] == true)
		{
			cout << "Correct" << endl;
		}
		else
		{
			cout <<  "Incorrect" << endl;
		}
	}
}