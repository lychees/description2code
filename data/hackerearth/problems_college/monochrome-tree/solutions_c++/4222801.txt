#include <bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define pii pair<int,int>
#define piii pair<int,pii>
#define pll pair<ll,ll>
#define psi pair<string,int>
#define rep(i,n) for(i=0;i<n;i++)
#define repd(i,n) for(i=n;i>=0;i--)
#define vi vector<int>
#define vvi vector<vector<int> >
#define vvlli vector<vector<long long int> >
#define ll long long int
#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sd3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define PI 3.14159265
#define mod 1000000007
#define N 100001
 

ll gcd(ll a,ll b)
{
    if(b==0)
      return a;
    return gcd(b,a%b);
}
 
ll power(ll a,ll n)
{
    if(n==0)
      return 1;
    ll x=power(a,n/2);
    x=(x*x)%mod;
    if(n%2!=0)
    {
      x=x*a;
      x=x%mod;
    }
    return x;
}


//bool isprime[50000001];

// void sieve()
// {
//     ll i,j;
//     memset(isprime,1,sizeof(isprime));
//     for(i=2;i<50000001;i++)
//     {
//         if(isprime[i]==1)
//         {
//             for(j=i*i;j<50000001;j=j+i)
//                 isprime[j]=0;
//             prime.pb(i);
//         }
//     }
// }


bool clr[100001],want[100001];
int dp[100001][2];

int dfs(int i,vvi &v,bool flag,vector<bool> visited)
{
    int j,k,ans=INT_MAX;
    visited[i]=1;

    if(dp[i][flag]!=-1)
        return dp[i][flag];

    bool b=clr[i];
    if(flag==1)
    {
        if(b==0)
            b=1;
        else
            b=0;
    }

    if(b==want[i])
        k=0;
    else
        k=1;
    
    for(j=0;j<v[i].size();j++)
    {
        if(visited[v[i][j]]==0)
        {
            k+=dfs(v[i][j],v,flag,visited);
        }
            
    }
    ans=min(ans,k);

    if(flag==0)
        flag=1;
    else
        flag=0;

    k=1;
    if(b==0)
        b=1;
    else
        b=0;
    if(b!=want[i])
        k++;

    for(j=0;j<v[i].size();j++)
    {
        if(visited[v[i][j]]==0)
        {
            k+=dfs(v[i][j],v,flag,visited);
        }
    }
    ans=min(ans,k);
    if(flag==0)
        flag=1;
    else
        flag=0;
    
    dp[i][flag]=ans;
    return ans;
}

   
int main()
{
    int i,j,k,t,l,r,q,query,n,m;
   
    cin>>n;
    vvi v(n);
    for(i=0;i<n-1;i++)
    {
        cin>>j>>k;
        j--,k--;
        v[j].pb(k);
        v[k].pb(j);
    }
    for(i=0;i<n;i++)
        cin>>clr[i];

    for(i=0;i<n;i++)
        cin>>want[i];
    
    vector<bool> visited(n,0);
    memset(dp,-1,sizeof(dp));
    cout<<dfs(0,v,0,visited)<<endl; 
    return 0;

}