#include <bits/stdc++.h>
using namespace std;
const int maxn = 2510;
int n,a[maxn],S,M,P,lo,hi,v[maxn],k,id[maxn],cnt[maxn],m1,m2,pos;
long long f[maxn],bit[maxn],total,cur,zzz;
pair<int,int> tmp[maxn];
void init(){
    for (int i=1; i<=n; i++) tmp[i]=make_pair(a[i],i);
    sort(tmp+1,tmp+n+1);
    v[0]=-1;k=0;
    for (int i=1; i<=n; i++){
        if (tmp[i].first!=v[k]){
            v[++k]=tmp[i].first;
        }
        id[tmp[i].second]=k;
    }
}
void update(int p,int v){
    while (p<=k){
        cnt[p]++;
        bit[p]+=1LL*v;
        p+=p&-p;
    }
}
pair<int,long long> get(int p){
    pair<int,long long > ans=make_pair(0,0);
    while (p){
        ans.first+=cnt[p];
        ans.second+=bit[p];
        p-=p&-p;
    }
    return ans;
}
long long getval(int p,int x){
    pair<int,long long> z=get(p);
    return 1LL*(1LL*z.first*v[p]-z.second)*P+1LL*(total-z.second-1LL*(x-z.first)*v[p])*M;
}
int main(){
    scanf("%d%d%d%d",&n,&S,&M,&P);
    for (int i=1; i<=n; i++) scanf("%d",&a[i]);
    init();
    f[0]=f[1]=0;
    for (int i=2; i<=n; i++){
        memset(cnt,0,sizeof cnt);
        memset(bit,0,sizeof bit);
        f[i]=f[i-1];
        update(id[i],a[i]);total=a[i];
        for (int j=i-1; j>=1; j--){
            total+=a[j];
            update(id[j],a[j]);
            lo=1;hi=k;
            while (lo+2<hi){
                m1=(lo+lo+hi)/3;
                m2=(lo+hi+hi)/3;
                if (getval(m1,i-j+1)<getval(m2,i-j+1)) {hi=m2;} else {lo=m1;}
            } cur=1e18;
            for (int x=lo; x<=hi; x++){
                zzz=getval(x,i-j+1);
                if (cur>zzz){
                    cur=zzz;
                }
            }
            cur=max(0LL,1LL*S*(i-j)-cur);
            f[i]=max(f[i],f[j-1]+cur);
        }
    }
    cout<<f[n];
}
