#include <iostream>
using namespace std;
struct node {
	char id;
	node *left,*right;
	node(char _id) {
		left=NULL;
		right=NULL;
		id=_id;
	}
	node(char *__id) {
		left=NULL;
		right=NULL;
		id=*__id;
	}
	~node() {
		if(left) delete left;
		if(right) delete right;
	}
};
int main()
{
	int T,C;
	char *_S = new char[10001],*S;
	cin >> T;
	while(T--) {
		cin >> C >> _S;
		S = _S;
		node *parse(char **);
		node *root = parse(&S);
    	
		void lexCols(node *,int,int Cc=0);
		extern int lenChars[26];
		
		for(int i=-1;++i<26;) lenChars[i]=0;
		lexCols(root,C);
		
		int found=0;
		for(int i=-1;++i<26;) {
			if(lenChars[i]!=0) {
				while(lenChars[i]--) {
					cout<<char(i+'a');
				}
				found=1;
			}
		}
		if(!found) cout<<"Common Gandhijee!";
		cout<<endl;
		delete root;
	}
	
    return 0;
}
node *parse(char **S)
{
	node *root = new node(*S);
	(*S)++; // (
	(*S)++;
	if(**S=='.') root->left=NULL;
	else root->left=parse(S);
	(*S)++;
	if(**S=='.') root->right=NULL;
	else root->right=parse(S);
	(*S)++;
	return root;
}
int lenChars[26];
void lexCols(node * root,int C,int Cc=0)
{
	if(!root) return;
	if(C==Cc) lenChars[root->id-'a']++;
	//cout<<C<<','<<Cc<<',';
/*	for(int i=-1;++i<26;) {
			cout<<lenChars[i];
		}cout<<endl;*/
	lexCols(root->left,C,Cc-1);
	lexCols(root->right,C,Cc+1);
}