#include<iostream>
#include<vector>
#include<queue>
#define PB push_back
using namespace std;
vector<int> v[101];
vector<int > ans[101];
 
int cost[101][101];
int a[101];
int n, r, start, dest, num;
queue<int > q,q1;
 
bool check(int i, int j)
{
    if(ans[i].size() < ans[j].size())
        return 1;
    if(ans[i].size() > ans[j].size())
        return 0;
 
    for(int k = 0;k < ans[i].size();k++)
    {
        if(ans[i][k] > ans[j][k])
            return 0;
    }
    return 1;
 
}
 
void BFS()
{
    q.push(start);
    int d,f, temp, g, j, pass;
    while(1)
    {
        //cout<<"here";
        d = q.size();
        f = 0;
        while(!q.empty())
        {
            g = 0;
            temp = q.front();
            q.pop();
            for(j=0;j<v[temp].size();j++)
            {
 
                pass = min(a[temp], cost[temp][v[temp][j]]);
                if(pass > a[v[temp][j]])
                {
                    g = 1;
                    a[v[temp][j]] = pass;
                    ans[v[temp][j]] = ans[temp];
                    ans[v[temp][j]].PB(v[temp][j]);
                    q1.push(v[temp][j]);
                }
                else if(pass == a[v[temp][j]])
                {
                    if(check(temp, v[temp][j]))
                    {
                        g = 1;
                        a[v[temp][j]] = pass;
                        ans[v[temp][j]] = ans[temp];
                        ans[v[temp][j]].PB(v[temp][j]);
                        q1.push(v[temp][j]);
                    }
                }
            }
            if(g == 0)
                f++;
 
        }
        if(f == d)
        {
            return;
        }
        while(!q1.empty())
        {
            //cout<<q1.front()<<endl;
            q.push(q1.front());
            q1.pop();
        }
    }
 
}
 
 int main()
 {
     int i,j,x,y,z, num, temp, MIN;
    //cout<<"here1";
    //freopen("in1.txt","r",stdin);
    cin>>n>>r;
    for(i=1;i<=n;i++)
    {
        a[i] = -1;
    }
 
    for(i=1;i<=r;i++)
    {
        cin>>x>>y>>z;
        v[x].PB(y);
        v[y].PB(x);
        cost[x][y] = z;
        cost[y][x] = z;
    }
    cin>>start>>dest>>num;
    a[start] = 10000;
    ans[start].PB(start);
    BFS();
    for(i=0;i<ans[dest].size();i++)
            cout<<ans[dest][i]<<" ";
    cout<<endl;
    a[dest]--;
    cout<<( num/a[dest] + (num % a[dest] ? 1 : 0))<<endl;
    //cout<<a[dest]<<endl;
 }
