#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
int main() {
    ios_base::sync_with_stdio ( false );
    int n;
    cin>>n;
    vi v ( n );
    cin>>v;
    vector<vi> res ( n,vi ( n ) );
    rep ( i,n ) {
        priority_queue<int> lower;
        priority_queue<int> higher;
        reu ( j,i,n ) {
            int x=v[j];
            if ( lower.empty() ) lower.push ( x );
            else {
                if ( lower.top() >=x ) {
                    lower.push ( x );
                } else higher.push ( -x );
            }
            if ( higher.size() >lower.size() ) {
                lower.push ( -higher.top() );
                higher.pop();
            }
            if ( lower.size() >higher.size() +1 ) {
                higher.push ( -lower.top() );
                lower.pop();

            }
            res[i][j]=lower.top();
        }

    }
    int q;
    cin>>q;
    vi r ( q );
    rep ( qq,q ) {
        int i,j;
        cin>>i>>j;
        i--;
        j--;
        r[qq]=res[i][j];

    }
    for ( int x:r ) cout<<x<<'\n';

}
