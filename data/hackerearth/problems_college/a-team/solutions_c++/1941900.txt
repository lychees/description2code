#include<bits/stdc++.h>

using namespace std;
long long int x1,x2,yo,y2,xc,yc;
struct point
{
	long long int x;
	long long int y;
};
int orient(point p,point q,point r)
{
	long long int val=((q.y-p.y)*(r.x-q.x))-((q.x-p.x)*(r.y-q.y));
	if(val==0)return 0;
	return (val>0)?1:2;
}
bool onsegment(point p, point q, point r)
{
    if (q.x <= max(p.x, r.x) && q.x >= min(p.x, r.x) &&
        q.y <= max(p.y, r.y) && q.y >= min(p.y, r.y))
       return true;
 
    return false;
}
bool chck(point p1,point q1,point p2,point q2)
{
	int v1=orient(p1,q1,p2);
	int v2=orient(p1,q1,q2);
	int v3=orient(p2,q2,p1);
	int v4=orient(p2,q2,q1);
	if(v1!=v2 &&v3!=v4)return true;
	if(v1==0 && onsegment(p1,p2,q1))return true;
	if(v2==0 && onsegment(p1,q2,q1))return true;
	if(v3==0 && onsegment(p2,p1,q2))return true;
	if(v4==0 && onsegment(p2,q1,q2))return true;
	return false;
}
int main()
{
	point p1,q1,p2,q2;
	int t;
	cin>>t;
	while(t--)
	{
		cin>>x1>>yo; cin>>x2>>y2; cin>>xc>>yc;
		p1.x=0; p1.y=0;
		q1.x=xc; q1.y=yc;
		p2.x=x1; p2.y=yo;
		q2.x=x2; q2.y=y2;
		/*cout<<"p1.x"<<p1.x<<endl;
		cout<<"p1.y"<<p1.y<<endl;
		cout<<"q1.x"<<q1.x<<endl;
		cout<<"q1.y"<<q1.y<<endl;
		cout<<"p2.x"<<p2.x<<endl;
		cout<<"p2.y"<<p2.y<<endl;
		cout<<"q2.x"<<q2.x<<endl;
		cout<<"q2.y"<<q2.y<<endl;		*/
		if(chck(p1,q1,p2,q2))cout<<"NO"<<endl;
		else cout<<"YES"<<endl;
	}
		
	return 0;
}
