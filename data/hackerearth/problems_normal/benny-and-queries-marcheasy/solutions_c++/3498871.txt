#include<iostream>
using namespace std;
#include<bits/stdc++.h>
void calc(int val[])
 {
 	 val[0]=1;
 	  for(int i=1;i<=31;i++)
 	  {
 	  	val[i]=val[i-1]*2;
	   }
	  //  cout<<" generation done "<<endl;
 	return;
 }
class node
{
	public:
 node * ll,*rr;
 vector<int> s;
 node()
  {
  	ll=NULL;
  	rr=NULL;
  	
	}	
};

 
int join(node * head,int val[],int num,int index)
 {
     node *var=head;    
    for(int i=21;i>=0;i--)
     {
     	 if(num&val[i])
     	  {
     	  	 if(head->rr!=NULL)
     	  	  {
     	  	  	// cout<<" join existing "<<endl;
     	  	  	head=head->rr;
     	  	  //	 cout<<" ins "<<index<<endl;
     	  	  	head->s.push_back(index);
				 }
				 else
				 {
			//	 	cout<<" create"<<endl;
				 	head->rr= new node();
				 	 head=head->rr;
			//	 	 cout<<" ins "<<index<<endl;
				 	 head->s.push_back(index);
				 }
				 
		   }
		   
		   
		  else
     	  {
     	  	// cout<<" off "<<endl;
     	  //	int f=0;
     	  	 if(head->ll!=NULL)
     	  	  {
     	  	  	//  cout<<"join "<<endl;
     	  	  	head=head->ll;
     	  	  //	cout<<" ins "<<index<<endl;
     	  	  	head->s.push_back(index);
     	  	  	
				 }
				 else
				 {
				 	// cout<<" create "<<endl;
				 	head->ll= new node();
				 	 head=head->ll;
				 	// cout<<" ins "<<index<<endl;
				 	 head->s.push_back(index);
				 }
				 
		   }
	 }
 }
 
 int find(node * head,int v[],int l,int r,int num)
  {
  	  //cout<<" find for "<<num<<" in "<<l<<" "<<r<<endl;
  	  node *var=head;
  	  
  	  int ans=0;
  	  
    for(int i=21;i>=0;i--)
     {
     	
     	 if(!(num&v[i]))
     	  {	
     	    //cout<<" at index "<<i<<" need "<<1<<endl;
     	     int f=0;
     	  	 if(head->rr!=NULL)
     	  	  {	
     	  	    var=head->rr;
     	  	  	vector<int>:: iterator it1,it2;
     	  	  	it1=lower_bound(var->s.begin(),var->s.end(),l);
     	  	  	it2=lower_bound(var->s.begin(),var->s.end(),r+1);
     	  	  //	if(it!=var->s.end()  && *it1>r) it1--;
     	  	  	 it2--;
     	  	  	if(it1!=var->s.end()   && *it1<=r  && *it1>=l && *it2<=r && *it2>=l)
     	  	  	 {
     	  	  	 //	  cout<<" yah fine "<<endl;
     	  	  	 	ans=ans|v[i];
     	  	  	 	// cout<<ans<<endl;
     	  	  	 	head=head->rr;
     	  	  	 	f=1;
				  }
     	  	  	
				 }
				 if(f==0)
				  {
				  	// cout<<" no "<<endl;
				  	 head=head->ll;
				  }
		   }
		   
		   
		else
     	  {	
     	  // cout<<" at index "<<i<<" need "<<0<<endl;
     	     int f=0;
     	  	 if(head->ll!=NULL)
     	  	  {	
     	  	  var=head->ll;
     	  	  	vector<int>:: iterator it1,it2;
     	  	  	it1=lower_bound(var->s.begin(),var->s.end(),l);
     	  	  	it2=lower_bound(var->s.begin(),var->s.end(),r+1);
     	  	  	it2--;
     	  	  	
     	  	  	if(it1!=var->s.end()   && *it1<=r  && *it1>=l && *it2<=r && *it2>=l)
     	  	  	 {
     	  	  	 //	cout<<" yah fine "<<endl;
     	  	  	 	ans=ans|v[i];
     	  	  	 //	cout<<ans<<endl;
     	  	  	 	head=head->ll;
     	  	  	 	f=1;
				  }
     	  	  	
				 }
				 if(f==0)
				  {
				  	//cout<<" no  "<<endl;
				  	 head=head->rr;
				  }
		   }
		   
		   
	 }
	 
	 return ans;
  }
 int main()
  {
  	 int n,q;
  	  cin>>n>>q;
  	   int arr[n+10];
  	   int val[100];
  	   calc(val);
  	   
  	    for(int i=0;i<n;i++)
  	     {
  	      scanf("%d",&arr[i]);
		   }
		   node *head1=new node();
		
		 
		   for(int  i=0;i<n;i++)
		    {
		       join(head1,val,arr[i],i+1);
			}
			
			
			 for(int i=0;i<q;i++)
			  {
			  	 int px,py,x;
			  	scanf("%d %d %d",&px,&py,&x);
			  	int ans=find(head1,val,px,py,x);
			  	 cout<<ans<<endl;
			  }
  	  
  } 