#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
typedef long long LL;
using namespace std;
int main()
{
    map<LL,LL> m;
    int q; si(q);
    while(q--)
    {
        int t; si(t);
        LL x; sll(x);
        if(t==0)
        {
            while(x)
            {
                m[x]+=1;
                x>>=1;
            }
            m[0]++;
        }
        else if(t==1)
        {
            while(x)
            {
                if(m[x]>0)
                    m[x]-=1;
                x>>=1;
            }
            m[0]--;
        }
        else
        {
            cout<<m[x]<<endl;
        }
    }
    return 0;
}
