#include <iostream>
#include <string>
#include <map>
#include <cctype>
#include <clocale>
#include <cassert>
using namespace std;

typedef unsigned long long ull;

//Function to fill the map 'outMap' with count of each character present in 'inStr'
void fillMap(const string &inStr, map <char, ull> &outMap)
{
	char alphaCh, digitCh;
	ull count;
	
	//Initialize map
	for (alphaCh = 'a'; alphaCh <= 'z'; ++alphaCh )
		outMap[alphaCh] = 0;
	
	for (size_t i = 0; i < inStr.size(); ++i)
	{
		alphaCh = inStr[i];
		
		assert (isalpha(alphaCh));
		
		count = 0;
		
		for (++i; i < inStr.size(); ++i)
		{
			digitCh = inStr[i];
			
			if (!isdigit(digitCh))
				break;
			
			count = ((count * 10) + (digitCh - '0'));
		}
		
		--i;
		outMap[alphaCh] += count;
	}
}

int main()
{
    //Read input compressed string
    string	inputStr;
    cin >> inputStr;
    
    //cout << "Sizeof ull = " << sizeof(ull) << endl;
    
    assert (inputStr.size() >= 2);
    
    //Read number of questions
    unsigned long numOfQuestions;
    cin >> numOfQuestions;
    
    assert (numOfQuestions > 0);
    
    /* Create and fill a map where key is the alphabet and value is the count of that alphabet
     * in the sorted string
     */
    map <char, ull>	stringMap;
    fillMap(inputStr, stringMap);
    
    #if 0
    ull count=0;
    for (int i = 0; i < 26; ++i)
    {
    	cout << (char)('a' + i) << " --> " << stringMap['a' + i] << endl;
    	count += stringMap['a' + i];
    }
    cout << "Total characters = " << count << endl;
    #endif
    
    ull position;
    
    while (numOfQuestions--)
    {
    	//Read element position
    	cin >> position;
    	
    	if (position <= 0)
    	{
    		cout << "-1" << endl;
    		continue;
    	}
    	
    	for (int i = 0; i < 26; ++i)
    	{
    		ull currCharCount = stringMap['a' + i];
    		
    		if (currCharCount)
    		{
    			if (position > currCharCount)
    			{
    				position -= currCharCount;
    				continue;
    			}
    			
    			position = 0;
    			cout << (char)('a' + i) << endl;
    			break;
    		}
    	}
    	
    	if (position)
    		cout << "-1" << endl;
    }
    
    return 0;
}