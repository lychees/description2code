#include <iostream>
#include <cstdio>
#define MOD 1000000007

using namespace std;

struct matrix
{
    int n, m;
    long long a[10][10];

    void reset()
    {
        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                a[i][j] = 0LL;
    }

    void initFirstMatrix()
    {
        n = 3;
        m = 1;
        a[0][0] = 2;
        a[1][0] = 8;
        a[2][0] = 10;
    }

    void initMutiplyMatrix()
    {
        n = 3;
        m = 3;
        a[0][0] = 0; a[0][1] = 1; a[0][2] = 0;
        a[1][0] = 4; a[1][1] = 2; a[1][2] = 0;
        a[2][0] = 4; a[2][1] = 2; a[2][2] = 1;
    }

    void print()
    {
        cout << endl;
        cout << "_______" << endl;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
                cout << a[i][j] << " ";
            cout << endl;
        }
        cout << "_______" << endl;
    }
};

matrix multiply(const matrix& m1, const matrix& m2)
{
    matrix m3;
    m3.n = m1.n;
    m3.m = m2.m;
    m3.reset();

    for (int i = 0; i < m1.n; i++)
        for (int j = 0; j < m2.m; j++)
            for (int k = 0; k < m1.m; k++)
                m3.a[i][j] = (m3.a[i][j] + (m1.a[i][k] * m2.a[k][j]) % MOD) % MOD;

    return m3;
}

matrix power(const matrix& a, int b)
{
    if (b == 1) return a;

    matrix temp = power(a, b / 2);
    temp = multiply(temp, temp);

    if (b % 2 == 0) return temp;
    else return multiply(temp, a);
}

long long cal(const matrix& firstMatrix, const matrix& multiplyMatrix, int n)
{
    if (n == 0) return 1LL;
    if (n == 1) return 2LL;
    if (n == 2) return 8LL;

    matrix resultMatrix;
    resultMatrix = multiply(power(multiplyMatrix, n - 2), firstMatrix);

    return resultMatrix.a[2][0];
}

long long calf(int n)
{
    if (n == 0) return 0LL;
    if (n == 1) return 2LL;
    if (n == 2) return 10LL;

    matrix firstMatrix;
    matrix multiplyMatrix;

    firstMatrix.initFirstMatrix();
    multiplyMatrix.initMutiplyMatrix();

    long long result = cal(firstMatrix, multiplyMatrix, n);

    return result;
}

int main()
{
    int t;
    scanf("%d", &t);

    while (t--)
    {
        int n;
        scanf("%d", &n);

        printf("%lld\n", (calf(n) + (n >= 2 ? calf(n - 2) * 4LL + 4LL : 0LL)) % MOD);
    }
}

