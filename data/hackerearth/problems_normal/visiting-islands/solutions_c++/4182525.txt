/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
bool visited[1000005];
int dp[1000005];
int arr[1000005];
void ini()
{
    memset(visited,0,sizeof(visited));
    memset(dp,-1,sizeof(dp));
}
int dfs(int index)
{
    if(visited[index])
    {
        if(dp[index]!=-1)
            return dp[index];
        else
        {
            int count=1;
            int i=arr[index];
            while(i!=index)
            {
                i=arr[i];
                count++;
            }
            i=arr[index];
            dp[index]=count;
            while(i!=index)
            {
                dp[i]=count;
                i=arr[i];

            }
            return count;
        }
    }
    visited[index]=1;
    int res=dfs(arr[index])+1;
    if(dp[index]==-1)
        dp[index]=res;
    return dp[index];

}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ini();
        int n;
        cin>>n;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        memset(dp,-1,sizeof(dp));
        int ans=0,fin_ans=0,index=-1;
        for(int i=0;i<n;i++)
        {
            if(!visited[i])
            {
                ans=dfs(i);
                if(ans>fin_ans)
                {
                    fin_ans=ans;
                    index=i;
                }
            }
        }
        cout<<index<<"\n";
    }
}
