#include<bits/stdc++.h>
using namespace std;
long long int mod = 1000000007;
long long int power(long long int two, long long int n)
{
	long long int x;
	if (n == 1)
		return two % mod;
	else {
		x = power(two, n / 2) % mod;
		if (n % 2 != 0) 
			return (((x * x) % mod) * two) % mod;
		else
			return (x * x) % mod;
	}
}

int gcd(int a, int b)
{
	if (b == 0)
		return a;
	else 
		gcd(b, a % b);
}
int dp[1009][4], n, mn = 100000000, f;
vector<vector<pair<int, int> > > v(1009);
int visit[1009] = {0};
int calc(int in, int prev)
{
	if (in == n) {
		f = 1;
		//mn = min(mn, len);
		return 0;
	}
	if (prev != -1 && dp[in][prev] != -1)
		return dp[in][prev];
	int t = 100000000, ll;
	ll = v[in].size();
	for (int i = 0; i < ll; i++) {
		if (v[in][i].second != prev && visit[v[in][i].first] == 0) {
			visit[v[in][i].first] = 1;
			t = min(t, 1 + calc(v[in][i].first, v[in][i].second));
			visit[v[in][i].first] = 0;
		}
	}	
	if (prev != -1)
		return dp[in][prev] = t;
	else 
		return t;
}	 
int main()
{
	int c, i, j, k, m, l, p, a, b;
	scanf("%d%d", &n, &m);
	f = 0;
	memset(dp, -1, sizeof(dp));
	for (i = 0; i < m; i++) {
		scanf("%d%d%d", &a, &b, &c);
		v[a].push_back(make_pair(b, c));
	}
	p = calc(1, -1);
	if (f == 0)
		printf("-1\n");
	else
		printf("%d\n", p);	
	return 0;
}



















