#include <iostream>
#include<vector>
#include <string>
#include <algorithm>
using namespace std;

struct  srt{
	int n;
	string s;
};

bool comp(srt a, srt b) {
	return (a.s < b.s);
}
int main()
{
    int n;
    int k;
    int m;
    int t;
    cin >> t;
    //vector<srt> str;
    
    while(t--) {
        scanf("%d %d %d", &n, &k, &m);
        vector<srt> str;
        vector<string> output;
        for (int i = 0; i < n; i++) {
        	string s;
        	char tmp[1001];
        	scanf("%s", tmp);
        	s = tmp;
        	output.push_back(s);
        	srt temp;
        	temp.s = s.substr(0,m);
        	temp.n = i;
        	str.push_back(temp);
        }
        
        stable_sort(str.begin(), str.end(), comp);
        cout << output[str[k-1].n ] << endl;
        //vector<srt>::iterator it;
        //for (it = str.begin(); it != str.end(); it++)
             //if (n k )
             //cout << (*it).s << (*it).n << endl;
    }
    return 0;
}
