#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e5+10;
vector<int>g[mx],dag[mx];
int cmp[mx], ncc = 0;

stack<int> st;
bool instack[mx];
int color[mx],idx[mx],low[mx],t=0;
int sz[mx];

void dfs(int u){
   color[u] = 1; 
   idx[u] = low[u] = t++;
   st.push(u);
   instack[u]=true;
   for(int i=0;i<int(g[u].size());i++){
      int v = g[u][i];
      if(color[v]==0){
         dfs(v);
         low[u]=min(low[u],low[v]);
      }
      if(instack[v]){
         low[u] = min(low[u],idx[v]);
      }
   }
   if(idx[u]==low[u]){
      int v;
      do{
         v = st.top();  
         cmp[v] = ncc;
         sz[ncc]++;
         instack[v]=false;
         st.pop();
      } while(v!=u);
      ncc++;
   }
   color[u] = 2;
}


int main(){
   int n,m,u,v;
   scanf("%d %d",&n,&m);
   while(m--){
      scanf("%d %d",&u,&v);
      g[--u].push_back(--v);
   }
   for(int i=0;i<n;i++){
      if(color[i]==0){
         dfs(i);
      }
   }
   for(int i=0;i<n;i++){
      if(i!=0)printf(" ");
      if(sz[cmp[i]]>=2)printf("1");
      else printf("0");
   }
   printf("\n");
   return 0;
}

