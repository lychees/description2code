def permute(n):
    """
    maximize the output sum we need to maximize the difference between the nos using a greedy approach
    and we have to keep in mind that we have 10^5 so our algo should work in O(n) or O(nlogn) even better if
    O(1)
    >>> [2, 1, 3] approach is good
    >>> [3,4,1,5,2] gives a max of 11 this gives a n = 5 formula sum(n-1 + 2*[(n- 2*1)]... + 1)
    if n is even sum((n - 1) + [(n-2*1)]*2 + [(n - 2*2)]*2 + [(n - 2*3)]*2.... + 0)
    So Its a
    """
    if n == 1:
        print 1
        return
    sumup = 0
    x = (n - 1)/2
    if n % 2 == 0:
        sumup = 2 * x * (x + 1) + n - 1
    else:
        sumup = 2*(x**2 - 1) + n
    print sumup


[permute(input()) for i in range(input())]
