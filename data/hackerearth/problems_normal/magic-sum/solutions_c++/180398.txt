#include<iostream>
#include<cstdio>
#include<vector>
#include<cstdlib>
#include<algorithm>
#include<climits>
#include<cstring>
#include<cmath>
#include<set>
#include<stack>

using namespace std;

#define V(v) vector<int> v
#define all(v) v.begin(),v.end()
#define FOR(i,n) for(int i = 0 ; i<n ; i++)


vector<long long> tree;
long long maximum;
long long max_sum(int idx,int ss,int se)
{

    if(ss==se)
    {
        if(maximum<tree[idx])
            maximum=tree[idx];
        return tree[idx];
    }
    int mid=(ss+se)>>1;

    long long left_sum=max_sum(2*idx+1,ss,mid);
    long long right_sum=max_sum(2*idx+2,mid+1,se);

    if(maximum<(left_sum+right_sum+tree[idx]))
        maximum=(left_sum+right_sum+tree[idx]);

    return max(left_sum+tree[idx],tree[idx]+right_sum);
}
int main()
{

 int t;
 cin>>t;
 while(t--)
 {

     maximum=LLONG_MIN;
     int n;
     cin>>n;
     tree.resize(n);
     for(int i=0;i<n;i++)
     {
         cin>>tree[i];
     }
     max_sum(0,0,(n+1)/2-1);
     cout<<maximum<<endl;
     tree.clear();
 }




	return 0;
}
