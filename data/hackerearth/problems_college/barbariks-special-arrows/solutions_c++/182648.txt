#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <list>
#include <complex>
#include <queue>
#pragma comment(linker, "/STACK:266777216")
using namespace std;

#define assert(f) { if(!(f)) { fprintf(stderr,"Assertion failed: "); fprintf(stderr,#f); fprintf(stderr,"\n"); exit(1); } }

typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<double> VD;
typedef pair<double,double> PDD;

const int inf=1000000000;
const LL INF=LL(inf)*inf;
const double eps=1e-9;
const double PI=2*acos(0.0);
#define bit(n) (1<<(n))
#define bit64(n) ((LL(1))<<(n))
#define pb push_back
#define sz size()
#define mp make_pair
#define cl clear()
#define all(a) (a).begin(),(a).end()
#define fill(ar,val) memset((ar),(val),sizeof (ar))
#define MIN(a,b) {if((a)>(b)) (a)=(b);}
#define MAX(a,b) {if((a)<(b)) (a)=(b);}
#define sqr(x) ((x)*(x))
#define X first
#define Y second

//clock_t start=clock();
//fprintf(stderr,"time=%.3lfsec\n",0.001*(clock()-start));

class MaxMatching
{
public:
	int n,m;
	VVI a;
	VI p;
	VI mark;
	MaxMatching(int n_, int m_): n(n_),m(m_),a(n,VI()),p(n,-1) {}
	void add(int v, int u)
	{
		a[v].pb(u);
		a[u].pb(v);
	}
	bool dfs(int u)
	{
		if(mark[u]) return false;
		mark[u]=true;
		for(int i=a[u].sz;i--;)
		{
			int v = a[u][i];
			if(mark[v]) continue;
			mark[v]=true;
			if(p[v]<0 || dfs(p[v]))
			{
				p[u]=v;
				p[v]=u;
				return true;
			}
		}
		return false;
	}
	int build()
	{
		int res=0;
		while(true)
		{
			mark=VI(n,0);
			int cur=0;
			for(int i=0;i<m;i++)
				if(p[i]==-1 && dfs(i))
					cur++;
			if(!cur) break;
			res+=cur;
		}
		return res;
	}
};

#define N 1111

int main()
{
#ifndef ONLINE_JUDGE
  freopen("in.txt","r",stdin);
#endif
  int T;
  for(scanf("%d",&T);T--;)
  {
    int n;
    scanf("%d",&n);
    PII a[N];
    int x[N],y[N];
    for(int i=0;i<n;i++)
    {
      scanf("%d%d",&a[i].X,&a[i].Y);
      x[i]=a[i].X;
      y[i]=a[i].Y;
    }
    sort(x,x+n);
    int nx=unique(x,x+n)-x;
    sort(y,y+n);
    int ny=unique(y,y+n)-y;
    MaxMatching mm(nx+ny,nx);
    for(int i=0;i<n;i++)
    {
      int u=lower_bound(x,x+nx,a[i].X)-x;
      int v=lower_bound(y,y+ny,a[i].Y)-y;
      mm.add(u,nx+v);
    }
    int res = mm.build();
    printf("%d\n",res);
  }
  return 0;
}