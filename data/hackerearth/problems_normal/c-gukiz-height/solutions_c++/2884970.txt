#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

const int MAXN = 100005;

int N;
long long p[ MAXN ], H;
__int128 sum[ MAXN ];
__int128 mtime;

__int128 get( __int128 x ){
    //printf( "Testing %lld\n", x );
    if( sum[ x-1 ] >= H - x*(x+1)/2 ){
        //printf( "Over in first cycle\n", x );
        return x;
    }
    __int128 lo = 0, hi = 1LL<<35, mid;
    while( lo < hi ){
        mid = ( lo + hi ) / 2;
        //printf( "%lld, <%lld, %lld> :: %lld, %lld\n", mid, lo, hi, mid*sum[ N-1 ] + sum[ x-1 ], H - ( mid*N + x )*( mid*N + x + 1 ) / 2 );
        if( mid*sum[ N-1 ] + sum[ x-1 ] >= H - ( mid*N + x )*( mid*N + x + 1 ) / 2 )
            hi = mid;
        else
            lo = mid+1;
    }
    return lo*N+x;
}

int main(){
    scanf( "%d%lld", &N, &H );
    for( int i = 0; i < N; ++i )
        scanf( "%lld", &p[ i ] );

    sum[ 0 ] = p[ 0 ];
    for( int i = 1; i < N; ++i )
        sum[ i ] = sum[ i-1 ] + p[ i ];

    mtime = 1LL<<35;
    for( int i = 1; i <= N; ++i )
        mtime = min( mtime, get( i ) );

    printf( "%lld\n", (long long) mtime );

	return 0;
}
