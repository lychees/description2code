#include <iostream>
#include <vector>
#include <iterator>
#include <utility>
#include <algorithm>

using namespace std;


int main()
{
	int N;
	long long S, E;
	int i = 0;
	
	cin >> N >> S >> E;
	
	
	vector< pair<long long, long long> > xp;
	
	long long x;
	long long p;
	long long left;
	long long right;
	
	
	for(i = 0; i < N; ++i) {
		cin >> x >> p;
		
		left = x-p;
		right = x+p;
		
		if( (right <= S) || (left >= E) ) {
			continue;
		}
		
		left = max(left, S);
		right = min(right, E);
		
		xp.push_back(make_pair(left, right));
	}

	if(xp.size() == 0) {
		cout << E-S << endl;
		return 0;
	}

	sort(xp.begin(), xp.end());
	long long gap = 0;
	
	left = xp[0].first;
	right = xp[0].second;
	
	gap = max(0LL, left-S);
	
	for(int i = 1; i < xp.size(); ++i) {
		if(xp[i].second > right) {
			gap += max(0LL, xp[i].first - right);
			right = xp[i].second;
		}
	}
	
	gap += max(0LL, (E - right));
	
	/*
	for(vector<pair<long long, long long> >::iterator it = xp.begin(); it != xp.end(); it++) {
		cout << it->first << " : " << it->second << endl;
	}*/

	//cout << "Gap : " << gap << endl;
    cout << gap << endl;
    
    return 0;
}
