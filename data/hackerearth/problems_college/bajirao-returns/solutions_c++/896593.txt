#include<iostream>
#include<set>
using namespace std;
int n,p[101][101],dp[101][101];
set<int> v[101];
int rec(int r,int c) {
    if(dp[r][c]!=-1)
        return dp[r][c];
    int &ret=dp[r][c];    
    if(r==n) {
        return ret=p[r][c];
    }
    ret=p[r][c];
    int mx=0;
    set<int>::iterator it;
    for(it=v[c].begin();it!=v[c].end();++it) {
        if(*it<=n) {
            mx=max(mx,rec(r+1,*it));
        }
    }
    return ret+=mx;
}
main() {
    for(int i=1;i<=100;++i) {
        int j=i/2;
        if(j) {
            set<int>::iterator it;
            for(it=v[j].begin();it!=v[j].end();++it)
                v[i].insert(*it);
        }
        for(int k=i;k<=100;k*=2)
            v[i].insert(k);
    }
//    for(int i=1;i<=100;++i) {
  //      tr(v[i],it)
    //        cout<<*it<<" ";
      //  cout<<endl;
    //}

    for(int i=0;i<=100;++i)
        for(int j=0;j<=100;++j)
            dp[i][j]=-1;
    cin>>n;
    for(int i=1;i<=n;++i) 
        for(int j=1;j<=n;++j)
            cin>>p[i][j];
    int ans=0;
    for(int i=1;i<=n;++i) {
        int tmp=rec(1,i);
//        cout<<tmp<<" ";
        ans=max(ans,tmp);
    }
//    cout<<endl;
    cout<<ans<<endl;
    return 0;
}
