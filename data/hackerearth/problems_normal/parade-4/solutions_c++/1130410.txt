#include <cstdio>
#include <algorithm>
using namespace std;

const int MAXN = 1100, MAXI = 1000, mod = (int)1E9+7;
int dp[MAXN][MAXN], sum[MAXN], N, cor[MAXN], proximo[MAXN];

int main() {
    int T;
    scanf("%d",&T);
    while (T--) {
        for (int i=0; i<=MAXI+10; i++) {
            for (int k=0; k<=MAXI+10; k++) dp[i][k] = 0;
            sum[i] = 0;
        }
        int M, pai;
        scanf("%d %d",&N,&M);
        for (int i=1; i<=N; i++) {
            scanf("%d %d",&pai,&cor[i]);
            proximo[pai] = i;
        }
        int atual = 0;
        for (int i=1; i<=N; i++) {
            atual = proximo[atual];
            int x = cor[atual];
            for (int k=M-1; k>=1; k--) {
                sum[k+1] += (((sum[k]-dp[x][k+1])%mod+mod)%mod);
                sum[k+1] %= mod;
                dp[x][k+1] = sum[k];
            }
            if (dp[x][1] == 0) {
                dp[x][1] = 1;
                sum[1]++;
                sum[1] %= mod;
            }
        }
        int resp = 0;
        for (int i=1; i<=M; i++) resp = (resp+sum[i])%mod;
        printf("%d\n",resp);
    }
    return 0;
}
