import math
import sys

sys.setrecursionlimit(1000000000)


def solution():
    T = int(raw_input())
    for i in xrange(T):
        N = int(raw_input().strip())
        arr = []
        for i in xrange(N):
            temp_arr = list(map(int, raw_input().strip().split(' ')))
            arr.append(temp_arr)
        found = bfs(arr, [(0, 0)], [], (N - 1, N - 1), 0, N - 1, N - 1)
        if found:
            print "POSSIBLE"
        else:
            print "NOT POSSIBLE"


def bfs(arr, root, visited, find, level, N, M):
    # print "**", arr, root, visited, find, level, N, M
    send_queue = []
    if len(root) == 0:
        return False
    for i in root:
        if i == find:
            # print "found", i, find
            return True
        if i not in visited:
            visited.append(i)
            a, b = i[0] + 1, i[1]
            if 0 <= a <= N and 0 <= b <= N:
                if arr[a][b] != 0:
                    send_queue.append((a, b))
            a, b = i[0], i[1] + 1
            if 0 <= a <= N and 0 <= b <= N:
                if arr[a][b] != 0:
                    send_queue.append((a, b))
    # print "#####",send_queue, visited, find, level
    # return 4, False
    founds = bfs(arr, send_queue, visited, find, level + 1, N, M)
    return founds


solution()
