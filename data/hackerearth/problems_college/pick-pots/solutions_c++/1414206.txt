#include<bits/stdc++.h>
typedef unsigned long long int ulld;
using namespace std;
#define MOD 1000000007
#ifdef ONLINE_JUDGE
	#define GETCHAR getchar_unlocked	
	#define PUTCHAR putchar_unlocked
#endif
#ifndef ONLINE_JUDGE
	#define GETCHAR getchar
	#define PUTCHAR putchar
#endif

inline long long readlong() 
{
	int flag=1;
    long long n = 0;
    char c;
    int sign=1;
    while (1)
    { 		
		c=GETCHAR();
    	if(c=='-')	sign=-1;
        else if(c>='0'&&c<='9') {n = n * 10 + c - '0';flag=0;}
        else if(flag!=1) break; 
   }
    return sign*n;
}

inline void writeInt(int x) 
{
     int i = 10;
     char buf[11];
     // buf[10] = 0;
     buf[10] = '\n';

     do 
     {
        buf[--i] = x % 10 + '0';
        x/= 10;
     }while(x);
     do 
     {
        PUTCHAR(buf[i]);
     } while (buf[i++] != '\n');
}
void multiply(long long  F[2][2], long long  M[2][2]);
void power(long long  F[2][2], long long  n);
long long  fib(long long  n)
{
  long long  F[2][2] = {{1,1},{1,0}};
  if (n == 0)
      return 0;
  power(F, n-1);
 
  return F[0][0];
}
 
void multiply(long long  F[2][2], long long  M[2][2])
{
  long long  x =  (F[0][0]*M[0][0] + F[0][1]*M[1][0])%MOD;
  long long  y =  (F[0][0]*M[0][1] + F[0][1]*M[1][1])%MOD;
  long long  z =  (F[1][0]*M[0][0] + F[1][1]*M[1][0])%MOD;
  long long  w =  (F[1][0]*M[0][1] + F[1][1]*M[1][1])%MOD; 
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}
 
void power(long long  F[2][2], long long  n)
{
  long long  i;
  long long  M[2][2] = {{1,1},{1,0}};
  for (i = 2; i <= n; i++)
      multiply(F, M);
}
#define MAXN 1000005
long long fibo[MAXN]={0};
int main ()
{

	fibo[0]=0;
	fibo[1]=1;
	fibo[2]=1;
	for(int i=3;i<=MAXN;i++){
		fibo[i]=(fibo[i-1]+fibo[i-2])%MOD;
	}
	
			
  int T;
  T=readlong();
  while(T--){
    long long n;
    n=readlong();
    cout<<fibo[n+2]-1<<"\n";
  }
}