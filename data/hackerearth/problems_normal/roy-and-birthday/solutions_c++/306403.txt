    #include <iostream>
    #define my_size(x) ((char*)(&x+1) - (char *) &x)
    #include<math.h>
    #include<limits.h>
    #include<algorithm>
    #include<stdio.h>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#define mod 1000000007
using namespace std;

long long factorial[1000002];

long long  Power(long long  a,long long  b){
    long long ret=1;
    long long inter=a;
    while(b){
        if(b&1){
            ret *= inter;
            ret %= mod;
        }
        inter *= inter;
        inter %= mod;
        b = b>>1;
    }
    return ret;
}

void precompute()
{
    factorial[0] = 1;
    for(int i=1;i<=1000001;i++)
    {
        factorial[i] = (factorial[i-1]*i)%mod;
    }

}
long long nchooser(int n,int r)
{
    if(n<r||n<0||r<0) return 0;
    long long  a = factorial[n];
    long long b = Power(factorial[r],mod-2);
    long long c = Power(factorial[n-r],mod-2);

    a = (a*b)%mod;
    a = (a*c)%mod;
    return a;
}
int main() {
precompute();
int test;
cin>>test;
while(test--) {
string input;
cin>>input;

int arr[26] ={0};
int vowel=0, consonant =0;
for(int i=0; i<input.length();i++){

    if(input[i]=='a' || input[i]=='e' ||input[i]=='i' || input[i]=='o'||input[i]=='u' ){
        vowel++;
    }
    else
        consonant++;
    arr[input[i]-'a']++;

}

//cout<<vowel <<consonant<<endl;
    int a = consonant-(vowel-1);
 int b = vowel+1;
if(a<0){
    cout<<"-1"<<endl;
    continue;
}

long long answer =nchooser(consonant+1,vowel );
//cout<<nchooser(2,2)<<"Hello"<<endl;

//cout<<answer<<endl;
 answer = (answer*factorial[vowel])%mod;
  answer = (answer*factorial[consonant])%mod;
  for(int i=0;i<26;i++)
  {
      answer *= Power(factorial[arr[i]],mod-2);
      answer %= mod;
  }
  cout<<answer<<endl;



}



    return 0;
}
