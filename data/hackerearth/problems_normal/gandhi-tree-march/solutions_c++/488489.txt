    #include<string>
    #include<vector>
    #include<cstdio>
    #include<sstream>
    #include<cassert>
    #include<iostream>
    #include<algorithm>
    using namespace std;
    int pos;
    string S;
    vector<char> L[10001], R[10001];
    void buildTree(int C)
    {
    if(S[pos]!='.')
    {
    if(abs(C)<=10000)
    {
    if(C>=0) L[C].push_back(S[pos]);
    else R[-C].push_back(S[pos]);
    }
    pos+=2;
    buildTree(C-1);
    buildTree(C+1);
    }
    pos++;
    }
    int main()
    {
    int i, T, C, Size;
    cin>>T;
    while(T--)
    {
    pos=0;
    cin>>C>>S;
    for(i=0; i<=10000; i++) L[i].clear(), R[i].clear();
    buildTree(0);
    if(C>=0)
    {
    if(Size=L[C].size())
    {
    sort(L[C].begin(), L[C].end());
    for(i=0; i<Size; i++) cout<<L[C][i];
    cout<<endl;
    }
    else cout<<"Common Gandhijee!\n";
    }
    else
    {
    if(Size=R[-C].size())
    {
    sort(R[-C].begin(),R[-C].end());
    for(i=0; i<Size; i++)cout<<R[-C][i];
    cout<<endl;
    }
    else cout<<"Common Gandhijee!\n";
    }
    }
    return 0;
    }