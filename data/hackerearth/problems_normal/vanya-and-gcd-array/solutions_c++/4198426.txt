#include <iostream>
#include<algorithm>
#include<cstdio>

using namespace std;

int findGCD(int x, int y){
	return __gcd(x, y);
}
void findSubSequences(int sequences[],int n){
	long long resultdp[n][101];
	for(int i=0;i<n;i++){
		for(int j=0;j<=101;j++)
			resultdp[i][j]=0;
	}
	resultdp[0][sequences[0]]=1;
	long long res=resultdp[0][1];
	for(int i=1;i<n;i++){
		for(int j=i-1;j>=0;j--){
			if(sequences[i]>sequences[j]){
				for(int jj=1;jj<=100;jj++){
					int temp=findGCD(sequences[i],jj);
					resultdp[i][temp] += resultdp[j][jj];
					resultdp[i][temp]=resultdp[i][temp]%1000000007;
				}
			}
		}
		resultdp[i][sequences[i]]++;
		res=res+resultdp[i][1];
		res=res%1000000007;
	}
	cout<<res<<endl;
}
int main()
{
	int num;
	int sequences[505];
	scanf("%d",&num);
	for(int i=0;i<num;i++)
		scanf("%d",&sequences[i]);
	findSubSequences(sequences, num);
    return 0;
}
