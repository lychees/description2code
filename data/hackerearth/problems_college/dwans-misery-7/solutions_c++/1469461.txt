#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
typedef unsigned long long LLU;
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define slld(n)                     scanf("%lld",&n)
#define sllu(n)                     scanf("%llu", &n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)

#define p(n)                        printf("%d",n)
#define pc(n)                       printf("%c",n)
#define plld(n)                     printf("%lld",n)
#define pllu(n)                     printf("%llu",n)
#define pf(n)                       printf("%lf",n)
#define ps(n)                       printf("%s",n)
#define pn()                        printf("\n")

#define INF                         int(1e9)
#define MOD                         int(1e9+7)
#define EPS                         1e-9

#define forall(i,a,b)               for(i=a;i<b;++i)
#define foralleq(i,a,b)             for(int i=a;i<=b;++i)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp                          make_pair

#define dpsize 26000
LL dp1[dpsize], dp2[dpsize];
/*void initialize()
{
    forall(i, 0, dpsize +5)
    {
        forall(j, 0, dpsize + 5)
        dp[i][j] = 0;
    }
}*/
void readll(LL &ret)
{
    int cc = getc(stdin);
    for (;cc < '0' || cc > '9';)
        cc = getc(stdin);
    ret = 0;
    for (;cc >= '0' && cc <= '9';)
    {
        ret = ret *10 + cc - '0';
        cc = getc(stdin);
    }
}
void readllu(LLU &ret)
{
    int cc = getc(stdin);
    for (;cc < '0' || cc > '9';)
        cc = getc(stdin);
    ret = 0;
    for (;cc >= '0' && cc <= '9';)
    {
        ret = ret*10 + cc - '0';
        cc = getc(stdin);
    }
}

/*void readchr(char &c)
{
    c = getchar_unlocked();
    while(c >= '0' && c <= '9')
    c = getchar_unlocked();
}
void readalph(char &c)
{
    c = getchar_unlocked();
    while(c < 'a' || c > 'z')
    c = getchar_unlocked();
}*/
/*
void ncr()
{
    fill(dp, 0);
    foralleq(i, 0, dpsize) {dp[i][i] = 1,dp[i][0] = 1;}
    foralleq(n, 2, dpsize)
    {
        forall(r, 1, n)
            dp[n][r] = (dp[n - 1][r] + dp[n - 1][r - 1])%MOD;
    }
}*/
/////////////////////////////////////////////////////////////
int main()
{
    LL t;readll(t);
    while(t--)
    {
        LL n;readll(n);
        LL temp;
        int *ar = (int *)malloc(n*sizeof(int));
        int i = 0;
        forall(i, 0, n)
        {
            readll(temp);*(ar + i) = temp;
        }
        if(n == 2)
        {
            plld(max(*(ar + 0), *(ar + 1))); pn(); continue;
        }
        
        dp1[0] = *(ar + 0);dp1[1] = max(*(ar + 0), *(ar + 1));
        dp2[0] = *(ar + 1);dp2[1] = max(*(ar + 1), *(ar + 2));
        forall(i, 2, n - 1)
            dp1[i] = max(dp1[i - 1], dp1[i - 2] + *(ar + i));

        LL max1 = dp1[i - 1];

        forall(i, 2, n - 1)
            dp2[i] = max(dp2[i - 1], dp2[i - 2] + *(ar + (i + 1)));

        LL max2 = dp2[i - 1];

        plld(max(max1, max2));pn();
    }
    return 0;
}
