#include <iostream>
#include<vector>
using namespace std;
int dfs(int v,bool visited[],vector<int> adj[],int p[])
{
	
    visited[v] = true;
    
           int i,res=0;
           
           for(i=0;i<adj[v].size();i++)
           {
           	if(!visited[adj[v][i]])
           	{
           		
           		
          res+=dfs(adj[v][i],visited,adj,p);
          
           	}
           }
           return p[v]+res;
           
}

int main()
{
  int n,m,x,y;
  cin>>n>>m;
  int i,p[n+10];
  vector<int> adj[n+1];
  for(i=1;i<=n;i++)
  {
  	cin>>p[i];
  }
  
  
  for(i=1;i<=n-1;i++)
  {
  	cin>>x>>y;
  	adj[x].push_back(y);
  }
 
  
  bool visited[n+10];
 
  char ch;
  int val,res,a,b;
  while(m--)
  {
  cin>>ch;
  if(ch=='Q')
  {
  	cin>>val;
  	 for(i=1;i<=n;i++)
  {
  	visited[i]=false;
  }
  
  res=dfs(val,visited,adj,p);
  cout<<res<<"\n";
 // cout<<res<<"\n";
  }
  else if(ch=='U')
  {
  cin>>a>>b;
  p[a]=b;
  }
  }
    return 0;
}
