#include <iostream>
#include <vector>
#include <map>
#include <queue>

using namespace std;

int main() {
	int a, b;
	cin >> a >> b;
	map<int, vector<int> > Graph;
	int luckiness[a];
	bool visited[a];
	for(int i = 0; i < a; ++i) {
		luckiness[i] = -1;
		visited[i] = false;
	}
	luckiness[0] = 0;
	while(b--) {
		int c, d;
		cin >> c >> d;
		Graph[c].push_back(d);
		Graph[d].push_back(c);
	}
	queue<int> q;
	q.push(0);
	visited[0] = true;
	while(!q.empty()) {
		int top = q.front();
		q.pop();
		vector<int> edges = Graph[top];
		for(int i = 0; i < edges.size(); ++i) {
			if(!visited[edges[i]]) {
				visited[edges[i]] = true;
				q.push(edges[i]);
				luckiness[edges[i]] = luckiness[top] + 1;
			}
		}
	}
	for(int i = 1; i < a;++i)
		cout<<luckiness[i]<<endl;
}
