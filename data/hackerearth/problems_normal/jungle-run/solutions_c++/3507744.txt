#include<bits/stdc++.h>
using namespace std;
char m[35][35];
bool visited[35][35];
int d[35][35];
int n;
int si,sj,di,dj;

bool isValid(int i,int j)
{
    if(visited[i][j]||i<1||i>n||j<1||j>n||m[i][j]=='T')
        return false;
    return true;
}


void dijkstra()
{
   int i,j,ui,uj,vi,vj;
   for(i=1;i<=n;i++)
    for(j=1;j<=n;j++){
    d[i][j] = INT_MAX;
    visited[i][j] = false;
    }
   d[si][sj] = 0;

   while(1)
   {
       int mn = INT_MAX;
       for(i=1;i<=n;i++)
        for(j=1;j<=n;j++)
        {
           if(d[i][j]<mn&&!visited[i][j])
           {
               mn = d[i][j];
               ui = i;
               uj = j;
           }
        }
        visited[ui][uj] = true;
        if(ui==di&&uj==dj)
        return;
       if(isValid(ui+1,uj))
         d[ui+1][uj] = min(d[ui+1][uj],d[ui][uj]+1);

       if(isValid(ui-1,uj))
        d[ui-1][uj] = min(d[ui-1][uj],d[ui][uj]+1);

       if(isValid(ui,uj+1))
        d[ui][uj+1] = min(d[ui][uj+1],d[ui][uj]+1);

       if(isValid(ui,uj-1))
        d[ui][uj-1] = min(d[ui][uj-1],d[ui][uj]+1);
   }
}
int main()
{
    int i,j;
    cin>>n;
    for(i=1;i<=n;i++)
        for(j=1;j<=n;j++){
        cin>>m[i][j];
        if(m[i][j]=='S')
        {
            si = i;
            sj = j;
        }
        if(m[i][j]=='E')
        {
            di = i;
            dj = j;
        }
        }

        dijkstra();
        cout<<d[di][dj]<<endl;
    return 0;
}
