#include<bits/stdc++.h>

#define ll long long int
#define end cout << endl
#define eb push_back
#define pb pop_back
#define size(a) int(a.size())
//for traversing the container (bcoz we cannot access linked list etc with direct index)
//c stands for container and it for iterator
#define tr(c, it) \
		for(typeof(c.begin()) it=c.begin() ; it != c.end() ; it++)
		
#define all(c) c.begin(), c.end()
#define present(container, element) (container.find(element) != container.end()) //whether the element is present in the container

#define f(i, start, end) for(i=start; i<end; i++)


#define trace2(x, y)             cout <<#x<<": "<<x<<" | "<<#y<<": "<<y<< endl;
#define trace3(x, y, z)          cout <<#x<<": "<<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl;
#define trace4(a, b, c, d)       cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl;
#define trace5(a, b, c, d, e)    cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<<": "<<e<<endl;

using namespace std;

typedef vector < int > vi;
typedef vector < vi > vvi;
typedef vector < ll > vll;
typedef vector < vll > vvll;

typedef pair < int , int > ii;




int main()
{
	std::ios_base::sync_with_stdio(false);
	ll n, i, t, j;
	
	cin >> t;
	
	while(t>0)
	{
		cin >> n;
		ll ans[n][3], B[3];
		
		for(j=0; j<3; j++)
		{
			cin >> B[j];
			ans[0][j] =B[j];
		}
		
		
		for(i=1; i<n; i++)
		{
			for(j=0; j<3; j++)
			{
				cin >> B[j];
				ll temp = min(ans[i-1][(j+1)%3], ans[i-1][(j+2)%3]);
				ans[i][j]=B[j]+ temp;
				
				//trace5(i, j, ans[i][j], B[j], temp);
			}
		}
		
		
		ll value=min( min(ans[n-1][0], ans[n-1][1]), ans[n-1][2] );
		
		cout << value << endl;	
				
		t--;
			
	}
	
	return 0;
}
