#include <iostream>
#include <cstdio>
#include <vector>
#include <cassert>
#include <sstream>
#include <map>
#include <set>
#include <climits>
#include <stack>
#include <queue>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdlib>
using namespace std;
#define FOR(i,a,b) for(int i= (int )a ; i < (int )b ; ++i)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define INF 1000000000
#define ALL(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
typedef pair<int,int> PI;
typedef vector<int> VI;
typedef long long LL;
int done[999][1024];
int store[999][1024];
int pr[999][1024][2];
vector<int>ans;;
int main()
{
        string ref="0123456789";
        int test;
	int n,num,i,j,x,y;
	char ch;
	string str;
	vector<int>list;
	queue< pair<int,int> >qu;
	pair<int,int>temp,var;
	cin>>test;
	while(1)
	{
	   scanf("%c",&ch);
	   if(ch=='\n')break;
	}
	while(test--)
	{
	    while(1)
	    {
	       scanf("%c",&ch);
	       if(ch=='\n')break;
	       if(ch>=48&&ch<=57)
	       {
		  num=ch-48;
		  list.PB(num);
	       }
	    }
	    cin>>n;
	    while(1)
	    {
	       scanf("%c",&ch);
	       if(ch=='\n')break;
	    }
	    for(i=0;i<n;i++)
	    {
	       for(j=0;j<(1<<(list.size()));j++)
	       {
		  done[i][j]=0;
		  store[i][j]=-1;
		  pr[i][j][0]=-1;
		  pr[i][j][1]=-1;
	       }
	    }
	    sort(ALL(list));
	    for(i=0;i<list.size();i++)
	    {
	       if(list[i]==0)continue;
	       temp=make_pair(list[i]%n,1<<i);
	       done[list[i]%n][1<<i]=1;
	       store[list[i]%n][1<<i]=list[i];
	       pr[list[i]%n][1<<i][0]=-1;
	       pr[list[i]%n][1<<i][1]=-1;
	       qu.push(temp);
	    }
	    while(!qu.empty())
	    {
	       temp=qu.front();
	       qu.pop();
	       for(i=0;i<list.size();i++)
	       {
                    x=(temp.first*10+list[i])%n;
		    y=temp.second|(1<<i);
		    if(done[x][y]==0)
		    {
		       done[x][y]=1;
		       var=make_pair(x,y);
		       store[x][y]=list[i];
		       pr[x][y][0]=temp.first;
		       pr[x][y][1]=temp.second;
		       qu.push(var);
		    }
	       }
	    }
	    int nx,ny,vari;
	    num=(1 << list.size())-1;
	    if(store[0][num]==-1)cout<<"Impossible"<<endl;
	    else
	    {
	       x=0;
	       y=num;
	       while(1)
	       {
		  ans.PB(store[x][y]);
		  if(pr[x][y][0]==-1&&pr[x][y][1]==-1)break;
		  nx=pr[x][y][0];
		  ny=pr[x][y][1];
		  x=nx;
		  y=ny;
	       }
	  /*     for(i=ans.size()-1;i>=0;i--)cout<<ans[i];
	       cout<<endl;*/
       
	       string fstr="";
	       str="";
	       i=ans.size()-1;
	       num=0;
	       while(i>=0)
	       {
		  num=num*10;
		  num=num+ans[i];
		  vari=num/n;
		  str=str+ref[vari];
		  num=num-vari*n;
		  i--;
	       }
	       for(i=0;i<str.length();i++)if(str[i]!='0')break;
	       for(j=i;j<str.length();j++)fstr=fstr+str[j];
	       for(i=ans.size()-1;i>=0;i--)cout<<ans[i];
	       cout<<" = "<<n<<" * "<<fstr<<endl;
	    }
	    list.erase(ALL(list));
	    ans.erase(ALL(ans));
	}
	return 0;
}
