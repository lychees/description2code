#include<bits/stdc++.h>
using namespace std;
struct edge
{
    int a,b,c;
};
int main()
{
    int n,m;
    cin>>n>>m;
    map<string,int>m1;
    for(int i=0;i<n;i++)
    {
        string a;
        cin>>a;
        m1[a]=i+1;
    }
    vector<pair<int,int> >v[n+1];
    edge a1[m];
    for(int i=0;i<m;i++)
    {
        string a,b;
        int c;
        cin>>a>>b>>c;
        a1[i].a=m1[a];
        a1[i].b=m1[b];
        a1[i].c=c;
        //cout<<m1[a]<<" "<<m1[b]<<endl;
        v[m1[a]].push_back(make_pair(c,m1[b]));
        v[m1[b]].push_back(make_pair(c,m1[a]));
    }
    /*for(int i=1;i<=n;i++)
    {
        for(int j=0;j<v[i].size();j++)
        {
            cout<<v[i][j].first<<" "<<v[i][j].second;
        }
        cout<<endl;
    }*/
    int d[n+1][n+1];
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(i==j)
                d[i][j]=0;
            else
                d[i][j]=100000;
        }
    }
    for(int i=0;i<m;i++)
    {
        d[a1[i].a][a1[i].b]=a1[i].c;
        d[a1[i].b][a1[i].a]=a1[i].c;
    }
    /*for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            cout<<d[i][j]<<" ";
        }
        cout<<endl;
    }*/
    for(int k=1;k<=n;k++)
    {
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=n;j++)
            {
                d[i][j]=min(d[i][j],d[i][k]+d[k][j]);
            }
        }
    }
      /*for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            cout<<d[i][j]<<" ";
        }
        cout<<endl;
    }*/
    int q;
    cin>>q;
    while(q--)
    {
        string a,b;
        cin>>a>>b;
        cout<<d[m1[a]][m1[b]]<<endl;
    }
}
