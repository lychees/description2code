#include <iostream>
#include<algorithm>
using namespace std;
#define MOD 1000000007
#define MAX 100001
long long inv[MAX];
long long fact[MAX];
long long mypow(long long a,long long b)
{
if(b==0)
	return 1;
long long t=(mypow(a,b/2))%MOD;
if(b%2==1)
	return (((t*t)%MOD)*a)%MOD;
return (t*t)%MOD;	
}
void precompute()
{
for(long long i=1;i<MAX;i++)
	{fact[i]=(fact[i-1]*i)%MOD;
	inv[i]=mypow(fact[i],MOD-2);
	}
}
long long fun(long long n,long long r)
{
	return (((fact[n]*inv[r])%MOD)*inv[n-r])%MOD;
}
int main()
{int t;
long long n,k;
fact[0]=1;
inv[0]=1;
precompute();
cin>>t;
while(t--)
{
	cin>>n>>k;
	long long arr[n];
	for(long long i=0;i<n;i++)
		cin>>arr[i];
	sort(arr,arr+n);
	long long sum=0;
	long long m=0;
	for(long long p=n-1;p>=k-1;p--)
	{
		sum=(sum + (arr[m++]*fun(p,k-1))%MOD)%MOD;
	}
cout<<sum<<endl;
}
return 0;
}
