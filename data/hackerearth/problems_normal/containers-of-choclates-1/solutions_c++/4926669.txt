#include <bits/stdc++.h>
using namespace std;



void dfs(int i, int j, int a[], vector<int> *G, bool visited[])
{
	vector<int> :: iterator k;
	visited[i] = 1;
	a[j]++;
	for(k = G[i].begin();k != G[i].end();k++)
	{
		
		if(!visited[*k])
			dfs(*k, 1-j, a, G, visited);
	}
}	

int main()
{
	int y = 1;
	int t, n, i, j, u, v, count;
	cin >> t;
	while(t--)
	{
		count = 0;
		cin >> n;
		int soldiers = 0;
		vector<int> G[20005];
		
		for(i = 0;i < n;i++)
		{
			cin >> u >> v;
			G[u].push_back(v);
			G[v].push_back(u);
			soldiers = max(soldiers, max(u, v));

		}
		bool visited[soldiers + 1];
		for(i = 0; i <= soldiers;i++)
		{
			visited[i] = 0;
		}
		int a[2] = {0};
		for(i = 1; i <= soldiers;i++)
		{
			a[0] = 0, a[1] = 0;
			
			j = 1;
			
			if(!visited[i] && G[i].size())
			{
				dfs(i, j, a, G, visited);
				count += max(a[0], a[1]);
			}
				
		}
		for(i = 0; i <= soldiers;i++)
			G[i].clear();

		cout << "Case " << y++ << ": " << count << endl;
		

	}
}