#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
using namespace std;
vector<long long int> v1,v2;
map<long long int,long long int> mp1;
map<long long int,long long int>::iterator it;
int main()
{
    long long int t,n,p1,p2,result;
    cin>>t;
    while(t--)
    {
    	v1.clear();
    	v2.clear();
    	mp1.clear();
    	cin>>n;
    	result=0;
    	v1.resize(n);
    	v2.resize(n);
    	for(p1=0;p1<n;p1++)
    		cin>>v1[p1];
    	for(p1=0;p1<n;p1++)
    		cin>>v2[p1];
    	for(p1=0;p1<n;p1++)
    		mp1[v1[p1]+v2[p1]]++;
    	sort(v1.begin(),v1.end());
    	for(p1=0;p1<n;p1++)
    	{
    	//	it=mp1.lower_bound(v1[p1]);
    	//	if(it->first>v1[p1]&&it!=mp1.begin())
    	//		it--;
    		if(mp1.begin()->first>v1[p1])
    		{
    			result++;
    		//	cout<<mp1.lower_bound(v1[p1])->first<<"->"<<v1[p1]<<"--";
    		}
    		else
    			mp1.begin()->second--;
    		if(mp1.begin()->second==0)
    		{
    		//	cout<<"-->"<<mp1.lower_bound(v1[p1])->first<<"->"<<v1[p1]<<"<--";
    			mp1.erase(mp1.begin());
    		}
    	}
    //	for(it=mp1.begin();it!=mp1.end();it++)
    //		cout<<it->first<<"->"<<it->second<<"--";
    	cout<<result<<"\n";
    	//
    }
    return 0;
}
