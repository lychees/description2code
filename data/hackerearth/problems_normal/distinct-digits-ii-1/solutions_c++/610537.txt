#include<cstdio>
#include<iostream>
#include<vector>
#include<cstring>
#include<algorithm>
#include<set>
#include<cmath>
#include<bitset>
#include<map>
#define test(t) while(t--)
#define cin(n) scanf("%d",&n)
#define cout(n) printf("%d\n",n)
#define rep(i,a,n) for(i=a;i<=n;i++)
#define vi vector<int>
#define vii vector< vector<int> >
#define vpii vector< pair<int,int> >
#define mii map<int,int>
#define pb push_back
#define mp make_pair
#define imax (int) 1000000007
#define ill long long
#define gc getchar_unlocked
using namespace std;
#define MAXN 200009
long long sum[3*MAXN];
long long a[MAXN];
long long sum2[3*MAXN];
#define mod 1000000007

int n;
int tree[100008][12];

int query(int idx,int pt)
{
int sum=0;

while(idx>0)
{
sum+=tree[idx][pt];
idx-=(idx&-idx);
}
return sum;
}

void update(int idx,int pt,int val)
{
while(idx<=n)
{
tree[idx][pt]+=val;
idx+=(idx&-idx);
}

}

int main()
{

int t,m,i,j,k,l;

cin(n);
int a[n+9],ma[n+9];
memset(tree,0,sizeof(tree));

for(i=1;i<=n;i++)
{
cin(a[i]);
int arr[12];
memset(arr,0,sizeof(arr));
k=a[i];
int ct=0;
while(k>0)
{
if(arr[k%10]==0)
ct++;
arr[k%10]=1;
k/=10;
}
update(i,ct,1);
ma[i]=ct;
}

cin(m);

while(m--)
{
int p,q;
string ss;
cin>>ss;	
cin(p);
cin(q);
int arr[12];
memset(arr,0,sizeof(arr));

if(ss=="ADD")
{
a[p]=(a[p]+q)%mod;
update(p,ma[p],-1);
int k=a[p];
int ct=0;
while(k>0)
{
if(arr[k%10]==0)
ct++;
arr[k%10]=1;
k/=10;
}
update(p,ct,1);
ma[p]=ct;
}

if(ss=="MUL")
{
ill z=(a[p]*1LL*q)%mod;

a[p]=z;
update(p,ma[p],-1);
int k=a[p];
int ct=0;
while(k>0)
{
if(arr[k%10]==0)
ct++;
arr[k%10]=1;
k/=10;
}
update(p,ct,1);
ma[p]=ct;
}

if(ss=="REP")
{
a[p]=q%mod;
update(p,ma[p],-1);
int k=a[p];
int ct=0;
while(k>0)
{
if(arr[k%10]==0)
ct++;
arr[k%10]=1;
k/=10;
}
update(p,ct,1);
ma[p]=ct;
}

if(ss=="MAX")
{
int fg=0;
for(i=10;i>0;i--)
{
int val=query(q,i)-query(p-1,i);
if(val==0)
continue;
fg=val;
break;
}
cout<<i<<" "<<fg<<"\n";
}

if(ss=="MIN")
{
	int fg=0;
for(i=1;i<=10;i++)
{
int val=query(q,i)-query(p-1,i);
if(val==0)
continue;
fg=val;
break;
}
cout<<i<<" "<<fg<<"\n";
}
}


return 0;
}