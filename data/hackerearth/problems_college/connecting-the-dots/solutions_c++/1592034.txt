#include <cstdio>
#include <vector>
#include <memory.h>
#include <queue>
#define MAX 1001
using namespace std;
vector< vector<int> >graph;
int colmax[MAX][MAX];
int visited[MAX];
int abs(int a)
{
    return a>0?a:-a;
}
int bfs(int n)
{
    queue< pair<int,int> >q;
    q.push(make_pair(1,-1));
    q.push(make_pair(-1,-1));
    visited[1]=1;
    int ans = 0;
    while(!q.empty())
    {

	if(q.front().first==-1)
	{
	    ans++;
	    q.pop();
	    if(!q.empty())
		q.push(make_pair(-1,-1));
	    else
		break;
	}
	if(q.front().first==n)
	{
	    return ans;
	}
	//printf("%d\n",q.front().first);

	visited[q.front().first]=1;
	for(int i=0;i<graph[q.front().first].size();i++)
	{
	    int child = graph[q.front().first][i];
	    int color = colmax[q.front().first][child];
	    if(!visited[child] && color!=q.front().second)
	    {
		q.push(make_pair(child,color));
	    }
	}
	q.pop();

    }
	return -1;
}

int main()
{
    int n,m;
    scanf("%d %d",&n,&m);
    graph.resize(n+1);
    memset(visited,0,sizeof(visited));
    for(int i=0;i<m;i++)
    {
	int c,x,y;
	scanf("%d %d %d",&x,&y,&c);
	graph[x].push_back(y);
	colmax[x][y]=colmax[y][x]=c;
    }
    int ans = bfs(n);
    printf("%d\n",ans);
    return 0;
}