#include<bits/stdc++.h>
using namespace std;
main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		vector<pair<int,int> >a;
		for(int i=1;i<=m;i++)
		{
			int temp1,temp2;
			cin>>temp1>>temp2;
			a.push_back(make_pair(temp1,temp2));
		}
		vector<int>edge[n+1];
		for(int i=1;i<n;i++)
		{
			int temp;
			cin>>temp;
			pair<int,int> p=a[temp-1];
			edge[p.first].push_back(p.second);
			edge[p.second].push_back(p.first);
		}
		bool visited[n+1];
		memset(visited,0,sizeof(visited));
		queue<int> q;
		q.push(1);
		while(q.size()>0)
		{
			if(!visited[q.front()])
			{
				int v=q.front();
				q.pop();
				visited[v]=1;
				for(vector<int>::iterator p=edge[v].begin();p!=edge[v].end();p++)
				{
					if(!visited[*p])
					{
						q.push(*p);
					}
				}
			}
			else
			   q.pop();
		}
		bool flag=false;
		for(int i=1;i<=n;i++)
		{
			if(!visited[i])
			{
				flag=true;
				break;
			}
		}
		if(!flag)
		   cout<<"YES\n";
		else
		   cout<<"NO\n";
	}
}