#include <bits/stdc++.h>
using namespace std;

bool visited[1000001];
int dist[1000001];
// see
bool check(int n)
{
	if(n>=2 && n<=1000000) return true;
	return false;
}
int main()
{
    int t,a,b,mul,div,add,sub;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d %d",&a,&b);
    	scanf("%d %d %d %d",&mul,&div,&add,&sub);
    	queue<int> q;
    	q.push(a);
    	memset(dist,0,sizeof(dist));
    	memset(visited,0,sizeof(visited));
    	dist[a]=0;
    	visited[a]=1;
    	bool fail=true;
    	while(!q.empty())
    	{
    		int p=q.front();
    		q.pop();
    		if(p==b)
    		{
    			fail=false;
    			printf("%d\n",dist[b]);
    			break;
    		}
    		if(check(p*mul) && !visited[p*mul])
    		{
    			visited[p*mul]=1;
    			dist[p*mul]=dist[p]+1;
    			q.push(p*mul);
    		}
    		if(check(p/div) && !visited[p/div])
    		{
    			visited[p/div]=1;
    			dist[p/div]=dist[p]+1;
    			q.push(p/div);
    		}
    		if(check(p+add) && !visited[p+add])
    		{
    			visited[p+add]=1;
    			dist[p+add]=dist[p]+1;
    			q.push(p+add);
    		}
    		if(check(p-sub) && !visited[p-sub])
    		{
    			visited[p-sub]=1;
    			dist[p-sub]=dist[p]+1;
    			q.push(p-sub);
    		}
    	}
    	if(fail){
    		printf("-1\n");
    	}
    }
    return 0;
}
