using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (int i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (int i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

ll canhai(ll n)
{
    ll fi,la,mid;
    fi=0;
    la=n+1;
    while (fi+1<la)
    {
        mid=fi/2+la/2;
        if (fi%2 && la%2) mid++;
        if (mid>n/mid) la=mid;
        else fi=mid;
    }
    return fi;
}

ll power(ll a, ll n, ll m)
{
    if (n==0) return 1;
    ll tmp,c;
    tmp=c=a;
    n--;
    while (n)
    {
        if (n%2) tmp=tmp*c%m;
        c=c*c%m;
        n/=2;
    }
    return tmp;
}

bool d[1000000+10];
ll f[1000000+10],min2,ans,pos,a[1000000+10],res;
int n,dem;

int main()
{
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen("codeforces.out", "w", stdout);
    d[0]=true;
    min2=0;
    res=-INF;
    ri(n);
    FORE(i,1,n)
    {
        ri(a[i]);
        res=max(res,a[i]);
        f[i]=f[i-1]+a[i];
        if (min2>f[i])
        {
            min2=f[i];
            d[i]=true;
        }
    }

    if (res<0)
    {
        cout << -1;
        return 0;
    }

    ans=-1;
    pos=n;
    FORD(i,n,0)
    if (d[i])
    {
        FORD(j,pos,i+1)
        if (f[j]-f[i]>=0)
        {
            if (j-i>ans) ans=(ll) (j-i);
            pos=j;
            break;
        }
    }

    if (ans==-1) cout << -1;
    else
    {
        dem=0;
        FORE(i,1,n)
        if (i>=ans)
        if (f[i]-f[i-ans]>=0) dem++;
        cout << ans << " " << dem;
    }
}


