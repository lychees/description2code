#include "bits/stdc++.h"

using namespace std;

#define TEST(T) int T; cin>>T; while(T--)
#define ll long long
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define ins insert
#define pii pair<int,int>
#define all(V) V.begin(),V.end()
#define clr(V,val) memset(V,val,sizeof(V))
#define rep(X,A,N,C) for(X=A;X<=N;X+=C)
#define rept(X,A,N,C) for(X=A;X>=N;X-=C)
#define sci(X) scanf("%d",&X)
#define scl(X) scanf("%lld",&X)
#define scs(X) scanf("%s",&X)
#define pfi(X) printf("%d",X)
#define pfl(X) printf("%lld",X)
#define pfs(X) printf("%s",X)
#define sp printf(" ")
#define nxt printf("\n")


const int MX=1e6 + 5;

const int INF=1e9;

const int M=1000000007;


            /*************************/
/********** I GOTTA DO WHAT I GOTTA DO ********/
           /*************************/

pair<int,pair<int,int> > p[MX];
int node[MX],n,m;

void init()
{
	int x;
	
	for(x=0;x<n;x++) node[x]=x;
	
}

int root(int x)
{
	while(node[x] != x)
	{
		node[x]=node[node[x]];
		
		x=node[x];
	}
	
	return x;
}

void merge(int x,int y)
{
	int abhi=root(x);
	int shek=root(y);
	
	node[abhi]=shek;
}

int mst()
{
	init();
	
	int ans=0;
	
	int x;
	
	for(x=0;x<m;x++)
	{
		int abhi=p[x].S.F;
		int shek=p[x].S.S;
		
		int anand=p[x].F;
		
		if(root(abhi) != root(shek))
		{
			ans++;
			
			merge(abhi,shek);
		}
	}
	
	return ans;
	
}

int main()
{
	TEST(t){
		
	clr(p,0);
	
	sci(n);
	
	sci(m);
	
	int x;
	
	for(x=0;x<m;x++)
	{
		int a,b;
		
		sci(a);
		sci(b);
		
		a--;
		b--;
		
		p[x]=mp(1,mp(a,b));
		
	}
	
	sort(p,p+m);
	
	pfi(mst());
	
	nxt;
	
	} //test()
	
}
	
	