#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

/* I/O Commands */
#define si(n) scanf("%d", &n)
#define sl(n) scanf("%lld", &n)
#define ss(n) scanf(" %[^\n]", n)
#define slf(n) scanf("%lf", &n)
#define sc(n) scanf("%c", &n)
#define pi(n) printf("%d", n)
#define pl(n) printf("%lld", n)
#define plf(n) printf("%0.1lf", n)
#define ps printf(" ")
#define pe printf("\n")

/* Containers */
#define ll long long
#define vi vector<int>
#define vl vector<ll>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define vpii vector<pii>
#define vpll vector<pll>
#define sti set<int>
#define stpii set<pii>
#define mii map<int,int>
#define mci map<char,int>
#define msi map<string,int>
#define mll map<ll,ll>

/* Containers element */
#define fr front
#define pb push_back
#define pob pop_back
#define pof pop_front
#define mp make_pair
#define iter(it,q) for(auto it=q.begin(); it!=q.end(); it++)
#define riter(rit,q) for(auto rit=q.crbegin(); rit!=q.crend(); rit++)

/* Constants */
#define INF 1000000000000000000
#define MOD 1000000007
#define PI 3.14159265358979323846
#define mod(a) ((a)%MOD)

using namespace std;

int main()
{
	int n, q, i, x = 0;
	si(n);
	si(q);
	int a[100010], b[100010];
	mii m;
	for (i = 0; i < n; i++) {
		si(a[i]);
		b[i] = a[i];
	}
	while (1) {
		if (n % 2 == 0) {
			for (i = 0; i < n - 1; i += 2) {
				if (a[i] > a[i + 1]) {
					m[a[i]]++;
					m[a[i + 1]]++;
					a[x] = a[i];
					if (x == i)
						x = i + 1;
					else
						x++;
				}
				else {
					m[a[i + 1]]++;
					m[a[i]]++;
					a[x] = a[i + 1];
					x++;
				}
			}
			x = 0;
			n = n / 2;
			if (n == 1 || n == 0)
				break;
		}
		else {
			for (i = 0; i < n - 2; i += 2) {
				if (a[i] > a[i + 1]) {
					m[a[i]]++;
					m[a[i + 1]]++;
					a[x] = a[i];
					if (x == i)
						x = i + 1;
					else
						x++;
				}
				else {
					m[a[i + 1]]++;
					m[a[i]]++;
					a[x] = a[i + 1];
					x++;
				}
			}
			a[x] = a[n - 1];
			x = 0;
			n = (n + 1) / 2;
			if (n == 1 || n == 0)
				break;
		}
	}
	while (q--) {
		int k;
		si(k);
		pi(m[b[k - 1]]);
		pe;
	}
	return 0;
}