#include <iostream>
using namespace std;

bool checkSplit(string& s, size_t sp1, size_t sp2, size_t sz){
	/*
	size_t i=0;
	for(; i<=sz; ++i){
		if(s[sp1+i] != s[sp2+i]) break;
	}
	return (i == sz ? false : true);
	*/
	string s1(s.c_str(), sp1, sz);
	string s2(s.c_str(), sp2, sz);
	return s1 != s2;
}

int main()
{
    int t; cin >> t;
    while(t--){
    	string s; cin >> s;
    	bool canSplit = false;
    	size_t n = s.size();
    	if(n>=4){
    	
    	size_t sp1=0, sp2, sp3, sp4;
    	size_t sz1=1, sz2, sz3, sz4;
    	for(sz1=n-3; sz1>=1; --sz1){
    		if(canSplit) break;	
    		for(sz2=(n-sz1)-2; sz2>=1; --sz2){
    			if(canSplit) break;	
    			sp2 = sp1+sz1;
    			for(sz3=((n-sz1)-sz2)-1; sz3>=1; --sz3){
    				if(canSplit) break;	
    				sp3 = sp2+sz2;
    				for(sz4=((n-sz1)-sz2)-sz3; sz4>=1; --sz4){
    					sp4 = sp3+sz3;
    					
    					//cout << sp1 << " " << sp2 << " " << sp3 << " " << sp4 << endl; 
    					
    		    		canSplit = true;
    		
    					if(sz1 == sz2){
    						canSplit = checkSplit(s, sp1, sp2, sz1);
    					}
    		
    					if(canSplit && sz1 == sz3){
    						canSplit = checkSplit(s, sp1, sp3, sz1);
    					}
    		
    		 			if(canSplit && sz1 == sz4){
    						canSplit = checkSplit(s, sp1, sp4, sz1);
    					}
    		
    		 			if(canSplit && sz2 == sz3){
    						canSplit = checkSplit(s, sp2, sp3, sz2);
    					}
    		
			    		if(canSplit && sz2 == sz4){
			    			canSplit = checkSplit(s, sp2, sp4, sz2);
    					}
    		
    					if(canSplit && sz3 == sz4){
    						canSplit = checkSplit(s, sp3, sp4, sz3);
    					}
    		
    					if(canSplit) break;			
    				}
    			}
    		}
    	}
    	}
    	cout << (canSplit ? "YES" : "NO") << endl;
    }
    return 0;
}
