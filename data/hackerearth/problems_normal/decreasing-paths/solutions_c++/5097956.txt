// decreasingPaths.cpp : Defines the entry point for the console application.
//

#include <iostream>
#include <string.h>
#define MOD 1000000007
using namespace std;

int sx[] = { -1, 0, 1, 0 }, sy[] = { 0, 1, 0, -1 };
bool vi[1002][1002];
int a[1002][1002];
long long int dp[1002][1002];
int n;

long long int dfs(int u, int v, int n)
{
	vi[u][v] = 1;
	if (dp[u][v] == 0LL)
		dp[u][v] = 1LL;

	for (int i = 0; i<4; i++)
	{
		int x = u + sx[i], y = v + sy[i];
		if (x >= 0 && y >= 0 && x<n && y<n && vi[x][y] == 0 && a[x][y]<a[u][v])
		{
			if (dp[x][y] != 0LL)
				dp[u][v] = (dp[u][v] % MOD + dp[x][y] % MOD) % MOD;
			else
				dp[u][v] = (dp[u][v] % MOD + dfs(x, y, n) % MOD) % MOD;
		}
	}
	vi[u][v] = 0;
	return dp[u][v] % MOD;
}

int main()
{
	ios_base::sync_with_stdio(0);
	long long int total = 0LL;
	int i, j;
	cin >> n;
	memset(vi, 0, sizeof(vi));
	//memset(dp, 0, sizeof(dp));

	for (i = 0; i<n; i++)
	for (j = 0; j < n; j++)
	{
		cin >> a[i][j];
		dp[i][j] = 0LL;
	}
	for (i = 0; i<n; i++)
	{
		for (j = 0; j<n; j++)
		{
			if (dp[i][j]==0LL)
				total = (total%MOD + dfs(i, j, n) % MOD) % MOD;
			else
				total = (total%MOD + dp[i][j] % MOD) % MOD;
		}
	}

	cout << total;
	return 0;
}