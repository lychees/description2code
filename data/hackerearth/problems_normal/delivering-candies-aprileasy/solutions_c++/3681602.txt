/*input
5 4 3
5 4 3 2 1
1 2 5
3 2 3
3 5 1
1 5 1
*/

#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define PII pair<ll, ll>
#define f first
#define s second
#define F(i,a,b) for(ll i = (ll)(a); i <= (ll)(b); i++)
#define RF(i,a,b) for(ll i = (ll)(a); i >= (ll)(b); i--)
#define inf LLONG_MAX
#define mod 1000000007
#define MAXN 100005
#define pb(x) push_back(x)

ll n, m, s, u, v, w, sum, pr;
ll arr[MAXN], D[MAXN];

struct comp {
    bool operator() (const PII &a, const PII &b) {
        return a.second > b.second;
    }
};

int main() 
{
	ios_base::sync_with_stdio(false);cin.tie(0);
	cin>>n>>m>>s;
	F(i,1,n)
		cin>>arr[i];
	vector < PII > G[n+1];
	F(i,1,m)
	{
		cin>>u>>v>>w;
		G[u].push_back({v,w});
		G[v].push_back({u,w});
	}
    for(ll i=1; i<=n; i++) 
		D[i] = inf;
	D[s] = 0;
	priority_queue < PII, vector< PII >, comp > Q;
	Q.push({s, 0});
	while(!Q.empty()) 
	{
	    u = Q.top().first;
	    Q.pop();
		ll sz = G[u].size();
		for(ll i=0; i<sz; i++) 
		{
		    v = G[u][i].first;
		    w = G[u][i].second;
		    if(D[u]+w < D[v]) {//if(!F[v] && D[u]+w < D[v]) {
		        D[v] = D[u] + w;
		        Q.push({v, D[v]});
			}
		}
    }
	F(i,1,n)
	{
		if(D[i]==inf)
		{
			D[i]=0;
			arr[i]=0;
		}
		sum+=arr[i];
		pr+=(arr[i]*D[i]);
	}
	F(i,1,n)
	{
		ll ans=0;
		if(arr[i]!=0)
			ans=D[i]*(sum-arr[i])+pr-arr[i]*D[i];
		cout<<ans<<" ";
	}
	return 0;
}