#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli p[20];
lli a[20];
lli dp[1<<13][13][13];
int n;
int maxi=0;
#define infi 100000000000000
int bc(int num)
{
 return __builtin_popcountll(num);
}
lli solve(int mask,int id1 ,int id2)
{
//  cout<<id1<<" "<<id2<<endl;
 if(mask==maxi)return 0;
  if(dp[mask][id1][id2]!=-1)
  {
    return dp[mask][id1][id2];
  }
  else
  {
   lli ret=infi;
   for(int i=1;i<=n;i++)
   {
     if(!(mask & (1<<i)))
       {
       
        if(id1!=0 && id2!=0)//MEANS 2 NUMBERS ARE PICKED AT LEAST 
            {
             int  index= bc(mask);
             lli t1=a[i] ^ a[id2];
             t1= t1 ^ a[id1];
               lli val=(t1)*p[index+1];
              ret=min(ret,val+solve((mask |(1<<i)) ,id2,i));
      }
      else// IF 2 NUMBERS ARE NOT PICKED THAN FIRST FICK 2 NUMBERS 
      {
       ret=min(ret,solve(mask | (1<<i),id2,i));
      }
      }
      
   }
   
      dp[mask][id1][id2]=ret;
      return ret;
  }
}
 
int main()
 {
  int t;
   cin>>t;
   while(t--)
   {
        memset(dp,-1,sizeof dp);
   
        cin>>n;
        for(int i=1;i<=n;i++)
        {
         maxi=maxi | (1<<i);
           cin>>a[i];
   }
    for(int j=1;j<=n;j++)
    {
     cin>>p[j];
    }
     long long int ans=solve(0,0,0);
   cout<<ans<<endl;
   }
 } 
