n, L, D = map(int, raw_input().split())
probs = map(float, raw_input().split())
dists = map(int, raw_input().split())
dists.append(D)
probs.append(1.0)
best_p = [0] * (len(probs))

for i in xrange(n + 1):
    if dists[i] <= L:
        best_p[i] = max(best_p[i], probs[i])
    for j in xrange(i - 1, -1, -1):
        if dists[i] - dists[j] <= L:
            best_p[i] = max(best_p[i], best_p[j] * probs[i])
        else:
            break

print "%.6f" % best_p[-1]
