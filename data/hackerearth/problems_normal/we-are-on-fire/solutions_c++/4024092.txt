#include <bits/stdc++.h>
#include <stdio.h>
#include <set>
#include <algorithm>

using namespace std;

int n,m,q;
int value[1000001];
int v[1001][1001] = {0};
int in[1001][1001];
int parent[1000001];

//int node (int i, int j)
//{
//	return i*(m-1) + (j-1);
//}

int df(int i, int j)
{
	if (i < 1 || i > n || j < 1 || j > m || in[i][j] == 0) return 0;
	else if (in[i][j] == 1 && v[i][j] == 0)
	{
		v[i][j] = 1;
		in[i][j] = 0;
	//	parent[node(i,j)] = par;
		int a1 = df(i+1,j);
		int a2 = df(i-1,j);
		int a3 = df(i,j+1);
		int a4 = df(i,j-1);

		return a1+a2+a3+a4+1;
	}
	else return 0;
}

int main ()
{
	int tn = 0;
	scanf ("%d %d %d",&n,&m,&q);
	for (int i = 1 ; i <= n ; i++)
		for (int j = 1 ; j <= m ; j++)
		{
			scanf ("%d",&in[i][j]);
			if (in[i][j] == 1) tn++;
		}

/*	int counter = 1;
	for (int i = 1 ; i <= n ; i++)
		for (int j = 1 ; j <= m ; j++){
			if (in[i][j] == 1 && v[i][j] == 0){
				value[counter] = df (i,j,counter);
				counter++;
			}*/
	//	}

	while (q--)
	{
		int x,y;
		scanf ("%d %d",&x,&y);
		tn -= df(x,y);
//		value[parent[node(x,y)]] = 0;
		printf ("%d\n",tn);
	}

	return 0;
}
