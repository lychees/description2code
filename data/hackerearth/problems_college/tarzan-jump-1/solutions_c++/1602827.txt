#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int func(vector<int>*v,int n,int m)
{
int dp[n+1],pos[n+1];
fill(dp,dp+n+1,0);
fill(pos,pos+n+1,0);
dp[0]=0;
dp[1]=0;
pos[1]=1;
for(int i=2;i<=n;i++)
{
dp[i]=100000000;
for(int j=1;j<i;j++)
{
if(!binary_search(v[i].begin(),v[i].end(),j))
{
if(pos[j]!=0)
{
dp[i]=min(dp[i],dp[j]+1);
pos[i]=1;
}
}
}
}
return dp[n];
}

int main()
{
int n,m;
cin>>n>>m;
vector<int>v[n+1];
while(m--)
{
int a,b;
cin>>a>>b;
v[a].push_back(b);
v[b].push_back(a);
}
if(n==1)
{
cout<<"0"<<endl;
return 0;
}
for(int i=0;i<n;i++)
sort(v[i].begin(),v[i].end());
int temp=func(v,n,m);
if(temp==100000000)
cout<<"HOHA HOHA"<<endl;
else 
cout<<temp<<endl;
return 0;
}