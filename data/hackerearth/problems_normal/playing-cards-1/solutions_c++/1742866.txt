// Paste me llo the FileEdit configuration dialog
#include <bits/stdc++.h>
using namespace std;

#define ll long long 
#define forall(i,a,b) for(ll i=a;i<b;i++)
#define FOR(i,n) for(ll i=0;i<n;i++)
#define SORTF(x) sort(x.begin(),x.end(),func);
#define SORT(x) sort(x.begin(),x.end())
#define pb(x) push_back(x)
#define SET(v, val) memset(v, val, sizeof(v)) ;
#define RSORT(v) { SORT(v) ; REVERSE(v) ; }
#define ALL(v) v.begin(),v.end()
#define REVERSE(v) { reverse(ALL(v)) ; }
#define UNIQUE(v) unique((v).begin(), (v).end())
#define RUNIQUE(v) { SORT(v) ; (v).resize(UNIQUE(v) - (v).begin()) ; }
#define fill(x,n) memset(x,n,sizeof(x))
#define S(n) scanf("%lld",&n)
ll MOD = 1e9 + 7;
//ll dx[] = {-1,0,1,0}, dy[] = {0,1,0,-1};
//ll dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
//ll gcd(ll a, ll b) {if (a == 0 || b == 0) return maX(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
//ll small_primes[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349};
//ll toll(const string &s) { stringstream ss; ss << s; ll x; ss >> x; return x; }
ll modPow(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll modInverse(ll a){return modPow(a,MOD-2);}
ll nCk(ll n, ll k){if(k<0)return 0;ll numerator = 1;forall(il,0,k)numerator =(numerator*(n-il))%MOD;ll denominator = 1;forall(il,1,k+1)denominator=(denominator*il)%MOD;return (numerator*modInverse(denominator))%MOD;}

/* This function calculates (a^b)%MOD */
long long pow(ll a, ll b, ll MOD)
{
    long long x=1,y=a; 
    while(b > 0)
    {
        if(b%2 == 1)
        {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD; 
        b /= 2;
    }
    return x;
}
 
/*  Modular Multiplicative Inverse
    Using Euler's Theorem
    a^(phi(m)) = 1 (mod m)
    a^(-1) = a^(m-2) (mod m) */
long long InverseEuler(ll n, ll MOD)
{
    return pow(n,MOD-2,MOD);
}
 
long long C(ll n, ll r, ll MOD)
{
    vector<long long> f(n + 1,1);
    for (int i=2; i<=n;i++)
        f[i]= (f[i-1]*i) % MOD;
    return (f[n]*((InverseEuler(f[r], MOD) * InverseEuler(f[n-r], MOD)) % MOD)) % MOD;
}
 

int main() {
	ll t;
	S(t);
	ll mod = 1e9 + 7;
	while(t--) {
		ll n,m;
		S(n);
		S(m);
		if( m% 2 != 0) {
			cout << "0\n";
			continue;
		}
		ll p = 0;
		ll i;
		for(i = 0;i <= n*6;i++) {
			for(ll j = 0;j <= n*6;j++) {
				if(i + j == m/ 2) {
					ll co = 1;
				//	cout << i << " " << j << "a";
					co = C(n*6, i, MOD)*C(n*18, i, MOD);
					co %= MOD;
				//	cout << p << " ";
					co *= C(n*6, j,MOD);
					co %= MOD;
					co *= C(n*18, j, MOD);
					co %= MOD;
				//	cout << p << "\n";
					p = p + co;
					p = p % MOD;
				}
			}
		} 
		cout << p << "\n";
	}
}
