#include <bits/stdc++.h>
using namespace std;
int edge[101][101],s,d,p,n,m,path[102],finp[101],l,lp,ans;
char v[1001];

void dfs(int x,int p) {
int i;
path[l++] = x;
if (x == d){
    if (p > ans){
        ans = p;
        for (int i = 0;i <l;i++){
            finp[i] = path[i];
        }
        lp = l;
    }
    l--;
    return;
}
v[x] = 1;
for (int i=1;i<=n;i++){
    if (edge[x][i]>0 && v[i]==0){
        v[i] =1;
        if (edge[x][i] < p){
            dfs(i,edge[x][i]);
        }else
            dfs(i,p);

        v[i] = 0;
    }
}
v[x] = 0;
l--;
}
int main () {

cin >> n >> m;

for (int i = 1;i <= n;i++){
    for (int j = 1;j <= n;j++){
        edge[i][j] = -1;
    }
    v[i] = 0;
}

for (int i=1;i <=m;i++){
        int x,y,z;
    cin >> x >> y >> z;
    edge[x][y] = edge[y][x] = z-1;
}

cin >> s >> d >> p;

ans = -1;
l = 0;
dfs(s,1000000);
	for(int i=0;i<lp;i++)
cout << finp[i] << " ";
printf("\n%d\n",(p-1)/ans+1);
return 0;
}
