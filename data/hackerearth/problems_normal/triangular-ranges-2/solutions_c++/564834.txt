#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

#define MAX 1000000000000LL

int binarySearch(int l,int r, long long element, long long lowerElement){
	if(l==r)
		return l;
		
}
int main(){
	vector<long long> triangularNumbers;
	for(long long i =1;(i*i+i)/2<MAX;i++)
		triangularNumbers.push_back((i*i+i)/2);	
	int q;
	cin>>q;
	while(q--){
		long long l,r;
		cin>>l>>r;
		
		long long sum = 0;
		for(int i=0;i<triangularNumbers.size();i++){
			long long lower = l-triangularNumbers[i];
			long long upper = r-triangularNumbers[i];
			
			if(triangularNumbers[i]>r) break;
			vector<long long>::iterator lowerBound = lower_bound(triangularNumbers.begin(),triangularNumbers.end(),lower);
			vector<long long>::iterator upperBound = lower_bound(triangularNumbers.begin(),triangularNumbers.end(),upper);
			
			if(*upperBound>upper)
				upperBound--;
			long long ans = upperBound-lowerBound+1;
			sum+=ans;
			if(triangularNumbers[i]>=*lowerBound&&triangularNumbers[i]<=*upperBound)
				sum++;
		}
		cout<<sum/2<<endl;
	}
}