#include <iostream>
#include<stdio.h>
#define mod 1000000007
using namespace std;

long long int n,m;
long long int a[1012][1012],done[1012][1012];

bool isValid(long long int i,long long int j)
{
    if(i<1 || j<1 || i>n || j>m )
        return false;
    return true;

}

long long int dfs(long long int i,long long int j)
{
	
	//if(done[i][j]==1)
	//  return 0;
	
    long long int k1=0,k2=0,k3=0,k4=0,k5=0,k6=0,k7=0,k8=0;
    done[i][j]=1;
    if(isValid(i-2,j+1) &&  done[i-2][j+1]==0 && a[i-2][j+1]==1 )
    {
        k1=dfs(i-2,j+1);
    }
    if(isValid(i-2,j-1) &&  done[i-2][j-1]==0 && a[i-2][j-1]==1 )
    {
        k2=dfs(i-2,j-1);
    }
    if(isValid(i-1,j+2) &&  done[i-1][j+2]==0 && a[i-1][j+2]==1 )
    {
        k3=dfs(i-1,j+2);
    }
    if(isValid(i-1,j-2) &&  done[i-1][j-2]==0 && a[i-1][j-2]==1 )
    {
        k4=dfs(i-1,j-2);
    }
    if(isValid(i+1,j+2) &&  done[i+1][j+2]==0  && a[i+1][j+2]==1 )
    {
        k5=dfs(i+1,j+2);
    }
    if(isValid(i+1,j-2) &&  done[i+1][j-2]==0 && a[i+1][j-2]==1 )
    {
        k6=dfs(i+1,j-2);
    }
    if(isValid(i+2,j+1) &&  done[i+2][j+1]==0  && a[i+2][j+1]==1 )
    {
        k7=dfs(i+2,j+1);
    }
    if(isValid(i+2,j-1) &&  done[i+2][j-1]==0 && a[i+2][j-1]==1 )
    {
        k8=dfs(i+2,j-1);
    }

    return 1+k1+k2+k3+k4+k5+k6+k7+k8;


}

int main()
{
	long long int t,i,j,q;
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld%lld%lld",&n,&m,&q);
		for(i=1;i<=n;i++)
		  for(j=1;j<=m;j++)
		    {
		        //no horse
		        a[i][j]=0;

		        done[i][j]=0;
		    }


		for(i=1;i<=q;i++)
		{
		    long long int x,y;
			scanf("%lld%lld",&x,&y);
			//horse at x,y index
			a[x][y]=1;
		}

		long long int ans=1,k,f;

		for(i=1;i<=n;i++)
        {
            for(j=1;j<=m;j++)
            {
                // no horse or horse considered as a part of connected component
                if(a[i][j]==0 || done[i][j]==1)
                     continue;
                else
                {
                   //  cout<<"i,j - "<<i<<" "<<j<<endl;
                    k=dfs(i,j);
                   // cout<<"i,j - "<<i<<" "<<j<<" , k= "<<k<<endl;
                    //ans=ans*k!
                    for(long long int ind=1;ind<=k;ind++)
                    {
                        ans=(ans*ind)%mod;
                    }
                    //cout<<"yes"<<endl;



                }




            }

        }
        printf("%lld\n",ans);

	}





    return 0;
}
