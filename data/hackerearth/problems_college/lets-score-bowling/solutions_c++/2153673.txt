// 2015-07-18
#include <bits/stdc++.h>
#include <unordered_map>
#include <array>
#include <forward_list>
#include <unordered_set>
using namespace std;


#ifndef LOCAL
//#define LOCAL
#endif

#define SET_BIT(mask, index) (mask |= (1 << index))
#define TEST_BIT(mask, index) (mask & (1 << index))
#define CLEAR_BIT(mask, index) (mask &= ~(1 << index))
#define TOGGLE_BIT(mask, index) (mask ^= (1 << index))
const int INF = 1e9;
const double EPS = 1.0e-11;
const int NO_VALUE = -1;
using ii = pair < int, int > ;
using ll = long long;
struct sc { template<class T> inline static T next() { T n; cin >> n; return n; } };



int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w+", stdout);
#endif

	int tc = sc::next<int>();
	for (int cs = 0; cs < tc; cs++) {
		int bo[3];
		int score = 0;
		bool consider = true;
		bool nine = false;

		for (int i = 0; i < 3; i++) {
			bo[i] = sc::next<int>();
			if (bo[i] == 9 && consider) {
				consider = false;
				nine = true;
				score += 10;
				if (i == 1) {
					score -= 3;
				}
				else if (i == 2) {
					score -= 6;
				}
			}
			if (bo[i] > 6 && bo[i] < 9 && consider) {
				score += 2;
			}
			if (bo[i] > 0 && bo[i] < 7 && consider) {
				score++;
			}
		}

		if (!nine) {
			score = 0;
		}

		cout << score << "\n";

	}


	return 0;
}
