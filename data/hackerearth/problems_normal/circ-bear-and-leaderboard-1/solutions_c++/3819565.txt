#include<bits/stdc++.h>
#define mod 1000000007
#include<bits/stdc++.h>
#define mod 1000000007
#define pp pair<ll,ll>
#define mp make_pair
#define ll long long
#define ff first
#define ss second
#define big 100000000000000000
using namespace std;

ll pts[500010]={0},bit1[1000010]={0},bit2[1000010]={0},n,q,a,b,temp1,temp2,temp3,temp4,sum,qry[500010][2],temp[500010],comp[500010],k=0;
ll *ptr1,*ptr2;

ll query(ll in,ll bit[]){
	if(in < 1)
		return 0;
	ll sum = 0;
	while(in > 0){
		sum += bit[in];
		in = in - (in & (-in));
	}
	return sum;
}
void update(ll in,ll x,ll bit[]){
	
	if(in  < 1)
		return;
	while(in <= 500000){
		bit[in] += x;
		in = in + (in & (-in));
	}
}
int main(){
//	freopen("input.txt","r",stdin);
	ios::sync_with_stdio(0);
	
	cin>>n>>q;
	
	sum = 0;
	for(ll i=1;i<=q;i++){
		cin>>qry[i][0]>>qry[i][1];
		a = qry[i][0];
		b = qry[i][1];
		pts[a] += b;
		temp[i] = pts[a];
	}
	memset(pts,0,sizeof(pts));
	sort(temp+1,temp+q+1);
	
	comp[1] = temp[1];
	k = 1;
	for(ll i=2;i<=q;i++){
		if(temp[i] != temp[i-1])
			comp[++k] = temp[i];
	}
/*	for(ll i=1;i<=q;i++)
		cout<<comp[i]<<" ";
	cout<<"\n";
*/	for(ll i=1;i<=q;i++){
		a = qry[i][0];
		b = qry[i][1];
		temp1 = lower_bound(comp+1,comp+k+1,pts[a])-comp;
	//	cout<<pts[a]<<"-"<<temp1<<" ";
		temp3 = query(500000,bit1)-query(temp1,bit1);
		update(temp1,-1,bit1);
		update(temp1,(-1)*pts[a],bit2);
		sum = sum-query(temp1-1,bit2)-(temp3+1)*pts[a];
		
		pts[a] += b;
		temp1 = lower_bound(comp+1,comp+k+1,pts[a])-comp;
	//	cout<<pts[a]<<"-"<<temp1<<"\n";
		temp3 = query(500000,bit1)-query(temp1,bit1);
		sum = sum+query(temp1-1,bit2)+(temp3+1)*pts[a];
		update(temp1,pts[a],bit2);
		update(temp1,1,bit1);
		cout<<sum<<"\n";
	}
	return 0;
}
