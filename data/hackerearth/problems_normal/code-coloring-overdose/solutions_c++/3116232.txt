#include <bits/stdc++.h>
#define lli long long
#define M 1000000007

using namespace std;

int n,m,k;
int A[500005];
lli poww[500005];
vector <int> v;
bool vis[500005][11];
lli dp[500005][11];

void pre()
{
	poww[0] = 1;
	for ( int i = 1; i <= 500001; i++ ) {
		poww[i] = poww[i-1] + poww[i-1];
		if ( poww[i] >= M ) poww[i] -= M;
	}
	return;
}

lli f(int idx, int cnt)
{
	if ( idx == n ) return (cnt <= m);
	if ( vis[idx][cnt] ) return dp[idx][cnt];
	vis[idx][cnt] = true;
	lli ans = f(idx+1, cnt);
	if ( cnt + 1 <= m ) {
		lli val = poww[v[idx]] - 1;
		if ( val < 0 ) val += M;
		val = (val*f(idx + 1, cnt + 1))%M;
		ans += val;
		if ( ans >= M ) ans -= M;
	}
	dp[idx][cnt] = ans;
	return ans;
}

int main()
{
	int x;
	pre();
	cin >> n >> k >> m;
	assert(m >= 1 && m <= 10);
	assert(n >= 1 && n <= 500000);
	for ( int i = 0; i < n; i++ ) cin >> A[i];
	sort(A, A+n);
	int idx = 0;
	while ( idx < n ) {
		int p = A[idx];
		int cnt = 0;
		while ( idx < n && p == A[idx] ) {
			idx++;
			cnt++;
		}
		v.push_back(cnt);
	}
	
	n = (int)v.size();
	
	int ans = f(0,0);
	cout << ans << endl;
	
	return 0;
}