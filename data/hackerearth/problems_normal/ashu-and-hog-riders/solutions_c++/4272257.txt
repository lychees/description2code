#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define X first
#define Y second

using namespace std;

int dx[4] = {-1,0,1,0};
int dy[4] = {0,1,0,-1};
int a[1001][1001];
int n;
bool isvalid(int x,int y) {
	if (x >= 0 && x < n && y >= 0 && y < n && a[x][y] == 1) {
		return true;
	}
	return false;
}

int main()
{
	cin >> n;
	vector<pair<int,int> > v;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> a[i][j];
			if (a[i][j] == 1) {
				v.pb(mp(i,j));
			}
		}
	}
	
	bool vis[1001][1001];
	memset(vis,false,sizeof(vis));
	int mx = 0,lx,ly;
	for (int j = 0; j < v.size(); j++) {
		pair<int,int> t = v[j];
		if (vis[t.X][t.Y]) {
			continue;
		}
		queue< pair<int,int> > q;
		q.push(mp(t.X,t.Y));
		int cnt = 0;
		while (!q.empty()) {
			pair<int,int> tt = q.front();
			q.pop();
			vis[tt.X][tt.Y] = true;
			cnt += 1;
			for (int i = 0; i < 4; i++) {
				int xx = tt.X + dx[i];
				int yy = tt.Y + dy[i];
				if (isvalid(xx,yy) && !vis[xx][yy]) {
					q.push(mp(xx,yy));
					vis[xx][yy] = true;
				}
			}
		}
	//	mx = max(mx,cnt);
		if (cnt > mx) {
			mx = cnt;
			lx = t.X;
			ly = t.Y;
		}
	}
	cout << mx << endl;
	return 0;
}
