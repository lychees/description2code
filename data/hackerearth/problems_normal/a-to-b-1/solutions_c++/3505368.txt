#include <iostream>
#define MOD 1000000007
#define ll long long
using namespace std;

void extended_euclid(ll x,ll y,ll *c,ll *a,ll *b){
  ll a0,a1,a2,b0,b1,b2,r0,r1,r2,q;
  r0=x; r1=y; a0=1; a1=0; b0=0; b1=1;
  while(r1>0){
    q=r0/r1; r2=r0%r1; a2=a0-q*a1; b2=b0-q*b1;
    r0=r1; r1=r2; a0=a1; a1=a2; b0=b1; b1=b2;
  }
  *c=r0; *a=a0; *b=b0;
}

ll get_inv(ll n, ll p){
  ll a,b,c;
  extended_euclid(n,p,&c,&a,&b);
  if(a<p) a+=p;
  return a%p;
}

int main()
{
    int N;
    cin>>N;
    long long arr[100001];
    int cnt=0;
    long long prod=1;
    for(int i=0;i<N;i++)
    {
    	cin>>arr[i];
    	if(arr[i]==0)
    		cnt++;
    	else
    	prod=(prod*arr[i])%MOD;
    }
    int Q;
    cin>>Q;
    while(Q--)
    {
    	int a,b;
    	long long c;
    	cin>>a;
    	if(a==0)
    	{
    		cin>>b>>c;
    		if(arr[b-1]==0 && c!=0)
    		{
    			cnt--;
    			prod=(prod*c)%MOD;
    		}
    		else if(arr[b-1]!=0 && c==0)
    		{
    			cnt++;
    			prod=(prod*get_inv(arr[b-1],MOD))%MOD;
    		}
    		else if(arr[b-1]==0 && c==0)
    		{}
    		else
    		{
    			prod=(prod*get_inv(arr[b-1],MOD))%MOD;
    			
    			prod=(prod*c)%MOD;
    		}
    		arr[b-1]=c;
    	}
    	else
    	{
    		cin>>b;
    		if(cnt>1)
    		 cout<<"0\n";
    		else if(cnt==1)
    		{
    			if(arr[b-1]==0)
    			{
    				cout<<prod%MOD<<"\n";
    			}
    			else
    				cout<<"0\n";
    		}
    		else
    		cout<<(prod*get_inv(arr[b-1],MOD))%MOD<<"\n";
    	}
    }
    return 0;
}
