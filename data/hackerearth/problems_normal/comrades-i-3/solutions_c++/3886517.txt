#include<bits/stdc++.h>
using namespace std;
vector<int>v[100001];
int heightof[100001];
int dfsin[100001],dfsout[100001];
int dfsnumber;
void dfs(int at,int height)
{
	vector<int>::iterator it;
	heightof[at]=height;
	dfsin[at]=dfsnumber;
	dfsnumber++;
	it=v[at].begin();
	while(it!=v[at].end())
	{
		dfs((*it),height+1);
		it++;
	}
	dfsout[at]=dfsnumber;
	dfsnumber++;
	return;
	
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,root;
		scanf("%d",&n);
		for(int i=1;i<=n;i++)
		{
			v[i].clear();
			dfsin[i]=0;
			dfsout[i]=0;
	    }
	    for(int i=1;i<=n;i++){
		int x;	
		scanf("%d",&x);
		if(x==0)
		root=i;
		else
		v[x].push_back(i);	
		}
		dfsnumber=0;
		dfs(root,0);
		int q;
		scanf("%d",&q);
		for(int j=0;j<q;j++)
		{
			
			int x,y;
			scanf("%d%d",&x,&y);
			if(dfsin[y]<dfsin[x]&&dfsout[x]<dfsout[y])
            printf("%d\n",heightof[x]-heightof[y]-1);
            else
			printf("-1\n");
	    }
	}
	return 0;
}
