#include <iostream>
using namespace std;
int a[100001],tree[300001];
int _min(int x,int y)
{
	return x<y?x:y;
}
void build(int in, int st, int end)
{
	if(st>end)
	return ;
	if(st==end)
	{tree[in]=a[st];
	return ;
	}
	int mid=(st+end)>>1;
	build(in<<1,st,mid);
	build((in<<1)+1,mid+1,end);
	tree[in]=_min(tree[in<<1],tree[(in<<1)+1]);
}
int query(int in ,int st, int end,int l,int r)
{
	if(st>end|| l>end || r<st)
	return 4;
	if(l<=st && end<=r)
	return tree[in];
	int mid=(st+end)>>1;
	int x=query(in<<1,st,mid,l,r);
	int y=query((in<<1)+1,mid+1,end,l,r);
	return _min(x,y);
	
}
int main()
{
    //cout << "Hello World!" << endl;
    int n;
    int q,i;
    cin>>n>>q;
    for(i=1;i<=n;i++)
    cin>>a[i];
    build(1,1,n);
    while(q--)
    {
    	int l,r;
    	cin>>l>>r;
    	l++;r++;
    	cout<<query(1,1,n,l,r)<<'\n';
    //cout<<"1\n";
    }
    
    
    return 0;
}
