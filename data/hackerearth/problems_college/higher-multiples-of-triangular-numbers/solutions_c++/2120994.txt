#include<bits/stdc++.h>
#define mod 1000000007
#define len(a) strlen(a)
#define ll long long
#define nl printf("\n")

#define ipl(n) scanf("%lld",&n)
#define ipd(n) scanf("%d",&n)

#define opl(n) printf("%lld\n",n)
#define opd(n) printf("%d\n",n)


#define db printf("debug\n")
#define yes printf("YES\n")
#define no printf("NO\n")
#define pb(a) push_back(a)
#define po(a) pop_back()
#define mp(a,b) make_pair(a,b)
#define set(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define max 100005
using namespace std;
ll numDivisors(ll num)
{
        ll divisors = 1, exp;

        //handle 2 and 3 as special case
        exp = 0;
        while (num % 2 == 0)
        {
            num /= 2;
            exp++;
        }
        divisors *= (exp+1);

        exp = 0;
        while (num % 3 == 0)
        {
            num /= 3;
            exp++;
        }
        divisors *= (exp+1);


        ll i = 5;
        ll root = floor(sqrt(num));
        while (i <= root)
         {
                exp = 0;
                while (num % i == 0)
                 {
                    num /= i;
                    exp++;
                }
                divisors *= (exp+1);

                if (i % 6 == 1)
                i += 4;
                else
                i += 2;
                root = floor(sqrt(num));
        }


        if (num != 1)
            divisors *= 2;

        return divisors;
}

int main()
{
    int t;
    ipd(t);
    while(t--)
    {
        ll n = 0,d;
        ll divisors = 0;
        ipl(d);
        while (divisors <= d)
            {

                n++;


                if (n % 2 == 0)
                divisors = numDivisors(n/2) * numDivisors(n+1);
                else
                divisors = numDivisors(n) * numDivisors((n+1)/2);

        }

            printf("%lld\n", n*(n+1)/2);
    }
}
