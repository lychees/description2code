#include<iostream>

using namespace std;
double p[1005][1005],e[1005][1005];

double expectcountdp(int n,int m)
{
    int i,j,k,r;


    for(i = 0;i<=n;i++)
        e[i][0] = 0;
    for(j = 0;j<=m;j++)
        e[0][j] = 0;
    for(i = 1;i<=n;i++)
    {
        for(j = 1;j<=m;j++)
        {
            k = n - i;
            r = m -j;
            e[i][j] = 1 + e[i-1][j]*(1 - p[k][r]) + e[i][j-1]*p[k][r];
        }
    }
    return (e[n][m]);

return 1;
}
double expectcount(int nrem, int mrem , int n, int m, double prod , int cnt)
{
    if((nrem == 0) || (mrem == 0))
        return (cnt*prod) ;
    cnt++;
    int j = m - mrem;
    int i = n - nrem;
    double prod1 = prod * p[i][j];
    double val1 = expectcount(nrem,mrem-1,n,m,prod1,cnt);
    double prod2 = prod*(1 - p[i][j]);
    double val2 = expectcount(nrem - 1,mrem,n,m,prod2,cnt);
    return (val1 + val2);
}
int main()
{
    int n,m,i,j;
    int t;cin>>t;
    double ans;
    while(t--)
    {
        cin>>n>>m;
        for(i = 0;i<n;i++)
        {
            for(j = 0;j<m;j++)
            {
                scanf("%lf",&p[i][j]);
            }
        }
       cout.precision(6);
       // ans = expectcount(n,m,n,m,1,0);
       ans = expectcountdp(n,m);
        cout.setf( std::ios::fixed, std:: ios::floatfield );
        cout<<"\n"<<ans;
    }

    return 0;
}
