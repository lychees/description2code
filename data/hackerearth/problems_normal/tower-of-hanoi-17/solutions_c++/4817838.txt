#include <iostream>
#include<algorithm>
using namespace std;
struct hanoi{
	long long int r;
	long long int h;
};
int compare(const void* a,const void* b)
{
	hanoi* p=(hanoi*) a;
	hanoi* q=(hanoi*) b;
	long long int area1=(p->r)*(p->h);
	long long int area2=(q->r)*(q->h);
	if(area2>area1)
	 return 1;
	 return -1;
}
int main()
{
  	int t;
    cin>>t;
    while(t--)
    {
    	int n;
    	cin>>n;
    	hanoi arr[n];
    	for(int i=0;i<n;i++)
    	{
    		long long int a,b;
    		cin>>a>>b;
    		arr[i].r=a;
    		arr[i].h=b;
    	}
    	qsort(arr,n,sizeof(hanoi),compare);
    	long long int lis[n];
    	long long int res[n];
    	for(int i=0;i<n;i++)
    	{
    		lis[i]=1;
    		res[i]=arr[i].h;
    		//cout<<arr[i].r<<"  "<<arr[i].h<<endl;
    	}
    	for(int i=1;i<n;i++)
    	{
    		for(int j=0;j<i;j++)
    		{
    			if(arr[i].h<arr[j].h&&arr[i].r<arr[j].r)
    			{
    				lis[i]=max(lis[i],lis[j]+1);
    				res[i]=max(res[i],res[j]+arr[i].h);
    			}
    		}
    	}
    	for(int i=0;i<n;i++)
    	{
    		//cout<<res[i]<<" "<<lis[i]<<endl;
    		res[0]=max(res[0],res[i]);
    	}
    	cout<<res[0]<<endl;
    }
    return 0;
}
