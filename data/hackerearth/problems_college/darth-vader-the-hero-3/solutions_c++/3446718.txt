#include <bits/stdc++.h>
 
#define LLI long long int
#define LD long double
#define PB push_back
#define MP make_pair
#define FORi(i, a, b) for(int i = a; i < b ; ++i)
#define FORd(i, a, b) for(int i = a; i > b ; --i)
 
using namespace std;
 
const int mod = 1000000000;

int n,m;
bool gr[1000][1000],vsd[1000][1000];

int visit(int x,int y){
	int cnt = 1;
	queue<pair<int,int> > q;
	q.push(MP(x,y));
	vsd[x][y] = 1;
	while (q.size()){
		x = q.front().first;
		y = q.front().second;
		if (x && gr[x-1][y] && !vsd[x-1][y]){
			cnt++;
			vsd[x-1][y] = 1;
			q.push(MP(x-1,y));
		}
		if (y && gr[x][y-1] && !vsd[x][y-1]){
			cnt++;
			vsd[x][y-1] = 1;
			q.push(MP(x,y-1));
		}
		if (x+1<n && gr[x+1][y] && !vsd[x+1][y]){
			cnt++;
			vsd[x+1][y] = 1;
			q.push(MP(x+1,y));
		}
		if (y+1<m && gr[x][y+1] && !vsd[x][y+1]){
			cnt++;
			vsd[x][y+1] = 1;
			q.push(MP(x,y+1));
		}
		if (x && y && gr[x-1][y-1] && !vsd[x-1][y-1]){
			cnt++;
			vsd[x-1][y-1] = 1;
			q.push(MP(x-1,y-1));
		}
		if (y && x+1<n && gr[x+1][y-1] && !vsd[x+1][y-1]){
			cnt++;
			vsd[x+1][y-1] = 1;
			q.push(MP(x+1,y-1));
		}
		if (x && y+1<m && gr[x-1][y+1] && !vsd[x-1][y+1]){
			cnt++;
			vsd[x-1][y+1] = 1;
			q.push(MP(x-1,y+1));
		}
		if (y+1<m && x+1<n && gr[x+1][y+1] && !vsd[x+1][y+1]){
			cnt++;
			vsd[x+1][y+1] = 1;
			q.push(MP(x+1,y+1));
		}
		q.pop();
	}
	return cnt;
}
 
int main(){
	int t,cnt,ans;
	cin >> t;
	while(t--){
		cin >> n >> m;
		FORi(i,0,n)
			FORi(j,0,m){
				cin >> gr[i][j];
				vsd[i][j] = 0;
			}
		cnt = ans = 0;
		FORi(i,0,n)
			FORi(j,0,m)
				if (gr[i][j] && !vsd[i][j]){
					cnt++;
					ans = max(ans,visit(i,j));
				}
		cout << cnt << " " << ans << endl;
	}
    return 0;
}