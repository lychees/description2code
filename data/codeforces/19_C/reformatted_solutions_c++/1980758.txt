#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <valarray>
#include <vector>
using namespace std;

#define REP(i, n) for (int i = 0; i < (int)n; ++i)
#define FOR(i, c)                                                              \
  for (__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define ALL(c) (c).begin(), (c).end()
typedef long long ll;
typedef pair<int, int> pii;
const int INF = 1 << 29;
const double PI = acos(-1);
const double EPS = 1e-8;

int a[100000];
vector<int> v[100000];
int main() {
  int n;
  scanf("%d", &n);
  REP(i, n) scanf("%d", a + i);
  map<int, vector<int>> mp;
  REP(i, n) {
    FOR(it, mp[a[i]]) { v[i - *it].push_back(*it); }
    mp[a[i]].push_back(i);
  }
  REP(i, n) sort(ALL(v[i]));
  int left = 0;
  for (int i = 1; i < n; ++i) {
    REP(j, v[i].size() - i + 1) {
      if (v[i][j + i - 1] == v[i][j] + i - 1) {
        if (v[i][j] >= left) {
          left = v[i][j] + i;
        }
      }
    }
  }
  cout << n - left << endl;
  for (int i = left; i < n; ++i) {
    if (i != left)
      printf(" ");
    printf("%d", a[i]);
  }
}
