#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<vector>
#include<string>
#include<cstring>
#include<unordered_map>
#include<cassert>
#include<cmath>

//code by cl3488

#define dri(X) int (X); scanf("%d", &X)
#define drii(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define driii(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define pb push_back
#define mp make_pair
#define rep(i, s, t) for ( int i=(s) ; i <(t) ; i++)
#define fill(x, v) memset (x, v, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define why(d) cerr << (d) << "!\n"
#define whisp(X, Y) cerr << (X) << " " << (Y) << "#\n"
#define exclam cerr << "!!\n"
typedef long long ll;
using namespace std;
typedef pair<int, int> pii;
const ll inf = (ll)1e9 + 70;
const ll mod = 1e9 + 7;
const int maxn = 1005;

int a[maxn][maxn];

vector<pii> here[105];

ll dp[maxn][maxn];
ll change[maxn][maxn];

int dir[4][2] = {{1,0},{-1,0},{0,1},{0,-1}};

int main(){
	//if (fopen("input.txt", "r")) freopen("input.txt", "r", stdin);
	dri(n);
	rep(i,0,n){
		rep(j,0,n){
			dri(t); a[i][j] = t; here[t].pb(pii(i,j));
		}
	}
	ll ans = 0;
	for(int val = 100; val >= 0; val--){
		if(here[val].empty()) continue;
		for(pii x : here[val]){
			change[x.first][x.second] = 1;
			rep(d,0,4){
				int nx = x.first + dir[d][0]; if(nx < 0 || nx >= n) continue;
				int ny = x.second + dir[d][1]; if(ny < 0 || ny >= n) continue;
				change[x.first][x.second] += dp[nx][ny]; change[x.first][x.second] %= mod;
			}	
		}
		for(pii x : here[val]){
			dp[x.first][x.second] = change[x.first][x.second];
			ans = (ans + change[x.first][x.second]) % mod;
		}
	}
	cout << (ans + mod) % mod << "\n";
	return 0;
}