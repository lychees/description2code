#include<algorithm>
#include<vector>
#include<cstring>
#include<cstdio>
#include<iostream>
#include<string.h>
#include<math.h>
#include<iomanip>

using namespace::std;

int multiply(int x, int res[], int res_size)
{
    int carry = 0;  // Initialize carry
 
    // One by one multiply n with individual digits of res[]
    for (int i=0; i<res_size; i++)
    {
        int prod = res[i] * x + carry;
        res[i] = prod % 10;  // Store last digit of 'prod' in res[]
        carry  = prod/10;    // Put rest in carry
    }
 
    // Put carry in res and increase result size
    while (carry)
    {
        res[res_size] = carry%10;
        carry = carry/10;
        res_size++;
    }
    return res_size;
}

void factorial(int n)
{
    int res[10000];
 
    // Initialize result
    res[0] = 1;
    int res_size = 1;
 
    // Apply simple factorial formula n! = 1 * 2 * 3 * 4...*n
    for (int x=2; x<=n; x++)
        res_size = multiply(x, res, res_size);
 
    //cout << "Factorial of given number is \n";
    for (int i=res_size-1; i>=0; i--)
        cout << res[i];
}
 
// This function multiplies x with the number represented by res[].
// res_size is size of res[] or number of digits in the number represented
// by res[]. This function uses simple school mathematics for multiplication.
// This function may value of res_size and returns the new value of res_size


int main()
{

	int i,j,k;

	bool truth[101];

	for(i=1;i<=100;i++)
	{
		truth[i]=true;
	}

	int n;
	cin>>n;

	for(i=2;i*i<=n;i++)
	{
		if(truth[i])
		{
			for(j=i*i;j<=n;j=j+i)
				truth[j]=false;
		}
	}

	for(i=2;i<=n;i++)
	{
		if(truth[i])
		{factorial(i);
		cout<<"\n";}
	}
}