#include <bits/stdc++.h>
using namespace std;
int a[100009]={0};
int tree[400009]={0};
void build(int idx,int l,int r)
{
	if(l==r)
	{
		tree[idx]=a[l];return;
	}
	int mid=(l+r)/2;
	build(2*idx,l,mid);
	build(2*idx+1,mid+1,r);
	tree[idx]=max(tree[2*idx],tree[2*idx+1]);
}
int query(int idx,int lup,int rup,int l,int r)
{
	if(lup<=l && r<=rup)
		return tree[idx];
	int mid=(l+r)/2,p=0,q=0;
	if(l<=rup && mid>=lup)p=query(2*idx,lup,rup,l,mid);
	if(mid+1<=rup && r>=lup)q=query(2*idx+1,lup,rup,mid+1,r);
	return max(p,q);
}
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)cin>>a[i];
	build(1,1,n);
	cout<<1<<" ";
	for(int i=2;i<=n-1;i++)
	{
		int p=query(1,1,i-1,1,n);
		int q=query(1,i+1,n,1,n);
		if(p<a[i] || q<a[i])cout<<i<<" ";
	}
	cout<<n<<endl;
    return 0;
}
