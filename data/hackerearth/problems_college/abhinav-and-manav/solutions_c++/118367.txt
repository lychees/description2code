/*
Abhinav and Manav both being one of the best coders of SVNIT went onto participate in ACM ICPC Regional Contest. Apparently Manav?s team the 3Horsemen stood ahead of Abhinav?s team akatsuki11 in the contest though both solved the same number of questions .Manav is Abhinav?s greatest rival and Abhinav being adamant about him being The Best gives Manav a challenge described below:

For each positive number N consider the number mirror(N) which is obtained from N by replacing every digit d in the decimal notation(base 10) of N with the digit (9-d). We can now say that mirror(N) is the mirror image of N. For example, reflection of 325 equals 674. Note that leading zeros (if any) should be omitted. So the mirror image of 9 equals 0, so mirror(91) equals 8. Let us define weight as the product of the number and its mirror image i.e. N * mirror(N). Thus, the weight of the number 20 is equal to 20 ?79 = 1580.

Manav is very weak in mathematics and also he doesn?t want to lose this challenge. So now it?s your job to save Manav from Abhinav?s arrogance. Your task is to find the maximum weight of the numbers in the given range [L,R] (including boundaries).

Input:

First line of input contains number of test cases T. Next T lines contain two positive numbers L and R.

Output:

Find the maximum weight of the numbers in the given range [L, R] for each test case.

Constraints:

1 <= T <= 24

1 <= L <= R <= 10^9

Sample Input (Plaintext Link)
3
3 7
1 1
8 10
Sample Output (Plaintext Link)
20
8
890
Explanation
For test case 3 

8 * mirror(8) = 8 * 1 = 1

9 * mirror(9) = 9 * 0 = 0

10 * mirror(10) = 10 * 89 = 890

So max(1,0,890) = 890
Time Limit2 sec(s)
Memory Limit256 MB
Source Limit1024 KB
*/

#include <algorithm>
#include <functional>
#include <numeric>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <unistd.h>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cassert>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <bitset>
#include <sstream>

using namespace std;

long long t,l,r,maxm,i,h,h9;
unsigned long long w;

inline int len(long long x)
{
	int cn=0;
	while(x)
	{
		cn++;
		x/=10;
	}
	return cn;
}

long long ABS(long long x)
{
	return x<0?-x:x;
}

void Solve()
{
	cin >> t;
	while(t--)
	{
		cin >> l >> r;
		maxm=max(len(l),len(r));
		h9=(long long)pow(10,maxm)-1;
		h=h9/2;
		if(r<=h)
			w=r*(h9-r);
		else if(l>=h)
			w=l*(h9-l);
		else if((l<=h)&&(r>=h))
		{
			w=h*(h9-h);
		}
		cout << w << endl;
	}
}

int main(int argc,char *argv[])
{
	Solve();
    return 0;
}
