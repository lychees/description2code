#include <iostream>
using namespace std;

/*
string mpl(string num, char n){  //compute num*n
        string res="";
        int carry=0;    
        if (n=='0'){return "0";}
        for (int i=num.size()-1;i>=0;i--){
            int m=(num[i]-'0')*(n-'0')+carry;
            carry = m/10;
            m=m%10;
            res = char(m+'0')+res;
        }
        if (carry!=0){res = char(carry+'0')+res;}
        return res;
    }

void add(string &res, string m,int idx){
        if (res==""){ res = m;}
        else{
            m = m+string(idx,'0'); // this is important (you can also change value i instead)
            int carry=0;
            int i=res.size()-1;
            int j=m.size()-1;
            while (i>=0){
                int k =(res[i]-'0')+(m[j]-'0')+carry;
                carry=k/10;
                k=k%10;
                res[i]=char(k+'0');
                i--; j--;
            }
            while (j>=0){ // deal with the rest of string
                if (carry>0){
                    int kk = (m[j]-'0')+carry;
                    carry = kk/10;
                    kk=kk%10;
                    res= char(kk+'0')+res;
                }else{
                    res = m[j]+res;
                }
                j--;
            }
             
            if (carry>0){ // be careful with highest digit
                res = char(carry+'0')+res;
            }
        }
    }
    
int makeEqualLength(string &str1, string &str2)
{
    int len1 = str1.size();
    int len2 = str2.size();
    if (len1 < len2)
    {
        for (int i = 0 ; i < len2 - len1 ; i++)
            str1 = '0' + str1;
        return len2;
    }
    else if (len1 > len2)
    {
        for (int i = 0 ; i < len1 - len2 ; i++)
            str2 = '0' + str2;
    }
    return len1; // If len1 >= len2
}
    
string addition( string first, string second )
{
    string result;  // To store the sum bits
 
    // make the lengths same before adding
    int length = makeEqualLength(first, second);
 
    int carry = 0;  // Initialize carry
 
    // Add all bits one by one
    for (int i = length-1 ; i >= 0 ; i--)
    {
        int firstBit = first.at(i) - '0';
        int secondBit = second.at(i) - '0';
 
        // boolean expression for sum of 3 bits
        int sum = (firstBit ^ secondBit ^ carry)+'0';
 
        result = (char)sum + result;
 
        // boolean expression for 3-bit addition
        carry = (firstBit & secondBit) | (secondBit & carry) | (firstBit & carry);
    }
 
    // if overflow, then add a leading 1
    if (carry)
        result = '1' + result;
 
    return result;
}

string mult(string num1, string num2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function                
        if (num1.size()==0 || num2.size()==0){return "";}
        //handle negative case
        bool pos=true; 
        if (num1[0]=='-'){num1=num1.substr(1);pos = !pos;}
        if (num2[0]=='-'){num2=num2.substr(1);pos = !pos;}
 
        //main part
        string res="0";        
        for (int i=num2.size()-1;i>=0;i--){ //for each element in num2        
            string m=mpl(num1,num2[i]); // num1 multiply by num2[i]           
            if (m!="0"){
                add(res,m,num2.size()-1-i); // add m to the result
            }
        }
                 
        if (!pos){res="-"+res;}
        return res;
    }
*/

string mult(string a, string b){
	string res = "";
	
	int x = a.length();
	int y = b.length();
	
	int n1 = (x>=y)? x:y;
	int n2 = (x<=y)? x:y;
	
	for(int i=1; i<n2; i++)
		res.append("9");
		
	res.append("8");
	
	for(int i=n2; i<n1; i++)
		res.append("9");
		
	for(int i=1; i<n2; i++)
		res.append("0");
		
	res.append("1");
	
	
	return res;
}

int main()
{
    int t;
    cin>>t;
    int n, k;
    
    //long long unsigned int a[100001];
    
    string a;
    while(t--){
    	cin>>n>>k;
    	//long long unsigned int ans = a[k]*a[n-k];
    	int max = (k >= n-k)? k : n-k;
    	int min = (k <= n-k)? k : n-k;
    	
    	a = "9";
    
    	for(int i=2; i<=min; i++)
    		a.append("9");
    		//a = next(a);
    		//a = addition(mult("10", a), "9");
    
    	string A = a;
    
    	for(int i=min+1; i<=max; i++)
    		a.append("9");
    		//a = next(a);
    		//a = addition(mult("10", a), "9");
    	
    	string B = a;
    	string ans = mult(A, B);
    	cout<<ans<<endl;
    }
    return 0;
}