#include<bits/stdc++.h>
using namespace std;


const int MAX = 1000100;
int M, N, indeg[MAX];
int avail[1000010];
set< int >  nextNode;
vector<int>g[MAX];
vector< int > order;
int cnt;
void topology() {
	int u, v;cnt=0;
	set< int >::iterator it;
	while(!nextNode.empty()) {
		u = *nextNode.begin();
		nextNode.erase(nextNode.begin());
		//cout<<u<<"is inserted"<<endl;
		order.push_back(u);cnt++;
		for(int i=0; i!=g[u].size(); i++) {
			v = g[u][i];
			indeg[v]--;
			if(!indeg[v]){nextNode.insert(v);}
		}
	}
}

int main() {
    int n;
    int i, j, k, u, v;
    cin>>n;
    int ma=-1;
    for(int i=0;i<n;i+=1){
        cin>>k;
        int prev;
        cin>>prev;
        ma=max(ma,prev);
        for(int j=0;j<k-1;j+=1){
            cin>>u;
            ma=max(ma,u);
            g[prev].push_back(u);
            indeg[u]+=1;
            avail[prev]=1;
            avail[u]=1;
            prev=u;
        }
    }
    //cout<<ma<<endl;
	for(i=1; i<=ma; i++)
		if(avail[i]!=0 && indeg[i]==0){
			nextNode.insert(i);
			//cout<<i<<" ";
			//cout<<i<<endl;
        }
    //cout<<endl;
	topology();
	//cout<<"hi"<<endl;
	//if(cnt!=N){puts("Sandro fails.");return  0;}
	//printf("%d", order[0]);
	for(i=0; i<order.size(); i++)printf("%d ", order[i]);
	printf("\n");
	return 0;
}
