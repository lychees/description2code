 
#define LOCAL
#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <numeric>
#include <cstring>
#include <climits>
#include <cassert>
#include <cstdio>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <list>
#include <set>
#include <map>

using namespace std; 
 

typedef long long LL;
//typedef long double DB;
typedef double DB;
typedef unsigned int UINT;
typedef unsigned long long ULL;

typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<string> VS;
typedef vector<LL> VL;
typedef vector<DB> VF;
typedef set<int> SI;
typedef set<string> SS;
typedef map<int, int> MII;
typedef map<string, int> MSI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef vector<PII> VII;
typedef vector<VI> VVI;
typedef vector<VII> VVII;


//sorting q sort function 
int ascend (const void * a, const void * b)
{
  return ( *(int*)a - *(int*)b );
}
int descend (const void * a, const void * b)
{
  return ( *(int*)b - *(int*)a );
} 
 
 //printf and scanf 
 
 void ppp(int n)
 {
 int i,j,k;
    bool t=true;
   for(i=0;i<n;i++)
   {
          for(j=1;j<n-i;j++)
   		printf(" ")	;
   	  for( ;j<=n;j++)
   	  {
   	  	 if((j-n+i)%2) 
   	  	printf(" ");
   	  	else
   	  	printf("/");   	  
   	  }
   	  
   	 
   	  for(j=0;j<=i;j++)
   	   {   	
   	   		if((i+j)%2)
   		printf(" ")	;
   		else
   		printf("\\");
   	  }
   	  
   	  
   	  
   	  
   	printf("\n");   	
   }
   
   for(i=0;i<n;i++)
   {
          printf("  ");  
          for(j=0;j<i;j++)
   		printf(" ")	;
          bool t=true;
   	  for(  ;j<n;j++)
   	  {
   	  	 if(t) 
   	  	printf("\\");
   	  	else
   	  	printf(" ");   
   	  	
   	  	t=!t;	  
   	  }
   	  t=!t;
   	 for( j=0 ;j<n-i;j++)
   	  {
   	  
   	        if(t) 
   	  	printf("/");
   	  	else
   	  	printf(" ");   
   	  	
   	  	t=!t;	  
   	  }
   	  
   	  
   	  
   	printf("\n");   	
   }
  
 
 }
int main(){
   int n;
   cin>>n;
   ppp(n);
   ppp(n+1);
}








