#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int N = 42;
const int MOD = 1000000007;
ll freq[N][N];
int main() {
	for(int i=0;i<N;i++) for(int j=0;j<N;j++) freq[i][j]=0;
	int n, k; cin >> n >> k;
	char x;
	for(int i=0;i<n;i++) {
		for(int j=0;j<6;j++) {
			cin >> x;
			freq[i][x - 'a']++;
		}
	}
	
	string s; cin >> s;
	
	ll ans = 0;
	
	// for all k-subsets of n
	//     for all permutations of that subset
	//         check if permutation is valid or not
	for(int i = 0; i < (1 << n) ; i++) {
		if(__builtin_popcount(i) == k) {
			// get subset
			vector<int> cubes;
			int index = 0;
			int val = i;
			while(val) {
				if(val & 1) {
					cubes.push_back(index);
				}
				index++;
				val>>=1;
			}
			sort(cubes.begin(), cubes.end());
			
			do {
				// check satisfiability for permutation
				ll ways = 1;
				for(int q = 0; q < k ; q++) {
					int ch = s[q] - 'a';
					int cube_no = cubes[q];
					if(freq[cube_no][ch] > 0) {
						ways *= freq[cube_no][ch];
						ways %= MOD;
					} else {
						ways = 0;
					}
				}
				ans += ways;
				ans %= MOD;
			} while(next_permutation(cubes.begin(), cubes.end()));
		}
	}
	
	cout << ans % MOD << "\n";
	return 0;
}