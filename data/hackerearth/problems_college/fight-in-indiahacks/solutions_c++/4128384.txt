#include<bits/stdc++.h>
#define wsp cin >> ws;
#define sp setprecision
#define sz size()
#define sn(n) scanf("%lld",&n)
#define cn(n) cin>>n
#define pr(n) printf("%d\n",n)
#define ff first
#define ss second
#define prn cout<<endl
#define str(n) scanf("%s",n)
#define pb push_back
#define len(n) n.length()
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(int i=0;i<n;i++)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define fre     freopen("0.in","r",stdin),freopen("0.out","w",stdout)
#define all(n) n.begin(),n.end()
#define alll(n,i,j) n.begin()+i,n.begin()+j
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define LALIT ios_base::sync_with_stdio(false);cin.tie(0)
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define mem(n,m) memset(n,m,sizeof(n))
#define mp make_pair
#define bitc(n) __builtin_popcount(n)
#define mod 1000000007     
#define maxi(m,n) m = max(m,n)
#define mini(m,n) m = min(m,n)                                                                        
#define E 1e-9
#define PI 3.14159265358979323846
 
using namespace std;
typedef unsigned long long int ull;
typedef long long int ll;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
int ans[1000001];

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	int n,m1,m2,x;
    	cin>>n>>m1>>m2;
    	
    	rep(i,min(m1,m2)){if(i>n)break;ans[i]=0;}
    	if(m1>n&&m2>n)
    	{
    		cout<<"0"<<endl;
    		continue;
    	}
    	if(m1==n||m2==n)
    	{
    	cout<<"1"<<endl;
    	continue;
    	}
    	if(m1==1||m2==1)ans[1]=1;
    	
      forp(i,1,n)
      {
      	if(i>=m1&&ans[i-m1]==0)
      	{
      		ans[i]=1;
      		continue;
      	}
      	if(i>=m2&&ans[i-m2]==0)
      	{
      		ans[i]=1;
      		continue;
      	}
      	ans[i]=0;
      }
    		
    	pr(ans[n]);	
    	
    }
    return 0;
}
