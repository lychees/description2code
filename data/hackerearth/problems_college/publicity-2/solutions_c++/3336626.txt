#include <bits/stdc++.h>
#define max_vertices 100005
using namespace std;

vector<vector<int> > adjacecy_list(max_vertices); //allocating space for ajacency list

void dfs(int position,bool *isVisitedNode){
	int i;
	//printf("%d\n",position);

	for(i=0;i<adjacecy_list[position].size();i++){
		if(isVisitedNode[adjacecy_list[position][i]] == 0){
			isVisitedNode[adjacecy_list[position][i]] = 1;
			dfs(adjacecy_list[position][i],isVisitedNode);
		}
	}
}

int main() {
	
	//nodes are starting from 0 and it is single directional
	int noOfNodes , noOfPath , i , x , y ,t;

	scanf("%d",&t);
	while(t--){
		
	bool isVisitedNode[max_vertices] = {0};
	scanf("%d",&noOfNodes);
	scanf("%d",&noOfPath);
	for(i=0;i<noOfPath;i++){
		scanf("%d",&x);
		scanf("%d",&y);
		adjacecy_list[x].push_back(y);
		//uncoment this if its bi directional
		adjacecy_list[y].push_back(x);
	}
	int ans=0;
	for(i=0;i<noOfNodes;i++){
		if(isVisitedNode[i] == 0){
			ans++;
			isVisitedNode[i] = 1;
			dfs(i,isVisitedNode);
		}
	}
	printf("%d\n",ans);

	for(i=0;i<noOfNodes;i++){
		adjacecy_list[i].clear();
	}

	}
	return 0;
}