#include<bits/stdc++.h>
using namespace std;
int n;
vector<int> edge[10001];
int dp[10001];
long long int dfs(int v)
{
	long long int count=0;
	for(vector<int>::iterator p=edge[v].begin();p!=edge[v].end();p++)
	{
		if(*p==n)
		  count++;
		 else
		 {
           if(!dp[*p])
		     count+=dfs(*p);
		    else
		      count+=dp[*p];
		 }
	}
	dp[v]=count;
	return count;
}
main()
{
	cin>>n;
	memset(dp,0,sizeof(dp));
	while(1)
	{
		int x,y;
		cin>>x>>y;
		if(x==0 && y==0)
		   break;
		edge[x].push_back(y);
	}
	cout<<dfs(1);
}