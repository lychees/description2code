#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;
typedef pair< int, pii > tri;

typedef vector<int> array;
typedef vector<LL> array_LL;
typedef vector<vector<int> > matrix;
typedef vector<vector<LL> > matrix_LL;

#define pb push_back
#define mp make_pair
#define sz size()
#define ln length()
#define forr(i,a,b)                 for(int i=a;i<b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()    
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
    
#define debug                       if(1)
#define debugoff                    if(0)    

#define print(x)                 cerr << x << " ";    
#define pn()                     cerr << endl;
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define endl '\n'
#define MAX 100010
#define MOD 1000000007
LL b[20],c[20],k;
matrix_LL multiply(matrix_LL a,matrix_LL b){
    matrix_LL c(k+1,array_LL(k+1));
    for(int i=1;i<=k;i++)
        for(int j=1;j<=k;j++)
            for(int p=1;p<=k;p++)
                c[i][j] = (c[i][j] + a[i][p]*b[p][j])%MOD;
    return c;
}
matrix_LL expo(matrix_LL T,int n){
    matrix_LL result(k+1,array_LL(k+1));
    int shift = 1;
    for(int i = 1;i<=k;i++) result[i][shift++] = 1;    
    while(n){        
        if((n&1))
            result = multiply(result,T);
        T = multiply(T,T);
        n >>= 1;
    }
    return result;
}

void solve(int m,int n){
    //if(n<=0)    return 0;
    k = m;
    matrix_LL T(m+1,array_LL(m+1));
    for(int i=1;i<=m;i++)
        for(int j=1;j<=m;j++)
            cin>>T[i][j];

    T = expo(T,n);
    for(int i=1;i<=m;i++){
        for(int j=1;j<=m;j++)
            cout<<T[i][j]<<" ";
        cout<<endl;
    }

}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int t,m,n;
    for(cin>>t;t;t--)
    {
        cin>>m>>n;      
        solve(m,n);
    }
    return 0; 
}


