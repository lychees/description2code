#include<bits/stdc++.h>

using namespace std;

#define LL long long int
#define sd(x) scanf("%d", &x)
#define MP make_pair
#define PB push_back
#define vi vector<int>
#define F first
#define S second
#define INF 2000000000
#define MOD 1000000007
#define D double
#define LD long double

void brute(){
	int n, x, y, z, c;
	//cin>>n;
	while(n--){
		cin>>n;
		c = 0;
		for(x = 1; x <= n - 2; x++){
			for(y = 1; y + x <= n - 1; y++){
				z = n - x - y;
				if(((x & y) & z) == 0){
					cout<<x<<" "<<y<<" "<<z<<endl;
					c++;
				}
			}
		}
		cout<<n<<" "<<c<<endl;

	}
}

#define N 1123456

LL ans[N];
map<LL, LL> mp;

inline LL g(LL n){
	n %= MOD;
	return (((n + 2) * (n + 1)) / 2) % MOD;
}

void pre(){
	int n, x, y, z;
	for(n = 0; n < 10; n++){
		for(x = 1; x <= n - 2; x++){
			for(y = 1; y + x <= n - 1; y++){
				z = n - x - y;
				if((x & y) & z){
					ans[n]++;
				}
			}
		}
		//cout<<n<<" "<<ans[n]<<endl;
	}
	for(n = 10; n < N; n++){
		if(n % 2 == 0){
			ans[n] = ans[n / 2] + 3 * ans[(n - 2) / 2];
		}
		else{
			ans[n] = 3 * ans[(n - 1) / 2] + g((n - 3) / 2);
		}
		ans[n] %= MOD;
	}
}

LL f(LL n){
	if(n < N){
		return ans[n];
	}
	if(mp.find(n) != mp.end()){
		return mp[n];
	}
	LL ret;
	if(n % 2 == 0){
		ret = f(n / 2) + 3 * f((n - 2) / 2);
		ret %= MOD;
	}
	else{
		ret = 3 * f((n - 1) / 2) + g((n - 3) / 2);
		ret %= MOD;
	}
	//cout<<n<<" "<<ret<<endl;
	mp[n] = ret;
	return ret;
}

int main(){
	int t;
	LL n;
	sd(t);
	double st = clock();
	pre();
	//cout<<(clock() - st) / CLOCKS_PER_SEC<<endl;
	while(t--){
		cin>>n;
		//n = 1123456789123456789LL;
		//cout<<n<<endl;
		//n = 1000000000000000000LL;
		//n = f(n);
		cout<<f(n)<<endl;
	}
	//cout<<(clock() - st) / CLOCKS_PER_SEC<<endl;
	return 0;
}
