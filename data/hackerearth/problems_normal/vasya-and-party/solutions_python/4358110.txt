
modval = (10**9)+7
N,M = map(int, raw_input().split())
K = map(int, raw_input().split())

#adjacency list
G = {}
for i in range(M):
    u,v = map(int, raw_input().split())
    if u not in G:
        G[u] = []
    if v not in G:
        G[v] = []
    G[u].append(v)
    G[v].append(u)


notvisited = set(i for i in range(1,N+1))
leaders = []
while notvisited.__len__()>0:
    vertex = notvisited.pop()
    neighbours = []

    max_knowledge = K[vertex-1]
    leader_count = 1
    #notvisited.remove(vertex)      commented since already poped
    if vertex in G:
        neighbours.extend(G[vertex])

    while neighbours.__len__()>0:
        neighbour = neighbours.pop()
        if neighbour in notvisited:
            notvisited.remove(neighbour)
        else:
            continue
        if max_knowledge<K[neighbour-1]:
            max_knowledge = K[neighbour-1]
            leader_count = 1
        elif max_knowledge==K[neighbour-1]:
            leader_count+=1
        neighbours.extend(G[neighbour])
    leaders.append(leader_count%modval)

res = 1
#print leaders
for i in leaders:
    res*=i
    res = res%modval

print res