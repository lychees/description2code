#include <iostream>
#include <stdio.h>
#include <numeric>
#include <queue>
#include <string>
#include <cmath>
#include <vector>
#include <deque>
#include <iomanip>
#include <set>
#include <queue>
#include <bitset>
#include <iomanip>
#include <map>
#include <string.h>
#include <stack>
#include <algorithm>

using namespace std;

int u[100010];		// new
int v[100010];

int w[100010];		// old
int x[100010];

// 获得相同的元素
int getSame(int m , int n)
{
	set<pair<int , int> > s;
	int i , ans = 0;
	for (i = 1;i <= m;i ++)
	{
		pair<int , int> p;
		p.first = u[i];
		p.second = v[i];
		s.insert(p);
	}
	for (i = 1;i <= n;i ++)
	{
		pair<int , int> p;
		p.first = w[i];
		p.second = x[i];
		// 如果重复了
		if (s.find(p) != s.end())
			ans ++;
	}
	return ans;
}

int cnt[10010];

// 获得最大值
int getMax(int m , int n)
{
	memset(cnt , 0 , sizeof(cnt));
	int i , ans = 0;
	for (i = 1;i <= n;i ++)
		cnt[x[i]] ++;
	for (i = 1;i <= m;i ++)
	{
		// 如果还存在
		if (cnt[w[i]] > 0)
		{
			cnt[w[i]] --;
			ans ++;
		}
	}
	return ans;
}

int main()
{
	int i , j , t , m , n , g , h;
	while (scanf("%d" , &t) != EOF)
	{
		while (t --)
		{
			scanf("%d%d" , &m , &n);
			for (i = 1;i <= m;i ++)
				scanf("%d%d" , &u[i] , &v[i]);
			for (i = 1;i <= n;i ++)
				scanf("%d%d" , &w[i] , &x[i]);
			scanf("%d%d" , &g , &h);

			int temp1 = getSame(m , n) , temp2 = getMax(m , n);
			// 如果满足了great
			if (temp1 >= h)
				printf("Great\n");
			// 如果满足了good
			else if (temp2 >= g)
				printf("Good\n");
			else
				printf(":(\n");
		}
	}
	return 0;
}


