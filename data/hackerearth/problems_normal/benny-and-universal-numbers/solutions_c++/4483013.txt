#include <bits/stdc++.h>

using namespace std;
int static const N = 1001000;

int ost[20],prost[200];
vector<int> v;
vector<long long> a;

void cepaj(long long x,int valja)
{
	/*for(int i=0;i<v.size();i++)
		printf("%i ",v[i]);
	printf("\n\n");
	system("PAUSE");*/
	int n = v.size();
	if(valja)
		a.push_back(x);
	if(n != 15)
	{
		long long x1 = x*10;
		int l = x1%(n+1);
		l = (ost[n]-l)%(n+1);
		if(l<0)
			l += n+1;
		for(int i=l;i<10;i+=n+1)
		{
			v.push_back(i);
			int o = 0;
			if(!prost[v[n-1]*10+i])
				o = 1;
			cepaj(x1+i,max(o,valja));
			v.pop_back();
		}
	}
}

int main() {
	prost[1] = prost[0] = 1;
	for(int i=2;i<100;i++)
		if(!prost[i])
			for(int j=2*i;j<150;j+=i)
				prost[j] = 1;
	for(int i=0;i<15;i++)
		scanf("%i",&ost[i]);
	if(!ost[0])
		for(int i=1;i<10;i++)
		{
			v.clear();
			v.push_back(i);
			cepaj((long long)i,0);
		}

	int q;
	//printf("%i\n",a.size());
	scanf("%i",&q);
	sort(a.begin(),a.end());
	/*printf("%lld\n",a[a.size()-1]);
	for(int i=0;i<40;i++)
		printf("%lld ",a[i]);
	printf("\n\n");*/
	for(int i=0;i<q;i++)
	{
		long long dd,gg;
		std::vector<long long>::iterator up,low;
		scanf("%lld%lld",&dd,&gg);
		low = lower_bound(a.begin(),a.end(),dd);
		up = std :: upper_bound(a.begin(),a.end(),gg);
		printf("%i\n",up-low);
	}//*/
	return 0;
}
