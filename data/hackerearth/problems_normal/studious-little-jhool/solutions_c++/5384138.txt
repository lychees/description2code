#include<bits/stdc++.h>

#define ll long long int
#define end cout << endl
#define eb push_back
#define pb pop_back
#define size(a) int(a.size())
//for traversing the container (bcoz we cannot access linked list etc with direct index)
//c stands for container and it for iterator
#define tr(c, it) \
		for(typeof(c.begin()) it=c.begin() ; it != c.end() ; it++)
		
#define all(c) c.begin(), c.end()
#define present(container, element) (container.find(element) != container.end()) //whether the element is present in the container

#define f(i, start, end) for(i=start; i<end; i++)


#define trace2(x, y)             cout <<#x<<": "<<x<<" | "<<#y<<": "<<y<< endl;
#define trace3(x, y, z)          cout <<#x<<": "<<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl;
#define trace4(a, b, c, d)       cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl;
#define trace5(a, b, c, d, e)    cout <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<<": "<<e<<endl;

using namespace std;

typedef vector < int > vi;
typedef vector < vi > vvi;
typedef vector < ll > vll;
typedef vector < vll > vvll;

typedef pair < int , int > ii;




int main()
{
	ll n, i, t;
	int ans[115];
	cin >> t;
	f(i, 1, 10)
		ans[i]=120;
	ans[10]=1;
	ans[11]=120;
	ans[12]=1;
	
	f(i, 13, 114)
	{
		int mini=min(ans[i-10], ans[i-12]);
		if(mini==120)
			ans[i]=120;
		else
			ans[i]=mini+1;
	
		//trace2(i, ans[i]);
	}
	
	while(t>0)
	{
		cin >> n;
		
		if(ans[n]!=120)
			cout << ans[n] ;
		else
			cout << "-1";
		
		cout << endl;
		t--;
	}
	
	return 0;
}
