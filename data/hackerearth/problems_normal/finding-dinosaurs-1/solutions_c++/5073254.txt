#include <iostream>
#include <map>
#include <vector>
using namespace std;
 
int main()
{
    int n, k, l, q;
    scanf("%d%d%d%d", &n, &k, &l, &q);
    // multimap<int, vector<int> > asum;
    // multimap<int, vector<int> >::iterator it;
    map<vector<int>, string> smap;
    map<vector<int>, string>::iterator it;
    while ( n-- ) {
    	int x;
    	vector<int> temp;
    	string s;
    	cin>>s;
    	for ( int i = 0; i < k; i++ ) {
    		scanf("%d", &x);
    		// sum += x;
    		temp.push_back(x);
    	}
    	// asum.insert( make_pair (sum, temp) );
    	smap[temp] = s;
	}
	while ( q-- ) {
		int a;	// sum = 0;
		vector<int> temp;
		for ( int i = 0; i < k; i++ ) {
			scanf("%d", &a);
			// sum += a;
			temp.push_back(a);
		}
		// pair < multimap<int, vector<int> >::iterator, multimap<int, vector<int> >::iterator > ret;
		// ret = asum.equal_range(sum);
		// int Win = false;
		/*for ( it = smap.begin(); it != smap.end(); it++ ) {
			if ( it->first == temp ) {
				cout<<it->second<<endl;
				Win = true;
				break;
			}
		}*/
		if ( smap.find(temp) != smap.end() ) {
			cout<<smap.find(temp)->second<<endl;
		} else {
			printf("You cant fool me :P\n");
		}
	}
    return 0;
}