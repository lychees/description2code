#include <iostream>
#include <algorithm>
#define N 100
using namespace std;

int maze[N][N];
int fill_maze(int n,int c)
{
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			if(i-1>=0 && j-1>=0)
			{
				maze[i][j]=max((maze[i-1][j]+maze[i][j]),(maze[i][j-1]+maze[i][j]));
			}
			else if(i-1>=0 && j-1<0)
			{
				maze[i][j]=maze[i][j]+maze[i-1][j];
			}
			else if(i-1<0 && j-1>=0)
			{
				maze[i][j]=maze[i][j]+maze[i][j-1];
			}
		}
	}
	int coin=maze[n-1][n-1]-c;
	if(coin>=0)
		return coin;
	else
		return -1;

}
int main()
{
    int n,c;
    int T, test_case;
    cin>>T;
    for(test_case = 0; test_case  <T; test_case++)
	{
    cin>>n;
    cin>>c;
    
    for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cin>>maze[i][j];
		}
	}
	cout <<fill_maze(n,c)<<endl;
	}
    return 0;
}
