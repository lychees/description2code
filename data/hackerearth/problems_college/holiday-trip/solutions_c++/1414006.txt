#include<bits/stdc++.h>
using namespace std;
 
const int N=100001;
 
vector<int > v[N];
int dist[N];
bool visited[N];
int n;
 
int bfs(int start) {
    queue<int>q;
    q.push(start);
    for(int i=0;i<=n;i++) {
        visited[i]=false,dist[i]=0;
    }
    visited[start]=true;
    while(q.empty()==false) {
        int temp=q.front();
        q.pop();
        for(int i=0;i<v[temp].size();i++) {
            int u=v[temp][i];
            if(visited[u]==false) {
                visited[u]=1;
                dist[u]=dist[temp]+1;
                q.push(u);
            }
        }
    }
    return int(max_element(dist+1,dist+n+1)-dist);
}
int main() {
    int tt;
    scanf("%d",&tt);
    while(tt--) {
        scanf("%d",&n);
        for(int i=1;i<=n;i++) {
            v[i].clear();
        }
        for(int i=1;i<=n-1;i++) {
            int v1,v2;
            scanf("%d%d",&v1,&v2);
            v1++,v2++;
            v[v1].push_back(v2);
            v[v2].push_back(v1);
        }
        int start=bfs(1);
        int res=bfs(start);
        int ans=dist[res];
        printf("%d\012",ans+1);
    }
    return 0;
}