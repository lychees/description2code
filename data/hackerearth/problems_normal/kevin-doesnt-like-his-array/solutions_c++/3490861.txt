#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<map>
#include<queue>
#include<iterator>
using namespace std;
#define FOR(i,s,e) for(int i = (s); i < (e); i++)
#define FOE(i,s,e) for(int i = (s); i <= (e); i++)
#define FOD(i,s,e) for(int i = (s); i >= (e); i--)
#define CLR(a) memset(a,0,sizeof(a))
#define ll long long
#include<ctime>
#include<cmath>
#include<vector>

int n, m, x, y, z, k, w, ans;
int A[100005], B[100005];

priority_queue<int> Q;

int main ()
{
	scanf("%d", &n);
	FOR(i, 0, n) scanf("%d", &A[i]);
	
	FOR(i, 0, n) B[A[i]]++;
	FOE(i, 1, 100000) 
	{
		if (n % 2 == 0 && B[i] > n / 2) { printf("-1\n"); return 0; }
		else if (n % 2 == 1 && B[i] > n / 2 + 1) { printf("-1\n"); return 0; }
	}
	
	memset(B, 0, sizeof(B));
	
	FOR(i, 0, n - 1)
	{
		if (A[i] == A[i + 1]) B[A[i]]++;
	}
	
	FOE(i, 1, 100000) if (B[i] > 0) Q.push(B[i]);
	
	while (!Q.empty())
	{
		ans++;
		x = Q.top(); Q.pop();
		if (Q.empty()) 
		{
			ans += x - 1;
			break;
		}
		y = Q.top(); Q.pop();
	//	printf("%d %d\n", x, y);
		x = x - 1;
		y = y - 1;
		if (x > 0) Q.push(x);
		if (y > 0) Q.push(y);
	}
	
	printf("%d\n", ans);
	return 0;
}