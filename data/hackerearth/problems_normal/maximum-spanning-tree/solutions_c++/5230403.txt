#include<bits/stdc++.h>
using namespace std;
int n,m;
int P[10102];
vector<pair<int,pair<int,int> > >p;
bool cmp(pair<int,pair<int,int> >a,pair<int,pair<int, int> >b)
{
    if(a.first!=b.first)
        return (a.first<b.first);
    else return (a.second.first<b.second.first);
}
int findd(int q)
{
    if(q==P[q])return q;
    return P[q]=findd(P[q]);
}
void unnion(int x,int y)
{
    P[findd(x)]=P[findd(y)];
}
void solve()
{
    while(!p.empty())
        p.pop_back();
    for(int i=1;i<10102;i++)
        P[i]=i;
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int a,b,c;
        cin>>a>>b>>c;
        pair<int,pair<int,int> >s;
        s.first=-c;
        s.second.first=a;
        s.second.second=b;
        p.push_back(s);
    }
    sort(p.begin(),p.end(),cmp);
    int ans=0,br=0,i=0;
    while(br!=n-1)
    {

        int now=-p[i].first,from=p[i].second.first,to=p[i].second.second;
        if(findd(from)!=findd(to))
        {
            unnion(from,to);
            ans+=now;
            br++;
        }
        i++;
    }
    cout<<ans<<endl;
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin>>t;
    for(int i=0;i<t;i++)
        solve();
    return 0;
}

