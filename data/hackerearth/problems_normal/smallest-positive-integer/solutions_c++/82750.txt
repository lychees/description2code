#include <cstdio>
#include <cassert>
#include <algorithm>
using namespace std;

#define mod 1000000007
#define LL long long int

pair<int, pair<int, int> > chhakka[1500000];
int cnt=0;
const int inv5=400000003, inv7=142857144;

   
int cmp(int *a, int *b){
   for(int i=0; i<10; i++){
      if(a[i]>b[i])
         return 1;
      if(a[i]<b[i])
         return 0;
   }
   return 0;
}

void solve(int number){
   int blen=700, b[10]={0};
   int t=1, invt=1;
   for(int a57=0; a57<=blen; a57++){
      int tt=t, invtt=invt;
      for(int five=0; five<=a57; five++){
         int seven=a57-five;
         int a23=(LL)invtt*number%mod;
         int pos=lower_bound(chhakka, chhakka+cnt, make_pair(a23, make_pair(0,0)))-chhakka;
         if(chhakka[pos].first==a23){
            int dds=chhakka[pos].second.first+a57;
            if(dds<=blen){
               int tmp[10]={0};
               int a2=chhakka[pos].second.second>>16;
               int a3=chhakka[pos].second.second&0xffff;
               tmp[9]=a3/2;
               a3%=2;
               tmp[8]=a2/3;
               a2%=3;
               tmp[7]=seven;
               if(a2 && a3){
                  tmp[6]=1;
                  a2--;
                  a3--;
               }
               tmp[5]=five;
               tmp[4]=a2/2;
               a2%=2;
               tmp[3]=a3;
               tmp[2]=a2;
               if(dds<blen || cmp(tmp, b)){
                  blen=dds;
                  for(int i=0; i<10; i++)
                     b[i]=tmp[i];
               }
            }
         }
         tt=5ll*inv7*tt%mod;
         invtt=7ll*inv5*invtt%mod;
      }
      t=7ll*t%mod;
      invt=(LL)inv7*invt%mod;
   }
   assert(blen<=613);
   for(int i=0; i<10; i++)
      for(int j=0; j<b[i]; j++)
         putchar(i+'0');
   putchar('\n');
}

int main(){
   cnt=0;
   int t=1;
   for(int a2=0; a2<2100; a2++, t=2*t%mod){
      int tt=t;
      for(int a3=0; a3<1400; a3++, tt=3ll*tt%mod){
         int dds= (a3)/2 + (a3&1 ? ((a2+4)/3) : (a2+2)/3);
         if(dds>=700)
            break;
         chhakka[cnt]=make_pair(tt, make_pair(dds, (a2<<16)+a3));
         cnt++;
      }
   }
   sort(chhakka, chhakka+cnt);
   int number;
   scanf("%d", &number);
   if(number==0)
      puts("10");
   else if(number<10)
      printf("%d\n", number);
   else
      solve(number);
   return 0;
}
