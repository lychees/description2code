#include <cstdio>
#include <iostream>
#include <cmath>
#include <string>
#include <cstring>
#include <climits>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <set>


using namespace std;
typedef long long int LL;

#define fr(i,a,b) for(int i = a; i < b; i++)
#define frll(i,a,b) for(LL i = a; i < b; i++)
#define s(x) scanf("%d",&x)
#define sll(x) scanf("%lld",&x)
#define p(x) printf("%d\n",x)
#define pll(x) printf("%lld\n",x)

#define MAX 50

int arr[MAX][MAX][MAX];
int b_arr[MAX][MAX][MAX];

int main(){
    int t; 
    int n, ans;
    s(t);
	//int x1, y1, x2, y2;
    while(t--){
		s(n);
		int b;
		fr(i, 0, n){
			fr(j, 0, n){
				fr(k, 0, n){
					s(b);
					b_arr[i][j][k]= b;
					arr[i][j][k] = 0;
					int sum = 0;
					//fr(i1, 0, i+1)
						//fr(j1, 0, j+1)
					if(k == 0){
						if(j == 0){
							if(i != 0){
								sum += b_arr[i-1][j][k];
							}
						}
						else{
							if(i == 0){
								sum += b_arr[i][j-1][k];
							}
							else{
								sum += b_arr[i][j-1][k] + b_arr[i-1][j][k] - b_arr[i-1][j-1][0] ;
							}
						}
						/*fr(i1, 0, i+1)
							fr(j1, 0, j+1){
								sum += arr[i1][j1][k];
							}
						*/
						//sum += b_arr[i][j-1][k];
					}
					else {
						sum += b_arr[i][j][k-1];
						int i1, j1, k1;
						i1 = i-1;
						j1 = j;
						k1 = k;
						int flag1 = 0, flag2 = 0;
						if(i-1 >= 0 && i-1 < n){
							sum += b_arr[i-1][j][k] - b_arr[i-1][j][k-1];
							flag1 = 1;
						}
						if(j-1 >= 0 && j-1 < n){
							sum += b_arr[i][j-1][k] - b_arr[i][j-1][k-1];
							flag2 = 1;
						}
						if(flag1 && flag2){
							sum -= (b_arr[i-1][j-1][k] - b_arr[i-1][j-1][k-1]);
						}
						/*if(i > 0){
							if(j == 0)
								sum += b_arr[i-1][j][k] - b_arr[i-1][j][k-1];
							else {
								sum += b_arr[i-1][j][k] - b_arr[i-1][j][k-1] + b_arr[i][j-1][k] - b_arr[i][j-1][k-1] - (b_arr[i-1][j-1][k] - b_arr[i-1][j-1][k-1]);
							}
						}
						else {
							if(j == 0){
								sum += 
							}
							sum += b_arr[i][j-1][k] - b_arr[i][j-1][k-1];
						} */
						/*
						fr(i1, 0, i+1)
							fr(j1, 0, j+1){
								sum += arr[i1][j1][k];
							}
						*/
					}
					arr[i][j][k] = b - sum;
					printf("%d ", arr[i][j][k]);
				}
				printf("\n");
			}
			//printf("\n");
		}
				  // B(i,j,k)=B(i,j,k)+A(c,c1,c2);
	}
    return 0;
}