/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
ll a[2000];
ll b[2000];
ll weight[2000];
vector<ll>v[2000];
ll k;
bool visited[2000];
ll timer=1;
ll intime[2000];
ll outime[2000];
void ini1()
{
    memset(intime,0,sizeof(intime));
    memset(outime,0,sizeof(outime));
}
void ini()
{
    fill(a,a+2000,1);
    fill(b,b+2000,0);
    memset(visited,0,sizeof(visited));

}
void dfs1(ll node)
{
    intime[node]=timer++;
    visited[node]=true;
    for(ll i=0;i<v[node].size();i++)
    {
        if(!visited[v[node][i]])
            dfs1(v[node][i]);
    }
    outime[node]=timer++;
}
void dfs(ll node)
{
    visited[node]=true;
    for(ll i=0;i<v[node].size();i++)
    {
        if(!visited[v[node][i]])
            dfs(v[node][i]);
    }
    if(v[node].size()==1 && node!=1)
    {
        if(weight[node]>=k)
            a[node]=1;
        else
            a[node]=0;
        b[node]=0;
    }
    else
    {
        if(weight[node]>=k)
        {

        for(ll i=0;i<v[node].size();i++)
        {
            if(intime[v[node][i]]>=intime[node]&&outime[v[node][i]]<=outime[node])
            a[node]=(a[node]%mod*(1+a[v[node][i]])%mod)%mod;

          //  cout<<v[node][i]<<" "<<a[v[node][i]]<<" "<<a[node]<<endl;

        }
        }
        else
            a[node]=0;
        for(ll i=0;i<v[node].size();i++)
        {
         if(intime[v[node][i]]>=intime[node]&&outime[v[node][i]]<=outime[node])
        b[node]=(b[node]%mod+(a[v[node][i]]%mod+b[v[node][i]]%mod)%mod)%mod;
        }
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n;
    cin>>n;
    for(ll i=1;i<=n;i++)
        cin>>weight[i];
    for(ll i=1;i<n;i++)
    {
        ll a,b;
        cin>>a>>b;
        v[a].pb(b);
        v[b].pb(a);
    }
    dfs1(1);
    ll q;
    cin>>q;
    while(q--)
    {
        cin>>k;
        ini();
        dfs(1);
        ll ans=0;
        ll ans1=0;

            ans=(a[1]+b[1])%mod;
        k=k+1;
        ini();
        dfs(1);

            ans1=(a[1]+b[1])%mod;
        cout<<(ans%mod-ans1%mod+mod)%mod<<"\n";

       // for(ll i=1;i<=n;i++)
        //{
          //  cout<<a[i]<<" "<<b[i]<<endl;
        //}
        //ini();

    }
}
