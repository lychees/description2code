#include<iostream>
#include<algorithm>
#include<string.h>
using namespace std;
typedef long long ll;
class Node{

    public:
    int data;
    Node* link;

};
Node* head;

void insrt(int x){

    Node* temp,* t;
    t = head;
    temp = new Node();
    temp->data=x;
    if(!head){
        head = temp;
        temp->link=head;

    }
    else{
    while(t->link!=head)
        t=t->link;
    t->link=temp;
    temp->link=head;
 }
}

Node* delet(Node* t,ll k,int n){

    if(t->link==t)
        return t;
    Node* tmp;
    int x=k;
    x = k%n;

    n-=1;
    if(x==0){

        for(int i=0;i<n;i++)
            t=t->link;
    }
    else
        for(ll i=0;i<x-1; i++)
            t=t->link;
         tmp = t->link;
         t->link = tmp->link;
         t=t->link;
         delete(tmp);
    delet(t,k,n);
}



void print(){

    cout<<head->data<<"\n";
    //t=t->link;



}

int main(){
    int t,n;
    long long k;
    cin>>t;
    while(t--){
        head = NULL;
        cin>>n>>k;
        for(int i=1;i<=n;i++){
                       insrt(i);
        }

        head = delet(head,k,n);
        print();


    }

        return 0;
}
