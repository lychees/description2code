#include<bits/stdc++.h>
using namespace std;
int bdparr[200];
double dparr[200][200];
int main(){
 
	int t;
	cin>>t;
	for(int cased = 1; cased <= t; cased++){
	    cout<<"Case #"<<cased<<": ";
        int k, l, s, i, var1, p, var2;
        string keyboard, str;
        cin>>k>>l>>s;
        cin>>keyboard;
        cin>>str;
        str = " " + str;
        for(i = 1; i <= l; i++){
            for(var1 = 0; var1 < k; var1++){
                if(str[i] == keyboard[var1]){
                    break;
                }
            }
            if(var1 == k){
                break;
            }
        }
        if(i <= l){
            printf("0.0\n");
            continue;
        }
        bdparr[1] = 0;
        var1 = 0;
        for(i = 2; i <= l; i++){
            while(var1 > 0){
                if(str[var1 + 1] == str[i]){
                    break;
                }
                var1 = bdparr[var1];
            }
            if(str[var1 + 1] == str[i]){
                var1++;
            }
            bdparr[i] = var1;
        }
        double ans = 1 + int((s - l) / (l - bdparr[l]));
        for(i = 0; i <= s; i++){
            for(var1 = 0; var1 <= l; var1++){
                dparr[i][var1] = 0;
            }
        }
        dparr[0][0] = 1;
        for(i = 0; i < s; i++){
            
            for(var2 = 0; var2 <= l; var2++){
                for(p = 0; p < k; p++){
                    var1 = (var2 == l ? bdparr[ l] : var2);
                    while(var1 > 0){
                        if( str[var1 + 1] == keyboard[p]){
                            break;
                        }
                        var1  = bdparr[var1];
                    }
                    if(str[var1 + 1] == keyboard[p]){
                        var1++;
                    }
                    dparr[i + 1][var1] += dparr[i][var2] / k;
                }
            }
            ans -= dparr[i + 1][l];
        }
		int numberofdecimals = 7;
		float pp=ans*1000000;
		while(((long long )pp)%10==0&&numberofdecimals>1){
			numberofdecimals--;
			pp/=10;
		}
		printf("%.*f\n", numberofdecimals, ans);
	}
	return 0;
}