#include <bits/stdc++.h>
using namespace std;
int n,m,k, dp[101][101][501], grid[101][101];

int solve(int i, int j, int p){
	if(i == n && j == m){
		if(p <= k) return 0;
		return -1e8;
	}
	if(i >=n || j >=m || p > k) return -1e8;
	if(dp[i][j][p] != -1) return dp[i][j][p];
	
	dp[i][j][p] = grid[i][j]+max(solve(i+1,j,p+grid[i][j]), max(solve(i,j+1,p+grid[i][j]),solve(i+1,j+1,p+grid[i][j])));
	
	return dp[i][j][p];
}

int main()
{
	int T;
	cin >> T;
	while(T--){
	cin >> n >> m >> k;
	memset(dp,-1,sizeof dp);
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin >> grid[i][j];
		}
	}
	int ans = solve(0,0,0);
	if(ans < 0) cout <<-1<<"\n";
	else cout << ans <<"\n";
	}
    return 0;
}
