
def step_required(big, small):
    mod = big % small
    if float(small) / 2 >= mod:
        return small - mod
    else:
        return mod


def find_minimum_steps(n, k):
    res = 10**9
    # if n = 47, k = 17
    # by increasing by 1 or decreasing by 1 maximum cases are 34. so traversing from 1 to 34.
    # abs(k - i) i.e. to increase or dec number of steps required.
    # min(n % i , i - n % i), we increase/dec k by i we must need to inc or dec value by mod value.
    # so number_of_steps required = abs(k - i) + min(n % i , i - n % i)
    # for everycase we will check minimum steps.
    for i in range(1, 2 * k+1):
        res = min(res, abs(k - i) + min(n % i, i - n % i))
    return res


if __name__ == '__main__':
    n, k = map(int, raw_input().split(" "))
    print find_minimum_steps(n, k)
