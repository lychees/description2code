#include<bits/stdc++.h>
using namespace std;
# define ll long long
int ar[11111];
bool subset[3000][30000];
bool isSubsetSum(int set[], int n, int sum)
{
    // The value of subset[i][j] will be true if there is a subset of set[0..j-1]
    //  with sum equal to i

    // If sum is 0, then answer is true
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;

    // If sum is not 0 and set is empty, then answer is false
    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;

     // Fill the subset table in botton up manner
     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >= set[j-1])
           subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
       }
     }
     return subset[sum][n];
}
int main()
{
    int n,i,j,x;
    cin>>n;
    for(i=0;i<n;i++)
        cin>>ar[i];
    cin>>x;
    if(isSubsetSum(ar,n,x))
        cout<<"True"<<endl;
    else
        cout<<"False"<<endl;
}

