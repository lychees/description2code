#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cassert>
 
using namespace std;
 
const int MOD = 23102009;
const int X = 100009;
int la,lb;
int lcs[2][X];
int dp[2][X];
char a[X],b[X];
 
int f(int x){
	if(x<0)return x+MOD;
	if(x<MOD)return x;
	return x%MOD;
}
void resuelva(){
	int x,y;
	int now=1,bef=0;
	//scanf("%s%s",a,b);
	//la = strlen(a);
	//lb = strlen(b);
	int len;
	cin>>len;
	scanf("%s%n\n",a,&la);
	scanf("%s%n\n\n",b,&lb);
 
	
	for(int i=0;i<=la;i++){
		swap(now,bef);
		for(int j=0;j<=lb;j++){
			if(i==0 or j==0){
				lcs[now][j] = 0;
				 dp[now][j] = 1;
			}else{
				if(a[i-1]==b[j-1]){
					lcs[now][j] = lcs[bef][j-1]+1;
				     dp[now][j] =  dp[bef][j-1];
				}else{
					lcs[now][j]=max(lcs[bef][j],lcs[now][j-1]);
					dp[now][j]=0;
					if(lcs[bef][j]==lcs[now][j])
						dp[now][j]=f(dp[now][j]+dp[bef][j]);
					if(lcs[now][j-1]==lcs[now][j])
						dp[now][j]=f(dp[now][j]+dp[now][j-1]);
					if(lcs[bef][j-1]==lcs[now][j])
						dp[now][j]=f(dp[now][j]-dp[bef][j-1]);
				}
			}
		}
	}
	printf("%d\n",lcs[now][lb]);
}
int main(){
	int q;
	scanf("%d\n",&q);
	for(int i=1;i<=q;i++)
		resuelva();
}