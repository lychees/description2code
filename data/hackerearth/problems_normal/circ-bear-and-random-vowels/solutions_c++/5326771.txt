#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int N = 3005;
ll dp[N][N];
ll C[N][N];
const ll mod = 1e9+7;
bool vowel[26];
#define vi vector<int>
#define pb push_back
vi mul(vi& a,vi& b)
{
    vi c(a.size()+b.size()-1);
    for(int i = 0;i<a.size();i++)
        for(int j =0 ;j<b.size();j++)
            c[i+j] = (c[i+j]+a[i]*1ll*b[j])%mod;
    return c;
}
vi C1;
int main()
{
    for(int i = 0;i<=2;i++)
        dp[i][0] = 1;
    C[0][0] = 1;
    for(int i = 1;i<N;i++){
        C[i][0] = 1;
        for(int j = 1;j<=i;j++){
            dp[i][j] = dp[i-1][j-1];
            if(i>=2)
                dp[i][j]+=dp[i-2][j-1];
            if(i>=3)
                dp[i][j]+=dp[i-3][j-1];
            dp[i][j]%=mod;
            C[i][j] = (C[i-1][j-1]+C[i-1][j])%mod;
        }
    }
    vowel[0]=1;
    vowel['e'-'a'] = 1;
    vowel['i'-'a'] = 1;
    vowel['o'-'a'] = 1;    
    vowel['u'-'a'] = 1;
    vowel['y'-'a'] = 1;
    int v = 0,c = 0;
    string s;
    int n,k;
    cin>>n>>k>>s;
    int cnt =0 ;
    vector<int> nums;
    for(int i = 0;i<n;i++)
    {
        if(vowel[s[i]-'a'])
        {
            nums.push_back(cnt);
            cnt = 0;
            v++;
        }
        else
        {
            cnt++;
            c++;
        }
    }
    nums.push_back(cnt);
    C1.pb(1);
    for(int i = 0;i<nums.size();i++)
    {   
        vi poly;
        for(int j = 0;j<=nums[i];j++)
            poly.pb(dp[nums[i]][j]);
        C1  = mul(C1,poly);
    }
    
    ll ans = 0;
    for(int r = 0; r<=k;r++)
    {
        if(c-r <= v+r && r <= c && r<C1.size() && k-r <=v)
        ans = (ans + C[v][k-r]*C1[r])%mod;
    }
    cout<<(C[n][k]-ans+mod)%mod<<endl;
}