using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define PI 2 * acos(0)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<int,II> III;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;

struct node{
    int l,r,vt;

    bool operator <(const node &op)const{
        return op.r>r;
    }
}f[100000+10];

int n,m,d,a[100000+10],dau,res,ff[100000+10],l,r,ans[100000+10],p[100000+10];

void update(int x){
    while (x<=n){
        ff[x]++;
        x+=x&(-x);
    }
}

int get(int x){
    int sum=0;
    while (x>0){
        sum+=ff[x];
        x-=x&(-x);
    }
    return sum;
}

int main(){
 //   freopen("shil-and-special-pairs.inp", "r", stdin);
 //   freopen("shil-and-special-pairs.out", "w", stdout);
    ios_base::sync_with_stdio (false);
    cin >> n >> m >> d;
    FORE(i,1,n){
        cin >> a[i];
        p[ a[i] ]=i;
    }
    FORE(i,1,m){
        cin >> f[i].l >> f[i].r;
        f[i].vt=i;
    }
    sort(f+1,f+m+1);
    dau=1;
    FORE(i,1,n){

        FORE(k, max(1,a[i]-d), min(n,a[i]+d))
        if (p[k]<=i) update(p[k]);

        while (dau<=m && f[dau].r==i){
            ans[ f[dau].vt ]=get(f[dau].r)-get(f[dau].l-1);
            dau++;
        }
    }
    FORE(i,1,m) cout << ans[i] << "\n";
}
