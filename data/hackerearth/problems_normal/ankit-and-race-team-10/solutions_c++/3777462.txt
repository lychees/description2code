#include <bits/stdc++.h>
using namespace std;
const int MAX = 1 << 20;
const int MOD = 1e9 + 7;
#define N 2123456
long long a[MAX];
long long fac[N], ifac[N];
long long PowerMod(long long a, long long n){
    long long ret = 1;
    while (n){
        if (n & 1){
            ret *= a;
            ret %= MOD;
        }
        a *= a;
        a %= MOD;
        n /= 2;
    }
    return ret;
}
 
inline void pre(){
    int i;
    fac[0] = 1;
    for (i = 1; i < N; i++){
        fac[i] = (i * fac[i - 1]) % MOD;
    }
    ifac[N - 1] = PowerMod(fac[N - 1], MOD - 2);
    for (i = N - 2; i >= 0; i--){
        ifac[i] = ((i + 1) * ifac[i + 1]) % MOD;
    }
}
 
long long com(int n, int r){
    long long ret = fac[n];
    ret *= ifac[r];
    ret %= MOD;
    ret *= ifac[n - r];
    ret %= MOD;
    return ret;
}
void solve(int tc){
    int n, k;
    scanf("%d %d", &n, &k);
    for(int i = 0; i < n; i++)scanf("%lld", a+i);
    sort(a, a+n);
    long long ans = 0;
    for(int i = 0; i < n-k+1; i++){
        long long temp = com(n-i-1, k-1);
        temp = (temp*a[i])%MOD;
        ans = (ans+temp)%MOD;
    }
    printf("%lld\n", ans);
}
int main(){
    int tc;
    pre();
    scanf("%d", &tc);
    for(int i = 1; i <= tc; i++)solve(i);
    return 0;
}