#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 100;
const int M = 1e9 + 7;

int powmod(int a, int b) {
	int res = 1;
	while (b) {
		if (b&1) res = res*1LL*a%M;
		a = a*1LL*a%M;
		b >>= 1;
	}
	return res;
}

int rev(int n) {
	return powmod(n, M-2);
}

int f[N];
int inv[N];

int nCk(int n, int k) {
	if (n < k) return 0;
	
	int e = f[n];
	int d = inv[n-k]*1LL*inv[k]%M;
	return e*1LL*d%M;
}

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	f[0] = 1;
	for (int i = 1; i < N; ++i) f[i] = f[i-1] * 1LL * i % M;
	inv[0] = 1;
	for (int i = 1; i < N; ++i) inv[i] = rev(f[i]);
	int t;
	cin >> t;
	while (t--) {
		int k, m;
		cin >> k >> m;
		for (int i = 0; i < k; ++i) {
			int x;
			cin >> x;
			m -= x;
		}
		if (m < 0) {
			cout << "0\n";
			continue;
		}
		cout << nCk(m+k-1, k-1) << '\n';
	}
    return 0;
}
