#include <bits/stdc++.h>
using namespace std;
#define PII pair <int, int>
int main()
{
	ios_base::sync_with_stdio(0); 
	set <PII> store;
	int Q; cin >> Q;
	assert (1<=Q and Q<=100000); 
	for (int g=0; g<Q; g++)
	{
		int T; cin >> T;
		assert (1<=T and T<=4); 
		if (T==1)
		{
			int X; cin >> X;
			assert (1<=X and X<=100000); 
			set <PII> :: iterator r = store.upper_bound(PII(X, -1)); 
			if (r==store.end() || (*r).first!=X) store.insert(PII(X, 1)); 
			else{
				int k = (*r).first, kk = (*r).second; 
				store.insert(PII(k, kk+1)); 
				store.erase(PII(k, kk));
			}
		}
		else if (T==2)
		{
			int X; cin >> X;
			assert (1<=X and X<=100000);
			set <PII> :: iterator r = store.upper_bound(PII(X, -1)); 
			if (r==store.end() || (*r).first!=X)
			{
				cout << -1 << '\n'; 
			}
			else
			{
				int k = (*r).first, kk = (*r).second; 
				if ((*r).second==1)
				{
					store.erase(PII(k, kk)); 		
				}
				else
				{
					store.insert(PII(k, kk-1)); 
					store.erase(PII(k, kk));
				}
			}
		}
		else if (T==3)
		{
			if (!store.size())
			{
				cout << -1 << '\n'; 
			}
			else
			{
				set <PII> :: iterator x = store.end(); x--;
				cout << (*x).first << '\n'; 
			}
		}//
		else
		{
			if (!store.size()) cout << -1 << '\n';
			else
			{
				cout << (*store.begin()).first << '\n';
			}
		}
	}
	return 0; 
}