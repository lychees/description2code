#include<bits/stdc++.h>
using namespace std;
int main()
{
    string s1,s2,s3;
    cin>>s1>>s2>>s3;
    long i,j;
    string a_b="";
    string b_c="";
    string a_c="";
    string a_b_c="";
    for(i=0;i<s2.size();i++)
    {
        for(j=i;j<s2.size();j++)
        {
            string tmp=s2.substr(i,j-i+1);
            int pos=s1.find(tmp);
            if(pos!=std::string::npos)
            {
                if(a_b.size()<tmp.size())
                    a_b=tmp;
            }
        }
    }
    for(i=0;i<s3.size();i++)
    {
        for(j=i;j<s3.size();j++)
        {
            string tmp=s3.substr(i,j-i+1);
            int pos=s1.find(tmp);
            if(pos!=std::string::npos)
            {
                if(a_c.size()<tmp.size())
                    a_c=tmp;
            }
        }
    }
    for(i=0;i<s3.size();i++)
    {
        for(j=i;j<s3.size();j++)
        {
            string tmp=s3.substr(i,j-i+1);
            int pos=s2.find(tmp);
            if(pos!=std::string::npos)
            {
                if(b_c.size()<tmp.size())
                    b_c=tmp;
            }
        }
    }
    for(i=0;i<s3.size();i++)
    {
        for(j=i;j<s3.size();j++)
        {
            string tmp=s3.substr(i,j-i+1);
            int pos=a_b.find(tmp);
            if(pos!=std::string::npos)
            {
                if(a_b_c.size()<tmp.size())
                    a_b_c=tmp;
            }
        }
    }
    long ans=0;
    ans=s1.size()+s2.size()+s3.size()-a_b.size()-b_c.size()-a_c.size()+a_b_c.size();
    cout<<ans;
    return 0;
}
