#include <bits/stdc++.h>
using namespace std;
const int MAXN = 100005;
vector <int> G[MAXN],RG[MAXN],scc_order;
bool vis[MAXN];
int ctr[MAXN],col[MAXN];
void rdfs(int pos)
{
	vis[pos] = true;
	for (int i = 0; i < RG[pos].size(); ++i)
	{
		if(!vis[RG[pos][i]])
			rdfs(RG[pos][i]);
	}
	scc_order.push_back(pos);
}
void dfs(int pos, int ccol, int &cctr)
{
	vis[pos] = true;
	col[pos] = ccol;
	cctr++;
	for (int i = 0; i < G[pos].size(); ++i)
	{
		if(!vis[G[pos][i]])
			dfs(G[pos][i],ccol,cctr);
	}
}
int main()
{
	// freopen("input.txt", "r", stdin);
	// ios_base::sync_with_stdio(0);
	int n,m;
	scanf("%d %d", &n, &m);
	for (int i = 0; i < m; ++i)
	{
		int u,v;
		scanf("%d %d", &u, &v);
		G[u].push_back(v);
		RG[v].push_back(u);
	}
	for (int i = 1; i <= n; ++i)
		if(!vis[i])
			rdfs(i);
	memset(vis, false, sizeof vis);
	while(!scc_order.empty())
	{
		int pos = scc_order.back();
		scc_order.pop_back();
		if(!vis[pos])
			dfs(pos,pos,ctr[pos]);
	}
	for (int i = 1; i <= n; ++i)
	{
		if(ctr[col[i]] >= 2)
			printf("1 ");
		else
			printf("0 ");
	}
	return 0;
}