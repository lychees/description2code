#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<string>
#include<vector>
#include<map>
#include<stack>
#include<queue>
#include<algorithm>

using namespace std;

int graph[1000002], color[1000002], cnt[1000002];

int dfs(int v)
{
	if(color[v] == 1)
	{
		if(cnt[v] != 0)
			return cnt[v];
		else
		{
			int count_2 = 1;
			int i = graph[v];
			while(i!=v)
			{
				i = graph[i];
				count_2++;
			}
			i = graph[v];
			cnt[v] = count_2;
			while(i!=v)
			{
				cnt[i] = count_2;
				i = graph[i];
			}
			return count_2;
		}
	}

	color[v] = 1;

	int c;
	c = 1 + dfs(graph[v]);
	if(cnt[v] == 0)
		cnt[v] = c;
	return cnt[v];
}

int main()
{
	int t;

	cin>>t;

	while(t--)
	{
		int n;
		int color2[1000002];

		scanf("%d", &n);

		memset(color, 0, n*sizeof(int));
		memset(cnt, 0, n*sizeof(int));

		for(int i=0; i<n; i++)
		{
			scanf("%d", &graph[i]);
		}
		
		for(int i=0; i<n; i++)
		{
			int c = dfs(i);
		}

		int max_pos = 0;

		for(int i=0; i<n; i++)
		{
		//	cout<<cnt[i]<<" ";
			if(cnt[i]>cnt[max_pos])
				max_pos = i;
		}
		printf("%d\n", max_pos);
	}
	return 0;
}
