#include <iostream>
using namespace std;

unsigned long long check[8];
bool f;
short k;

struct dish{
    unsigned long long cn[8];
}d[10];

bool IS(dish e, int A){
    return ((e.cn[A>>6]>>(A&63))&1);
}

void ST(dish &e, int A){
    e.cn[A>>6]|=1ULL<<((A&63));
}

void mfunc(dish dum, short i, short p){
    short j;
    for(j = 0; j < 8; ++j)dum.cn[j] |= d[i].cn[j];
    if(!p){
        for(j = 0; j < 8; ++j)if(dum.cn[j] != check[j])break;
        if(j == 8)f = 0;
    }
    else for(++i; i < k - p + 1 && f; ++i)mfunc(dum, i, p - 1);
}

int main(){
    ios_base::sync_with_stdio(0);
    short t, j;
    int i, n;
    char a[15];
    dish dum;
    cin >> t;
    while(t--){
        cin >> n >> k;
        for(i = 0; i < 8; ++i)check[i] = dum.cn[i] = 0;
        for(i = 0; i < k; ++i)for(j = 0; j < 8; ++j)d[i].cn[j] = 0;
        for(i = 0; i < n; ++i){
            check[i>>6]|=1ULL<<((i&63));
            cin >> a;
            for(j = 0; j < k; ++j)if(a[j] == '1')ST(d[j], i);
        }
        f = 1;
        for(i = 1; i < k && f; ++i)for(j = 0; j < k - i + 1 && f; ++j)mfunc(dum, j, i - 1);
        if(f)cout << k << '\n';
        else cout << i - 1 << '\n';
    }
    return 0;
}
