#include <iostream>
using namespace std;
 
int bsize=32;
int bno=33;
int blocks[1001][33];
int lazy[1001][33];
int color[1001][1001];
 
void initcolor()
{
	int i,j;
	for (i=0;i<1000;i++)
	{
		for (j=0;j<1000;j++)
		{
			color[i][j]=0;
		}
	}
}
void init()
{
	int i,j;
	for (i=0;i<1000;i++)
	{
		for (j=0;j<bno;j++)
		{
			lazy[i][j]=-1;
			blocks[i][j]=0;
		}
	}
}
 
void update(int row,int l,int r,int c)
{
 
	int i=l,start,end,no;
	if (i%bsize!=0)
	{
		no=i/bsize;
		start=no*bsize;
		end=start+bsize;
		if (lazy[row][no]!=-1)
		{
			for (i=start;i<l;i++)
			{
//				cout<<"Updated pos at block out "<<row<<" "<<i<<endl;
				
					color[row][i]=blocks[row][no];
			}
			if (r<end)
			{
				for (i=r+1;i<end;i++)
				{
					color[row][i]=blocks[row][no];
				}
			}
			lazy[row][no]=-1;
		}
		else
		{
			i=l;
		}
		if (r<end)
		{
			end=r+1;

		}
		for (i=l;i<end;i++)
		{
//			cout<<"Updated pos at "<<row<<" "<<i<<endl;
			color[row][i]=c;
		}
	}
	no=i/bsize;
//	cout<<(i%bsize)<<" "<<((i+bsize)<=r)<<endl;
	while (i%bsize==0 && (i+bsize)<=r)
	{
//		cout<<"Updated block at "<<row<<" "<<i<<" "<<no<<endl;
		blocks[row][no]=c;
		lazy[row][no]=0;
		no+=1;
		i+=bsize;
	}
 
	if (i<=r)
	{
		no=i/bsize;
		start=no*bsize;
		end=start+bsize;
		for (;i<=r;i++)
		{
//			cout<<"Updated pos at "<<row<<" "<<i<<endl;
			color[row][i]=c;
		}
		if (lazy[row][no]!=-1)
		{
			for (;i<end;i++)
			{
//				cout<<"Updated pos at block out "<<row<<" "<<i<<endl;
				color[row][i]=blocks[row][no];
			}
			lazy[row][no]=-1;
		}
	}
}
int main()
{
	int n,m,sr,sc,er,ec,tsr,tsc,tec,ter,i,j,c,start,end,ans,k;
	char col;
	initcolor();
	init();
	cin>>n>>m;
	while (m--)
	{
		cin>>tsr>>tsc>>ter>>tec>>col;
		if (col=='w') c=0;
		else c=1;
		tsr--;
		tsc--;
		ter--;
		tec--;
		sr=min(tsr,ter);
		sc=min(tsc,tec);
		er=max(tsr,ter);
		ec=max(tsc,tec);
		for (int ii=sr;ii<=er;ii++)
		{
			update(ii,sc,ec,c);
 
			
 
 
 
		}
}
		for (i=0;i<n;i++)
			{
				for (j=0;j<bno;)
				{
		//			cout<<i<<" "<<j<<" "<<lazy[i][j]<<endl;
					if (lazy[i][j]!=-1)
					{
						start=j*bsize;
						end=start+bsize;
						for (k=start;k<end;k++)
						{
		//					cout<<"LOL"<<k<<endl;
							color[i][k]=blocks[i][j];
						}
						lazy[i][j]=-1;
					}
					j+=1;
				}
			}
			ans=0;
			for (i=0;i<n;i++)
			{
				 for (j=0;j<n;j++)
				 {
				 	if (color[i][j]==0)
				 	{
				 		 ans++;
				 	}
				 }
				 
			}
			cout<<ans<<endl;
 
//		for (i=0;i<n;i++)
//		{
//			for (j=0;j<n;j++) cout<<color[i][j]<<" ";
//			cout<<endl;
//		}
//	}
//	cout<<lazy[84][4]<<" "<<n<<endl;
	
}