#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
typedef long long LL;
using namespace std;
#define long long int
int main()
{
    int n; si(n);
    int a[n];
    REP(i,n) si(a[i]);
    sort(a,a+n);
    while(a[n-1]!=0)
    {
        int ct=0;
        REP(i,n)
        {
            if(a[i]==0) continue;
            int j=i;
            int m=a[i];
            while(j<n)
            {
                a[j]-=m;
                ct++;
                j++;
            }
            break;
        }
        printf("%d\n",ct);;
        //sort(a,a+n);
    }
	return 0;
}
