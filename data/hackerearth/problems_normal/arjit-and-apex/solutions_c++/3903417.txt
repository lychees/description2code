#include <bits/stdc++.h>

using namespace std;

int m, n;
int h, g;
int x, y;
int t;
bool old[100010];
multiset<pair<int, int> > great;
multiset<int> good;
vector<pair<int, int> > v;

int main(){
    cin>>t;

    for(int inst=0; inst<t; inst++){
        great.clear();
        good.clear();
        v.clear();

        memset(old, false, 100010);

        cin>>n>>m;

        for(int i=0;i<m;i++){
            cin>>x>>y;
            v.push_back(make_pair(x,y));
        }

        for(int i=0;i<n; i++){
            cin>>x>>y;
            great.insert(make_pair(x, y));
            good.insert(y);
        }

        cin>>g>>h;
        int qtd_good=0, qtd_great=0;

        for(int i=0;i<m; i++){
            x=v[i].first;
            y=v[i].second;
            if(great.find(make_pair(x,y))!=great.end()){
                qtd_great++;
                qtd_good++;
                great.erase(great.find(make_pair(x,y)));
                good.erase(good.find(y));
                old[i]=true;
            }
        }

        for(int i=0;i<m; i++){
            if(!old[i]){
                x=v[i].first;
                if(good.find(x)!=good.end()){
                    qtd_good++;
                    good.erase(good.find(v[i].first));
                }
            }
        }

        if(g<=qtd_good&&h<=qtd_great)cout<<"Great\n";
        else if(g<=qtd_good)cout<<"Good\n";
        else cout<<":(\n";
    }

    return 0;
}
