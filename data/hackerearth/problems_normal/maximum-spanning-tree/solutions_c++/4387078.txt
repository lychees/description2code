#include <cstdio>
#include <utility>
#include <algorithm>

using namespace std;

typedef pair<long long, pair<int, int> > pll;
typedef long long ll;

int arr[5005];

pll e[100005];

int root(int s)
{
	int i = s;
	while(i != arr[i]) {
		arr[i] = arr[arr[i]];
		i = arr[i];
	}
	return i;
}

void unite(int a, int b)
{
	int root_a = root(a);
	int root_b = root(b);
	arr[root_a] = root_b;
}

bool cmp(pll const &a, pll const &b) { return a.first > b.first; }

int main()
{
	int t,n,m,a,b;
	ll c,max_weight;
	scanf("%d", &t);
	while(t--){
		max_weight = 0;
		scanf("%d %d", &n, &m);
		for(int i = 0; i < m; i++) {
			scanf("%d %d %lld", &a, &b, &c);
			e[i].first = c;
			e[i].second.first = a;
			e[i].second.second = b;
		}

		for(int i = 1; i <= n; i++)
			arr[i] = i;

		sort(e, e+m, cmp);

		for(int i = 0; i < m; i++) {
			if(root(e[i].second.first) != root(e[i].second.second)) {
				max_weight += e[i].first;
				unite(e[i].second.first, e[i].second.second);
			}
		}

		printf("%lld\n", max_weight);
	}
}
