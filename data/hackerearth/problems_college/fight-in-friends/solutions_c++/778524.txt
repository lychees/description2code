#include <stdio.h>
#include<iostream>
#include <limits.h>
#define ll long long
using namespace std;

ll graph[1005][1005];

ll minDistance(ll dist[], bool sptSet[],ll V)
{
   ll min = INT_MAX, min_index;

   for (ll v = 0; v < V; v++)
     if (sptSet[v] == false && dist[v] <= min)
         min = dist[v], min_index = v;

   return min_index;
}

void dijkstra(ll src,ll V,ll dest)
{
     ll dist[V];

     bool sptSet[V];
     for (ll i = 0; i < V; i++)
        dist[i] = INT_MAX, sptSet[i] = false;

     dist[src] = 0;

     for (ll count = 0; count < V-1; count++)
     {
       int u = minDistance(dist, sptSet,V);

       sptSet[u] = true;

       for (ll v = 0; v < V; v++)

         if (!sptSet[v] && graph[u][v] && dist[u] != INT_MAX && dist[u]+graph[u][v] < dist[v])
            dist[v] = dist[u] + graph[u][v];
     }
     if(dist[dest]!=INT_MAX)
     cout<<dist[dest];
     else
     cout<<-1;
}

int main()
{
   ll n,m,a,b;
   cin>>n>>m>>a>>b;
   for(ll i=0;i<n;i++)
        for(ll j=0;j<n;j++)
         {
         if(i!=j)
         graph[i][j]=1;
         }
int u,v;
for(ll i=0;i<m;i++)
{
    cin>>u>>v;
    u--;
    v--;
    graph[u][v]=0;
    graph[v][u]=0;
}
    dijkstra(a-1,n,b-1);

    return 0;
    }