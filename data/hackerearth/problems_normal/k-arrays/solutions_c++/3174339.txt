#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define f first
#define maxn 20010000
#define s second
#define ll long long int
#define inf 1000000014
#define infl (ll)(1e18)
#define mod 1000000007
#define sz(x) (int) x.size()
using namespace  std;
ll arr[20][20];
ll sum[20];
ll modexp(ll a,ll b)
{
  if(b==0)
    return 1ll;
  if(b==1ll)
    return a;
  if(b%2==1ll)
    return (a*modexp(a,b-1))%mod;
  else
    return modexp((a*a)%mod,b/2);
}
int main(int argc, char const *argv[])
{
  int t,n,k;
   //cout<<modexp(4,5);
  cin>>t;
  while(t--)
  {
    cin>>n>>k;
    for(int i=1;i<=k;i++)
    {
      for(int j=1;j<=n;j++)
      {
        cin>>arr[i][j];
      }
    }//input
    memset(sum,0,sizeof sum);
  for(int i=1;i<=n;i++)
  {
    for(int j=1;j<=k;j++)
    {
      sum[i]+= arr[j][i];
    }
  }
  //cout<<sum[1]<<" "<<sum[2]<<"\n";
  ll maxp = -1ll; ll minp = infl;
  int maxs = 0;int mins = inf;
 for(int i=1;i < 1<<n;i++)
 {
  ll pro=1ll;int taken=0;
  for(int j=0;j<n;j++)
  {
    if(i&1<<j)
    {
      pro=(pro*sum[j+1])%mod;
      taken++;
    }
  }
 // cout<<pro<<"\n";
    pro = (pro*modexp(taken,mod-2))%mod;
   // cout<<pro<<"\n";
   if(pro>maxp)
   {
    maxp = pro;
    maxs = taken;
   }
   if(pro<minp)
   {
    minp = pro;
    mins = taken;
   }
   if(pro==maxp)
   {
    if(maxs>taken)
      maxs = taken;
   }
   if(pro==minp)
   {
    if(mins<taken)
    {
      mins = taken;
    }
   }
  }
//  cout<<maxp<<" "<<minp<<" "<<maxs<<" "<<mins<<"\n";
  cout<<(maxp^minp)<<" "<<(maxs^mins)<<"\n";
 }
  return 0;
}
