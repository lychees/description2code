#include <iostream>
 
using namespace std;
 
int A[22][22];
bool visited[22][22];
int coun = 0, n;
 
void dfs(int i, int j)
{
    visited[i][j] = true;
    if(visited[n][n] == true)
    {
        coun++;
        visited[n][n] = false;
        return;
    }
 
 
    if(A[i][j+1] == 1 && visited[i][j+1] == false)
        dfs(i, j+1);
 
    if(A[i+1][j] == 1 && visited[i+1][j] == false)
        dfs(i+1, j);
 
    if(A[i][j-1] == 1 && visited[i][j-1] == false)
        dfs(i, j-1);
 
    if(A[i-1][j] == 1 && visited[i-1][j] == false)
        dfs(i-1,j);
 
    visited[i][j] = false;
}
 
void initialize()
{
    for(int i=0; i<22; i++)
        for(int j=0; j<22; j++)
            visited[i][j] = false;
}
 
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int temp;
        cin >> n;
 
        for(int i=0; i<22; i++)
            for(int j=0; j<22; j++)
                A[i][j] = 0;
 
        for(int i=1; i<=n; i++)
            for(int j=1; j<=n; j++)
            {
                cin >> temp;
                if(temp == 0)
                    A[i][j] = 1;
                else
                    A[i][j] = 0;
            }
 
        initialize();
 
        dfs(1,1);
 
        cout << coun << endl;
        coun = 0;
 
 
 
 
    }
    return 0;
}