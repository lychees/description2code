#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define MAX 1000000
#define ll long long int
int lp[MAX], primes[MAX];
int pr;
long long mult(long long a, long long b, long long mod)
{
	__int128 res = a;
	res *= b;
	res %= mod;
	a = res;
	return a;
}
long long modulo(long long a, long long b, long long c){
	long long x = 1, y = a; 
	while (b > 0){
		if (b % 2 == 1){
			x = mult(x, y, c);
		}
		y = mult(y, y, c);
		b /= 2;
	}
	return x%c;
}
bool Miller(long long p, int iteration){
	if (p<2){
		return false;
	}
	if (p != 2 && p % 2 == 0){
		return false;
	}
	srand(time(NULL));
	long long s = p - 1;
	while (s % 2 == 0){
		s /= 2;
	}
	for (int i = 0; i<iteration; i++){
		long long a = rand() % (p - 1) + 1, temp = s;
		long long mod = modulo(a, temp, p);
		while (temp != p - 1 && mod != 1 && mod != p - 1){
			mod = mult(mod, mod, p);
			temp *= 2;
		}
		if (mod != p - 1 && temp % 2 == 0){
			return false;
		}
	}
	return true;
}
void siever(void)
{
	int i,j;
	pr = 0;
	for(i=2;i<MAX;++i)
	{
		if(lp[i] == 0)
		{
			primes[pr++] = i;
			for(j=i;j<MAX;j+=i)
				lp[j] =1;
		}
	}
}
bool ck(ll x)
{
	int i;
	int cnt = 0;
	for(i=0;i<pr && primes[i]<=x;++i)
	{
		cnt = 0;
		if(x%primes[i] == 0)
		{
			while(x%primes[i] == 0)
			{
				x/=primes[i];
				cnt++;
			}
		}
		if(cnt > 1) return false;
	}
	return true;
}
int main()
{
    //cout << "Hello World!" << endl;
    int t;
    siever();
    cin>>t;
    while(t--)
    {
    	ll x;
    	cin>>x;
    	if(x == 1) cout<<"Yes\n";
    	//else if(Miller(x,3)) cout<<"Yes\n";
    	else
    	{
    		if(ck(x)) cout<<"Yes\n";
    		else cout<<"No\n";
    	}
    }
    return 0;
}
