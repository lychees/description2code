#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
ll mod = 1e9 + 7;
vector<ll> fact;
void pre(){
	fact.pb(1);
	fe(i,100010){
		fact.pb((fact[i-1]*i)%mod);
	}
}
ll C(ll n, ll r){
	ll nu,de;
	nu=fact[n];
	de=(fact[r]*fact[n-r])%mod;
	return (nu*modpow(de,mod-2,mod))%mod;
}
int main(){
	pre();
	ll t,l,r,n,ans,h;
	string s;
	sl(t);
	while(t--){
		ans=0; l=0;r=0;
		cin>>s; sl(n);
		f(i,s.length()) if(s[i]=='l') r++;
		h=(n-1)/2;
//		cout<<r<<endl;
		f(i,s.length()){
			if(s[i]=='l'){
				l++; r--;
				continue;
			}
	//		cout<<l<<" "<<r<<" "<<h<<endl;
			if(l>=h && r>=h){
				ans+= (C(l,h)*C(r,h))%mod;
				if(ans>=mod) ans-=mod;
			}
		}
		printf("%Ld\n",ans);
	}
	return 0;
}