#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef vector<pii> vpi;
typedef vector<pll> vpl;
typedef vector<string> vs;
#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define all(v) v.begin(),v.end()
#define Pi(x) printf("%d", x)
#define Pl(x) printf("%lld", x)
#define os() printf(" ")
#define nl() printf("\n");
#define F first
#define S second
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define mem(x,i) memset(x,i,sizeof(x))
#define fori(i,s,n) for(int i=(s);i<(n);++i)
#define forl(i,s,n) for(ll i=(s);i<(n);++i)
#define ford(i,s,n) for(int i=(n)-1;i>=(s);--i)
#define forld(i,s,n) for(ll i=(n)-1;i>=(s);--i)
#define INF 8944674407370955161LL
#define debug(i,st,arr) fori(i,0,st){cout<<arr[i]<<" ";}cout<<endl;
#define debugl(i,st,arr) forl(i,0,st){cout<<arr[i]<<" ";}cout<<endl;
#define forci(i,sw) for((i)=(sw).begin();(i)!=(sw).end();(i)++)
#define forcd(i,sw) for((i)=(sw).rbegin();(i)!=(sw).rend();(i)++)
#define debugit(i,sw) forci(i,sw){cout<<i->F<<" " << i->S<<endl;}cout<<endl;
#define sync() ios_base::sync_with_stdio(0)


int n,m;
int mat[1002][1002];
int visited[1002][1002];

int bfs(int i, int j)
{
    queue<pii> q;
    q.push(mp(i,j));
    visited[i][j] = 1;
    int node = 1;
    
    while (!q.empty()) {
        int x = q.front().F;
        int y = q.front().S;
        q.pop();
        
        fori(i,-1,2) {
            fori(j,-1,2) {
                if (!visited[x+i][y+j] && mat[x+i][y+j]) {
                    visited[x+i][y+j] = 1;
                    q.push(mp(x+i,y+j));
                    node++;
                }
            }
        }
    }
    return node;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    
    int t;
    cin >> t;
    while (t--) {
        cin >> n >> m;
        memset(mat,0,sizeof(mat));
        memset(visited,0,sizeof(visited));
        
        fori(i,1,n+1) {
            fori(j,1,m+1) {
                cin >> mat[i][j];
            }
        }
        int cnt = 0;
        int ans = 0;
        fori(i,1,n+1) {
            fori(j,1,m+1) {
                if (!visited[i][j] && mat[i][j]) {
                    ans = max(bfs(i,j),ans);
                    cnt++;
                }
            }
        }
        cout << cnt << " " << ans << endl;
    }
    return 0;
}