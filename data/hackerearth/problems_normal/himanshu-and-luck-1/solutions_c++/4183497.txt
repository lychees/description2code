#include <bits/stdc++.h>
#define lli long long int
#define M 1000000007

using namespace std;

void swap(int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}


lli f(lli n) {
    lli l = 0;
    lli h = 2 * 1000000000;

    while (l < h) {
        lli m = (l + h) / 2;
        lli tmp = (m * (m + 1)) / 2;
        if (tmp >= n) {
            h = m;
        } else {
            l = m + 1;
        }
    }
    return l;
}

void reverseA(int A[], int l, int r) {
    while (l < r) {
        swap(&A[l], &A[r]);
        l++;
        r--;
    }
}
bool isSorted(int A[], int n) {
    for (int i = 0; i < n - 1; i++) {
        if (A[i] > A[i + 1]) {
            return false;
        }
    }
    return true;
}

void sortSeg(int A[], int n) {
    int l = -1, r = -1;
    for (int i = 0; i < n - 1; i++) {
        if (A[i] > A[i + 1]) {
            l = i;
            break;
        }
    }
    if (l == -1) {
        cout << l << " " << r << endl;
        return;
    }
    for (int i = n - 1; i > 0; i--) {
        if (A[i] < A[i - 1]) {
            r = i;
            break;
        }
    }
    if (l > r) {
        swap(&l, &r);
    }
    int minE = INT_MAX;
    int maxE = INT_MIN;
    for (int i = l; i <= r; i++) {
        if (A[i] > maxE) {
            maxE = A[i];
        }
        if (A[i] < minE) {
            minE = A[i];
        }
    }
    for (int i = 0; i < l; i++) {
        if (A[i] > minE) {
            l = i;
            break;
        }
    }
    for (int i = n - 1; i > r; i--) {
        if (A[i] < maxE) {
            r = i;
            break;
        }
    }
    reverseA(A, l, r);
    if (isSorted(A, n)) {
        cout << l + 1 << " " << r + 1 << endl;
    } else {
        cout << "-1 -1\n";
    }
}

vector<lli> lucky;

void recur(lli n) {
    lucky.push_back(n);
    if (n < 0 || n >= 1000000000000000000) {
        return;
    }
    recur(10* n + 4);
    recur(10 * n + 7);
}

int main()
{
    int n, t, t1, t2, x, y, z;
    int A[100005];
    int fre[26];
    lli l, r;

    recur(0);
    sort(lucky.begin(), lucky.end());

    cin >> t;
    while (t--) {
        cin >> l >> r;
        int en = upper_bound(lucky.begin(), lucky.end(), r) - lucky.begin();
        int st = upper_bound(lucky.begin(), lucky.end(), l - 1) - lucky.begin();
        cout << en - st << endl;
    }

    return 0;
}
