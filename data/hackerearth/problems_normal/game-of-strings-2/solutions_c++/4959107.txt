#include <iostream>
#include <vector>
#include <fstream>
#include <stack>
#include <array>
#include <deque>
#include <queue>
#include <set>
#include <unordered_set>
#include <list>
#include <forward_list>
#include <iterator>
#include <tuple>
#include <map>
#include <functional>
#include <unordered_map>
#include <iomanip>
#include <string>
#include <utility>
#include <deque>
#include <iterator>
#include <string>
#include <iomanip>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <climits>
#include <cstdbool>
#include <cassert>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define sz(a) int((a).size()) 
#define pb push_back 
#define NIL -1
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
const int INF = 1<<29;
typedef long long ll;
inline int two(int n) { return 1 << n; }
inline int test(int n, int b) { return (n>>b)&1; }
inline void set_bit(int & n, int b) { n |= two(b); }
inline void unset_bit(int & n, int b) { n &= ~two(b); }
inline int last_bit(int n) { return n & (-n); }
inline int ones(int n) { int res = 0; while(n && ++res) n-=n&(-n); return res; }
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii; 
typedef list<int> li; 
typedef list<li> lli; 

//your code goes below this line
/////////////////////////////////////////////////////////////////////
void failure(int *f, string& s,int& maxmatch ,int k) {
    f[0] = 0;
    int i  = 1;
    int j = 0;
    maxmatch = 0;
    int m = s.length();
    while (i < m) {
    	if(s[i] == s[j]) {
    	    f[i] = j+1;
    	     if(i <= k)
    	   		maxmatch = max(maxmatch, f[i]);
    	    i++; j++;
    	}
    	else if(j > 0) {
    		j = f[j-1];
    	}
    	else {
    		f[i] = 0;
    		i++;
    	}
    }
}
int main() {
  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
  int t, k;
  cin >> t;
  string s, pat, txt;
  while(t--) {
  	cin >> s;
  	int l = s.length();
  	int f[l];
  	cin >> k;
  	k--;
  	int maxmatch = 0;
    failure(f, s, maxmatch, k);
  	k = f[l-1];
  	while(k > maxmatch && k) 
  	    k = f[k-1];
  	if(k == 0) {
  	    cout << "Puchi is a cheat!\n";
  		continue;
  	}
  	else {
  	  REP(i, k)
  	    cout << s[i];
  	  cout << endl;
  	}
  }
  return 0;
}
