#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
void swap(long long int *days_ev, int i, int j)
{
	long long int temp = days_ev[i];
	days_ev[i] = days_ev[j];
	days_ev[j] = temp;
}

int partition(long long int *days_ev, int low, int high, int decreasing)
{
	int pivot = days_ev[low];
	int i = low+1, j = high;
	while (i<=j) {
		if (decreasing) {
		while (days_ev[i] >= pivot)
			i++;
		
		while (days_ev[j] < pivot)
			j--;
		} else {
		while (days_ev[i] <= pivot)
			i++;
		
		while (days_ev[j] > pivot)
			j--;			
		}
		if (i<j)
			swap(days_ev, i ,j);
	}
	swap(days_ev, low, j);
	return j;
}

void sort_nos(long long int *days_ev, int low, int high, int decreasing)
{
	if (low >= high)
		return;
		
	int p = 0;
	p = partition(days_ev, low ,high, decreasing);
	sort_nos(days_ev, low, p-1, decreasing);
	sort_nos(days_ev, p+1, high, decreasing);
}
int main()
{
 	ll T,N,i=0,cnt =0;
 	scanf("%lld", &T);
 	while(T--) {
 		cnt = 0;
 		scanf("%lld", &N);
 		ll A[N], B[N];
 		for (i=0; i<N; i++) 
 			scanf("%lld", &A[i]);
 		for (i=0; i<N; i++)
 			scanf("%lld", &B[i]);
 		sort_nos(A, 0, N-1, 0);
 		sort_nos(B, 0, N-1, 1);
 		for (i=0; i<N; i++) {
 			if (A[i]%B[i] ==0 or B[i]%A[i]==0)
 				cnt++;
 			//printf("%lld ",A[i]);
 		}
 		printf("%lld\n",cnt);
 	}
    return 0;
}
