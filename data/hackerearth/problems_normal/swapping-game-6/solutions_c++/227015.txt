#include <iostream>
#include<stdio.h>
#define null '\0'
using namespace std;


class C
{
	public:
	char val;
	C *next;
	C *prev;

	C(char val,C *prev)
	{
		this->val=val;
		this->prev=prev;
		next=null;
	}
	
};
class B
{
	char temparr[1001];
	int temparrindex=0;
	public:
	C *head=null;
	C *temp;
	C *temp1;	
	int totalelement=0;
	void add(char c)		
	{
		totalelement++;
		if(head==null)
		{
			head=new C(c,null);
		}
		else
		{
			temp=head;
			while(temp->next!=null)		
			temp=temp->next;
			temp1=new C(c,temp);			
			temp->next=temp1;
		}	
	}
	
	void putString()
	{
		temp=head;temparrindex=0;
		while(temp!=null)
		{
			//printf("%c",temp->val);
			temparr[temparrindex++]=temp->val;
			temp=temp->next;
		}
	}
	
	int isStringEqual(char *p)//0 if not, 1 if yes
	{
		int i=0;
		while(i<temparrindex)
		{
			if(temparr[i]!=p[i])
			return 0;
			i++;
		}
		return 1;
	}

	void printString()
	{
		temp=head;
		while(temp!=null)
		{
			printf("%c",temp->val);
			temp=temp->next;
		}
		
	}

	void swap()
	{
		C *last;
		C *temp3=head;	
		C *temp4;
		C *temp5;
		while(temp3->next!=null)
		temp3=temp3->next;

		last=temp3;
		int ns=0;
		int counter=0;
		int i=totalelement-1;
		int c1;
		while(counter<i-1)				
		{
			temp3=head;
			c1=counter+ns;
			while(c1>0)
			{
				temp3=temp3->next;
				c1--;
			}
			temp5=last;
			
			last->prev->next=null;
			last=last->prev;
			temp4=temp3->next;
			temp3->next=temp5;
			temp4->prev=temp5;
			temp5->prev=temp3;
			temp5->next=temp4;		
			ns++;
			i--;
			counter++;
		}
		
	}
};


int main()
{
    //cout << "Hello World!" << endl;
    int len=0;int temp;
    int k;char arr[1001];int i=0;int counter=0;int power=0;
    B *b1=new B();
    scanf("%d",&k);
    scanf("%s",&arr);
    
    while(arr[i]!='\0')
    {
    	b1->add(arr[i++]);
    	len++;
    }	
    
    do
    {
    	b1->swap();
    	b1->putString();
    	counter++;
    }while(!(b1->isStringEqual(arr)));
    
    k%=counter;
    
    while(k<counter)
    {
    	b1->swap();
    	k++;
    }
    b1->printString();
    printf("\n");
    
    
    return 0;
}





