#include<iostream>
#include<algorithm>
using namespace std;
long long int BinSearch(long long int array[],long long int n,long long int search)
{
	long long int first=0,last=n-1;
	long long int middle=(first+last)/2;
	while( first <= last )
    {
      if ( array[middle] < search )
        first = middle + 1;    
      else if ( array[middle] == search ) 
      {
        //System.out.println(search + " found at location " + (middle + 1) + ".");
        return 1;
      }
      else
         last = middle - 1;
 
      middle = (first + last)/2;
   }
   if(first>last)
   return 0;
}
long long int hasArrayTwoCandidates(long long int A[],long long int arr_size,long long int sum)
{
    long long int l, r;

    l = 0;
    r = arr_size-1; 
    while(l < r)
    {
         if(A[l] + A[r] == sum)
              return 1; 
         else if(A[l] + A[r] < sum)
              l++;
         else 
              r--;
    }    
    return -1;
}
int main()
{
	long long int n;
	cin>>n;
	long long int arr[n];
	for(long long int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	sort(arr,arr+n);
	long long int q;
	cin>>q;
	long long int val;
	for(long long int i=0;i<q;i++)
	{
		cin>>val;
		long long int ans=BinSearch(arr,n,val);
		if(ans==1)
		{
			cout<<"I Like You"<<endl;
			continue;
		}
		else
		{
			ans=hasArrayTwoCandidates(arr,n,val);
			if(ans==-1){
			cout<<"I Hate You"<<endl;
			continue;
			}
			else if(ans==1)
			{
				cout<<"I Like You"<<endl;
				continue;
			}
			
		}
	}
}