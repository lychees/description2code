#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;

#define MAX 100000
#define INF 2140000000
#define MOD 1000000009

vector< vector<long long> > mat_mul(vector< vector<long long> > &a, vector< vector<long long> > &b, long long n)  {
	vector< vector<long long> > ans(n,vector<long long>(n,0));

	for (long long i = 0; i < n; ++i) {
		for (long long j = 0; j < n; ++j) {
			long long sum = 0;
			for (long long k = 0; k < n; ++k) {
				sum += a[i][k]*b[k][j];
			}
			ans[i][j] = sum % MOD;
		}
	}
	
	return ans;
}

vector< vector<long long > > mat_expo(vector< vector<long long > > &mat, long long p, long long n) {
	vector< vector<long long> > ans(n,vector<long long > (n,0)), t = mat;

	for (long long i = 0; i < n; ++i) 
		ans[i][i] = 1;

	while(p) {
		if(p%2) {
			ans = mat_mul(ans,t,n);
		}

		t = mat_mul(t,t,n);

		p /= 2;
	}

	return ans;

}

long long calc(long long n) {
	if (n == 1) {
		return 1;
	}

	vector< vector<long long> >  mat(2);
	mat[0].push_back(8);
	mat[0].push_back(10);
	mat[1].push_back(0);
	mat[1].push_back(10);

	mat = mat_expo(mat, n-1, 2);

	return (mat[0][0] + mat[0][1]) % MOD;
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("in.txt","r",stdin);
	#endif	

	long long test;
	long long n;

	cin >> test;

	while(test--) {
		cin >> n;
		cout << calc(n) << endl;
	}
		
	return 0;
}