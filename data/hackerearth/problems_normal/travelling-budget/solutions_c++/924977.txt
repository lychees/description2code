#include <bits/stdc++.h>
using namespace std;
#define inf INT_MAX
#define MAX 1005
#define ll long long
ll travel[MAX][MAX];
ll toll[MAX][MAX];
ll dp[MAX][MAX];

int main()
{
    ll tes;
    scanf("%lld", &tes);
    while(tes--) {
        ll n, m, pit;
        scanf("%lld%lld%lld", &n, &m, &pit);
        for(ll i = 0; i < 505; i++) {
            for(ll j = 0; j < 505; j++) {
                if(i == j) {
                    toll[i][j] = 0;
                    travel[i][j] = 0;
                }
                else {
                    toll[i][j] = inf;
                    travel[i][j] = inf;
                }
            }
        }
        while(m--) {
            ll u, v, c, l;
            scanf("%lld%lld%lld%lld", &u, &v, &c, &l);
            u--;
            v--;
            travel[u][v] = l;
            toll[u][v] = c;
        }
        for(ll t = 0; t <= pit; t++) {
            for(ll j = 0; j < n; j++) {
                dp[t][j] = inf;
            }
        }

        dp[0][0] = 0;
        ll bestToll = inf, bestTime = inf;
        for(ll t = 0; t <= pit; t++) {
            for(ll i = 0; i < n; i++) {

                if(dp[t][i] == inf) continue;
                if (t < pit)
					dp[t + 1][i] = min(dp[t + 1][i], dp[t][i]);
                for(ll j = 0; j < n; j++) {
                    if(t + toll[i][j] <= pit) {
                        ll tt = t + toll[i][j];
                        dp[tt][j] = min(dp[tt][j], dp[t][i] + travel[i][j]);
                    }
                }
            }
        }
        ll q;
        scanf("%lld", &q);
        while(q--) {
            ll hell, budget;
            scanf("%lld%lld", &hell, &budget);
            ll bestToll = inf;
            for(int i = 0; i <= budget; i++) {
                if(dp[i][hell - 1] < bestToll) {
                    bestToll = dp[i][hell - 1];
                }
            }
            if(bestToll == inf) {
                printf("-1\n");
            }
            else {
                printf("%lld\n", bestToll);
            }
        }
    }
    return 0;
}


