#include <bits/stdc++.h>

using namespace std;

struct trie_node {
    char data;
    int child;
    struct trie_node* nodes[26];
};

typedef struct trie_node trie;

trie* make_node(char v) {
    trie* nod = new trie;
    nod->data = v;
    nod->child = 0;
    for (int i = 0; i < 26; ++i) {
        nod->nodes[i] = NULL;
    }
    return nod;
}

void insert(trie** head, string s, int& cnt) {
    int off;
    if (!*head) {
        *head = make_node('$'); // ROOT
        ++cnt;
    }
    trie* p = *head;
    for (char ch : s) {
        off = toupper(ch) - 65;
        if (!(p)->nodes[off]) {
            p->child += 1;
            (p)->nodes[off] = make_node(ch);
            ++cnt;
        }
        (p) = (p)->nodes[off];
    }
}

int main() {
    ios::sync_with_stdio(false);
    trie* root = NULL;
    int t, v = 0;
    string s;
    cin >> t;
    while (t--) {
        cin >> s;
        insert(&root, s, v);
    }
    cout << v;
    return 0;
}