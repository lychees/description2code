#include <iostream>
#include <vector>
#include <cmath>
#include <climits>
#include <algorithm>
using namespace std;

int diff;
int abso(int a)
{
	if(a<0)return -1*a;
	else return a;
}


int dif(vector<int> seat)
{
	int tot=0;
	for(int i=0;i<seat.size()-1;i++)
	{
		if(seat[i]<0)continue;
		int j=i+1;
		while(j<seat.size() && seat[j]<0)j++;
		if(j==seat.size())return tot;
		tot=tot+(abso(seat[i]-seat[j]));
		//cout<<tot<<endl;
		i=j-1;
	}
	return tot;
}


void calculate(vector<int> seat,vector<int> heights,int seated,int diffNow)
{
	if(diffNow>=diff)return;
	if(seated==seat.size())
	{
		if(diffNow<diff)
		{
			diff=diffNow;
		}
		return;
	}
	vector<int> ht;
	for(int i=0;i<seat.size();i++)
	{
		if(seat[i]>0)continue;
		for(int j=0;j<heights.size();j++)
		{
			seat[i]=heights[j];
			ht.clear();
			for(int k=0;k<heights.size();k++)
			{
				if(k==j)continue;
				ht.push_back(heights[k]);
			}
			calculate(seat,ht,seated+1,dif(seat));
			seat[i]=-1;
		}
	}
	return;
}

int main()
{
	diff=INT_MAX;
	int a,b,c;
	cin>>a>>b>>c;
	int n;
	cin>>n;
	vector<int> heights;
	for(int i=0;i<n;i++)
	{
		int temp;
		cin>>temp;
		heights.push_back(temp);
	}
	int ceo=(n+3)/2;
	vector<int> seat(n+3,-1);
	seat[ceo]=a;
	seat[0]=b;
	seat[n+2]=c;
	calculate(seat,heights,3,dif(seat));
	if(n%2==0)
	{
		cout<<diff<<endl;
		return 0;
	}
	else
	{
		//cout<<diff<<endl;
		seat[ceo]=-1;
		seat[ceo-1]=a;
		calculate(seat,heights,3,dif(seat));
		cout<<diff<<endl;
	}

}