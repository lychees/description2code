#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

int calc(int tower,vector<int> &gameset,int setnum,vector<int> &mem)
{
	if(mem[tower]!=-1)
		return mem[tower];
		
	for(int i=0;i<setnum;i++)
	{
		
		int picked=gameset[i];
		if(picked==tower)
			{	mem[tower]=1;
				return 1;
			}
		else if(picked<tower)
		{
			
			int newtower=tower-picked;
			int ans2=calc(newtower,gameset,setnum,mem);
			if(ans2==0)
			{
				mem[tower]=1;
				return 1;
			}
			
		}
		
		
	}
	
	mem[tower]=0;
	return 0;
	
}
int main()
{
    int t,tower,setnum;
    
    cin>>t;
    while(t--)
    {
    	cin>>tower>>setnum;
    	vector<int> gameset(setnum);
    	//to store dp values
    	vector<int> mem(tower+1,0);
    	for(int i=0;i<setnum;i++)
    	{
    		
    		cin>>gameset[i];
    		mem[gameset[i]]=1;
    		
    	}
    	sort(gameset.begin(),gameset.end());
    	
    	//int ans=calc(tower,gameset,setnum,mem);
    	//cout<<"ans is"<<ans<<"\n";
    	//gameset[0]=0;
    	for(int i=1;i<=tower;i++)
    	{
    		if(mem[i]==0)
    		{
    			for(int j=0;j<setnum;j++)
    			{
    				if((i-gameset[j]>=0)&&(mem[i-gameset[j]]==0))
    				{
    					
    					mem[i]=1;
    					break;
    				}
    				
    			}
    			
    			
    		}
    		
    	}
    	int ans=mem[tower];
    	if(ans==1)
    	cout<<"Little Deepu\n";
    	else
    	cout<<"Kate\n";
    }
    
    return 0;
}
