from heapq import heappush as push, heappop as pop, heapify as hp


class Topic:
    def __init__(self, w):
        self.ids = w[0]
        self.zs = w[1]
        self.nzs = w[2]*50 + w[3]*5 + w[4]*10 + w[5]*20
        self.gap = self.nzs - self.zs

    def __lt__(self, other):
        if self.gap < other.gap:
            return False
        elif self.gap > other.gap:
            return True
        elif self.gap == other.gap:
            if self.ids < other.ids:
                return False
            else:
                return True


h = []
n = input()
for _ in xrange(n):
    push(h, Topic(map(int, raw_input().split())))
# hp(h)
for i in xrange(5):
    k = pop(h)
    print k.ids, k.nzs  # ,k.gap
