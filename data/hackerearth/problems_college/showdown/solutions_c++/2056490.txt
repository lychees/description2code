#include <iostream>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

int maxPoint;

void calculate(vector<int> A,vector<int> B,int rem,int point)
{
	if(rem*100 + point<=maxPoint)return;
	if(rem==0 && point>maxPoint)
	{
		maxPoint=point;
		return;
	}
	vector<int> c;
	vector<int> d;
	for(int i=0;i<A.size();i++)
	{
		for(int j=0;j<B.size();j++)
		{
			int nw=0;
			if(A[i]>B[j])nw=100;
			else if(A[i]==B[j])nw=50;
			c.clear();
			d.clear();
			for(int k=0;k<A.size();k++)
			{
				if (k==i)continue;
				c.push_back(A[k]);
			}
			for(int k=0;k<B.size();k++)
			{
				if (k==j)continue;
				d.push_back(B[k]);
			}
			calculate(c,d,rem-1,point+nw);
		}
	}
	return;
}


int main()
{
	int n;
	cin>>n;
	vector<int> A;
	vector<int> B;
	vector<int> C;
	vector<int> D;
	for(int i=0;i<n;i++)
	{
		int skill;
		cin>>skill;
		A.push_back(skill);
		C.push_back(skill);
	}
	for(int i=0;i<n;i++)
	{
		int skill;
		cin>>skill;
		B.push_back(skill);
		D.push_back(skill);
	}
	sort(A.begin(),A.end());
	sort(B.begin(),B.end());
	long long point=0;
	for(int i=0;i<A.size();i++)
	{
		int skillA=A[i];
		for(int j=0;j<B.size();j++)
		{
			if(A[i]<=B[i])continue;
			point+=100;
			A.erase(A.begin()+i);
			B.erase(B.begin()+j);
			i=-1;
			break;
		}
		if(i==-1)continue;
		else
		{
			int I=B.size()-1;
			if(A[i]==B[I])point+=50;
			A.erase(A.begin()+i);
			B.erase(B.begin()+I);
			i=-1;
		}
	}
//	cout<<maxPoint<<endl;

	maxPoint=point;
	calculate(C,D,n,0);
	cout<<maxPoint<<endl;

}