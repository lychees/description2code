#include <iostream>
#include <vector>
#include <cstring>
using namespace std;
vector<int> adj[1005] ;
bool visited[1005] ;
long long cnt ;
long long m ;
void dfs(int i,long long arr[]){
    visited[i] = true ;
if(arr[i]<m)
m = arr[i] ;
else if(arr[i]== m ){
    cnt++ ;
}
for(int j = 0 ; j< adj[i].size() ; j++){
    if(visited[adj[i][j]]== false){
        dfs(adj[i][j],arr) ;
    }

}
}
int main()
{
    int n ; cin>> n ;
    long long arr[n] ;
    memset(visited,false,sizeof(visited)) ;
    cnt = 0 ;
    long long ans = 1 ;
    for(int i = 0 ; i < n ; i++){
        cin>>arr[i] ;
    }
    long long t ;
    cin>>t ;
    while(t--){
            long long a,b ;
    cin>>a>>b ;
    adj[a-1].push_back(b-1) ;
    adj[b-1].push_back(a-1) ;
    }
    for(long long i=0;i<n;i++)
{
m=10000;
cnt=1;
dfs(i,arr);
//cout<<adj[i].size()<<endl ;
cnt=cnt%1000000007;
ans=ans*cnt;
ans %= 1000000007 ;
}
cout<<ans%1000000007<<endl  ;

    return 0;
}
