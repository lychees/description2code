/****************************
*  Author- Advitiya Brijesh *
*  PIE @ MNNIT Allahabad    *
*  Username-asymptote_      *
*                           *
****************************/
// WA TLE MLE RE IDLE and counting...
#include<bits/stdc++.h>
using namespace std;
//      std macros
typedef long long ll;
typedef vector<list<ll> > vli;
typedef vector<ll > vi;
typedef vector<pair<ll,ll> > vpll;
typedef vector<pair<int,int> > vpii;
typedef pair<int ,int> pii;
//      dereference
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define in insert
#define pu push
#define fr front
//      loops
#define rep(i,n) for(int i=0;i<n;++i)
#define REP(i,a,b) for(int i=a;i<=b;++i)
#define PER(i,b,a) for(int i=b;i>=a;--i)
#define all(X) (X).begin(), (X).end()
//      I/O
#define dsd(X) int (X); scanf("%d", &X)
#define dsd2(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define dsd3(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define sd(n) scanf("%d",&n)
#define sld(n) scanf("%ld",&n)
#define sll(n) scanf("%lld",&n)
#define sc(n) scanf("%c",&n)
#define ss(n) scanf("%s",n)
#define oll(n) printf("%lld\n",n)
//      set values
#define mset(n,k) memset(n,k,sizeof(n))
#define MOD 1000000007
ll INV2=500000004;
ll INV6=166666668;
//modular expo
ll power(ll a,ll b, ll c){
    ll x=1,y=a;
    while(b>0){
        if(b&1)
            x=(x*y)%c;
        y=(y*y)%c;
        b/=2;
    }
    return x%c;
}
//perfect numbers till 10^6 6, 28, 496, 8128
int dx[]={0,-1,0,1};
int dy[]={-1,0,1,0};//clockwise from left
#define MAX 1000001
vector<int>primes;
set<int>s;
bool v[1000005];
int sp[1000005];
void sieve(){
	sp[1]=1;
	for (int i = 2; i < MAX; i += 2){
		sp[i]=2;
		v[i]=1;
	}
	for (ll i = 3; i< MAX; i += 2){
		if (!v[i]){
			sp[i]=i;
			for (ll j = i*i; j < MAX; j += i){
				if (!v[j]){
					v[j] = 1;
					sp[j]=i;
				}
			}
		}
	}
}
map<int,int>ans;
int main(){
	int t;
	sd(t);
	sieve();
	int x;
	while(t--){
		int n;
		sd(n);
		int tmp=n;
		int divi=sp[n];
		ans.clear();
		while(n>1){
			while(n%divi==0 && n>1){
				n/=divi;
				ans[divi]++;
				divi=sp[n];
			}
		}
		map<int,int>::iterator it=ans.begin();
		int sz=ans.size(),cnt=0;
		while(it!=ans.end()){
			int base=(*it).F,expo=(*it).S;
			if(!cnt && base!=2){
				if(tmp!=base)
					cout<<"2^0*";
				else{
					cout<<"2^0";
					break;
				}
			}
			
			cout<<base<<"^"<<expo;
			cnt++;
			if(cnt!=sz){
				cout<<"*";
			}
			++it;
		}
		cout<<endl;

	}


return 0;}