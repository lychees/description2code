/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = int(1e9) + 7;
const int MAX = 222000;
ll fact[MAX], ifact[MAX];

ll mod_inv(ll b) {
  ll res = 1;
  for (int e = MOD - 2; e > 0; e >>= 1) {
    if (e & 1)
      res = res * b % MOD;
    b = b * b % MOD;
  }
  return res;
}

ll comb(int n, int k) {
  return (fact[n] * ifact[k] % MOD) * ifact[n - k] % MOD;
}

void solve(int test_num) {
  fact[0] = 1;
  for (int i = 1; i < MAX; i++)
    fact[i] = fact[i - 1] * i % MOD;
  ifact[MAX - 1] = mod_inv(fact[MAX - 1]);
  for (int i = MAX - 2; i >= 0; i--)
    ifact[i] = ifact[i + 1] * (i + 1) % MOD;
  int Q;
  cin >> Q;
  while (Q-- > 0) {
    int N, M, C;
    cin >> N >> M >> C;
    if (N == M) {
      cout << "1\n";
      continue;
    }
    if (C == 0) {
      //M < N, so not possible
      cout << "0\n";
      continue;
    }
    ll res = comb(N - M - 1, C - 1);
    const ll rem = M - (C - 1);
    if (rem < 0) {
      //cant remove enough
      cout << "0\n";
      continue;
    }
    res = res * comb(rem + C, C) % MOD;
    cout << res << endl;
  }
}

void solve() {
#ifdef AZN
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
//scanf("%d", &T);
//cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
