#include <bits/stdc++.h>
using namespace std;
 
#define ll long long int
#define MOD 1000000007
#define scan(n) scanf("%lld",&n)
#define scan2(n1,n2) scanf("%lld%lld",&n1,&n2)
#define scan3(n1,n2,n3) scanf("%lld%lld%lld",&n1,&n2,&n3)
#define print(n) printf("%lld\n",n)
#define scans(str) scanf("%s",str)
#define rep(i,s,e) for(i=s;i<=e;i++)
#define reprev(i,s,e) for(i=s;i>=e;i--)
#define reps(b,e,g,str) for(b=str,e=&str[g-1];b<=e;b++) 

void LIS_NLOGN_BINARYSEARCH(ll S[], ll l, ll h, ll index, ll Arr[])
{
	if(l<h)
	{
		ll mid=(l+h)/2;
		if(Arr[S[mid]]>=Arr[index])
			LIS_NLOGN_BINARYSEARCH(S,l,mid,index,Arr);
		else
			LIS_NLOGN_BINARYSEARCH(S,mid+1,h,index,Arr);
	}
	else if(l==h)
	{
		S[l] = index;
	}
}
void LIS_NLOGN(ll Arr[], ll size)
{
	ll maxi=0;
	ll S[size]; 
	S[0]=0;
	ll len=0,i,x,j;
	//rep(i,0,len)
	//	printf("%lld ",S[i]);
	//printf("\n");
	rep(i,1,size-1)
	{
		x=Arr[i];
		if(x>Arr[S[len]])
		{
			len++;
			S[len]=i;
		}
		else
			LIS_NLOGN_BINARYSEARCH(S,0,len,i,Arr);
		//rep(j,0,len)
		//{
		//	printf("%lld ",S[j]);
		//}
		if(len>maxi)
			maxi=len;
	}
	printf("%lld\n",maxi+1);
	
}

int main()
{
	ll t;
	scan(t);
	while(t--)
	{
	ll n;
	scan(n);
	ll arr[n],i;
	rep(i,0,n-1)
		scan(arr[i]);
	//ll Arr[] = {2,6,3,4,1,2,9,5,8};
		LIS_NLOGN(arr, n);
	}return 0;
}