#include <bits/stdc++.h>
#include <iostream>
#include <vector>
#include <queue>
#include <string>
#include <cstring>
#include <sstream>
#include <set>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstdlib>

#define rep(i,n) for(int i=0;i<(int)(n);++i)
#define iter(a) __typeof(a.begin())
#define FOR(it,a) for(iter(a)it=a.begin();it!=a.end();++it)
#define F first
#define S second
#define SZ(a) (int)((a).size())
#define sz(a) SZ(a)
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define ALL(a) (a).begin(),(a).end()
using namespace std;

typedef long long ll;
typedef pair<int,int> PI;
typedef unsigned long long ull;

#define PR(...) do{cerr << "line : " << __LINE__ << endl; pr(#__VA_ARGS__, __VA_ARGS__);}while(0);
template<class T>
void pr(const string& name, T t){
  cerr << name << ": " << t << endl;
}

template<typename T, typename ... Types>
void pr(const string& names, T t, Types ... rest) {
  auto comma_pos = names.find(',');
  cerr << names.substr(0, comma_pos) << ": " << t << ", ";
  
  auto next_name_pos = names.find_first_not_of(" \t\n", comma_pos + 1);
  pr(string(names, next_name_pos), rest ...);
}

template<class T,class U> ostream& operator<< (ostream& o, const pair<T,U>& v){return o << "(" << v.F << ", " << v.S << ")";}
template<class T> ostream& operator<< (ostream& o, const vector<T>& v){o << "{";rep(i,SZ(v)) o << (i?", ":"") << v[i];return o << "}";}

const int dx[] = {0,1,0,-1};
const int dy[] = {-1,0,1,0};
#define endl '\n'

typedef long long ll;

/*
1 2 3 4 5 6

1  3 4 5 6 2

1 3  5 6 2 4

1 3 5  2 4 6

1 3 5  2 4 6


1 2 3 4 5 6 7

1 3 5 7
2 4 6

1 3 5 7 2 6 4

1 2 3 4 5

1
3 4 5 2

1 3
5 2 4

1 3 5
4 2

*/

int rec(int n, int k){
  if((n+1)/2 >= k) return k*2-1;
  if(n%2==0)
    return rec(n/2,k-n/2)*2;
  
  int ts = rec(n/2,k-n/2-1);
  if(ts == n/2) return 2;
  return (ts+1)*2;
}


int main(int argc, char *argv[])
{
  int t;
  cin >> t;
  rep(i,t){
    ll n,k;
    cin >> n >> k;
    cout << rec(n,k) << endl;
  }
  return 0;
}
