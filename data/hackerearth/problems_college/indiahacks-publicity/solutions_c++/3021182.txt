#include<bits/stdc++.h>
using namespace std;

// we have to count the number of components in the given graph
typedef long long int ll;
#define pb push_back
vector<int> graph[100001];
bool vis[100001];

void dfs(int v){
	stack<int> st;
	st.push(v);
	while(!st.empty()){
		int item = st.top();
		st.pop();
		if(vis[item]==true)
		continue;
		vis[item] = true;
		for(int i=0;i<graph[item].size();i++){
			st.push(graph[item][i]);
		}
	}
	return ;
}

int main(){
	ll t,n,e;
	cin>>t;
	while(t--){
		cin>>n>>e;
		
		// construct graph
		for(int i=0;i<100001;i++)
		graph[i].clear();
		memset(vis,false,sizeof(vis));
		while(e--){
			ll a,b;
			cin>>a>>b;
			graph[a].pb(b);
			graph[b].pb(a);
		}
		
		// count components
		ll comp = 0;
		for(int i=0;i<n;i++){
			if(vis[i]==false){
				comp++;
				dfs(i);
			}
		}
		
		cout<<comp<<endl;
	}
	return 0;
}