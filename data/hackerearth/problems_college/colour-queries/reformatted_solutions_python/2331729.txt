import Queue

x = str(raw_input()).strip().split(" ")
x = [int(i) for i in x]
r, c, q = x

mat = list()
for i in xrange(r):
    temp = str(raw_input()).strip().split(" ")
    temp = [int(j) for j in temp]
    mat.append(temp)

qrs = list()
for i in xrange(q):
    temp = str(raw_input()).strip().split(" ")
    temp = [int(j) for j in temp]
    qrs.append(temp)

for i in xrange(q):
    color = [[0]*c for j in xrange(r)]
    qq = Queue.Queue()
    xt, yt, d = qrs[i]
    qq.put(tuple((xt-1, yt-1)))
    summ = 0
    while not qq.empty():
        x, y = qq.get()
        if color[x][y] == 0:
            color[x][y] = 1
            summ = summ+1
        try:
            if color[x -
                     1][y] == 0 and abs(mat[x][y] -
                                        mat[x -
                                            1][y]) <= d and (x -
                                                             1) >= 0 and y >= 0:
                color[x-1][y] = 1
                summ = summ+1
                qq.put((x-1, y))
        except BaseException:
            pass
        try:
            if color[x +
                     1][y] == 0 and abs(mat[x][y] -
                                        mat[x +
                                            1][y]) <= d and (x +
                                                             1) >= 0 and y >= 0:
                color[x+1][y] = 1
                summ = summ+1
                qq.put((x+1, y))
        except BaseException:
            pass
        try:
            if color[x][y-1] == 0 and abs(mat[x][y]-mat[x]
                                          [y-1]) <= d and x >= 0 and (y-1) >= 0:
                color[x][y-1] = 1
                summ = summ+1
                qq.put((x, y-1))
        except BaseException:
            pass
        try:
            if color[x][y+1] == 0 and abs(mat[x][y]-mat[x]
                                          [y+1]) <= d and x >= 0 and (y+1) >= 0:
                color[x][y+1] = 1
                summ = summ+1
                qq.put((x, y+1))
        except BaseException:
            pass
    print summ
