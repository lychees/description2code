#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;


#define ll long long
#define ff first
#define ss second
#define mpa make_pair
#define MOD 100000
#define pb push_back
#define lld I64d
#define MXN 1000000

int bitcnt(int mask){return __builtin_popcount(mask);}
int SET(int N,int pos){	return N=N | (1<<pos);}
int RESET(int N,int pos){	return N= N & ~(1<<pos);}
int check(int N,int pos){	return (N & (1<<pos));}
int toggle(int N,int pos){if(check(N,pos))return N=RESET(N,pos);return N=SET(N,pos);}
void PRINTBIT(int N){	printf("("); for(int i=6;i>=1;i--)	{bool x=check(N,i);cout<<x;}	puts(")");}
int mod(int a, int b) { return a - a/b * b;}

int N;
char st[MXN];

void inp()
{
	scanf("%d", &N);
	scanf("%s", st);
}

char bde[] = {'A', 'B', 'C'};
char chte[] = {'a', 'b', 'c'};

bool vis[300][300];
ll dp[300][300];

ll rec(int start, int end)
{
	if(start > end)
		return 1;
	
	if(vis[start][end])
		return dp[start][end];
	vis[start][end] = true;
	
	ll ans = 0;
	for(int mid = start + 1; mid <= end; ++mid) {
		for(int i = 0; i < 3; ++i) {
			if(st[start] == bde[i] || st[start] == '?') {
				if(st[mid] == chte[i] || st[mid] == '?') {
					ans += (rec(start + 1, mid - 1) * rec(mid + 1, end));
					if(ans >= MOD)
						ans %= MOD;
				}
			}
		}
	}
	
	return dp[start][end] = ans;
}

void solve()
{
	memset(vis, false, sizeof vis);
	ll ans = rec(0, N - 1);
	printf("%lld\n", ans);
}

int main()
{
	inp();
	solve();
	
	return 0;	
}
