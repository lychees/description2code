#include<bits/stdc++.h>
using namespace std;

const int N=55;

int n,p;
int prime[15]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};

int dp[N][(1<<15)+1];
int a[N];

int solve(int cur,int mask) {
    if(cur==n||mask==p) {
        return 0;
    }
    if(dp[cur][mask]!=-1) {
        return dp[cur][mask];
    }
    int q=solve(cur+1,mask);
    if(a[cur]==1) {
        return dp[cur][mask]=q+1;
    }
    int temp=mask;
    for(int i=0;i<15;i++) {
        if(a[cur]%prime[i]==0) {
            if(mask&(1<<i)) {
                return dp[cur][temp]=q;
            }
            mask|=(1<<i);
        }
    }
    return dp[cur][temp]=max(1+solve(cur+1,mask),q);
}
int main() {
    int tt;
    scanf("%d",&tt);
    while(tt--) {
        scanf("%d",&n);
        for(int i=0;i<n;i++) {
            scanf("%d",a+i);
        }
        memset(dp,-1,sizeof(dp));
        p=(1<<n)-1;
        printf("%d\012",solve(0,0));
    }
    return 0;
}
