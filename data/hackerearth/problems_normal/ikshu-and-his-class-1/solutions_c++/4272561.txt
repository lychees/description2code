#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll MOD =1e9+7;
int parent[100005];

int r[100005];
ll co[100005];

ll fact[100005];

void make_set (int v) {
	parent[v] = v;
	r[v] = 0;
}
 
int find_set (int v) {
	if (v == parent[v])
		return v;
	return parent[v] = find_set (parent[v]);
}
 
void union_sets (int a, int b) {
	a = find_set (a);
	b = find_set (b);
	if (a != b) {
		if(r[a]>r[b])
		    parent[b]=a;
		else if(r[b]>r[a])
		    parent[a]=b;
		else{
		    parent[b]=a;
		    r[a]++;
		}    
	}
	
}
int main() {
	int n,k,i,x,y;
	cin>>n>>k;
	for(i=0;i<n;i++){
	    make_set(i);
	}
	fact[0]=1;
	
	for(i=1;i<=100000;i++){
	    fact[i]=(fact[i-1]*i)%MOD;
	}
	    
	for(i=1;i<=k;i++){
	    cin>>x>>y;
	    union_sets(x,y);
	}
	for(i=0;i<n;i++){
	    int v=find_set(i);
	    co[v]++;
	}
	ll total=1;
	for(i=0;i<n;i++){
	    total=(total*(  fact[co[i]] )%MOD)%MOD;
	}
	cout<<total<<endl;
	return 0;
}
