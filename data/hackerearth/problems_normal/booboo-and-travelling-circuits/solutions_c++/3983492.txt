#include<stdio.h>
#include<iostream>
#include<vector>
#include<cstdlib>
#include<cstring>
#include<math.h>
#include<map>
#include<algorithm>
#include<queue>
#include<string>
#include<climits>
#include<bitset>
#include<set>
#include<functional>

using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;

#ifdef _WIN32
    #define gx getchar
    #define px putchar
    #define ps putchar(' ')
    #define pn putchar('\n')
    #define DEBUG 1
#else
    #define gx getchar_unlocked
    #define px putchar_unlocked
    #define ps putchar_unlocked(' ')
    #define pn putchar_unlocked('\n')
    #define DEBUG 0
#endif

//input
void scan(int &n)
{
    int sign = 1;
    n = 0;
    char c = gx();
    while( c < '0' || c > '9' )
    {
        if( c == '-' ) sign = -1;
        c = gx();
    }
    while( c >= '0' && c <= '9' ) n = (n<<3) + (n<<1) + c - '0', c = gx();  n = n * sign;
}
void lscan(ll &n)
{
    int sign = 1;
    n = 0;
    char c = gx();
    while( c < '0' || c > '9' )
    {
        if( c == '-' )
        sign = -1;
        c = gx();
    }
    while( c >= '0' && c <= '9' ) n = (n<<3) + (n<<1) + c - '0', c = gx();  n = n * (ll)(sign);
}
int sscan(char a[])
{
    char c = gx();
    while(c==' ' || c=='\n') c=gx();
    int i=0;
    while(c!='\n')a[i++] = c,c=gx();
    a[i]=0;
    return i;
}
int wscan(char a[])
{
    char c = gx();
    while(c==' ' || c=='\n') c=gx();
    int i=0;
    while(c!='\n' && c!=' ')a[i++] = c,c=gx();
    a[i]=0;
    return i;
}

//output
void print(int n)
{
    if(n<0)
    {
        n=-n;
        px('-');
    }
    int i=10;
    char o[10];
    do{o[--i] = (n%10) + '0'; n/=10;}while(n);
    do{px(o[i]);}while(++i<10);
}
void lprint(ll n)
{
    if(n<0LL)
    {
        n=-n;
        px('-');
    }
    int i=21;
    char o[21];
    do{o[--i] = (n%10LL) + '0'; n/=10LL;}while(n);
    do{px(o[i]);}while(++i<21);
}
void sprint(const char a[])
{
    const char *p=a;
    while(*p)px(*p++);
}


ll po(ll a, ll b, ll m)
{
	ll x=1,y=a;
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			if(x>m) x%=m;
		}
		y = (y*y);
		if(y>m) y%=m;
		b /= 2;
	}
	return x;
}

typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const ll MOD = 1000000007LL;
const int siz = 1000005;

int a[2001][10001];
int b[2001][10001];
int n,m;
int lp[10001];
int primes[10001];
ll use[10001][2];
int c[10001];
ll ans[10001];
ll temp[10001];

int main()
{
    scan(n);
    scan(m);
    int x = n*m,i,j;
    ll s,p,q,r,t;
    ll y,z;
    lscan(s);
    lscan(p);
    lscan(q);
    lscan(r);
    for(i=0;i<x;i++)
    {
        t = (p*((s*s)%1000000003) + q*s + r) % 1000000003;
        s = a[(i/m) + 1][(i%m) + 1] = t;
    }
    lscan(s);
    lscan(p);
    lscan(q);
    lscan(r);
    for(i=0;i<x;i++)
    {
        t = (p*((s*s)%1000000003) + q*s + r) % 1000000003;
        s = b[(i/m) + 1][(i%m) + 1] = t;
    }
    int ct = 0;
    for(i=2;i<=m;i++)
    {
        if(!lp[i])
        {
            lp[i] = i;
            primes[ct++] = i;
        }
        for (j=0; j<ct && primes[j]<=lp[i] && i*primes[j]<=m; ++j)
		lp[i * primes[j]] = primes[j];
    }
    lp[1] = 1;
    for(i=1;i<n;i++)
    {
        for(j=0;j<=m;j++)
        {
            use[j][0] = use[j][1] = 1000000000000000000ll;
            c[j] = 0;
        }
        for(j=1;j<=m;j++)
        {
            x = lp[j];
            y = ans[j] + b[i][j];
            if(y < use[x][0])
            {
                use[x][1] = use[x][0];
                use[x][0] = y;
            }
            else if(y < use[x][1] && y != use[x][0]) use[x][1] = y;
            if(y < use[1][0])
            {
                use[1][1] = use[1][0];
                use[1][0] = y;
            }
            else if(y < use[1][1] && y != use[1][0]) use[1][1] = y;
        }
        for(j=1;j<=m;j++)
        {
            x = lp[j];
            y = ans[j] + b[i][j];
            if(y == use[x][0]) c[x]++;
            if(y == use[1][0]) c[1]++;
        }
        for(j=1;j<=m;j++)
        {
            x = lp[j];
            z = ans[j] + a[i][j];
            y = ans[j] + b[i][j];
            if(z <= use[x][0]) temp[j] = z;
            else
            {
                if(c[x] > 1) temp[j] = min(z,use[x][0]);
                else if(y == use[x][0]) temp[j] = min(z,use[x][1]);
                else if(y != use[x][0]) temp[j] = (z,use[x][0]);
            }
        }
        for(j=0;j<=m;j++) ans[j] = temp[j];
    }
    ll fin = 1000000000000000000ll;
    for(i=1;i<=m;i++) fin = min(fin,ans[i]);
    lprint(fin);
    pn;
    return 0;
}

/*
2000 10000
1000000000 1000000000 1000000000 1000000000
1000000000 1000000000 1000000000 1000000000
*/
