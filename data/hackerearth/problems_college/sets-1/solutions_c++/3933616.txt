#include <bits/stdc++.h>
//ques:https://www.hackerearth.com/coders-hub-50/algorithm/sets-1/
#define ll long long
#define pb push_back
#define mk make_pair
#define pi pair<int, int>
#define fi first
#define se second
using namespace std;
const int N = 5e5 + 5;
const int M = 1e9 + 7;
int a[N];
ll val[N];
int main() {
	int n, q;
	cin >> n >> q;
	for(int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	sort(a, a + n);
	ll mul = 1;
	for(int i = 0; i < n; i++) {
		val[i + 1] = mul;
		val[i + 1] += val[i];
		mul *= 2;
		mul %= M;
		if(val[i + 1] >= M) val[i + 1] %= M;
	}
	for(int i = 0; i < q; i++) {
		char ch[3];
		int num;
		scanf("%s%d", ch, &num);
		if(ch[0] == '<') {
			int idx = lower_bound(a, a + n, num) - a;
			ll ans = 1;
			ans += val[idx];
			printf("%lld\n", ans % M);
		} else if(ch[0] == '>') {
			int idx = upper_bound(a, a + n, num) - a;
			ll ans = 0;
		//	if(idx > 0) {
				ans -= val[idx];
		//	}
			ans += val[n];
			if(ans < 0) ans += M;
			printf("%lld\n", ans % M);
		} else {
			int idx = lower_bound(a, a + n, num) - a;
			int idx1 = upper_bound(a, a + n, num) - a;
			ll ans = 0;
			idx++;
			idx1++;
			ans += (val[idx1 - 1] - val[idx - 1]);
			if(ans < 0) ans += M;
			printf("%lld\n", ans);
		}
	}
	return 0;
}
