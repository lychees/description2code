#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
int f[1000001];
bool isSubSequence(string str1, string str2)
{
   int j = 0; // For index of str1 (or subsequence
 	int m= str1.length();
 	int n = str2.length();
   // Traverse str2 and str1, and compare current character 
   // of str2 with first unmatched char of str1, if matched 
   // then move ahead in str1
   for (int i=0; i<n&&j<m; i++)
       if (str1[j] == str2[i])
         j++;
 
   // If all characters of str1 were found in str2
   return (j==m);
}
int main()
{
    memset(f,-1,sizeof(f));
    for(int i=2;i<=1000000;i++){
    	for(int j=i*2;j<=1000000;j+=i)
    	if (f[j]==-1) f[j] = 1;
    }
    int t;
    
    int k;
    scanf("%d",&t);
    vector<int> p;
    for(int i=2;i<=1000000;i++)
    if (f[i]==-1) p.push_back(i);
    while(t--){
    	scanf("%d",&k);
    	string x,y;
    	cin>>x>>y;
    	//cout << x << " " << y << endl;
    	int idx = lower_bound(p.begin(),p.end(),k)-p.begin();   
    	if (p[idx]>k) idx--;
    	bool ok = false;
    	//cout << idx << ", " << k << "\n"; 
    	int ans;
    	for(int i=idx;i>=0;i--){
    		string s = to_string(p[i]);
    		//cout << s << " " << x << endl;
    		if (isSubSequence(s,x) && isSubSequence(s,y)){
    			ans = p[i];
    			ok = true;
    			break;
    		}
    	}
    	if (!ok){
    		cout << "-1\n";
    		continue;
    	}
    	printf("%d\n",ans);
    }
    return 0;
}
