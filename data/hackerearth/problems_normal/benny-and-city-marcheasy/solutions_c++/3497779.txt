#include<iostream>
#include<algorithm>
#include<vector>

using namespace std;

typedef long long ll;

const int MAXN = 20 + 5;

int ans = -1e9;
int n, m, k;
int c[MAXN][MAXN], rs[MAXN], tsum;
int sec[MAXN], sz;

int main(){
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n >> m >> k;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> c[i][j], rs[i] += c[i][j], tsum += c[i][j];

	/*for (int i = 0; i < (1 << (n + m)); i++){
		int ret = 0;
		for (int a = 0; a < n; a++)
			for (int b = 0; b < m; b++)
				if (((i >> a) & 1) == 0 && ((i >> (n + b)) & 1) == 0)	ret += c[a][b];
		ans = max(ans, ret - (int)__builtin_popcount(i) * k);
	}*/
	for (int i = 0; i < (1<<n); i++){
		int temp = tsum;
		for (int w = 0; w < n; w++)
			if ((i >> w) & 1)	temp -= rs[w];
	
		int t = __builtin_popcount(i); 
		for (int j = 0; j < m; j++){
			sec[j] = 0;
			for (int w = 0; w < n; w++)
				if (((i >> w) & 1) == 0)	sec[j] += c[w][j];
		}
		sort(sec, sec + m);
		ans = max(ans, temp - k * t);
		for (int j = 0; j < m; j++){
			ans = max(ans, temp - sec[j] - (j + 1 + t) * k);
			temp -= sec[j];
		}
	}
	cout << ans << "\n";
	return	0;	
}
