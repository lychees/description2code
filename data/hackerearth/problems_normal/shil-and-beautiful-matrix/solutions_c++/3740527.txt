#include <iostream>
#include <cstdio>
#include <string>
#include <sstream> 
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <ctime>
#include <cassert>
using namespace std;
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define vi vector<int>
#define SZ(x) ((int)(x.size()))
#define fi first
#define se second
#define FOR(i,n) for(int (i)=0;(i)<(n);++(i))
#define FORI(i,n) for(int (i)=1;(i)<=(n);++(i))
#define IN(x,y) ((y).find((x))!=(y).end())
#define ALL(t) t.begin(),t.end()
#define FOREACH(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define REP(i,a,b) for(int (i)=(a);(i)<=(b);++i)
#define REPD(i,a,b) for(int (i)=(a); (i)>=(b);--i)
#define REMAX(a,b) (a)=max((a),(b));
#define REMIN(a,b) (a)=min((a),(b));
#define DBG cerr << "debug here" << endl;
#define DBGV(vari) cerr << #vari<< " = "<< (vari) <<endl;
typedef long long ll;
const int N = 1000;
const int M = 1000000000 + 7;
const int MAXXOR = 1023;
int cnt[MAXXOR + 1];
ll f[N * N + 1];
int main()
{
    int n, m;
    cin >> n >> m;
    REP(i, 1, n)
    {
        REP(j, 1, m)
        {
            ++cnt[i^j];
        }
    }
    f[0] = 1;
    REP(i, 1, n * m)
    {
        f[i] = i * f[i - 1];
        f[i] %= M;
    }
    ll res = 1;
    REP(i, 0, MAXXOR)
    {
        res = res * f[cnt[i]];
        res %= M;
    }
    cout << res << endl;
    return 0;
}