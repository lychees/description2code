import itertools

def good_subset(arr):
	subset_arr, sorted_arr = [], []
	max_subset_size = 1
	temp = []
	for ele in sorted(arr):
		sorted_arr.append(ele)
	for i in range(0,len(sorted_arr)):
		subset_arr.append(sorted_arr[i])
		subset_arr[i] = 1
		temp.append(sorted_arr[i])
		for j in range(i-1, -1, -1):
			temp.append(sorted_arr[j])
			if subset_arr[j] + 1 > subset_arr[i] and sorted_arr[i] % sorted_arr[j] == 0:
				subset_arr[i] = subset_arr[j] + 1
			else:
				temp.remove(sorted_arr[j])
			if subset_arr[i] > max_subset_size:
				max_subset_size = subset_arr[i]

		if len(temp) == 1:
			temp.remove(sorted_arr[i])
	if not len(temp) > 1:
		return -1
	return max_subset_size

N = int(input(''))
if 1<=N<=1000:
	ele = raw_input('')
	values = ele.split(" ")
	arr = []
	for item in values:
		value = int(item)
		if 1<=value<=10**9:
			arr.append(value)
print good_subset(arr)