#include <bits/stdc++.h>
using namespace std;
#define INF 1<<24
#define inp(n) scanf("%d",&n)
int N,M;
int d[100001];
bool vis[100001];
struct node{
	int dest,weight;
	struct node* next;
};
struct node * g[100001];
 
 
struct node * new_node(int d,int w){
	struct node * n= new node;
	n->dest=d;
	n->weight=w;
	n->next=NULL;
	return n;
}
 
void addedge(int a,int b,int c){
	struct  node * t=new_node(b,c);
	t->next=g[a];
	g[a]=t;
	t=new_node(a,c);
	t->next=g[b];
	g[b]=t;
 
 
}
int min_w(){
	int m=INT_MAX,idx=-1;
	for(int i=1;i<=N;i++){
		if(d[i]<m && !vis[i])
			m=d[i],idx=i;
	}
	return idx;
}
void dijkstra(int u){
	d[u]=0;
	for(int i=1;i<=N-1;i++){
		int p=min_w();
		//cout<<p<<endl;
		vis[p]=1;
		struct  node *t=g[p];
		while(t){
			if( d[p]!=INF && !vis[t->dest] && d[p]+t->weight<d[t->dest])
				d[t->dest]=d[p]+t->weight;
				t=t->next;
		}
	}
}
int main(){
	int t ;
	inp(t);
	while(t--){
	inp(N);inp(M);
 
	for(int i=0;i<=N;i++)
		d[i]=INF,vis[i]=0,g[i]=NULL;
 
    int a,b,c;
 
   for(int i=0;i<M;i++) {
   	inp(a);inp(b);inp(c);
   	addedge(a,b,c);
   }
   
   /*for(int i=1;i<=N;i++){
   	struct node *t=g[i];
   	while(t){
   		cout<<t->dest<<" "<<t->weight<<endl;
   		t=t->next;
   	}
   	cout<<i+1<<endl;
   }*/
   
   
    dijkstra(1);
    int q; inp(q);;
    while(q--){
    	inp(a);inp(b);
    	if(b-2*d[a]>0)
    	printf("%d\n",b-2*d[a]);
    	else
        printf("0\n");
    }
 }
   return 0;
}