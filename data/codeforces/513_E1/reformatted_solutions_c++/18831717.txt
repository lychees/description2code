
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <iostream>
#include <iterator>
#include <list>
#include <map>
#include <memory.h>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

const int INF = 1000000000;

int main() {
  int n, k;
  int a[500];
  int dp[500][500][60];

  cin >> n >> k;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }

  for (int i = 0; i < n; i++) {
    for (int j = i; j < n; j++) {
      dp[i][j][1] = 0;
    }
  }

  for (int t = 2; t < k + 1; t++) {
    int mp = -INF;
    int mn = -INF;

    for (int l = 0; l < n; l++) {
      int sum = 0;
      for (int r = l; r < n; r++) {
        sum += a[r];
        dp[l][r][t] = max(mp - sum, mn + sum);
      }
      sum = 0;
      for (int prev = l; prev >= 0; prev--) {
        sum += a[prev];

        {
          mp = max(mp, dp[prev][l][t - 1] + sum);
          mn = max(mn, dp[prev][l][t - 1] - sum);
        }
      }
    }
  }
  int res = 0;
  for (int l = 0; l < n; l++) {
    for (int r = l; r < n; r++) {
      res = max(res, dp[l][r][k]);
    }
  }

  cout << res << endl;

  return 0;
}
