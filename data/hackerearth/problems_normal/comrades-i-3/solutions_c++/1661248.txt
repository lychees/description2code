#include <stdio.h>
#include <vector>

using namespace std;

int visited [1000001] = {0};
int st [1000001] = {0};
int in [1000001] = {0};
int out [1000001] = {0};
int count;

vector <int> v [1000001];

void dfs (int vi, int step) {
	int i;
	count++;
	in [vi] = count;
	visited [vi] = 1;
	st [vi] = step;
	
	for (i = 0; i < v [vi].size (); i++) {
		if (visited [v [vi] [i]] == 0) {
			dfs (v [vi] [i], step + 1);
		}
	}
	
	count++;
	out [vi] = count;
	
	return;
}

int a [1000001];

int main ()
{
	int n, i, j, g, t, q, x, y;
	
	scanf ("%d", &t);
	
	while (t--) {
	for (i = 0; i < 100001; i++) {
		st [i] = 0;
		visited [i] = 0;
		in [i] = 0;
		out [i] = 0;
		count = 0;
	}
	
	scanf ("%d", &n);
	
	for (i = 1; i <= n; i++) {
		scanf ("%d", & a [i]);
		if (a [i] != 0) {
			v [a [i]].push_back (i);
		}
		if (a [i] == 0) {
			g = i;
		}
	}
	
	dfs (g, 1);
	
	scanf ("%d", &q);
	
	while (q--) {
		scanf ("%d%d", &x, &y);
		g = st [x] - st [y] - 1;
		if (g >= 0 && in [x] > in [y] && out [y] > out [x]) {
			printf ("%d\n", g);
		} else {
			printf ("-1\n");
		}
	}
	for (i = 0; i < 100001; i++) {
		v [i].clear ();
	}
	}
	return 0;
}