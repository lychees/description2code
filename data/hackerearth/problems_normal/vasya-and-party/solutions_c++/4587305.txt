#include <bits/stdc++.h>
#define gc getchar
#define M 1000000007
using namespace std;
bool visited[100100];
int a[100100];
void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
int bfs(vector<vector<int>> v,int n){
    queue<int> q;
    int i=0,l,j,max,count_max;
    long long ans=1;
    l=v[i].size();
    while(i<n)
    {
    	l=v[i].size();
    	if(visited[i]==0)
    	{	
    		q.push(i);
    		visited[i]=1;
    		max=a[i];
    		count_max=1;
    	//}
    	while(!q.empty()){
        	int node=q.front();
        	q.pop();
        	l=v[node].size();
        	for(j=0;j<l;j++)
        	{	if(visited[v[node][j]]==0)
        	    {
        	    	if(a[v[node][j]]==max)
        	    		count_max++;
        	    	if(a[v[node][j]]>max)
        	    	{
        	    		max=a[v[node][j]];
        	    		count_max=1;
        	    	}
        	    	visited[v[node][j]]=1;
        	    	q.push(v[node][j]);
        	    	//cout<<v[node][j]<<" ";
        	    }
        	}
    	}
    	//if(count_max==2)
    	//cout<<count_max<<" ";
    	ans=(ans*count_max)%M;
    	}
    i++;
    }
    return ans;
}


int main()
{
    int n,m,i,j,x,y;
    scanint(n);
    scanint(m);
    vector<vector<int>> v(n);
    for(i=0;i<n;i++)
    	scanint(a[i]);
    for(i=0;i<m;i++)
    {
    	scanint(x);
    	scanint(y);
    	x--;
    	y--;
    	//x=x<y?x:y;
    	//y=y>x?y:x;
    	v[x].push_back(y);
    	v[y].push_back(x);
    }
    /*for(i=0;i<n;i++)
    {
    	for(j=0;j<v[i].size();j++)
    		cout<<v[i][j]<<" ";
    	cout<<endl;
    }*/
    cout<<bfs(v,n);
    return 0;
}
