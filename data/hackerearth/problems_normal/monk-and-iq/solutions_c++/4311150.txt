#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<cmath>
#include<functional>
#include<vector>
#include<climits>
using namespace std;
#define ll long long
#define MAX 100000

#define node pair<int, ll>
priority_queue<node, vector<node>,greater<node> >  ar;
vector<int> course[MAX];
int x[MAX], y[MAX];
#define pb(a)	push_back(a)
#define pp		pop_back()
#define sz		size()
int main() {
	int c, p, n;
	cin >> c >> p >> n;

	for (int i = 0;i < n;i++) {
		cin >> y[i];
		course[i].pb(y[i]);
	}
	for (int i = 0;i < p;i++) {
		cin >> x[i];
	}

	for (int i = 0;i < c;i++) {
		ll z;
		if (course[i].sz >= 2) {
			z = (course[i][course[i].sz-1]+course[i][course[i].sz-2])*course[i].sz;
		}
		else if (course[i].sz == 1) {
			z = course[i][0];
		}
		else z = 0;

		ar.push(make_pair(z,i));
	}
	for (int i = 0;i < p;i++) {
		node tmp = ar.top();
		ar.pop();
		ll z;
		cout << tmp.second + 1 << " ";
		course[tmp.second].pb(x[i]);
		if (course[tmp.second].sz >= 2) {
			z = (course[tmp.second][course[tmp.second].sz - 1] + course[tmp.second][course[tmp.second].sz - 2])*course[tmp.second].sz;
		}
		else if (course[tmp.second].sz == 1)z = x[i];
		ar.push(make_pair(z,tmp.second));
	}
// 	system("pause");
	return 0;
}