#! /usr/bin/env python
# -*- coding: utf-8 -*-

from sys import stdin
from itertools import combinations
from itertools import permutations
from math import sqrt
from copy import deepcopy
from sys import setrecursionlimit


def main():
    tags = filter(lambda x: x[0] == "<", getline().split(">"))
    tags = map(lambda x: x + ">", tags)

    depth = 0

    for t in tags:
        if t[1] == "/":
            depth -= 1
        print("  " * depth) + t
        if t[1] != "/":
            depth += 1

    return 0

# -------------------------------------------
# TEMPLATE


def getline():
    return stdin.readline()


def getLineAs(tp):
    return map(tp, getline().split())


def array(n, init=0):
    return [deepcopy(init) for i in range(n)]


def count_if(lst, pred):
    ret = 0
    for i in lst:
        if pred(i):
            ret = ret + 1
    return ret


def toSepStr(lst):
    if len(lst):
        return "".join([str(item) + " " for item in lst])[:-1]
    else:
        return ""


if __name__ == "__main__":
    setrecursionlimit(1024 * 1024)
    main()
