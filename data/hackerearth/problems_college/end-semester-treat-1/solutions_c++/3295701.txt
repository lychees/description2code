// ADITYA VARSHNEY

#include <iostream>
#include <bitset>
#include <cmath>
#include <queue>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <climits>

#define pb push_back
#define mp make_pair
#define mod 1000000007

typedef long long int ll;

using namespace std;

#define getcx getchar//_unlocked
#define mod2 4294967296

long long int powr (long long int a, long long int b)
{
if (b == 0)
return 1;
long long int x = powr(a, b/2);
if (b % 2 == 0)
return (x*x)%mod;
else
return (((x*x)%mod)*a)%mod;
}


long long int scanll()
{
    long long int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

int scani()
{
    int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

int main()
{
    ll k,t,n,task,i,j,x;
    t = scanll();
    while(t--) {
        vector <ll> res;
        vector < vector <ll> > O,R,N;
        n = scani();
        for(i = 0; i < n ; i++) {
            x = scanll();
            res.pb(x);
        }
        task = scani();
        ll flag[task];
        memset(flag,0,sizeof(flag));
        for(i = 0; i < task ; i++) {
            O.pb(vector <ll> ());
            for(j = 0; j < n ; j++) {
                x = scanll();
                O[i].pb(x);
            }
        }
        for(i = 0; i < task ; i++) {
            R.pb(vector <ll> ());
            N.pb(vector <ll> ());
            for(j = 0; j < n ; j++) {
                x = scanll();
                R[i].pb(x);
                N[i].pb(R[i][j] - O[i][j]);
            }
        }
        for(i = 0; i < task ; i++) {
            for(j = 0; j < task ; j++) {
                ll cnt = 0;
                for(k = 0 ; k < n; k++) {
              //      cout<<"for -> "<<j<<" "<<res[k]<<" "<<N[j][k]<<endl;
                    if(res[k] >= N[j][k]) cnt++;
                }
              //  cout<<"udibce "<<cnt<<endl;
                if(cnt == n) {
                //    cout<<"hi -> "<<j<<endl;
                    flag[j] = 1;
                    for(k = 0 ; k < n; k++) {
                        res[k] += O[j][k];
                    }
                } else {
                    goto l2;
                }
            }
            l2: ;
        }
        ll cnt = 0;
        for(i = 0; i < task; i++) {
            if(flag[i]) cnt++;
        }
        if(cnt == task) cout<<"YES\n";
        else cout<<"NO\n";
    }
    return 0;
}
