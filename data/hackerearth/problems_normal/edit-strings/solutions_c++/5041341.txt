//includes
#include <bits/stdc++.h>

using namespace std;

//defines
 #define all(c) c.begin(), c.end()
#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);
#define N cout<<"\n" //do not use endl ( it  will reduce speed )
#define O cout<<
#define I cin>>
#define test cout<<"--------------testing -------------\n";
#define ll long long
#define re(i,a,b) for(int i=int(a);i<int(b);i++)
#define ret(i,a,b) for(size_t i(a);i<int(b);i++)
#define container(type,name) for(container<type>::iterator it=name.begin();it!=name.end();it++)
#define pb push_back
#define all(c) c.begin(), c.end()
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define present(container, element) (container.find(element) != container.end()) //for map,set..etc
#define cpresent(container, element) (find(all(container),element) != container.end()) //for vectors
#define mp make_pair
/*   FILE IO
     freopen("in.txt","r",stdin);
     freopen("out.txt","w",stdout);

 */  
#define MAX_N 100010

 // T = text, P = pattern
int b[MAX_N]={0}; // b = back table
string s="";
string P="..";
int num=0;


void calcuArray(){
    int j=0;
    int i=1;
   while(i<P.length()){
  
   if(P[i]==P[j]){
  
    b[i]=j+1;i++;j++;

   }
   else if(j>0) j=b[j-1];

   else{
   	b[i]=j;i++;

   }
   }

}
void myKmp (){

   int i=0;int j=0;

   while(i<s.length()){

    if(s[i]==P[j]){
   
      i++;j++;
       if(j==P.length())num++;
    }
    else if(j>0)	j=b[j-1];
    
    else{
     j=0;
     i++;
    }

}
O num<<endl;
   }
   
   int main(){
   
   	 int l,n;
   	I l>>n;
   	
      cin>>s;
   
   	 while(n--){
   	 	int i;cin>>i;
   	 	char c;cin>>c;
   	 	s[i-1]=c;
   	 	calcuArray();myKmp();
   	 num=0;
  
   	 }
   	
   return 0;  	
    }

