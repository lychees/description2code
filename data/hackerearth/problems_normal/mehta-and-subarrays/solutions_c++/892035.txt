//Utkarsh Saxena
#include<iostream>
#include<limits.h>
#include<map>
#include<vector>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<queue>
using namespace std;//miller rabin primality 7 set for 64 bit int {2, 325, 9375, 28178, 450775, 9780504, 1795265022}
#define abs(x) ((x)>0?(x):-(x))
#define M 1000000007
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define tkint(n) scanf("%d",&n)
#define tkchar(ch) scanf("%c",&ch)
#define tklong(n) scanf("%llu",&n)
#define  ms0(s) memset(s,0,sizeof s)
//vector<int> graph[2*100000+5];int visited[2*100000+5];
vector<pair<lld,int> >v;
int d[1000000+5];
lld s[1000000+5];
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;++i)
	{
		tkint(d[i]);
		s[i]=d[i]+s[i-1];
		v.ps(make_pair(s[i],i));
	}
	sort(v.begin(),v.end());
	int p=0;
	int ans=-1;
	for(int i=n;p<v.size() and i>=1;i--)
	{
		while(p<v.size() and v[p].first<=s[i])
		{
			if(i-v[p].second<1){p++;continue;}
			ans=max(ans,i-v[p].second);
			p++;
		}
	}
	if(ans==-1){cout<<-1;return 0;}
	int f=0;
	for(int i=ans;i<=n;++i)
	{
		if(s[i]-s[i-ans]>=0)++f;
	}
	cout<<ans<<' '<<f;
}
