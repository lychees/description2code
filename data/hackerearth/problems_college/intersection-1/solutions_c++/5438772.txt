#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > tii;
typedef vector<int> vec;
typedef vector<long long> vecll;
typedef vector<pair<int,int> > vec_pii;
typedef vector<vector<int> > ugraph;
typedef vector<vector<pair<int,int> > > wgraph;
#define mp make_pair
#define setbits(n) __builtin_popcount((n))
#define pb push_back
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define min3(a,b,c) (min((c),min((a),(b))))
#define max3(a,b,c) (max((a),max((b),(c))))
#define ff first
#define ss second
#define mset(a,b) memset(a,b,sizeof(a));
#define newline "\n"
#define space " "

ll fastPower(ll base,ll power)
{
        ll result=1;
        while (power>0) 
        {
                if (power%2==1)         
                        result = (result*base);
                base = (base*base);
                power/=2;
        }
        return result;
}
bool check(ll y,ll q,ll k)
{
    if(fastPower(y,q)>=k)
        return true;
    else
        return false;
}
int main()
{
    int test;
    cin>>test;
    for(int ts = 1;ts<=test;++ts)
    {
        ll p,q,k;
        cin>>p>>q>>k;
        ll low_x,up_x,low_y,up_y;
        low_x=low_y = 0;
        up_y = pow(k,((double)1.00/(double)(q)))+1;
        up_x = pow(k,((double)1.00/(double)(p)))+1;
        int finans = 0;
        // cout<<up_x<<" "<<up_y<<newline;
        for(int x=low_x;x<up_x;++x)
        {
            ll temp = k - fastPower(x,p) - x ;
            // cout<<"temp "<<temp<<newline;
            ll low,high;
            low = 0;
            high = up_y;
            while(low<=high)
            {
                ll mid = (low+high)>>1;
                if(check(mid,q,temp))
                {
                    if(fastPower(mid,q)==temp)
                    {
                        finans++;
                        break;
                        // cout<<x<<" "<<mid<<newline;
                    }
                    high = mid-1;
                }
                else
                {
                    low = mid+1;
                }
            }
        }
        cout<<"Case #"<<ts<<": "<<finans<<newline;
    }
}