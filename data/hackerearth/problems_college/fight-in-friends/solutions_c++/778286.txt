#include <iostream>
#include <queue>
using namespace std;

int bfs(vector<vector<int> >&mem,int n,int source,int dest){
	queue<int> Q1,Q2,*ptr1,*ptr2;
	vector<int> visited(mem.size(),0);
	visited[source]=1;
	Q1.push(source);
	ptr1 = &Q1;
	ptr2 = &Q2;
	int level = 0;
	while(!(ptr1->empty())){
		while(!(ptr1->empty())){
			int curr = ptr1->front();
			ptr1->pop();
			
			if(curr==dest) return level;
			for(int i=1;i<=n;i++){
				if(mem[curr][i]==1&&visited[i]==0){

					visited[i]=1;
					ptr2->push(i);
				}
			}
		}
		level++;
		queue<int>*tmp=ptr1;
		ptr1=ptr2;
		ptr2=tmp;
	}
	return -1;
}

int main()
{
	int n,m,a,b;
	cin>>n>>m>>a>>b;
	vector<vector<int> > mem(1001,vector<int>(1001,1));
	for(int i=0;i<m;i++){
		int p,q;cin>>p>>q;
		mem[p][q]=0;
		mem[q][p]=0;
	}
	int ans = bfs(mem,n,a,b);
	cout<<ans<<endl;
    return 0;
}
