#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007

int main() {
    int N, K;
    cin >> N >> K;
    bool possible[1001];
    memset(possible, false, sizeof false);
    possible[0] = true;
    for (int i = 0; i < K; i++) {
    	int w;
    	cin >> w;
    	if (w <= N) {
    		for (int j = w; j <= N; j++) {
    			possible[j] |= possible[j-w];
    		}
    	}
    }
    
    long long dp[1001][2];
    memset(dp, 0, sizeof dp);
    dp[0][0] = 1;
    for (int i = 1; i <= N; i++) {
    	dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % MOD;
    	dp[i][1] = 0;
    	for (int j = 1; j <= i; j++) {
    		if (possible[j]) {
    			dp[i][1] += dp[i-j][0];
    			dp[i][1] %= MOD;
    		}
    	}
    }
    
    long long ans = (dp[N][0] + dp[N][1]) % MOD;
    cout << ans << endl;
    
    return 0;
}