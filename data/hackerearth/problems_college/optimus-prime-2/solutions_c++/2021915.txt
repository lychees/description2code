    #include <iostream>
    #include<cmath>
    using namespace std;
    #define gc getchar_unlocked
	 long long int inp() 
	{
	  char c = gc();
	  while(c<'0' || c>'9') c = gc();
	  long long int ret = 0;
	  while(c>='0' && c<='9') 
	 {
	    ret = 10 * ret + c - 48;
	    c = gc();
	  }
	  return ret;
	}
    bool primes[10000001], flag, p2[10000001];
    long long int p[1000000];
    int main()
    {
        char temp;
        int k=0, size;
        long long int n, i, j=2, m, t, c, base , a, c2;
        for(i=0;i<10000001;i++)
        primes[i]=0;
        primes[1]=primes[0]=1;
        for(i=2;i*i<10000001;i++)
        {
        	if(primes[i]==0)
        	{
        		for(j=i*i;j<10000001;j+=i)
        		primes[j]=1;
        	}
        }
        for(i=2;i<10000001;i++)
        if(primes[i]==0)
        { p[k++]=i;}
        
        t=inp();
        while(t--)
        {
           m=inp();
           n=inp();
           c2=0;
           if(m<2)
           m=2;
           while(m<=n&&m<=10000000)
           {
           		flag=0;
           		if(primes[m]==0)
           		{a=m;c=0;
           		 while(a>0)
           		 {
           		 	if(primes[a%10]==0)
           		 	c++;
           		 	a/=10;
           		 }
           		 if(primes[c]==0)
           		 c2++;
           		}
           		m++;
           }
           if(m<=n)
           {
           	size=n-m+1;
           	for(i=0;i<size;i++)
           	p2[i]=0;
           	for(i=0;p[i]*p[i]<=n;i++)
           {
           		base=m+(p[i]-m%p[i])%p[i];
           		if(base==p[i])
           		base=base+p[i];
           		for(j=base;j<=n;j+=p[i])
           		p2[j-m]=1;
           }
           for(i=0;i<size;i++)
           if(p2[i]==0)
           {
           		a=i+m;c=0;
           		while(a)
           		{
           			if(primes[a%10]==0)
           			c++;
           			a/=10;
           		}
           		if(primes[c]==0)
           		c2++;
           }
           }
           printf("%lld\n", c2);
        }

        return 0;
    }

