/*
   AUTHOR  : Peeyush Yadav
   Problem : Project Euler #29: Distinct powers
*/

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define f(a,b,c)                for(int a=b;a<c;a++)
#define s(x)                    scanf("%d",&x);
#define sl(x)                   scanf("%lld",&x);
#define p(x)                    printf("%d\n",x);
#define pl(x)                   printf("%lld\n",x);
#define p1d(a,n)                for(int ix=0;ix<n;ix++) printf("%d ",a[ix]); printf("\n");
#define p2d(a,n,m)              for(int ix=0;ix<n;ix++){ for(int jx=0;jx<m;jx++) printf("%d ",a[ix][jx]); printf("\n");}
void input(){
    #ifdef Megamind
            #define DEBUG
            #define TRACE
            #define gc getchar()
            freopen("inp.txt","r",stdin);
            //freopen("out1.txt","w",stdout);
    #else
            #define gc getchar_unlocked()
    #endif
}
#ifdef TRACE
    #define trace(x)                       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
    #define trace2(x,y)                    cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
    #define trace3(x,y,z)                  cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
#else
    #define trace(x)
    #define trace2(x,y)
    #define trace3(x,y,z) 
#endif
template <class T>
inline void read(T &n1){
	n1=0;
    char c=gc;
    while(c<'0' || c>'9') c=gc;
    while(c>='0' && c<='9'){
       n1=(n1<<3)+(n1<<1)+c-'0';
       c=gc;
    }
}
inline ll power(ll a, ll b, ll m) {
    ll r = 1;
    while(b) {
        if(b & 1) r = r * a % m;
        a = (a * a)% m;
        b >>= 1;
    }
    return r;
}
inline ll power(ll a, ll b) {
     ll r = 1;
    while(b) {
        if(b & 1) r = r * a ;
        a = a * a;
        b >>= 1;
    }
    return r;
}
 
/*........................................................END OF TEMPLATES.......................................................................*/
bool p[32009];
int prime[30009];

void seive(){
	for(int i =2 ; i*i <= 32008 ; i++){
		if(!p[i]){
			int j = i+i;
			while(j <= 32008){
				p[j]=1;
				j+=i;
			}
		}
	}
	
	int h = 0;
	
	for(int i=2 ; i < 32008 ; i++){
		if(!p[i]) prime[h++]=i;
	}
	
	//p(prime[h-1])
}


inline int gcd(int a, int b){
	if(!b) return a;
	return gcd(b,a%b);
}

inline int phi2 (int n) {
		int result = n;
		for (int i=0; prime[i]*prime[i]<=n; ++i)
			if (n % prime[i] == 0) {
				while (n % prime[i] == 0)
					n /= prime[i];
				result -= result / prime[i];
			}
		if (n > 1)
			result -= result / n;
		return result;
	}

	
int main(){
	
	input();
	seive();
	
	int t;
	s(t);
	ll temp,ans,second;
	int a,p,n,phi1;
	while(t--){
		
		read(a);
		read(p);
		read(n);
		
		int g = gcd(a,p);
		if(g > 1) puts("-1");
		else{
		    phi1 = phi2(p);
			second = power(a,phi1 - 1,p);
			
			temp = n/2;
		    ans = second*temp;
			
			temp = (n+1)/2;
			ans = ans +  temp*(ll)a;
			pl(ans)
		}
		
	}
}
