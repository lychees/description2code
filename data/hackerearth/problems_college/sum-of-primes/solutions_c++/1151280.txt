#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int t;
bool use[1000001];
long long int bit[1000001];
void add(int i, int x){
	while (i < 1000001){
		bit[i] += x;
		i += i&-i;
	}
}
long long int sum(int i){
	if (i == 0){
		return 0;
	}
	long long int r = 0;
	while (i){
		r += bit[i];
		i -= i&-i;
	}
	return r;
}
vector<long long int> prime;
int main(){
	scanf("%d", &t);
	add(2, 2);
	for (int i = 3; i < 1000001; i+=2){
		if (use[i] == false){
			add(i, i);
			prime.push_back(i);
			for (int j = i * 2; j < 1000001; j += i){
				use[j] = true;
			}
		}
	}
	while (t--){
		int a, b;
		scanf("%d%d", &a, &b);
		long long int g = sum(b) - sum(a - 1);
		if (g % 2){
			bool ok = 0;
			for (int i = 0; i < prime.size() && prime[i] * prime[i] <= g; i++){
				if (g%prime[i] == 0){
					ok = 1;
					break;
				}
			}
			if (ok == false){
				puts("YES");
				continue;
			}
		}
		puts("NO");
	}
	return 0;
}