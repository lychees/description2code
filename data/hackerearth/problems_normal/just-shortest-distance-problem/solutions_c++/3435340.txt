#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>

#define mod 1000000007
#define inf 100000000
#define MAX 1001
#define ll long long int
#define PII pair<int, int>
#define f first
#define s second
#define ss(n) scanf("%lld", &n)
#define ssf(n) scanf("%lf", &n)
#define mk make_pair
#define PLL pair<ll, ll>
#define pb push_back
#define gc getchar
#define FR(i, a, b) for(ll i=(ll)a;i<=(ll)b;i++)
#define RFR(i, a, b) for(ll i=(ll)a;i>=(ll)b;i--)
using namespace std;
ll dist[MAX], visited[MAX];
vector<ll> adj[MAX];
void bfs(ll x)
{
    ll i, y;
    for(i=0;i<MAX;i++)
        visited[i]=0;
    visited[x]=1;
    queue<ll> Q;
    Q.push(x);
    while(!Q.empty())
    {
        x=Q.front();
        Q.pop();
        for(i=0;i<adj[x].size();i++)
        {
            y=adj[x][i];
            if(!visited[y])
            {
                visited[y]=1;
                dist[y]=min(dist[y], dist[x]+1);
                Q.push(y);
            }
        }
    }
}
int main()
{
    ll n, m, x, y, i, ch;
    ss(n);ss(m);
    FR(i, 0, MAX-1)
    {
        dist[i]=inf;
    }
    dist[0]=0;
    while(m--)
    {
        ss(ch);
        if(ch==1)
        {
            ss(x);
            x--;
            if(dist[x]==inf)
            {
                printf("-1\n");
            }
            else
                printf("%lld\n", dist[x]);
        }
        else
        {
            ss(x);ss(y);
            x--;y--;
            adj[x].pb(y);
            if(dist[x]==inf)
                continue;
            if(dist[y]>dist[x]+1)
            {
                dist[y]=dist[x]+1;
                bfs(y);
            }
        }
    }
}



