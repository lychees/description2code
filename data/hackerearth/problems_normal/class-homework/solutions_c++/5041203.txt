#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
using namespace std;

string input;
long long ans;
long long sum[21][5];

long long max(long long a, long long b)
{
	return(a > b) ? a : b;
}

long long fun(int length, int parts)
{
	int i;

	if (length == 0)
		return sum[length][parts];

	if (sum[length][parts] != -1000000000000000LL)
		return sum[length][parts];

	if (parts == 1)
	{
		if (input[0] == '0')
		{
			if (length == 1)
			{
				sum[length][parts] = 0;
				return sum[length][parts];
			}
			return sum[length][parts];
		}

		long long temp = 0LL;
		for (i = 0; i <= length - 1; i++)
			temp = temp * 10 + (input[i] - '0');
		if (temp<=1000000000000 && temp!=0)
			sum[length][parts] = temp;
		return sum[length][parts];
	}

	//if (length < parts)
		//return sum[length][parts];

	if (length == parts)
	{
		long long temp = 0LL;
		for (i = 0; i <= length - 1; i++)
			temp = temp + (input[i] - '0');
		sum[length][parts] = temp;
		return sum[length][parts];
	}

	long long digit;
	long long newnum = 0LL;
	long long base = 1LL;
	for (i = length-1; i >= 0; i--)
	{
		digit = input[i] - '0';
		if (digit != 0 || (digit == 0 && base == 1))
		{
			newnum = digit*base + newnum;
			if (newnum<=1000000000000)
				sum[length][parts] = max(sum[length][parts], newnum + fun(i, parts - 1));
		}
		base = base * 10;
		if (i < parts)
			break;
	}
	return sum[length][parts];
}

int main()
{
	int T;
	cin >> T;

	int t;
	for (t = 1; t <= T; t++)
	{
		ans = 0;
		int i, j;
		for (i = 0; i <= 20;i++)
			for (j = 0; j <= 4; j++)
				sum[i][j] = -1000000000000000LL;
		
		cin >> input;
		int length = input.length();
		
		fun(length, 4);
		ans = sum[length][4];

		if (ans < 0)
			cout << "unlucky" << endl;
		else
			cout << ans << endl;
	}
	return 0;
}