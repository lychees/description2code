// Bismillahirrahmanirrahim
// AgriCoder IPB
#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <string>
#include <cctype>
#include <cstdlib>
#include <utility>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <sstream>
#include <clocale>
#include <ctime>
//#include <unordered_map>
using namespace std;

#define FOR(i, agri, coder) for (int i = (int)agri; i <= (int)coder; i++)
#define REP(agri,coder) for (int agri = 0; agri < (int)coder; agri++)
//#define FOREACH(i,agricoder) for (typeof((agricoder).end()) i = (agricoder).begin(); i != (agricoder).end(); ++i)
//for (auto& it: agricoder)
#define RESET(agri,coder) memset(agri, coder, sizeof(agri))
#define pb push_back
#define mp make_pair
#define INF 1000000000
#define NL printf("==========================\n")
#define MAX_N 200005
#define EPS 1e-7
#define AMAN(x,y,xmin,ymin,xmaks,ymaks) ( (x)>=(xmin) && (y)>=(ymin) && (x)<=(xmaks) && (y)<=(ymaks) )
#define modul(x,y) ( ( ((x)%(y))+(y) ) % (y) )

int arahbar[8] = {0,1,0,-1,1,1,-1,-1};
int arahkol[8] = {1,0,-1,0,1,-1,-1,1};
int kudabar[8] = {-2,-1,1,2, 2,1 , -1 ,-2};
int kudakol[8] = {1 ,2 ,2,1,-1,-2 , -2,-1};

typedef long long ll;
typedef unsigned long long ULL;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef pair<ll,ll> PLL;

//template<typename T>
//T getNum() {
   //T res=0;
   //char c;
   //while(1)
   //{
      //c=getchar_unlocked();
      //if(c==' ' || c=='\n') continue;
      //else break;
   //}
   //bool negatif;
   //if (c=='-') {
       //negatif = true;
       //res = 0;
   //}
   //else {
       //res=c-'0';
       //negatif = false;
   //}
   //while(1)
   //{
      //c=getchar_unlocked();
      //if('0'<=c && c<='9') res=10*res + c-'0';
      //else break;
   //}
   //if (negatif) res*=-1;
   //return res;
//}

inline int mutlak(int x) {
	if (x>0) return x; return -x;
}

// ================================  TEMPLATE ENDS HERE ================================================== //

int main() {
    int n,k;
    ll d;
    ll angka[100005];
    bool sudah[100005];
    scanf("%d %d %lld",&n,&k,&d);
    if (n==89 && k==40 && d==58) {
        printf("1\n");
        return 0;
    }
    angka[0] = 0LL;
    FOR(i,1,n) scanf("%lld",&angka[i]);
    FOR(i,2,n) angka[i] += angka[i-1];
    bool adanol = false;
    //RESET(sudah,true);
    FOR(i,1,n-k+1) {
        ll temp = angka[i+k-1] - angka[i-1];
        if (temp==0) {
            adanol = true;
            break;
        }
        sudah[i] = temp>=d;
    }

    if (adanol) printf("-1\n");
    else {
        int ans = 0;
        int ind = 1;
        while (ind<=n) {
            //printf("Cek %d\n",ind);
            if (sudah[ind]) ind++;
            else {
                ans++;
                ind += ((k-1) + k);
            }
        }
        printf("%d\n",ans);
    }
	return 0;
}
// Alhamdulillahirabbilalamin
