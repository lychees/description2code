#include <bits/stdc++.h>

using namespace std;

#define endl '\n'
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define rep(i, a, b) for(int i=a;i<b;++i)
#define SZ(x) ((int)(x).size())

typedef vector<int> VI;
typedef long long LL;
typedef pair<int,int> PII;

template<typename TH>
void debug_vars(const char* data, TH head){
	cerr << data << "=" << head << "\n";
}

template<typename TH, typename... TA>
void debug_vars(const char* data, TH head, TA... tail){
	while(*data != ',') cerr << *data++;
	cerr << "=" << head << ",";
	debug_vars(data+1, tail...);
}

const int INF = 0x3f3f3f3f;
const int MAX = 10010;
vector<PII> G[MAX];
vector<int> dist;
int N;

void dijkstra(int s){
	dist.assign(N, INF);
	dist[s] = 0;

	priority_queue<PII, vector<PII>, greater<PII> > pq; pq.push(mp(0,s));

	while(!pq.empty()){
		PII front = pq.top(); pq.pop();

		int d = front.first, u = front.second;

		if(d > dist[u]) continue;

		rep(j, 0, SZ(G[u])){
			PII v = G[u][j];
			if(dist[u] + v.second < dist[v.first]){
				dist[v.first] = dist[u] + v.second;
				pq.push(mp(dist[v.first], v.first));
			}
		}
	}
}

int main(){
	ios::sync_with_stdio(false); cin.tie(0);

	int T, M, Q;
	cin>>T;

	rep(inst, 1, T+1){
		cin>>N>>M;

		rep(i, 0, N)
			G[i].clear();

		int u, v, w;
		rep(i, 0, M){
			cin>>u>>v>>w;

			u--; v--;

			G[u].pb(mp(v, w));
			G[v].pb(mp(u, w));
		}

		dijkstra(0);

		cin>>Q;

		int k, value;
		rep(i, 0, Q){
			cin>>v>>k;
			v--;

			value = max(0, k - 2*dist[v]);
			cout<<value<<endl;
		}
	}

	return 0;
}





















