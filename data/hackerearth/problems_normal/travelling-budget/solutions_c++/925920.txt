#include <iostream>
#include <map>
#include <set>
#include <vector>
using namespace std;

typedef map<int, pair<int, int> > emap;
typedef set<pair<int, int> > vset;
vector<emap> e;
vector<vset> v;

void search(int ni, int c, int l)
{
	vset v2;
	for (vset::const_iterator it = v[ni].begin(); it != v[ni].end(); it++)
		if (it->first <= c && it->second <= l)
			return;
		else if (it->first < c || it->second < l)
			v2.insert(*it);
	v2.insert(make_pair(c, l));
	v[ni] = v2;
	for (emap::const_iterator it = e[ni].begin(); it != e[ni].end(); it++)
		search(it->first, c + it->second.first, l + it->second.second);
}

void tc()
{
	int n, m, b, q;
	cin >> n >> m >> b;
	e.resize(n + 1);
	v.resize(n + 1);
	for (int i = 0; i < m; i++) {
		int u, v, c, l;
		cin >> u >> v >> c >> l;
		e[u][v] = make_pair(c, l);
	}
	search(1, 0, 0);
	cin >> q;
	for (int i = 0; i < q; i++) {
		int x, y, val = -1;
		cin >> x >> y;
		for (vset::const_iterator it = v[x].begin(); it != v[x].end(); it++)
			if (it->first <= y && (val == -1 || it->second < val))
				val = it->second;
		cout << val << endl;
	}
	e.clear();
	v.clear();
}

int main()
{
    int t;
    cin >> t;
    for (int i = 0; i < t; i++)
    	tc();
}
