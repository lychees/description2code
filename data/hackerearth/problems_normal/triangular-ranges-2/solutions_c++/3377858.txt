#include <bits/stdc++.h>

using namespace std;

vector < long long > v;

int binar_search(int lowest, long long value, bool upper){

    int low = lowest, high = v.size(), mid;

    while(high > low){

        mid = low + (high - low) / 2;
        //printf("%lld\n", v[mid]);

        if(upper){

            if(v[mid] > value) high = mid;
            else low = mid + 1;

        } else {

            if(v[mid] < value) low = mid + 1;
            else high = mid;
        }
    }

    //if(upper && v[high] > value) high--;
    //if(!upper && v[high] < value) high++;
    //if(high == v.size()) return lowest;

    //if(!upper) {cout << low << "\n";return low;}
    //cout << high << "\n";
    if(!upper) return low;
    return high;
}

int main()
{
    //ios::sync_with_stdio(false);cin.tie(0);

    long long t , l , r;
    long long ans;


    for(long long i = 1; ; i++){

        long long trianglar = (i * (i + 1)) / 2;
        if(trianglar > 1e12) break;
        v.push_back(trianglar);
    }
   // cout << v.size();


    cin >>   t      ;

    while( t-- ){

        ans = 0;

        cin >> l >> r;

        for(int i = 0; i < v.size() && v[i] <= r; i++){

            ans += binar_search(i , r - v[i], true) - binar_search(i, l - v[i], false);
        }

        cout << ans << "\n";
    }

    return 0;
}
