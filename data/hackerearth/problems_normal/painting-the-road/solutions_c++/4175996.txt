#include <bits/stdc++.h>
using namespace std;
int L,K;
#define INF 10000000
struct node
{
int x;
int y;
int w;
};
node a[600];
int dp[600][260][260];
int comp(node a1,node b)
{
if(a1.x<b.x)
return 1;
if((a1.x==b.x)&&(a1.y<b.y))
return 1;
if((a1.x==b.x)&&(a1.y==b.y)&&(a1.w<b.w))
return 1;
return 0;
}
int fun(int idx,int start,int end)
{
if(idx==K)
{
if(start==1&&end==L+1)
return 0;
return INF;
}
if(dp[idx][start][end]!=-1)
return dp[idx][start][end];
int ret=INF;
ret=min(ret,fun(idx+1,start,end));
  if (( a[idx].x <= start && a[idx].y >= start) || (a[idx].x <= end && a[idx].y >= end) || (start == 257 && end == 0))
        ret = min (ret, a [idx].w + fun (idx + 1, min (start, a [idx].x), max (end, a [idx].y)));  // Take it.
    return dp[idx][start][end] = ret;
    }
int main()
{
int t,a1,b,c;
scanf("%d",&t);
while(t--)
{
scanf("%d%d",&L,&K);
memset(dp,-1,sizeof dp);
for(int i=0;i<K;i++)
{
scanf("%d%d%d",&a[i].x,&a[i].y,&a[i].w);
a[i].x+=1;
a[i].y+=1;
}
sort(a,a+K,comp);
int ans=fun(0,257,0);//fun(idex,start,end)
if(ans==INF)
printf("-1\n");
else
printf("%d\n",ans);
}
return 0;
}