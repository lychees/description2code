#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<climits>
using namespace std;
#define mod 1000000007
int parent[100001],r[100001];

int find(int x)
{
	if(x!=parent[x])
	parent[x]=find(parent[x]);
	return parent[x];
}

void merge(int x,int y)
{
	int px=find(x);
	int py=find(y);
	if(px!=py)
	{
		if(r[px]>r[py])
		{
			parent[py]=px;
			r[px]+=r[py];
		}
		else
		{
			parent[px]=py;
			r[py]+=r[px];
		}
	}
}

long long int fac(int x)
{
	if(x==0)
	return 1;
	else
	return ((x%mod)*(fac(x-1)%mod))%mod;
}

int main()
{
	int n,k,x,y,i;
	cin >> n >> k;
	for(i=0;i<=n;i++)
	{
		parent[i]=i;
		r[i]=1;
	}
	while(k--)
	{
		cin >> x >> y;
		merge(x,y);
	}
	vector<int> v;
	for(i=0;i<n;i++)
	{
		if(parent[i]==i && r[i]!=1)
		v.push_back(r[i]);
	}
	long long int ans=1;
	for(i=0;i<v.size();i++)
	{
		ans=(ans*fac(v[i]))%mod;;
	}
	cout << ans << endl;
	return 0;
}