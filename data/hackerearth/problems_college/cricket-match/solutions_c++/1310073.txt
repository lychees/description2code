#include <iostream>
#include <vector>
#include <cstring>
#include <queue>
using namespace std;
bool ok = true;
int vis[100001];
int n;
vector<int> g[100001];
bool dfs(int u){
	queue<int> q;
	q.push(u);
	while(!q.empty()){
		int p = q.front();
		q.pop();
		for(int v:g[p]){
			if (vis[v]==-1){
				vis[v] = vis[p]^1;
				q.push(v);
			}
			else if (vis[v]==vis[p]){
				
				return 0;
			}
		}
	}
	return 1;
}
int main()
{
    int t,m,a,b;
    scanf("%d",&t);
    while(t--){
    	scanf("%d%d",&n,&m);
    	for(int i=0;i<=n;i++) g[i].clear();
    	for(int i=0;i<m;i++){
    		scanf("%d%d",&a,&b);
    		g[a].push_back(b);
    		g[b].push_back(a);
    	}
    	memset(vis,-1,sizeof(vis));
    	vis[1] = 0;
    	ok = true;
    	for(int i=1;i<=n;i++)
    	{
    		if(vis[i]==-1)	{
    			ok &= dfs(i);
    		}
    	}
    	if (ok) cout << "YES\n";
    	else cout << "NO\n";
    }
    
    
    return 0;
}
