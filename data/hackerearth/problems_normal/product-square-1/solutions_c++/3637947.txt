#include <iostream>
#include <cmath>
using namespace std;
bool isSquare (long long sq);

int
main ()
{
  long long hash[5001];
  for (long long i = 0; i < 5001; i++)
    hash[i] = 0;

  long long N = 0;
  cin >> N;

  long long num;
  for (long long i = 0; i < N; i++)
    {
      cin >> num;
      hash[num]++;
    }
  //find the num of squares
  long long tsq = 0;
  for (long long i = 1; i <= 70; i++)
    {
      num = i * i;
      tsq = tsq + hash[num];
      //cout << i * i << "is a square, adding " << hash[num] << endl;
    }
  //cout << "tsq = " << tsq << endl;
  long long x = 0, count = 0;
  for (long long i = 1; i <= 5000; i++)
    {
      if (hash[i] == 0)
	continue;
      x = hash[i];
      //cout << "Calculating for" << i << endl;
      if (!isSquare (i))
	{
	  count = count + ((x) * (x - 1));
	  //cout << i << "is not a square. Adding " << x * (x -
	//						  1) << "to count" <<
	   // endl;
	  for (long long j = 1; j <= 5000; j++)
	    {
	      if ((hash[j] == 0) || (j == i))
		continue;
	      if (isSquare (j * i))
		{
		  count = count + (x * hash[j]);
		  //cout << j << "*" << i << " is a square. Adding " << x *
		    //hash[j] << endl;
		}
	    }
	}
      else
	{
	  count = count + (x * (tsq - 1));
	  //cout << i << " is a square. Adding " << x * (tsq - 1) << endl;

	}
    }
   float p=0.000000;
   long long den = N*(N-1);
   p= (float)count/den;
  printf("%.6f\n", p);
}

bool
isSquare (long long sq)
{
  long long num = sqrt (sq);
  if (num*num == sq)
    {
      //cout << sq << " is a square\n";
      return true;
    }
  else
    return false;
}
