#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef pair<ll, ll> pll;
typedef vector<pll> vpll;

vpll in;
vll dp;
ll T, N;

ll calc(int index) {
	ll maxVal = -1,
	   result;

	// use index
	maxVal = max(maxVal, in[index].second);
	for (int i = index + 1; i < N; i++) {
		if (in[i].first < in[index].first && in[i].second < in[index].second) {
			if (dp[i] != -1) result = dp[i];
			else {
				result = calc(i);
				dp[i] = result;
			}
			maxVal = max(maxVal, result + in[index].second);
		}
	}
	
	return maxVal;
}

int main() {
	cin >> T;
	
	for (int i = 0; i < T; i++) {
		cin >> N;
		dp.assign(N, -1);

		for (int j = 0; j < N; j++) {
			ll radius, height;
			cin >> radius >> height;
			in.push_back(make_pair(radius, height));
		}
		
		sort(in.begin(), in.end(), [](pll a, pll b) {
			return b.first < a.first;
		});
	
		// call calc for first position
		ll maxVal = -1;
		for (int j = 0; j < N; j++) {
			ll result;
			
			if (dp[j] != -1) result = dp[j];
			else {
				result = calc(j);
				dp[j] = result;
			}
			maxVal = max(maxVal, result);
		}
		
		cout << maxVal << endl;

		in.clear();
	}

    return 0;
}
