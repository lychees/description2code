// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define ull unsigned long long
#define dbl long double
using namespace std;
// mylittledoge

ull pw(ull a, ull e, ull mod) {
	if(e <= 0) return 1;
	ull x =pw(a,e/2,mod);
	x =(x*x)%mod;
	if(e%2 != 0) x =(x*a)%mod;
	return x;}

ull mod =1000003;
vector<ull> inv(mod,1),fac(mod,1);

ull Cfac(long long N, long long mod) {
	if(N <= 0) return 1;
	long long ret =(fac[N%mod]*fac[N/mod])%mod;
	if((N/mod)%2 != 0) ret =mod-ret;
	return ret;}

int main() {
	cin.sync_with_stdio(0);
	cin.tie(0);
	int T;
	cin >> T;
	for(int i =1; i < mod; i++) inv[i] =pw(i,mod-2,mod);
	for(int i =1; i < mod; i++) fac[i] =(i*fac[i-1])%mod;
	
	for(int t =0; t < T; t++) {
		int C,D,N;
		cin >> C >> D >> N;
		if(C > D) swap(C,D);
		if(D > 1LL*N*C) {cout << "0\n"; continue;}
		ull ans =0;
		for(long long k =0; k <= C+D; k++) {
			long long l =1LL*N*D-C-1LL*N*k;
			if(l < 0) break;
			if((C+D-1+l)/mod-(C+D-1)/mod-l/mod > 0) continue;
			if((C+D)/mod-k/mod-(C+D-k)/mod > 0) continue;
			long long x =(Cfac(C+D,mod)*inv[Cfac(k,mod)]*inv[Cfac(C+D-k,mod)])%mod;
			if(k%2 != 0) x =mod-x;
			ull y =(Cfac(C+D-1+l,mod)*inv[Cfac(C+D-1,mod)]*inv[Cfac(l,mod)])%mod;
			ans =(ans+x*y)%mod;}
		cout << ans << "\n";}
	return 0;}

// look at my code
// my code is amazing