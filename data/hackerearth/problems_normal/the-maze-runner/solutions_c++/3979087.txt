#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cctype>
#include <cstdlib>
#include <bitset>
#include <vector>
#include <list>
#include <deque>
#include <queue>
#include <map>
#include <set>
#include <stack>
#include <cmath>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <complex>
#include <functional>
#include <climits>
#include <cassert>
#include <iterator>
#include <math.h>
#include <time.h>
#include <string.h>

#define bit(n) (1<<(n))
#define inf 1000000000
#define eps 1e-9
#define PI 3.1415926535897932385
#define pb push_back
#define sz size()
#define mp make_pair
#define cl clear()
#define all(a) a.begin(),a.end()
#define fill(ar,val) memset(ar,val,sizeof(ar))
#define MIN(a,b) if(a>(b)) a=(b)
#define MAX(a,b) if(a<(b)) a=(b)
#define sqr(x) ((x)*(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define MOD 1000000007
#define bsize 200000
const int N = 1000005;

using namespace std;
 // ==================================================================//
 
 int n;
 double x[200] , y[200],H;
 double dist[200][200];
 
 double gd(double x1,double y1,double x2,double y2)
 {
     return sqrt((x1-x2) * (x1-x2) + (y1-y2)*(y1-y2));
 }
 
 bool cheak(int l ,int r,double Y)
 {
     for(int i=l;i<=r;i++)
     {
         if(Y < y[i] - 1e-9|| Y > y[i] + H + 1e-9)
             return false;
     }
     return true;
 }
 
 bool validate(double x1,double y1,double x2,double y2,int l,int r)
 {
     for(int i=l;i<=r;i++)
     {
         double cx = x[i];
         double qy = (cx - x1) * (y2 - y1) / (x2-x1)+y1;
         if(qy < y[i] - 1e-9 || qy > y[i] + H + 1e-9)
         {
             return false;
         }
     }
     return true;
 }
 
int main()
{
    // * Faster Input *//
    
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    // * ========================================================== * //
 
    cin >> n;
    for(int i=0;i<=n;i++)
    {
        cin >> x[i] >> y[i];
    }
    cin >> H;
    
    for(int i=0;i<=n;i++)
    {
        dist[i][0] = 1e9;
        dist[i][1] = 1e9;
    }
    dist[0][0] = 0;
    dist[0][1] = 0;
    
    for(int i=1;i<=n;i++)
    {
        if(cheak(0,i-1,y[i]))
            dist[i][0] =  min(dist[i][0],x[i] - x[0]);
        if(cheak(0,i-1,y[i]+H))
            dist[i][1] = min(dist[i][1],x[i]-x[0]);
    }
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<=1;j++)
        {
            for(int q=i+1;q<=n;q++)
            {
                for(int w=0;w<=1;w++)
                {
                    double x1,x2,y1,y2;
                    x1 = x[i];
                    y1 = y[i] + H * j;
                    x2 = x[q];
                    y2 = y[q] + H * w;
                    if(validate(x1,y1,x2,y2,i+1,q-1))
                        dist[q][w]  = min(dist[q][w] , dist[i][j]+gd(x1,y1,x2,y2));
                }
            }
        }
    }
    double ans = 1e9;
    for(int i=0;i<=n;i++)
    {
        if(cheak(i+1,n,y[i]))
        {
            ans = min(ans,dist[i][0] + x[n] - x[i]);
        }
        if(cheak(i+1,n,y[i]+H))
        {
            ans = min(ans , dist[i][1] + x[n] - x[i]);
        }
    }
    cout.precision(10);
    cout <<fixed <<  ans << endl;
    return 0;
}
