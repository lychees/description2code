#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <queue>
using namespace std;
typedef long long ll;
// #define DEBUG
#define mod 1000000007
#define pb push_back

vector<int> g[200010], gr[200010];
vector<int> order;
vector<int> comp;

int n,m;
int ans[200010];
int visited[200010];

void dfs(int u){
	visited[u] = 1;
	for(int i=0;i<g[u].size();i++){
		if(!visited[g[u][i]])
			dfs(g[u][i]);
	}
	order.pb(u);
}

void dfs2(int v){
	comp.pb(v);
	visited[v] = 1;
	for(int i=0;i<gr[v].size();i++){
		if(!visited[gr[v][i]])
			dfs2(gr[v][i]);
	}
}

int main(){
    ios::sync_with_stdio(false);
    #ifdef DEBUG
    freopen("input.txt", "r", stdin);
    #endif // DEBUG

    cin >> n >> m;
    int u,v;
    
    for(int i=1;i<=m;i++){
    	cin >> u >> v;
    	g[u].pb(v);
    	gr[v].pb(u);
    }
    
    for(int i=1;i<=n;i++){
    	if(!visited[i])
    		dfs(i);
    }
    
    reverse(order.begin(), order.end());

    for(int i=1;i<=n;i++)
    	visited[i] = 0;

    int len = order.size();
    for(int i=0;i<len;i++){
    	int id = order[i];
    	if(!visited[id]){
    		comp.clear();
    		dfs2(id);
    		if(comp.size() != 1){
    			for(int j=0;j<comp.size();j++){
    				ans[comp[j]] = 1;
    			}
    		}
    	}
    }

    for(int i=1;i<=n;i++)
    	cout << ans[i] << " ";

    return 0;
}
