#include<bits/stdc++.h>
using namespace std;
#define maxn 10005
#define F(i,p,n) for(i=p;i<n;i++)
#define I(i,p,q) for(i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%lld",&x)
#define P(x) printf("%lld\n",x)
#define Ps(x) printf("%d ",x)
#define LL long long int
const LL mod=(1e9)+9;
LL cal[maxn][10];
void pre()
{
    LL i,j,k,m,n;
    //LL a[]={1,2,3,2,3,4,3,2,4,2};
    //LL a[]={-3,-1,0,1,3};
    F(i,0,10)
    cal[1][i]=1;
    F(i,2,maxn)
    {
        F(j,0,10)
        {
            if(!j)
            cal[i][j]=(cal[i-1][8]+cal[i-1][0])%mod;
            else if(j==8)
            {
                cal[i][j]=(cal[i-1][0]+cal[i-1][5]+cal[i-1][7]+cal[i-1][9]+cal[i-1][8])%mod;
            }
            else if(j==1)
            {
                cal[i][j]=(cal[i-1][2]+cal[i-1][1]+cal[i-1][4])%mod;
            }
            else if(j==2)
            {
                cal[i][j]=(cal[i-1][2]+cal[i-1][1]+cal[i-1][5]+cal[i-1][3])%mod;
            }
            else if(j==3)
            {
                cal[i][j]=(cal[i-1][3]+cal[i-1][2]+cal[i-1][6])%mod;
            }
            else if(j==4)
            {
                cal[i][j]=(cal[i-1][4]+cal[i-1][1]+cal[i-1][5]+cal[i-1][7])%mod;
            }
            else if(j==5)
            {
                cal[i][j]=(cal[i-1][5]+cal[i-1][2]+cal[i-1][4]+cal[i-1][6]+cal[i-1][8])%mod;
            }
            else if(j==6)
            {
                cal[i][j]=(cal[i-1][6]+cal[i-1][3]+cal[i-1][5]+cal[i-1][9])%mod;
            }
            else if(j==7)
            {
                cal[i][j]=(cal[i-1][7]+cal[i-1][4]+cal[i-1][8])%mod;
            }
            else
            {
                cal[i][j]=(cal[i-1][9]+cal[i-1][6]+cal[i-1][8])%mod;
            }
        }
    }
}
main()
{
    LL i,j,k,m,n,t,p,q;
    pre();
    //F(i,0,10)
    //
    //printf("%lld ",cal[2][i]);
    S(t);
    while(t--)
    {
        LL ans=0;
        S(n);
        F(i,0,10)
           ans=(ans+cal[n][i])%mod;
        P(ans);
    }
}
