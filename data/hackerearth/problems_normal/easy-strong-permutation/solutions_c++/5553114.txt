/*
 *  greedy_Easy_Strong_Permutation.cpp
 *
 *  Oct 3, 2016
 */


#include <bits/stdc++.h>
using namespace std;

#define iter(c) __typeof((c).begin())
#define tr(i, c) for (iter(c) i = (c).begin(); i != (c).end(); i++)
#define rep(i, a, b) for (int i = (a); i < (b); i++)
#define forn(i, a, b) for (int i = (a); i <= (b); i++)

#define pb push_back
#define mp make_pair
#define f first
#define s second

#define debug(x) cout << #x << "   " << x << endl

typedef long long ll;
typedef pair<int, int> ii;

const int MAXN = int(1e6) + 5;

int n, a[MAXN], b[MAXN], sz;

int main() {
//    freopen("input.inp", "r", stdin);
//    freopen("output.out", "w", stdout);
    ios::sync_with_stdio(0);

    scanf("%d", &n);
    rep(i, 0, n) scanf("%d", &a[i]);
    sort(a, a+n);

    int i(0), j(n-1);
    while (i <= j) {
        b[sz++] = a[i];
        if (i != j) b[sz++] = a[j];
        i++, j--;
    }

    ll rs(0);
    rep(i, 0, n) rs += abs(b[i] - b[(i+1) % n]);

    printf("%lld", rs);
}
