#include <bits/stdc++.h>
using namespace std;

#define ll long long int

int dp[1 << 13][20][20];
int a[20];
int p[20];

int func(int idx, int mask, int prpr, int pr, int n)
{
    if (idx == n) {
       // cout <<idx<<" "<<prpr<<" "<<pr<<endl;
        return 0;
    }

    if (pr != -1 && prpr != -1 && dp[mask][prpr][pr] != -1) {
       // cout <<"idx = "<<idx<<endl;
        return dp[mask][prpr][pr];
    }

    int i,v;
    int k;
    k = INT_MAX;

    for (i = 0; i < n; i++) {
        if (!(mask & (1 << i))) {
            if (pr == -1 || prpr == -1)
                v = 0;
            else
                v = (a[pr] ^ a[prpr] ^ a[i]) * p[idx];

            k = min(k, v + func(idx+1,(mask | (1<<i)), pr, i, n));
          /*  if (prpr == -1 && pr == -1)
                cout <<k<<" "<<i<<endl;*/
        }
    }

   // cout <<k<<" "<<mask<<" "<<endl;
    if (prpr != -1 && pr != -1)
        dp[mask][prpr][pr] = k;

  //  cout <<k<<endl;
    return k;
}

int main()
{
    int t,n,i,j,k;
    cin >> t;

    while (t--) {
       // cout <<dp[0][0][0]<<endl;
        //cout <<"hi\n";

        cin >> n;

       /* for (i = (1 << n) - 1; i >= 0; i--) {
            for (j = 0; j < n; j++) {
                for (k = 0; k < n; k++) {
                    dp[i][j][k] = -1;
                }
            }
        }*/
        memset(dp, -1, sizeof(dp));

        for (i = 0; i < n; i++)
            cin >> a[i];
        for (i = 0; i < n; i++)
            cin >> p[i];

        cout <<func(0,0,-1,-1,n)<<endl;
    }
    return 0;
}
