''' Awesome question. Took a lot of time to click. Loved it'''

from fractions import gcd

t = int(raw_input())
for _ in range(t):
	val = raw_input().split(' ')
	val = map(int,val)
	nums = [val[0]*2]*val[1]
	nums[0] = nums[0]+val[0]
#	print nums
	nums.reverse()
	print ' '.join(str(x) for x in nums)
	
	
	'''while tester:
		fin = reduce(lambda x,y:gcd(x,y),nums)
		if fin == val[0]:
			print ' '.join(str(x) for x in nums)
			tester = False
		else:
			nums[-1] = nums[-1]+1
#		printer(nums)
	
		
def GCDfind(nums):
	fin = reduce(lambda x,y:gcd(x,y),nums)
	if fin == val[0]:
		return nums
#		print ' '.join(str(x) for x in nums)
	else:	
		for i in range(len(nums)):
			if i == 0:
				nums[0] = nums[0] + val[0]
			else:
				if nums[i]<nums[i-1]:
					nums[i] = nums[i]+val[0]
					return 	
	return			
	'''
