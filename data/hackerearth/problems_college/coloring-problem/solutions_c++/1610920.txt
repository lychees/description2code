#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

vector<int> Al[256];
int vis[256], color[256];

int BFS(int n){
    queue<int> q;
    q.push(0);
    color[0] = 1;
    vis[0] = 1;
    while(!q.empty()){
        int s = q.front();
        int cl = color[s];
        for (int i=0; i<Al[s].size(); i++){
            int to = Al[s][i];
            if (!vis[to]){
                q.push(to);
                vis[to] = 1;
                color[to] = cl xor 1;
            }
            else {
                if (color[to]==cl){
                    cout<<"NOT BICOLORABLE.\n";
                    return 0;
                }
            }
        }
        q.pop();
    }
    cout<<"BICOLORABLE.\n";
    return 0;
}

int test(){
    memset(color,0,sizeof(color));
    memset(vis,0,sizeof(vis));
    for (int i=0; i<256; i++){
        Al[i].clear();
    }
    int n,m;
    cin>>n>>m;
    int s,t;
    for (int i=0; i<m; i++){
        cin>>s>>t;
        Al[s].push_back(t);
        Al[t].push_back(s);
    }
    BFS(n);
    return 0;
}

int main(){
    //freopen("in.txt","r",stdin);
    int t;
    cin>>t;
    while(t--){
        test();
    }
}
