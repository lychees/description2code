#include <bits/stdc++.h>
using namespace std;

#define rep1(i, begin, end) for (__typeof(begin) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define rep2(i, begin, end) for (__typeof(begin) i = (begin); i != (end) + 1 - 2 * ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define mem(a, x) memset(a, x, sizeof(a))
#define all(a) a.begin(), a.end()
#define count_bits(x) __builtin_popcount(x)
#define count_bitsll(x) __builtin_popcountll(x)
#define least_bits(x) __builtin_ffs(x)
#define least_bitsll(x) __builtin_ffsll(x)
#define most_bits(x) 32 - __builtin_clz(x)
#define most_bitsll(x) 64 - __builtin_clz(x)

vector<string> split(const string &s, char c) {
    vector<string> v;
    stringstream ss(s);
    string x;
    while (getline(ss, x, c)) v.push_back(x);
    return v;
}

#define error(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); }

void err(vector<string>::iterator it) {}

template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
    cerr << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << '\n';
    err(++it, args...);
}

typedef long long ll;
const int MOD = 1000000007;

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void amax(T &a, T b) {if (b > a) a = b;}
template<class T> inline void amin(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {while (b != 0) {T c = a; a = b; b = c % b;} return a;}

struct Date {
    int d, m, y;
    int thash;
};

int toInt(string x) {
    int ans = 0;
    rep1(i, 0, x.size()) {
        ans = 10 * ans + (x[i] - '0');
    }
    return ans;
}

Date cvt(string x) {
    Date ans;
    ans.d = toInt(x.substr(0, 2));
    ans.m = toInt(x.substr(3, 2));
    ans.y = toInt(x.substr(6));
    ans.thash = ans.d + ans.m * 100 + ans.y * 10000;
    return ans;
}

void calc_hash(Date &x) {
    x.thash = x.d + x.m * 100 + x.y * 10000;
}

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    int ntest;
    string s[2];
    Date dt[2];

    cin >> ntest;
    while (ntest--) {
        cin >> s[0] >> s[1];
        dt[0] = cvt(s[0]);
        dt[1] = cvt(s[1]);
        int ans = 0;
        for (int x = dt[0].y; x <= dt[1].y; ++x) {
            int y = x % 100;
            if (y >= 3 && y <= 13) {
            	Date tmp;
            	tmp.y = x; tmp.m = (x % 100) - 1; tmp.d = tmp.m - 1;
            	if (tmp.m > 0 && tmp.m < 13 && tmp.d > 0) {
            		calc_hash(tmp);
            		if (tmp.thash >= dt[0].thash && tmp.thash <= dt[1].thash) ans++;
            	}
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}
