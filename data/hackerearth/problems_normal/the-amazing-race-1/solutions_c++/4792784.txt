#include<iostream>
#include<stack>
#include<string>
#include<vector>
using namespace std;
typedef long long int LL;
#define MAX 1000000007
int main() {
  int t, n;
  cin >> t;
  vector<LL> array;
  vector<LL> front;
  vector<LL> back;
  stack<LL> find;
  int tmp;
  while (t--) {
    cin >> n;
    front.clear();
    back.clear();
    array.clear();
    front.resize(n);
    back.resize(n);
    array.resize(n);
    cin >> tmp;
    array[0] = tmp;
    while (!find.empty())
      find.pop();

    front[0] = 0;
    find.push(0);
    for (LL i = 1; i < n; i++) {
      cin >> array[i];
      while (!find.empty() && array[i]> array[find.top()]) {
        find.pop();
      }

      if (find.empty()) {
        front[i] = i;
      }
      else {
        front[i] = i - find.top();
      }

      find.push(i);
    }

    while (!find.empty()) {
      find.pop();
    }

    back[n - 1] = 0;
    find.push(n - 1);
    for (LL i = n - 2; i >= 0; i--) {
      while (!find.empty() && array[i] > array[find.top()]) {
        find.pop();
      }
      if (find.empty()) {
        back[i] = n-1-i;
      }
      else {
        back[i] = find.top() - i;
      }

      find.push(i);
    }
    LL max = -1;
    LL maxIndex = -1;
    for (LL i = 0; i < n; i++) {
      LL count = front[i] + back[i];
      LL score = ((count%MAX)*(i + 1))%MAX;
      if (score>max) {
        max = score;
        maxIndex = i + 1;
      }
    }
    cout << maxIndex << endl;
  }


  return 0;
}