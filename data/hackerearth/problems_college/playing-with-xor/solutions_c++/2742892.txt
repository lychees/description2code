#include<bits/stdc++.h>
bool xor1[1025];
bool prime[1025];
bool prime2[1025];

void markMultiples(int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        prime[ num-1 ] = 1;
        ++i;
    }
}


void SieveOfEratosthenes(int n)
{

    if (n >= 2)
    {

        for (int i=1; i<n; ++i)
        {
            if ( prime[i] == 0 )
            {

                prime2[i+1]=1;
                markMultiples(i+1, n);
            }
        }
    }
}


int main()
{
    long int t,i;
    scanf("%ld",&t);

      memset(prime, 0, sizeof(prime));
       memset(prime2, 0, sizeof(prime));
      SieveOfEratosthenes(1024);

      while(t--)
    {
        int n;
        long int i,t,j,p,count=0;;
        scanf("%d",&n);
        memset(xor1, 0, sizeof(xor1));
        xor1[0]=1;

         for(i=0;i<n;i++)
        {

            scanf("%d",&t);
            for(j=0;j<1024;j++)
            {
               if(xor1[j]==1)

                    {
                        p=j^t; xor1[p]=1;
                    }
            }
        }

         for(j=0;j<1024;j++)
         {
             if(xor1[j]==1&&prime2[j]==1) count++;
         }
        printf("%ld\n",count);

    }
}
