#include <iostream>
#include <cstring>
using namespace std;


const int maxN = 21;
int a[maxN];
int p[maxN];
const long long inf = 1e10;
int n;
#define min(x,y) ((x>y)?y:x)


int bitCount(int x)
{
	int n = 0;
	while (x)
	{
		x = x&(x - 1);
		n++;
	}
	return n;
}


long long cachedata[1<<14][20][20] = { -1 };
long long minUpset(unsigned int chosen, unsigned int p1, unsigned int p2)
{
	int pos =bitCount(chosen);
	if (pos == n)
		return 0;
	if (cachedata[chosen][p1][p2] != -1)
		return cachedata[chosen][p1][p2];

	long long &result = cachedata[chosen][p1][p2], c1;
	result = inf;

	for (int i = 0; i < n; i++)
	{
		if (!(chosen & 1 << i))
		{
			c1 = minUpset(chosen | 1 << i, i, p1)
				+ (a[p1] ^ a[p2] ^ a[i])*p[pos];

			result = min(c1, result);
		}
	}

	return result;
}


int main()
{
	
	long long t, x;
	cin >> t;
	for (int ti = 0; ti<t; ti++)
	{
		memset(cachedata, -1, sizeof(cachedata));
		cin >> n;
		for (int i = 0; i<n; i++)
		{
			cin >> x;
			a[i] = x;
		}
		for (int i = 0; i<n; i++)
		{
			cin >> x;
			p[i] = x;
		}

		long long res = inf;
		for (int i = 0; i<n; i++)
		{
			for (int j = 0; j<n; j++)
			{
				if (i == j)
					continue;
				res = min(res, minUpset(1 << i | 1 << j,i , j));
			}
		}

		cout << res << endl;

	}


	return 0;
}
