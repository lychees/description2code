//#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 2e18 + 7;
const long long mod = 1e9 + 7;
const double eps = 1e-9;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i, n) for (int (i)=0; (i)<(n); ++(i))
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int t;

char s[1005];
int fact[1005];
int sum[1005];
int md;

void Solve() {
    gets(s);
    int n = strlen(s);
    scanf("%d\n", &md);
    fact[0] = 1 % md;
    sum[0] = 0;
    for (int i = 1; i <= 100; ++i) {
        fact[i] = (fact[i - 1] * i) % md;
        sum[i] = (sum[i - 1] + fact[i]) % md;
    }
    int res = 0;
    for (int i = 0; i < n; ++i) {
        int l = i, r = i;
        while (l >= 0 && r < n && s[l] == s[r]) {
        	if (s[l] != '0') {
            if (l == r) res = (res + sum[s[l] - '0']) % md; 
            else
            res = (res + sum[md-1]) % md; }
            --l; ++r; 
        }
        l = i, r = i + 1;
        while (l >= 0 && r < n && s[l] == s[r]) { 
        	if (s[l] != '0') {
            int num = (s[l] - '0') * 10 + s[r] - '0';
            if (l + 1 == r) res = (res + sum[num]) % md; else
            res = (res + sum[md-1]) % md; }
            --l; ++r; 
        }
    }
    printf("%d\n", res % md);
}

int main(void) {
    #ifdef nobik
        freopen("input.txt", "rt", stdin);
        freopen("output.txt", "wt", stdout);
    #endif
    scanf("%d\n", &t);
    for (int i = 0; i < t; ++i) {
        Solve();
    }
    return 0;
}
