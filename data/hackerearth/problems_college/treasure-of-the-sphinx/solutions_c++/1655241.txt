#include <cstring>
#include <cassert>
#include <vector>
#include <list>
#include <queue>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <climits>
#define scan(a) scanf("%d",&a);
#define s2(a,b) scanf("%d %d",&a,&b)
#define PI 2acos(-1.0)
#define s1(a) scanf("%d",&a);
#define INF 2<<15
#define PB(A) push_back(A)
#define clr(a,b) memset(a,b,sizeof(a))
#define MAX 100009
#define MD 1000000007
#define LL long long
#define sc(a) scanf("%d", &a)
#define fr(i, n) for(i = 0; i < n; i++)

using namespace std;

int dp[201][100001];
int arr[201];

int n;

int solve(int ind, int rest)
{
    if(ind == n)
    {
        return rest;
    }
    int &ret = dp[ind][rest];
    if(ret != -1) return ret;
    ret = solve(ind + 1, rest);
    if(arr[ind] <= rest)
        ret = min(ret, solve(ind + 1, rest - arr[ind]));

return ret;
}

int  main()
{
    int i,j , k;
    int m, a, t;
    sc(t);
    while(t--)
    {
        string str;
        sc(n);
        int l;
        sc(l);
        int sum = 0;
        fr(i, n){
        sc(arr[i]);
        sum += arr[i];
        }


        memset(dp, -1, sizeof dp);
        int get = solve(0, l);
        get = l - get;
//        cout<<get<<endl;
        if(sum - get > l)
            printf("NO\n");
        else
            printf("YES\n");


    }

    return 0;
}

/*



2 1
1 1 2


*/
