#include<iostream>
#include<stdio.h>
#include<string>
#include<string.h>
using namespace std;
int count[26];
void check(char s1[],char s2[])
{
    int i,j;
    for(i=0;i<26;i++) count[i]=0;
    for(i=0;i<strlen(s1);i++)
    {
        if(s1[i]>='A'&&s1[i]<='Z') count[s1[i]-'A']++;
        else if(s1[i]>='a'&&s1[i]<='z') count[s1[i]-'a']++;
    }

    for(i=0;i<strlen(s2);i++)
    {
        if(s2[i]>='A'&&s2[i]<='Z') count[s2[i]-'A']--;
        else if(s2[i]>='a'&&s2[i]<='z') count[s2[i]-'a']--;
    }

    int zero=0,pos=0,neg=0;
    for(i=0;i<26;i++)
    {
        if(count[i]>0) pos++;
        else if(count[i]<0) neg++;
        else zero++;
    }

    if(!pos&&!neg) {cout<<"YES"<<"\n"; return;}

    //int pos=0,neg=0;
    //for(i=0;i<26;i++) {if(count[i]>0) pos++; else if(count[i]<0) neg++;}
    if(pos&&neg) {cout<<"NO LUCK\n"; return;}

    for(i=0;i<26;i++) if(count[i]<0) count[i]=-count[i];

    int odd=0;
    for(i=0;i<26;i++)
    {
        if(count[i])
        {
          if(count[i]%2) odd++;
        }
    }

    if(odd>1) {cout<<"NO LUCK"<<"\n"; return;}

    string ans="";
    if(odd==0)
    {
        for(i=0;i<26;i++){
        if(count[i])
        {
            for(j=1;j<=count[i]/2;j++) ans+=i+'a';
        }}

        int n=ans.size();
        for(i=n-1;i>=0;i--)
        ans+=ans[i];

        cout<<ans<<"\n";
    }

    else if(odd==1)
    {
        int save;
        for(i=0;i<26;i++)
        {
            if(count[i])
            {
                if(count[i]%2) save=i;
               for(j=1;j<=count[i]/2;j++) ans+=i+'a';
            }

        }

        //for(i=1;i<=(count[save]+1)/2;i++)
        ans+=save+'a';

        int n=ans.size()-1;

        for(i=n-1;i>=0;i--)
        ans+=ans[i];

        cout<<ans<<"\n";
    }
}
main()
{
    //string s1,s2,s;
    char s1[101],s2[101];
    //std::ios_base::sync_with_stdio(false);
    int tc;
    cin>>tc;

    //std::getline(cin,s);
    getchar();
    while(tc--)
    {

        //std::getline(cin,s1);
        //cout<<s1<<" ";
         //getchar();
        //std::getline(cin,s2);
        //cout<<s1<<" "<<s2;
        gets(s1);
        gets(s2);
        check(s1,s2);
    }
}

