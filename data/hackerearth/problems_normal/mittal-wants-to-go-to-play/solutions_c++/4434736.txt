#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define INF 0x3f3f3f3f
#define mx 10005
#define pii pair< int, ll >
#define pb(x) push_back(x)

struct comp {
    bool operator() (const pii &a, const pii &b) {
        return a.second > b.second;
    }
};

priority_queue< pii, vector< pii >, comp > q;
vector< pii > g[mx];
int d[mx],n,m;
bool vis[mx];

void dijkstra(int start)
{
	int i,u,v,c,w;
	for(i=0;i<n;i++) d[i]=INF;
	d[start]=0;
	q.push(pii(start,0));
	
	while(!q.empty())
	{
		u=q.top().first;
		c=q.top().second;
		q.pop();
		if(d[u] < c) continue;
		for(i=0;i<g[u].size();i++)
		{
			v=g[u][i].first;
			w=g[u][i].second;
			if(d[v]>d[u]+w)
			{
				d[v]=d[u]+w;
				q.push(pii(v,d[v]));
			}
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(0);
	int t; cin>>t;
	while(t--)
	{
		cin>>n>>m;
		int i,j,x,y,w;
		for(i=0;i<n;i++) g[i].clear();
		while(m--)
		{
			cin>>x>>y>>w;
			x--; y--;
			g[x].pb(pii(y,w));
			g[y].pb(pii(x,w));
		}
		dijkstra(0);
		int q,k;cin>>q;
		while(q--)
		{
			cin>>x>>k;
			x--;
			int ans=0;
			ans=max(ans,k-2*d[x]);
			cout<<ans<<endl;
		}
	}
	return 0;
}