#include<stdio.h>
#include<iostream>
#include<vector>
#include<cstdlib>
#include<cstring>
#include<string>
#include<math.h>
#include<map>
#include<algorithm>
#include<queue>
#include<string>
#include<climits>
#include<set>
using namespace std;
 
typedef long long int LL;
 
#define gx getchar_unlocked
#define px putchar_unlocked
#define ps putchar_unlocked(' ')
#define pn putchar_unlocked('\n')
 
void scan( int &n ) {   int sign = 1; n = 0;    char c = gx();  while( c < '0' || c > '9' ) {       if( c == '-' ) sign = -1;       c = gx();   }   while( c >= '0' && c <= '9' ) n = (n<<3) + (n<<1) + c - '0', c = gx();  n = n * sign;}
void lscan( LL &n ) {   int sign = 1; n = 0;    char c = gx();  while( c < '0' || c > '9' ) {       if( c == '-' ) sign = -1;       c = gx();   }   while( c >= '0' && c <= '9' ) n = (n<<3) + (n<<1) + c - '0', c = gx();  n = n * (LL)(sign);}
int sscan( char a[] ) { char c = gx();  while(c==' ' || c=='\n') c=gx();    int i=0;    while(c!='\n')a[i++] = c,c=gx();    a[i]=0; return i;}
int wscan( char a[] ) { char c = gx();  while(c==' ' || c=='\n') c=gx();    int i=0;    while(c!='\n' && c!=' ')a[i++] = c,c=gx();  a[i]=0; return i;}
 
//Printing functions
void print( int n ) {   if(n<0) {       n=-n;       px('-');    }   int i=10;   char o[10]; do {        o[--i] = (n%10) + '0'; n/=10;   }while(n);  do {        px(o[i]);   }while(++i<10);}
void lprint( LL n ) {   if(n<0LL) {     n=-n;       px('-');    }   int i=21;   char o[21]; do {        o[--i] = (n%10LL) + '0'; n/=10LL;   }while(n);  do {        px(o[i]);   }while(++i<21);}
void sprint( const char a[] ) { const char *p=a;    while(*p)px(*p++);}
 
LL po(LL a, LL b, LL mod)
{
    LL x=1, y=a;
    while(b > 0)
    {
        if(b&1)
        {
            x *= y;
            if(x > mod) x %= mod;
        }
        b /= 2;
        y *= y;
        if(y > mod) y %= mod;
    }
    return x;
}
 
int main()
{
    LL a,b,k,p[10],i,n;
    long double x,y;
    p[0] = 1;
    for(i=1;i<10;i++) p[i] = p[i-1]*10;
    int t;
    scan(t);
    while(t--)
    {
        lscan(a);
        lscan(b);
        lscan(k);
        n = po(a,b,p[k]);
        int sum=0;
        while(n > 0) 
        {
        	sum += n%10;
        	n /= 10;
        }
        printf("%d\n", sum);
    }
    return 0;
}