#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
using namespace std;
typedef long long ll;
#define mod 1000000007
ll f[500001];
int ff[500001];
int main()
{
    int t;
    ll n;
    memset(ff,0,sizeof(ff));
    for(int i=2;i<=500000;i++){
    	for(int j=2*i;j<=500000;j+=i)
    	if (!ff[j]) ff[j] = 1;
    }
    vector<int> pp;
    for(int i=2;i<=500000;i++)
    if (!ff[i]) pp.push_back(i);
    /*f[1] = 1;
    f[2] = 2;
    f[3] = 6;
    for(int i=4;i<=5000000;i++){
    	if (f[i-1]%i==0) f[i] = f[i-1];
    	else f[i] = i*f[i-1]/__gcd(1LL*i,f[i-1]);
    }*/
    scanf("%d",&t);
    while(t--){
    	scanf("%lld",&n);
    	if (n==1){
    		printf("1\n");
    		continue;
    	}
    	if (n==2){
    		printf("2\n");
    		continue;
    	}
    	int idx = lower_bound(pp.begin(),pp.end(),n)-pp.begin();
		if (pp[idx]>n)
			idx -= 1;
		long long ans = 1;
		for (int i=0;i<=idx;i++){
			ll  p0 = pp[i];
			int yd = 0;
			int p1 = p0;
			while (p0<=n){
				p0 = p0*p1;
				yd += 1;
			}
		
		ans *= pow(p1,yd);
		ans %= mod;
	}
	printf("%lld\n",ans);
    }
    return 0;
}
