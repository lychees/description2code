#include <cstdio>
#include <vector>
#include <queue>
using namespace std;
const int MAXN=1000005,INF=1000000005;
vector<pair<int,int> > v[MAXN];
int d[MAXN],p[MAXN];
vector<int> u,u1;

void dijkstra(int s,int n){
    for(int i=0;i<n;i++)
        d[i]=INF,p[i]=-1;
    d[s]=0;
    priority_queue<pair<int,int>, vector<pair<int,int> >, greater<pair<int,int> > > q;
    q.push(make_pair(d[s],s));
    while(!q.empty()){
        int u=q.top().second;
        int w=q.top().first;
        q.pop();
        //if(w>d[u])
           // continue;
        for(int i=0;i<v[u].size();i++)
            if(d[v[u][i].first]>d[u]+v[u][i].second)
                d[v[u][i].first]=d[u]+v[u][i].second,
                p[v[u][i].first]=u,
                q.push(make_pair(d[v[u][i].first],v[u][i].first));
    }
}

bool f(int a,int b,int c,int n,int &res){
    res=0;
    int s=a,t=b;
    dijkstra(s,n);
    if(d[t]==INF){
        printf("No Train Found.\n");
        return false;
    }
    res+=d[t];
    u.push_back(t);
    while(p[t]!=-1){
        u.push_back(p[t]);
        t=p[t];
    }
    s=b,t=c;
    dijkstra(s,n);
    if(d[t]==INF){
        printf("No Train Found.\n");
        return false;
    }
    res+=d[t];
    while(p[t]!=-1){
        u1.push_back(t);
        t=p[t];
    }
    return true;
}

int main(){
    int a,b,c,n,m,t,x,y,z,res=0;
    scanf("%d",&t);
    while(t--){
        scanf("%d %d",&n,&m);
        for(int i=0;i<m;i++)
            scanf("%d %d %d",&a,&b,&c),
            v[--a].push_back(make_pair(--b,c)),
            v[b].push_back(make_pair(a,c));
        scanf("%d %d %d",&x,&y,&z);
        if(f(x-1,y-1,z-1,n,res)){
            printf("%d\n",res);
            for(int i=u.size()-1;i>=0;i--)
                printf("%d ",u[i]+1);
            for(int i=u1.size()-1;i>=0;i--)
                printf("%d ",u1[i]+1);
            printf("\n");
        }
        for(int i=0;i<n;i++)
            v[i].clear();
        u.clear();u1.clear();
    }
}

