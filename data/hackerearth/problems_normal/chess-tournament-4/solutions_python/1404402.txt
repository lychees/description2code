def compare(firstIndex,secondIndex):
    if find[(firstIndex,secondIndex)] == firstIndex:
        return True
    return False
def MergeSort(A):
    if len(A) > 1:
        mid = len(A) // 2
        lefthalf = A[:mid]
        righthalf = A[mid:]
        MergeSort(lefthalf)
        MergeSort(righthalf)
        i = j = k = 0
        while i < len(lefthalf) and j < len(righthalf):
            if compare(lefthalf[i],righthalf[j]):
                A[k] = lefthalf[i]
                i = i + 1
            else:
                A[k] = righthalf[j]
                j = j + 1
            k = k + 1
        while i < len(lefthalf):
            A[k] = lefthalf[i]
            i = i + 1
            k = k + 1
        while j < len(righthalf):
            A[k] = righthalf[j]
            j = j + 1
            k = k + 1
    return A[0]
        
A = []    
val = []
find = {}
N = int(raw_input())
i = 1
while(len(A) < (2**N)):
    A.append(i)
    i += 1
    
for i in range(1,(2**N)):
    val = raw_input().split(' ')
    for index,j in enumerate(val):
        if j == '0':
            find[(index+1,i+1)] = (index+1)
        else :
            find[(index+1,i+1)] = i+1
        find[(i+1,index+1)] = find[(index+1,i+1)]
        
print MergeSort(A)