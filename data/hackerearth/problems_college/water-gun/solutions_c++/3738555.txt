#include <cstdio>
#include <cstring>
#include <cassert>

#include <algorithm>
#include <iostream>
using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

const int mod = 1000000007;

llint power(llint a, llint b) {
  llint ret = 1;
  for (; b > 0; b /= 2) {
    if (b % 2) ret = ret*a % mod;
    a = a*a % mod;
  }
  return ret;
}

llint inv(llint x) {
  return power(x, mod-2);
}

int main() {
  int T;
  scanf("%d", &T);
  while (T--) {
    llint K, N;
    scanf("%lld%lld", &K, &N);

    llint a = K;
    REP(i, N) a = a * (K-1) % mod;

    llint b = K;
    b = b * (K-1) % mod;
    b = b * max(K-2, 0LL) % mod;
    b = b * inv(6) % mod;
    REP(i, N) b = b * 3 % mod;

    llint c = K;
    c = c * (K-1) % mod;
    c = c * inv(2) % mod;

    llint d = K;
    d = d * (K-1) % mod;
    d = d * max(K-2, 0LL) % mod;
    d = d * inv(6) % mod;
    d = d * 3 % mod;
    d = d * (power(2, N) - 2 + mod) % mod;

    // TRACE(a _ b _ c _ d);

    llint ans = (a + b) % mod;
    ans = (((ans - c - c * max(K-2, 0LL)) % mod) + mod) % mod;
    ans = (ans - d + mod) % mod;

    printf("%lld\n", ans);
  }
  return 0;
}
