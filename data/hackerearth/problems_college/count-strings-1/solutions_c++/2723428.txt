#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll mod = 1000000007;
ll fact[1000001];
ll pow(ll base, ll exponent, ll modulus)
{
    ll result = 1;
    while (exponent > 0) {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
int main()
{
	fact[0] = fact[1] = 1;
	for (int i = 2; i <= 1000000; i++) {
		fact[i] = ((ll)i*fact[i-1])%mod;
	}
    int t;
    cin >> t;
    assert(1 <= t && t <= 100);
    while(t--) {
    	string a, b;
    	cin >> a >> b;
        int lena = a.length();
        int lenb = b.length();
        if (lenb > lena) {
        	cout << 0 << endl;
        	continue;
        }
        assert(1 <= lena && lena <= 1000000);
        assert(1 <= lenb && lenb <= 1000000);
    	int ctra[26] = {0};
    	int ctrb[26] = {0};
    	for (int i = 0; i < lena; i++) {
    	    int z = a[i] - 'a';
            assert(0 <= z && z < 26);
    		ctra[z]++;
    	}
    	for (int i = 0; i < lenb; i++) {
    	    int z = b[i] - 'a';
            assert(0 <= z && z < 26);
    		ctrb[z]++;
    	}
    	ll ans = 1;
    	for (int i = 0; i < 26; i++) {
    		int n = ctra[i];
    		int r = ctrb[i];
    		if(r > n) {
    			ans = 0;
    			break;
    		}
    		if (n > 0 && r > 0) {
    			ans = (ans * fact[n])%mod;
    		//	ans = (ans * pow(fact[r], mod - 2, mod))%mod;
    			ans = (ans * pow(fact[n-r], mod - 2, mod))%mod;
    		//	ans = (ans * fact[r])%mod;
    		}
    	}
    	cout << ans << endl;
    }
    return 0;
}