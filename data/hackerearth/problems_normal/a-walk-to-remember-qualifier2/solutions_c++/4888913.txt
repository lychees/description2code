/*
* @problem: a-walk-to-remember-qualifier2
*/

#include <iostream>
#include <cstring>
#include <cstdio>
#include <iomanip>
#include <cmath>
#include <limits.h>
#include <vector>
#include <map>
#include <bitset>
#include <string>
#include <iterator>
#include <set>
#include <utility>
#include <queue>
#include <numeric>
#include <functional>
#include <ctype.h>
#include <stack>
#include <algorithm>
#include <cstdlib>
#define MAX 100100
#define mod 1000000007LL
#define bitcnt(x) __builtin_popcountll(x)
#define MS0(x) memset(x, 0, sizeof(x))
#define MS1(x) memset(x, -1, sizeof(x))
#define ll long long int
#define mp(x, y) make_pair(x, y)
#define pii pair<int, int>
#define pll pair<ll, ll>
#define in(x) scanf("%lld", &x)
#define ind(x) scanf("%d", &x)
#define ins(x) scanf("%s", x)
#define pr(x) printf("%lld\n", x)
#define prd(x) printf("%d\n", x)
#define prs(x) printf("%s\n", x)
#define pi acos(-1.0)
#define ff first
#define ss second

using namespace std;
int n, m;
vector<int> v[MAX], vr[MAX], scc;
int vis[MAX], path[MAX];
stack<int> s;

void dfs(int src)
{
	vis[src] = 1;
	for(int i : v[src])
		if(!vis[i])
			dfs(i);
	s.push(src);
}

void dfs1(int src)
{
	vis[src] = 1;
	for(int i : vr[src])
		if(!vis[i])
			dfs1(i);
	scc.push_back(src);
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("../input.txt", "r", stdin);
		// freopen("../output.txt", "w", stdout);
	#endif
	// ios_base::sync_with_stdio(0);
    // cin.tie(0);
	int a, b;
	ind(n);
	ind(m);
	for(int i = 0; i < m; i++)
	{
		ind(a);
		ind(b);
		v[a].push_back(b);
		vr[b].push_back(a);
	}

	for(int i = 1; i <= n; i++)
		if(!vis[i])
			dfs(i);

	MS0(vis);
	while(!s.empty())
	{
		int i = s.top();
		s.pop();
		if(!vis[i])
		{
			scc.clear();
			dfs1(i);
			if(scc.size() > 1)
				for(int j : scc)
					path[j] = 1;
		}
	}

	for(int i = 1; i <= n; i++)
		printf("%d ", path[i]);
	printf("\n");
	return 0;
}