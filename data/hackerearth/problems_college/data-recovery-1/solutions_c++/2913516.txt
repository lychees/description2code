#include <bits/stdc++.h>
#define MAX 1000006
using namespace std;

bool non_leaf[MAX], present[MAX];
std::priority_queue<int, std::vector<int>, std::greater<int> > leaf;

vector <int> adj[MAX],ans;
int max_level,edges[MAX];

void fun() {

	while(!leaf.empty()) {
		int x = leaf.top();
		leaf.pop();
		ans.push_back(x);	
		for(int j=0;j<adj[x].size();j++) {
			int y = adj[x][j];
			edges[y]--;
			if(!edges[y])
				leaf.push(y);			
		}		
		
	}
	
}

int main() {
	
	int n,k,prev,a;
	cin >> n;
	while(n--) {
		cin >> k;
		scanf("%d",&prev);
		present[prev] = true;
		for(int i=1;i<k;i++) {
			scanf("%d",&a);
			adj[prev].push_back(a);
			non_leaf[a] = present[a] = true;
			prev = a;
			edges[a]++;
		}
	}
	
	for(int i=0;i<MAX-1;i++)
		if(present[i] && !non_leaf[i])
			leaf.push(i);
	
	fun();
	for(int i=0;i<ans.size();i++)
		printf("%d ",ans[i]);
	printf("\n");
	
	return 0;
	
}

