#include<bits/stdc++.h>
using namespace std;
bool prime[1000*1000+9]; 
const int MAX=1000*1000+9;
int arr[MAX];
void sieve(){
    for(int i=1;i<=MAX;++i)
        prime[i]=true;
    int lim=sqrt(MAX+.0)+1;
    prime[1]=false;
    for(int i=2;i<=lim;++i){
        if(prime[i]==true){
            for(int j=i*i;j<=MAX;j+=i){
                prime[j]=false;
            }
        }
    }
}
int n;
int bit[MAX+4];
inline void upd(int at,int by){
    for(;at<=n;at+=at&-at)
        bit[at]+=by;
    return;
}
inline int qry(int at){
    int sum=0;
    for(;at>=1;at-=at&-at)
        sum+=bit[at];
    return sum;
}
int main(){
    sieve();
//    for(int i=1;i<=20;++i)
    int tc;scanf("%d",&tc);
    while(tc--){
        scanf("%d",&n); 
        memset(bit,0,sizeof bit);
        for(int i=1;i<=n;++i){
            int temp;scanf("%d",&temp);
            arr[i]=temp;
            if(prime[temp])
            upd(i,1);
        }
        int q;scanf("%d",&q);
        while(q--){
            char ch;//scanf("%c",&ch);
            cin>>ch;
            if(ch=='A'){
                int l,r;cin>>l>>r;
                //scanf("%d%d",&l,&r);
                printf("%d\n",qry(r)-qry(l-1));
            }else if(ch=='C'){
                int at,by;cin>>at>>by;
                //scanf("%d%d",&at,&by);
                if(prime[arr[at]]){
                    upd(at,-1);
                }
                if(prime[by]){
                    upd(at,1);
                }
                arr[at]=by;
            }
        }
    }
    return 0;}
