#include<bits/stdc++.h>
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define ll long long
#define F first
#define S second
#define scni(t) scanf("%d",&t)
#define scnl(t) scanf("%lld",&t)
#define rep(i,n) for(int i=0;i<n;i++)
#define REP(i,a,b) for(int i=a;i<=b;i++)
#define N 100005
#define mod 1000000007
using namespace std;


std::vector<int> g[N],revg[N];
int scc[N];
stack<int> s;
bool revvis[N];

void revdfs(int node){
	revvis[node] = true;

	rep(i,revg[node].size()){
		if(!revvis[revg[node][i]])
			revdfs(revg[node][i]);
	}

	s.push(node);
}


void dfs(int node,int c){
	scc[node] = c;

	rep(i,g[node].size()){
		if(scc[g[node][i]] == -1)
			dfs(g[node][i],c);
	}
}

int main(){
	int t;
	int n,m,a,b,c;
	scni(t);
	while(t--){
		scni(n),scni(m);
		rep(i,n) scc[i] = -1;
		int f2=0;
		while(m--){
			scni(a),scni(b),scni(c);
			if(c != 0) f2 =1;
			a--;b--;
			g[a].pb(b);
			revg[b].pb(a);
		}
		if(f2 == 0){
			printf("YES\n");
			continue;
		}
		rep(i,n){
			if(!revvis[i])
				revdfs(i);
		}
		while(!s.empty()){
			int top = s.top();
			s.pop();
			if(scc[top] == -1)
				dfs(top,top);
		}

		//rep(i,n) cout<<scc[i]<<" ";
		int f=0;
		rep(i,n){
			if(scc[i] != i){
				f=1;
				break;
			} 
		}
		if(f) printf("NO\n");
		else printf("YES\n");

		rep(i,n){
			g[i].clear();
			revg[i].clear();
			revvis[i] = false;
		}

	}
	return 0;
}