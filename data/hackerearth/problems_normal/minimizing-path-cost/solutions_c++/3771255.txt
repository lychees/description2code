#include <bits/stdc++.h>
#define mp make_pair
using namespace std;

int main()
{
    int n,e,i;
    cin>>n>>e;
    getchar();
    map<string,int> m;
    string s,str;
    for(i=0;i<n;i++) {
    	cin>>s;
    	m[s]=i;
    }
    vector<vector<pair<int,int> > > vec(n);
    int cost,a,b;
    map<string,int>::iterator it;
    for(i=0;i<e;i++) {
    	cin>>s>>str>>cost;
    	it=m.find(s);
    	a=it->second;
    	it=m.find(str);
    	b=it->second;
    	vec[a].push_back(mp(cost,b));
    	vec[b].push_back(mp(cost,a));
    	getchar();
    }
    int q;
    cin>>q;
    getchar();
    while(q--) {
    	cin>>s>>str;
    	it=m.find(s);
    	a=it->second;
    	it=m.find(str);
    	b=it->second;
    	set<pair<int,int>> pq;
    	int dp[n];
    	for(i=0;i<n;i++) dp[i]=INT_MAX;
    	dp[a]=0;
    	for(i=0;i<(int)vec[a].size();i++) {
    		pq.insert(vec[a][i]);
    		dp[(vec[a][i].second)]=vec[a][i].first;
    	}
    	set<pair<int,int>>::iterator itr;
    	while(!pq.empty()) {
    		itr=pq.begin();
    		pair<int,int> p,p1;
    		p=(*itr);
    		int cst=p.first;
    		pq.erase(itr);
    		a=p.second;
    		for(i=0;i<(int)vec[a].size();i++) {
    				if(vec[a][i].first+dp[a]<dp[vec[a][i].second]){
    					dp[vec[a][i].second]=vec[a][i].first+cst;
    					p1.first=vec[a][i].first+cst;
    					p1.second=vec[a][i].second;
    					for(itr=pq.begin();itr!=pq.end();*itr++) {
    						if((*itr).second==vec[a][i].second) pq.erase(itr);
    					}
    					pq.insert(p1);
    				}
    		}
    	}
    	cout<<dp[b]<<endl;
    }
    return 0;
}

