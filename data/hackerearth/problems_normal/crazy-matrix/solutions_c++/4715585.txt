#include <iostream>
using namespace std;
bool dfs(int arr[][100],int num,int r,int c,int n,int count){
	if((count)==n){
		return true;
	}
	if(r<0 || r>=n || c<0 ||c>=n){
		return false; 
	}
	if(arr[r][c]!=num){
		return false;
	}
	
	arr[r][c] = (-num);
	count++;
	if( dfs(arr,num,r,c+1,n,count) ||
	 dfs(arr,num,r,c-1,n,count)||
	 dfs(arr,num,r-1,c,n,count)||
	 dfs(arr,num,r+1,c,n,count)||
	 dfs(arr,num,r-1,c-1,n,count)||
	 dfs(arr,num,r-1,c+1,n,count)||
	 dfs(arr,num,r+1,c+1,n,count)||
	 dfs(arr,num,r+1,c-1,n,count)){
	 	return true;
	 }
	 else{
	 	return false;
	 }
	
}
int main()
{
    int n;
    cin>>n;
    int arr[100][100];
    int arr_copy[100][100];
    for(int i=0;i<n;i++){
    	for(int j=0;j<n;j++){
    		cin>>arr[i][j];
    		arr_copy[i][j]=arr[i][j];
    	}
    }
    int _a=-1;
    int _b=-1;
    int count=1;
    for(int i=0;i<n;i++)
    {	
    	//for(int j=0;j<n;j++)
    	if(arr_copy[0][i]==1){
    		if(dfs(arr_copy,1,0,i,n,0)==true){
    			_a=1;
    			//cout<<_a<<endl;
    			break;
    		}
    	}
    }
    for(int i=0;i<n;i++)
    {	
    	//for(int j=0;j<n;j++)
    	if(arr_copy[i][0]==2){
    		if(dfs(arr_copy,2,i,0,n,0)==true){
    			_b=2;
    			//cout<<_a<<endl;
    			break;
    		}
    	}
    }
   // cout<<_a<<"+"<<_b<<endl;
    if(_a==1 && _b==2){
    	cout<<"AMBIGUOUS"<<endl;
    }
    else if(_a==1){
    	cout<<_a<<endl;
    }
    else if(_b==2){
    	cout<<_b<<endl;
    }
    else{
    	cout<<0<<endl;
    }
    
    
    return 0;
}
