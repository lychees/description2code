//Brio and House - 2

#include <iostream>
#include <cmath>

const double e = 0.0001;

class Point
{
 public:
	Point(double x_, double y_) : x(x_), y(y_) {}
	double x, y;
};

std::string intersection(Point p1, Point p2, double r)
{
	double dx = p1.x - p2.x;
	double dy = p1.y - p2.y;
	double dr = sqrt(dx * dx + dy * dy);
	double d = p1.x * p2.y - p2.x * p1.y;
	double delta = (r * r * dr * dr) - (d * d);
	
	if (delta >= -e && delta <= e)
	{
		return "JUST MISSED";
	}
	else if (delta < 0)
	{
		return "SAFE";
	}
	else
	{
		return "REPLANNING";
	}
}

int main()
{
	int t;
	double x1, y1, x2, y2, r;
	std::cin >> t;
	
	while (t--)
	{
		std::cin >> x1 >> y1 >> x2 >> y2 >> r;
		std::cout << intersection(Point(x1, y1), Point(x2, y2), r) << std::endl;
	}
	
	return 0;
}
