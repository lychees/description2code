/*    SHUBHAM SINHA    */
 
 
 
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>
 
#define ll long long int
#define maxN 2000
#define maxVal (ll)1000000000000000000
#define minVal -100000000
#define mod (ll)1000000003
 
#define gcd(a,b) __gcd(a,b)
 
using namespace std;
 
ll n,m;
ll lpf[maxN*5+5];
ll a[maxN*5+5];
ll b[maxN*5+5];
ll dp[2][maxN*5+5];
ll mi[maxN*5+5];
ll smi[maxN*5+5];
ll mii[maxN*5+5];
ll smii[maxN*5+5];

void pre()
{
	ll i,j;
	for(i=1;i<=(maxN*5);i++)
		lpf[i]=i;
	for(i=2;i<=(maxN*5);i++)
	{
		if(lpf[i]==i)
		{
			for(j=2*i;j<=(maxN*5);j+=i)
				lpf[j]=min(lpf[j],i);
		}
	}
}

int main()
{
    #ifndef ONLINE_JUDGE
    	//freopen("in.txt","r",stdin);
    	//freopen("out.txt","w",stdout);
    #endif
    pre();
	ll s0,s1,p,q,r,w0,w1,x,y,z,i,j,k,ans,c=0;
	scanf("%lld%lld",&n,&m);
	scanf("%lld%lld%lld%lld",&s0,&p,&q,&r);
	scanf("%lld%lld%lld%lld",&w0,&x,&y,&z);
	/*for(i=1;i<=n;i++)
	{
		for(j=1;j<=m;j++)
			printf("%lld ",a[i][j]);
		printf("\n");
	}
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=m;j++)
			printf("%lld ",b[i][j]);
		printf("\n");
	}*/
	for(j=0;j<=m;j++)
	{
		dp[0][j]=0;
		dp[1][j]=maxVal;
		mi[j]=maxVal;
		smi[j]=maxVal;
		mii[j]=0;
		smii[j]=0;
		if(j==0)
			continue;
		s1=((((p*s0)%mod)*s0)%mod+(q*s0)%mod+r)%mod;
		a[(c%m)+1]=s1;
		s0=s1;
		w1=((((x*w0)%mod)*w0)%mod+(y*w0)%mod+z)%mod;
		b[(c%m)+1]=w1;
		w0=w1;
		c++;
	}
	for(i=1;i<n;i++)
	{
		//code of dp
		for(j=1;j<=m;j++)
		{
			if(mi[lpf[j]]>=(dp[0][j]+b[j]))
			{
				smi[lpf[j]]=mi[lpf[j]];
				smii[lpf[j]]=mii[lpf[j]];
				mi[lpf[j]]=b[j]+dp[0][j];
				mii[lpf[j]]=j;
			}
			else if(smi[lpf[j]]>=(dp[0][j]+b[j]))
			{
				smi[lpf[j]]=b[j]+dp[0][j];
				smii[lpf[j]]=j;
			}
		}
		for(j=1;j<=m;j++)
		{
			dp[1][j]=min(dp[1][j],dp[0][j]+a[j]);
			if(mii[lpf[j]]==j)
				dp[1][j]=min(dp[1][j],smi[lpf[j]]);
			else
				dp[1][j]=min(dp[1][j],mi[lpf[j]]);
		}
		for(j=1;j<=m;j++)
		{
			if(j!=1)
				dp[1][1]=min(dp[1][1],dp[0][j]+b[j]);
		}
		for(j=0;j<=m;j++)
		{
			dp[0][j]=dp[1][j];
			dp[1][j]=maxVal;
			mi[j]=maxVal;
			smi[j]=maxVal;
			mii[j]=0;
			smii[j]=0;
			if(j==0)
				continue;
			s1=((((p*s0)%mod)*s0)%mod+(q*s0)%mod+r)%mod;
			a[(c%m)+1]=s1;
			s0=s1;
			w1=((((x*w0)%mod)*w0)%mod+(y*w0)%mod+z)%mod;
			b[(c%m)+1]=w1;
			w0=w1;
			c++;
		}
	}
	ans=maxVal;
	for(j=1;j<=m;j++)
		ans=min(ans,dp[0][j]);
	printf("%lld\n",ans);
    return 0;
}