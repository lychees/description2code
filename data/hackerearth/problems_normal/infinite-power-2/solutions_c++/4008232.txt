#include<bits/stdc++.h>
using namespace std;
int calGcd(int a,int b)
{
    if(a%b==0)
        return b;
        return calGcd(b,a%b);

}
int main()
{
    long test;
    scanf("%ld",&test);
    while(test--)
    {
        long n,t,mul;
        scanf("%ld",&n);
        long lessNum=0;
        t=n;
        mul=1;
        while(t)
        {
            mul=mul*10;
            t=t/10;
        }
        mul=mul/10;
        t=n;
       while(mul)
        {
            int r=t/mul;
            if(r%2)
            {
                r--;
                lessNum=mul*r+lessNum;
                mul=mul/10;
                break;
            }
            lessNum=mul*r+lessNum;
            t=t%mul;
            mul=mul/10;
        }
        while(mul)
        {
            lessNum=mul*8+lessNum;
            mul=mul/10;
        }
        int greaterNum=0,car=0;
        t=n;mul=1;

        while(t)
        {
            int r=t%10;
            r=r+car;
            if(r%2)
            {
                r=r+1;
                greaterNum=0;
            }
            if(r==10)
            {
                r=0;
                car=1;
            }
            else
             car=0;
            greaterNum=mul*r+greaterNum;
            mul=mul*10;
            t=t/10;
        }
        if(car)
        {
            if(car&1)
                car++;
            greaterNum=mul*car+greaterNum;
        }


       if(greaterNum==lessNum)
        printf("Unlimited Power\n");
       else
       {
           int gcd=calGcd(n-lessNum,greaterNum-n);
           printf("%ld/%ld\n",((greaterNum-n)/gcd) , ((n-lessNum)/gcd));
       }
    }
}
