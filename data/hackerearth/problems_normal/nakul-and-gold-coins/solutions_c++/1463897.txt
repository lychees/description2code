#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

vector<long long> Eratosthenes(long long N){
	vector<bool> v(N+1, true);
	v[0] = v[1] = false;
	long long sqN = sqrt(N);
	for(long long i=2; i<=sqN; i++){
		if(v[i] == false) continue;
		for(long long j=i*i; j<=N; j+=i){
			v[j] = false;
		}
	}
	vector<long long> Prime;
	for(long long i=2; i<=N; i++){
		if(v[i]==true) Prime.push_back(i);
	}
	return Prime;
}

int main(){
	vector<long long> prime = Eratosthenes(1000000);

	vector<int> v;
	for(int i=0; i<prime.size(); i++){
		for(int j=i+1; j<prime.size(); j++){
			if(prime[i]*prime[j] > 100000000) break;
			v.push_back(prime[i]*prime[j]);
		}
	}
	sort(v.begin(), v.end());

	int T;
	cin >> T;
	while(T--){
		int L,R;
		cin >> L >> R;
		int ans = upper_bound(v.begin(), v.end(), R) - upper_bound(v.begin(), v.end(), L-1);
		cout << ans << endl;
	}
	return 0;
}