#include <iostream>
#include <cstdio>
#include <vector>
#include <tuple>
#include <cmath>

using namespace std;
int main() {
    int N;
    cin >> N;
    vector<tuple<int, int, int>> vec;
    for(int i = 0; i < N; i++) {
        int X, Y, F;
        cin >> X;
        cin >> Y;
        cin >> F;
        vec.push_back(make_tuple(X, Y, F));
    }

    vector<double> dp(N);
    dp[0] = get<2>(vec[0]);
    for(int i = 1; i < N; i++) {
        bool unset = true;
        int cur_x = get<0>(vec[i]);
        int cur_y = get<1>(vec[i]);
        int add = get<2>(vec[i]);
        for(int j = 0; j < i; j++) {
            int cand_x = get<0>(vec[j]);
            int cand_y = get<1>(vec[j]);
            double diff_x = abs(cur_x - cand_x);
            double diff_y = abs(cur_y - cand_y);
            double cost = sqrt(diff_x * diff_x + diff_y * diff_y);
            if(unset || (add - cost + dp[j]) > dp[i]){
                dp[i] = add - cost + dp[j];
                unset = false;
            }
        }
    }
    printf("%.6f\n", dp[N-1]);
}
