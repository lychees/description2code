#include <iostream>
#include <limits>
#include <vector>

using namespace std;


int  maxcrosssub(int st,int mid,int end,const vector<int > &arr)
{
  int  lsum(numeric_limits<int >::min()),rsum(numeric_limits<int >::min()),sum(0);
  for(int  i=mid;i>=st;i--)
  {
    sum+=arr[i];
    if(sum>lsum)
      lsum=sum;
  }

  sum=0;  

  for(int i=mid+1;i<=end;i++)
  {
    sum+=arr[i];
    if(sum>rsum)
      rsum=sum;
  }
  return lsum+rsum;
}

int  maxsub(int st,int end,const vector<int > &arr)
{
  if(st==end)
    return arr[st];

  int mid = (st+end)/2;
  int  l = maxsub(st,mid,arr);
  int  r = maxsub(mid+1,end,arr);
  int  acmid = maxcrosssub(st,mid,end,arr);

  if(l>=r && l>=acmid)
    return l;
  else if(r>=l && r>=acmid)
    return r;
  else
    return acmid;
}


int  main()
{
  int  n;
  cin>>n;
  vector<int > v(n);
  for(int i=0;i<n;i++)
    cin>>v[i];
  cout<<maxsub(0,n-1,v);
  return 0;
}
