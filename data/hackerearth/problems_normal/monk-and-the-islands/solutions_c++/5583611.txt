#include <bits/stdc++.h>
using namespace std;
vector<int>a[10000];
int steps[10000];
bool visited[10000];
int bfs(int n){
	memset(steps,0,sizeof(steps));
	memset(visited,false,sizeof(visited));
	queue<int>q;
	q.push(0);
	steps[0]=0;
	visited[0]=true;
	while(!q.empty()){
		int u=q.front();
		q.pop();
		for(int i=0;i<a[u].size();i++){
			int v=a[u][i];
			if(!visited[v]){
				steps[v]=1+steps[u];
				q.push(v);
				if(v==n-1){
					return steps[v];
				}
				visited[v]=true;
			}
		}
	}
}
int main() {
	int t;
	cin>>t;
	while(t--){
		int n,m;
		cin>>n>>m;
		while(m--){
			int u,v;
			cin>>u>>v;
			a[u-1].push_back(v-1);
			a[v-1].push_back(u-1);
		}
		cout<<bfs(n)<<endl;
		for(int i=0;i<n;i++){
			a[i].clear();
		}
	}
	return 0;
}