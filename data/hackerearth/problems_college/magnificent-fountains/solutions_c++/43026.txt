
//STL includes
#include <vector>
#include <algorithm>
#include <list>
#include <map>
#include <deque>
#include <queue>
#include <set>
#include <stack>
#include <string>

//C includes
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>

//Other includes
#include <iomanip>
#include <iostream>
#include <sstream>
#include <fstream>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>

#define EPS 1e-7
#define sqr(x) ( (x)*(x) )
#define size(a) int((a).size()) 
#define pb push_back
#define mset(x,v) memset(x,v,sizeof(x))
#define all(c) (c).begin(),(c).end() 
#define SORT(x) sort(all(x))
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define chk(x,n) ( x[n>>6] & (1<< ( (n>>1) & 31) )  ) // checks if  the bit corresponding to n is 1 
#define set(x,n) ( x[n>>6] |= (1<< ( (n>>1) & 31) )  ) // sets the bit corresponding to n to 1 - meaning its composite 
#define eq(a,b) ( fabs(a-b) < EPS)
#define inf 1000000	
#define mod 1000000007

typedef long long int ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long int ull;

using namespace std;

typedef vector<int> VI;
typedef set<int> SI;
typedef map<int,int> MII;
typedef pair<int,int> PII;

int pow(int a, int b) {

	ull x = 1, y = a;

	while(b > 0) {

		if(b%2 == 1) {

			x=(x*y);

			if(x>mod) x%=mod;

		}

		y = (y*y);

		if(y>mod) y%=mod;

		b /= 2;

	}

	return x;

}


int gcd(int a,int b)
{
	if(b==0)
	{
		return a;
	}

	return gcd(b,a%b);
}

int lcm(int a, int b)
{
	return a/gcd(a,b)*b; // a*b/gcd may cause an overflow
}

int num[1000];
int prime[10001];
int main()
{
	int t;
	scanf("%d",&t);
	for(int i=0;i < 10001;i++)
		{
			prime[i]=0;
		}
	while(t--)
	{
		
		int n;
		scanf("%d",&n);
		for(int i=0;i < n;i++)
		{
			scanf("%d",&num[i]);
		}
		for(int i=0;i < n;i++)
		{
			int k=2,power=0;
			while(num[i]>1)
			{
				while(num[i]%k==0)
				{
					num[i]/=k;
					power++;
				}
				if(power>prime[k]) 
				{
					prime[k]=power;
				}
				k++;power=0;
			}
		}
		ull ans=1;
		for(int i=2;i < 10001;i++)
		{
			if(prime[i]>0) 
			{
				ans=(ans*pow(i,prime[i]))%mod;
			}
		}
		cout << ans << endl;
	}
	
	return 0;
}

