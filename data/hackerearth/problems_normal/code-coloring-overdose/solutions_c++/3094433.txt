#include <iostream>
using namespace std;
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <map>
#include <queue>
#include <algorithm>
#include <cmath>
#include <set>
#include <ctime>
#include <stack>
#include <list>
#include <cassert>
#include <iomanip>
#include <deque>
#include <sstream>
#include <fstream>
typedef pair<int,int> pii;
#define rep(i,j,n) for(i=j;i<n;i++)
#define pb push_back
#define ff first
#define ss second 
#define lli long long int
#define get getchar

inline int scan() {
    int n=0;
    char p=get();
    while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
    if(p=='-') p=get();
    while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=get(); }
    return n;
}
const int maxn = 5e5 + 100;
int dp[maxn][11];
lli mod = 1e9 + 7;
lli power(lli a , lli b) {
	lli ans = 1;
	while (b) {
		if (b&1) ans = (a*ans)%mod;
		a = (a*a)%mod;
		b/=2;
	}
	return ans;
}

int main() {
        
    ios::sync_with_stdio(false);
    
    //clock_t start = std::clock();
    //freopen ("inp.txt","r",stdin);
    //freopen ("out.txt","w",stdout);
    //cout << "Time: " << (std::clock() - start) / (double)(CLOCKS_PER_SEC / 1000) << " ms" << std::endl;

	int n,k,m;
	cin >> n >> k >> m;
	vector <int> cnt(k+1,0);
	
	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		cnt[x]++;
	}
	dp[0][0] = 1;
	for (int i = 1; i <= k; i++) {
		dp[i][0] = 1;
		for (int j = 1; j <= m; j++) {
			dp[i][j] = (dp[i-1][j] + (dp[i-1][j-1] * (power(2,cnt[i])-1+mod))%mod)%mod;
			//cout << dp[i][j]  << " " ;
		}
		//cout << endl;
	}
	
	lli ans = 1;
	for (int i = 1; i <= m; i++)
		ans = (ans + dp[k][i])%mod;
	cout << ans << endl;
    
    
    return 0;
        
}