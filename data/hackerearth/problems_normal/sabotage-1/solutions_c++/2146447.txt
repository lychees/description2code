#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define debug(X) cerr << " --> " << #X << " = " << X << endl
#define mod 1000000007LL
#define INF 123456789123456789LL
typedef long long ll; typedef vector<int> vi; typedef pair<ll,ll> pii; typedef vector<pair<int,int> > vpii;
const int N = 312345;
int st[N];
int findset(int a)
{
    if(st[a] == a)return a;
    return st[a] = findset(st[a]);
}
void merge(int a, int b)
{
    int x = findset(a);
    int y = findset(b);
    if(x != y)
    {
        st[x] = y;
    }
}
void kruskal(set<pair<int, pii>> edges)
{
    vector<int> ans;
    for(auto it = edges.begin(); it != edges.end(); ++it)
    {
        int u = it -> S.F;
        int v = it -> S.S;

        if(findset(u) != findset(v))
            merge(u, v);
        else
            ans.pb(N - it->F);
    }
    sort(ans.begin(), ans.end());
    printf("%d\n", ans.size());
    for(int i = 0; i < ans.size(); ++i)
        printf("%d\n", ans[i]);
}
set<pair<int, pii>> edges;
int main()
{
    int n, m;
    scanf("%d %d", &n, &m);
    for(int i = 1; i <= n; ++i)
        st[i] = i;
    int u, v;
    for(int i = 1; i <= m; ++i)
    {
        scanf("%d %d", &u, &v);
        edges.insert(mp(N - i, mp(u, v)));
    }
    kruskal(edges);
    return 0;
}
