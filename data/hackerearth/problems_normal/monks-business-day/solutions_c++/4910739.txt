

    #include<bits/stdc++.h>

    using namespace std;

    #define rep(i,n) for(i=0;i<n;i++)
    #define ll long long
    #define elif else if
    #define pii pair<int,int>
    #define mp make_pair
    #define pb push_back
    #define gc getchar_unlocked

    struct edge
    {
      int u,v,c;
    };
    vector< vector< int> >orig;
    vector< edge > ve;
    int n,m;
    int dist[100004];
    int lim=1000000000;
    int foo()
    {
      int i,j;
      for(i=1;i<=n;i++)dist[i]=lim;
        dist[1]=0;
      for ( i = 0; i <= n-1; i++)
        {
            for ( j = 0; j < m; j++)
            {
                int u = ve[j].u;
                int v = ve[j].v;
                int c = ve[j].c;
         //       cout<<"\n"<<u<<" "<<v<<" "<<c;
                if (dist[u] != lim)
                    dist[v] = min(dist[v],dist[u] + c);
            }
        }
        for ( j = 0; j < m; j++)
        {
          int u = ve[j].u;
          int v = ve[j].v;
          int c = ve[j].c;
          if (dist[u] != lim && dist[u] + c < dist[v])
              return 1;
        }
        return 0;
    }
    int main()
    {
        // freopen("in","r",stdin);
        // freopen("out","w",stdout);
        int t;
        cin>>t;
        assert(1<=t && t<=10);
        while(t--)
        {
            int i,j,k,x,y,c,q;
            cin>>n>>m;
            orig.clear();
            orig.resize(n+1);
            assert(1<=n && n<=100);
            assert(1<=m && m<=1000);
            ve.clear();
            ve.resize(m);
            rep(i,m)
            {
                cin>>x>>y>>c;
                assert(1<=x && x<=n);
                assert(1<=y && y<=n);
                assert(-1000<=c && c<=1000);
                ve[i].u=x;
                ve[i].v=y;
                ve[i].c=-1*c;
            }
            if(foo())
              cout<<"Yes";
            else
              cout<<"No";
            if(t>0)cout<<"\n";
       }
       return 0;
    }

