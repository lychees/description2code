#include<bits/stdc++.h>
using namespace std;
int a[501][501];
bool val[1100001];
bool isvalid[1100001];
int n,m;
#define MININT -100000000
#define MAX(x,y) ((x)>(y)?(x):(y))
bool find(int start)
{
    int dp[501][501]={0};
    dp[1][1]=start+a[1][1];
   // cout<<dp[1][1]<<" ";
    if(dp[1][1]<=0)
        return false;
    int i,j;
    for(i=0;i<=n;i++)
        dp[i][0]=MININT;
    for(j=1;j<=m;j++)
        dp[0][j]=MININT;
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=m;j++)
        {
            if(i==1 && j==1)
                continue;
            dp[i][j]=MAX(dp[i-1][j],dp[i][j-1])+a[i][j];
            if(dp[i][j]<=0)
            {
                dp[i][j]=MININT;
            }
  //          cout<<dp[i][j]<<" ";
        }
        
    }
  //  cout<<"for "<<start<<" "<<dp[n][m]<<endl;
    if(dp[n][m]<=0)
        return false;
    return true;
    
}
int get(int i)
{
    if(!isvalid[i])
        val[i]=find(i);
    isvalid[i]=true;
    return val[i];
}
int lowerbound(int n)
{
    int first=0,last=n-1,mid;
    while(first<last)
    {
    //    cout<<"first "<<first<<" last "<<last<<endl;
        mid=(first+last)/2;
        bool temp=get(mid);
      //  cout<<"for "<<mid<<" "<<temp<<endl;
        if(temp)
        {
            last=mid;
        }
        else
        {
            first=mid+1;
        }  
    }
    if(get(first))
        return first;
 
    return first+1;
}
int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--)
	{
	    cin>>n>>m;
	    int i=0,j;
	    for(i=0;i<=(n+m)*1100;i++)
	    {
	        isvalid[i]=false;   
	        val[i]=false;
	    }
	    for(i=1;i<=n;i++)
	        for(j=1;j<=m;j++)
	            cin>>a[i][j];
		cout<<lowerbound(1100 * (n+m))<<endl;
	/*	while(1)
		{
		    int a;
		    cin>>a;
		    cout<<find(a)<<endl;
		}*/
	
	}
	return 0;
}