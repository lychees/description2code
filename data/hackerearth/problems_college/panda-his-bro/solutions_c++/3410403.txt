#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N=1e5+10;
const int inf=1e9+9;

vector<int> g[N];
int dist[N];

void dfs(int start) {
  for(int i=0;i<g[start].size();i++) {
    int to=g[start][i];
    if(dist[to]==inf) {
      dist[to]=dist[start]+1;
      dfs(to);
    }
  }
  return;
}
int main() {
  int n;
  cin>>n;
  for(int i=0;i<n-1;i++) {
    int foo,bar;
    cin>>foo>>bar;
    g[foo].push_back(bar);
    g[bar].push_back(foo);
  }
  for(int i=1;i<=n;i++) {
    dist[i]=inf;
  }
  dist[1]=0;
  dfs(1);
  int maxVal=0,ver;
  for(int i=1;i<=n;i++) {
    if(dist[i]>maxVal) {
      ver=i;
      maxVal=dist[i];
    }
  }
  for(int i=1;i<=n;i++) {
    dist[i]=inf;
  }
  dist[ver]=0;
  dfs(ver);
  maxVal=0;
  for(int i=1;i<=n;i++) {
    maxVal=max(maxVal,dist[i]);
  }
  cout<<maxVal<<endl;
  return 0;
}
