#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sstream>
#include <iostream>
#include <math.h>
#include <time.h>
#include <unistd.h>
#include <algorithm>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <vector>
#include <set>
#include <string>

#ifndef ONLINE_JUDGE
	#define DEBUG(x) cout << '>' << #x << ':' << x << endl;
#else
	#define DEBUG(x) do {} while(0);
#endif

#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define MOD 10000003
#define FOR(i, A, N) for(int (i) = (A); (i) < (N); (i)++)
#define REP(i, N) for(int (i) = 0; (i) < (N); (i)++)

using namespace std;
typedef long long ll;
inline bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
typedef vector<vector<ll> > vvi;
int n,m;
char SS[55];
vvi GM;

vvi mult(vvi A, vvi B) {
	vvi res;
	REP(i, A.size()) {
		vector<ll> rw;
		REP(j, B[0].size()) {
			ll sum = 0;
			REP(k, A[0].size()) (sum += (A[i][k]*B[k][j])%MOD)%=MOD;
			rw.pb(sum);
		}
		res.pb(rw);
	}
	return res;
}

vvi calcpow(vvi mtx, int pw) {
	if(pw == 0) {
		vvi ans;
		REP(i, 5) {
			vector<ll> rw;
			REP(j, 5) rw.pb(i==j);
			ans.pb(rw);
		}
		return ans;
	}
	vvi hf = calcpow(mtx, pw/2);
	hf = mult(hf, hf);
	if(pw % 2 == 1)
		hf = mult(hf, mtx);

	return hf;
}

string S;
int main() {
	GM.pb({0,1,1,2,0});
	GM.pb({1,0,0,0,0});
	GM.pb({0,1,0,0,0});
	GM.pb({0,0,0,1,1});
	GM.pb({0,0,0,0,1});
	
	int T;
	scanf("%d", &T);
	REP(testc, T) {
		int n;
		scanf("%d", &n);
		if(n == 0)
			printf("0\n");
		else if(n == 1)
			printf("1\n");
		else if(n == 2)
			printf("1\n");
		else {
			vvi start;
			start.pb(vector<ll>{1});
			start.pb(vector<ll>{1});
			start.pb(vector<ll>{0});
			start.pb(vector<ll>{3});
			start.pb(vector<ll>{1});
			vector< vector<ll> > res = mult(calcpow(GM, n-2), start);
			printf("%lld\n", res[0][0]);
		}
	}
	return 0;
}
/*

(
 0 1 1 2 0
 1 0 0 0 0
 0 1 0 0 0
 0 0 0 1 1
 0 0 0 0 1
 )*
	
(f(n-1)
 f(n-2)
 f(n-3)
 n
 1)*/
