#include <iostream>
#include <vector>

using namespace std;

#define MAX 5000001 //size of vector greater than this gave memory exceeded error
vector<long long unsigned int> DP; //going to store the values i calculate in here


//function to calculate the maximum possible no. of coins
long long unsigned int getMax(long long unsigned int x){
	
	if(x<MAX && DP[x]!=-1 ) return DP[x]; //base case
	
	/*trying to do a recursion from my understanding of the problem. There is a problem probably with this logic,hence the wrong answer */
	
	long long unsigned int sol=max(x , getMax(x/2) + getMax(x/3) + getMax(x/4));
	
	
	
	if(x<MAX)	//to avoid segmentation error
		DP[x]=sol;
	
	return sol;
}

int main()
{
	long long unsigned int test;
	DP.assign(MAX,-1);
	DP[1]=1;	
	DP[0]=0;
    while(cin>>test){
    	cout<<getMax(test)<<endl;
    }
    return 0;
}
