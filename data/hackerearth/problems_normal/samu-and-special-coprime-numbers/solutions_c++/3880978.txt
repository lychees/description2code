
#include<bits/stdc++.h>
using namespace std;
long long DP[20][200][1500];
int digits[20];
long long f2(int p,int soma,int somaq,bool check)
{
    if(p==-1)
        return __gcd(soma,somaq)==1;
    if(!check && DP[p][soma][somaq]!= -1)
        return DP[p][soma][somaq];
    long long ans = 0;
    int last;
    if(check){
        last=digits[p];
    }
    else{
        last=9;
    }
    for(int i=0;i<=last;i++)
    {
        ans+=f2(p-1,soma + i,somaq + i*i,check && i==last);
    }
    if(!check)
        DP[p][soma][somaq]=ans;
    return ans;
}
long long f1(long long n){
    if(!n)	return 0;
	int i;
    for(i=0; n; i++){
        digits[i]=n%10;
        n/=10;
    }
    long long ans=f2(i-1,0,0,1);
    return ans;
}
int main(){
    int t;
    long long l, r;
	memset(DP,-1,sizeof(DP));
    cin>>t;
    for(int inst=0; inst<t; inst++){
        cin>>l>>r;
        cout<<f1(r)-f1(l-1)<<"\n";
    }
    
}