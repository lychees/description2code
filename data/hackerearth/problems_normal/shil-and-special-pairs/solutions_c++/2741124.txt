#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long
#define fr first
#define se second
 
const int N = 1e5+5;
int tree[N];
int a[N];
int ans[N];
int pos[N];
pair< pii , int > Q[N];
inline void update(int idx) {
    while(idx<N) {
        tree[idx]+=1;
        idx+=idx&-idx;
    }
}
inline int query(int idx) {
    int ret = 0;
    while(idx>0) {
        ret+=tree[idx];
        idx-=idx&-idx;
    }
    return ret;
}
bool cmp(pair< pii,int > a, pair<pii,int> b) {
    return a.fr.se<b.fr.se;
}
int main() {
    int n,q,d;sci(n);sci(q);sci(d);
    F(i,1,n+1) {
        sci(a[i]);
        pos[a[i]]=i;
    }
    F(i,1,q+1) {
        sci(Q[i].fr.fr);
        sci(Q[i].fr.se);
        Q[i].se=i;
    }
    sort(Q+1,Q+q+1,cmp);
    int cnt=1;
    F(i,1,n+1) {
        for(int j=max(1,a[i]-d);j<=min(n,a[i]+d);j++) {
            if(pos[j]<=i) {
                update(pos[j]);
            }
        }
        while(cnt<=q && Q[cnt].fr.se==i) {
            ans[Q[cnt].se]=query(Q[cnt].fr.se)-query(Q[cnt].fr.fr-1);cnt++;
        }
    }
    F(i,1,q+1) printf("%d\n",ans[i]);
}