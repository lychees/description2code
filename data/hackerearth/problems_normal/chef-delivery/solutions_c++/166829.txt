#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int n,m;
int a[1002];
long long w[1002];
long long dp[1002][1002];

long long f(int idx, int used)
{
    if ( idx == n ) return 0;
    long long &ans = dp[idx][used];
    if ( ans != -1 ) return ans;
    ans = 0;
    if ( a[idx] >= (idx+1) ) ans = w[idx] + f(idx+1,used);
    else {
         ans = max(ans, f(idx+1,used));
         if ( used + (idx+1)-a[idx] <= m ) ans = max(ans, w[idx] + f(idx+1, used + idx+1 - a[idx]));
    }
    return ans;
}

int main()
{
    int t;
    cin >> t;
    while ( t-- ) {
          cin >> n >> m;
          memset(dp, -1, sizeof(dp));
          for ( int i = 0; i < n; i++ ) cin >> a[i];
          for ( int i = 0; i < n; i++ ) cin >> w[i];
          long long ans = f(0,0);
          cout << ans << endl;
    }
    return 0;
}
