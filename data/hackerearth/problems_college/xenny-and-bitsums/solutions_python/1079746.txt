#l=10**9 + 1
#vals = [0]*(10**9 + 1)
import math
'''
def bitcount(n):
	return bin(n).count("1")

def process():
	global vals,l
	
	for i in xrange(1,l):
		vals[i]=bitcount(i)+vals[i-1]
'''	
def F(n):
	if n<4:
		if n==0:
			return 0
		if n==1:
			return 1
		if n==2:
			return 2
		if n==3:
			return 4
	
	x=int(math.log(n,2))
	#F(n) = x*2x-1 + F(n-2x) + (n-2x+1)
	tmp = (2**x)
	return ( x*(tmp/2) + (n-tmp +1) + F(n-tmp))
	
		
	
	
	
def main():
	#global vals
	#process()
	for _ in xrange(int(raw_input())):
		a,b=[int(x) for x in raw_input().split()]
		print F(b)-F(a-1)
		
main()