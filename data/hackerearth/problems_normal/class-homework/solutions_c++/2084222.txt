#include<bits/stdc++.h>
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
#define scan(a) scanf("%d",&a)
#define scanl(a) scanf("%lld",&a)
#define print(a) printf("%d",a)
#define printl(a) printf("%lld",a)
#define fin(i,j,n) for(int i=j;i<n;i++)
#define f0n(i,n) fin(i,0,n)
#define MAX 1e+12
#define sz 25
#define mod 10
using namespace std;

typedef pair<int,int>pii;
typedef long long LL;

bool cmp(const pii &left,const pii &right)
{
	return left.second<right.second;
}
int gcd(int a,int b)
{
	if(b==0)
	{
		return a;
	}
	else
		return gcd(b,a%b);
}
string s;
LL dp[sz][sz];
void makedp(int l)
{
	f0n(i,l)
	{
		f0n(j,l)
		{
			dp[i][j]=-1;
		}
	}
	f0n(i,l)
		{
			dp[i][i]=s[i]-48;
			if(dp[i][i]!=0)
			{
				fin(j,i+1,l)
				{
					if(i+l-j<4)
					{
						break;
					}
					dp[i][j]=dp[i][j-1]*10+(s[j]-48);
					if(dp[i][j]>MAX)
					{
						dp[i][j]=-1;
						break;
					}
				}
			}
		}
	
		
}
LL solve(int in,int l,int part)
{
	LL ans=-1;
	if(part==1)
	{	
		ans=max(ans,dp[in][l-1]);
		//cout<<in<<" "<<l-1<<endl;
		return ans;
	}
	if(part==2)
	{
		fin(i,in,l-1)
		{
			if(dp[i+1][l-1]!=-1&&dp[in][i]!=-1)
			{
				ans=max(ans,dp[in][i]+dp[i+1][l-1]);
				//cout<<in<<" "<<i<<" "<<i+1<<" "<<l-1<<endl;
			}
		}
		return ans;
	}
	if(part==3)
	{
		fin(i,in+1,l-1)
		{
			//cout<<in<<" "<<i<<endl;
			LL d=-1;
			if(dp[in][i-1]!=-1)
					d=solve(i,l,2);
			if(d!=-1)
			{
				ans=max(ans,d+dp[in][i-1]);
				//cout<<d<<endl;
			}
		}
		return ans;
	}
	if(part==4)
	{
		fin(i,in+1,l-2)
		{
			//cout<<in<<" "<<i<<endl;
			LL d=-1;
			if(dp[in][i-1]!=-1)
					d=solve(i,l,3);
			//cout<<in<<" "<<d<<endl;
			if(d!=-1)
			{
				ans=max(ans,d+dp[in][i-1]);
				//cout<<ans<<endl;
			}
		}
		return ans;
	}
}
int main()
{
	int t;
	scan(t);
	while(t--)
	{
		//string s;
		cin>>s;
		int l=s.length();
		LL sum[l];
		sum[0]=s[0]-48;
		
		makedp(l);
		LL ans;
		int k=0;
		if(l<4)
		{
			cout<<"unlucky\n";
			continue;
		}
		while(s[k]=='0'&&k<l)
		{
			k++;
		}
		
		if(k>4)
		{
			ans=-1;
		}
		else if(k==l)
		{
			ans=0;
		}
		else if(k==4&&l>4)
		{
			ans=-1;
		}
		else
		{
			ans=solve(k,l,4-k);
		}
		if(ans>-1)
			cout<<ans<<endl;
		else
			cout<<"unlucky\n";
	}
}
