T = input()


def brokenInput():
    A = map(int, raw_input().strip().split())
    while len(A) < 3:
        A += map(int, raw_input().strip().split())
    return A


for _ in xrange(T):
    N, X, Y = brokenInput()
    effortRequired = 0
    initList = []
    finalList = []
    stacks = {}
    for __ in xrange(N):
        initH, finalH = map(int, raw_input().strip().split())

        if initH not in stacks:
            stacks[initH] = 1
        else:
            stacks[initH] += 1
            if stacks[initH] == 0:
                del stacks[initH]

        if finalH not in stacks:
            stacks[finalH] = -1
        else:
            stacks[finalH] += -1
            if stacks[finalH] == 0:
                del stacks[finalH]
    for size, num in stacks.iteritems():
        if num < 0:
            while num < 0:
                finalList.append(size)
                num += 1
        else:
            while num > 0:
                initList.append(size)
                num -= 1

    initList.sort()
    finalList.sort()
    for i in xrange(len(initList)):
        diff = finalList.pop() - initList.pop()
        if diff > 0:
            effortRequired += diff * X
        else:
            effortRequired += diff * -1 * Y
    print effortRequired
