#include <iostream>
#include <stdlib.h>
#include <algorithm>
using namespace std;

class Mask{
public:
	int bits;
	int value;
};

bool comp(Mask a, Mask b){
	if(a.bits == b.bits){
		return a.value < b.value;
	}
	return a.bits < b.bits;
}

int terms[500];

bool check(int i, int n){
	for(int j = 0; j < n; j++){
		if(!(i & terms[j])){
			return false;
		}
	}
	cout << __builtin_popcount(i) << endl;
	return true;
}

int main()
{
    int t,n,k;
    cin >> t;
    while(t--){
    	cin >> n >> k;
    	string s;
    	for(int i = 0; i < n; i++){
    		cin >> s;
    		terms[i] = 0;
    		for(int j = 0; j < k; j++){
    			terms[i] += (s[j] - '0')*(1<<j);
    		}
    	}
    	Mask a[1<<k];
    	for(int i = 0; i < 1<<k; i++){
    		a[i].bits = __builtin_popcount(i);
    		a[i].value = i;
    	}
    	sort(a, a + (1<<k), comp);
    	for(int i = 1; i < 1<<k; i++){
    		if(check(a[i].value, n)){
    			break;
    		}
    	}
    }
    return 0;
}
