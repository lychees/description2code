#include<iostream>
#include<queue>
#include<vector>
#include<utility>
#include<algorithm>
#include<map>
using namespace std;
typedef long long LL;
int main() {
  int q;
  cin >> q;
  map<int, int> container;
  int type, x;
  while (q--) {
    cin >> type;
    switch (type) {
      case 1:
      {
              cin >> x;
              container[x]++;
              break;
      }
      case 2:
      {
              cin >> x;
              if (container[x] > 0) {
                container[x]--;
                if (container[x] == 0) {
                  container.erase(x);
                }
              }
              else {
                container.erase(x);
                cout << -1 << endl;
              }
              break;
      }
      case 3:
      {
              if (container.empty()) {
                cout << -1 << endl;
              }
              else {
                map<int, int>::iterator it = container.end();
                it--;
                cout << it->first << endl;
              }
              break;

      }
      case 4:
      {
              if (container.empty()) {
                cout << -1 << endl;
              }
              else {
                map<int, int>::iterator it = container.begin();
                cout << it->first << endl;
              }
              break;
      }
      default:
      break;
    }

  }
  return 0;
}