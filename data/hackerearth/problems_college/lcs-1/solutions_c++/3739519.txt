#include <bits/stdc++.h>
using namespace std;
 
#define INF 1000000007
 
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vector<int> > vvi;
typedef pair<int,int> ii;
typedef vector<pair<int,int> > vii;
typedef vector<vector<pair<int,int> > > vvii;
 
#define all(x) (x).begin(), (x).end()
#define nall(x) (x).rbegin(), (x).rend()
#define tr(x,it) for(auto it = (x).begin();it!=(x).end();++it)
#define ntr(x,it) for(auto it = (x).rbegin();it!=(x).rend();++it)
#define sz(a) int((a).size()) 
#define pb push_back 
#define PB pop_back
#define pf push_front
#define PF pop_front
#define MP make_pair
#define clr clear
#define rz resize
#define mset(a,b) memset(a,b,sizeof(a))
#define ia(a,n) FOR(i,0,n-1)cin>>a[i]
#define ia1(a,n) FOR(i,1,n)cin>>a[i]
#define fpresent(c,x) ((c).find(x) != (c).end())  // set,map
#define present(c,x) (find(all(c),x) != (c).end())  //vector
#define F first
#define S second
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define NFOR(i,a,b) for(int i=a;i>=b;--i)
#define rep(i,n) FOR(i,0,n-1)
#define TCASE int __T;cin>>__T;FOR(Tc,1,__T)
inline int add(int a,int b, int m=INF){a+=b;if(a>=m)a-=m;return a;}
inline int mul(int a,int b, int m=INF){return (int)(((ll)a*(ll)b)%m);}
inline int norm(int x,int m=INF){if(x>=m)x%=m;if(x<0)x+=m;return x;}
inline int neg(int x,int m=INF){x=-x;return norm(x);}

/// debug //////
#define pr(x,n) {rep(i,n)cout<<x[i]<<" ";cout<<endl;}
#define pr1(x,n) {FOR(i,1,n)cout<<x[i]<<" ";cout<<endl;}
#define DB(x)              cout<<__LINE__<<" :: "<<#x<< ": "<<x<<endl;
#define DB2(x, y)          cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<endl;
#define DB3(x, y, z)       cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<" | "<<#z<<": "<<z<<endl;

 string s;
 vi v(500005);

struct SuffixArray {
  const int L;
  string s;
  vector<vector<int> > P;
  vector<pair<pair<int,int>,int> > M;
 
  SuffixArray(const string &s) : L(s.length()), s(s), P(1, vector<int>(L, 0)), M(L) {
    for (int i = 0; i < L; i++) P[0][i] = int(s[i]);
    for (int skip = 1, level = 1; skip < L; skip *= 2, level++) {
      P.push_back(vector<int>(L, 0));
      for (int i = 0; i < L; i++) 
  M[i] = make_pair(make_pair(P[level-1][i], i + skip < L ? P[level-1][i + skip] : -1000), i);
      sort(M.begin(), M.end());
      for (int i = 0; i < L; i++) 
  P[level][M[i].second] = (i > 0 && M[i].first == M[i-1].first) ? P[level][M[i-1].second] : i;
    }    
  }
 
  vector<int> GetSuffixArray() { return P.back(); }
 
  // returns the length of the longest common prefix of s[i...L-1] and s[j...L-1]
  int LongestCommonPrefix(int i, int j) {
    int len = 0;
    if (i == j) return L - i;
    for (int k = P.size() - 1; k >= 0 && i < L && j < L; k--) {
      if (P[k][i] == P[k][j]) {
      i += 1 << k;
      j += 1 << k;
      len += 1 << k;
      }
    }
    return len;
  }
 
 vector<int> getlcp()
 {
    vi sa=P.back();
    vi temp(L);
    rep(i,s.size())temp[sa[i]]=i;
    sa=temp;
    vi x(L-1);
    FOR(i,0,L-2)x[i]=LongestCommonPrefix(sa[i],sa[i+1]);
    return x;
 }
  void prt()
  {
    vi sa=P.back();
    vi temp=sa;
    rep(i,s.size())temp[sa[i]]=i;
    sa=temp;
    FOR(i,0,L-1)
    {
        cout<<sa[i]<<" : ";
      cout<<LongestCommonPrefix(sa[i],sa[i+1])<<" ";
      FOR(j,sa[i],L-1)cout<<s[j];cout<<endl;
    }
  }
 
};

vi b;
int dp[20][5*100000 + 10];
inline int rmq(int l, int r)
{
   // cout<<l<<" "<<r<<endl;
    int j=log(r-l+1.0)/log(2.0);
    return b[dp[j][l]] < b[dp[j][r-(1<<j)+1]] ? dp[j][l] : dp[j][r-(1<<j)+1];
}
void pre(vi &a,int n)
{
    FOR(i,0,n-1)    dp[0][i]=i;
    for(int j=1;(1<<j)<=n;++j){
        for(int i=0; i+ (1<<j)<=n; ++i){
            dp[j][i]= dp[j-1][i];
            if((a[dp[j-1][i]] > a[dp[j-1][i+(1<<(j-1))]]))
                dp[j][i]= dp[j-1][i + (1<<(j-1))];
        }
    }
}   

vi f(5*100000+ 10);
int summ[500000+10];
int main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    int n;
    cin>>n;
    int len=0;
    rep(i,n)
    {
        string b;
        cin>>b;
        s+=b+"#";
        len+=b.size()+1;
    }
   // cout<<s<<endl;
   // cout<<len<<endl;
    int q;
    int total=len;
    cin>>q;
    int ctr=0;
    rep(i,q)
    {
        string b;
        cin>>b;
        FOR(j,ctr,ctr+b.size()-1)
        v[j]=i+1;
        
        ctr+=b.size()+1;
        total+=b.size()+1;
        s+=b+"#";
    }

   // cout<<s<<endl;
    SuffixArray sa(s);

    vi a=sa.GetSuffixArray();
     b=sa.getlcp();
    vi temp(a.size());
    rep(i,s.size())temp[a[i]]=i;
    // sa.prt();
    //pr(v,a.size() - len );

    // rep(i,a.size() - len)cout<<v[i]<<" ";cout<<endl;
    int idx=0;
    // pr(temp,a.size());
    
    
    NFOR(i,s.length()-1,0)
    {
        if(s[i]=='#')summ[i]=i;
        else summ[i]=summ[i+1];
    }
    FOR(i,0,b.size()-1){
        int x= temp[i];
        int y= temp[i+1];
        if(x>y)swap(x,y);
        b[i]=min(b[i],summ[x]-x);
    }
    pre(b,b.size());

    // FOR(i,0,b.size()-1){
    //     cout<<i<<" : "<<b[i]<<"\n";
    // }
    FOR(i,1,a.size()-1)
    {
        int id=temp[i];
       // cout<<id<<endl;
        if(id < len )idx=i;
        else
        {
            if(idx==0)continue;
            int query=v[id - len];
            int ans=rmq(idx,i-1);
            // if(query==2)
             // cout<<i<<" "<<id<<" "<<query<<" "<<idx<<" "<<b[ans]<<endl;
            f[query]=max(f[query],b[ans]);
        }
    }
    
    
     idx=-1;
    NFOR(i,a.size()-1,1)
    {
        int id=temp[i];
        if(id < len)idx=i-1;
        else{
            if(idx==-1)continue;
            int query=v[id - len];
            int ans=rmq(i,idx); 
            f[query]=max(f[query],b[ans]);

        }
    }
    FOR(i,1,q)cout<<f[i]<<"\n";
    
    return 0;
}
 