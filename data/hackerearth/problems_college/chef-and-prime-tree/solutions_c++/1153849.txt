#include<algorithm>
#include<iostream>
#include<string.h>
#include<stdlib.h>
#include<stdio.h>
#include<vector>
#include<math.h>
#include<queue>
#include<stack>
#include<set>
#include<map>
using namespace std;
typedef long long ll;
typedef pair< int,int > pi;
#define mod 1000000007
ll get_bits(ll x) 
{
  ll high = 31;
  ll low = 0,mid;
  while(high>=low) 
  {
    mid = (high+low)/2;
    if(1<<mid==x)
      return mid+1;
    if(1<<mid<x) {
      low = mid+1;
    }
    else {
      high = mid-1;
    }
  }
  if(1<<mid>x)
    return mid;
  return mid+1;
}

ll ca(ll x,ll y) {

  ll xbits = get_bits(x);
  ll ybits = get_bits(y);
  ll diff,kbits;
  ll k;
  if(xbits>ybits) {
    diff = xbits-ybits;
    x = x >> diff;
  }
  else if(xbits<ybits) {
    diff = ybits-xbits;
    y = y >> diff;
  }
  k = x^y;
  kbits = get_bits(k);
  return y>>kbits;  
}
bool isprime(ll n)
{
	if(n == 1) return false;
	bool flag = true;
	for(ll i = 2; i <= sqrt(n); i++)
	{
		if(n % i == 0)
		{
			flag = false;
			break;
		}
	}
	return flag;
}
int main()
{
	int t;
	scanf("%d", &t);
	while(t--)
	{
		ll x, y;
		scanf("%lld %lld",&x, &y);
		ll ans = ca(x, y);
		ll sum1, sum2;
		sum1 = sum2 = 0;
		while(x != ans)
		{
			if(x > 1 && isprime(x))
				sum1 -= x;
			else
				sum1 += x;
			x /= 2;
		}
		while(y != ans)
		{
			if(y > 1 && isprime(y))
				sum2 -= y;
			else
				sum2 += y;
			y /= 2;
		}
		if(isprime(ans))
			sum1 -= ans;
		else
			sum1 += ans;
		printf("%lld\n", sum1 + sum2);
	}
	return 0;
}
