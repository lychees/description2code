#include <functional>
#include <algorithm>
#include <iostream>
#include <numeric>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <ctime>
#include <queue>
#include <set>
#include <map>
using namespace std;
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, b, e) for (int i = (int)(b); i <= (int)(e); ++i)
#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef long long i64;
typedef unsigned long long u64;
const int inf = 1e9+100500;
typedef long double ld;

const int maxn = 1050;

bool eq(ld x, ld y) { return fabsl(x-y) < 1e-9; }

int n;
ld x[maxn], y[maxn];

ld best = inf;

ld f(ld a, ld b) {
    assert(eq(a*a + b*b, 1));
    ld mn = inf, mx = -inf;
    forn(i, n) {
        ld t = x[i] * a + y[i] * b;
        mx = max(mx, t);
        mn = min(mn, t);
    }
    return mx - mn;
}

ld f(ld alpha) {
    ld a = cosl(alpha);
    ld b = sinl(alpha);
    ld f1 = f(a, b);
    ld f2 = f(-b, a);
    ld nb = max(f1, f2);
    if (nb < best) {
        best = nb;
//         cerr << f1-f2 << endl;
//         cerr << "ang = " << alpha << endl;
    }
    return nb;
}

void solve() {
    cin >> n;
    forn(i, n) cin >> x[i] >> y[i];

//     f(0);
//     f(M_PI/2);
//     f(0.1);

    int K = 98;
    forn(i, K + 2) {
        ld l = M_PI / 2 / K * i;
        ld r = l + M_PI / K;
        forn(i, 150) {
            ld m1 = (l * 21 + r * 20) / 41;
            ld m2 = (l * 20 + r * 21) / 41;
            if (f(m1) < f(m2)) r = m2;
            else l = m1;
        }
    }

    cout.precision(4);
    cout << fixed << best << endl;
}

int main() {
#ifdef HOME
    freopen("input.txt", "r", stdin);
#endif

    solve();

#ifdef HOME
    cerr << "Time elapsed: " << clock() / 1000 << " ms" << endl;
#endif
    return 0;
}
