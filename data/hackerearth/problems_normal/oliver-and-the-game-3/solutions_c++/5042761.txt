using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),in.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
//ifstream in("input.txt");
//ofstream out("output.txt");
void solve();
int main()
{
  int t=1;
 // cin>>t;
  rep(i,1,t)
  {
    solve();
  }
  return 0;
}
vector<int> g[mx];
bool vis[mx];
int in[mx],out[mx];
int ct;
void dfs(int u)
{
	vis[u]=true;
	in[u]=ct;
	ct++;
	for(int i=0;i<g[u].size();i++)
	{
		int w=g[u][i];
		if(!vis[w])
			dfs(w);
	}
	out[u]=ct;
	ct++;
}
bool is(int x,int y)
{
	return (in[x]<in[y] && out[x]>out[y]);
}
void solve()
{
   int n,i,j,x,y,w;
   cin>>n;
   rep(i,2,n)
   {
   	 cin>>x>>y;
     g[x].pb(y);
   }
   dfs(1);
   cin>>i;
   while(i--)
   {
   	 cin>>j>>x>>y;
   	 if(!j)
   	 {
        if(is(x,y))
        	cout<<"YES\n";
        else
        	cout<<"NO\n";
   	 }
   	 else
   	 {
   	 	if(is(y,x))
        	cout<<"YES\n";
        else
        	cout<<"NO\n";
   	 } 	

   }

}



























