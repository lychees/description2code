#include <iostream>
#include <vector>
#include <utility>
using namespace std;

long int gcd(long int r0, long int r1){
	long int temp;
	if(r0 < 0)
		r0 *= -1;
	if(r1 < 0)
		r1 *= -1;
	while(r1){
		temp = r1;
		r1 = r0 % r1;
		r0 = temp;
	}
	return r0;
}

long long int calcArea(vector<pair<long int, long int>> points){
	long long int area = 0;
	long int n = points.size();
	for(long int i = 0; i < n; i++)
		area += (points[i].first + points[(i + 1) % n].first) * (points[i].second - points[(i + 1) % n].second);
	if(area < 0)
		area *= -1;
	//cout << "area =" << area / 2 << endl;
	return area / 2;
}

long long int borderPoints(vector<pair<long int, long int>> points){
	long long int bp = 0;
	long int n = points.size();
	for(long int i = 0; i < n; i++){
		bp += gcd((points[i].first - points[(i + 1) % n].first), (points[i].second - points[(i + 1) % n].second) ) + 1;
	}
	bp -= n;
	//cout << "size=" << n << endl;
	//cout << "border points=" << bp << endl;
	return bp;
}

int main()
{
    int n;
    cin >> n;
    long int x, y;
    vector<pair<long int, long int>> points;
    while(n--){
    	cin >> x >> y;
    	points.push_back(make_pair(x, y));
    }
    cout << calcArea(points) + 1 - borderPoints(points) / 2<< endl;
    return 0;
}
