#include<bits/stdc++.h>
using namespace std;
const int mod = 1e9 + 7;
const int nax = 1e6 + 5;
int t[nax], dp[nax];
int main() {
	int n, k, high;
	scanf("%d%d%d", &n, &k, &high);
	while(n--) {
		int a;
		scanf("%d", &a);
		++t[a];
	}
	dp[0] = 1;
	for(int i = 1; i <= k; ++i) if(t[i]) {
		// power_of_two = 2^t[i] - 1
		int power_of_two = 1;
		for(int j = 0; j < t[i]; ++j)
			power_of_two = 2 * power_of_two % mod;
		--power_of_two;
		for(int j = high; j >= 1; --j)
			dp[j] = (dp[j] + (long long) dp[j-1] * power_of_two) % mod;
	}
	int ans = 0;
	for(int i = 0; i <= high; ++i) ans = (ans + dp[i]) % mod;
	printf("%d\n", ans);
	return 0;
}