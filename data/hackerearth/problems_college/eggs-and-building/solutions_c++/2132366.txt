# include <stdio.h>
# include <limits.h>
 #include<iostream>
 #include<vector>
 #include<stdlib.h>
 using namespace std;
// A utility function to get maximum of two integers
int max(int a, int b) { return (a > b)? a: b; }
 struct eggs
 {
 	int n;
 	int k;
 };

int eggDrop(int n, int k)
{
    
    int eggFloor[n+1][k+1];
    int res;
    int i, j, x;
 
    for (i = 1; i <= n; i++)
    {
        eggFloor[i][1] = 1;
        eggFloor[i][0] = 0;
    }
 

    for (j = 1; j <= k; j++)
        eggFloor[1][j] = j;
 
    
    for (i = 2; i <= n; i++)
    {
        for (j = 2; j <= k; j++)
        {
            eggFloor[i][j] = INT_MAX;
            for (x = 1; x <= j; x++)
            {
                res = 1 + max(eggFloor[i-1][x-1], eggFloor[i][j-x]);
                if (res < eggFloor[i][j])
                    eggFloor[i][j] = res;
            }
        }
    }
 
    
    return eggFloor[n][k];
}
 
/* Driver program to test to pront printDups*/
int main()
{
   int T,n,k,s;
  cin>>T;
    vector<int> b(T);
    
    int *c,*d;
    c=(int*)malloc(T*sizeof(int));
	   d=(int*)malloc(T*sizeof(int));
    struct eggs e;
   for(int i=0;i<T;i++)
    {
    cin>>n>>k;
	c[i]=n;
	d[i]=k;

}
  /* for(int i=0;i<T;i++)
    {
    	
    	cout<<c[i]<<"\t"<<d[i];
	}*/
	for(int i=0;i<T;i++)
    {
	s=eggDrop(d[i],c[i]);cout<<s<<"\n";
	
	}
   //cout<<	eggDrop(2,10);
	/*for(int i=0;i<T;i++)
    {
    	
    	cout<<b[i]<<"\n";
	}*/
    
    return 0;
}
