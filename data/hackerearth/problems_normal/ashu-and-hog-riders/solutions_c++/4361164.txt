#include <iostream>
#include <cstring>
#include <cstdio>
#include <queue>
using namespace std;
#define MAX 1010 
int A[MAX][MAX], n, ans[MAX][MAX];
pair<int, int> s;
bool F[MAX][MAX];
int _x[] = {0, 0, -1, 1};
int _y[] = {1, -1, 0, 0};

int solve()
{
	int mx = 0, cnt = 0;
	queue<pair<int, int> > q;
	memset(ans, 0, sizeof(ans));
	memset(F, true, sizeof(F));
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (F[i][j] == true) {
				cnt = 0;
				if (A[i][j] == 1)
				 cnt = 1;
				q.push(make_pair(i, j));
				F[i][j] = false;
				while (q.size()) {
					pair<int, int> u = q.front();
					q.pop();
					for (int k = 0; k < 4; k++) {
						int x = u.first + _x[k];
						int y = u.second + _y[k];
						if (x >= 0 && x < n && y >= 0 && y < n 
						&& F[x][y] == true && A[x][y] == 1) {
							F[x][y] = false;
							cnt++;
							q.push(make_pair(x, y));
						}
					}
				}
				if (cnt > mx)
					mx = cnt;
			}
		}
	}
	
	return mx;
}

int main()
{
	s.first = s.second = -1;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			scanf("%d", &A[i][j]);
		}	
	}
	printf("%d", solve());
    return 0;
}
