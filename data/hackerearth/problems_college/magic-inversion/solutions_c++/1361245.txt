#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll N = 1024*1024;
const ll INF = 1000000000;
const ll md =1000*1000*1000+7;
ll n,ans,x,y,pas,a[N],b[N],t[2*N],t1[2*N],v[N];
void upd(ll v,ll tl,ll tr,ll l,ll r,ll up)
{
    if (l>r)
        return ;
    if (l==tl && r==tr)
    {
        t1[v]+=up;
        return;
    }
    ll tm=(tl+tr)>>1;
    upd(v*2,tl,tm,l,min(tm,r),up);
    upd(v*2+1,tm+1,tr,max(tm+1,l),r,up);
}
ll get(ll v)
{
    ll ans1=t[v];
    while (v)
    {
        ans1+=t1[v];
        v/=2;
    }
    return ans1;
}
int main()
{
  //freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
    scanf("%lld",&n);
    for (int i=1;i<=n;i++)
        scanf("%lld",&a[i]);
    for (int i=1;i<=n;i++)
        scanf("%lld",&b[i]),v[b[i]]++;
    for (int i=1;i<N;i++)
        t[i+N-1]=t[i+N-2]+v[i];
    for (int i=n-1;i>=1;i--)
        t[i]=t[i*2]+t[i*2+1];
    for (int i=1;i<n;i++)
    {
        upd(1,1,N,b[i],N,-1);
        ans+=get(a[i]-1+N-1);
    }
    for (int i=2;i*i<=ans;i++)
    if (ans%i==0){
            puts("SIMPLE INVERSION");
            return 0;
    }
    if (ans==1)
        puts("SIMPLE INVERSION");
    else
        puts("MAGIC INVERSION");
return 0;
}
