#include <bits/stdc++.h>
#include <string>

using namespace std;

typedef long long LL;
typedef pair<int,int> pii;

#define vi vector<int>
#define vs vector<string>
#define vpii vector<pii>
#define all(v) v.begin(), v.end()

#define fr freopen("input.in","r",stdin)
#define fw freopen("output.out","w",stdout)

#define forup(i,a,b) for(int i=(a); i<(b); ++i)
#define fordn(i,a,b) for(int i=(a); i>(b); --i)
#define rep(i,a) for(int i=0; i<(a); ++i)

#define gi(x) scanf("%d",&x)
#define gl(x) cin >> x
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf(" %s",x)

#define F first
#define S second

#define pb push_back
#define pf push_front
#define mp make_pair

const int inf = numeric_limits<int>::max();
const LL linf = numeric_limits<LL>::max();

LL fib[1000];
int idx;

LL bsearch(LL l, LL r, LL n){
	LL mid;
	while(r-l > 1){
		mid = (l+r)>>1;
		int pos = upper_bound(fib, fib + idx, mid) - fib;
		if(mid-pos >= n){
			r = mid;
		} else {
			l = mid;
		}
	}
	return r;
}

int main(){
	//fr;
	fib[1] = 1;
	fib[2] = 2;
	idx = 3;
	while(1){
		fib[idx] = fib[idx-1] + fib[idx-2];
		if(fib[idx] > 1000000000000000LL){
			break;
		}
		++idx;
	}
	++idx;
	int test;
	LL n;
	gi(test);
	while(test--){
		gl(n);
		--n;
		LL ans = bsearch(0,10000000000000000LL,n);
		cout << ans << "\n";
	}
	return 0;
}