#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

#define input(x) scanf("%d", &x)
#define input_l(x) scanf("%lld", &x)
#define print(a) printf("%d",a)
#define print_l(a) printf("%lld",a)
#define sp   printf(" ")
#define nl   printf("\n")

#define max(a,b) a>b?a:b
#define min(a,b) a>b?b:a

#define LL long long int

int power(int a, int b)
{
	if(!b)return 1;
	if(b==1)return a;
	int tmp=power(a,b/2);
	if(b%2)return a*tmp*tmp;
	return tmp*tmp;
}

inline void slli(long long int* x)
{
	register char c = getchar_unlocked();
	*x = 0;
	int neg = 0;
	for(; ((c<48 || c>57) && c != '-');c = getchar_unlocked());
	if(c=='-') {
        neg = 1;
        c = getchar_unlocked();
    }
	for(; (c>47)&&(c<58);c = getchar_unlocked())
		*x = (long long int)((((*x)<<1) + ((*x)<<3)) + c - 48);
    if(neg)
        *x = -*x;
}
inline void plli(long long int a)
{
    char snum[20];
    int i=0;
    char sign='+';
    if(a<0)
    {
        sign='-';
        a*=-1;
    }
    do
    {
        snum[i++]=a%10+48;
        a=a/10;
    }while(a!=0);
    i=i-1;
    if(sign=='-')
        putchar_unlocked(sign);
    while(i>=0)
    putchar_unlocked(snum[i--]);
    putchar_unlocked(' ');
}
int arr[1000000];
inline void solve()
{
	while(1)
	{
		long long int n,p,d;
		slli(&n); 
		if(n==0) break;
		for(int i=0;i<n;i++) {slli(&p);arr[p] += 1;}
		for(long long int i=0;i<1000000;i++)
		{
			d = arr[i];
			while(d--) plli(i);
			arr[i] = 0;
		}
		cout<<endl;
		
		
	}
}

int main() 
{
	solve();
	return 0;
}
