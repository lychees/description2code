#include <bits/stdc++.h>

using namespace std;

int good [24 + 1][60 + 1][60 + 1];
int bad [24 + 1][60 + 1][60 + 1];

bool vis [60 + 10];
int pri [24 + 10];
int siz = 0;

int N = 60;

void sieve(){

    for(long long i = 2; i * i <= N; i++){
        if(!vis[i]){
            for( long long j = i * i; j <= N; j+= i){
                vis[j] = true;
            }
        }
    }
    for(int i = 2; i <= N; i++){
        if(!vis[i]) pri[siz++] = i;
    }

}


int main()
{
    //ios::sync_with_stdio(false);cin.tie(0);

    int hours, minutes, seconds;
    int nice = 0, teriible = 0;

    sieve();

    for(int i = 23; i >= 0; i--){

        for(int j = 59; j >= 0; j--){

            for(int k = 59; k >= 0; k--){

                bool found = false;
                good[i][j][k] = nice;
                bad[i][j][k] = teriible;

                for(int h = 0; h < siz; h++){
                    if(i % pri[h] == 0 && j % pri[h] == 0 && k % pri[h] == 0){
                        bad[i][j][k]++;
                        teriible++;
                        found = true;
                        break;
                    }
                }

                if(!found){

                    good[i][j][k]++;
                    nice++;
                }
            }
        }
    }

    int t;

    cin >> t ;

    while(t--){

        cin >> hours >> minutes >> seconds;

        int badly = bad[hours][minutes][seconds];
        int nicly = good[hours][minutes][seconds];

        if(badly && nicly){

            int gcd = __gcd(badly, nicly);

            badly /= gcd;
            nicly /= gcd;

        }

        cout << badly << ":" << nicly << "\n";
    }


    return 0;
}
