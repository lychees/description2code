#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <unordered_set>
#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vl;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}



template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
// const ll mod=INFL;
ll powx ( ll b,int e ) {
    ll res=1;
    while ( e>0 ) {
        if ( e&1 )
            res=res*b;
        b=b*b;
        e/=2;

    }
    return res;
}
const int MAX=173;
  
int find2 ( const string &s, int p ) {
    if ( p>=s.size() ) return false;
//     cout<<"checking p="<<p<<endl;
//  hashes.clear();
     unordered_set<ll  >hashes(4*s.size());
    ll h=0;
    ll powp= powx ( MAX,p-1 );
    rep ( i,p ) {
        h= ( h*MAX+s[i] );
    }
    hashes.insert ( h );
    reu ( i,p, s.size() ) {
        h-=powp *s[i-p];
//         h%=mod;
        h=h*MAX+s[i];
//         h%=mod;
        if ( hashes.find ( h )!=hashes.end() ) return true;
        hashes.insert ( h );
//         cout<<vi ( hashes.begin(),hashes.end() );


    }
    return false;
}

int main() {
    ios_base::sync_with_stdio ( false );
    string s;
    cin>>s;
    int b=1;
    int e=s.size();
    while ( e-b>1 ) {
//          cout<<"range: "<<e<<" "<<b<<endl;
        int sm= ( b+e ) /2;
        if ( find2 ( s,sm ) ) {
            b=sm;
        } else e=sm;

    }
    cout<<b<<endl;
}
