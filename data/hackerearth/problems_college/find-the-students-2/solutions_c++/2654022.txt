#define all(c) c.begin(),c.end()  // c is here any container , for begin and end iterator.
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<vector>
#include<algorithm>
#define fori(t,i) for(int i=0;i<t;i++)
#include<set>
#include<map>
#include<cstring>
#define present(container,element)  (container.find(element)!=container.end())                        // for set and map.
#define cpresent(container,element) (find(all(container),element)!=container.end())                   // for vector generally.
#define tr(container,it) \
                        for(map<string,int>::iterator it = container.begin();it!=container.end();it++)
                        

#define tri(container,it) \
                        for(set<int> ::reverse_iterator it = container.rbegin();it!=container.rend();it++)


#define trr(container,it) \
                        for(vector<int> ::iterator it = container.begin();it!=container.end();it++)                      

#include<math.h>

using namespace std;

int main(){
	
	string str;
	int t,n,m;
	cin >>t;
	vector<int> vec;
	int temp;
	
			fori(t,i){
			
			cin >> temp;
			vec.push_back(temp);
		}
		
	
		//	cout << "\n";
			while(vec.size()!=0){
				cout << vec.size()<< endl;
			int min=*min_element(vec.begin(),vec.begin()+vec.size());
			//cout << min << endl;
			
			
			trr(vec,it){
				*it=*it-min;
			}
			vector<int> vec2;
			
				trr(vec,it){
				if(*it!=0)
					vec2.push_back(*it);
			}
			vec=vec2;
			
		}
			
		//cout << "hello";

	
	
	return 0;	
}