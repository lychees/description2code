#include <bits/stdc++.h>
using namespace std;
#define fr(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (int i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (int i = (n) - 1; i >= 0; i--)
#define foreach(it, ar) for ( typeof(ar.begin()) it = ar.begin(); it != ar.end(); it++ )
#define fill(ar, val) memset(ar, val, sizeof(ar))
#define uint64 unsigned long long
#define int64 long long
#define all(ar) ar.begin(), ar.end()
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;
typedef vector<int> vi;
#define PI  3.1415926535897932385
#define EPS 1e-7
#define MOD 1000000007
#define INF 1500111222
#define MAX 1011
int n, m;
double p[MAX][MAX], f[MAX][MAX];
double solve() {
	fill(f, 0);
	f[1][1] = 1.0;
	fr(i, 1, n) fr(j, 1, m) {
		if (i == 1 && j == 1) continue;
		double p1 = 0, p2 = 0;
		if (j <= m) p1 = f[i - 1][j] * (1.0 - p[i - 1][j]);
		if (i <= n) p2 = f[i][j - 1] * (p[i][j - 1]);
		f[i][j] = p1 + p2;
	}
	double res = 0;
	fr(i, 1, n) res += (i + m - 1) * f[i][m] * p[i][m];
	fr(j, 1, m) res += (j + n - 1) * f[n][j] * (1.0 - p[n][j]);
	return res;
}
int main() {
	#ifndef ONLINE_JUDGE
	    freopen("test.inp", "r", stdin);
	    //freopen("test.out", "w", stdout);
	#endif
	int cases;
	scanf("%d", &cases);
	assert(1 <= cases && cases <= 3);
	while (cases--) {
		scanf("%d %d", &n, &m);
		assert(1 <= n && n <= 1000);
		assert(1 <= m && m <= 1000);
		fill(p, 0);
		fr(i, 1, n) fr(j, 1, m) {
			scanf("%lf", &p[i][j]);
			assert(0.0 <= p[i][j] && p[i][j] <= 1.0);
		}
		double res = solve();
		printf("%.6lf\n", res);
	}
	return 0;
}