#include <bits/stdc++.h>
#define lli long long int
#define M 1000000007

using namespace std;

void swap(int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}

void subset(int A[], int n) {
    int cnt[n];

    for (int i = 0; i < n; i++) {
        cnt[i] = 1;
    }
    sort(A, A + n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < i; j++) {
            if (A[i] % A[j] == 0 && cnt[j] + 1 > cnt[i]) {
                //cout << A[i] << "  " << A[j] << endl;
                cnt[i] = cnt[j] + 1;
            }
        }
    }
    int mx = 1;
    for (int i = 0; i < n; i++) {
        if (mx < cnt[i]) {
            mx = cnt[i];
        }
    }
    if (mx < 2) {
        cout << "-1\n";
        return;
    }
    cout << mx << endl;
}

void max_diff(int A[], int n) {
    sort(A, A + n);
    int B1[n], B2[n];
    int i = 0, j = n - 1, k = 0;
    while (i <= j) {
        B1[k++] = A[j--];
        if (i <= j) {
            B1[k++] = A[i++];
        }
    }
    i = 0, j = n - 1, k = 0;

    while (i <= j) {
        B2[k++] = A[i++];
        if (i <= j) {
            B2[k++] = A[j--];
        }
    }
    int sum1 = 0, sum2 = 0;
    for (i = 0; i < n - 1; i++) {
        //cout << B[i] << " ";
        sum1 += abs(B1[i] - B1[i + 1]);
        sum2 += abs(B2[i] - B2[i + 1]);
    }
    cout << max(sum1, sum2) << endl;
}

int main()
{
    long long int a, b, t, n, x, m, k;
    int A[100001], A1[100001], C[4][4];

    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> A[i];
    }
    max_diff(A, n);

    //count_div(A, n);

    return 0;
}
