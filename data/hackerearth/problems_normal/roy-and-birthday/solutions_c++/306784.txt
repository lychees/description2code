#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <limits>
#include<stack>
#include<queue>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
using namespace std;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n)  for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)    a.begin(),a.end()
#define si(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define LL long long
#define MOD 1000000007
#define MAXN 1000007

LL fct[MAXN],ifct[MAXN];

LL fastpow(LL a,LL b)
{
    LL ans=1;
    while(b)
    {
        if(b&1)
            ans=(ans*a)%MOD;
        a=(a*a)%MOD;
        b>>=1;
    }
    return (LL)ans;
}

void fact()
{
    fct[0]=1;
    ifct[0]=1;
    fct[1]=1;
    ifct[1]=1;
    LL i=2;
    while(i<1000005)
    {
        fct[i]=(fct[i-1]*i)%MOD;
        ifct[i]=fastpow(fct[i],MOD-2);
        i++;
    }
}
int main()
{
    int T;
    fact();
    si(T);
    while(T--)
    {
        string st;
        int ar[5]={},arr[27]={},vow=0,con=0;
        cin>>st;
        rep(i,st.sz)
        {
            if(st[i]=='a')
                ar[0]++;
            else if(st[i]=='e')
                ar[1]++;
            else if(st[i]=='i')
                ar[2]++;
            else if(st[i]=='o')
                ar[3]++;
            else if(st[i]=='u')
                ar[4]++;
            else
                arr[st[i]-'a']++;
            if(st[i]=='a'||st[i]=='e'||st[i]=='i'||st[i]=='o'||st[i]=='u')
                vow++;
            else
                con++;
        }
        if(vow>con+1)
            cout<<"-1\n";
        else
        {
            LL vt=fct[vow];
            rep(j,5)
            {
                vt=(vt*ifct[ar[j]])%MOD;
            }
            vt=(vt*fct[con])%MOD;
            rep(j,26)
                vt=(vt*ifct[arr[j]])%MOD;
            LL comb=(((fct[con+1]*ifct[vow])%MOD)*ifct[con+1-vow])%MOD;
            cout<<(vt*comb)%MOD<<endl;
        }
    }
    return 0;
}
