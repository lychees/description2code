#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair

#define cin(x)     scanf("%d",&x)

#define FOR(i,a,b)      for(int i=(int)(a);i<(int)(b);i++)
#define RFOR(i,a,b)     for(int i=(int)(b)-1;i>=(int)(a);i--)

#define MOD       1000000007
#define EPS       1E-10

#define PI  acos(-1)

#define CASE(x)   cout << "Case #" << x << ": ";

vector<int> arr;

int dp[1010][1010];

int solve(int cLeft , int currBasket)
{
	if(cLeft < 0) return INT_MIN;
	if(!cLeft) return 0;
	else if(currBasket == sz(arr)) return INT_MIN;
	else if(dp[cLeft][currBasket] != -1) return dp[cLeft][currBasket];
	int ret = solve(cLeft , currBasket + 1);
	ret = max(ret , solve(cLeft - currBasket - 1 , currBasket) + arr[currBasket]);
	return (dp[cLeft][currBasket] = ret);
}

int main()
{
	inp_s;
	DRT()
	{
		FOR(i,0,1010) FOR(j,0,1010) dp[i][j] = -1;
		int n,x;
		cin >> n >> x;
		clr(arr);
		arr.resize(n);
		FOR(i,0,n) cin >> arr[i];
		FOR(i,0,n) arr[i] -= x;
		cout << solve(n , 0) << endl;
	}
	return 0;
}