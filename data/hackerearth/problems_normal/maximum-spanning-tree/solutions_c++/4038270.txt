#include<stdio.h>
#include<stdlib.h>
#include<algorithm>
#include<utility>

using namespace std;

pair <long long int, pair<int, int> > aresta[100010];

int pai[100010];
int artot, lig;
int root(int i){
    int x=i;
    while(pai[i]!=i)
        i=pai[pai[i]];
    pai[x]=i;
    return i;
}

void unir(int x, int y){
    pai[root(x)]=pai[root(y)];
}

long long int kruskal(){
    int x, y;
    long long int cost=0;
    long long int mini=0;

    for(int i=lig-1;i>=0;i--){
        x=aresta[i].second.first;
        y=aresta[i].second.second;
        cost=aresta[i].first;
      //  printf("%d %d\n", root(x), root(y));
        if(root(x)!=root(y)){
               // printf("oi");
            mini+=cost;
            unir(x, y);
        }
    }

    return mini;
}


int main(){
    int t;
    scanf("%d", &t);

    for(int i=0;i<t;i++){
        for(int j=0;j<100010;j++){
            pai[j]=j;
            aresta[j].first=0;
            aresta[j].second.first=0;
            aresta[j].second.second=0;
        }
        scanf("%d %d", &artot, &lig);
        for(int j=0;j<lig;j++){
            int x, y, z;
            scanf("%d %d %d", &x, &y, &z);
            aresta[j] = make_pair(z, make_pair(x, y));
        }

        sort(aresta, aresta+lig);

        long long int resp = kruskal();

        printf("%lld\n", resp);
    }



}