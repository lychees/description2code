#include <iostream>
#include <bits/stdc++.h>
#define MAXN 1000
#define MOD 1000000007
#define LL long long
using namespace std;

int tall[MAXN+1];
int col[MAXN+1];
int order[MAXN+1];
//int rank[MAXN+1];
LL dp[MAXN+1][MAXN+1];
LL color[MAXN+1];
LL val[MAXN+1];
int main()
{
    int t,n,m,l,co;
    scanf("%d",&t);
    while(t--)
    {
    	memset(tall,0,sizeof(tall));
    	memset(color,0,sizeof(color));
    	memset(col,0,sizeof(col));
    	memset(val,0,sizeof(val));
    	memset(order,0,sizeof(order));
    	scanf("%d %d",&n,&m);
    	int c,r=1;
    	for(int i=1;i<=n;++i)
    	{
    		scanf("%d %d",&l,&co);
    		tall[l]=i;
    		col[i]=co;
    	}
    	c=tall[0];
    	while(c!=0)
    	{
    		order[r++]=col[c];
    		//rank[c]=r++;
    		c=tall[c];
    	}
    	/*for(int i=1;i<=n;++i)
    		cout<<order[i]<<endl;
    	*/
    	for(int i=1;i<=n;++i)
    	{
    		val[i]=1;
    	}
    	LL curr=0,ans=0;
    	for(int i=n;i>=1;--i)
    	{
    		if(color[order[i]]==0){ curr+=val[i]; color[order[i]]=val[i]; }
    		else {
    			curr-=color[order[i]];
    			curr+=val[i];
    			color[order[i]]=val[i];
    		}
    		dp[1][i]=curr;
    	}
    	ans=ans+dp[1][1];
    	for(int len=2;len<=m;++len)
    	{
    		memset(color,0,sizeof(color));
    		memset(val,0,sizeof(val));
    		for(int i=1;i<=n-len+1;++i)
    		{
    			val[i]=dp[len-1][i+1];
    		}
    		curr=0;
    		for(int i=n-len+1;i>=1;--i)
    		{
    			if(color[order[i]]==0){ curr=(curr+val[i])%MOD; color[order[i]]=val[i];}
    			else {
    				curr=(curr-color[order[i]]+val[i])%MOD;
    				if(curr<0) curr+=MOD;
    				color[order[i]]=val[i];
    			}
    			dp[len][i]=curr;
    		}
    		ans=(ans+dp[len][1])%MOD;
    	}
    	printf("%lld\n",ans);
    	memset(dp,0,sizeof(dp));
    }
    return 0;
}
