#include<bits/stdc++.h>
using namespace std;
#define ll long long int
struct tree
{
	ll count[27];
	bool correct;
}bit[400010];
char str[100010];
ll len;
void update(ll val,ll pos,ll i)
{
	for(;i<=len;i+=(i&(-i)))
	{
		bit[i].count[pos]+=val;
		ll counter=0;
		for(ll j=0;j<26;++j)
		{
			if(bit[i].count[j]%2==1)
				++counter;
		}
		if(counter>1)
			bit[i].correct=false;
	}
}
ll query(ll x,ll pos)
{
	ll ans=0;
	for(;x>0;x-=(x&(-x)))
		ans+=bit[x].count[pos];
	return ans;
}
int main()
{
	ll n,q,i,x,y,ch,j;
	char c;
	scanf("%lld%lld",&n,&q);
	scanf("%s",str);
	len=strlen(str);
	memset(bit,0,sizeof(bit));
	for(i=0;i<len;++i)
		update(1,str[i]-'a',i+1);
	while(q--)
	{
		scanf("%lld",&ch);
		if(ch==1)
		{
			scanf("%lld %c",&x,&c);
			update(1,c-'a',x);
			update(-1,str[x-1]-'a',x);
			str[x-1]=c;
		}
		else
		{
			scanf("%lld%lld",&x,&y);
			ll counter=0;
			for(j=0;j<26;++j)
			{
				ll t1=query(y,j)-query(x-1,j);
				if(t1%2==1)
					++counter;
			}
			if(counter>1)
				cout<<"no\n";
			else
				cout<<"yes\n";
		}
	}
	return 0;
}