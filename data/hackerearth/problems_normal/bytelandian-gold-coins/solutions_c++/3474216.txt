#include<iostream>
using namespace std;

long long int recursion(long long int n,long long int dp[],long long int cpos)
{	long long int k;
	if(n<=99998)
	return dp[n];
	if(n>99998)
	{
	k= recursion(n/2,dp,cpos)+recursion(n/3,dp,cpos)+recursion(n/4,dp,cpos);
		if(k<n)
		k=n;
		return k;
	}
}
int main()
{
	long long int n,i,dp[99999],sol,m;
	while((cin>>n)!=NULL)
{
	
	dp[0]=0;
	dp[1]=1;
	dp[2]=2;
	dp[3]=3;
	dp[4]=4;
	if(n<99999)
	m=n;
	else
	m=99998;
	for(i=5;i<=m;i++)
	{
	
	dp[i]=dp[i/2]+dp[i/3]+dp[i/4];
	if(dp[i]<i)
	dp[i]=i;
	
	}
	if(n>=99999)
	{	cout<<recursion(n,dp,99999)<<endl;
	}
	else
	cout<<dp[n]<<endl;
}
	return 0;
}