#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<random>
using namespace std;
int t;
int n;
int tim[2001][2001];
int a[2001];
int b[2001];
int least = 0;
int u_s = 0;
int use[2001][2001];
long long int dp[2001][2001];
int numm[2001];
inline long long int dfs(int a, int b){
	if (a == 7){
		if (b >= least){
			return 0;
		}
		else{
			return INT_MAX;
		}
	}
	if (b >= least){
		return 0;
	}
	if (use[a][b] == u_s){
		return dp[a][b];
	}
	use[a][b] = u_s;
	dp[a][b] = INT_MAX;
	int need = least-b;
	need = min(need, numm[a]);
	for (int i = 0; i <= need; i++){
		long long int kari = dfs(a + 1, b + i);
		if (kari == INT_MAX){
			continue;
		}
		kari += tim[a][i];
		dp[a][b] = min(dp[a][b], kari);
	}
	return dp[a][b];
}
int main(){
	scanf("%d", &t);
	while (t--){
		u_s++;
		int countt = 0;
		for (int i = 0; i < 7; i++){
			int num;
			scanf("%d", &num);
			numm[i] = num;
			for (int j = 0; j < num; j++){
				scanf("%d%d", &a[j],&b[j]);
			}
			for (int j = 0; j <= num; j++){
				tim[i][j] = INT_MAX;
			}
			tim[i][0] = 0;
			for (int j = 0; j < num; j++){
				for (int k = j; k < num; k++){
					int r = b[k] - a[j];
					tim[i][k - j + 1] = min(tim[i][k - j + 1], r);
				}
			}
			countt += num;
		}
		double aa = (double)(countt)*0.75;
		aa = ceil(aa);
		least = aa;
		long long int ans = dfs(0, 0);
		ans = 60LL * 60LL * 24LL*7LL - ans;
		printf("%lld\n", ans);
	}
	return 0;
}