#include <iostream>

using namespace std;

int pos (int a[], int n, int cur, int st)
{
	int i, j, k;
	int l, h, m;
	l = 0;
	h = n-1;
//	int st = 0;
	while (l <= h) {
		m = (l+h)/2;
		
		if (cur+st == a[m]) {
			return a[m];
		}
		else if (l == m) {
			return a[h] <= cur+st ? a[h] : a[l];
		}
		else if (cur+st > a[m] && cur+st < a[m+1]) {
			return a[m];
		}
		else if (cur+st > a[m-1] && cur+st < a[m]) {
			return a[m-1];
		}
		else if (cur+st < a[m]) {
			h = m-1;
		}
		else {
			l = m+1;
		} 
	}
	return l;
}
bool valid (int a[], int n, int k, int st) 
{
	int i, j, cnt, cur;

	cnt = 0;
	cur = a[0];
	while (cnt < k) {
		cnt++;
		j = pos (a, n, cur, st);
//		cout<<j<<endl;
		if (j == a[n-1] && cnt <= k) {
			return true;
		}
		cur = j;
	}

	return false;
}
	
int bin_search (int a[], int n, int k)
{
	int l, m, h, i;

	l = 1;
	h = a[n-1] - a[0];

	while (l <= h) {
		m = (l+h)/2;
//		cout<<l<<" "<<h<<" "<<m<<endl;
		if (valid(a, n, k, m)) {
			h = m-1;
		}
		else
			l = m+1;
	}

	return l;
}

int main()
{
	int i, j, k, t, n;

	cin>>t;
	int a[1000001];
	
	while (t--) {
		cin>>n>>k;

		for (i = 0; i < n; i++) 
			cin>>a[i];

		cout<<bin_search(a, n, k)<<endl;
	}

	return 0;
}
