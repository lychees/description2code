#include <stack>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <cmath>
#include <climits>
#include <iostream>
#include <vector>
#include <map>
#include <list>
#include <queue>
#include <algorithm>
#include <limits>
#include <bitset>
using namespace std;

//Shorthands
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<vi> vvi;
typedef vector<ii> vii;
typedef long long ll;
typedef vector<ll> vll;
#define sd(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define For(i, j, k) for (int i = j; i <= k; i++)
#define Ford(i, j, k) for (int i = j; i >= k; i--)
#define sz(a) int((a).size())
#define rsz resize
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define abs(x) (((x) > 0) ? (x) : (-(x)))
#define mp make_pair

//DEBUG
#define trace(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define track(a) cerr << #a << ": "; for (auto tmp: a) cerr << tmp << " "; cerr << endl;
#define trackp(a) cerr << #a << ": "; for (auto tmp: a) cerr << "(" << tmp.first << ", " << tmp.second << "), "; cerr << endl;

#define MOD 1000000007
#define INF ie15

long long pow(long long n,long long m)
{
    if (m == 0) return 1;
    long long x = pow(n,m/2);
    if(m % 2 == 0)
               return (x*x)%MOD;
    else
               return (((x*x)%MOD)*n)%MOD;
}



void input()
{
    #ifndef ONLINE_JUDGE
        string file = "input.txt";
        freopen(file.c_str(), "r", stdin);
    #endif // ONLINE_JUDGE
}

void output()
{
    #ifndef ONLINE_JUDGE
        freopen("output.txt", "w", stdout);
    #endif // ONLINE_JUDGE
}

#define MAX 500010

int bit[MAX];

int query(int indx)
{
    int sum = 0;
    while (indx) {
        sum += bit[indx];
        indx -= (indx & -indx);
    }
    return sum;
}

void update(int indx, int x)
{
    while (indx < MAX) {
        bit[indx] += x;
        indx += (indx & -indx);
    }
}

int statquery(int k)
{
    int low = 0, high = MAX-1, ans = 0;
    while (low <= high) {
        int mid = low + ((high - low)>>1);
        int qr = query(mid);
        if (qr >= k) {ans = mid, high = mid - 1;}
        else if (qr < k) low = mid + 1;
    }
    return ans;
}

char r[MAX][15];
int tim[MAX];


int main()
{
    //ios::sync_with_stdio(false);
    int t;
    scanf("%d", &t);
    while (t--) {
        memset(bit, 0, sizeof(bit));
        int n;
        scanf("%d", &n);
        for (int i = 1; i <= n; i++) {
            scanf("%s", r[i]);
            update(i, 1);
        }
        for (int i = 1; i <= n; i++)
            scanf("%d", &tim[i]);
        int maxsofar = 0;
        for (int i = 0; i < n-1; i++) {
            int k;
            scanf("%d", &k);
            int position = statquery(k);
            maxsofar = max(maxsofar, tim[position]);
            printf("%s %d\n", r[position], maxsofar);
            update(position, -1);
        }
        int position = statquery(1);
        maxsofar = max(maxsofar, tim[position]);
        printf("%s %d\n", r[position], maxsofar);
    }

}

