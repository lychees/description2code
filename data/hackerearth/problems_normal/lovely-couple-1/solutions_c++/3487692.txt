#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

ll get_gcd(ll a, ll b) {
	if (b == 0)
		return a;
	else
		return get_gcd(b, a%b);
}

int main()
{
    //Sieve of Eratosthenes
    bool prime[100011];
    memset(prime, true, sizeof(prime));
    prime[0] = prime[1] = false;
    for (ll i = 2; i*i <= 100010; i++) {
    	if (prime[i] == true)
        {
            for (ll j = i*2; j <= 100010; j += i)
                prime[j] = false;
        }
    }
    ll t, a, b;
    scanf("%lld", &t);
    while (t--) {
    	scanf("%lld %lld", &a, &b);
    	ll gcd = get_gcd(a, b);
    	ll lcm = (ll)(abs(a*b)/gcd);
    	ll cnt = 0;
    	bool flag = false;
    	while (lcm % 2 == 0) {
    		flag = true;
    		lcm /= 2;
    	}
    	if (flag) cnt += 1;
    	for (ll i = 3; i <= sqrt(lcm) + 1; i += 2) {
    		flag = false;
    		while (lcm % i == 0) {
    			flag = true;
    			lcm /= i;
    		}
    		if (flag) cnt += 1;
    	}
    	if (lcm > 2) cnt += 1;
    	if (prime[cnt]) printf("Yes\n");
    	else printf("No\n");
    }
    return 0;
}
