#include<bits/stdc++.h>
using namespace std;
static int memo[1000002];
static int m[1001],p=0, a[300],I,q;
void seive(){
	for (I=2;I<=1000; I++){
		if (m[I]) continue; 
		a[p++]=I;
		q=2*I;
		while (q<=1000)
		m[q]++, q+=I;
	}
}
int etf(int n){
	int x=n;
	long double d=1;
	for (I=0;a[I]<=sqrt(n)&&I<p;I++){
		if (n%a[I]==0) d*=1-(double)1/a[I];
		while (n%a[I]==0) n/=a[I];
	}
	if (n> 1) d*=(double)(1-(double)1/n);
	d=d*x;
	return (int)d;
}
int divi(int n){
	int c=0;
	for(int i=0;i<p&&a[i]<=sqrt(n);i++){
		while(n%a[i]==0)
		   c++,n/=a[i];
	}
	if(n>1)
	   c++;
	 return c;
}
int main(){
	seive();
	memo[1]=1;memo[0]=0;
    /*for(int i=2;i<=1000001;i++)
        memo[i]=i;
    for(int i=2;i<=1000001;i++){
        if(memo[i]!=i)
            continue;
        for(int j=i;j<=1000001;j+=i){
            memo[j]=memo[j]*(1-(double)1/i);
        }
    }*/
	for(int i=1;i<=1000001;i++){
		memo[i]=memo[i-1]+divi(i);
	}
	int t;
	scanf("%d",&t);
	while(t--){
		int n;
		scanf("%d",&n);
		printf("%d\n",memo[n]);
	}
	return 0;
}
