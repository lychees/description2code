#include <bits/stdc++.h>
using namespace std;
#define MAX 3005
#define getcx getchar_unlocked
int scanint()
{
    int n=0;
    int ch=getcx();int sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
     
    while( ch >= '0' && ch <= '9' )
    n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
    return(n*sign);
}
inline void y (int n)
{
    char buffer[sizeof(n) * 8 * 3 / 10 + 3];  
    int index = sizeof(buffer)-1;
    int end = index;
    buffer[index--] = 0;
    do {
       buffer[index--] = (n % 10) + '0';
       n /= 10;
    } while(n);
    puts(&buffer[index+1]);
}
bool check[MAX]={false};
int total=0;
int dfs(vector<int> v[],int root)
{
    int m,m1=-1,m2=-1;
    check[root]=1;
    for(int i=0;i<v[root].size();i++)
    {
        if(!check[v[root][i]]){
            m = dfs(v,v[root][i]);
            if(m>=m1)
            {
                m2= m1;
                m1 = m;
            }
            else if(m>m2)
                m2=m;
        }
    }
    total = max(total , m1+m2+2);
    return (m1 + 1);
}
int main()
{
    int t,n,a,b;
    t=scanint();
    while(t--) {
    	n=scanint();
    vector<int> v[n+9];
    for(int i=0;i<n-1;i++){
    	a=scanint();
    	b=scanint();
        a++;
        b++;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    memset(check,false,sizeof(check));
    total = 0;
    dfs(v,1);
    y(total+1);}
}