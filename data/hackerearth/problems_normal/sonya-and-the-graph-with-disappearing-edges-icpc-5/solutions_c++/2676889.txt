#include<bits/stdc++.h>
#define pb push_back
#define vll vector<long long int>
#define sc(x) scanf("%lld",&x)
#define pr(x) printf("%lld\n",x);
#define debug(x) cout<< #x << "=" << x << endl;
#define all(c) c.begin(),c.end()
#define scana(x,m,n) for(int i=m;i<=n;i++)scanf("%lld",&x[i]);
#define printa(x,m,n) printf("%s:\n",#x);for(int i=m;i<=n;i++)printf("%lld ",x[i]);printf("\n");
using namespace std;
typedef long long int ll;
#define MOD 1000000007
#define MAX 100001
ll vis[MAX];
ll valid[MAX];
vll gr[MAX];
ll edge[MAX][2];
ll kt[MAX][2];
ll timer[MAX];
int main()
{
   ll n,m,k;
   sc(n);
   sc(m);
   sc(k);
   memset(vis,0,MAX*sizeof(ll));
   memset(valid,0,MAX*sizeof(ll));
   //memset(timer,0,MAX*sizeof(ll));
   timer[1]=0;
   for(int i=1;i<=m;i++)
   {
       sc(edge[i][0]);
       sc(edge[i][1]);
       gr[edge[i][0]].pb(i);
       gr[edge[i][1]].pb(i);
   }
   for(int i=1;i<=k;i++)
   {
       sc(kt[i][0]);
       sc(kt[i][1]);
   }
   auto p=(pair<ll,ll>*)(kt);
   sort(p+1,p+k+1);
   queue<ll> q;
   q.push(1);
   ll u,flag=0,z=1;
    while(!q.empty())
    {
        u=q.front();
        q.pop();

        for(ll v: gr[u])
        {
            if(valid[v]==0)
            {
                if(edge[v][0]==u)
                {
                    v=edge[v][1];
                }else
                    v=edge[v][0];
                if(vis[v]==0)
                {
                    q.push(v);
                    timer[v]=timer[u]+1;
                    vis[v]=1;
                    if(v==n)
                    {
                        flag=1;
                        break;
                    }
                    while(z<=k)
                    {
                        if(timer[v]==kt[z][0])
                        {
                            valid[kt[z][1]]=1;
                            z++;
                        }
                        else
                            break;
                    }
                }
            }
        }
        if(flag)
        {
            break;
        }
    }
    if(n==1)
    {
         printf("0\n");
         return 0;
    }

    if(flag)
        printf("%lld\n",timer[n]);
    else
        printf("-1\n");
}
