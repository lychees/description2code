#include<bits/stdc++.h>
#define ll long long
#define pll pair<ll,ll>
#define vl vector<ll>
#define mod 1000000007
#define fori(z,n) for(int i=z;i<n;i++)
#define forj(z,n) for(int j=z;j<n;j++)
#define fork(z,n) for(int k=z;k<n;k++)
#define db(x) cout << (#x) << " = " << x << endl;
#define trico() int t;cin>>t ; while(t--)
#define CHECK_BIT(var,pos) ((var) & (1<<(pos)))
#define p_iter vector<pll>::iterator
#define l_iter vector<ll>::iterator
#define forstl(m) for(it=m.begin();it!=m.end();it++)
#define bitcnt(x) __builtin_popcountll(x)
const int nax = 1e6 + 5;
const int lax = 1e5 + 5;
const int pax = 2e5 + 5;
const int inf = 1e9 + 5;
#define sl(n) scanf("%I64d",&n)
#define pl(n) printf("%I64d",n)
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
using namespace std;
static int u=0;
void f_case()
{
    u++;
    cout<<"Case "<<u<<": ";
}


template <class T>
inline std::string to_string (const T& t)
{
    std::stringstream ss;
    ss << t;
    return ss.str();
}
double arr[25][25];
int n;
double dp[(1<<20)];
bool visited[(1<<20)];
double solve(long dist,int k)
{
    if(k==n)
        return 1.0;


    if(visited[dist]==true)
        return dp[dist];
    visited[dist]=true;
    long ndist;

    double maxi=INT_MIN;
    fori(0,n)
    {
        if(!((dist)&(1<<i)))
        {
            ndist=(dist|(1<<i));
            maxi=max(maxi,(arr[k][i]/100.0)*solve(ndist,k+1));

        }
    }
    return dp[dist]=maxi;
}
int main()
{

    cin>>n;
    fori(0,n)
    {

        forj(0,n)
        cin>>arr[i][j];
    }
    fori(0,(1<<20)) visited[i]=false;
    long dist=0;

    double maxi=solve(dist,0);
    printf("%.6f",maxi*100.0);

}

