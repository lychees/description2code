#include<cstdio>
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
typedef int w;
typedef long long l;
typedef pair<w,l> wl;
typedef pair<w,wl> wwl;
w n,m;
l f[100001];
l h[100001];
vector<wwl> v;
l tmp[100001];
l po[100001];
const w oo=1e9+7;
void cr(l ha[],string s){
    for(int i=0;i<s.size();++i){
        if(i==0) ha[i]=s[i];
        else ha[i]=(ha[i-1]*26+s[i])%oo;
;
    }
}

l get(w fr,w to){
    if(fr==0) return h[to];
    return (h[to]-(h[fr-1]*po[to-fr+1])%oo+oo)%oo;
}

void solve(){
     cin>>n>>m;
     po[0]=1;
     for(int i=1;i<=n;++i) po[i]=(po[i-1]*26)%oo;
     string s; cin>>s;
     cr(h,s);
     for(int i=1;i<=m;++i){
        w x; cin>>s;
        x=s.size();
        cr(tmp,s);
        w y; cin>>y;
        v.push_back(make_pair(y,make_pair(x,tmp[x-1])));
     }
     for(int i=0;i<n;++i){
        if(i) f[i]=f[i-1]+1;
        else f[i]=1;
        for(int j=0;j<v.size();++j){
            if(v[j].second.first<=(i+1) and get(i-v[j].second.first+1,i)==v[j].second.second){  f[i]=max(f[i],f[i-v[j].second.first]+v[j].first);}
        }
     }
     cout<<f[n-1];

}

int main(){
    ios_base::sync_with_stdio(false);
   //freopen("in","r",stdin);
   solve();
}
