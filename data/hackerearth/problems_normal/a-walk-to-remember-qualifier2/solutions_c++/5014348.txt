/*
#########################################
#        Syed Omar Ali                  #
#        Aligarh Muslim University      #
#        III Year                       #
#########################################
*/
#include<bits/stdc++.h>

using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;

#define rep(n) for(ll i=0; i<(n); i++)
#define wl(n) while(n--)
#define mem(x,val) memset((x),(val),sizeof(x));
#define vl vector<ll>
#define vb vector<bool>
#define vvl vector<vl >
#define vvb vector<vb >
#define all(x) (x.begin(),x.end())
#define sz(x) ((ll)x.size())
#define pb push_back
#define em(x) (!x.empty())
#define MAX INT_MAX*INT_MAX
#define MIN INT_MIN*INT_MIN
#define MOD 1000000007
#define pr pair<ll,ll>
#define mp make_pair
#define F first
#define S second
#define sl(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
#define t() ll tst,test=1; sl(tst); while(tst--)

template<class T1> void deb(T1 e1) {
    cout << e1 << endl;
}

template<class T1,class T2> void deb(T1 e1, T2 e2) {
    cout << e1 << " " << e2 << endl;
}
vector<list<ll> > g,gR;
vector<bool> visited;
vector<bool> ans;
stack<ll> s;
set<ll> st;
void DFS1(ll u);
void DFS2(ll u);
ll counter;
int main(){
    ll N,M;
    sl(N);sl(M);
    list<ll> blank;
    for(ll i=0;i<N;i++){
        visited.pb(false);
        ans.pb(false);
        g.pb(blank);
        gR.pb(blank);
    }
    ll u,v;
    wl(M){
       sl(u);sl(v);
       u--;v--;
       g[u].pb(v);
       gR[v].pb(u);
    }
    for(ll i=0;i<N;i++){
        if(!visited[i])
            DFS1(i);
    }
    ll odd = 0;
    ll even = 0;
    for(ll i=0;i<N;i++){
        visited[i]=false;
    }
   // cout << s.size();
    while(!s.empty()){
        ll i = s.top();
        s.pop();
        if(!visited[i]){
        	st.clear();
            counter=0;
            DFS2(i);
            if(st.size()>1){
                for(set<ll> :: iterator itr = st.begin();itr!=st.end();itr++)
                    ans[(*itr)] = true;
            }
        }
    }
    for(ll i=0;i<N;i++){
        cout << ans[i] << " ";
    }
    cout << endl;
    return 0;
}
void DFS1(ll u){
    visited[u] = true;
    for(list<ll>::iterator i = g[u].begin();i!=g[u].end();i++){
        ll v = (*i);
        if(!visited[v])
            DFS1(v);
    }
    s.push(u);
}
void DFS2(ll u){
    visited[u] = true;
    st.insert(u);
    for(list<ll>::iterator i = gR[u].begin();i!=gR[u].end();i++){
        ll v = (*i);
        if(!visited[v])
            DFS2(v);
    }
}
