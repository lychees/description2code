//#CodeLikeTheMartian

#include <bits/stdc++.h>

#define     MOD       1000000007
#define     mp        make_pair(a,b)
#define     pb        push_back
#define     lb        lower_bound
#define     ub        upper_bound
#define     SIZE      100001
#define     MAX       1000001
#define     INF       100000
#define     fi        first
#define     se        second

using namespace std;

typedef long long int  ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long int ull;
int steps=0;
int sum;
template<class T> T gcd(T a, T b)
{
    //cout<<a<<" "<<b<<endl;
    if(a==0)return b;
    if(b==0)return a;
    //steps++;sum+=(a%b);
    return gcd(b,a%b);
}
template<class T> T lcm(T a, T b){return a*b/gcd(a,b);}
template<class T>inline bool isPrime(T n){if(n<=1)return false;for(T i=2;i*i<=n;++i)if(n%i==0)return false;return true;}
template<class T> inline T fact(T n){T res=1;for(T i=2;i<=n;++i)res*=i;return res;}
template<class T> T gcdFast(T a,T b)
{
    steps++;
    cout<<a<<" "<<b<<endl;
    if(a==b)
        return a;
    if(a>b)
        return gcdFast(b,a-b);
    else
        return gcdFast(a,b-a);
}
int main()
{
    int T;
    cin>>T;
    while(T--)
    {
        ll x,y,N;

        cin>>x>>y>>N;
        ll ans=x+y;
        int steps;
        for(steps=3;x!=y&&steps<=N;++steps)
        {
            int tmp=y;
            y=abs(x-y);
            x=tmp;
            ans+=y;
            //cout<<"Y="<<y<<" Step:"<<steps<<endl;
        }

        steps++;
        //cout<<"X:"<<x<<endl;
        if(N>=steps)
        {
        ans+=(2LL*y*((N-steps+1)/3LL));
        ans+=(y*((N-steps+1)%3LL));
        }
        cout<<ans<<endl;
    }
    return 0;
}


