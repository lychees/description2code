#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define read() freopen("in.txt","r",stdin)
#define arrsize (int)1e5+1
#define vul()  printf("impossible\n");
#define out() cout<<ans<<endl;
#define loop(i,n) for( int i =0; i<n; i++)
#define loopn(i,n) for( int i=1; i<=n; i++)
#define debug1(x) cout<<x<<endl;
#define debug2(x,y) cout<<x<<ends<<y<<endl;
#define debug3(x,y,z) cout<<x<<ends<<y<<ends<<z<<endl;
#define sdi(x) cin>>x;
#define sdii(x,y) cin>>x>>y;
#define YES cout<<"yes\n";
#define NO cout<<"no\n";
int Set( int n , int pos)
{
    return ( n=n | 1<<pos );
}
int reset(int N,int pos)
{
    return N= N & ~(1<<pos);
}
bool check(int N,int pos)
{
    return (bool)(N & (1<<pos));
}
ll pow(ll a, ll b, ll MOD)
{
    ll x = 1, y = a;
    while(b > 0)
    {
        if(b%2 == 1)
        {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD;
        b /= 2;
    }
    return x;
}

ll modInverse(ll a, ll m)
{
    return pow(a,m-2,m);
}
int primes[9999], num[arrsize];

int psize;
void sieve()
{
    int i , j;
    num[1] = 0;
    for (i=2; i<10001; i++)
        num[i]=1;

    for (i=2; i<10001; i++)
    {
        if (num[i])
        {
            for (j=i; i*j<10001; j++)
            {
                num[i*j]=0;
            }
        }
    }
    j=0;
    for (i=2; i<10001; i++)
    {
        if(num[i]==0)
        primes[j++] = i;
    }
    psize = j;
}
int m , n, k;
int mat[1001][1001];
int diff[10001];
ll fun(int i , int j)
{
     if((i-1)>=1 && (j-1)>=1 && (i+1)<=m && (j+1)<=m)
     {
         ll ret = 0;

         ret += diff[mat[i-1][j-1]];
         ret += diff[mat[i-1][j+1]];
         ret += diff[mat[i+1][j-1]];
         ret += diff[mat[i+1][j+1]];
         ret += diff[mat[i][j]];
//         if( i==8 && j==25)
//         {
//             debug3(mat[i][j], mat[i-1][j-1], mat[i-1][j+1]);
//             debug2( mat[i+1][j-1], mat[i+1][j+1]);
//         }
         return ret;
     }
     else
        return INT_MAX;
}
int main()
{
    sieve();

    cin>>m>>k;
    for( int i =1; i<=m; i++)
    {
        for( int j =1; j<=m; j++)
            cin>>mat[i][j];
    }
    memset(diff, 10 , sizeof diff);

    for( int i=1; i<=10000; i++)
    {
        if(num[i]==1)
        {
            diff[i] =0;
            continue;
        }
        int count=1;
        for( int j = i+k; j<=10000; count++, j=j+k)
        {
            if(num[j]==1)
            {
                //cout<<j<<endl;
                diff[i] = count;
                //debug2(i, diff[i]);
                break;
            }
        }
    }
    //for( int i =1; i<=60; i++) debug2(i, diff[i]);

    ll ans = INT_MAX;
    int row = m, col =m;
    for( int i =1; i<=m; i++)
    {
        for( int j =1; j<=m; j++)
        {
            ll tans = fun( i, j);

            if( tans < ans)
            {
                ans = tans;
                //cout<<tans<<endl;
                row = i;
                col = j;
            }
            else if( tans==ans)
            {
                if(i<row)
                {
                    row = i;
                    col = j;
                }
                else if( i==row && j<col)
                {
                    row = i;
                    col = j;
                }
            }
        }
    }
    if( ans<INT_MAX)
    {
        YES
        cout<<ans<<endl;
        cout<<row<<" "<<col<<endl;
    }
    else
        NO
}

