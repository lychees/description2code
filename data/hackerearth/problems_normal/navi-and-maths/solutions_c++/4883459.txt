/*#include <iostream>
#include <string.h>
#include <vector>
#include <map>
#include <pair>*/
#include <bits/stdc++.h>
using namespace std;

long long power(long long base, long long exponent, long long modulus)
{
    long long result = 1;
    while (exponent > 0) {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}

int main()
{
	int tc, n;
	long sum, prod, Maxans = 0 , range, ans;
	long a[16];
	cin >> tc;
	int flag = 0;
	for (int t = 1; t <= tc; t++)
	{
		cin >> n;
		for (int i = 0; i < n; ++i)
		{
			cin >> a[i];
		}
		
		range = 1  << n;
		Maxans = 0;
		for (long int i = 1; i <= range; ++i)
		{
			//flag = 0;
			sum = 0; prod = 1; 
			int count = 0;
			for (int j = 0 ; j < n; ++j)
			{
				if ( i & (1<<j ))
				{
					sum += a[j];
					prod *= a[j];
					if (sum >= 1000000007)
					{
						sum = sum % 1000000007; 	
					}
					if (prod >= 1000000007)
					{
						prod = prod % 1000000007; 	
					}
					count ++;
				}
			}
			
			if ((count > 1))
			{
				ans = power(sum, 1000000007-2, 1000000007);	
				ans = (ans * (prod)) % 1000000007;
				Maxans = max(ans, Maxans);
			}
			
		}
		
		//cout << Maxans <<endl;
		printf("Case #%d: %ld\n",t, Maxans);
	
		 
	}
	return 0;
}
