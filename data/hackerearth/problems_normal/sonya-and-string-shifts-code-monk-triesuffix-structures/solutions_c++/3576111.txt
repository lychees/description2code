#include <bits/stdc++.h>
using namespace std;
#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 0x3f3f3f3f
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%ld",&a)
#define sll(a) scanf("%lld",&a)

ll gcd(ll a, ll b) {if (a == 0 || b == 0) return max(a,b); if (b % a == 0) return a; return gcd(b%a, a);}
ll hcf(ll a, ll b) {if(b>a) return (hcf(b, a)); if(a%b==0) return b; return (hcf(b, a%b));}
ll modpow(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll mulmod(ll a, ll b, ll m) {int64_t res = 0;while (a != 0){if(a & 1)res =(res+b)%m;a>>=1;b =(b<<1)%m;}return res;}

string str;
int n,gap;
int sa[2000006],pos[2000006],temp[2000006],ans[2000006];
bool cmp(int i,int j)
{
    if(pos[i]!=pos[j])
        return pos[i]<pos[j];
    i+=gap;
    j+=gap;
    return (i<n&&j<n)?(pos[i]<pos[j]):(i>j);
}
int buildsa()
{
    int i;
    for(i=0;i<n;i++)sa[i]=i,pos[i]=str[i];
    for(gap=1;;gap*=2)
    {
        sort(sa,sa+n,cmp);
        for(i=0;i<n-1;i++)temp[i+1]=temp[i]+cmp(sa[i],sa[i+1]);
        for(i=0;i<n;i++)pos[sa[i]]=temp[i];
        if(temp[n-1]==n-1)break;
    }
    return 0;
}
int main()
{
    int i,q,k,mi,ind,flag=0,j=0;
    s(n);
    cin>>str;
    str=str+str;
    n=2*n;
    buildsa();

    for(i=0;i<n;i++)
    {
    	if(sa[i]<=n/2)
    	{
    		if(flag==0&&(sa[i]==0||sa[i]==(n/2)))
    		{
    			flag=1;
    			ans[sa[i]%(n/2)]=j++;
    		}
    		else
    		ans[sa[i]]=j++;
    	}
    }
    mi=ans[0];
    ind=0;
    for(i=1;i<n/2;i++)
    {
        if(ans[i]<mi)
        {
            mi=ans[i];
            ind=i;
        }
        ans[i]=ind;
    }
    ans[0]=0;
    s(q);
    while(q--)
    {
        s(k);
        printf("%d\n",ans[k]);
    }
    return 0;
}
