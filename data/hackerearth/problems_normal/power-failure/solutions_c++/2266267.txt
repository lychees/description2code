#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
const int MAXN=200005;
vector<int> sieve(MAXN,1);
vector<int> primes;
void fillSieve(){
        sieve[0]=sieve[1]=0;
        for(int i=2;i<MAXN;i++)
        if(sieve[i]){
                primes.push_back(i);
                for(ll j=(ll)i*i;j<MAXN;j+=i){
//                     cout<<j<<endl;
                        sieve[j]=0;
                }
        }
}

const int MOD=1000000007;



int nonPrimes(int a,int b){
        auto ita=lower_bound(primes.begin(),primes.end(),a);
        auto itb=lower_bound(primes.begin(),primes.end(),b+1);
//         cout<<"diff:"<<itb-ita<<endl;
        return b-a+1-(itb-ita);
}

int main() {
    ios_base::sync_with_stdio ( false );
        int t;cin>>t;
        fillSieve();
        while(t--){
                int n,m;
                cin>>n>>m;
                vector<int>v(n);
                for(int i=0;i<n;i++)
                cin>>v[i];
                sort(v.begin(),v.end(),greater<int>());
                long long total=1;
                for(int i=0;i<n;i++){
                        int rem=nonPrimes(v[i],m)-i;
//                          cout<<m<<" "<<v[i]<<" "<<i<<" "<<rem<<endl;
                        if(rem<=0){
                                total=0; break;
                        }
                //      cout<<m<<" "<<v[i]<<endl;
                        total=total*rem%MOD;
        }
        cout<<total<<endl;
        }
    return 0;

}


