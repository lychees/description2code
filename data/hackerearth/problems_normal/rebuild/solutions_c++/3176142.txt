#include<iostream>
#include<algorithm>
#include<vector>
#include<string.h>
using namespace std;

vector< pair<long long,pair<long long,long long> > >e;
long long p[50005],deg[50005];

long long findP(long long x) {
    return (p[x]==x)?(x):(p[x]=findP(p[x]));
}

int main()
{
    int t;
    cin>>t;
    while(t--) {
        long long i,j,n,m,c,temp,e1,e2,p1,p2,ans=0;
        cin>>n>>m;
        e.clear();
        for(i=1;i<=n;i++) p[i]=i,deg[i]=0;
        for(i=1;i<=m;i++) {
            cin>>e1>>e2>>c;
            if(e1>e2) swap(e1,e2);
            e.push_back(make_pair(c,make_pair(-e1,-e2)));
        }
        sort(e.begin(),e.end());
        for(i=0;i<e.size();i++) {
            e1=-e[i].second.first; e2=-e[i].second.second;
            p1=findP(e1); p2=findP(e2);
            if(p1!=p2) p[p1]=p2,ans+=e[i].first,deg[e1]++,deg[e2]++;
        }
        cout<<ans<<"\n";
        for(i=1;i<=n;i++) cout<<deg[i]<<" ";
        cout<<"\n";
    }
    return 0;
}
