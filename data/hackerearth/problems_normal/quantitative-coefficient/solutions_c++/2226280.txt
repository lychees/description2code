#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007

int edge[31313][2];
int p[1501];
int rnk[1501];

int parent(int x) {
        int j = x;
        while(x!=p[x]) x = p[x];
        p[j] = x;
        return x;
}

void merge(int x,int y) {
        int px = parent(x);
        int py = parent(y);
        if(rnk[px] > rnk[py]) p[py] = px;
        else p[px] = py;
        if(rnk[px] == rnk[py]) rnk[py]++;
}

int main() {
        int w,i,j,t,n,m;
        scanf("%d",&t);
        set< pair<int,int> >:: iterator it;
        while(t--) {
                scanf("%d%d",&n,&m);
                set< pair<int,int> > se;
                for(i=1;i<=n;i++) p[i]=i;
                memset(rnk,0,sizeof(rnk));
                for(i=0;i<m;i++) {
                        scanf("%d%d%d",&edge[i][0],&edge[i][1],&w);
                        se.insert(make_pair(w,i));
                }
                int ans=1;
                for(it=se.begin();it!=se.end();it++) {
                        int weight = it -> first;
                        j = it -> second;
                        if(parent(edge[j][0])!=parent(edge[j][1])) {
                                ans = ((long long) ans * weight) % MOD;
                                merge(edge[j][0],edge[j][1]);
                        }
                }
                printf("%d\n",ans);
        }
        return 0; 
}