#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll mod = 1000000007;
ll MOD = mod;
ll mod_pow(ll a, ll b, ll c) {
	ll ret = 1;

	while (b) {
		if (b & 1) ret = (ret * a) % c;
		a = (a * a) % c;
		b >>= 1;
	}

	return ret;
}
ll mod_inverse(ll a)
{
	return mod_pow(a, mod - 2, mod);
}
vector<int> prime;
ll r = 0, ret = 1;
ll findphi(int m)
{
	ll i;
	ll t = m;
	for (i = 0; prime[i] <= m / prime[i]; i++)
	{
		if (m % prime[i] == 0)
		{
			r++;
			(ret *= (prime[i] - 1)) %= MOD;

			t = t / prime[i] * (prime[i] - 1);
			while (m % prime[i] == 0)
				m /= prime[i];
		}
	}
	if (m != 1)
	{
		r++;

		(ret *= (m - 1)) %= MOD;
		t = t / m * (m - 1);
	}
	return t;
}
const int N = 1000100;
int vis[N];
ll totient[1000100] = {0};
int main() {
	// your code goes here
	std::ios::sync_with_stdio(0);
	for (int i = 2; i < N ; i++)
	{
		if (vis[i])continue;
		prime.push_back(i);
		for (int j = i; j < N; j += i)
			vis[j] = 1;

	}
	for (int i = 2; i <= 1000010; i++)
	{
		totient[i] += findphi(i) + totient[i - 1];
	}
	int t;
	cin >> t;
	while (t--)
	{
		ll n;
		cin >> n;
		ll ans =	(n * (n - 1)) / 2;
		ans -= totient[n];
		cout << ans << "\n";
	}
	return 0;
}