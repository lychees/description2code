#include <bits/stdc++.h>

using namespace std;

inline void MarkMultiples(bool *arr, int a, int n)
{
    int i = 2, num;
    while ((num = i*a) <= n)
    {
        arr[num-1] = true;
        ++i;
    }
}
 
int SieveOfEratosthenes(int n, int* Primes)
{
    int k = 0;
    if (n >= 2)
    {
        bool *arr = new bool[n+1];
        memset(arr, 0, n+1);
        for (int i=1; i<n; ++i)
        {
            if (arr[i] == false)
            {
                Primes[k++] = i+1;
                MarkMultiples(arr, i+1, n);
            }
        }
    }
    return k;
}

int main()
{
    ios::sync_with_stdio(false);
    int *Primes = new int[10000000];
    int k = SieveOfEratosthenes(10000001,Primes);
    vector <int>v;
    for(int i=2;i<k;++i)
        v.push_back(Primes[i]-Primes[i-1]);
    v.resize(distance(v.begin(),unique(v.begin(),v.end())));
    sort(v.begin(),v.end());
    v.resize(distance(v.begin(),unique(v.begin(),v.end())));
    int n, T;
    cin >> T;
    bool flag;
    while(T--)
    {
        cin >> n;
        flag = false;
        if((n <= 2*v[v.size()-1]) && (n > 1))
        {
            for(int i=0;i<v.size();++i)
            {
                if(v[i] < n)
                {
                    if(binary_search(v.begin(),v.end(),n-v[i]))
                    {
                        flag = true;
                        break;
                    }
                }
                else
                    break;
            }
        }
        if(flag)
            printf("YES\n");
        else
            printf("NO\n");
    }
    return 0;
}

