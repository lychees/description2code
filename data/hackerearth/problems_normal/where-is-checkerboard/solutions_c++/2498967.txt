#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
 
using namespace std;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define forr(i, l, r) for(int i = int(l); i <= int(r); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))
 
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
 
const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-9;
const ld pi = ld(3.1415926535897932384626433832795);
 
inline bool in(int i, int j, int n, int m) {
    return i >= 1 && i <= n && j >= 1 && j <= m;
}
 
inline int myrand() {
    return (rand() ^ (rand() << 15));
}
 
const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, 1, 0, -1};
 
const int N = 2222;

int n, m;
char a[N][N];

inline void gen()
{
    return;
}

inline bool read()
{
	if(!(cin >> n >> m)) return false;
	forn(i, n)
	{
		string s;
		cin >> s;
		forn(j, m) a[i][j] = s[j];
	}

    return true;
}

typedef unsigned int uint;

uint need[32];
uint Val[N][N];

inline void solve()
{ 
	forn(i, 32)
	{
		uint val = 0;
		for(int j = 0; j < 32; j++)
		{
			if(i % 2 == 0)
			{
				if(j % 2 == 1)
				{
					val |= uint(1) << j;
				}
			}
			else
			{
				if(j % 2 == 0)
				{
					val |= uint(1) << j;
				}
			}
		}

		need[i] = val;
	}

	//cerr << "neds == ";
	//forn(i, 32) cerr << need[i] << ' '; cerr << endl;

	forn(i, n)
	{
		forn(j, m)
		{
			if(j + 32 - 1 >= m) break;
			uint val = 0;
			for(int k = j; k <= j + 32 - 1; k++)
			{
				if(a[i][k] == '#')
					val |= uint(1) << (k - j);
			}

			Val[i][j] = val;
		}
	}

	for(int i = 5; i <= 5 + 32 - 1; i++)
	{
		//cerr << Val[i][5] << ' ';
	}
	//cerr << endl;
	int ans = 0;
	forn(i, n)
	{
		if(i + 32 - 1 >= n) break;
		forn(j, m)
		{
			if(j + 32 - 1 >= m) break;
			bool ok = true;
			for(int k = i; k <= i + 32 - 1; k++)
			{
				if(need[k - i] != Val[k][j])
				{
					ok = false;
					break;
				}
			}

			ans += int(ok);
		}
	}

	cout << ans << endl;
    return;
}
 
int main() {
#ifdef _DEBUG
    assert(freopen("input.txt", "rt", stdin));
    assert(freopen("output.txt", "wt", stdout));
#endif
 
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;
 
    srand(int(time(NULL)));

    int T = 1;
    //assert(scanf("%d", &T) == 1);

    forn(i, T)
    {
        //cerr << "TEST == " << i + 1 << endl;
        assert(read());
        solve();
    }
 
#ifdef _DEBUG
    cerr << "TIME == " << clock() << " ms" << endl;
#endif
    return 0;
}