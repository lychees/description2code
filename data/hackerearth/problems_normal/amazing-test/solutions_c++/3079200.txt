    #include <bits/stdc++.h>
    using namespace std;
    

    bool isSubsetSum(long long int set[],long long  int n,long long int sum)
    {
    bool subset[n+1][sum+1];
        int i,j;
        for (i = 0; i <= n; i++)
                subset[i][0] = true;

    for (i = 1; i <= sum; i++)
                subset[0][i] = false;

    for (i = 1; i <= n; i++)
        {
                for (j = 1; j <= sum; j++)
                {
         subset[i][j] = subset[i-1][j];
         if (j >= set[i-1] && subset[i][j]==false)
           subset[i][j] = subset[i][j] || subset[i - 1][j-set[i-1]];
                }
        }
        if(subset[n][sum] == 1)
            return 1;
        else
            return 0;
    }


    int main()
    {
        ios_base::sync_with_stdio(0);
        long long int N,X,T,sum = 0,A[100005];
        cin >> T;
        while(T--)
        {
        	sum = 0;
            cin >> N >> X;
            for(int i = 0;i < N;i++)
            {
                cin >> A[i];
                sum += A[i];
            }
            if(sum <= X)
           	{
           		 cout << "YES\n";
                continue;
           	}
           	else
            if(sum > (2*X))
            {
                cout << "NO\n";
                continue;
            }
            else
            {
                bool flag = isSubsetSum(A, N,sum/2);
                if(flag == 1)
                    cout << "YES\n";
                else
                    cout << "NO\n";
            }

        } 
        return 0;
        }   