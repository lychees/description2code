#include<bits/stdc++.h>
using namespace std;
set<string>myset;
int h,a;
void dfs(string srt)
{
	stack<string>s;
	map<string,int>vis;
	myset.clear();
	s.push(srt);
	int len=srt.length();
	while(!s.empty())
	{
		string u=s.top();
		s.pop();
		vis[u]=1;
		myset.insert(u);
		int i,j;
		string v=u;
		for(i=len-h,j=0;i<len;i++,j++)
			v[j]=u[i];
		for(i=0;j<len;j++,i++)
			v[j]=u[i];
		if(!vis[v])
			s.push(v);
		v=u;
		for(i=0;i<len;i++)
			if(i&1)
				v[i]='0'+(u[i]-'0'+a)%10;
		if(!vis[v])
			s.push(v);
	}
}
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(NULL);
	int t;
	cin>>t;
	while(t--)
	{
		string s;
		cin>>s>>a>>h;
		int len=s.length();
		h%=len;
		dfs(s);
		cout<<*(myset.begin())<<"\n";
	}
	return 0;
}