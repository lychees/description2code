#include <stdio.h>
#include <iostream>

using namespace std;

int binsearch(int q,int sum[],int i,int j,int n)
{
	if (i>j)
		return -1;
	int midindex = (i+j)/2;
	// check for boundry
	if(q==sum[midindex])
		return midindex;
	if(midindex==0)
	{
		if(q<=sum[midindex])
			return midindex;
	}
	if(midindex==n-1)
	{
		if(q>=sum[midindex])
			return midindex;
	}
		if(q<sum[midindex])
		{
			if(q>sum[midindex-1])
			{
				return midindex;
			}
			else
			{
				return binsearch(q,sum,i,midindex-1,n);
			}
		}
		else
		{
			if(q<sum[midindex+1])
			{
				return midindex+1;
			}
			else
			{
				return binsearch(q,sum,midindex+1,j,n);
			}
		}
}

int main()
{
	int n,q,cq;
	int cost[100000],sum[100000]={0};
	scanf("%d",&n);
	for(int i=0;i<n;i++)
	{
		scanf("%d",&cost[i]);
	}
	sum[0]=cost[0];
	for(int i=1;i<n;i++)
	{
		sum[i]=sum[i-1]+cost[i];
	}
	scanf("%d",&cq);
	while(cq--)
	{
		scanf("%d",&q);
		printf("%d\n",binsearch(q,sum,0,n-1,n)+1);
	}
}