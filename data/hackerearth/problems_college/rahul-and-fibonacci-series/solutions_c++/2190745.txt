/*#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    struct node* l;
    struct node* r;
};
struct node* new_node(int value)
{
    struct node* nodee=(struct node*)malloc(sizeof(struct node));
    nodee->data=value;
    nodee->l=NULL;
    nodee->r=NULL;
    return nodee;
}
void inorder(struct node* root)
{
    if(root==NULL)
        return ;
    inorder(root->l);
    printf("%d ",root->data);
    inorder(root->r);
}
int main()
{
    struct node* root=(struct node*)malloc(sizeof(struct node));
    root=new_node(10);
    root->l=new_node(-2);
    root->r=new_node(7);
    root->l->l=new_node(8);
    root->l->r=new_node(-4);
        return 0;
}
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<pii> vpii;
typedef unsigned long long llu;

#define debug(x) cerr<<#x<<" "<<x<<endl;
#define f first
#define s second
#define mp make_pair
#define MOD 1000000007
#define pb push_back
long long fibonacci(int  n)
{
    long long fib[2][2]= {{1,1},{1,0}},ret[2][2]= {{1,0},{0,1}},tmp[2][2]= {{0,0},{0,0}};
    int i,j,k;
    while(n)
    {
        if(n&1)
        {
            memset(tmp,0,sizeof tmp);
            for(i=0; i<2; i++) for(j=0; j<2; j++) for(k=0; k<2; k++)
                        tmp[i][j]=((tmp[i][j]%MOD)+((ret[i][k])%MOD*(fib[k][j])%MOD)%MOD)%MOD;
            for(i=0; i<2; i++) for(j=0; j<2; j++) ret[i][j]=tmp[i][j];
        }
        memset(tmp,0,sizeof tmp);
        for(i=0; i<2; i++) for(j=0; j<2; j++) for(k=0; k<2; k++)
                    tmp[i][j]=((tmp[i][j])%MOD+((fib[i][k])%MOD*(fib[k][j])%MOD))%MOD;
        for(i=0; i<2; i++) for(j=0; j<2; j++) fib[i][j]=tmp[i][j];
        n/=2;
    }
    return (ret[0][1]);
}
ll mult(ll a,ll b)
{
    ll x,y;
    x=1;
    y=a;
  //  cout<<a<< " "<<b<<endl;
    while(b)
    {
        if(b&1)
        {
            x=x*y;
            x=x%MOD;
        }
        y=(y*y)%MOD;
        b=b/2;
    }
    return x;
}
int  main()
{
    int t,n;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&n);
        long long x,y;
        x=fibonacci(n);
        long long a=1,b=2,c=3;
	 	while(n>0)
	 	  {
		   	a=b;
		   	b=c;
			c=a+b;
	 	  	n-=c-b-1;
	 	  }
	 	n+=c-b-1;
	 	y=b+n;
    // cout<<x<<" "<<y<<endl;
        ll ans=mult(y,x);
     printf("%lld\n",ans);
    }

   return 0;
}
