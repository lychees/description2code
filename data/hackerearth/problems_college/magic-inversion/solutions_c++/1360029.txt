#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cctype>
#include <utility>
#include <queue>
#include <cmath>
using namespace std;

#define MX 200005
#define MAX 1000005

int n, a[MX], b[MX], chk[MX], prm[MX], pn, tree[MAX];

void init() {
	int i, j;
	for (i = 2; i * i < MX; i++) {
		if (chk[i]) continue;
		for (j = i * i; j < MX; j += i) chk[j] = true;
	}
	for (i = 2; i < MX; i++) if (!chk[i]) prm[pn++] = i;
}

void add(int x, int val) {
	for (; x < MAX; x += x & -x) tree[x] += val;
}

int get(int t) {
	int sum(0);
	for (; t; t -= t & -t) sum += tree[t];
	return sum;
}

long long ans;

int main() {
	int i;
	init();
	scanf("%d", &n);
	for (i = 0; i < n; i++) scanf("%d", &a[i]);
	for (i = 0; i < n; i++) scanf("%d", &b[i]);
	for (i = 0; i < n; i++) {
		ans += i - get(b[i]);
		add(a[i], 1);
	}
	if (ans <= 1) {
		puts("SIMPLE INVERSION");
		return 0;
	}
	for (i = 0; i < pn && 1LL * prm[i] * prm[i] <= ans; i++) {
		if (ans % prm[i] == 0) {
			puts("SIMPLE INVERSION");
			return 0;
		}
	}
	puts("MAGIC INVERSION");
	return 0;
}
