/*
 * 
More Unsullied army are joining Daenerys Stormborn of the House Targaryen, the First of Her Name, the Unburnt, Queen of Meereen, 
Queen of the Andals and the Rhoynar and the First Men, Khaleesi of the Great Grass Sea, Breaker of Chains, and Mother of Dragons.
army have many soldiers each labelled with random numbers but in sorted order. 

Grey Worm has to now merge all army such that they still remain sorted.

Should he fail to do so Daenerys may punish him. He is worried. He needs your help!!

Input:
First line is T. Number of test cases.
For each test case:
First input number N. Number of new Unsullied army joining.
For N number of times, first input 'x' number of soldiers in each Unsullied army followed by 'x' random space separa
Print the labels of each soldier of new formed army in sorted order.

Constraints:

1<=T<=100

2<=N<=10
 
1<=x<=10000
 
1<='label'<=10^6


*/


#include<iostream>

using namespace std;

int main()
{
	int T;
	cin>>T;
	
	while(T--)
	{
		int N;
		cin>>N;
		int size = 0;
		
		long long arr[N][10005];
		
		for(int i=0;i<N;i++)
		{
			int x;
			cin>>x;
			size+=x;
			for(int j=0;j<x;j++)
				cin>>arr[i][j];
			arr[i][x] = 9999999;
		}
		
		long long ar1[N];
		for(int i=0;i<N;i++)
			ar1[i] = arr[i][0];
		
		int min = ar1[0];
		long long fin_arr[size+10];
		int point[10] = {0};
		
		
		for(int i=0;i<size;i++)
		{
			int pos = 0;
			min = ar1[0];
			for(int j=0;j<N;j++)
			{	
				if(min>ar1[j])
				{
					min = ar1[j];
					pos = j;
				}
			}
			
			fin_arr[i] = min;
			point[pos]++;
			ar1[pos] = arr[pos][point[pos]];
			
		}
		
		for(int i=0;i<size;i++)
			cout<<fin_arr[i]<<" ";
		cout<<endl;
		
	}
	
	return 0;
}
			
			
			
			
