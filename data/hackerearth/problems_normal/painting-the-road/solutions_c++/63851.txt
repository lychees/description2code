#include<iostream>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;

class point
{
public:
    int start;
    int end;
    int cost;
};

bool compare(const point& a,const point& b)
{
    if(a.start<b.start)
        return true;
    return false;
}

int main()
{
    int cases;
    cin>>cases;
    while(cases--)
    {
        int n,m;
        cin>>n>>m;
        vector<point> A(m);
        for(int i=0;i<m;i++)
        {
            cin>>A[i].start>>A[i].end>>A[i].cost;
        }
        sort(A.begin(),A.end(),compare);


        if(A[0].start!=0)
        {
            cout<<"-1"<<endl;
            continue;
        }
        vector<int> cache(n+1,INT_MAX);
        cache[0]=0;

        for(int i=0;i<m;i++)
        {
            for(int j=A[i].start+1;j<=A[i].end;j++)
            {
                if(cache[j]>(cache[A[i].start]+A[i].cost))
                {
                    for(int k=j;k<=A[i].end;k++)
                    {
                        cache[k]=cache[A[i].start]+A[i].cost;
                    }
                    break;
                }
            }
        }
        if(cache[n]==INT_MAX)
            cout<<"-1"<<endl;
        else
        cout<<cache[n]<<endl;
    }
}
