def bfs(l,visited,queue,height,destination):
	temp_queue=set()
	for current_island in queue:
		if destination==current_island:
			return height
		else:
			for x in l[current_island]:
				if visited[x]==0:
					temp_queue.add(x)
					visited[x]=1
						
				
					
					
	queue=list(temp_queue)
	#print queue
	return bfs(l,visited,queue,height+1,destination)		
	







t = input()
for _ in xrange(t):
	n,m = map(int,raw_input().split())
	l=[set() for i in xrange(n+1)]
	for i in xrange(m):
			x,y=map(int,raw_input().split())
			l[x].add(y)
			l[y].add(x)
	visited = [0]*(n+1)
	
	visited[1]=1
	queue=[]
	queue.append(1)
	print bfs(l,visited,queue,0,n)		
	
