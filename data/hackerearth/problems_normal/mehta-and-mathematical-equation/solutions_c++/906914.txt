//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000007
#define INF 2000000000
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

vector<int>v;
ll dp[65][3][2];
void binary(ll n)
{
  while(n)
  {
    v.pb(n%2);
    n/=2;
  }
}

ll f(int idx,int carry ,int occur )
{
  ll &ret=dp[idx][carry][occur];
  if(ret==-1)
  {  
    ret=0;
    if(idx==v.size())
    {
      if(carry==0 && occur )
      ret=1;
    }
    else
    {
      
      for(int x=0;x<=1;x++)
      {
        for(int y=0;y<=1;y++)
        {
          for(int z=0;z<=1;z++)
          {
            int newoccur=occur||((x&y)&z);
            if((x+y+z+carry)%2==v[idx])
            {
              ret+=f(idx+1,(x+y+z+carry)/2,newoccur);
              ret%=MOD;
            }
          }
        }
      }
      
    }
  }
  return ret;
}

int main()
{
  int t;
  si(t);
  while(t--)
  {
    ll n;
    sl(n);
    binary(n);
    memset(dp,-1,sizeof(dp));
    ll ans=f(0,0,0);
    pl(ans);
    nl;
    v.clear();
  }
}
