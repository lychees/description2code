#pragma region Template
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <vector>
#include <list>
#include <utility>
#include <functional>
#include <algorithm>
#include <set>
#include <stack>
#include <cassert>
#include <cctype>
#include <cmath>
#include <deque>
#include <iostream>
#include <string>
#include <queue>

using namespace std;

#define SZ(a)        ((int)a.size())
#define LENGTH(a)    ((int)a.length())
#define ALL(a)       a.begin(), a.end()
#define REP(i, n)    for(int i = 0; i < (n); i++)
#define INC(i, a, b) for(int i = (a); i <= (b); i++)
#define DEC(i, a, b) for(int i = (a); i >= (b); i--)
#define CLEAR(a, b)  memset(a, b, sizeof a)
#define XX           first
#define YY           second
#define si(a)        scanf("%d", &a)
#define ss(a)        scanf(" %s", a)
#define sll(a)       scanf("%lld", &a)

typedef long long int LL;

const double PI = acos(-1.0);
const double EPS = 1e-9;
const int    inf = 1000000000;
const LL     INF = ((LL)inf)*inf;
#pragma endregion

int main(void) {
	int lemur, banana; si(banana); si(lemur);
	int ans = min(banana, lemur-1);
	REP(changeL, lemur) {
		ans = min(ans, changeL + min(banana%(lemur+changeL), 
			(lemur+changeL) - (banana%(lemur+changeL))));
		ans = min(ans, changeL + min(banana%(lemur-changeL), 
			(lemur-changeL) - (banana%(lemur-changeL))));
	}
	printf("%d\n", ans);
	return 0;
}