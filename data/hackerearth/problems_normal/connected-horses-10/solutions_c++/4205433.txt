/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
ll fact[1000005];
ll parent[1000005];
bool visited[1000005];
bool arr[1005][1005];
ll sz[1000004];
ll dx[]={2,2,-2,-2,1,1,-1,-1};
ll dy[]={1,-1,1,-1,2,-2,2,-2};
void ini()
{
    for(ll i=0;i<=1000004;i++)
    {
        parent[i]=i;
        sz[i]=1;

    }
    memset(arr,0,sizeof(arr));


}
ll root(ll a)
{
    while(a!=parent[a])
    {
        parent[a]=parent[parent[a]];
        a=parent[a];
    }
    return a;
}
void uni(ll a,ll b)
{
    ll p=root(a);
    ll q=root(b);
    if(sz[p]>sz[q])
    {
        parent[q]=p;
        sz[p]+=sz[q];
        sz[q]=1;
    }
    else
    {
        parent[p]=q;
        sz[q]+=sz[p];
        sz[p]=1;
    }
}
void compute_fact()
{
    fact[0]=1;
    for(ll i=1;i<=1000004;i++)
    {
        fact[i]=(fact[i-1]*i)%mod;
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll t;
    cin>>t;
    compute_fact();
    while(t--)
    {
        ini();
        ll n,m,q;
        cin>>n>>m>>q;
        ll max1=0;

        for(ll i=0;i<q;i++)
        {
            ll a,b;
            cin>>a>>b;
            arr[a][b]=true;
            max1=max(a*m+b,max1);
        }
        for(ll i=1;i<=n;i++)
        {
            for(ll j=1;j<=m;j++)
            {
                if(arr[i][j]==true)
                {
                    for(ll k=0;k<8;k++)
                    {
                        ll x=i+dx[k];
                        ll y=j+dy[k];
                        if(x>=1 && x<=n && y>=1 && y<=m)
                        {
                            if(arr[x][y]==true)
                            {
                                ll index1=i*m+j;
                                ll index2=x*m+y;
                                if(root(index1)!=root(index2))
                                   uni(index1,index2);
                            }
                        }
                    }
                }
            }
        }
        ll ans=1;
        for(ll i=1;i<=max1;i++)
        {
            ans=(ans*fact[sz[i]])%mod;
        }

        cout<<ans<<"\n";
    }
}
