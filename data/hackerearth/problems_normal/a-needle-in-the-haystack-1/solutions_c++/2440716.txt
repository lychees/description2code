#include <iostream>
#include<map>
using namespace std;

int main()
{
    int T;
    cin>>T;
    while(T--) {
    	string s1,s2;
    	cin>>s1>>s2;
    	map<char,int> m;
    	const char*p = s1.c_str();
    	while(*p != '\0') {
    		m[*p]+=1;
    		p++;
    	}
    	const char* p1 = s2.c_str();
    	
    	int n = s1.length();
    	map<char,int> m1;
    	for(int i=0; i< n;i++) {
    		m1[*(p1+i)]+=1;	
    	}
    	int i=n;
    	bool flag1=true;
    	while(true) {
    	    bool flag=true;
    		if(m1.size() == m.size()) {
    			for(map<char,int>::iterator it=m.begin();it!=m.end();it++) {
    				map<char,int>::iterator it1 =m1.find(it->first);
    				if(it1==m1.end() ||it1->second != it->second) {
    					flag = false;
    					break;
    				}
    			}
    			if(flag) {
    				flag1 =false;
    				cout<<"YES\n";
    				break;
    			}
    		} 
    		if(i>s2.length()) {
    			break;
    		}
    		int index = i-n;
    		m1[*(p1+index)]-=1;
    		if(m1[*(p1+index)] ==0) {
   				m1.erase(*(p1+index));
   			}
   			m1[*(p1+i)]+=1;	
   			i++;
    	}
    	if(flag1) 
    		cout<<"NO\n";
    	
    }
    return 0;
}
