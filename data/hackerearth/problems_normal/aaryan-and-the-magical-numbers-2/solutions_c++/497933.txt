#include <iostream>
#include<stack>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<stdio.h>
#include<algorithm>
#include <string>
#include <cstring>
using namespace std;

#define gc getchar
#define pc(x) putchar
#define pi(n) printf("%d",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
inline int sn()
{
    int n=0;
    int ch=gc();
    while( ch <48 )ch=gc();
    while( ch >47 )
    n = (n<<3)+(n<<1) + ch-'0', ch=gc();
    return n;
}

vector<int> arr(150,0);
vector<int> arr1(150,0);
void partition(int low,int high);
void mergeSort(int low,int mid,int high);
void partition(int low,int high)
{
    int mid;
    if(low<high){
         mid=(low+high)/2;
         partition(low,mid);
         partition(mid+1,high);
         mergeSort(low,mid,high);
    }
}

void mergeSort(int low,int mid,int high)
{

    int i,m,k,l,temp[150],temp1[150];

    l=low;
    i=low;
    m=mid+1;

    while((l<=mid)&&(m<=high)){

         if(arr[l]<=arr[m]){
             temp[i]=arr[l];
             temp1[i]=arr1[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             temp1[i]=arr1[m];
             m++;
         }
         i++;
    }

    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             temp1[i]=arr1[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             temp1[i]=arr1[k];
             i++;
         }
    }

    for(k=low;k<=high;k++){
         arr[k]=temp[k];
         arr1[k]=temp1[k];
    }
}


int main()
{
    int t=sn();
    int x[20];
    x[0]=0;
    x[1]=1;
    x[2]=2;
    x[3]=2;
    x[4]=2;
    x[5]=3;
    x[6]=3;
    x[7]=4;
    x[8]=4;
    x[9]=5;
    while(t--)
    {
        int i;
        long long n,m,a=1,ans=-1;
        vector<int> d;
        scanf("%lld",&n);
        m=n;
        while(n!=0)
        {
            d.push_back(n%10);
            n/=10;
        }
        int l=d.size();
       rep(i,l-1)
       {
           a*=6;
       }
       for(i=l-1;i>=0;i--)
       {
           ans+=x[d[i]]*a;
           a/=6;
           if(d[i]==2 || d[i]==3 || d[i]==5 || d[i]==7) break;
       }
       if(i<0) ans++;
       printf("%lld\n",m-ans);
    }
    return 0;
}
