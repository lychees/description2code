#include<bits/stdc++.h>

using namespace std;

#define MAXN 1000111
#define sd(x) scanf("%d", &x)

int a[MAXN] = {0};
multiset<int> s;
multiset<int>::iterator it;

inline void solve(){
    int n, p, i, j, k, ans;
    sd(n); sd(p);
    for(i = 0; i < n; i++){
        scanf("%d", &a[i]);
    }
    sort(a, a + n);
    i = 0;
    s.clear();
    while(i < n){
        j = i + 1;
        while(j < n){
            if(a[j] != a[i]){
                break;
            }
            j++;
        }
        s.insert(i - j);
        i = j;
    }
    ans = 0;
    while(int(s.size()) >= p){
        for(i = 0; i < p; i++){
            it = s.begin();
            a[i] = -(*it);
            s.erase(it);
        }
        for(i = 0; i < p; i++){
            if(a[i] != 1){
                s.insert(-a[i] + 1);
            }
        }
        ans++;
    }
    cout<<ans<<endl;
    return ;
}

int main(){
    int t;
    sd(t);
    while(t--){
        solve();
    }
    return 0;
}
