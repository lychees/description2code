#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long ll;

int main() {
	int T, n, arr[101];
	bool subsetSum[10001][101];
	int maxSum;
	cin>>T;
	
	while(T--) {
		cin>>n;
		memset(subsetSum, 0, 10001*101*sizeof(bool));
		
		maxSum = 0;
		for(int i=0; i<n; i++) {
			cin>>arr[i];
			maxSum += arr[i];
		}
		sort(arr, arr+n);
		
		for(int i=0; i<=n; i++)
			subsetSum[0][i] = true;
			
		for(int i=1; i<=maxSum; i++)
			subsetSum[i][0] = false;
		
		int count = 1;	// for 1
		bool found = false;
		for(int i=1; i<=maxSum; i++) {
			found = false;
			for(int j=1; j<=n; j++) {
				subsetSum[i][j] = subsetSum[i][j-1];
				
				if(i >= arr[j-1])
					subsetSum[i][j] = subsetSum[i][j] || subsetSum[i - arr[j-1]][j-1];
				
				if(!found && subsetSum[i][j]) {
					found = true;
					count++;
				}
			}
		}
		
		cout<<count<<"\n";
	}
	
	return 0;
}