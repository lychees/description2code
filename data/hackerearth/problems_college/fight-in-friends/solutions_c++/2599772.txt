#include<iostream>
#include<stdlib.h>
#include<queue>
#define pb push_back
#define mp make_pair
#define M 1000000007
using namespace std;
	
#define gc getchar_unlocked
void scan(int &x)   // works fine with +ve and -ve as well
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

queue<pair<int,int> > q;
int mat[1003][1003]={0},flg=0;
int n,m,a,b,x,y,visited[100005]={0};
vector<int> vec[100005];
 
void bfs()
{
	while(!q.empty())
	{
		pair<int,int> pr=q.front();
		q.pop();
		visited[pr.first]=1;

		for(int i = 0; i < (int)vec[pr.first].size(); ++i)
		{
			if(i==vec[pr.first][i])
				continue;

			if((!visited[vec[pr.first][i]])&&(mat[pr.first][vec[pr.first][i]]==0))
			{
				if(vec[pr.first][i]==b)
				{
					cout<<pr.second+1;
					flg=1;
					return;
				}
				q.push(mp(vec[pr.first][i],pr.second+1));
			}
		}
	}
}

int main()
{
	cin>>n>>m>>a>>b;

	while(m--)
	{
		scan(x);
		scan(y);		
		mat[x][y]=1;
		mat[y][x]=1;
	}	

	if(a==b)
	{
		cout<<0;
		return 0;
	}

	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= n; ++j)
			if(mat[i][j]==0)
				vec[i].pb(j);
	
	q.push(mp(a,0));
	bfs();
	if(flg==0)
		cout<<-1;
	return 0;
}
