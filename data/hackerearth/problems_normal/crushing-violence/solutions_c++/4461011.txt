#include <iostream>
#include<set>
#include<vector>
using namespace std;

int main()
{
    int t;
    cin>>t;
    while(t>0)
    {
    	int n;
    	cin>>n;
    	vector<int> b;
    	vector<int> g;
    	b.resize(n+1);
    	g.resize(n+1);
    	for(int i=1;i<=n;i++)
    		cin>>b[i];
    	for(int i=1;i<=n;i++)
    		cin>>g[i];
    	int cnt=0;
    	int counter=0;
    	multiset<pair<int,int> > myset;
    	vector<int> flag;
    	flag.assign(n+1,0);
    	for(int i=1;i<=n;i++)
    	{
    		int temp=b[i];
    		temp=g[temp];
    		if(temp==i)
    		{
    			// do nothing
    		}
    		else
    		{
    			myset.insert(make_pair(i,temp));
    			flag[temp]++;
    			cnt=max(cnt,flag[temp]);
    			if(myset.find(make_pair(temp,i))!=myset.end())
    			{
    				counter++;
    			}
    		}
    	}
    	myset.clear();
    	flag.assign(n+1,0);
    	for(int i=1;i<=n;i++)
    	{
    		int temp=g[i];
    		temp=b[temp];
    		if(temp==i)
    		{
    			// do nothing
    		}
    		else
    		{
    			myset.insert(make_pair(i,temp));
    			flag[temp]++;
    			cnt=max(cnt,flag[temp]);
    			if(myset.find(make_pair(temp,i))!=myset.end())
    			{
    				counter++;
    			}
    		}
    	}
    	cout<<cnt<<" "<<counter<<endl;
    	t--;
    	
    }
}
