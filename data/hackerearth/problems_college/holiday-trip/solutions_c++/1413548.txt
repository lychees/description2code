#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
#include<queue>
using namespace std;
vector<int> v[2001];
int lev[2001],mark[2001];

void bfs(int cur)
{
	int i,j;
	queue<int> q;
	q.push(cur);
	while(q.size()!=0)
	{
		j=q.front();
		q.pop();
		mark[j]=1;
		for(i=0;i<v[j].size();i++)
		{
			if(mark[v[j][i]]==0)
			{
				lev[v[j][i]]=lev[j]+1;
				q.push(v[j][i]);
			}
		}
	}
}

int main()
{
//	freopen("in.txt","r",stdin);
	int t,n,a,b,i,j;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for(i=0;i<n;i++)
		{
			v[i].clear();
			lev[i]=0;
			mark[i]=0;
		}
		for(i=0;i<n-1;i++)
		{
			scanf("%d %d",&a,&b);
			v[a].push_back(b);
			v[b].push_back(a);
		}
		a=-1;
		bfs(0);
		for(i=0;i<n;i++)
		{
			if(lev[i]>a)
			{
				a=lev[i];
				b=i;
			}
		}
		for(i=0;i<n;i++)
		{
			lev[i]=0;
			mark[i]=0;
		}
		bfs(b);
		a=-1;
		for(i=0;i<n;i++)
			a=max(a,lev[i]);
		printf("%d\n",a+1);
	}
	return 0;
}