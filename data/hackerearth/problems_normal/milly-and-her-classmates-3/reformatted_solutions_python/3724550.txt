

def indx(h):

    i = 0
    L = len(h)

    while ((i < L) and (h[i] < h[i+1])):
        i = i+1
    j = L-1

    while ((j >= 0) and (h[j] > h[j-1])):
        j = j-1

    return (i, j)


def rev(h, i, j):
    f = i
    l = j

    while (f < l):
        temp = h[f]
        h[f] = h[l]
        h[l] = temp
        f = f+1
        l = l-1


def is_sorted(h):
    L = len(h)
    if (L == 1):
        return True

    i = 0
    while ((i < L-1) and (h[i] < h[i+1])):
        i = i+1

    if (i == L-1):
        return True

    return False


T = int(raw_input())

while (T > 0):
    N = int(raw_input())
    h = map(int, raw_input().split())

    if (is_sorted(h)):
        print -1, -1
        T = T-1
        continue

    else:
        (i, j) = indx(h)
        rev(h, i, j)

        if (is_sorted(h)):
            print i+1, j+1
        else:
            print -1, -1
    T = T-1
