#include<bits/stdc++.h>
#define mod 1000000007
#define maxN 100003
using namespace std;
long long fact[100005], invfact[100005];

long long mulMod( long long x, long long y ){
	long long ans = 0;
	
	while( y ){
		if( y & 1 ){	
			ans += x;
			if( ans >= mod )	ans -= mod;
		}
		
		x += x;
		if( x >= mod )	x-= mod;
		y = y >> 1;
	}
	
	return ans;
}

long long powMod( long long x, long long y ){
	long long ans = 1;
	
	while( y ){
		if( y & 1 )	ans = ( ans * x ) % mod;  //mulMod( ans, x );
		x = ( x * x ) % mod;	//mulMod( x, x );
		y = y >> 1;
	}
	
	return ans;
}


long long inv( long long x ){
	return powMod( x, mod -2 );
}

void init(){
	fact[0] = 1; fact[1] = 1;
	invfact[0] = 1; invfact[1] = 1;
	
	for( int i = 2; i <= maxN; i++ ){
		fact[i] = mulMod( fact[i-1], i );
		//invfact[i] = inv( fact[i] );
	}
}

long long ncr( int n, int r ){
	if( r > n || r < 0 )	return 0;
	return ( fact[n] * ( ( inv( fact[r] ) * inv( fact[n-r] ) ) % mod ) ) % mod;
}

int main() {
	int t, n, k;
	long long ans;
	long long a[maxN];
	scanf( "%d", &t );
	init();
	
	while( t-- ){
		ans = 0;
		scanf( "%d %d", &n, &k );
		for( int i = 1; i <= n; i++ )	scanf( "%lld", a+i );
		sort( a + 1, a + n + 1);
		
		for( int i = 1; i <= n - k + 1; i++ ){
			ans += ( ncr( n-i, k - 1 ) * a[i] ) % mod;
			if( ans >= mod )	ans -= mod;
			//cout<<ans<<" ans  "<<endl;
		}
		
		printf( "%lld\n", ans );
	}
	
}