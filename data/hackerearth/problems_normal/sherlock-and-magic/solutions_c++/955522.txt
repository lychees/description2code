#include <bits/stdc++.h>
#define MP make_pair

using namespace std;

typedef struct criminal
{
	int x,y,dx,dy;
	bool vanish;
}criminal;

void cal1()
{
	int N;
	cin>>N;
	criminal criminals[55];
	int vcnt=0;
	for(int j=0; j<N; j++)
	{
		int x,y;
		char dir;
		cin>>x>>y>>dir;
		criminals[j].x = 2*x;
		criminals[j].y = 2*y;
		criminals[j].vanish = 0;
		
		switch(dir)
		{
			case 'N':
				criminals[j].dx = 0;
				criminals[j].dy = 1;
				break;
			case 'S':
				criminals[j].dx = 0;
				criminals[j].dy = -1;
				break;
			case 'E':
				criminals[j].dx = 1;
				criminals[j].dy = 0;
				break;
			case 'W':
				criminals[j].dx = -1;
				criminals[j].dy = 0;
				break;
		}
	}
	
	if(N==1)
	{
		cout<<"1"<<endl;
		return;
	}    
			
	
	for(int i=0;i<=4005;i++)
	{
		for(int j=0;j<N;j++)
		{
			if(criminals[j].vanish) 
				continue;
			
			int curx=criminals[j].x;
			int cury=criminals[j].y;
			bool flag=0;
			for(int k=j+1;k<N;k++)
			{
				if(criminals[k].vanish==0 && criminals[k].x==curx && criminals[k].y==cury)
				{
					flag=1;
					criminals[k].vanish=1;
					vcnt++;
				}
			}
			if(flag==1)
			{
				criminals[j].vanish=1;
				vcnt++;
			}
		}
		for(int k=0;k<N;k++)
		{
			if(criminals[k].vanish==0)
			{
				criminals[k].x=criminals[k].x+criminals[k].dx;
				criminals[k].y=criminals[k].y+criminals[k].dy;
			}
		}				
		if(vcnt==N)
			break;
	}
	cout<<N-vcnt<<endl;
}


int main()
{
    int notc; cin>>notc;
    for(int i=0; i<notc; i++) cal1();
	return 0;
}
