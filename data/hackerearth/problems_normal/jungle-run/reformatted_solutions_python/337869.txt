import sys
from collections import deque


def solve():
    a = []
    lines = sys.stdin.readlines()
    n = int(lines[0])
    lines = lines[1:]
    for line in lines:
        a.append(line.split())
    for i in xrange(n):
        for j in xrange(n):
            if a[i][j] == 'S':
                start = [i, j]
            elif a[i][j] == 'E':
                end = [i, j]
    print bfs(a, start, end, n)


def bfs(a, start, end, n):
    q = deque()
    cnt = 0
    q.append(start)
    cnt = 1
    dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]]
    vis = []
    for i in xrange(n):
        vis.append([0]*n)
    while cnt > 0:
        point = q.popleft()
        cnt -= 1
        for p in dirs:
            x = (point[0]+p[0])
            y = (point[1]+p[1])
            if x >= 0 and x < n and y >= 0 and y < n:
                if vis[x][y] == 0 and (a[x][y] == 'P' or a[x][y] == 'E'):
                    if x == end[0] and y == end[1]:
                        return vis[point[0]][point[1]]+1
                    q.append([x, y])
                    vis[x][y] = vis[point[0]][point[1]]+1
                    cnt += 1
    return vis[end[0]][end[1]]


solve()
