#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007

int dp[501][101];
int gcd [101][101];
int cal_gcd (int a, int b){
	while (a % b != 0){
		int c = b;
		b = a % b;
		a = c;
	}
	return b;
}
void cal_all_gcd (){
	for (int i = 1; i < 101; i++){
		for (int j = 1; j < 101; j++)
			gcd[i][j] = cal_gcd (i, j);
	}
}
vector <int> vec;
int main()
{
	int n, v, mx = -1;
	cal_all_gcd ();
	scanf ("%d", &n);
	vec.resize (n);
	for (int i = 0; i < n; i++){
		scanf ("%d", &vec[i]);
		mx = max (mx, vec[i]);
	}
	long long int ans = 0;
	for (int i = 0; i < n; i++){
		dp[i][vec[i]] = 1;
		if (vec[i] == 1) ans++;
	}
	for (int i = 0; i < n; i++){
		for (int j = 0; j < i; j++){
			if (vec[i] > vec[j]){
				for (int k = 1; k <= mx; k++){
					if ((v = gcd [vec[i]][k]) == 1){
						ans += dp[j][k];
						if (ans >= MOD) ans %= MOD;
					}
					dp[i][v] += dp[j][k];
					if (dp[i][v] >= MOD) dp[i][v] %= MOD;
				}
			}
		}
	}
	printf ("%lld\n", ans);
    return 0;
}
