#include <iostream>
#include <bits/stdc++.h>
#define forl(i,a,b) for ( i = a; i < b; i++)
#define fore(i,a,b) for ( i = a; i <= b; i++)
#define forrev(i,a,b) for ( i = a; i >= b; i--)
#define ull unsigned long long int
#define ll long long int
using namespace std;

struct ListNode{
	 int val;
	 int wt;
     ListNode *next;
     ListNode *last;
     ListNode(int x,int y) : val(x), wt(y), next(NULL), last(NULL) {}
};


int main()
{
	int test,t;
	cin>>test;
	forl(t,0,test)
	{
		
		int i,n;
		cin>>n;
		if(n==1){
			cout<<0<<" "<<0<<endl;
			continue;
		}
		vector<ListNode *> listP(n+1,NULL);
		forl(i,1,n)
		{
			int e1,e2,w;
			cin>>e1;
			cin>>e2;
			cin>>w;
			
			if (listP[e1]==NULL)
			{
				listP[e1]=new ListNode(e1,0);
			}
			ListNode *temp=new ListNode(e2,w);
			if((listP[e1]->last)==NULL)
			{
				listP[e1]->next=temp;
				listP[e1]->last=temp;
			}
			else
			{
				(listP[e1]->last)->next=temp;
				listP[e1]->last=temp;
				
			}
			
			if (listP[e2]==NULL)
			{
				listP[e2]=new ListNode(e2,0);
			}
			temp=new ListNode(e1,w);
			if((listP[e2]->last)==NULL)
			{
				listP[e2]->next=temp;
				listP[e2]->last=temp;
			}
			else
			{
				(listP[e2]->last)->next=temp;
				listP[e2]->last=temp;
				
			}
			
		}
		
		//cout<<"Here";
		
		int max=0;
		ListNode *first;
		vector<bool> isSeen(n+1,false);
		queue<ListNode *> q;
		//listP[1]->wt=1;
		q.push(listP[1]);
		isSeen[1]=true;
		while(!q.empty())
		{
			ListNode *temp=q.front();
			int weight=temp->wt;
			q.pop();
			while(temp->next!=NULL)
			{
				temp=temp->next;
				if(isSeen[temp->val])
					continue;
				isSeen[temp->val]=true;	
				ListNode* t=listP[(temp->val)];
				//cout<<temp->wt;
				t->wt=(temp->wt)+weight;
				if(max<=(t->wt)){
					first=t;
					max=t->wt;
				}
				q.push(t);	
			}
		}
		
		
		vector<bool> isSeen2(n+1,false);
		forl(i,1,n+1)
		{
			if(listP[i]!=NULL)
				listP[i]->wt=0;
		}
		
		q.push(first);
		isSeen2[first->val]=true;
		while(!q.empty())
		{
			ListNode *temp=q.front();
			int weight=temp->wt;
			q.pop();
			while(temp->next!=NULL)
			{
				temp=temp->next;
				if(isSeen2[temp->val])
					continue;
				isSeen2[temp->val]=true;	
				ListNode* t=listP[(temp->val)];
				//cout<<temp->wt;
				t->wt=(temp->wt)+weight;
				if(max<=(t->wt)){
					//first=t;
					max=t->wt;
				}
				q.push(t);	
			}
		}
		
		
		int cost=0;
		if(max<=100)
			cost=0;
		else if(max<=1000)
			cost=100;
		else if(max<=10000)
			cost=1000;
		else
			cost=10000;
			
		
		cout<<cost<<" "<<max<<endl;
		
		
		
		
	}
    //cout << "Hello World!" << endl;
    return 0;
}
