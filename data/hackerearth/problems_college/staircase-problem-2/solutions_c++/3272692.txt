#include <bits/stdc++.h>


using namespace std;

#define mp make_pair
#define pb push_back

vector<int> vec, vec2;

int prime[1000009];

#define true 0
#define false 1

void markPowers(int x) {

    int i = 2;

    while(i*x <= 100001) {
        prime[i*x] = 1;
        i++;
    }
}

void getPrime(int limit) {
    int cnt = 2;


    for(long long int i = 2; i <= limit; i++) {
        if(prime[i] == 0) {

            cnt++;
            cout << i <<endl;
            markPowers(i);

        }
    }

}


int main(){

    int t, n;

    //getPrime(101);

    long long sum = 0;

    for(int i = 1; i <= 1000; i++) {
        sum += i;
        vec.pb(sum);
    }
    sort(vec.begin(), vec.end());

    sum  = 0;

    for(int i = 2; i <= 1000; i++) {
        sum += i;
        vec2.pb(sum);
    }
    sort(vec2.begin(), vec2.end());


    cin >> t;

    while(t--) {
        cin >> n;
        vector<int>::iterator it, it2;

     /*   prime[1] = 0;

        if(prime[n] == 0) {*/

            it = lower_bound(vec.begin(), vec.end(), n);
           // cout <<"above called "<< *it<<" at index "<<it-vec.begin()<<endl;

            it2 = lower_bound(vec2.begin(), vec2.end(), n);
           // cout <<"below not prime called "<< *it<<" at index "<<it-vec2.begin()<<endl;

            cout << min((it - vec.begin()), it2 - vec2.begin()) + 1 <<endl;
       /* }
        else {
            it = lower_bound(vec2.begin(), vec2.end(), n);
            cout <<"below not prime called "<< *it<<" at index "<<it-vec2.begin()<<endl;
        }*/
    }


}
