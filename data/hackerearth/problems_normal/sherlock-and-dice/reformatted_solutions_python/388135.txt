import sys
import math


def nCr(n, r):
    f = math.factorial
    return f(n)/f(r)/f(n-r)


def precision(f1):
    return float('%0.3f' % f1)


def scinot(f1):
    i = 0
    while f1 < 1 and f1 > 0:
        i += 1
        f1 = f1*10
    return f1, i


def func(n, p, k):
    sum1 = 0
    mul = 1
    for i in range(0, k):
        if (n-1-(i*p)) < k-1:
            break
        m = (n-1-i*p)
        sum1 += mul * (nCr(k, i)*nCr(m, k-1))
        mul *= -1
    return sum1


num_tries = int(raw_input())
l1 = []

for i in range(1, num_tries+1):
    num_dice, num_faces, sum_num = map(int, sys.stdin.readline().split())

    sample_space = num_faces**num_dice

    maxSum = num_dice * num_faces
    minSum = num_dice

    if sum_num < minSum or sum_num > maxSum:
        probability = 0.0
    else:
        probability = func(sum_num, num_faces, num_dice) / float(sample_space)

    l1.append(probability)


for fraction in l1:
    a, b = scinot(fraction)
    print '%0.3f %d' % (a, b)
