#include<cstring>>
#include<iostream>
#include<vector>
#include<cstdio>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<algorithm>
using namespace std;
int arr[1000004]={0};
void markMultiples(int arr[], int a, int n)
{
    int i = 1, num;
    while ( (num = i*a) <= n )
    {
    	if(arr[num]==0)
        {
        	arr[ num ] = a;
        } // minus 1 because index starts from 0.
        ++i;
    }
}
 int arr1[1000005]={0};
void sumdiv()
{
	for(int i=2;i<=100000;i++)
	{
		long x=1,j;
		for( j=2;j*j<i;j++)
		{
			if(i%j==0)
			{
				x+=j;
				x+=i/j;
			}
		}
		if(j*j==i)
		x+=j;
		arr1[i]=x;
	}
}
// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0
        //bool arr[n];
        //memset(arr, 0, sizeof(arr));
 
        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=2; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                //printf("%d ", i+1);
                markMultiples(arr, i, n);
            }
        }
    }
}
int main() {
	sumdiv();
	SieveOfEratosthenes(1000000);
	int ans[1000005]={0};
	for(int i=1;i<=1000000;i++)
	{
		arr[i]+=arr[i-1];
		arr1[i]+=arr1[i-1];
		ans[i]=(arr[i]+arr1[i])%i;
	}
	int t,n;
	cin>>t;
	while(t--)
	{
		cin>>n;
		cout<<ans[n]<<endl;
	}
	return 0;
}