#include<bits/stdc++.h>
#define gc getchar_unlocked
#define pc putchar_unlocked
#define pb push_back
#define MOD 1000000007
const int MAX=200001;
typedef long long int ll;
#define ms(B,n) memset(B,0,sizeof(long long)*n)
using namespace std;
inline void rdint(int &n) { n=0; char c=gc(); while(c < '0' or c > '9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void rdlong(ll &n) { n=0; char c=gc(); while(c < '0' or c > '9') c=gc(); while(c>='0' and c<='9') { n=(n<<3)+(n<<1)+c-'0'; c=gc(); }}
inline void print(int a){ char s[20];int i=0;do{s[i++]=a%10+'0';a/=10;}while(a);i--;while(i>=0)pc(s[i--]);pc('\n'); }
inline void prlong(ll a){ char s[20];int i=0;do{s[i++]=a%10+'0';a/=10;}while(a);i--;while(i>=0)pc(s[i--]);pc('\n'); }
inline ll power(ll a, ll b) { ll x=1, y=a; while(b>0) { if(b&1) x*=y; y*=y; b/=2;} return x; }
inline map<int,ll> prime(int a) {
	map<int,ll> m;
	for(int i=2;i<=sqrt(a);i++) {
		int cnt=0;
		if(!(a%i)) {
			while(!(a%i)) {
				cnt++;
				a/=i;
			}
		}
		m[i]=cnt;
	}
	if(a>1) m[a]=1;
	return m;
}
int main()
{
	int t;
	rdint(t);
	while(t--) {
		int a,b,c,d;
		rdint(a); rdint(b); rdint(c); rdint(d);
		map<int,ll> x=prime(a), y=prime(c);
		map<int,ll>::iterator p;
		int flag=1;
		for(p=y.begin();p!=y.end();p++)
			if((p->second)*d > (x[p->first])*b) flag=0;
		if(!flag) cout<<"Not divisible\n";
		else cout<<"Divisible\n";
	}
	return 0;
}