#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<fstream>
#include<cmath>
#include<iomanip>
#include<time.h>
#include<stack>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 2000000007
#define mod 1000000007
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 500010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

char s[N][12];int a[N],p[N],t[N<<2],v[N];
void build(int p,int l,int r)
{
	t[p]=r-l+1;
	if(l==r){return;}
	int m=(l+r)>>1;
	build(p<<1,l,m);build(p<<1|1,m+1,r);
}
void upd(int p,int l,int r,int x)
{
	t[p]--;
	if(l==r)return;
	int m=(l+r)>>1;
	if(x<=m)upd(p<<1,l,m,x);
	else upd(p<<1|1,m+1,r,x);
}
int query(int p,int l,int r,int k)
{
	if(l==r)return l;
	int m=(l+r)>>1;
	if(t[p<<1]>=k)return query(p<<1,l,m,k);
	else return query(p<<1|1,m+1,r,k-t[p<<1]);
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int i,T,n=0,k,j,m=0;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&n);
		for(i=0;i<n;i++)scanf("%s",s[i]),v[i]=0;
		for(i=0;i<n;i++)scanf("%d",&a[i]);
		for(i=0;i<n-1;i++)scanf("%d",&p[i]);
		build(1,0,n-1);
		int mx=0;
		for(i=0;i<n-1;i++)
		{
			j=p[i];
			k=query(1,0,n-1,j);mx=max(mx,a[k]);v[k]=1;
			printf("%s %d\n",s[k],mx);
			upd(1,0,n-1,k);
		}
		for(i=0;i<n;i++)
		if(!v[i])break;
		mx=max(mx,a[i]);
		printf("%s %d\n",s[i],mx);
	}
    return 0;
}