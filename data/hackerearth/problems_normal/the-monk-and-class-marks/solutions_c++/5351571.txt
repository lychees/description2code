#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
using namespace std;

//bool myfunction() (pair<int,string> &p1,pair<int,string> &p2);

bool compare(const pair<int,string> &p1,const pair<int,string> &p2) {
	if(p1.first!=p2.first)
	{
		return p1.first > p2.first; //Sort according to higher mark
	}
	else
	{
		return p1.second<p2.second; //Sort lexicographically if equal mark
	}
}

int main()
{
	int N;
	cin >> N;
   	vector<pair<int,string>> M;
    //priority_queue<int> P;
    string name;
    int marks;
    vector<pair<int,string>>::iterator it;
    int i;
    pair<int,string> p;
    for(i=0;i<N;i++)
    {
    	cin >> name >> marks;
    	p = make_pair(marks,name);
    	M.push_back(p);
    	//P.push(marks);
    }
    sort(M.begin(),M.end(),compare);
    for(it=M.begin();it!=M.end();++it)
    {
    	//marks = P.top();
    	//P.pop();
    	//it = find(M.begin(),M.end(),marks);
    	cout << it->second << " " << it->first << endl;
    }
    return 0;
}
