#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
using namespace std;
string longestPalindrome(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int s_size = s.size();
        int new_s_size = s_size * 2 + 2;

        // Build a new String to solve the issue
        // caused by even palindrome string
        char new_s[new_s_size];
        new_s[0] = '$';
        new_s[1] = '#';
        for (int i = 0; i < s_size; ++i) {
            new_s[2 * i + 2] = s[i];
            new_s[2 * i + 3] = '#';
        }

        // Traverse the string
        int max = 0;
        int id;
        // An array storing the longest palindrome
        // of a given center.
        int lengths[new_s_size];
        for (int i = 0; i < new_s_size; ++i) {
            if (max > i)
                lengths[i] = (lengths[2 * id - i] < max - i) ?
                              lengths[2 * id - i] : max - i;
            else
                lengths[i] = 1;

            while (new_s[i + lengths[i]] == new_s[i - lengths[i]]) {
                lengths[i]++;
            }

            // Here is the most interested part
            if (lengths[i] + i > max) {
                max = lengths[i] + i;
                id = i;
            }
        }

        int max_center = 0;
        int max_pal_len = 0;
        for (int i = 0; i < new_s_size; ++i) {
            if (lengths[i] - 1 > max_pal_len) {
                max_center = i / 2;
                max_pal_len = lengths[i] - 1;
            }
        }

        return s.substr(max_center - max_pal_len / 2 - max_pal_len % 2,
                        max_pal_len);
}
int main()
{
    int n;
    cin>>n;
    while(n--)
    {
        string s;
    cin>>s;
    int flag=0;
    int ln=longestPalindrome(s).length();
    if(ln==1)
    flag=1;
    for(int i=2;i<=sqrt(ln);i++)
    {
        if((ln%i)==0)
        {flag=1;break;}
    }
    if(flag==0)
    cout<<"YES\n";
    else
    cout<<"NO\n";
    }
    return 0;
}
