#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
using namespace std;
#define MAX 500003
int countt[MAX];
int ki[26];
int im[26];
char s[MAX];
int siz;
int b[MAX];
int lu[2];
int ok(){
	if (1){
		for (int i = 0; i < 26; i++){
			if (ki[i] != im[i]){
				return 0;
			}
		}
		return 1;
	}
	else{
		return 0;
	}
	return 0;
}
string k = "hackerearth";
int main(){
	scanf("%s", s);
	siz = strlen(s);
	for (int j = 0; j < siz; j++){
		b[j] = isupper(s[j]);
		if(b[j]){
			b[j]=1;
		}
		s[j] = tolower(s[j]);
	}
	for (int j = 0; j < k.size(); j++){
		ki[k[j] - 'a']++;
	}
	if (siz >= k.size()){
		for (int j = 0; j < k.size(); j++){
			im[s[j] - 'a']++;
			lu[b[j]]++;
		}
		countt[1] = ok();
		for (int p = k.size(); p < siz; p++){
			im[s[p] - 'a']++;
			lu[b[p]]++;
			im[s[p - k.size()] - 'a']--;
			lu[b[p - k.size()]]--;
			countt[p - k.size() + 2] = countt[p - k.size() + 1] + ok();
		}
	}
	int q;
	int l;
	int r;
	scanf("%d", &q);
	while (q--){
		scanf("%d%d", &l, &r);
		l--;
		r--;
		if (l + k.size() - 1 > r){
			printf("0\n");
		}
		else{
			r -= k.size();
			r++;
			if (l > r){
				printf("0\n");
			}
			else{
				printf("%d\n", countt[r+1] - countt[l]);
			}
		}
	}
	return 0;
}