#include <bits/stdc++.h>
using namespace std;
const int MAXN = 100 * 1000 + 7;
vector<int>g[MAXN], gg[MAXN];
bool used[MAXN];
int color[MAXN];
int cnt[1000007];
vector<int> order;
void dfs1(int v)
{
    used[v] = true;
    for (int i = 0; i < (int)g[v].size(); i++)
    {
        int to = g[v][i];
        if (!used[to])
        {
            dfs1(to);
        }
    }
    order.push_back(v);
}
void dfs2(int v, int c)
{
    color[v] = c;
    for (int i = 0; i < (int)gg[v].size(); i++)
    {
        int to = gg[v][i];
        if (color[to] == 0)
        {
            dfs2(to, c);
        }
    }
}
int main()
{
    int n, m;
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= m; i++)
    {
        int u, v;
        scanf("%d%d", &u, &v);
        g[u].push_back(v);
        gg[v].push_back(u);
    }
    for (int i = 1; i <= n; i++)
    {
        if (!used[i])
        {
            dfs1(i);
        }
    }
    int tmp = 1;
    for (int i = (int)order.size() - 1; i >= 0; i--)
    {
        int v = order[i];
        if (color[v] == 0)
        {
            dfs2(v, tmp);
            tmp++;
        }
    }
    for (int i = 1; i <= n; i++)
    {
        cnt[color[i]]++;
    }
    for (int i = 1; i <= n; i++)
    {
        int ans = 0;
        if (cnt[color[i]] > 1) ans = 1;
        printf("%d ", ans);
    }
    printf("\n");
}
