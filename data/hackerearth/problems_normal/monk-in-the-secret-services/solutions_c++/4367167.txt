#include <bits/stdc++.h>
using namespace std;

#define inf 99999
#define pb push_back

typedef long long ll;

typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;

class G_W
{
	
	int V;	
	vector< vector< pair<int,int> > > G;

	public:
	
	G_W(int v)
	{
		this->V=v;
		G.resize(v, vector<pair<int,int> >() );
	}
	
	void add_edge(int u,int v,int c)
	{
		G[u].pb(ii(v,c));
		G[v].pb(ii(u,c));
	}
	
	vector<int> dijkstra(int s)
	{
		vector<int> D(V,inf);
		
		priority_queue<ii,vector<ii>,greater<ii> > Q;
		int v,d;
		ii top;
		
		D[s]=0;
		
		Q.push(ii(0,s));

		while( !Q.empty() )
		{
			top=Q.top();
			Q.pop();

			v=top.second;
			d=top.first;

			if(d<=D[v])
			{
				for(int i=0;i<G[v].size();i++)
				{
					int cv,c;
					cv=G[v][i].first;
					c=G[v][i].second;
					
					if(D[cv]>D[v]+c)
					{
						D[cv]=D[v]+c;
						
						Q.push(ii(D[cv],cv));
					}
				}
			}
		}
		
		//int ans=INT_MIN;
		//for(int i=0;i<V;i++)
		//	cout<<D[i]<<" ";
		//D.clear();
		return D;
	}
	

};

int main()
{
    int n,m,t;
    cin>>t;
    
    int u,v,c,i,j;
    
    int a,s,h;
    
    while(t--)
    {
    	cin>>n>>m;
    	
    	G_W g(n);
    	
    	while(m--)
    	{
    		cin>>u>>v>>c;
    		g.add_edge(u-1,v-1,c);
    	}
    	
    	cin>>s>>a>>h;
    	
    	vector<int> t1,t2,t3;
    	t1=g.dijkstra(s-1);
    	t2=g.dijkstra(a-1);
    	t3=g.dijkstra(h-1);
    	
    	int m=INT_MIN;
    	
    	for(int i=0;i<n;i++)
    		if(i!=a-1&&i!=s-1&&i!=h-1)
    			m=max(m,t1[i]+2*t2[i]+t3[i]);
    	
    	t1.clear();
    	t2.clear();
    	t3.clear();
    	
    	cout<<m<<endl;
    
    	//for(int i=0;i<n;i++)
    	//	cout<<t1[i]<<" "<<t2[i]<<" "<<t3[i]<<endl;
    }
    return 0;
}
