#include<bits/stdc++.h>
using namespace std;
vector<string> vt;
set<string> st;
string target;
bool sol;
string diff(string major, string minor)
{
		int i;
		int fre1[26], fre2[26];
		memset(fre1,0,sizeof(fre1));
		memset(fre2,0,sizeof(fre2));
		for(i=0;i<major.size();++i)
				fre1[major[i]-'a']++;
		for(i=0;i<minor.size();++i)
				fre2[minor[i]-'a']++;
		string neg = "*";
		for(i=0;i<26;++i)
		{
				if(fre1[i] >= fre2[i])
				{
						fre1[i]-=fre2[i];
				}
				else return neg;
		}
		string res;
		char z;
		for(i=0;i<26;++i)
		{
				if(fre1[i])
				{
						int j;
						z = 'a'+i;
						for(j=0;j<fre1[i];++j)
						{
								res+=z;
						}
				}
		}
		return res;

}
void fun1(string cur,int pos)
{
		if(cur.size() > target.size()) return;
		if(pos == vt.size()/2) return;
		fun1(cur,pos+1);
		cur+=vt[pos];
		sort(cur.begin(),cur.end());
		st.insert(cur);
		fun1(cur,pos+1);
}
void fun2(string cur, int pos)
{
		if(sol) return;
		if(cur.size() > target.size()) return;
		if(pos == vt.size())
		{
				//if(cur.size() == 0) return;
				sort(cur.begin(),cur.end());
				string tmp = diff(target,cur);
				//cout<<"cur="<<cur<<" target="<<target<<" diff="<<tmp<<endl;
				if(tmp.size() == 0)
				{
						sol=true;
						return;
				}
				sort(tmp.begin(),tmp.end());
				if(st.find(tmp) != st.end())
						sol = true;
				return;
		}
		fun2(cur,pos+1);
		cur+=vt[pos];
		sort(cur.begin(),cur.end());
		fun2(cur,pos+1);
}
int main()
{
		int t;
		cin>>t;
		while(t--)
		{
				vt.clear();
				st.clear();
				int n;
				string str;
				cin>>n;
				int i;
				for(i=0;i<n;++i)
				{
						cin>>str;
						vt.push_back(str);
				}
				cin>>target;
				string cur;
				fun1(cur,0);
				set<string>::iterator it;
				//for(it=st.begin();it!=st.end();++it)
				//		cout<<*it<<" ";
				//cout<<endl;
				sol=false;
				cur="";
				fun2(cur,vt.size()/2);
				if(sol) puts("YES");
				else puts("NO");

		}
}
