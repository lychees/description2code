#include<bits/stdc++.h>
using namespace std;
#define MAX 1000000
#define ll long long int
#define S 1024*1024*30
char OUT[S],*optr,stk[20];
 
ll primes[MAX];
int pr;
int sieve[MAX];
vector<int> vt;
void siever(void)
{
		int i,j;
		pr = 0;
		for(i=2;i<MAX;++i)
		{
				if(sieve[i]==0)
				{
						primes[pr++] = i;
						for(j=i;j<MAX;j+=i)
						{
								sieve[j]=1;
						}
				}
		}
}
 
struct fastIO
{
        fastIO()
        {
                optr=OUT;
        }
        void pr(ll x)
        {
                ll y;
                int top=-1;
                while(x>=0)
                {
                        y=x/10;
                        stk[++top]=x-y*10+'0';
                        x=y;
                        if(x == 0) break;
                }
                while(top>=0) *optr++=stk[top--];
                *optr++='\n';
        }
};
fastIO io;
 
int main()
{
	
		int i,j;
		siever();
		//cout<<"siever-done\n";
		int tmp;
		double s = double(clock())/CLOCKS_PER_SEC;
		for(i=0;i<pr;++i)
		{
				if(primes[i]*primes[i+1] > 100000000) break;
				for(j=i+1;j<pr && primes[i]*primes[j]<=100000000;j++)
				{
						//cout<<"insert- "<<primes[i]<<"*"<<primes[j]<<endl;
						vt.push_back(primes[i]*primes[j]);
				}
				//cout<<"vts="<<vt.size()<<endl;
		}
		double e = double(clock())/CLOCKS_PER_SEC;
		//printf("time=%f\n",e-s);
		sort(vt.begin(),vt.end());
		int t;
		cin>>t;
		while(t--)
		{
				int l,r;
				cin>>l>>r;
				//vector<int>::iterator ib,ie;
				//io.pr(upper_bound(vt.begin(),vt.end(),r) - lower_bound(vt.begin(),vt.end(),l));
				cout<<upper_bound(vt.begin(),vt.end(),r) - lower_bound(vt.begin(),vt.end(),l)<<endl;
		}
		//fwrite(OUT, optr-OUT, 1, stdout);
        //cerr << cur << endl;
 
		return 0;
}