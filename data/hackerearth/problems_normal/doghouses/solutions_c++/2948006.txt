#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int main() {
	int N;
	while(~scanf("%d", &N)) {
		vector<int> Y(N);
		for(int i = 0; i < N; ++ i)
			scanf("%d", &Y[i]);
		int X = *max_element(all(Y));
		vector<vi> v(X+1);
		rep(i, N)
			v[Y[i]].push_back(i);
		int ans = 0;
		rer(x, 0, X) if(!v[x].empty()) {
			amax(ans, (int)v[x].size());
			int L = INF, R = -INF;
			rer(y, x + 1, X) {
				if(!v[y].empty()) {
					int t = 0;
					t += v[x].size();
					t += v[y].size();
					t += L < min(v[x].front(), v[y].front());
					t += max(v[x].back(), v[y].back()) < R;
					amax(ans, t);
				}
				for(int i : v[y]) {
					amin(L, i);
					amax(R, i);
				}
			}
		}
		printf("%d\n", ans);
	}
	return 0;
}
