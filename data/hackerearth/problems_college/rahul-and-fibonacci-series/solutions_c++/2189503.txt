#include<cstdio>
#include<map>
const long long int m = 1e9 + 7;
long long int z, n, i, x, fi[1000];
std::map<long long int, long long int>mp;

long long int potega(long long int a, long long int b)
{
  if (b == 0)
  {
    return 1;
  }
  
  long long int pom = potega(a, b / 2);
  pom *= pom;
  pom %= m;
  
  if (b % 2 == 1)
  {
    pom *= a;
  }
  return pom % m;
}

long long int non(long long int x)
{
  for(int i = 2; fi[i] <= x && i < 45; i++)
  {
    x++;
  }
  return x;
}

long long int fib(long long int f)
{
  if (mp.count(f) != 0)
  {
    return mp[f];
  }
  long long int w;
  if (f % 2 == 0)
  {
    w = fib((f / 2) + 1);
    w *= w;
    x = fib((f / 2) - 1);
    w -= x * x;
    w %= m;
    if (w < 0){w += m;}
    mp[f] = w;
    return w;
  }
  w = fib((f + 1) / 2);
  w *= w;
  w %= m;
  x = fib((f - 1) / 2) % m;
  w += x * x;
  w %= m;
  mp[f] = w;
  return w;
}

int main()
{
  scanf("%lld", &z);
  
  fi[0] = 0;
  fi[1] = 1;
  mp[0] = 0;
  mp[1] = 1;
  
  for(i = 2; fi[i - 1] + fi[i - 2] <= 9e8; i++)
  {
    fi[i] = fi[i - 1] + fi[i - 2];    
    mp[i] = fi[i];
  }
  
  while(z--)
  {
    scanf("%lld", &n);
    fib(n);
    printf("%lld\n", potega(non(n), fib(n)));    
  } 
  
return 0;
}