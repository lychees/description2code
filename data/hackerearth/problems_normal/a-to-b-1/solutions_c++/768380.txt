#include <cstdio>
#include <set>
#include <algorithm>
using namespace std;
const int MOD=1e9 + 7;
set<int> S;
long long mypow(int x,int b){
	if(x==1) return 1;
	if(b==0) return 1;
	if(b==1) return x%MOD;
	long long a=mypow(x,b/2);
	a=a*a;
	a%=MOD;
	if(b&1){
		a=a*x;
	}
	return a%MOD;
}

const int MAX=100005;
int arr[MAX];

int main()
{
    int N;
    scanf(" %d",&N);
    int i;
    long long prod=1;
    for(i=1;i<=N;i++) {
    	scanf(" %d",&arr[i]);
    	if(arr[i]==0) S.insert(i);
    	else {
    	prod*=arr[i];
    	prod%=MOD;
    	}
    }
    int Q;
    scanf(" %d",&Q);
    for(i=0;i<Q;i++){
    	int type;
    	scanf(" %d",&type);
    	if(type==0){
    		int id;
    		scanf(" %d",&id);
    		int prev=arr[id];
    		int newval;
    		scanf(" %d",&newval);
    		long long p=prod%MOD;

          //  printf("curprod = %lld\n",p);

    		arr[id]=newval;
    		if(newval==0){
    			S.insert(id);
    			if(prev!=0){
                    p*=mypow(prev,MOD-2);
                    prod=p%MOD;
    			}
    			continue;
    		}
    		p=p*newval;
    		p%=MOD;
    		//printf("fprod = %lld\n",p);

    		if(prev != 0){
    			p*=mypow(prev,MOD-2);
    			p%=MOD;
    		} else {
    			S.erase(id);
    		}
    		prod=p;
           // printf("setting prod(%lld)=p(%lld)\n",prod,p);
    	} else {
    		int id;
    		scanf(" %d",&id);
    		long long p=prod%MOD;
    		if(S.size()>=2){
    			printf("0\n");
    			continue;
    		}
    		if((N>1) && (S.count(id)==0) && (S.size()==1)){
    			printf("0\n");
    			continue;
    		}
    		if(N==1){
    			printf("1\n");
    			continue;
    		}
    		if((S.size()==1 ) && (S.count(id)==1)){
                printf("%lld\n",p);
                continue;
    		}
    		p*=mypow(arr[id],MOD-2);
    		p%=MOD;
    		printf("%lld\n",p);
    	}
    }

    return 0;
}
