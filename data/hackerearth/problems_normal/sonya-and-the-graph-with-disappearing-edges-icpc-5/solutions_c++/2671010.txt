#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int main() {
	int N; int M; int K;
	while(~scanf("%d%d%d", &N, &M, &K)) {
		vector<vector<pii> > g(N);
		for(int i = 0; i < M; ++ i) {
			int u, v;
			scanf("%d%d", &u, &v), -- u, -- v;
			g[u].push_back(mp(v, i));
			g[v].push_back(mp(u, i));
		}
		vi time(M, INF);
		rep(i, K) {
			int T, X;
			scanf("%d%d", &T, &X), -- X;
			time[X] = T;
		}
		vi q, nq;
		vector<bool> vis(N);
		nq.push_back(0);
		int d = 0, ans = INF;
		while(!nq.empty()) {
			q.swap(nq);
			while(!q.empty()) {
				int i = q.back(); q.pop_back();
				if(vis[i]) continue;
				vis[i] = true;
				if(i == N - 1) {
					ans = d;
					nq.clear();
					break;
				}
				each(j, g[i]) if(d < time[j->second])
					nq.push_back(j->first);
			}
			++ d;
		}
		printf("%d\n", ans == INF ? -1 : ans);
	}
	return 0;
}
