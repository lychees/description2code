#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long ll;
ll memo[105][105][105];

ll solve(vector<ll> &arr, int prev, int curr, int cnt){
	if(memo[curr][prev][cnt] != -1){
		return memo[curr][prev][cnt];
	}
	else if(prev == arr.size() || curr == arr.size() || cnt == 0){
		return 0;
	}
	ll ans;
	if(prev == 0){
		ans = max(solve(arr,prev,curr+1,cnt),solve(arr,curr,curr+1,cnt-1));
	}else
		ans = max(solve(arr,prev,curr+1,cnt),(abs(arr[prev]-arr[curr])+solve(arr,curr,curr+1,cnt-1)));
	memo[curr][prev][cnt] = ans;
	return ans;
}

int main()
{
	
	int T;
	cin>>T;
	while(T--){
		for(int i=0;i<105;i++){
			for(int j=0;j<105;j++){
				for(int k=0;k<105;k++)
					memo[i][j][k] = -1;
			}
		}
		int M,N;
		cin>>N>>M;
		vector<ll> arr(N+1);
		arr[0]=0;
		for(int i=1;i<=N;i++){
			cin>>arr[i];
		}
		ll ans = solve(arr,0,1,M);
	/*	for(int i=0;i<N;i++){
			for(int j=0;j<N;j++){
				for(int k=0;k<=M;k++){
					cout<<i<<" "<<j<<" "<<k<<" "<<memo[i][j][k]<<endl;
				}
			}
		}*/
		cout<<ans<<endl;
	}
    return 0;
}
