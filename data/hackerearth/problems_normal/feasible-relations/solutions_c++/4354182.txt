#include<bits/stdc++.h>
#define For(i,n) for(int i=0;i<n;i++)
#define Fori(i,n) for(int i=1;i<=n;i++)
using namespace std;
const int MAXN = 1000000;
bool visited[MAXN];
int cc[MAXN];
vector <int>adj[MAXN];

void dfs(int v,int id)
{
    visited[v]=true;
    cc[v]=id;
    For(i,adj[v].size())
    {
        if(visited[adj[v][i]]==false)
            dfs(adj[v][i],id);
    }
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,m;
        int a,b;
        string s;
        scanf("%d %d",&n,&m);
        For(i,MAXN) adj[i].clear();
        For(i,MAXN) visited[i]=false;
        vector <pair<int,int> > bad_edges;
        For(i,m)
        {
            cin>>a >> s >> b;
            --a;--b;
            if(s == "=")
            {
                adj[a].push_back(b);
                adj[b].push_back(a);
            }
            else
            {
                bad_edges.push_back(make_pair(a,b));
            }
        }
        For(i,n)
        {
            if(visited[i]==false)
                dfs(i,i);
        }
        int flag=0;
        For(i,bad_edges.size())
        {
            int v = bad_edges[i].first;
            int u = bad_edges[i].second;
            if(cc[v] == cc[u])
            {
                flag=1;
                break;
            }
        }
        if(flag)
            printf("NO\n");
        else printf("YES\n");
    }
    return 0;
}
