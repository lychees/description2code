#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-(a)) : (a))
#define EQ(a,b) ( (fabs((a)-(b))<EPS) ? (1) : (0))





typedef long long LL;
//typedef __int64 LL;
#define LIM 100010

vector<int> adj[LIM];
int vis[LIM];

void ini()
{
	int i;
	for(i=0;i<LIM;i++)
	{
		adj[i].clear();
		vis[i]=0;
	}
}

void dfs(int u)
{
	int i,v;
	vis[u]=1;
	for(i=0;i<adj[u].size();i++)
	{
		v=adj[u][i];
		if(vis[v]) continue;
		dfs(v);
	}
}


int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int i,j,k,n,m,u,v;
	int T;

	scanf("%d",&T);
	while(T--)
	{
		ini();
		scanf("%d %d",&n,&m);
		for(i=0;i<m;i++)
		{
			scanf("%d %d",&u,&v);
			adj[u].push_back(v);
			adj[v].push_back(u);
		}

		int ans=0;
		for(i=0;i<n;i++)
		{
			if(vis[i]==0)
			{
				ans++;
				dfs(i);
			}
		}
		cout<<ans<<endl;
	}

	return 0;
}
