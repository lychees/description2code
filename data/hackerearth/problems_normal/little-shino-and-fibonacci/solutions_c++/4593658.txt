#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll MOD=1e9+7;
int fib[15005];
ll t[60050];
void build (int a[], int v, int tl, int tr) {
	if (tl == tr)
		t[v] = a[tl];
	else {
		int tm = (tl + tr) / 2;
		build (a, v*2, tl, tm);
		build (a, v*2+1, tm+1, tr);
		t[v] = (t[v*2] + t[v*2+1])%MOD;
	}
}
ll sum (int v, int tl, int tr, int l, int r) {
	if (l > r)
		return 0;
	if (l == tl && r == tr)
		return t[v];
	int tm = (tl + tr) / 2;
	return (sum (v*2, tl, tm, l, min(r,tm))
	        + sum (v*2+1, tm+1, tr, max(l,tm+1), r))%MOD;
		
}
int main() {
    int i;
    fib[0]=0;
	fib[1]=1;
	
	for(i=2;i<=15000;i++){
	    fib[i]=(fib[i-1]+fib[i-2])%10000;
	}
	
	build(fib,1,0,15000);
	//cout<<sum(1,0,15000,0%15000,2%15000)<<endl;
	
	int q;
	cin>>q;
	ll l,r;
	ll a1,a2,a3,ans;
	while(q--){
	    
	    cin>>l>>r;
	    l--;r--;
	    if(l/15000==r/15000){
	        
	        cout<<sum(1,0,15000,l%15000,r%15000)<<endl;
	    }
	    else{
	        
	        a1=((r-l-15000+l%15000-r%15000)/15000)%MOD;
	        a1=(a1*sum(1,0,15000,0,15000))%MOD;
	        a2=sum(1,0,15000,l%15000,15000);
	        a3=sum(1,0,15000,0,r%15000);
	        ans=((a1+a2)%MOD+a3)%MOD;
	        cout<<ans<<endl;
	    }    
	}
	return 0;
}
