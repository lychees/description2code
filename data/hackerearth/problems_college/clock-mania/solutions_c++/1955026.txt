#include <iostream>
#include <cmath>
#include <cstdio>
#include <ctime>
#include <vector>
#include <set>
#include <algorithm>
using namespace std;
  
#define gc getchar
#define pc putchar
#define ll long long
#define ull unsigned long long
#define mod 1000000000
#define pi 3.142857142857143

#define TEST int _t;_t=inp();while(_t--)
#define TESTL ull __t;__t=inp_ull();while(__t--)
#define FOR(i, n) for(i=0;i<n;i++)
#define FORR(i, n) for(i=n;i>=0;i--)
#define FORC(i, a, b, inc) for(i=a;i<b;i+=inc)
#define FORCR(i, a, b, inc) for(i=a;i>b;i-=inc)

#define pb push_back
#define mp make_pair
#define ALL(v) v.begin(), v.end()
#define ALLR(v) v.rbegin(), v.rend();
#define mem(a) memset(a, 0, sizeof(a))

typedef vector<int> VI;
typedef vector<ll> VLL;
typedef vector<ull> VULL;

/* Input funcitons */
inline int inp(){int c=gc(),v=0, f=1;for(;c<'0' || c>'9';c=gc()){if(c=='-'){f=-1;c=gc();break;}}for(;c>='0' && c<='9';c=gc())v=v*10+c-'0';return v*f;}
inline ll inp_ll(){ll c=gc(),v=0, f=1;for(;c<'0' || c>'9';c=gc()){if(c=='-'){f=-1;c=gc();break;}}for(;c>='0' && c<='9';c=gc())v=v*10+c-'0';return v*f;}
inline ull inp_ull(){ull c=gc(),v=0, f=1;for(;c<'0' || c>'9';c=gc()){if(c=='-'){f=-1;c=gc();break;}}for(;c>='0' && c<='9';c=gc())v=v*10+c-'0';return v*f;}
/* End input funcitons */

/* Output Functions */
void out(int n){char b[10];int i=10;if(n<0){pc('-');n=-n;}do{b[--i]=(n%10)+'0';n/=10;}while(n);do{pc(b[i]);}while(++i<10);}
void outn(int n){char b[10];int i=10;if(n<0){pc('-');n=-n;}do{b[--i]=(n%10)+'0';n/=10;}while(n);do{pc(b[i]);}while(++i<10);pc('\n');}
void outs(int n){char b[10];int i=10;if(n<0){n=-n;pc('-');}do{b[--i]=(n%10)+'0';n/=10;}while(n);do{pc(b[i]);}while(++i<10);pc(' ');}
/* END Output Functions */

inline int gcd(int a, int b){if(!b)return a;gcd(b, a%b);}
inline int lcm(int a, int b){return (a*b)/gcd(a, b);}
#define size 2001
/*     Main Program starts here     */
// Utility function to find minimum of two integers
int min(int x, int y) { return (x < y)? x: y; }
 
int cal(double h, double m)
{
    // validate the input
    if (h <0 || m < 0 || h >12 || m > 60)
        printf("Wrong input");
 
    if (h == 12) h = 0;
    if (m == 60) m = 0;
 
    // Calculate the angles moved by hour and minute hands
    // with reference to 12:00
    int hour_angle = 0.5 * (h*60 + m);
    int minute_angle = 6*m;
 
    // Find the difference between two angles
    int angle = abs(hour_angle - minute_angle);
 
    // Return the smaller angle of two possible angles
    angle = min(360-angle, angle);
 
    return angle;
}
int  main(){
	double h, m;
    TEST{
    	cin>>h>>m;
    	outn(cal(h, m));
    }
}
/*  END */
