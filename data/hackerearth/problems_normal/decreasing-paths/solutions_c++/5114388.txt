#include <iostream>
#define MOD 1000000007
using namespace std;
 
int a[1001][1001];
int dp[1001][1001];
int n;
int visited[1001][1001];
int DFS(int i,int j)
{
    visited[i][j] = 1;
	if(dp[i][j]==0)
	    dp[i][j] = 1;
	if(i+1<n && a[i+1][j]<a[i][j] && visited[i+1][j]==0)
	{
	    if(dp[i+1][j]!=0)
	        dp[i][j] = (dp[i][j]%MOD + dp[i+1][j]%MOD)%MOD;
	   else
		    dp[i][j] = (dp[i][j]%MOD + DFS(i+1,j)%MOD)%MOD;
	}
	if(i-1>=0 && a[i-1][j]<a[i][j]&& visited[i-1][j]==0)
	{
	    if(dp[i-1][j]!=0)
	        dp[i][j] = (dp[i][j]%MOD + dp[i-1][j]%MOD)%MOD;
	   else
		    dp[i][j] = (dp[i][j]%MOD + DFS(i-1,j)%MOD)%MOD;
	}
	if(j+1<n && a[i][j+1]<a[i][j] && visited[i][j+1]==0)
	{
	    if(dp[i][j+1]!=0)
	        dp[i][j] = (dp[i][j]%MOD + dp[i][j+1]%MOD)%MOD;
	   else
		    dp[i][j] = (dp[i][j]%MOD + DFS(i,j+1)%MOD)%MOD;
	}
	if(j-1>=0 && a[i][j-1]<a[i][j]&& visited[i][j-1]==0)
	{
	    if(dp[i][j-1]!=0)
	        dp[i][j] = (dp[i][j]%MOD + dp[i][j-1]%MOD)%MOD;
	    else
	        dp[i][j] = (dp[i][j]%MOD + DFS(i,j-1)%MOD)%MOD;
	}
	visited[i][j] = 0;
	return dp[i][j]%MOD;
}
 
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	{
	    
		for(int j=0;j<n;j++)
		{
		    visited[i][j] = 0;
			dp[i][j] = 0;
			cin>>a[i][j];
		}
	}
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			//cout<<a[i][j]<<endl;
			if(dp[i][j]==0)
			DFS(i,j);
			//dp[i][j] += 1;
			
		}
	}
	int ans = 0;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
		//	cout<<dp[i][j]<<" ";
			ans = (ans%MOD + dp[i][j]%MOD)%MOD;
		}
		//cout<<endl;
	}
	cout<<ans<<endl;
	
    return 0;
}