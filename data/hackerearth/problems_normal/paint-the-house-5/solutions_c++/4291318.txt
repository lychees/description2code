#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <iterator>
#include <stdio.h>
#define ll long long int
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define f(i,a,b)               		for(int i=a;i<b;i++) 
#define fe(i,a,b)               	for(int i=a;i<=b;i++)
#define fr(i,a,b)               	for(int i=a;i>b;i--)
#define fre(i,a,b)              	for(int i=a;i>=b;i--)
#define foreach(it,v)         		for(typeof((c).begin())it=(c).begin();it!=(c).end();++v)
#define p(n)                        printf("%d",n)
#define pc(n)                       printf("%c",n)
#define pl(n)                       printf("%lld",n)
#define pf(n)                       printf("%lf",n)
#define ps(n)                       printf("%s",n)
#define nl							printf("\n")
#define ws							printf(" ")
#define all(v)               		v.begin(),v.end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
using namespace std;
bool func1(const pair<ll, pair<ll,ll> > &p1,const pair<ll, pair<ll,ll> > &p2)
{
	if(p1.first<p2.first)
	return true;
	else if(p1.first==p2.first)
	{
		if((p1.second).second>(p2.second).second)
		return true;
		else if((p1.second).second==(p2.second).second)
		{
			if((p1.second).first<(p2.second).first)
			return true;
		}
	}
	return false;
}
 
int main()
{
	
//	freopen("in.txt","r",stdin);
//	freopen("out.txt","w",stdout);
	ll n,d,done,left,speed,last,cost=0,t,x,y;
	sl(n); sl(d);
	vector<pair<ll,pair<ll,ll> > >v;
	f(i,0,n)
	{
		sl(t);sl(x);sl(y);
		v.pb(mp(t,mp(x,y)));
	}
	sort(v.begin(),v.end(),func1);
	
	done=0;
	left=d;
	speed=0;
	t=0;
	last=0;
	
	f(i,0,n)
	{
		if((v[i].second.second)>t&&(left>t*((v[i].first)-last)))
		{
			left-=t*(v[i].first-last);
			t=v[i].second.second;
			last=v[i].first;
			cost+=(v[i].second).first;
		}
	}
	
	pl(cost);
	nl;
	
   return 0;
}