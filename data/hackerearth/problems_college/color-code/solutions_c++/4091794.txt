#include<bits/stdc++.h>
using namespace std;

#define test() int t;scanf("%d",&t);for(int tno=1;tno<=t;tno++)

#define mp make_pair
#define pb push_back
#define wl(n) while(n--)
#define X first
#define Y second
#define all(c) c.begin(),c.end() //eg sort(all(v));

typedef long long ll;
typedef unsigned long long llu;
typedef double lf;
typedef vector<int> vi; 
typedef vector< vi > vvi; 
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;

#define sz(a) int((a).size())
#define ini(a) memset(a,-1,sizeof(a))


// Input Output
#define sc(n) scanf("%d",&n)
#define sc2(n,m) sc(n), sc(m)
#define scs(s) scanf("%s",s);
#define pd(n) printf("%d",n)

#define scl(n) scanf("%lld",&n)
#define scl2(n,m) scanf("%lld%lld",&n,&m)
#define pdl(n) printf("%lld",n)
#define newln printf("\n")
#define space printf(" ")

//Bitwise
#define chkbit(s, b)    (s & ((ll)1<<b))
#define setbit(s, b)    (s |= ((ll)1<<b))
#define clrbit(s, b)    (s &= ~(1<<b))

//constants
#define MOD 1000000007
#define MOD_INV 1000000006
#define MAX 100009

//Error check
#define debug() printf("here\n")
#define PV(v)       	{ for(int i=0;i<v.size();i++) printf("%d ",v[i]);printf("\n"); }
#define PA(a,st,ed)     { for(int i=st;i<=ed;i++) printf("%d ",a[i]);printf("\n"); }  
#define chk(a) cerr << endl << #a << " : " << a << endl
#define chk2(a,b) cerr << endl << #a << " : " << a << "\t" << #b << " : " << b << endl

//-----------------------------------------------------------------------------------------------


int main()
{
	int i,j,k;
	test()
	{
		int r,g,b;
		int a[3];
		for (int i = 0; i < 3; ++i)
		{
			/* code */
			sc(a[i]);
		}
		printf("Case %d: ",tno );
		for (int i = 0; i < 3; ++i)
		{
			/* code */
			r = a[i];
			vector<char>v;
			string s = "UVWXYZ";
			while(r)
			{
				if(10<=r%16&&r%16<=15)
				{
					v.pb(s[r%16-10]);
				}
				else
				{
					char c = '0' + r%16;
					v.pb(c);
				}
				r/=16;
			}
			if(v.size()==0)
				printf("00 ");
			else if(v.size()==1)
				printf("0%c ",v[0]);
			else 
				printf("%c%c ",v[1],v[0]);
		}
		printf("\n");

	}
	return 0;
}