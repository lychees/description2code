#include<bits/stdc++.h>
using namespace std;
int parent[100005];
int sz[100005];
multiset<int>st;
int find(int i)
{
 if(parent[i]==i)
        return i;

  int r=find(parent[i]);
  parent[i]=r;
  return r;
}
void uni(int u,int v)
{
    int r=find(u);
    int s=find(v);
    if(r!=s)
    {
        st.erase(st.find(sz[r]));
        st.erase(st.find(sz[s]));
        parent[r]=s;
        sz[s]+=sz[r];
        st.insert(sz[s]);
    }
}
int main()
{
    int n,q;
    scanf("%d %d",&n,&q);
    for(int i=1;i<=n;i++)
    {
        parent[i]=i;
        sz[i]=1;
        st.insert(1);
    }
    while(q--)
    {
        int a,b;
        scanf("%d %d",&a,&b);
        uni(a,b);
        printf("%d\n",*(st.rbegin())-*(st.begin()));

    }
    return 0;
}
