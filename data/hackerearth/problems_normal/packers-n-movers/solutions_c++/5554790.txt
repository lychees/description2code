#include <iostream>
#include <algorithm>
#include <limits.h>
#include <cstring>
using namespace std;
int dp[16][251];
int max(int a,int b)
{
	if(a>b)
		return a;
	return b;
}
int min(int a,int b)
{
	if(a>b)
		return b;
	return a;
}
int maxmin(int wt[],int m,int n,int wt_index,int index)
{
    if(wt_index==(m))
    {
        return 0;
    }
    if(index==n)
    {
    	if(wt_index==m)
    		return 0;
		else
			return INT_MAX;
    }
    if(dp[index][wt_index] == -1)
    {
    	int ans = maxmin(wt,m,n,wt_index,index+1);
    	int sum = 0;
    	for(int i = wt_index;i<m;i++)
    	{
    		sum += wt[i];
    		ans  = min(ans,max(sum,maxmin(wt,m,n,i+1,index+1)));
    	}
    	dp[index][wt_index] =ans;
    	
    }
    return dp[index][wt_index];
}
int main()
{
	memset(dp,-1,sizeof(dp));
	int packers;
	int size;
	cin>>packers>>size;
	int wt[size];
	for(int i = 0;i<size;i++)
	{
		cin>>wt[i];
	}
	int m=size;
	int n= packers;
	cout<<maxmin(wt,m,n,0,0)<<endl;
    return 0;
}
