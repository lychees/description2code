#include <bits/stdc++.h>
using namespace std;
 
typedef long long LL;
 
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
#define cin(x)	scanf("%d" , &x)
#define MOD		1000000009
#define EPS       1E-10

LL fact[200001] = {0};
LL invfact[200001] = {0};

int NCR(int n , int r)
{
	if(n < 0 or r < 0 or n < r) return 0;
	LL ret = (fact[n] * invfact[n-r]) % MOD;
	return (ret * invfact[r]) % MOD;
}

LL BigMod(LL a,LL b,LL mod)
{
      if(!b) return 1;
      LL x = BigMod(a,b/2,mod);
      x = (x*x)%mod;
      if(b&1) return (x*a)%mod;
      else return x;
}

LL modinv(LL a,LL mod)
{
      return BigMod(a,mod-2,mod);
}

void solve()
{
	int n,m,k;
	cin(n);
	cin(m);
	cin(k);
	k = min(k , n);
	LL ans = 0;
	for(int i = 0; i <= k; i++)
	{
		LL add = (NCR(n , i) - NCR(n - m , i) + MOD) % MOD;
		ans = (ans + add) % MOD;
	}
	printf("%lld\n", ans);
}

int main()
{
	fact[0] = invfact[0] = 1;
	for(int i = 1; i <= 200000; i++)
	{
		fact[i] = (fact[i-1] * i) % MOD;
		invfact[i] = modinv(fact[i] , MOD);
	}
	int t;
	cin(t);
	while(t--)
		solve();
	return 0;
}