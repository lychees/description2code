#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000009
using namespace std;
long long int ret[2][2]={{1,0},{0,1}};// Identity Matrix Of Order N.
void initialize()
{
   ret[0][0]=1;
   ret[0][1]=0;
   ret[1][0]=0;
   ret[1][1]=1;
}
void fibonacci(long long int n)
{
    long long int fib[2][2]={{1,1},{1,0}};// To Be Calculated By The User.
    long long int tmp[2][2]={{0,0},{0,0}};
    int i,j,k;
    while(n)
    {
        if(n%2==1)
        {
            memset(tmp,0,sizeof tmp);
            for(i=0;i<2;i++)
            for(j=0;j<2;j++)
            for(k=0;k<2;k++)
            tmp[i][j]=(tmp[i][j]+(ret[i][k]*fib[k][j])%MOD)%MOD;
            for(i=0;i<2;i++)
            for(j=0;j<2;j++)
            ret[i][j]=tmp[i][j];
        }
        memset(tmp,0,sizeof tmp);
        for(i=0;i<2;i++)
        for(j=0;j<2;j++)
        for(k=0;k<2;k++)
        tmp[i][j]=(tmp[i][j]+(fib[i][k]*fib[k][j])%MOD)%MOD;
        for(i=0;i<2;i++)
        for(j=0;j<2;j++)
        fib[i][j]=tmp[i][j];
        n/=2;
    }
    return;// The Entire First Row Should Be Returned.
}
int main()
{
   long long int state[2][1]={1,0};
   int test;
   scanf("%d",&test);
   while(test--)
   {
      initialize();
      long long int n;
      scanf("%lld",&n);
      fibonacci(n-1);
      long long int ans1=0;
      ans1+=ret[0][0];
      long long int ans2=0;
      ans2+=ret[0][0]+ret[0][1];
      printf("%lld\n",ans1*ans2%MOD);
   }
   return 0;
}
