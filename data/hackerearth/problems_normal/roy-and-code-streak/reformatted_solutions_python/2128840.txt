""" User statistics one of em :
                 Code Streak ---> given the user activity data find the max(number of #continuous #correct solutions)
                                    submitted by a user
                Constraints:
                    correct answers to an already solved problems are not included/tolerated
                    multiple correct submissions must be only counted once for all continuous correct submissions

                Input:
                1<=T<=1000
                total number of submissions  1<=N<=10pow6
                1<=S<=10pow6 0<=R<=1 } N lines space seperated ,S --> submission id ,R-->1 means solved ,unsolved 0
                Output:
                print Code Streak
"""
for _ in xrange(int(raw_input())):
    N = int(raw_input())
    if N == 0:
        print 0
    SubIdWithoutReps = {}  # solved only
    ListOfRs = []
    for _ in xrange(N):
        s, r = map(int, raw_input().split())
        if r == 1:  # that is solved problem then add it only once
            if not SubIdWithoutReps.get(
                    s):  # if not already present in solved then add
                SubIdWithoutReps[s] = r
                ListOfRs.append(r)
        else:  # if not solved
            if not SubIdWithoutReps.get(
                    s):  # it maybe solved on later submission
                SubIdWithoutReps[s] = r
                ListOfRs.append(r)
            else:  # since it is unsolved we have to add cuz they cause discontiuity
                ListOfRs.append(r)
    max_so_far = the_max = 0
    ListOfRs.append(0)  # so that the_max is updated at the last iteration
    for r in ListOfRs:
        if r == 1:
            max_so_far += 1
        else:
            the_max = max(the_max, max_so_far)
            max_so_far = 0
    print the_max
