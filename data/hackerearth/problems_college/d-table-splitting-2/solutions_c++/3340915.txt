#include<bits/stdc++.h>
using namespace std;
 
#define sd(mark) scanf("%d",&mark)
#define ss(mark) scanf("%s",&mark)
#define sl(mark) scanf("%lld",&mark)
#define debug(mark) printf("check%d\n",mark)
#define clr(mark) memset(mark,0,sizeof(mark))
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define LIM 1000000
#define ll long long
int n,m;
int g[1000010];
int mark[1000010];
stack<pair<pair<int,int>,int> > s;
inline int Hash(int x,int y)
{
	return x*m+y;
}
inline void Func(int x,int y,int mask)
{
	if(mask&(1<<g[Hash(x,y)]))
		mask-=(1<<g[Hash(x,y)]);
	if((mark[Hash(x,y)]&mask)!=mask)
	{
		mark[Hash(x,y)]|=mask;
		s.push(MP(MP(x,y),mask));
	}
	
}
inline void go(int i,int j)
{

	Func(i,j,(1<<26)-1);
	while(!s.empty())
	{
		int x=s.top().F.F;
		int y=s.top().F.S;
		int mask=s.top().S;
		//cout<<x<<' '<<y<<'\n';
		//for(int a=0;a<n;++a,cout<<'\n')
		//	for(int b=0;b<m;++b)
		//		cout<<g[Hash(a,b)]<<' ';
		s.pop();
		if(x)
			Func(x-1,y,mask);
		if(y)
			Func(x,y-1,mask);
		if(x<n-1)
			Func(x+1,y,mask);
		if(y<m-1)
			Func(x,y+1,mask);
		if(x&&y)
			Func(x-1,y-1,mask);
		if(x&&y<m-1)
			Func(x-1,y+1,mask);
		if(x<n-1&&y)
			Func(x+1,y-1,mask);
		if(x<n-1&&y<m-1)
			Func(x+1,y+1,mask);
	}

}
int main()
{
	int t,i,j,k;
	char c;
	sd(t);
	while(t--)
	{
		sd(n);sd(m);
		for(i=0;i<n;++i)
			for(j=0;j<m;++j)
				mark[Hash(i,j)]=0;
		for(i=0;i<n;++i)
		{
			scanf("%c",&c);
			for(j=0;j<m;++j)
			{
				scanf("%c",&c);
				g[Hash(i,j)]=c-'a';
			}
		}
		bool f=0;
		for(i=0;i<m;++i)
			go(0,i);
		for(i=0;i<m;++i)
			go(n-1,i);
		for(i=0;i<n;++i)
			go(i,0);
		for(i=0;i<n;++i)
			go(i,m-1);

		for(i=0;i<n;++i)
			for(j=0;j<m;++j)
			{
				if((mark[Hash(i,j)]|(1<<g[Hash(i,j)]))!=(1<<26)-1)
					f=1;
			}
		if(f)
			printf("NO\n");
		else
			printf("YES\n");
	}
}