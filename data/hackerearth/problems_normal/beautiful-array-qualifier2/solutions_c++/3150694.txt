#include <bits/stdc++.h>
using namespace std;

const int maxn = 2 * 1e4 + 10;
const int maxm = 1e6 + 10;
int n, k, m;
map<int, int> M;
int A[ maxn ], P[ maxm ], dp[ maxm ], ans[ maxn ];
vector<int> p;

void sieve() {
	for(int i=2; i<=1e6; i++) {
		if(!P[i]) {
			p.push_back(i);
			int j = i;
			while(j <= 1e6) {
				P[j] = 1;
				j += i;
			}
		}
	}
}

int main() {
	sieve();
	int n, k, m;
	cin >> n >> k >> m;
	while( m -- ) {
		int x; cin >> x;
		M[x] = 1;
	}
	
	int c = 0, mx;
 	for( auto it: p ) {
 		if(M.find(it) == M.end()) c ++;
 		if(c == n) {
 			mx = it;
 			break;
 		}
 	}
    
    for(int i=1; i<=mx; i++) dp[i] = maxm;
    ans[1] = 1;
    c = 2;
    dp[1] = 0;
    for(int i=2; i<=n; i++) {
    	while( dp[c] <= k || M.find(c) != M.end() ) {
    		c ++;
    	}
    	ans[i] = c;
    	for(int j=1; j<=mx/c; j++) {
    		dp[j * c] = min(dp[j * c], dp[j] + 1);
    	}
    	c ++;
    }
    for(int i=1; i<=n; i++) cout << ans[i] << " \n"[ i == n ];
    return 0;
}
