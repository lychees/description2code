#include<stdio.h>
#include<cstring>
#include<string>
#include<iostream>
#include<cstdlib>
using namespace std;
struct node
{
	int st,et;
	double wp;
};
int compare(const void *a, const void *b)
{
	return (*(struct node *)a).et-(*(struct node *)b).et;
}
double max(double a, double b)
{
	return a>b?a:b;
}
struct node node[52];
double max_expectation[52];
int main()
{
	int test_cases,n;
	scanf("%d",&test_cases);
	for(int i=0;i<test_cases;i++)
	{
		scanf("%d",&n);
		for(int j=0;j<n;j++)
		{
			scanf("%d%d%lf",&(node[j].st),&(node[j].et),&(node[j].wp));
		}
		qsort(node,n,sizeof(struct node),compare);
		for(int j=0;j<52;j++)
		{
			max_expectation[j]=0.0;
		}
		max_expectation[0]=(node[0].wp)/100;
		//cout<<max_expectation[0]<<endl;
		for(int j=1;j<n;j++)
		{
			for(int k=j-1;k>=0;k--)
			{
				if(node[j].st>=node[k].et)
				{
					//cout<<max_expectation[j]<<endl;
					//cout<<max_expectation[k]+node[j].wp/100<<endl;
					max_expectation[j]=max(max_expectation[j],max_expectation[k]+(node[j].wp)/100);	
					break;
				}
			}
			max_expectation[j]=max(max_expectation[j],(node[j].wp)/100);
			max_expectation[j]=max(max_expectation[j],max_expectation[j-1]);
		}
		printf("%.2lf\n",max_expectation[n-1]);
	}
}