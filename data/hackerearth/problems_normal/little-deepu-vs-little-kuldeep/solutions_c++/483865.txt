#include <iostream>
#include <algorithm>
#include <vector>
#define limit 2000003 
#define MOD 1000000007
#define ll long long int
using namespace std;

ll fact[2000003];

void precompute()
{
	//cout<<"here";
	fact[0]=1;
	for(int i=1;i<limit;i++)
		fact[i]=(fact[i-1]*i)%MOD;
}

ll modularInverse(ll n)
{
	ll pw=MOD-2;
	ll p=n;
	ll x=1;
	while(pw>0)
	{
		if(pw%2!=0)
			x=(x*p)%MOD;
		p=(p*p)%MOD;
		pw=pw>>1;
	}
	return x;
}

int main()
{
   int tc;
   cin>>tc;
   //vector<long long int> fact;
   precompute();
   while(tc--)
   {
   		int n;
   		cin>>n;
   		//cout<<n;
   		ll ans=(fact[2*n]*modularInverse(fact[n]))%MOD;
   		cout<<(ans*modularInverse(fact[n+1]))%MOD<<endl;
   	
   }
   return 0;
}