#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define i64 long long int
vector <i64> sieve(i64 N) {
    vector <i64> ans;
    vector <bool> isPrime(N+1);
    for(i64 i = 0; i <= N;++i) {
        isPrime[i] = true;
    }
    isPrime[0] = false;
    isPrime[1] = false;
    
    for(i64 i = 2; i * i <= N; ++i) {
         if(isPrime[i] == true) {
             // Mark all the multiples of i as composite numbers
             for(i64 j = i * i; j <= N ;j += i)
                 isPrime[j] = false;
        }
    }
    i64 sum=1;
    for(i64 i=2;i<N;i++){

        if(isPrime[i]==true){
            ans.push_back((sum*i)%MOD);
            sum*=i;
            sum%=MOD;
        }
    }
    return ans;
}

int main(){
vector <i64> v=sieve(10000000);
    int tt;
    cin>>tt;
    while(tt--){
        int n;
        cin>>n;
        cout<<v[n-1]<<endl;
    }
}
