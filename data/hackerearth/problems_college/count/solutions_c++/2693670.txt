using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

int test;
ll r,c,chan,le;

ll demle(ll r){
    if (r%2==0) r--;
    return ((r-1)/2+1)*(r+1)/2;
}

ll sl(ll n){
    return (n+1)/2;
}

int main(){
 //   freopen("count.inp", "r", stdin);
 //   freopen("count.out", "w", stdout);
    ri(test);
    while (test--){
        ri(r); ri(c);
        if (r>c){
            le=demle(c)+(sl(r)-sl(c))*c;
            chan=c*(c+1)/2+(r-c)*c-le;
        }
        else if (r<=c){
            le=demle(r);
            chan=r*(r+1)/2-le;
        }
        printf("%lld %lld\n", chan, le);
    }
}
