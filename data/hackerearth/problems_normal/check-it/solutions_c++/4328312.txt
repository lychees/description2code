#include<bits/stdc++.h>
using namespace std;
list<int> g[5003];
struct node
{
	int p,q;
}e[40004];

int visited[5003],cc;
void init(int n)
{
	for(int i=0;i<=n;++i)
	g[i].clear();
}

void dfs(int n)
{
	visited[n]=1;
	cc++;
	list<int>::iterator it;
	for(it=g[n].begin();it!=g[n].end();++it)
	{
		if(!visited[*it])
		dfs(*it);
	}
}
void DFS(int n)
{
	for(int i=1;i<=n;++i)
	visited[i]=0;
	
	cc=0;
	dfs(1);
	if(cc==n)
	cout<<"YES\n";
	else
	cout<<"NO\n";
}
int main()
{
	int t;
	cin>>t;
  while(t--)
  {
	int pos,i,n,m;
	init(n);
	cin>>n>>m;
	for(i=1;i<=m;++i)
	{
		cin>>e[i].p>>e[i].q;
	}
	
	node x;
	for(i=1;i<n;++i) // run n-1 time
	{
		cin>>pos;
		x=e[pos];
		g[x.p].push_back(x.q);
		g[x.q].push_back(x.p);		
	}
	DFS(n);
		
  }
	
	
	
}