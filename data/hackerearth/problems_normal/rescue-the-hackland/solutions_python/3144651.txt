def is_dangerous(l, r, k):
	if (l <= r*k) and (r <= l*k):
		return True
	else:
		return False

def rescue(l, r, k):

	grey_hats = set()
	min_value = -1
	max_value = -1
	for i in range(r, l-1, -1):
		for j in range(l,r+1):
			if is_dangerous(i,j,k) is True:
				count = len(grey_hats)
				if count == 0:
					return 1
				else:
					return count
			else:
				for value in [i,j]:
					status = False
					for x in grey_hats:
						if is_dangerous(x, value, k):
							status = True
							break
					if status == False:
						grey_hats.add(value)
						if min_value == -1:
							min_value = value
						elif min_value > value:
							min_value = value
						if max_value == -1:
							max_value = value
						elif max_value < value:
							max_value = value
							
	count = len(grey_hats)
	if count == 0:
		return 1
	else:
		return count
					
				# for value in [i,j]:
				# 	if not(is_dangerous(min_value, value, k) or is_dangerous(max_value, value, k)):	
				# 		grey_hats.add(value)
				# 		if min_value == -1:
				# 			min_value = value
				# 		elif min_value > value:
				# 			min_value = value
				# 	if max_value == -1:
				# 		max_value = value
				# 	elif max_value < value:
				# 		max_value = value

 
n = int(raw_input())
for _ in range(n):
	k = str(raw_input()).split(" ")
	print rescue(int(k[0]), int(k[1]), int(k[2]))

