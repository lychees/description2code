#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int t;
int n;
int m;
vector<vector<int> > v;
#define MAX_N 100001
bool use[MAX_N];
bool ok = 0;
bool f[MAX_N];
void dfs(int b, bool flag){
	use[b] = true;
	f[b] = flag;
	bool want = flag ^ 1;
	for (int i = 0; i < v[b].size(); i++){
		if (use[v[b][i]]){
			if (f[v[b][i]] != want){
				ok = true;
				return;
			}
		}
		else{
			dfs(v[b][i], want);
		}
	}
}
int main(){
	scanf("%d", &t);
	while (t--){
		scanf("%d%d", &n, &m);
		v.clear();
		v.resize(n);
		while (m--){
			int a, b;
			scanf("%d%d", &a, &b);
			a--;
			b--;
			v[a].push_back(b);
			v[b].push_back(a);
		}
			ok = false;
			memset(use, 0, sizeof(use));
			for (int i = 0; i < n; i++){
				if (!use[i]){
					dfs(i,0);
				}
			}
			if (ok){
				puts("NO");
			}
			else{
				puts("YES");
			}
		
	}
	return 0;
}