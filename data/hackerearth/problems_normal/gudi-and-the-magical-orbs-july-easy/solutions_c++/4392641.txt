#include<iostream>
#include<stdio.h>
#define pf printf
#define sf scanf
#define MAX 505
using namespace std;
bool dp[MAX][MAX][MAX];
int main()
{
	int t;
	sf("%d",&t);
	while(t--)
	{
		int n,m,k,p;
		int grid[MAX][MAX]={0};
		sf("%d%d%d",&n,&m,&k);
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				sf("%d",&grid[i][j]);
				for(int l=0;l<=MAX;l++)
				dp[i][j][l]=false;
			}
		}
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				for(p=grid[i][j];p<=k;p++)
				{
					if(i==0 && j==0)
					{
						if(p==grid[i][j])
						dp[i][j][p]=true;
					}
					else if(i==0)
					{
						dp[i][j][p]=(dp[i][j][p] || dp[i][j-1][p-grid[i][j]]);
					}
					else if(j==0)
					{
						dp[i][j][p]=(dp[i][j][p] || dp[i-1][j][p-grid[i][j]]);
					}
					else
					{
						dp[i][j][p]=(dp[i][j][p] || dp[i-1][j][p-grid[i][j]]);
						dp[i][j][p]=(dp[i][j][p] || dp[i][j-1][p-grid[i][j]]);
						dp[i][j][p]=(dp[i][j][p] || dp[i-1][j-1][p-grid[i][j]]);
					}
				}
			}
		}
		int ans=0;
		for(ans=p;ans>=0;ans--)
		{
			if(dp[n-1][m-1][ans])
			break;
		}
		pf("%d\n",ans);	
	}
return 0;
}