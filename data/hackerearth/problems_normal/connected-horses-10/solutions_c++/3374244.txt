#include <bits/stdc++.h>
using namespace std;

#define mod 1000000007

int n,m;
long long int fact[1000010];
int a[1010][1010];
queue <pair<int,int> > q;

long long int solve(int i, int j, int v)
{
    int x,y;
    x = i;
    y = j;
    a[x][y] = v;
    long long int ans = 1;

    q.push(make_pair(x,y));
    pair <int,int> p;

    while (!q.empty()) {

        p = q.front();
        q.pop();

        x = p.first;
        y = p.second;//cout <<x<<" "<<y<<endl;

        if (x < n-1 && y > 1 && a[x+2][y-1] == 1) {
            a[x+2][y-1] = v;
            q.push(make_pair(x+2,y-1));
            ans = (ans + 1) % mod;
        }

        if (x < n-1 && y < m && a[x+2][y+1] == 1) {
            a[x+2][y+1] = v;
            q.push(make_pair(x+2,y+1));
             ans = (ans + 1) % mod;
        }

        if (x > 2 && y > 1 && a[x-2][y-1] == 1) {
            a[x-2][y-1] = v;
            q.push(make_pair(x-2,y-1));
             ans = (ans + 1) % mod;
        }

        if (x > 2 && y < m && a[x-2][y+1] == 1) {
           a[x-2][y+1] = v;
            q.push(make_pair(x-2,y+1));
             ans = (ans + 1) % mod;
        }

        if (x > 1 && y > 2 && a[x-1][y-2] == 1) {
            a[x-1][y-2] = v;
            q.push(make_pair(x-1,y-2));
             ans = (ans + 1) % mod;
        }

        if (x < n && y > 2 && a[x+1][y-2] == 1) {
            a[x+1][y-2] = v;
            q.push(make_pair(x+1,y-2));
             ans = (ans + 1) % mod;
        }

        if (x > 1 && y < m-1 && a[x-1][y+2] == 1) {
            a[x-1][y+2] = v;
            q.push(make_pair(x-1,y+2));
            ans = (ans + 1) % mod;
        }

        if (x < n && y < m-1 && a[x+1][y+2] == 1) {
            a[x+1][y+2] = v;
            q.push(make_pair(x+1,y+2));
             ans = (ans + 1) % mod;
        }
    }

    return ans;

}


int main()
{
    int i,t,q,x,y,mi,j;
    long long int z,ans;
    fact[1] = 1;
    for (i = 2; i <= 1000005; i++) {
        fact[i] = (fact[i-1] * i) % mod;
    }

    cin >> t;
    while (t--)
    {
        memset(a,0,sizeof(a));

        cin >> n >> m >> q;
        for (i = 1; i <= q; i++) {
            cin >> x >> y;
            a[x][y] = 1;
        }
        ans = 1;
        mi = 1;
        for (i = 1; i <= n; i++) {
            for (j = 1; j <= m; j++) {
                if (a[i][j] == 1) {
                    mi++;
                    z = solve(i,j,mi);
                    ans = (ans * fact[z]) % mod;
                }
            }
        }
        cout <<ans<<endl;
    }
    return 0;
}
