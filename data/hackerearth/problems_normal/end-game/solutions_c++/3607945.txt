#include <iostream>

using namespace std;
long long movesToReach (long long n, long long b, long long ac, long long ad);

int
main ()
{
  long long tc = 0;
  cin>>tc;
  while (tc--)
    {
      long long n, a, b, c, d, Move;
      cin >> n;
      cin >> a;
      cin >> b;
      cin >> c;
      cin >> d;
      cin >> Move;
      long long movesw = n - a;
      long long movesb = movesToReach (n, b, c, d);
      if (movesb == movesw)
	{
	      cout << "Draw\n";
	  /*if (Move == 0)
	    {
	      cout << "White Wins\n";
	    }
	  else
	    {
	      cout << "Draw\n";
	    }*/
	}
      else if (movesb > movesw && (movesb -movesw >1))
	{
	  cout << "White Wins\n";
	}
       else if (movesb -movesw == 1)
       {
          if (Move == 1)
	  cout << "Draw\n";
          else
	  cout << "White Wins\n";
          
       }
      else
	{

	  cout << "Draw\n";
	}
    }
}

long long
movesToReach (long long n, long long b, long long ac, long long ad)
{
  //cout << n << " " << b << " " << ac << " " << ad << endl;
  long long c = ac;
  long long d = ad, moves = 0;
  if (d > b)
    {
      moves = moves + min ((n - c), (d - b));
      c = c + moves;
      d = d - moves;
      //cout << c << "\t" << d << "\t" << moves << endl;
      moves = moves + (n - c);
      moves = moves + (d - b);

      //cout << c << "\t" << d << "\t" << moves << endl;
    }
  else if (d < b)
    {
      moves = moves + min ((n - c), (b - d));
      c = c + moves;
      d = d + moves;

      //cout << c << "\t" << d << "\t" << moves << endl;
      moves = moves + (n - c);
      moves = moves + (b - d);
      //cout << c << "\t" << d << "\t" << moves << endl;
    }
  else
    {
      moves = n - c;
      //cout << " moves = " << moves << endl;
    }
  return moves;
}
