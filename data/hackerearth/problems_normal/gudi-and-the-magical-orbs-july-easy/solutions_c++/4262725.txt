#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> pii;
typedef pair<long long,long long> pll;
typedef vector<int> vi;
typedef pair<double,double> pdd;
typedef vector<long long> vll;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<pdd> vpdd;
 
#define f first
#define s second
#define mp make_pair
#define pb push_back
#define MOD 1000000007
#define ll long long
ll GCD(ll a, ll b)
{
    return b? GCD(b,a%b) : a;
}
bool chk(string first, string second)
{
    string t1 = first + second;
    string t2 = second + first;
    return t1 < t2;
}
struct sort_pred
{
    bool operator()(const pair<int,int> &left, const pair<int,int> &right)
    {
        return left.second < right.second;
    }
};
long long POW(long long Base, long long Exp)
{
    long long y,ret=1;
    y=Base;
    while(Exp)
    {
        if(Exp&1)
            ret=(ret*y)%MOD;
        y = (y*y)%MOD;
        Exp/=2;
    }
    return ret%MOD;
}
 
vll A,B,C,D,Res,Mark;
string str,str1,s1,s2;
set<string> st;
stack<ll> chlo;
vpll Rec;
map <string, ll> Reg;
string ItoS(ll n)
{
	ll num = n;
	ll tmp;
	string ans ="";
	while(num)
	{
		tmp = num%10;
		ans = ans + (char)('0'+tmp);
		num/=10;
	}
	reverse(ans.begin(),ans.end());
 
	return ans;
}
bitset<100*1000+7> Magic;
ll fun(ll n, ll beg)
{
	ll ret;
	Magic.reset();
	Magic[0]=1;
 
	ll i,Sum=0;
 
	for(i=beg; i<=n; i+=2)
	{
		Sum+=A[i];
		Magic = Magic | (Magic<<A[i]);
	}
	for(i=Sum/2; i>=0; i--)
	{
		if(Magic[i])
		{
			ret = Sum - 2*i;
			break;
		}
	}
	return ret;
}
vector<ll> Graph[100007];
set<ll> At,Bt;
set<ll>::iterator itr;
ll ip[107][107],dp[107][107][507];

int main()
{
	ll i,j,n,k,m,x,y,z,tmp1,tmp2,tmp3,ind,Max;
 
	int t;
	cin>>t;
	while(t--)
	{
		cin>>n>>m>>k;
		
		memset(dp,0,sizeof dp);
		
		for(i=0; i<n; i++)
		{
			for(j=0; j<m; j++)
			{
				cin>>ip[i][j];
			}
		}
		dp[0][0][ip[0][0]] = 1;
		//cout<<ip[0][0]<<endl;
		
		for(i=0; i<n; i++)
		{
			for(j=0; j<m; j++)
			{
				for(x=0; x<=k; x++)
				{
					if(x>=ip[i][j])
					{
						ind = x- ip[i][j];
						
						if(i>0)
							tmp1 = dp[i-1][j][ind];
						else
							tmp1 = 0;
							
						if(j>0)
							tmp2 = dp[i][j-1][ind];
						else
							tmp2 = 0;
						
						if(i>0 && j>0)
									tmp3 = dp[i-1][j-1][ind];
						else
								tmp3 = 0;
								
						//cout<<"i: "<<i<<" j: "<<j<<" x: "<<x<<" ind: "<<ind<<endl;
						//cout<<"tmp1: "<<tmp1<<" tmp2: "<<tmp2<<" tmp3: "<<tmp3<<endl;
						dp[i][j][x] = (tmp1 || tmp2 || tmp3) || dp[i][j][x] ;
					}
				}
			}
		}

		ll Ans = -1;
		
		for(x=0; x<=k; x++)
		{
			if(dp[n-1][m-1][x])
			{
				Ans = max(Ans,x);
			}
		}
		/*for(i=0; i<n; i++)
		{
			for(j=0; j<m; j++)
			{
				cout<<dp[i][j]<<" ";
			}
			cout<<endl;
		}	*/
		if(Ans>k)
				Ans = -1;
		cout<<Ans<<endl;
	}
	return 0;
}