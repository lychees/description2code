#include <iostream>
#include <string.h>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <stack>
#define S(n) scanf("%d",&n)
#define Sll(n) scanf("%lld",&n)
#define Sl(n) scanf("%ld",&n)
#define ll long long 
#define li long int
using namespace std;
struct node {
	ll x;
	ll y;
};
ll gcd(ll a, ll b)
{
	return b == 0 ? a : a > b ? gcd(b, a%b) : gcd(a, b%a);
}
bool myfunc(struct node a,struct node b)
{
	if(a.x == b.x) {
		return a.y < b.y;
	} else {
		return a.x < b.x;
	}
}
ll po(ll a, ll b, ll mod)
{
	if(b == 0) {
		return 1;
	}
	ll t= po(a, b/2 , mod) % mod;
	if(b % 2== 0) {
		return (t*t) %mod;
	} else {
		ll ans = (((t*t) %mod) *a) %mod;
		return ans;
	}
}
string fibo[1000];
string sum[1000];
string add(string a, string b)
{
	string s;
	s = "";
	string n = "0123456789";
	int r = 0;
	int l1 = a.length();
	int l2 = b.length();
	int i, j;
	i = l1-1;
	j = l2-1;
	while(i >= 0 && j >= 0) {
		int t = ((a[i] - '0') + (b[j] - '0') + r) ;
		//cout << t << endl;
		s = s + n[t% 10];
		r = t / 10;
		i--;
		j--;

	}
	while(i >= 0) {
		int t = ((a[i] - '0') + r) ;
		s = s + n[t % 10] ;
		r = t/10;
		i--;
	}

	while(j >= 0) {
		int t = ((b[j] - '0') + r) ;
		s =   s + n[t % 10];
		r = t/10;
		j--;
	}
	while(r) {
		s = s + n[r% 10];
		r = r / 10;
	}
	reverse(s.begin(), s.end());

	return s;
}
int main()
{
	int t;
	S(t);
	fibo[1] = "1";
	fibo[2] = "2";
	int i;
	for(i = 3; i <= 110; i++) {
		fibo[i] = add(fibo[i-1], fibo[i-2]);
		
	}
	
	while(t--) {
		int n;
		cin >> n;
		cout << fibo[n] << endl;
	}
	return 0;
}