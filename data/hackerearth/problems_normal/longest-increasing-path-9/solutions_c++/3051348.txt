#include<bits/stdc++.h>
using namespace std;
long long int dp[1000001];
long long int maxx(long long int a,long long int b)
{
	if(a >= b)
		return a;
	else
		return b;
}

long long int solve(long long int n)
{
		;
}

int main()
{
	ios_base::sync_with_stdio(0);
	long long int ans = 0,N,M,T,A[102][102],dp[102][102];
	cin >> T;
	
	while(T--)
	{
		ans = 1;
		cin >> N >> M;
		for(int i = 1;i <= N;i++)
		{
			for(int j = 1;j <= M;j++)
			{
				cin >> A[i][j];
				dp[i][j] = -999999;
			}
		}


	dp[1][1] = 1;

	for(int i = 2;i <= N;i++)
	{
		if(A[i][1] > A[i - 1][1])
			dp[i][1] = 1 + dp[i - 1][1];
		else
			dp[i][1] = -999999;
		ans = maxx(ans,dp[i][1]);
	}

	for(int j = 2; j <= M;j++)
	{
		if(A[1][j] > A[1][j - 1])
			dp[1][j] = 1 + dp[1][j - 1];
		else
			dp[1][j] = -999999;
		ans = maxx(ans,dp[1][j]);
	}

	for(int i = 2;i <= N;i++)
	{
		for(int j = 2;j <= M;j++)
		{
			if(A[i][j] > A[i - 1][j])
				dp[i][j] = maxx(dp[i][j],1 + dp[i - 1][j]);
			if(A[i][j] > A[i][j - 1])
				dp[i][j] = maxx(dp[i][j],1 + dp[i][j - 1]);
			ans = maxx(ans,dp[i][j]);
		}
	}

	cout << ans << endl;
}

return 0;
}