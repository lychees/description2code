#include <iostream>
#include <sstream>
#include <vector>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <functional>
#include <utility>
#include <ctime>
#include <cstdio>
#include <limits>

using namespace std;

typedef long long LL;
typedef long double LD;
typedef vector<int> VI;
typedef vector<string> VS;
typedef pair<int, int> PII;

#define REP(i,x,n) for(int (i)=(int)x;(i)<(int)(n);++(i))
#define endl "\n"
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

LD d[3005][3005];
LL x[3005],y[3005],f[3005];
LD dp[3005];
int n;

int main(int argc, char const *argv[])
{
    ios::sync_with_stdio(false); cin.tie(NULL);
	cin>>n;
	REP(i,0,n){
		cin>>x[i]>>y[i]>>f[i];
		//cout<<x[i]<<y[i]<<f[i]<<endl;
	}
	REP(i,0,n){
		REP(j,0,n){
			d[i][j] = sqrt((LD)((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])));
		}
	}
	//fill(dp,dp+n,numeric_limits<LD>::min());
	dp[0]=f[0];
	for(int i=1;i<n;++i){
		dp[i]=-1ll<<60;
		for(int j=0;j<i;++j){
			dp[i]=max(dp[i],dp[j]-d[j][i]);
			//cout<<d[j][i]<<' '<<dp[i]<<endl;
		}
		dp[i]+=f[i];
	}
    cout<<fixed;
	cout.precision(6);
	cout<<dp[n-1]<<endl;
	return 0;
}