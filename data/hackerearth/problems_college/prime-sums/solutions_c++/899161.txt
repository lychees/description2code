#include <algorithm>
#include <assert.h>
#include <bitset>
#include <cmath>
#include <ctype.h>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <limits.h>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <stdio.h>
#include <string>
#include <string.h>
#include <time.h>
#include <utility>
#include <vector>
 
using namespace std;
 
typedef long long ll;
typedef pair<int,int> ipair;
typedef vector<int> vi;
 
#define MAX 5999999
#define MOD 1000000007
#define F first
#define S second
#define SZ size()
#define BG begin()
#define EN end()
#define FI freopen("I.txt","r",stdin)
#define FO freopen("O.txt","w",stdout)
#define GT(a) int a;scanf("%d",&a)
#define PT(a) printf("%d\n",a)
#define MP(a,b) make_pair(a,b)
#define PB(a) push_back(a)
#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define rev(i,n) for(int i=n;i>=0;i--)
#define take(ar,n) int ar[n]; rep(i,n) cin>>ar[i]
#define MS(a,b) memset(a,b,sizeof(a))
int ar[MAX+7];
void getPrime(int N, int res[])
{
    int i,a,b,s=1,f[4780],S=1;
    const int r=23000;
    bool B[r],*p=B;
 
    N/=2;
    res[0]=2;
    b=min(r,N);
    REP(i,1,b)p[i]=1;
    REP(i,1,b)if(p[i])
    {
        res[s++]=2*i+1;
        f[S]=2*i*(i+1);
        if(f[S]<N)
        {
            for(;f[S]<r;f[S]+=res[S])
            p[f[S]]=0;
            S++;
        }
    }
    for(a=r;a<N;a+=r)
    {
        b=min(a+r,N);
        p-=r;
        REP(i,a,b)p[i]=1;
        REP(i,1,S)for(;f[i]<b;f[i]+=res[i])p[f[i]]=0;
        REP(i,a,b)if(p[i])res[s++]=2*i+1;
    }
    return ;
}
int main()
{
    getPrime(MAX,ar);
    int n;
    ll r=0;
    cin>>n;
    rep(i,MAX)
    {
        if(ar[i]<n) r+=ar[i];
        else break;
    }
    cout<<r<<endl;
    return 0;
}