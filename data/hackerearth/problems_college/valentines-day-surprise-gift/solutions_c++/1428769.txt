#include <bits/stdc++.h>
using namespace std;

#define rep1(i, begin, end) for (__typeof(begin) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define rep2(i, begin, end) for (__typeof(begin) i = (begin); i != (end) + 1 - 2 * ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define mem(a, x) memset(a, x, sizeof(a))
#define all(a) a.begin(), a.end()
#define count_bits(x) __builtin_popcount(x)
#define count_bitsll(x) __builtin_popcountll(x)
#define least_bits(x) __builtin_ffs(x)
#define least_bitsll(x) __builtin_ffsll(x)
#define most_bits(x) 32 - __builtin_clz(x)
#define most_bitsll(x) 64 - __builtin_clz(x)

vector<string> split(const string &s, char c) {
	vector<string> v;
	stringstream ss(s);
	string x;
	while (getline(ss, x, c)) v.push_back(x);
	return v;
}

#define error(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); }

void err(vector<string>::iterator it) {}

template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
	cerr << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << '\n';
	err(++it, args...);
}

typedef long long ll;
const int MOD = 1000000007;

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void amax(T &a, T b) {if (b > a) a = b;}
template<class T> inline void amin(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {while (b != 0) {T c = a; a = b; b = c % b;} return a;}

const int N = 31;
ll R[N];

int dx[] = {1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5};
int dy[] = {1, 2, 3, 4, 5, 1, 3, 5, 1, 2, 4, 5, 1, 3, 5, 1, 2, 3, 4};

inline int calc(int a, int b) {
	return (a + b - 1) / b;
}

ll mod_pow(ll x, ll y) {
    ll res = 1;
    ll a = x;
    while (y > 0) {
        if (y & 1) {
            res = (res * a) % MOD;
        }
        a = (a * a) % MOD;
        y >>= 1;
    }
    return res;
}

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    int ntest, n;
    
    R[0] = R[1] = R[2] = 1;
    R[3] = R[4] = 3;
    R[5] = R[6] = 15;
    R[7] = R[8] = R[9] = R[10] = 105;
    rep1(i, 11, N) R[i] = (mod_pow(2, calc(i, 4)) * ((R[calc(i, 5)] * R[calc(i, 10)]) % MOD)) % MOD;
    cin >> ntest;
    while (ntest--) {
    	cin >> n;
    	ll x, y, ans = 1;
    	
    	rep1(i, 0, 19) {
    		x = R[n] * dx[i];
    		y = R[n] * dy[i];
    		//error(x, y, mod_pow(x, y));
    		amax(ans, mod_pow(x, y));
    	}
    	printf("%lld\n", ans);
    }
    return 0;
}
