from collections import OrderedDict
t = int(raw_input())
for _ in xrange(t):
    n, q = map(int, raw_input().split())
    expenses = OrderedDict()
    for N in xrange(n):
        name = raw_input()
        expenses[name] = [0, 0]
    for Q in xrange(q):
        kid = raw_input()
        amt = int(raw_input())
        count = int(raw_input())
        dup = count+1
        expenses[kid][1] += amt
        expenses[kid][0] += (amt/dup+amt % dup)
        for i in xrange(count):
            temp = raw_input()
            expenses[temp][0] += (amt/dup)
    for key in expenses:
        diff = expenses[key][1]-expenses[key][0]
        if diff == 0:
            print '%s neither owes nor is owed' % key
        elif diff > 0:
            print '%s is owed %d' % (key, diff)
        else:
            print '%s owes %d' % (key, -diff)
