#include <bits/stdc++.h>
using namespace std;

int N,K,A[101];
long long dp[101][100000],sum = 0;
long long mod = 1e9 + 7;

long long EXP(long long b,int p){
	b %= mod;
	if(p == 0) return 1LL;
	if(p == 1) return b;
	return (EXP(b*b,p/2) * EXP(b,p%2))%mod;
}

int main(){
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio (false);
	cin >> N >> K;
	for(int i = 1;i <= N;i++) cin >> A[i];
	dp[0][0] = 1;
	for(int i = 1;i <= N;i++){
		sum += A[i];
		for(int k = 0;k < K;k++) dp[i][k] = dp[i - 1][k];
		for(int k = 0;k < K;k++){
			long long nk = k + A[i];
			if(nk >= K) continue;
			dp[i][nk] = (dp[i][nk] + dp[i - 1][k])%mod;
		}
	//	cout << i << " : ";
	//	for(int k = 0;k < K;k++)
	//		cout << dp[i][k] << " ";
	//	cout << "\n";
	}
	long long ans = EXP(2,N);
	for(int k = 0;k < K;k++){
		long long tmp = dp[N][k];
		if(sum - k >= K) tmp += dp[N][k];
	//	cout << k << " : " << tmp << "\n";	
		ans -= tmp;
		ans = (ans%mod + mod)%mod;
	}
	cout << ans << "\n";
	return 0;
}