def primes_sieve1(limit):
    limitn = limit+1
    primes = dict()
    for i in range(2, limitn): primes[i] = True

    for i in primes:
        factors = range(i,limitn, i)
        for f in factors[1:]:
            primes[f] = False
    return [i for i in primes if primes[i]==True]
primes = primes_sieve1(130)
def smartDivisorGenerator(n):
    limit = 1
    for val in primes:
        counter = 1
        while True:
            if n%val == 0:
                counter+=1
                n = n/val
            else:
                break;
        limit = limit * counter
    return limit
for i in range(input()):
    l=[int(x) for x in raw_input().split()]
    a = 0
    b = 0
    for val in range(l[0], l[1]+1):
        div = smartDivisorGenerator(val)
        if div > a:
            b = 0
            a = div
            b +=1
        elif  div == a:
            b+=1
    print(str(b+1))
