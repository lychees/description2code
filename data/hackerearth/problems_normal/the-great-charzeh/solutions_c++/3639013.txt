#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>

#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,m,x[305],y,z[305];
vector<int> v[305];
pair<int,int> w[605];
bool q[305],o,hv[305][305];

bool dfs(int a){
	F1(b,0,v[a].size())if(!q[v[a][b]]){
		q[v[a][b]]=1;
		if(x[v[a][b]]==-1||dfs(x[v[a][b]])){
			x[v[a][b]]=a;
			return 1;
		}
	}
	return 0;
}

int main(){
	scanf("%d%d",&n,&m);
	m+=n-1;
	F1(a,0,n)scanf("%d",z+a);
	F1(a,0,m){
		scanf("%d",&w[a].first);
		w[a].second=a;
	}
	sort(w,w+m);
	F1(a,0,m){
		F1(b,0,n)if(w[a].second>=z[b]&&w[a].second-z[b]<n&&!hv[w[a].second-z[b]][b]){
			//printf("+ %d %d\n",w[a].second-z[b],b);
			hv[w[a].second-z[b]][b]=1;
			v[w[a].second-z[b]].pb(b);
			o=1;
		}
		if(w[a].first!=w[a+1].first&&o){
			y=0;
			F1(b,0,n)x[b]=-1;
			F1(b,0,n){
				F1(c,0,n)q[c]=0;
				if(dfs(b))y++;
			}
			if(y==n){
				printf("%d\n",w[a].first);
				//F1(b,0,n)printf("%d ",x[b]);
				return 0;
			}
			o=0;
		}
	}
    //system("pause");
}
