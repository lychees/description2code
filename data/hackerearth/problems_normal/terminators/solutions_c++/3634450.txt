#include <bits/stdc++.h>
using namespace std;
int a[1001];
int b[1001];
int arr[2][1001];
int dp[1001][1001];
int n;
int solve(int i,int j){
	if(i <= 0 || j <= 0)return 0;
	if(dp[i][j] != -1)return dp[i][j];
	int ans = 0;
	ans = max(ans,solve(i-1,j-1));
	if( b[arr[0][i]] <= j )
		ans = max(ans,1+solve(i-1,b[arr[0][i]]-1));
	if( a[arr[1][j]] <= i )
		ans = max(ans,1+solve(a[arr[1][j]]-1,j-1));
	//cout << i << " " << j << " " << ans << endl;
	return dp[i][j] = ans;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
    int T;
    cin >> T;
    while(T--){
    	cin >> n;
    	for(int i=0;i<n;i++)cin >> a[i] >> b[i], arr[0][a[i]] = i , arr[1][b[i]] = i;
    	memset(dp,-1,sizeof dp);
    	cout << solve(n,n)<<endl;
    }
    return 0;
}
