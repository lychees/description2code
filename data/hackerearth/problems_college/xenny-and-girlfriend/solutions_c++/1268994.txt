#include<bits/stdc++.h>

using namespace std;

typedef pair<int,int> ii;
typedef vector<ii> vii;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)

#define TRvii(c, it) for(vii::iterator it = (c).begin(); it != (c).end(); it++)
#define dfs_white -1
#define dfs_black 1
int dfs_num[100005];
vii AdjList[100005];

void dfs(int u)
{
    dfs_num[u]=dfs_black;
    TRvii(AdjList[u], v)
    if(dfs_num[v->first] == dfs_white)
            dfs(v->first);

}
int main()
{
    int T,N,M,u,v,C;
    scanf("%d",&T);
    while(T--){
    	C = 0;
    scanf("%d%d",&N,&M);
    F(i,1,N) AdjList[i].clear();
    F(i,1,M)
    {
        scanf("%d%d",&u,&v);
        AdjList[u].push_back(make_pair(v,0));
        AdjList[v].push_back(make_pair(u,0));
    }
    memset(dfs_num, dfs_white, sizeof(dfs_num));
    F(i,1,N)
    {
    	if(AdjList[i].size()>0)
    	{
    		dfs(i);
    		break;
    	}
    }
    bool flag = 1;
    F(i,1,N)
    {
    	if(dfs_num[i] == 0 && AdjList[i].size()>0)
    	{
    		flag = 0;
    		break;
    	}
    }
    F(i,1,N)
    {
    	if(AdjList[i].size()%2==1)
    	C++;
    }
    if(flag==1 && (C==2 || C==0)) printf("Yes\n");
    else printf("No\n");
}
    return 0;
}
