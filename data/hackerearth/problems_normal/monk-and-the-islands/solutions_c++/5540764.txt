#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int main()
{
    int tc; cin >> tc;
    for(int a0=0;a0< tc;a0++){
    	int N,M; cin>>N>>M;
    	int v,w;
    	vector<vector<int> > G(N,vector<int>());
    	for(int i=0;i<M;i++){
    		cin>>v>>w;
    		G[v-1].push_back(w-1);
    		G[w-1].push_back(v-1);
    	}
    	queue<int> q;
    	q.push(0);
    	vector<int> distTo(N);
    	distTo[0] = 0;
    	vector<bool> marked(N,false);
    	marked[0] = true;
    	while(!q.empty()){
    		int v = q.front();
    		q.pop();
    		
    		for(vector<int>::iterator it = G[v].begin();it!=G[v].end();it++){
    			if(!marked[*it] ){
    				distTo[*it] = distTo[v] + 1;
    				q.push(*it);
    				marked[*it]= true;
    			}
    		}
    	}
    	cout<<distTo[N-1]<<endl;
    }
    return 0;
}
