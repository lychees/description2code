#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <vector>
#include <list>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <fstream>
#include <ctime>
#include <cassert>
#include <stack>
#include <bitset>
#include <iomanip>
using namespace std;

typedef long long int ll;
typedef pair<int, int > pii;

#define MOD 1000000007
#define pb push_back
#define MAX 10005
#define INF 99999999
#define gc getchar_unlocked

#define os(a) cout<<a<<" "
#define on(a) cout<<a<<"\n"
#define on2(a,b) cout<<a<<" "<<b<<"\n"
#define on3(a,b,c) cout<<a<<" "<<b<<" "<<c<<"\n"

// int read_int() {
//   char c = gc();
//   while(c<'0' || c>'9') c = gc();
//   int ret = 0;
//   while(c>='0' && c<='9') {
//     ret = 10 * ret + c - 48;
//     c = gc();
//   }
//   return ret;
// }

// ll input() {
//   char c = gc();
//   while(c<'0' || c>'9') c = gc();
//   ll ret = 0;
//   while(c>='0' && c<='9') {
//     ret = 10 * ret + c - 48;
//     c = gc();
//   }
//   return ret;
// }

int gcd(int a, int b) {
	if(b == 0)
		return a;
	return gcd(b, a%b);
}

ll power(ll a, ll b) {
	ll res = 1;
	while(b) {
		if(b & 1) {
			res = (res * a) % MOD;
		}
		a = (a*a) % MOD;
		b >>= 1;
	}
	return res;
}

ll expo(ll a, ll b) {

	ll res = 1;
	while(b) {
		if(b & 1) {
			res = (res * a);
		}
		a = (a*a);
		b >>= 1;
	}
	return res;
}


void solve() {
	int n, k;
	cin>>n>>k;
	vector<pii> a(n);
	int ai, bi;
	for(int i=0;i<n;i++) {
		cin>>ai>>bi;
		a[i] = pii(ai, bi);
	}
	vector<pii> dp(n+1, pii(0, 0));
	for(int i=0;i<n;i++)
		dp[i] = a[i];
	for(int i=k;i<=n;i++) {
		ll mn = 9999999999, mina = -1, minb = -1;
		for(int j=i-k;j<i;j++) {
			if(mn > dp[j].first * dp[j].second) {
				mn = dp[j].first * dp[j].second;
				mina = dp[j].first, minb = dp[j].second;
			}
		}
		dp[i].first = max(dp[i].first, (int)mina);
		dp[i].second = max(dp[i].second, (int)minb);
	}
	cout<<dp[n].first * dp[n].second<<"\n";
}

int main()
{
	std::ios::sync_with_stdio(false);
	// freopen ("C:\\Users\\Ritesh\\Desktop\\Coding\\Codeforces\\input.txt","r",stdin);
	int t;
	//cin>>t;
	t = 1;
	while(t--)
	{
		solve();
	}
	return 0;
}
