#include <iostream>
#include <string>
#include <vector>
#include <cstring>
#include <map>

using namespace std;

#define ULL unsigned int

#define FOR(i,n) for(ULL i = 0; i < n; i++)

ULL T = 0, N = 0;

typedef vector<int> Vector;
typedef map <string, Vector*> Map;
typedef map <string, Vector*>::iterator ITRMap;
Map mMap;

int getcount(ULL min, ULL max, string str)
{
	ULL res = 0;

	ITRMap itr = mMap.find( str );

	if( itr == mMap.end() )
	{
		return res;
	}
	else
	{
		Vector* pVector = itr->second;

		for( ULL i = 0; i < pVector->size(); i++ )
		{
			ULL val = (*pVector)[i];
			if( val >= min && val <= max )
			{
				res++;
			}
		}
	}

	return res;
}

int main()
{
    cin >> N;

	string temp;
	FOR(i, N)
	{
		cin >> temp;
		Vector* pVector = NULL;

		ITRMap itr = mMap.find(temp);
		if( itr == mMap.end() )
		{
			pVector = new Vector();
			mMap[temp] = pVector;
			
		}
		else
		{
			pVector = itr->second;
		}

		pVector->push_back(i + 1);		
	}

	cin  >> T;

	FOR(i, T)
	{
		ULL min, max;
		cin >> min;
		cin >> max;

		string str;
		cin >> str;

		cout << getcount(min, max, str) << endl;
	}

    return 0;
}
