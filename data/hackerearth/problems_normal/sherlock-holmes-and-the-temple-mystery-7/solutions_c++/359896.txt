#include <iostream>
#include <vector>
using namespace std;

vector < vector <int> > table;
vector < int > costs;


int dp(int n, int c)
{
	if(c==0)
		return 1;
	if(n==table.size())
		return 0;
	if(table[n][c]!=-1)
		return table[n][c];
	
	int temp1 = dp(n+1,c-costs[n]);
	int temp2 = dp(n+1,c);
	table[n][c] = temp1 | temp2;
	return table[n][c];
}
int main()
{
	int t;
	cin>>t;
	while(t>0)
	{
		int n;
		cin>>n;
		costs.clear();
		table.clear();
		costs.resize(n);
		table.resize(n);
		int sum = 0;
		for(int i=0;i<n;i++)
		{
			cin>>costs[i];
			sum+=costs[i];
			table[i].resize(5001,-1);
		}
		if(sum%2!=0)
		{
			cout<<"NO"<<endl;
			t--;
			continue;
		}
		if(dp(0,sum/2))
			cout<<"YES"<<endl;
		else
			cout<<"NO"<<endl;
		
		
		t--;
	}
    return 0;
}
