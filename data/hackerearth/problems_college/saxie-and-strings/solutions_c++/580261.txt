#include <iostream>

template <typename Func>
void iterate_substrings(std::string const & str, Func f)
{
	for (int i = 0; i < str.size(); ++i) {
		int sizeLeft = str.size() - i;
		
		for (int j = 1; j <= sizeLeft; ++j) {
			if (f(str.substr(i, j))) {
				return;
			}
		}
	}
}

bool passes_test(std::string const & word)
{
	std::string rev(word.rbegin(), word.rend());
	
	bool passes = true;
	
	iterate_substrings(word, [&rev, &passes] (std::string && sub) {
		if (rev.find(sub) == std::string::npos) {
			passes = false;
			return true;
		}
		
		return false;
	});
	
	return passes;
}

int main()
{
	int words;
	std::cin >> words;
	
	std::string word;
	
	while (words-- > 0) {
		std::cin >> word;
		
		std::cout << (passes_test(word) ? "YES" : "NO") << std::endl;
	}
	
	return 0;
}
