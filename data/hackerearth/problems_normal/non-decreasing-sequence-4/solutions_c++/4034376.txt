#include <iostream>
#include <cstring>
#include <climits>
#include <cmath>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <float.h>

#define ll long long
#define iloop(i,j,n) for(ll i=j;i<n;i++)
#define dloop(i,j,n) for(ll i=j;i>=n;i--)
#define mod 1000000007
#define all(v) v.begin(),v.end()
#define sc(n) scanf("%lld",&n)
#define pi(n) printf("%lld",n);
#define pb(i) push_back(i)
#define dbl double
#define st struct node

using namespace std;

ll stack[1000001];
ll top=-1;
void push(ll num)
{
	stack[++top]=num;
}
ll pop()
{
	return stack[top--];
}

int main()
{
	ll t;sc(t);
	while(t--)
	{
		top=-1;
		ll n;sc(n);
		ll a[n];
		sc(a[0]);
		push(a[0]);
		iloop(i,1,n)
		{
			sc(a[i]);
			if(a[i] > stack[top])
			{
				push(a[i]);
			}
			else
			{
				ll start=0,final=top,flag=1,mid;
				while(final >= start)
				{
					mid=( start + final )/2;
					if(stack[mid]==a[i])
					{
						flag=0;
						break;
					}
					if(stack[mid]>a[i] && stack[mid-1]<a[i])
						break;
					else if(stack[mid] > a[i])
						final = mid-1;
					else
						start = mid + 1;
				}
				if(flag)
					stack[mid] = a[i];
			}
			// iloop(j,0,top+1)
			// {
			// 	cout << stack[j] << ' ';
			// }
			// cout << endl;
		}
		ll len;sc(len);
		if(top + 1 < len)
			printf("-1\n");
		else
			printf("%lld\n",stack[len-1]);
	}
	return 0;
}