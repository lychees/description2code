#include<bits/stdc++.h>
using namespace std;
#define mx 1000
#define tmx 1000002
int prime[1000002],tp;
long p[100000];
void seive()
{   long i,j,k,t=0;
     memset(prime,0,sizeof(prime));
    prime[0]=prime[1]=1;
    for(i=2;i<mx;i++)
    {
        if(prime[i]==0)
        {//cout<<i<<" "<<t<<endl;
            p[t++]=i;
            for(j=i*i;j<tmx;j+=i)
            prime[j]=1;
        }
    }
for(;i<tmx;i++)
    if(prime[i]==0) p[t++]=i;
 tp=t;
}

long long euler(long long n,vector<long>v)
{  long long res=n;
    for(long i=0;i<v.size();i++)
    { while(n%v[i]==0)n/=v[i];
      res=res/v[i]*( v[i]-1) ;
    }
    if(n>1) res=res/n *(n-1);
    return res;
}

int main()
{int t;
seive();
scanf("%d",&t);
while(t--)
{
    long long a,b,i,j,k,vl,ans=0;
    scanf("%lld%lld%lld",&a,&b,&k);
    vector<long >v[b-a+1];
    for(i=0;i<tp && p[i]<=sqrt(b);i++)
    {j=a;
      if(j%p[i]!=0)
      { //while(j%p[i]!=0 && j<=b)
         // j++;
         vl=j%p[i];
         j+=(p[i]-vl);
      }
      for(;j<=b;j+=p[i])
        v[j-a].push_back(p[i]);
    }
    for(i=a;i<=b;i++)
    {
        //printf("%lld\n",euler(i,v[i-a]));
       if(euler(i,v[i-a])%k==0)
        ans++;
    }
    //cout<<ans<<endl;
    double d=ans*1.0/(b-a+1)*1.0;
    printf("%.6lf\n",d);
}

 return 0;
}















