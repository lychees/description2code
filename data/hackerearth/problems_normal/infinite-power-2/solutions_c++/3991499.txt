#include <bits/stdc++.h>
using namespace std;
vector <long long> e;
vector <long long> all;
long long gcd(long long x,long long y)
{
	if(x<=0 || y<=0)
		return 0;
	long long r;
	do
	{
		r=x%y;
		if(r==0)
			break;
		x=y;
		y=r;
		
	}while(true);
	return y;
		
}
void solve(long long x,int i)
{
	if(i==10)
	{
		all.push_back(x);
		return ;
	}
	for(int j=0;j<e.size();j++)
		solve(x*10 + e[j],i+1);
}
void create()
{
	for(int i=0;i<=8;i+=2)
		e.push_back(i);
	solve(0,0);
}
long long bs(long long x,bool flag)
{
	int start=0,end=all.size()-1,mid;
	long long ans=0;
	while(start<=end)
	{
		mid=(start+end)/2;
		if(all[mid]<x)
		{
			if(flag)
				ans=all[mid];
			start=mid+1;
		}
		else if(all[mid]>x)
		{
			if(!flag)
				ans=all[mid];
			end=mid-1;
		}
		else
			return x;
	}
	return ans;
}
int main()
{
		
	all.clear();
	e.clear();
	create();
	sort(all.begin(),all.end());
	all.push_back(1e9);
    int t;
    long long x;
    cin>>t;
    for(int i=0;i<t;i++)
    {
    	scanf("%lld",&x);
    	
    		long long up=bs(x,false);
    		long long low=bs(x,true);
    		if(low==up || x==up || x==low)
    		{
    			printf("Unlimited Power\n");
    			continue;
    		}
    		up=up-x;
    		low=x-low;
    		long long g=gcd(up,low);
    		up=up/g;
    		low=low/g;
    		printf("%lld/%lld\n",up,low);
    	
    }
    return 0;
}
