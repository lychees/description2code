#include<algorithm>
#include<iostream>
#include<vector>

int main(int argc, char const *argv[]) {

  int T, N;


  std::cin >> T;

  while (T--) {

    std::cin >> N;

    //Create a 3-D Vector for shops

    std::vector<std::vector<int>> shop(N, std::vector<int>(3));

    for (int i = 0; i < N; i++) {
      for (int j = 0; j < 3; j++) {
        std::cin >> shop[i][j];
      }
    }

    // Create a 3-D Vector for tabulation

    std::vector<std::vector<int>> memo(N, std::vector<int>(3));

    //Memorize the items in the first shop

    for (int i = 0; i < 3; i++) {
      memo[0][i] = shop[0][i];
    }

    /*
    Memorize the purchase in the subsequent shops by calculating
    the minimum amount that can be spent in the current shop
    */

    for (int i = 1; i < N; i++) {
      memo[i][0] = std::min(memo[i-1][1], memo[i-1][2]) + shop[i][0];
      memo[i][1] = std::min(memo[i-1][0], memo[i-1][2]) + shop[i][1];
      memo[i][2] = std::min(memo[i-1][0], memo[i-1][1]) + shop[i][2];
    }

      int min_cost = std::min(std::min(memo[N-1][0] , memo[N-1][1]) , memo[N-1][2]);

      std::cout << min_cost << std::endl;
    }
  return 0;
}
