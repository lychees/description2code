#include<iostream>
using namespace std;
#include <algorithm>
#include <vector>
class abc
{
	public:
	long long x,y,z;
	abc()
	{

	}
	abc(const abc &q)
	{
	x=q.x;
	y=q.y;
	z=q.z;
	}
};
bool cmp(abc b, abc c)
{
	return ( b.x<=c.x ||(b.x==c.x && b.y<c.y));
}
int main()
{


    int t;
    cin>>t;
    vector< abc> a;
     abc w;
    w.x=0;
    w.y=0;
    w.z=0;

    int n;
    long long q;
    long long p;
    int mid,high,low;
    for(int k=0;k<t;k++)
    {


        cin>>n;
        cin>>q;

        for(int j=0;j<n;j++)
        {
        	a.push_back(w);
            cin>>a[j].x>>a[j].y;

        }
         sort(a.begin(),a.begin()+n,cmp);
        int ii=0,ij=1;
        while(ij<n)
        {

            if(a[ii].y>=a[ij].x)
            {
                a[ii].y=max(a[ii].y,a[ij].y);
                a[ij].x=-1;
                ij++;

            }
            else
            {


                ii=ij;

                ij++;
            }

        }
        ii=0;ij=0;

            while(ii <n &&a[ii].x!=-1)
                ii++;
                ij=ii+1;
                while(ij<n)
                {   if(a[ij].x!=-1)
                    {
                            a[ii]=a[ij];
                            ii++;
                            ij++;
                    }
                    else

                        ij++;

                }
                n=ii;

                  a[0].z=a[0].y-a[0].x+1;

        for(int j=1;j<n;j++)
        {
            a[j].z=a[j].y-a[j].x+1;
            a[j].z=a[j].z+a[j-1].z;
        }
        for(int j=0;j<q;j++)
        {

            cin>>p;

            if(p>a[n-1].z)
            {
                cout<<"-1\n";

            }
            else
            {
                low=0;high=n-1;
                 int found=-1;
                 while(low<=high)
                 {
                    mid=(low+high)/2;

                    if(mid==0)
                    {
                        if(a[mid].z>=p)
                            found=0;
                        else
                            found=1;
                        break;
                    }
                    else
                    {

                        if(a[mid].z>=p && a[mid-1].z<p)
                            {found=mid;break;}
                        else if(a[mid].z<=p)
                            low=mid+1;
                        else
                            high=mid-1;
                    }
                }
                cout<<a[found].y-a[found].z+p<<"\n";
            }
        }
        }
    }



