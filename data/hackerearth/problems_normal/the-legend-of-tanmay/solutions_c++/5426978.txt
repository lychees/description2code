#include<iostream>
#include<vector>
#include<algorithm>
#define ll long long
using namespace std;

int main()
{
	int T; cin >> T;
	while (T--)
	{
		int N; cin >> N;
		int *Ni = new int[N];
		for (int i = 0; i < N; ++i)
			cin >> Ni[i];
		sort(Ni, Ni + N);
		vector<int> pos;
		vector<int> neg;
		for (int i = 0; i < N;++i)
		if (Ni[i] < 0)neg.push_back(Ni[i]);
		else break;
		for (int i = neg.size(); i < N; ++i)
			pos.push_back(Ni[i]);
		ll max =1;
		bool  maxm = false;
		ll min = 1;
		if (neg.size()>0)
		{
			if (neg.size() % 2 == 0)
			{
				for (int i = 0; i < neg.size(); ++i)
				{
					max *= neg[i];
					maxm = true;
				}
				for (size_t i = 0; i < neg.size() - 1; ++i)
					min *= neg[i];
			}
			else
			{
				for (int i = 0; i < neg.size() - 1; ++i)
				{
					maxm = true;
					max *= neg[i];
				}
				for (int i = 0; i < neg.size(); ++i)
					min *= neg[i];
			}
		}
		int fNz = 0;
		while (fNz < pos.size() && pos[fNz] == 0)
			fNz++;
		if (pos.size()>0)
		for (int i = fNz; i < pos.size(); ++i)
		{
			max *= pos[i];
			min *= pos[i];
		}
		if (min>0 && fNz>0)
			min = 0;
		else if (min > 0 && fNz == 0)
			min = pos[0];
		if ((neg.size() <2) && pos.size()>0 && 
			fNz == pos.size())max = 0;
		else if (pos.size() == 0 && neg.size()>0 && !maxm)max = neg[neg.size() - 1];
		cout << max << " " << min << endl;


	}
}

