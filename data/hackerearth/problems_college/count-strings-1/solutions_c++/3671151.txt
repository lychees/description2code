#include<bits/stdc++.h>

#define pb push_back
#define len(n) n.length()
#define mp make_pair
#define forp(i,a,b) for(int i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;i++)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(int i=a;i>=b;i--)
#define fre     freopen("0.in","r",stdin),freopen("0.out","w",stdout)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define vll vector<long long int>
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define g2(m,n) cin >> m >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define onn printf("\n")
#define ostr(n) printf("%s",n)
#define os(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define alll(n,i,j) n.begin()+i,n.begin()+j
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define boost ios_base::sync_with_stdio(false);cin.tie(NULL)
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define mem(n,m) memset(n,m,sizeof(n))
#define bitc(n) __builtin_popcount(n)
#define mod 1000000007
#define mod2 1000000009
#define ma(m,n) m = max(m,n)
#define mi(m,n) m = min(m,n)
#define EPSILON 1e-6
#define PI 3.14159265358979323846

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
using namespace std;
typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;
#define N 1000005
#define INF mod
/*
freopen("army.in","r",stdin);
freopen("army.out","w",stdout);
*/

																																													inline ll mod_pow(ll a,ll n,ll b){ll res = 1;while(n){if(n&1) {res = (res*a)%b;}a = (a*a)%b;n >>= 1;}return res%b;}
                                                                                                                                                                                    inline ll mod_div(ll a,ll b,ll md){ll ans = (a*mod_pow(b,md-2,md))%md; return ans;}
                                                                                                                                                                                    inline void add(ll &a,ll b,ll md){a += b; if(a >= md) a -= md;}
                                                                                                                                                                                    inline void sub(ll &a,ll b,ll md){add(a,md-b,md);}
                            


int cnt1[26], cnt2[26];
int fac[N];

int main () {
  boost;
  int t;
  fac[0] = 1;
  forp (i,1,N-1) {
  	fac[i] = 1ll * fac[i-1] * i % mod;
  }
  cin >> t;
  while (t--) {
  	mem(cnt1, 0);
  	mem(cnt2, 0);
  	string a,b;
  	cin >> a >> b;
  	int n = len(a), m = len(b);
  	rep (i,n) {
  	 ++cnt1[a[i]-'a'];	
	}
	rep (i,m) {
	 ++cnt2[b[i]-'a'];
	}
	int ans = 1;
	rep (i,26) {
	 if (cnt1[i] >= cnt2[i]) {
	 	int tmp = mod_div(fac[cnt1[i]], fac[cnt1[i]-cnt2[i]], mod);
	 	ans = 1ll * ans * tmp % mod;
	 } else {
	 	ans = 0;
	 	break;
	 }
	}
	cout << ans << "\n";
  }
  return 0;
}