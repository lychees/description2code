#include<bits/stdc++.h>
#include<vector>
#include<algorithm>
using namespace std;

vector< pair<pair<int,int>,double> > lot;
int n,p[53];
double dp[53][53];
double solve(int idx,int prev)
{
	if(idx==n)
		return 0;
	if(dp[idx][prev]>=0) return dp[idx][prev];	
	double res;
	res=solve(idx+1,prev);	
	if(prev==n+1 || lot[prev].first.second <= lot[idx].first.first)
		res=max(res,lot[idx].second + solve(idx+1,idx));
	return dp[idx][prev]=res;	
}
int main()
{
	int t,x,y;
	cin>>t;
	while(t--)
	{
		lot.clear();
		memset(dp,-1,sizeof(dp));
		cin>>n;
		int p;
		for(int i=0;i<n;i++)
		{
			cin>>x>>y>>p;
			lot.push_back(make_pair(make_pair(x,y),p/100.0));
		}	
		sort(lot.begin(),lot.end());
		printf("%.2lf\n",solve(0,n+1));
		//cout<<solve(0,0);	
	}
	return 0;
}