'''

from operator import mul    # or mul=lambda x,y:x*y
from fractions import Fraction

def nCk(n,k): 
  return int( reduce(mul, (Fraction(n-i, i+1) for i in range(k)), 1) )
'''
'''
def choose(n, k):
    """
    A fast way to calculate binomial coefficients by Andrew Dalke (contrib).
    """
    if 0 <= k <= n:
        ntok = 1
        ktok = 1
        for t in xrange(1, min(k, n - k) + 1):
            ntok *= n
            ktok *= t
            n -= 1
        return ntok // ktok
    else:
        return 0
        

from math import factorial

def calculate_combinations(n, r):
    return factorial(n) // factorial(r) // factorial(n-r)
'''
def binomial(n, k):
	c = [0] * (n + 1)
	c[0] = 1
	for i in range(1, n + 1):
	    c[i] = 1
	    j = i - 1
	    while j > 0:
	        c[j] += c[j - 1]
	        j -= 1
	
	return c[k]
  
def main():
	for _ in xrange(int(raw_input())):
		N,k = [int(x) for x in raw_input().split()]
		print binomial(k+N-1,N-1)

main()