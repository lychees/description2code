#include <bits/stdc++.h>
using namespace std;

int n, l, t;

long long k;

long long mod=1000000007;

long long dp[3400][3400];
int dps[3400][3400];
int dpm[3400][3400];

long long dod;

int main()
{
    scanf("%d%d%d%lld", &n, &l, &t, &k);
    dp[0][0]=1;
    dps[0][0]=1;
    dpm[0][0]=1;
    for (int i=1; i<=n; i++)
    {
        for (int j=0; j<=t; j++)
        {
            dp[i][j]+=(dps[i-1][j]-dps[max(0, i-l)][j])*(k-1);
            dp[i][j]%=mod;
            if (i<l)
            {
                dp[i][j]+=dp[0][j]*k;
                dp[i][j]%=mod;
            }

            if (i>l)
            {
                if (i-l-j+1>=0)
                {
                    dp[i][j]+=(dpm[i-l][j-1]-dpm[0][i-l-j+1])*(k-1);
                    dp[i][j]%=mod;
                }
            }

            if (i>=l && i-l-j+1>=0)
            {
                dp[i][j]+=dp[0][i-l-j+1]*k;
                dp[i][j]%=mod;
            }

            dps[i][j]=dp[i][j]+dps[i-1][j];
            dps[i][j]%=mod;

            dpm[i][j]=dp[i][j];
            if (j>0)
            dpm[i][j]+=dpm[i-1][j-1];
            dpm[i][j]%=mod;
        }
    }
    printf("%lld\n", dp[n][t]);
    return 0;
}

