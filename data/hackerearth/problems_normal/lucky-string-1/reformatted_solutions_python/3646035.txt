from math import log, ceil
T = raw_input()
T = int(T)


def binrep(n, block_size):
    zeros = "0"
    s1 = str(bin(n)[2:])
    if (len(s1) != block_size):
        s1 = zeros*(block_size-len(s1)) + s1
    return s1


def findblock(n):
    i = 1
    n1 = n
    while (n > 0):
        n -= (2**i)*i
        i += 1
    return i-1


for t in range(T):
    N = int(raw_input())
    J = findblock(N)
    R = (N - sum([(2**i)*i for i in range(1, J)]))
    Stack = int(ceil((R*1.0)/J)) - 1
    Pos = R - Stack*J
    s = binrep(Stack, J)[Pos-1]
    res = "Hacker" if s == "0" else "Earth"
    print res
