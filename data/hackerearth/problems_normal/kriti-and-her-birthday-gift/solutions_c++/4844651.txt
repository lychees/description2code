// https://www.hackerearth.com/problem/algorithm/kriti-and-her-birthday-gift/

#include <bits/stdc++.h>
typedef long long ll;
struct node
{
	int l,r,index;
	std::string s;
};

int BLOCK_SIZE;
ll lt,rt;
ll ans=0;

std::unordered_map<std::string,int>m;

bool cmp(node a,node b)
{
	if(a.l/BLOCK_SIZE != b.l/BLOCK_SIZE)
		return a.l/BLOCK_SIZE < b.l/BLOCK_SIZE;

	return a.r<b.r;
}

inline void add(std::string x)
{
	if(m.count(x)!=0)
		m[x]++;
	else
		m[x]=1;
}

inline void del(std::string x)
{
	if(m.count(x)!=0)
	{
		if(m[x]==1)
			m.erase(x);
		else m[x]--;
	}
}

int main(){

	//std::ios_base::sync_with_stdio(false);
	int n,q;
	
	scanf("%d",&n);
	BLOCK_SIZE=(int)sqrt(n);
	ans=0;

	std::string a[100010];
	char temp[100];
	ll ANS[100010];
	node nodes[100010];


	for(int i=0;i<n;i++)
		scanf("%s",temp),a[i]=temp;

	scanf("%d",&q);

	for(int i=0;i<q;i++)
	{
		scanf("%d%d%s",&nodes[i].l,&nodes[i].r,temp);
		nodes[i].s=temp;
		//std::cin>>nodes[i].l>>nodes[i].r>>nodes[i].s;
		nodes[i].index=i;
		nodes[i].l--,nodes[i].r--;
	}
	std::sort(nodes,nodes+q,cmp);

	// MO's start 
	lt=0,rt=-1;

	for (int i = 0; i < q; ++i)
	{
		while(rt<nodes[i].r)
			add(a[++rt]);

		while(rt>nodes[i].r)
			del(a[rt--]);

		while(lt<nodes[i].l)
			del(a[lt++]);

		while(lt>nodes[i].l)
			add(a[--lt]);
		std::string str = nodes[i].s;
		if(m.count(str)!=0)
			ANS[nodes[i].index]=m[str];
	}

	for(int i=0;i<q;i++)
		printf("%lld\n",ANS[i]);
	return 0;
}