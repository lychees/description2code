#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define MAXN 100001

vector<int> adj[MAXN];
int sz[MAXN];
LL ans[MAXN];

int dfs1(int u, int p = 0) {
  sz[u] = 1;
  for (int v: adj[u])
    if (v != p) sz[u] += dfs1(v, u);
  return sz[u];
}

LL dfs(int u, int p = 0, LL tot = 0) {
  if (u == 1) {
    LL sum = 0;
    ans[u] = sz[u] - 1;
    for (int v: adj[u]) {
      ans[u] += sum * sz[v];
      sum += sz[v];
    }
  }
  else {
    ans[u] = tot * sz[u];
  }
  for (int v: adj[u]) {
    if (v != p)
      dfs(v, u, tot * (sz[u] - sz[v]));
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL); 

  int n; cin >> n;
  for (int i = 0, u, v; i < n - 1; i++) {
    cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }
  dfs1(1);
  //dfs(1);
  sz[1]--;
  for (int i = 1; i <= n; i++) cout << sz[i] << ' ';
  cout << '\n';
  
  return 0;
}
