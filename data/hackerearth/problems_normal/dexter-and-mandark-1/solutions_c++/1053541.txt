#include <iostream>
using namespace std;
#include<cstring>
#define MOD 1000000007

int dp[1010][1010],n,m;

int recur(int id,int s) {
	if(s < m*(id-s)) return 0;
	if(id==n) return (s>(id-s));
	if(dp[id][s] != -1) return dp[id][s];
	return dp[id][s] = (recur(id+1,s)+recur(id+1,s+1))%MOD;
}


int main()
{
	int t;
    cin >> t;
    while(t--) {
    	cin >> n >> m;
    	memset(dp,0,sizeof dp);
    	for(int i=n;i>=0;i--) {
    		for(int j=n;j>=0;j--) {
    			if(i == n) {
    				dp[i][j] = (j>(i-j) && j>=m*(i-j));
    			} else {
    				if(j>=m*(i-j)) {
    					dp[i][j] = (dp[i+1][j]+dp[i+1][j+1])%MOD;
    				}
    			}
    		}
    	}
    	cout << recur(0,0) << endl;
    }
    
}
