INF = 1111111


def check(d):
    ans = 0
    for key, value in d.iteritems():
        if value > 0:
            ans += 1
    return ans


def solve(pos, track, N, K, choco):
    # print pos, track, N, K, choco
    if (pos == N):
        if (check(track) >= K):
            return 0
        return INF
    ret = INF

    for i in choco[pos]:
        track[i] += 1
    ret = min(ret, solve(pos + 1, track, N, K, choco)+1)
    for i in choco[pos]:
        track[i] -= 1
    ret = min(ret, solve(pos+1, track, N, K, choco))
    return ret


T = int(raw_input())
for cs in range(T):
    N, K = map(int, raw_input().split())
    choco = []
    track = {}
    for i in range(N):
        data = map(str, raw_input().split())
        choco.append([j for j in data[1:]])
        for k in data[1:]:
            track[k] = 0
        # print choco[i], track
    ans = solve(0, track, N, K, choco)
    if ans == INF:
        print -1
    else:
        print ans
