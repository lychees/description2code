#include<iostream>
#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<iomanip> 
#include<utility> 
#include<climits>
#include<cmath>
#include<map>
#include<algorithm>


using namespace std;


#define LL long long int
#define sc1(x) scanf("%d", &x)
#define sc2(x, y) scanf("%d%d", &x, &y)
#define sc3(x, y, z) scanf("%d%d%d", &x, &y, &z)
#define pr1(x) printf("%lld\n", x)
#define FOR(i, a, n) for(int i=a;i<n;i++)
#define pp pair<int, int>
#define pb push_back 

#define MAX 1000001
#define MOD 1000000007LL


vector<int> primes = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
bool prime[MAX];
int rem[17];
vector<LL> v, temp, mat;
map<LL, int> arr;


bool check(LL n) {
	if(n < 10) return 0;
	while(n > 9) {
		int digit = n % 10;
		n /= 10;

		int x = ((n%10)*10) + digit;

		if(prime[x]) return true;
	}
	return false;
}


void offline() {

	for(auto p: primes) {
		prime[p] = true;
	}

	FOR(i, 0, 10) { 
		if((i%1) == rem[1]) {
			v.pb(i); 

			if(i) mat.pb(i); 
		}
	}

	FOR(i, 2, 16) {
		temp.clear();

		for(auto elem: mat) {
			FOR(j, 0, 10) {
				if((((elem*10) + j)%i) == rem[i]) {
					temp.pb((elem*10) + j);
				} 
			}
		}

		mat = temp;
		for(auto elem: mat) { v.pb(elem);}
	}

	sort(v.begin(), v.end());

	int k = 0;
	for(auto elem: v) {
		if(check(elem)) arr[elem] = ++k;
	}
} 


LL func(LL n) {

	if(arr.size()) {
		if(arr.rbegin()->first < n) return arr.rbegin()->second;
		auto it = arr.lower_bound(n);

		if(it == arr.end()) return 0;

		if(it->first > n) {
			return it->second-1;
		}
		return it->second;
	}
	return 0;
}


int main() {

	FOR(i, 1, 16) {
		sc1(rem[i]);
	}

	offline();

	int q;
	LL a, b;

	sc1(q);
	FOR(i, 0, q) {
		scanf("%lld%lld", &a, &b);

		LL result = func(b) - func(a-1);
		pr1(result); 
	}

	return 0;
}







