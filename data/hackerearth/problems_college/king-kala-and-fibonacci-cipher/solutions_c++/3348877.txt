#include <bits/stdc++.h>

using namespace std;

int ans_a[100005]={0};
int ans_b[100005]={0};
int ans_c[100005]={0};
int ans_d[100005]={0};
int ans_e[100005]={0};
int ans_f[100005]={0};
int ans_g[100005]={0};
int ans_h[100005]={0};
int ans_i[100005]={0};
int ans_j[100005]={0};
int ans_k[100005]={0};
int ans_l[100005]={0};
int ans_m[100005]={0};
int ans_n[100005]={0};
int ans_o[100005]={0};
int ans_p[100005]={0};
int ans_q[100005]={0};
int ans_r[100005]={0};
int ans_s[100005]={0};
int ans_t[100005]={0};
int ans_u[100005]={0};
int ans_v[100005]={0};
int ans_w[100005]={0};
int ans_x[100005]={0};
int ans_y[100005]={0};
int ans_z[100005]={0};

int sol[100005];

void fun()
{
    sol[0] = 0;
    sol[1] = 1;
    //ans_a[]
    for (int i = 2;i <= 100005;i++)
    {
        sol[i] = (sol[i-1] + sol[i-2]) % 26;
    }

    //for (int j = 0;j < 26;j++){
        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 0)
                ans_a[i] = ans_a[i-1] + 1;
            else
                ans_a[i] = ans_a[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 1)
                ans_b[i] = ans_b[i-1] + 1;
            else
                ans_b[i] = ans_b[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 2)
                ans_c[i] = ans_c[i-1] + 1;
            else
                ans_c[i] = ans_c[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 3)
                ans_d[i] = ans_d[i-1] + 1;
            else
                ans_d[i] = ans_d[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 4)
                ans_e[i] = ans_e[i-1] + 1;
            else
                ans_e[i] = ans_e[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 5)
                ans_f[i] = ans_f[i-1] + 1;
            else
                ans_f[i] = ans_f[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 6)
                ans_g[i] = ans_g[i-1] + 1;
            else
                ans_g[i] = ans_g[i-1];
        }


        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 7)
                ans_h[i] = ans_h[i-1] + 1;
            else
                ans_h[i] = ans_h[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 8)
                ans_i[i] = ans_i[i-1] + 1;
            else
                ans_i[i] = ans_i[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 9)
                ans_j[i] = ans_j[i-1] + 1;
            else
                ans_j[i] = ans_j[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 10)
                ans_k[i] = ans_k[i-1] + 1;
            else
                ans_k[i] = ans_k[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 11)
                ans_l[i] = ans_l[i-1] + 1;
            else
                ans_l[i] = ans_l[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 12)
                ans_m[i] = ans_m[i-1] + 1;
            else
                ans_m[i] = ans_m[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 13)
                ans_n[i] = ans_n[i-1] + 1;
            else
                ans_n[i] = ans_n[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 14)
                ans_o[i] = ans_o[i-1] + 1;
            else
                ans_o[i] = ans_o[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 15)
                ans_p[i] = ans_p[i-1] + 1;
            else
                ans_p[i] = ans_p[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 16)
                ans_q[i] = ans_q[i-1] + 1;
            else
                ans_q[i] = ans_q[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 17)
                ans_r[i] = ans_r[i-1] + 1;
            else
                ans_r[i] = ans_r[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 18)
                ans_s[i] = ans_s[i-1] + 1;
            else
                ans_s[i] = ans_s[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 19)
                ans_t[i] = ans_t[i-1] + 1;
            else
                ans_t[i] = ans_t[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 20)
                ans_u[i] = ans_u[i-1] + 1;
            else
                ans_u[i] = ans_u[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 21)
                ans_v[i] = ans_v[i-1] + 1;
            else
                ans_v[i] = ans_v[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 22)
                ans_w[i] = ans_w[i-1] + 1;
            else
                ans_w[i] = ans_w[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 23)
                ans_x[i] = ans_x[i-1] + 1;
            else
                ans_x[i] = ans_x[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 24)
                ans_y[i] = ans_y[i-1] + 1;
            else
                ans_y[i] = ans_y[i-1];
        }

        for (int i = 0;i <= 100005;i++)
        {
            if (sol[i] == 25)
                ans_z[i] = ans_z[i-1] + 1;
            else
                ans_z[i] = ans_z[i-1];
        }
   // }
}

int main()
{
    fun();
    int tc;
    cin >> tc;

    while(tc--){
    long int l,r;
    cin >> l >> r;
    int b[30] = {0};
    char s[1005];
    cin >> s;

    long int n = strlen(s);

    b[0] = ans_a[r] - ans_a[l-1] ;
    b[1] = ans_b[r] - ans_b[l-1] ;
    b[2] = ans_c[r] - ans_c[l-1] ;
    b[3] = ans_d[r] - ans_d[l-1] ;
    b[4] = ans_e[r] - ans_e[l-1] ;
    b[5] = ans_f[r] - ans_f[l-1] ;
    b[6] = ans_g[r] - ans_g[l-1] ;
    b[7] = ans_h[r] - ans_h[l-1] ;
    b[8] = ans_i[r] - ans_i[l-1] ;
    b[9] = ans_j[r] - ans_j[l-1] ;
    b[10] = ans_k[r] - ans_k[l-1] ;
    b[11] = ans_l[r] - ans_l[l-1] ;
    b[12] = ans_m[r] - ans_m[l-1] ;
    b[13] = ans_n[r] - ans_n[l-1] ;
    b[14] = ans_o[r] - ans_o[l-1] ;
    b[15] = ans_p[r] - ans_p[l-1] ;
    b[16] = ans_q[r] - ans_q[l-1] ;
    b[17] = ans_r[r] - ans_r[l-1] ;
    b[18] = ans_s[r] - ans_s[l-1] ;
    b[19] = ans_t[r] - ans_t[l-1] ;
    b[20] = ans_u[r] - ans_u[l-1] ;
    b[21] = ans_v[r] - ans_v[l-1] ;
    b[22] = ans_w[r] - ans_w[l-1] ;
    b[23] = ans_x[r] - ans_x[l-1] ;
    b[24] = ans_y[r] - ans_y[l-1] ;
    b[25] = ans_z[r] - ans_z[l-1] ;

    int max1 = -1,index = 0;
	char ff[26];
    for (int j = 0;j < 26;j++){
        for (int i = 0;i < 26;i++)
        {
            if (max1 < b[i] && b[i] != -1)
            {
                max1 = b[i];
                index = i;
            }
        }
        char sym = index + 'a';
        b[index] = -1;
        max1 = -1;
        //for (int ll = 0;ll < n;ll++)
        //cout << sym;
        ff[j] = sym;
    }
    
    for (int i = 0;i < n;i++)
    {
    	cout << ff[s[i] - 'a'];
    }

    cout << endl;
    }
}
