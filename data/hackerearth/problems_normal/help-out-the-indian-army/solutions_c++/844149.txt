#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long ll;
struct node {
    ll first,second;
};
bool compare(node a,node b) {
    return a.first<b.first?true:false;
}
bool compare1(node a,node b) {
    return  a.second<b.second?true:false;
}
node a[100005];
int main() {
    int n;
    cin>>n;
    ll s,e;
    cin>>s>>e;
    for(int i=0;i<n;i++)  {
        cin>>a[i].first>>a[i].second;
        ll temp=a[i].second;
        a[i].second=a[i].first+temp;
        a[i].first=a[i].first-temp;
        if(a[i].second<s||a[i].first>e) {
            n--;
            i--;
            continue;
        }
        a[i].second=min(a[i].second,e);
        a[i].first=max(a[i].first,s);
    }
    if(n==0) {
        cout<<e-s<<endl;
        return 0;
    }
    sort(a,a+n,compare);
    for(int i=0;i<n;i++) {
        int j=i;
        while(i+1<n&&a[i+1].second==a[i].second) i++;
        sort(a+j,a+i+1,compare);
    }
    int idx=0;
    for(int i=1;i<n;i++) {
        if(a[i].first<=a[idx].second) a[idx].second=max(a[idx].second,a[i].second);
        else {
            idx++;
            a[idx].first=a[i].first;
            a[idx].second=a[i].second;
        }
    }
    ll ans=0;
    for(int i=1;i<=idx;i++) {
        ans+=max(a[i].first-a[i-1].second,0ll);
    }
    ans+=a[0].first-s;
    ans+=e-a[idx].second;
    cout<<ans<<endl;
    return 0;
}
