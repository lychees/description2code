//#include <iostream>
//#include<queue>
#include <bits/stdc++.h>
#define mod (int)(1e9 + 7)
#define max 100000
using namespace std;
int visited[max];
int num_st,num_pair;
int ans[max];
int comp=0;
//bool adj[max][max];
vector<int> adj[max];
 /* long  fact[max];
void cal_fact()
{
	fact[0] = fact[1] = 1;
	for(long long  i=2;i<max;i++)
	{
		fact[i] = i*fact[i-1];
		fact[i] %= mod;
	}
}
 */
long long fact1(int i)
{
	if(i==0 || i==1)
	return 1;
	else
	return (i*(fact1(i-1)))%mod;
}
void DFS(int i)
{
	ans[comp]++;
	visited[i]=1;

    int j;
	   for(j=0;j<adj[i].size();j++)
	       {if(!visited[adj[i][j]])
	        DFS(adj[i][j]);
	       }
}

int main()
{
	
   
  	//memset(visited,0,sizeof(visited));
	//memset(ans,0,sizeof(ans));
   // int student[num_st];
  // cal_fact();
    int i,j,N,K;
    cin>>N>>K;
    
    for(i=0;i<K;i++)
    {
    	int a,b;
    	cin>>a>>b;
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    	
    }
  

  
  // student[0]=1;
  // queue<int> q;
  //q.push(0);
   	    for(i=0;i<N;i++)
   	    {
   	    	if(!visited[i])
   	    	{DFS(i);
   	    	comp++;
   	    	}
   	    	
   	    }
   	 //cout<<fact1(20)<<endl;
   	 //cout<<fact[20]<<endl;
  long long ans1=1;
  //cout<<comp<<endl;
 for(i=0;i<comp;i++)
 {
     //if(ans[i]>1)
     ans1=ans1*fact1(ans[i]);
     if(ans1>=mod)
     ans1%=mod;
 }  
 cout<<ans1;
    return 0;
}
