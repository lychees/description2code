# include<bits/stdc++.h>
using namespace std;
typedef long long ll; // comments that are mixed with code
typedef pair<int, int> ii; // are aligned to the right like this
typedef vector<ii> vii;
typedef vector<int> vi;

ll _sieve_size; // ll is defined as: typedef long long ll;
bitset<10000010> bs; // 10^7 should be enough for most cases
set<int> primes; // compact list of primes in form of vector<int>
void sieve(ll upperbound)
{ // create list of primes in [0..upperbound]
    _sieve_size = upperbound + 1; // add 1 to include upperbound
    bs.set(); // set all bits to 1
    bs[0] = bs[1] = 0; // except index 0 and 1
    for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) {
    // cross out multiples of i starting from i * i!
    for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;
        primes.insert((int)i); // also add this vector containing list of primes
    }
}


int main()
{
    int t,temp,len,counter;
    char S[100005];
    scanf("%d",&t);
    sieve(300);
    while(t--)
    {
        scanf("%s",&S);
        len=strlen(S);
        counter=0;
        for(int i=0;i<len;i++)
            if(!(primes.find(S[i])!=primes.end()))
                printf("%c",S[i]),counter++;
            if(counter==0)
             printf("NULL");
            printf("\n");

    }

}
