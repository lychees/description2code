#include <iostream>
#include <cmath>
#include <math.h>
#include <vector>
#include <algorithm>
#include <stdio.h>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <tuple>

using namespace std;

#define vec vector
#define ALL(x) (x).begin(), (x).end()
#define mp make_pair
#define mt make_tuple
#define deb(x) cerr << #x << " = " << x << '\n';

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const ll inf = 1000000000ll;
const ll inf64 = inf * inf;
const ll base = inf + 7;

bool solve() {
	
	int n, m;

	cin >> n >> m;

	vec< string > mat(n + 1);

	for(int i = 1;i <= n;i++) {
		char buff[2020];
		scanf("%s", &buff);
		mat[i] = buff;
		mat[i] = " " + mat[i];
	}

	int ans = 0;

	string need1 = "";
	string need2 = "";

	for(int i = 0;i < 32;i++) {
		if(i % 2 == 0) need1 += "_", need2 += "#";
		else need1 += "#", need2 += "_";

	}

	vec< vec< char > > good1(n + 1, vec< char >(m + 1, 0)), good2 = good1; 

	for(int i = 1;i <= n;i++) {
		for(int j = 1;j + 32 - 1 <= m;j++) {
			if(mat[i].substr(j, 32) == need1) good1[i][j] = 1;
			else if(mat[i].substr(j, 32) == need2) good2[i][j] = 1;
		}
	}

	for(int i = 1;i + 32 - 1 <= n;i++) {
		for(int j = 1;j + 32 - 1 <= m;j++) {
			int ok = 1;
			for(int q = i;q <= i + 32 - 1;q++) {
				if((q - i) % 2 == 0 && !good1[q][j]) { ok = 0; break; }
				if((q - i) % 2 == 1 && !good2[q][j]) { ok = 0; break; }
			}
			ans += ok;
		}
	}

	cout << ans << '\n';

	return true;
}

int main() {

	//while(solve());	
	solve();    

	return 0;
}