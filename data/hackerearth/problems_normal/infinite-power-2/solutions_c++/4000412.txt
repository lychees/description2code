#include <iostream>
#include <stdio.h>
#include <math.h>
using namespace std;

/*int power(int x,int y){
	int ans=1;
	while(y>0){
		if(y&1)ans=ans*x;
		y=y>>1;x=x*x;
	}
	return ans;
}*/
int GCD(int x,int y){
	if(y==0)return x;
	return GCD(y,x%y);
}
int main()
{
	int t,n,gret,les,gcd,initial,digit,x,p,expo,iter,turn,q;
	cin>>t;
	while(t--){
		gret=0;les=0,digit=0;
		scanf("%d",&n);
		initial=n;
		while(initial){
			digit++;
			initial/=10;
		}
		initial=n;
		x=digit-1;
		expo = pow(10,x);
		p=expo;turn=1;
		while(turn){
			turn=0;iter=initial/p;
			while(p){
				q=initial/p;
				if(q==9){
					turn=1;
				}
				if(q&1){
					gret+=(q+1)*p;break;
				}
				gret+=q*p;
				initial=initial%p;
				p/=10;
			}
			if(iter==9)
			p=expo*10;
			else
			p=expo;
			initial=gret;
			gret=0;
		}
		gret=initial;
		if(gret==n){
			cout<<"Unlimited Power"<<endl;
			continue;
		}
		initial=n;
		p=expo;
		while(p){
			q=initial/p;
			if(q&1){
				les+=(q-1)*p;
				while(p){
					p=p/10;
					les+=8*p;
				}
				break;
			}
			les+=q*p;
			initial=initial%p;
			p/=10;
		}
		int next = gret-n;
		int prev = n-les;
		gcd = GCD(next,prev);
		//cout<<next/gcd<<"/"<<prev/gcd<<endl;
		printf("%d/%d\n",next/gcd,prev/gcd);
	}
    return 0;
}
