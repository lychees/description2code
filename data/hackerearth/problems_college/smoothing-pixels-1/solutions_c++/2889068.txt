#include<bits/stdc++.h>

#define ll long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<ll,ll>
#define pb push_back

const double EPS = 1e-24;
const ll MOD = 1000000007ll;
const double PI = 3.14159265359;
int INF = 2147483645;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;


template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}

const int maxn=100+5;

int cD,cI,n,m,A[maxn];
int f[maxn][300];

int getCost(int last,int key)
{
	if (last<0) return 0;
	int d=abs(last-key);
	return (d==0)?0:((m==0)?100000000:(d-1)/m*cI);
}
int solve(int depth,int last)
{
	if (depth>=n) return 0;
	int &ret=f[depth][last+1];
	if (ret>=0) return ret;
	ret=100000000;
	if (last<0 || abs(last-A[depth])<=m) checkmin(ret,solve(depth+1,A[depth]));

	checkmin(ret,solve(depth+1,last)+cD);

	for (int key=0;key<256;key++)
		checkmin(ret,solve(depth+1,key)+getCost(last,key)+abs(key-A[depth]));
	return ret;
}
int main()
{

	int testcase;
	scanf("%d",&testcase);
	for (int caseId=1;caseId<=testcase;caseId++)
	{
		printf("Case #%d:",caseId);
		scanf("%d%d%d%d",&cD,&cI,&m,&n);
		for (int i=0;i<n;i++) scanf("%d",&A[i]);
		memset(f,255,sizeof(f));
		int r=solve(0,-1);
		printf(" %d\n",r);
		fflush(stdout);
	}
	return 0;
}
