#include<bits/stdc++.h>
  using namespace std;
  #define MAXN 1000010
  #define MOD 1000000007
  #define LL long long
  int num[MAXN], a[MAXN];
  LL dp[MAXN];

 inline void inp1( int &n ) {
    n=0; int ch = getchar(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getchar(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getchar(); }
    n = n * sign;
    }
long long power(long long x, long long k) {

    LL res=1;
 while(k){
    if(k & 1) res = (res%MOD * x%MOD) % MOD;
    x = (x%MOD * x%MOD)%MOD;
    k >>= 1;
 }
 return res;
}
int main() {
int n,k;
LL ans;
    inp1(n);
    int x;
    int max_num=0;
    int count=0;
    for(int i=0;i<n;i++)
    {
        inp1(a[i]);
        num[a[i]] ++;
        max_num=max(a[i],max_num);
    }

    ans=0;
    for(int i=max_num;i>=1;i--)
    {
        count=0;
        dp[i]=0;
        for(int j=i;j<=max_num;j+=i)
        {
            count+=num[j];
            if(j>i) 
                dp[i] = (dp[i] - dp[j] + MOD) % MOD;
        }
        dp[i] = (dp[i] + power(2 , count) - 1 + MOD) % MOD;

    }
    for(int i=0;i<n;i++)
    printf("%lld ",dp[a[i]]);

   return 0;
 }
