#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
const int MOD = int(1e9) + 7;

ll mod_inv(ll x) {
  ll res = 1;
  for (int e = MOD - 2; e > 0; e >>= 1) {
    if (e & 1)
      res = res * x % MOD;
    x = x * x % MOD;
  }
  return res;
}

int main() {
  int N;
  cin >> N;
  vector<int> arr(2 * N);
  for (int i = 0; i < 2 * N; i++)
    cin >> arr[i];
  vector<int> bit(N + 1, 0);
  vector<bool> seen(N + 1, false);
  const ll half = mod_inv(2);
  ll res = 0;
  for (int i = 2 * N - 1; i >= 0; i--) {
    int le = 0;
    for (int j = arr[i] - 1; j > 0; j -= j & -j)
      le += bit[j];
    int ge = 2 * N - 1 - i - le;
    if (seen[arr[i]]) {
      ge--;
    }
    //grown
    res += half * (le + half * ge % MOD);
    //not grown
    res += half * (half * le % MOD);
    if (seen[arr[i]]) {
      res += half;
    }
    res %= MOD;
    seen[arr[i]] = true;
    for (int j = arr[i]; j <= N; j += j & -j)
      bit[j]++;
  }
  for (int i = 0; i < N; i++)
    res = (res << 1) % MOD;
  cout << res << endl;
  return 0;
}
