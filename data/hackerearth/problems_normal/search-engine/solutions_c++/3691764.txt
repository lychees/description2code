/*_______SHREY MANIK______*/
#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
#include <iomanip>
#include <list>
#include <bitset>
#define ff first
#define ss second
#define MOD 1000000007
#define SET(a) memset(a,-1,sizeof(a))
#define CLEAR(a) memset(a,0,sizeof(a))
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
using namespace std;
typedef long long LL;
typedef pair< int , int > pii;
typedef pair< LL, LL> pll;
typedef vector< LL >vll;
typedef vector< int > vi;
template<class T>T gcd(T a,T b){return (b==0)?a:gcd(b,a%b);}
template<class T>T lcm(T a,T b){return (a*b)/gcd(a,b);}

int n,q,w;
const int ALPHABET_SET = 26;
struct trie
{
	int maxWt;
	trie* child[ALPHABET_SET];
	trie()
	{
		maxWt = 0;
		for(int i=0;i<ALPHABET_SET;i++)
			child[i]=NULL;
	}
}*root;
int find(trie* root,string s)
{
	int curr;
	for(int i=0;i<s.size();i++)
	{
		curr = s[i] - 'a';
		if(!root->child[curr])	
			return -1;
		root = root->child[curr];
	}
	return root->maxWt;
}
void insert(trie* root,int id,string s,int wt)
{
	if(id == s.size())
	{
		root->maxWt = max(root->maxWt,wt);
		return ;
	}
	int curr = s[id] - 'a';
	if(!root->child[curr])
	{
		root->child[curr] = new trie();
	}
	insert(root->child[curr],id+1,s,wt);
	root->maxWt = max(root->maxWt,root->child[curr]->maxWt);
	
}
int main()
{
    root = new trie();
    string s;
    cin>>n>>q;
    for(int i=0;i<n;i++)
    {
		cin>>s;cin>>w;
		insert(root,0,s,w);
	}
	while(q--)
	{
		cin>>s;
		cout<<find(root,s)<<"\n";
	}
    return 0;

}
