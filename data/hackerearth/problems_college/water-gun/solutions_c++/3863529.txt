#include <iostream>
using namespace std;

typedef long long ll;
const ll MOD = (ll)1e9 + 7;
ll add(ll x, ll y)
{
	x += y;
	if (x >= MOD) return x - MOD;
	return x;
}
ll sub(ll x, ll y)
{
	x -= y;
	if (x < 0) return x + MOD;
	return x;
}
ll mult(ll x, ll y)
{
	return (x * y) % MOD;
}
ll bin_pow(ll x, ll p)
{
	if (p == 0) return 1;
	if (p & 1 || p == 2) return mult(x, bin_pow(x, p - 1));
	return bin_pow(bin_pow(x, p / 2), 2);
}

ll getC(ll n, ll k)
{
	if (k < 0 || k > n) return 0;
	ll res = 1;
	for (int i = 0; i < k; i++)
	{
		res *= n - i;
		res /= i + 1;
	}
	return res % MOD;
}

int main()
{
	int t;
	scanf("%d", &t);
	while(t--)
	{
		ll k, n;
		scanf("%lld%lld", &k, &n);
		ll res = (k * (k - 1) / 2) % MOD;
		res = add(res, mult(k, sub(bin_pow(k - 1, n), k - 1)));
		res = add(res, mult(getC(k, 3), add(sub(bin_pow(3, n), mult(3, bin_pow(2, n))), 3)));
		printf("%lld\n", res);
	}
	
    return 0;
}
