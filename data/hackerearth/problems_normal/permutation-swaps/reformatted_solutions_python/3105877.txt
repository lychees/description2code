def bfs(u):
    que = [u]
    while len(que) > 0:
        u = que[-1]
        que.pop()
        vis[u] = 1
        group.append(u)
        for x in edges[u]:
            if not vis[x]:
                que.append(x)


for t in range(input()):
    n, m = map(int, raw_input().split())
    p = [0] + map(int, raw_input().split())
    q = [0] + map(int, raw_input().split())

    edges = [[] for i in range(n+1)]
    vis = [0]*(n+1)

    for i in range(m):
        x, y = map(int, raw_input().split())
        edges[x].append(y)
        edges[y].append(x)

    ans = 1
    for i in range(1, n+1):
        if not vis[i]:
            group = []
            bfs(i)
            s1 = set([])
            s2 = set([])
            for x in group:
                s1.add(p[x])
                s2.add(q[x])
            if s1 != s2:
                ans = 0
                break

    print 'YES' if ans else 'NO'
