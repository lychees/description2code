#include <bits/stdc++.h>
#define vec vector
#define sz(c) int(c.size())
#define FOR(i, a, b) for (int i = a; i < (b); ++i)
#define DOWN(i, a, b) for(int i = (a) - 1; i >= (b); --i)
using namespace std;
const char eol = '\n';
typedef long long int64;
typedef pair<int,int> pii;
typedef vec<int> vi;

bool isprime(int n) {
  if (n <= 2) return false;
  for (int i = 2; i * i <= n; ++i)
    if (n % i == 0) return false;
  return true;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout << fixed << setprecision(10);

  int const maxn = 2e5 + 10;
  vec<int64> res(maxn);
  res[1] = 0;
  res[2] = 1;
  res[3] = 3;
  FOR(i, 4, maxn) {
    res[i] = res[i - 1] + (i / 2) * 2;
  }

  int T;
  cin >> T;
  while (T--) {
    int n;
    cin >> n;
    cout << res[n] << eol;
  }
  

  //FOR(i, 1, 13) cout << res[i] << endl;

  //int prev = 0;
  //for (int n = 1; n <= 12; ++n) {
  //  vec<int> p(n);
  //  FOR(i, 0, n) p[i] = i + 1;
  //  int res = 0;
  //  do {
  //    int s = 0;
  //    FOR(i, 0, n - 1) s += abs(p[i + 1] - p[i]);
  //    res = max(res, s);
  //  } while (next_permutation(p.begin(), p.end()));
  //  cout << n << " " << res << " " << res - prev << endl;
  //  prev = res;
  //}

  return 0;
}
