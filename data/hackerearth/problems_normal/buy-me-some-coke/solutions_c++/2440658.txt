#include<bits/stdc++.h>
using namespace std;


int dp[809][209][99];

int sol(int n1,int n5,int n10,int count)
{
	if(count==0)	
		return 0;
	if(dp[n1][n5][n10]!=-1)
		return dp[n1][n5][n10];
	int ans=INT_MAX;
	if(n10>=1)
	{
		ans=min(ans,1+sol(n1+2,n5,n10-1,count-1));
		if(n1>=3)
			ans=min(ans,4+sol(n1-3,n5+1,n10-1,count-1));
	}
	if(n5>=1)
	{
		if(n5>=2)
			ans=min(ans,2+sol(n1+2,n5-2,n10,count-1));
		if(n1>=3)
			ans=min(ans,4+sol(n1-3,n5-1,n10,count-1));
	}
	if(n1>=8)
		ans=min(ans,8+sol(n1-8,n5,n10,count-1));
	return dp[n1][n5][n10]=ans;	
}

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		memset(dp,-1,sizeof(dp));
		int c;
		vector<int> n(3);
		cin>>c>>n[0]>>n[1]>>n[2];
		if(c*8>(n[0]+5*n[1]+10*n[2]))
			cout<<"-1\n";
		else
			cout<<sol(n[0],n[1],n[2],c)<<endl;
	}
	return 0;
}
