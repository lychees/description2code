/*
    Author:-Sarthak Taneja
    CSE 3rd year,MNNIT Allahabad
*/
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair< int,int > ii;
typedef vector< ii > vii;

#define sfd(x) scanf("%d",&x)
#define sfd2(x,y) scanf("%d%d",&x,&y)
#define sfs(x) scanf("%s",x)
#define sff(x) scanf("%lf",&x)
#define mod 1000000007
#define MAX 1000000
#define INF 1000000000
#define pb push_back
#define mp make_pair
#define fr first 
#define sc second
#define testcases scanf("%d",&t);while(t--)
#define ffor(a,b,c) for(a=b;a<c;a++)
#define rfor(a,b,c) for(a=b;a>=c;a--)
#define PI 3.1415926535897932

ll power(ll base, ll exp)
{
	if(exp == 0)
	return 1;
	ll r = power(base, exp/2);
	r=(r*r)%mod;
	if(exp&1)
		r=(r*base)%mod;
	return r;
}

/**********************************************/

int digit[20];
ll dp[20][200][2000];

ll doit(int idx, int digitsum, int sqsum, int check)
{
	if(idx == -1)
		return (__gcd(digitsum, sqsum) == 1);

	if(!check && dp[idx][digitsum][sqsum] != -1)
		return dp[idx][digitsum][sqsum];

	int maxdigit;

	if(check)
		maxdigit = digit[idx];
	else
		maxdigit = 9;

	ll ans = 0;
	for(int i=0;i<=maxdigit;i++)
	{
		ans += doit(idx-1, digitsum + i, sqsum + i*i,check && (i == maxdigit));
	}

	if(!check)
		dp[idx][digitsum][sqsum] = ans;

	return ans;
}

ll solve(ll x)
{
	int len = 0;
	while(x)
	{
		digit[len++] = x%10;
		x/=10;
	}

	return doit(len-1, 0, 0, 1);
}

int main()
{
	int i,j,t;

	memset(dp, -1, sizeof(dp));

	testcases
	{
		ll l,r;
		cin>>l>>r;

		printf("%lld\n",solve(r) - solve(l-1));
	}
	return 0;
}