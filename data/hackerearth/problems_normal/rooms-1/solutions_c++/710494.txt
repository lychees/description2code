#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
#include<map>
#include<limits>

#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sll(n) scanf("%lld",&n)
#define sull(n) scanf("%llu",&n)
#define ss(str) scanf("%s",str)
#define sf(n) scanf("%f",&n)
#define sd(n) scanf("%lf",&n)
#define I int
#define ll long long int
#define ull unsigned long long int
#define as_0 48
#define as_A 65
#define as_a 97
#define mem(a) memset(a,0,sizeof a)
#define INF (1<<30)
#define M 1000000009

using namespace std;

long long power(int a, int b)
{
    if( b == 0 )
        return 1;
    else
        return a*power(a,b-1);
}

bool comp(pair<int,int> a, pair<int,int> b)
{
    if(a.first<b.first) return true;
    return false;
}

struct Compare
{
    bool operator()(pair<int,int> a, pair<int,int> b)
{
    if(a.second<b.second) return true;
    return false;
}
};



int main()
{
   //freopen("input.txt","r",stdin);
   //freopen("output.txt","w",stdout);
   int t;
   cin>>t;
   while(t--)
   {
       int n;
       cin>>n;

       vector<pair<int,int> >v;

       priority_queue<pair<int,int>, vector<pair<int,int> >, Compare >pq;
       pair<int,int> x;
       int i;
       for(i=0;i<n;i++)
       {
           cin>>x.first;
           v.push_back(x);
       }

       for(i=0;i<n;i++)
       {
           cin>>v[i].second;
           v[i].second+=v[i].first;
           v[i].second=-v[i].second;
       }

       int cnt=0;

       sort(v.begin(),v.end(),comp);

       pq.push(v[0]);
       cnt=1;
       int temp=1;

       for(i=1;i<n;i++)
       {
           if(v[i].first>=-pq.top().second ) {pq.pop(); temp--; }
           //printf("%d %d\n",v[i].first,pq.top().second);
           pq.push(v[i]); temp++;
           cnt=max(cnt,temp);
           //cout<<cnt<<"\n";
       }

       //cout<<cnt<<"\n";
       cout<<cnt<<"\n";

   }


 return 0;
}
