#include<bits/stdc++.h>
using namespace std;
int main()
{
    long long i,t,j,N,W;
    cin>>t;
     while (t--)
	 {
     	cin>>N>>W;
    	long long values[N],weights[N];
    	long long dp[N + 1][W + 1];
    	memset(dp,0,sizeof(dp));
    	for (i=0;i<N;i++)
		{
    		cin>>weights[i];
    	}
    	for (i=0;i<N;i++) 
		{
    		cin>>values[i];
    	}
    	for(i=1;i<=N;i++) 
		{
    		for (j=1;j<=W;j++)
			 {
    			if (j < weights[i - 1]) 
				{
    				dp[i][j] = dp[i - 1][j];
    			}
    			else 
				{
    				dp[i][j] = max(dp[i - 1][j], (dp[i - 1][j - weights[i - 1]] + values[i - 1]));
    			}
    		}
    	}
     	cout<<dp[N][W]<<endl;
    }
    return 0;
}
