tc = input()
while tc>0:
	# accept the raw input string
	orig = raw_input()
	# convert the string to list of its characters
	w = list(orig)
	# get length of above list
	ln = len(w)
	x = ln-1
	# loop over to find the rightmost character
	# which is smaller than the character next to it
	# call it 'ref character'
	while x > 0:
		if(w[x] > w[x-1]):
			break
		x -= 1
	 
	# check if any such character is found
	# if no then it is not possible to make a 
	# lexicographically bigger string with given
	# characters
	if x == 0:
		print 'no answer'
		tc = tc-1
		continue
	
	# now find the smallest character to the right
	# of 'ref character' which is bigger than 'ref character'
	mn = w[x]
	mnx = x
	ix = x + 1
	x -= 1
	while ix < ln:
		if w[ix] < mn and w[ix] > w[x]:
			mn = w[ix]
			mnx = ix
		ix += 1
	 
	# interchange the 'ref character' and the character
	# thus determined
	temp = w[x]
	w[x] = mn
	w[mnx] = temp
	 
	# take the sub string after original position of 
	# 'ref character' and sort it.
	subs = w[x+1:]
	subs.sort()
	w = w[:x+1] + subs
	# replace this sorted string to unsorted version
	st = ''.join(w)
	# print the result.
	print st
	tc = tc-1