#include <iostream>

using namespace std;

long findMaxIndex(long arr[],short n)
{
    long maxE=0;
    short maxI=0;
    for(short i=0;i<n;i++)
    {
        if(arr[i]>maxE)
        {
            maxE = arr[i];
            maxI=i;
        }
    }
    return maxI;
}

int main()
{
short n;
long lV[20];
long dV[20];
bool lvOver = false;
long optimalOrder[20];

cin >> n;



short j=0;
for(short i=0;i<n*2;i++)
{
    if(lvOver==true)
    {
        cin >> dV[j];
        optimalOrder[j]=dV[j]*j;
        j++;
    }
    else{
        cin >> lV[i];
    }
    if(i==n-1)
    {
        lvOver=true;
    }
}

long order[20];
bool flag[20];
short maxE;

for(short i=0;i<n;i++)
{
    maxE = findMaxIndex(optimalOrder,n);
    order[i]=maxE;
    optimalOrder[maxE]=-1;
    flag[i]=false;
}

long long grossVal=0;


for(short k=0;k<n;k++)
{
        for(short i=0;i<n;i++)
        {
            grossVal += lV[i];
        }
    flag[order[k]]=true;

    for(short l=0;l<n;l++)
    {
        if(!flag[l])
        {
            lV[l]-=(dV[l]*l);
        }
    }

}

cout << grossVal <<"\n";
return 0;
}
