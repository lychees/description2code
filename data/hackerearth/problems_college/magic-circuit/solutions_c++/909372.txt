#include<bits/stdc++.h>
using namespace std;
int main()
{
	ios_base::sync_with_stdio(false);
	while(1)
	{
		int i,j,r,c,k,minm,ans,ct;
	    cin>>r>>c;
	    if(r==0)
	     break;
		char a[r+5][c+5],tmp[r+5][c+5];int ar[c+5];
		
		for(i=0;i<r;i++)
		for(j=1;j<=c;j++)
		cin>>a[i][j];
		
		minm=INT_MAX;
		
		for(k=0;k<(1<<c);k++)
		{ 
			//subset gen
			for(j=0,ct=0;j<c;j++)
			{
				if(k&(1<<j))
				{
					ar[ct++]=j+1;
				}
			}		
			
			//copy into tmp matrix;
					
			for(i=0;i<r;i++)
			for(j=1;j<=c;j++)
			tmp[i][j]=a[i][j];
			
			ans=0;
			// change first row ac to subset
			for(i=0;i<ct;i++)
			{
				if(tmp[0][ar[i]]=='X')
				{
					tmp[0][ar[i]]='.';
					ans++;
					//<-------------
					if(tmp[0][ar[i]-1]=='X')
					tmp[0][ar[i]-1]='.';
					else
					tmp[0][ar[i]-1]='X';
					//--------------->
					if(tmp[0][ar[i]+1]=='X')
					tmp[0][ar[i]+1]='.';
					else
					tmp[0][ar[i]+1]='X';
					
					if(tmp[1][ar[i]]=='X')
					tmp[1][ar[i]]='.';
					else
					tmp[1][ar[i]]='X';
				}
				
				else
				{
					tmp[0][ar[i]]='X';
					ans++;
					//<-------------
					if(tmp[0][ar[i]-1]=='X')
					tmp[0][ar[i]-1]='.';
					else
					tmp[0][ar[i]-1]='X';
					//--------------->
					if(tmp[0][ar[i]+1]=='X')
					tmp[0][ar[i]+1]='.';
					else
					tmp[0][ar[i]+1]='X';
					
					if(tmp[1][ar[i]]=='X')
					tmp[1][ar[i]]='.';
					else
					tmp[1][ar[i]]='X';
				}		
			}	
			//change remaining rows greedily
			for(i=1;i<r;i++)
			{
				for(j=1;j<=c;j++)
				{
					if(tmp[i-1][j]=='X')
					{
						tmp[i-1][j]='.';
						ans++;
						
						//<---------------
						if(tmp[i][j-1]=='X')
						tmp[i][j-1]='.';
						else
						tmp[i][j-1]='X';
						//--------------->
						if(tmp[i][j+1]=='X')
						tmp[i][j+1]='.';
						else
						tmp[i][j+1]='X';
						
						if(tmp[i][j]=='X')
						tmp[i][j]='.';
						else
						tmp[i][j]='X';
						
						if(tmp[i+1][j]=='X')
						tmp[i+1][j]='.';
						else
						tmp[i+1][j]='X';
						
					}
				}
			}
			
			//check wether last row is compltly white or not
			for(i=1;i<=c;i++)
			{
				if( tmp[r-1][i]=='X')
				 break;
			}
			
			if(	 i==c+1 )
			minm=min(ans,minm);
		}
		if(minm==INT_MAX)
		cout<<"-1"<<endl;
		
		else
		cout<<minm<<endl;
   }				
	return 0;
}			    
	     
	     



