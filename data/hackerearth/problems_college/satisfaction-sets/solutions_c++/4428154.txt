#include <bits/stdc++.h>
#define num 1000000007
using namespace std;

vector<long long> getIntersect(vector<vector<long long>> &S){
	vector<long long> res1;
	int smallind=0;
	int minS=S[0].size();
	
	for(long long i=1;i<S.size();i++){
		
		sort(S[i].begin(),S[i].end());
		if(minS>S[i].size()){
			minS=S[i].size();
			smallind-i;
		}
	}
	map<long long,long long> mp;
	mp.clear();
	map<long long,long long>::iterator itm;
	for(long long i=0;i<S[smallind].size();i++){
		if(mp.find(S[smallind][i])==mp.end()){
			mp[S[smallind][i]]=1;
		}
		else{
			mp[S[smallind][i]]++;
		}
	}
	for(itm=mp.begin();itm!=mp.end();itm++){
		long long elem=itm->first;
		long long freq=itm->second;
		bool found=true;
		for(long long j=0;j<S.size();j++){
			if(j!=smallind){
				if(binary_search(S[j].begin(),S[j].end(),elem)){
					long long Lind=lower_bound(S[j].begin(),S[j].end(),elem)-S[j].begin();
					long long Rind=upper_bound(S[j].begin(),S[j].end(),elem)-S[j].begin();
					if((Rind-Lind)<freq){
						freq=Rind-Lind;
					}
				}
				else{
					found=false;
					break;
				}
			}
		}
	if(found){
		for(long long k=0;k<freq;k++){
			res1.push_back(elem);
		}
	}
		
	}
	return res1;	
}

int main()
{
 //   cout << "Hello World!" << endl;
   long long N;
   cin>>N;
   set<long long> s,s1,s2;
   s.clear();
   s1.clear();
   s2.clear();
   vector<long long> v;
   vector<vector<long long>> V;
   v.clear();
   V.clear();
   vector<long long>::iterator itv;
   set<long long>::iterator its;
   //long long k=0;
   while(N--){
   	long long M;
   	cin>>M;
   	long long G;
   	v.clear();
   	for(long long i=0;i<M;i++){
   		cin>>G;
   		//size1=s.size();
   		s.insert(G);
   		v.push_back(G);
   		//if(s.size()==size1){
   		//	s1.insert(G);
   		//}
   		
   	}
   	V.push_back(v);
  }
  //dIFFRENCE
  vector<long long> vres=getIntersect(V);
  for(itv=vres.begin();itv!=vres.end();itv++){
  //	cout<<"-->"<<*itv;
  	s1.insert(*itv);
  }
  set_difference(s.begin(),s.end(),s1.begin(),s1.end(),inserter(s2,s2.end()));
  long long uni=0;
  //cout<<"union"<<endl;
	//union
	for(its=s.begin();its!=s.end();its++){
	//	cout<<"-->"<<*its;
		uni=((uni%num)+(*its%num))%num;
		uni%=num;
	}   
	//Difference
	//cout<<"Difference"<<endl;
	long long inter=0;
	for(its=s2.begin();its!=s2.end();its++){
	//	cout<<"-->"<<*its;
		inter=((inter%num)+(*its%num))%num;
		inter%=num;
	}
	cout<<(inter-uni)%num;
    return 0;
}
