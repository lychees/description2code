// Derangements 

// Main concept is to find the number of permutations of elements with exactly k misplacements 

//It means exactly k people did not get what they wanted 

#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define MOD 1000000007

long long modex(long long base,long long expo){

     long long ans=1;

     while(expo){

          if(expo%2==1){

             ans*=base;
             
             ans%=MOD;
 

          }

          base=base*base;
          
          base%=MOD;
    
          expo/=2;

     }

     return ans;
}

int main(){

   int n,l,r,i,j,k;

   scanf("%d %d %d",&n,&l,&r);

   long long ncr[105][105],d[105],f[105],sum=0;

   for(i=0;i<105;++i){

       ncr[i][0]=ncr[i][i]=1;

       k=i>>1;

       for(j=1;j<=k;++j){

           ncr[i][j]=ncr[i][i-j]=(ncr[i-1][j]%MOD+ncr[i-1][j-1]%MOD)%MOD;
       }

   }

   d[0]=1;

   d[1]=0;

   for(i=2;i<105;++i){

       d[i]=((i-1)*(d[i-1]+d[i-2]))%MOD;

   }
   
   for(k=l;k<=r;++k){

        sum=(sum%MOD+(ncr[n][k]%MOD)*(d[k]%MOD))%MOD;

   }
   
   long long fact[105];
    
   fact[0]=1;

   for(int i=1;i<105;++i){

        fact[i]=(i%MOD*fact[i-1]%MOD)%MOD;

   }
   
   long long res=((sum%MOD)*(modex(fact[n],MOD-2))%MOD)%MOD;

   printf("%lld\n",res);
  
   return 0;
 
}