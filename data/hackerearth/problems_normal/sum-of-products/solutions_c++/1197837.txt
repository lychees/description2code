/*Programmed by Ayush Jaggi*/

#include<bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz(a) (int)(a.size())
#define clr(a) a.clear()
#define mem(a,b) memset(a,b,sizeof(a))
#define in(type,x) scanf("%" #type,&x)
#define ins(x) scanf("%s",x)
#define out(type,x) printf("%" #type,x)
#define pn printf("\n")
#define ps printf(" ")
#define rep(i,x,y) for(int i=x;i<(int)y;i++)
#define repv(i,a) rep(i,all(a))
#define sortv(a) sort(all(a))
#define all(a) a.begin(),a.end()

#define tc int t;\
in(d,t);\
while(t--)
//or #define test int t; in(d,t); while(t--)

#define scn int n;\
in(d,n);
//or #define scn int n; in(d,n);

#define scnm int n,m;\
in(d,n);\
in(d,m);
//or #define scnm int n; in(d,n); in(d,m)

//iterator example
//for(map<ii,int>::const_iterator it=graph.begin(); it!=graph.end(); it++)
//it->F, it->S operations

//__typeof(a) -> hardware call equivalent to typeof(a)

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<string> vs;

ll MOD=1000000007;

template<class T> inline T gcd(T a, T b)
{
    return b ? gcd(b, a % b) : a;
}

//or __gcd(a,b) hardware call

inline ll expo(ll base, int nent)
{
    if(nent==1)
        return base;
    else if(nent&1)
    {
        ll temp=expo(base,nent/2);
        temp=temp*temp*base;
        if(temp>=MOD)
            temp%=MOD;
        return temp;
    }
    else
    {
        ll temp=expo(base,nent/2);
        temp*=temp;
        if(temp>=MOD)
            temp%=MOD;
        return temp;
    }
}

/*
inline void prime()
{
    int s, d, count=0;
    lb=sqrt(n);
    for(s=2; s<=lb; s++)
        if(!pr[s])
        {
            sieve[count++]=s;
            for(d=s*s; d<=n; d+=s)
                pr[d]=1;
        }
}
*/

int main()
{

    ll n, sq, ans, i;
    tc
    {
        ans=0;
        in(lld,n);
        sq=sqrt(n);
        for(i=1; i<sq; i++)
            //ans=(ans+(i*(((n/i-n/(i+1))*(n/i+n/(i+1)+1))%MOD))%MOD)%MOD;
            ans=(ans+(i*(n/i))%MOD+(i*((((n/i-n/(i+1))*(n/i+n/(i+1)+1))/2)%MOD))%MOD)%MOD;
        if(sq*sq==n)
            ans=(ans+n)%MOD;
        else ans=(ans+(i*(n/i))%MOD+(i*((((n/i-sq)*(n/i+sq+1))/2)%MOD))%MOD)%MOD;
        out(lld\n,ans);
    }
    return 0;
}
