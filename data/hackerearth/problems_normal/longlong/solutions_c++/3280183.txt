#include <bits/stdc++.h>
using namespace std;

long long prime[1000009];
long long haash[1000009];
char str[1000009];
int n;

void pre(){
	prime[0]=1;
	for(int i=1;i<=1000000;i++) prime[i]=prime[i-1]*31;
	haash[0]=str[0]-'a'+1;
	for(int i=1;i<n;i++) haash[i]=haash[i-1]*31 + (str[i]-'a'+1);
}
unordered_map<long long,int> st;
bool ispossible(int len){
	st.clear();
	long long h;
	st[haash[len-1]]=1;
	for(int i=len;i<n;i++){
		h=haash[i]-haash[i-len]*prime[len];
		if(st[h]>0) return true;
		st[h]=1;
	}
	return false;
}

int sol(){
	int l=1,r=n;
	int ans=0;
	while(l<=r){
		int mid=(l+r)/2;
		if(ispossible(mid)){
			ans=mid;
			l=mid+1;
		}
		else r=mid-1;
	}
	return ans;
}

int main()
{
    scanf("%s",str);
    n=strlen(str);
    pre();
    printf("%d",sol());
    return 0;
}
