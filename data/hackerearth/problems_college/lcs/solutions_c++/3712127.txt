#include <bits/stdc++.h>
#define sz(x) ((int)x.size())
using namespace std;
const int N = 1e3 + 7, mod = 1e9 + 7;
inline int in() { int x; scanf("%d", &x); return x;}

int p[5][N], vis[N], dp[N];
vector<int> v[N], topo;

void dfs(int x) {
    if(vis[x]) return;
    vis[x] = true;
    for (int i = 0; i < sz(v[x]); i++)
        dfs(v[x][i]);
    topo.push_back(x);
}

int main() {
    int n, k; cin >> n >> k;
    for (int j = 0; j < k; j++)
        for (int i = 0; i < n; i++) {
            p[j][in()-1] = i;
        }
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++) {
            bool b =  1;
            for (int t = 0; t < k; t++)
                if (p[t][i] <= p[t][j])
                    b = 0;
            if (b) {
                v[i].push_back(j);
                cerr << i+1 <<' '<< j+1 << endl;
            }
        }
    for (int i = 0; i < n; i++)
        dfs(i);
   // reverse(topo.begin(), topo.end());
    int ans = 0;
    for (int i = 0; i < n; i++) {
        int x = i; i = topo[i]; dp[i] = 1;
        for (int j = 0; j < sz(v[i]); j++) {
            dp[i] = max(dp[i], dp[v[i][j]] + 1);
            ans = max(ans, dp[i]);
        }
        i = x;
    }
    cout << ans << endl;
}