#include <bits/stdc++.h>
using namespace std;
struct node
{
	int start;
	int end;
	int p;
};
node a[100];
int dp[100][100];
int comp(node x,node y)
{
	if(x.start<y.start)
	return 1;
	if(x.start==y.start)
	{
		return x.end<y.end;
	}
	return 0;
}
int  fun(int index,int prev,int n)
{
	if(index==n)
	return 0;
	if(dp[index][prev]!=-1)
	return dp[index][prev];
	if(a[index].start>=a[prev].end)
	dp[index][prev]= max(a[index].p+fun(index+1,index,n),fun(index+1,prev,n));
	else
	dp[index][prev]= fun(index+1,prev,n);
	return dp[index][prev];
}
int main()
{
	int t,n;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for(int i=0;i<n;i++)
		{
			scanf("%d%d%d",&a[i].start,&a[i].end,&a[i].p);
		}
		sort(a,a+n,comp);
		int ans=0.0;
		memset(dp,-1,sizeof dp);
		for(int i=0;i<n;i++)
		{
			int res=a[i].p+fun(i+1,i,n);
			if(res>ans)
			ans=res;
		}
		double ans1=ans/(100.0);
		printf("%.2lf\n",ans1);
	}
	return 0;
}