#include <bits/stdc++.h>

using namespace std;

const int SIZE = 1e5;

int temples[SIZE];

bool canEnlight( int light, int n, int m ) {
	light *= 2; 
	
	int i = 0;
	bool ret = 0;
	while( m-- ) {
		
		int light2 = light + temples[i];
		
		i = upper_bound( temples, temples + n, light2 ) - temples;
		
		if( i >= n ) {
			ret = 1;
			break;
		}
	}
	
	return ret;
}

int enlightened( int n, int m ) {
	
	int left = 0;
	int right = temples[n - 1];
	int mid = right;
	bool can = 1;
	while( left <= right ) {
		
		mid = ( right + left ) / 2;
		
		if( canEnlight( mid, n, m ) ) {
			right = mid - 1;
			can = 1;
		}
		else {
			left = mid + 1;
			can = 0;
		}
	}
	
	return can ? mid : mid + 1;
	
}

int main () {

	int n, m;
	cin >> n >> m;
	
	for( int i = 0; i < n; ++i ) {
		cin >> temples[i];
	}
	
	sort( temples, temples + n );
	
	cout << enlightened(n, m) << '\n';
	
	return 0;
}
