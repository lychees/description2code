#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define ALL(x) x.begin(),x.end()
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define fr first
#define se second
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long
using namespace std;
#define MAXN 1000005
#define MAXLG 22
char A[MAXN];
struct entry {
  int nr[2], p;
} L[MAXN];

int P[MAXLG][MAXN], N, i, stp, cnt;

int cmp(struct entry a, struct entry b) {
  return a.nr[0] == b.nr[0] ? (a.nr[1] < b.nr[1] ? 1 : 0) : (a.nr[0] < b.nr[0] ? 1 : 0);
}
void func(char A[]) {
  for (N = strlen(A), i = 0; i < N; i ++)
    P[0][i] = A[i] - 'a';
  for (stp = 1, cnt = 1; cnt >> 1 < N; stp ++, cnt <<= 1) {
    for (i = 0; i < N; i ++)
    { L[i].nr[0] = P[stp - 1][i];
      L[i].nr[1] = i + cnt < N ? P[stp - 1][i + cnt] : -1;
      L[i].p = i; }
    sort(L, L + N, cmp);
    for (i = 0; i < N; i ++) P[stp][L[i].p] = i > 0 && L[i].nr[0] == L[i - 1].nr[0] && L[i].nr[1] == L[i - 1].nr[1] ?
      P[stp][L[i - 1].p] : i;
  }
}
int lcp(int x, int y) {
  int k, ret = 0;
  if (x == y) return N - x;
  for (k = stp - 1; k >= 0 && x < N && y < N; k --)
    if (P[k][x] == P[k][y])
      x += 1 << k, y += 1 << k, ret += 1 << k;
  return ret;
}
char txt[1000005];
vector<pii> temp;
int main()
{
  scs(txt);
  int n = strlen(txt);
  func(txt);
  for(int i=0;i<n;i++) {
    temp.pb(mp(P[stp-1][i],i));
  }
  sort(temp.begin(),temp.end());
  int ans = 0;
  for(int i=0;i<n-1;i++) {
    ans = max(ans,lcp(temp[i].se,temp[i+1].se));
  }
  cout<<ans<<endl;
  return 0;
}
