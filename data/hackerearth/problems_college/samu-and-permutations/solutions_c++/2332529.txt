//void * memset ( void * ptr, int value, size_t num )
#include<bits/stdc++.h>
using namespace std;
#define MAX 20
#define pb push_back
int a[MAX];
int n;

int fun1(){

	int arr[MAX];
	int st = 1; int end = n; int lst = 1;
	for(int i=st;i<=n and end>=1;i++){
		arr[end] = a[i];
		lst = i;
		end -= 2;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	int sz = v.size();
	int ans = 0; int total = 0;
	sort(v.begin(),v.end());
	do{
		total = 0;
		end = n-1;
		for(int i= sz-1; i>=0 and end>=1; i--){
			arr[end]=v[i];
			end -= 2;
		}
		
		for(int i=2;i<=n;i++)
			total += (i*(abs(arr[i]-arr[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	return ans ;
}


int fun2(){

	int arr[MAX];
	int st = 1; int end = n-1; int lst = 1;
	for(int i=st;i<=n and end>=1;i++){
		arr[end] = a[i];
		lst = i;
		end -= 2;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	int sz = v.size();
	int ans = 0; int total = 0;
	sort(v.begin(),v.end());
	do{
		total = 0;
		end = n;
		for(int i= sz-1; i>=0 and end>=1; i--){
			arr[end]=v[i];
			end -= 2;
		}

		for(int i=2;i<=n;i++)
			total += (i*(abs(arr[i]-arr[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);
	return ans ;
}

int fun3(){

	sort(a+1,a+n+1,greater<int>());

	int arr[MAX];
	int st = 1; int end = n; int lst = 1;
	for(int i=st;i<=n and end>=1;i++){
		arr[end] = a[i];
		lst = i;
		end -= 2;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	int sz = v.size();
	int ans = 0; int total = 0;
	sort(v.begin(),v.end());
	do{
		total = 0;
		end = n-1;
		for(int i= sz-1; i>=0 and end>=1; i--){
			arr[end]=v[i];
			end -= 2;
		}
		
		for(int i=2;i<=n;i++)
			total += (i*(abs(arr[i]-arr[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);
	return ans ;
}

int fun4(){

	sort(a+1,a+n+1,greater<int>());
	int arr[MAX];
	int st = 1; int end = n-1; int lst = 1;
	for(int i=st;i<=n and end>=1;i++){
		arr[end] = a[i];
		lst = i;
		end -= 2;
	}
	vector<int> v;
	for(int i=lst+1;i<=n;i++){
		v.pb(a[i]);
	}
	int sz = v.size();
	int ans = 0; int total = 0;
	sort(v.begin(),v.end());
	
	do{
		total = 0;
		end = n;
		for(int i= sz-1; i>=0 and end>=1; i--){
			arr[end]=v[i];
			end -= 2;
		}
		
		for(int i=2;i<=n;i++)
			total += (i*(abs(arr[i]-arr[i-1])));
		ans = max(ans , total);

	}while(next_permutation(v.begin() , v.end()));

	//trace1(ans);
	return ans ;
}


int main(){

	int t,i,val1,val2,val3,val4;
	cin>>t;
	while(t--){
		int ans = 0;
		cin>>n;
		for(i=1;i<=n;i++)
			cin>>a[i];
		sort(a+1,a+n+1);
		val1 = fun1();
		val2 = fun2();
		val3 = fun3();
		val4 = fun4();
		ans=max(val1,val2);
		int temp=max(val3,val4);
		ans = max(ans,temp);
		cout<<ans<<endl;
	}
	return 0;
}
				
