#include <bits/stdc++.h>
using namespace std;
#define inp(a) scanf("%d",&a)
#define out(a) printf("%d\n",a)
#define inpll(a) scanf("%lld",&a)
#define outll(a) printf("%lld\n",a)

#define VI vector<int>
#define VLL vector<long long int>
#define PQI priority_queue<int>
#define PQLL priority_queue<long long int>
#define VP vector<pair<int,int> >
#define II pair<int,int>
#define ll long long int
#define ull unsigned long long int

#define getcx getchar_unlocked
#define sz(a) (int)a.size()
#define mod 1000000007
#define mp make_pair
#define X first
#define Y second
#define pb push_back
#define rep(i,a,b) for(i=a;i<b;i++)
#define all(a) a.begin(),a.end()
 
inline void inpq( int &n ) {
n=0; int ch = getcx(); int sign = 1;
while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
n = n * sign;
}

ll power(ll p,ll q,ll m){
	ll ans=1;
	while(q){
		if(q&1) ans=(ans*p)%m;
		p=(p*p)%m;
		q/=2;
	}
	return ans;
}

ll gcd(ll p,ll q){
	if(q==0) return p;
	else return(gcd(q,p%q));
}

/*bool compare(const pair<ll,ll>& p,const pair<ll,ll> &q){
return p.X<q.X;
}*/
/*bool comp(const node &x,const node &y){
return x.a<y.a;
}*/

#define N 70
#define ln 15	

ll DP[N][5][2];
ll i,j,k,n,t;
vector<ll> v;

ll fun(ll idx,ll carry,ll flag){
	int i,j,k;
	if(idx<0){
		if(flag&&!carry) return 1;
		return 0;
	}
	if(DP[idx][carry][flag]!=-1) return DP[idx][carry][flag];
	ll ans=0;
	rep(i,0,2){
		rep(j,0,2){
			rep(k,0,2){
				ll p=(i+j+k+carry)%2;
				if(p!=v[idx]) continue;
				ans=(ans+fun(idx-1,(i+j+k+carry)/2,flag|(i+j+k==3)))%mod;
			}
		}
	}
	return DP[idx][carry][flag]=ans;
}

int main(){
	inpll(t);
	while(t--){
		inpll(n);
		memset(DP,-1,sizeof(DP));
		ll len=0;
		while(n){
			if(n&1) v.pb(1);
			else v.pb(0);
			n/=2;
			len++;
		}
		reverse(all(v));
		//rep(i,0,sz(v)) cout<<v[i];
		//cout<<'\n';
		cout<<(fun(len-1,0,0)+mod)%mod<<'\n';
	}
	return 0;
}
