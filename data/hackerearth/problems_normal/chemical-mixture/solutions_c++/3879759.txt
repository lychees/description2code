//Bismillahir Rahmanir Rahim
//Opu-1204026
#include<bits/stdc++.h>
using namespace std;
#define sf      scanf
#define pf      printf
#define pb      push_back
#define _       ios_base::sync_with_stdio(false);
#define ct      cin.tie(NULL);
#define ll      long long
#define eps     1e-10
#define ms(n,i) memset(n,i,sizeof n)
#define pi      2*acos(0)
#define inf     1<<30
#define fr(i,n) for(i=0;i<n;i++)
#define fr1(i,n)for(i=1;i<=n;i++)
#define nl cout<<"\n"
#define abs(x)  ((x<0)?-(x):x)
#define MAX 30005
#define sp(i)      cout<<fixed<<setprecision(i)
//STL
typedef      vector<int> vi;
typedef      vector<ll> vl;
typedef      pair<int,int>ii;
#define mp      make_pair
#define ft      first
#define sd      second
#define IT      iterator
#define pr(c,x) ((c).find(x)!=(c).end())
#define sz(a) int((a).size())
#define all(c)  c.begin(), c.end()
#define tr(c,i) for(__typeof((c).begin()) i=(c).begin();i!=c.end();i++)
#define vpresent(c,x) (find(all(c),x)!=(c).end())
#define eb      emplace_back
 
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={2,1,-1,-2,-1,1};int dy[]={0,1,1,0,-1,-1}; //Hexagonal Direction
 bool cmp(ll x,ll y){return x>y;}
ll a[62],b[16];
vl w,q;
int main()
{
    // freopen("D:\\Coding\\in.txt","r",stdin);
    // freopen("D:\\Coding\\out.txt","w",stdout);
    _;ct;
    ll t,m,n1,n2,i,j,k,sm,l,mx;
    cin>>t;
    while(t--)
    {
        q.clear();
        cin>>m>>n1>>n2;mx=-1;
        fr(i,n1)cin>>a[i];fr(i,n2)cin>>b[i];
 
        sort(a,a+n1,cmp);
        fr(i,(1<<n2))
        {
            sm=0;
            for(j=0;(1<<j)<=i;j++)if(i&(1<<j))sm+=b[j];
 
            l=m-sm;w.clear();
            if(l>mx)
            {
                fr(j,n1)
                {
                    if(a[j]<=l)w.pb(a[j]),l-=a[j];
                    if(l==0)break;
                }
                if(l==0)q=w,mx=m-sm;
            }
        }
        if(mx==-1)cout<<"NO";
        else
        {
            cout<<"YES";nl;
            sort(all(q));
            fr(i,q.size())
            {
                if(i)cout<<" ";
                cout<<q[i];
            }
        }
        nl;
 
    }
 
 
    return 0;
}