using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define PI 2 * acos(0)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;

ll a,b,n,k,ans;

ll power(ll coso, ll somu, ll modulo){
    ll answer=1;
    while (somu){
        if (somu%2) answer=answer*coso%modulo;
        coso=coso*coso%modulo;
        somu/=2;
    }
    return answer;
}

int main(){
 //   freopen("binomial-coefficient-1.inp", "r", stdin);
 //   freopen("binomial-coefficient-1.out", "w", stdout);
    ios_base::sync_with_stdio (false);
    cin.tie();
    cin >> a >> b >> n >> k;
    ans=1;
    FORE(i,1,k) ans=ans*(n-i+1)%INF*power(i,INF-2,INF)%INF;
    ans=ans*power(a,k,INF)%INF*power(b,n-k,INF)%INF;
    cout << ans;
}
