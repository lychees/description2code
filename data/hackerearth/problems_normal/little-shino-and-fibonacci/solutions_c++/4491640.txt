#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
typedef vector<vi> vvi;
const int MOD=1000000007;


int main() {
    ios_base::sync_with_stdio ( false );
    vector<vector<short>> per ( 10000,vector<short> ( 10000,-1 ) );
    vi vals= {0,0,1};
    per[0][1]=1;
    int cur=1,lst=0;
    int n=1;
    int st=0;
    while ( 1 ) {
        n++;
        int nxt=cur+lst;
        if ( nxt>=10000 ) nxt-=10000;
        int v=vals.back() +nxt;
        if ( v>=MOD ) v-=MOD;
        vals.push_back ( v );
        
        if ( per[cur][nxt]>=0 ) {
//             cout<<cur<<" "<<nxt<<endl;
            st=per[cur][nxt];
            break;
        }
        per[cur][nxt]=n;
        lst=cur;
        cur=nxt;


    }
//      cout<<n<<" "<<st<<endl;
    ll period=n-st;
    ll del=vals[n]-vals[st];
    if ( del<0 ) del+=MOD;
    inrep {
        ll l,r;
        cin>>l>>r;
        ll npr= ( r-st ) /period%MOD;
        ll vr=npr*del%MOD+vals[ ( r-st ) %period+st];
        if(vr>=MOD)vr-=MOD;
        ll vl=0;
        if ( l>1 ) {
            ll npl= ( l-1-st ) /period%MOD;
            vl=npl*del%MOD+vals[ ( l-1-st ) %period+st];
            if(vl>=MOD)vl-=MOD;
        }
        ll v=vr-vl; if(v<0)v+=MOD;
        v%=MOD;
        cout<<v<<'\n';
    }

}
