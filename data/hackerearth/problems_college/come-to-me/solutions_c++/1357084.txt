#include <iostream>
#include <algorithm>
#include <cstring>
#include <string>
#include <cstdio>
#include <stdlib.h>
#include <math.h>
#include <vector>
#include <list>

#define mod 1000000007

typedef long long int ll;
typedef long int l;
typedef unsigned long long int ull;
typedef unsigned long int ul;

using namespace std;
int lengthOfLongestSubstring(string s) {
  int n = s.size();
  int i = 0, j = 0;
  int maxLen = 0;
  bool exist[256] = { false };
  while (j < n) {
    if (exist[s[j]]) {
      maxLen = max(maxLen, j-i);
      while (s[i] != s[j]) {
        exist[s[i]] = false;
        i++;
      }
      i++;
      j++;
    } else {
      exist[s[j]] = true;
      j++;
    }
  }
  maxLen = max(maxLen, n-i);
  return maxLen;
}

int main()
{
  std::ios_base::sync_with_stdio(false);
  int t;cin>>t;
  while(t--)
  {
      string str;
      cin>>str;
      cout<< lengthOfLongestSubstring(str)<<endl;
  }

return 0;
}
