from collections import defaultdict
mod_const = (10**9+7)


def compute_distances(X, Y, N):
    X.sort()
    Y.sort()

    def total_pairwise_length(X):
        ret = 0
        for i in xrange(N/2):
            x_span = abs(X[-1-i] - X[i]) % mod_const
            ret += x_span * (N-(2*i)-1)
            ret %= mod_const
        return ret

    ret = 0
    ret += total_pairwise_length(X)
    ret += total_pairwise_length(Y)
    return (ret % mod_const)


N = input()
X = [0] * N
Y = [0] * N

for i in xrange(N):
    X[i], Y[i] = map(int, raw_input().split())


print compute_distances(X, Y, N)
