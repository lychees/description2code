#include <iostream>
#include <string.h>
#include <bits/stdc++.h>

/*using namespace std;

int main()
{
    int t,outerarray=0,innerarray=0,flag=0;
    long int n,m;
    long int d[1000000000];
   	long int a[100000],b[100000];//innerarray
   	cin>>t;
   	if((t<1)||(t>30))
   		return 0;
   	char c[30][5];	//outerarray
   	while(t--)
   	{
   		cin>>n;
   		if((n>1000000000)||(n<1))
   		{
   			strcpy(c[outerarray++],"NO");
   			continue;
   		}
   		cin>>m;
   		if((m>100000)||(m<1))
   		{
   			strcpy(c[outerarray++],"NO");
   			continue;
   		}	
		for(long int k=0;k<n;k++)
		{
			d[k]=0;
		}
   		while((m--)>0)
   		{
   			cin>>a[innerarray]>>b[innerarray];
   			if(a[innerarray]<n)
   			{
	   			if(a[innerarray]<=b[innerarray])
	   			{
	   				long int iinnerarray=a[innerarray];
	   				while(iinnerarray<=b[innerarray])
	   				{
	   					if(d[iinnerarray]==0)
	   						d[iinnerarray]=1;
	   					else
	   						d[iinnerarray]++;
	   					iinnerarray++;
	   				}
	   			}
	   			else
	   			{
	   				long int iinnerarray=a[innerarray];
	   				while(iinnerarray<n)
	   				{
	   					if(d[iinnerarray]==0)
	   						d[iinnerarray]=1;
	   					else
	   						d[iinnerarray]++;
	   					iinnerarray++;
	   				}
	   				if(iinnerarray==n)
	   				{
	   					iinnerarray=0;
	   					while(iinnerarray<=b[innerarray])
	   					{
		   					if(d[iinnerarray]==0)
		   						d[iinnerarray]=1;
		   					else
		   						d[iinnerarray]++;
		   					iinnerarray++;
		   				}
	   				}
	   			}
		   	}
		   	else
		   	{
		   		strcpy(c[outerarray++],"NO");
	   			flag=1;
		   	}
		   	innerarray++;
   		}
   		if(flag!=1)
   		{
	   		for(long int l=0;l<n;l++)
	   		{
	   			if(d[l]>1)
	   			{
	   				flag=1;
	   				strcpy(c[outerarray++],"NO");
	   				break;
	   			}
	   		}
   		}
   		if(flag==0)
   		{
   			strcpy(c[outerarray++],"YES");
   		}
   		flag=0;
   	}
   	while(t<outerarray)
   	{
   		cout<<c[t++]<<endl;
   	}
   	return 0;
}*/
using namespace std;
typedef pair <int,int> PII;
typedef vector <int> VI; 
typedef vector < PII > VPII;
int main()
{
    int tc;
    scanf("%d",&tc);
		while (tc--)
    {
        int m, n;
        scanf("%d %d",&m, &n);
				VPII segm;
        for(int i=0;i<n;i++)
        {
            int st, en;
            scanf("%d %d",&st, &en);
            if(st<=en)
            {
                segm.push_back(make_pair(st,en));
                segm.push_back(make_pair(st+m,en+m));
            }
            else
                segm.push_back(make_pair(st,en+m));
        }
				if(n>m)
        {
            puts("NO");
            continue;
        }
        sort(segm.begin(),segm.end());
        
				int T=0;
        int i=0;
        set < PII > que;
        bool ok = true;
        while(true)
        {
            if(que.empty())
            {
                if(i==segm.size())
                    break;
                else
                    T = segm[i].first;
            }
        
						while(i<segm.size() && segm[i].first==T)
            {
                que.insert(make_pair(segm[i].second,i));
                i++;
            }
            
						int ind = que.begin()->second;
            que.erase(que.begin());
            
						if(!(T>=segm[ind].first && T<=segm[ind].second))
            {
                ok = false;
                break;
            }
            T++;
        }
        puts(ok?"YES":"NO");
    }
}
