#include<bits/stdc++.h>
using namespace std;
#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define all(v) v.begin(),v.end()
#define ll long long
#define mod 1000000007LL
bool cmp(string a,string b)
{
    if(a.size()!=b.size())
        return a.size()<b.size();
    return a<b;
}
int main()
{
    string s[4];
    cin>>s[0]>>s[1]>>s[2];
    sort(s,s+3,cmp);
    string h="";
    int i,j,c=0;
    char ch;
    for(i=s[0].size()-1; i>=0; i--)
    {
        j=((s[0][i]-48)*2)+c;
        ch=(j%10)+48;
        h+=ch;
        c=j/10;
    }
    if(c!=0)
    {
        ch=c+48;
        h+=ch;
    }
    reverse(h.begin(),h.end());
    if(h==s[1]||h==s[2])
    {
        printf("YES\n");
        return 0;
    }
    c=0;
    h="";
    for(i=s[1].size()-1; i>=0; i--)
    {
        j=((s[1][i]-48)*2)+c;
        ch=(j%10)+48;
        h+=ch;
        c=j/10;
    }
    if(c!=0)
    {
        ch=c+48;
        h+=ch;
    }
    reverse(h.begin(),h.end());
    if(h==s[2])
    {
        printf("YES\n");
        return 0;
    }
    c=0;
    h="";
    reverse(s[0].begin(),s[0].end());
    reverse(s[1].begin(),s[1].end());
    for(i=0; i<min(s[0].size(),s[1].size()); i++)
    {
        j=c+(s[0][i]-48)+s[1][i]-48;
        ch=j%10+48;
        c=j/10;
        h+=ch;
    }
    if(i==s[0].size())
    {
        for(; i<s[1].size(); i++)
        {
            j=s[1][i]-48+c;
            c=j/10;
            ch=j%10+48;
            h+=ch;
        }
        if(c!=0)
        {
            ch=c+48;
            h+=ch;
        }
    }
    else
    {
        for(; i<s[0].size(); i++)
        {
            j=s[0][i]-48+c;
            c=j/10;
            ch=j%10+48;
            h+=ch;
        }
        if(c!=0)
        {
            ch=c+48;
            h+=ch;
        }
    }
    reverse(h.begin(),h.end());
    if(h==s[2])
    {
        printf("YES\n");
        return 0;
    }
    printf("NO\n");
    return 0;
}