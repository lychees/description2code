#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <queue>
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <ctime> 
#include <cstring> 

using namespace std; 

typedef long long ll; 
typedef pair<int, int> pii;

#define INF 1000000000
#define pb push_back 
#define itr iterator 
#define sz size() 
#define mp make_pair

long long num[1100][1100];
int nex[1100], col[1100];
int eq[1100];
int ord[1100];
int n, mm, t;

const int mod = 1000000007;

int main() {
	for (scanf("%d", &t); t; t--) {
		scanf("%d %d", &n, &mm);
		for (int i = 1; i <= n; i++) {
			int pr;
			scanf("%d", &pr);
			scanf("%d", &col[i]);
			nex[pr] = i;
		}

		int c = 0;
		for (int i = 1; i <= n; i++) {
			c = nex[c];
			ord[i] = col[c];
		}

		for (int i = 1; i <= n; i++) {
			eq[i] = 0;
			for (int j = i-1; j > 0; j--) {
				if (ord[j] == ord[i]) {
					eq[i] = j;
					break;
				}  
			}
		}

		for (int i = 1; i <= n; i++) {
			num[1][i] = num[1][i-1];
			if (eq[i] == 0) num[1][i]++;
		}

		for (int m = 2; m <= mm; m++) {
			for (int i = m; i <= n; i++) {
				num[m][i] = num[m][i-1];
				num[m][i] += num[m-1][i-1] - num[m-1][max(0, eq[i]-1)];
				num[m][i] = (num[m][i] + mod) % mod;
			}
		}

		int ans = 0;
		for (int m = 1; m <= mm; m++) {
			ans += num[m][n];
			ans %= mod;
		}
		printf("%d\n", ans);
	}
}