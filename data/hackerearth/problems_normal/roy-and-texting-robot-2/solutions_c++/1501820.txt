#include<bits/stdc++.h>
using namespace std;
set<long long> v[1000005];
inline long long inp( )
{
   long long n = 0 , s = 1 ;
    char p = getchar_unlocked( ) ;
    if( p == '-' )
        s = -1 ;
    while( ( p < '0' || p > '9' ) && p != EOF && p != '-' )
        p = getchar_unlocked( ) ;
    if( p == '-' )
        s = -1 , p = getchar_unlocked( ) ;
    while( p >= '0' && p <= '9' )
    {
        n = ( n << 3 ) + ( n << 1 ) + ( p - '0' ) ;
        p = getchar_unlocked( ) ;
    }
    return n * s ;
}
int main() {
	int t;
    map<char,int> mp;
    map<char,int> mp1;
    mp['1']=mp['.']=mp[',']=mp['?']=mp['!']=1;
    mp['a']=mp['b']=mp['c']=mp['2']=2;
    mp['f']=mp['e']=mp['d']=mp['3']=3;
    mp['i']=mp['h']=mp['g']=mp['4']=4;
    mp['l']=mp['k']=mp['j']=mp['5']=5;
    mp['o']=mp['n']=mp['m']=mp['6']=6;
    mp['s']=mp['r']=mp['q']=mp['p']=mp['7']=7;
    mp['u']=mp['v']=mp['t']=mp['8']=8;
    mp['x']=mp['w']=mp['y']=mp['z']=mp['9']=9;
    mp['_']=mp['0']=10;
    /**/
    mp1['1']=5;
	mp1['.']=1;
	mp1[',']=2;
	mp1['?']=3;
	mp1['!']=4;
    mp1['a']=1;
	mp1['b']=2;
	mp1['c']=3;
	mp1['2']=4;
    mp1['f']=3;
	mp1['e']=2;
	mp1['d']=1;
	mp1['3']=4;
    mp1['i']=3;
	mp1['h']=2;
	mp1['g']=1;
	mp1['4']=4;
    mp1['l']=3;
	mp1['k']=2;
	mp1['j']=1;
	mp1['5']=4;
    mp1['o']=3;
	mp1['n']=2;
	mp1['m']=1;
	mp1['6']=4;
    mp1['s']=4;
	mp1['r']=3;
	mp1['q']=2;
	mp1['p']=1;
	mp1['7']=5;
    mp1['u']=2;
	mp1['v']=3;
	mp1['t']=1;
	mp1['8']=4;
    mp1['x']=2;
	mp1['w']=1;
	mp1['y']=3;
	mp1['z']=4;
	mp1['9']=5;
    mp1['_']=1;
	mp1['0']=2;
    /**/
    char a[100000];
	scanf("%d",&t);
	while(t--) {
		int flag=1,ans=0,i;
		cin>>a;
		for(i=0;a[i]!='\0';i++) {
			if(mp[a[i]]==flag) {
				ans+=0;
				flag=mp[a[i]];
			}
			else {
				ans++;
				flag=mp[a[i]];
			}
		}
		for(i=0;a[i]!='\0';i++) {
			ans+=mp1[a[i]];
		}
		printf("%d\n",ans);
	}
	return 0;
}