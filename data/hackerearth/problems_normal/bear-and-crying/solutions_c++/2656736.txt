/**
 *@author:  Orchid
 *@Problem: Bear and Crying
 *@Contest: Hackerearth Oct Easy '15
 */
#include <bits/stdc++.h>
#define ULLI unsigned long long int
#define LLI long long int
#define pb push_back
#define mem(a,p) memset(a,p,sizeof(a))
#define fi first
#define se second
#define mp make_pair
#define mt make_tuple
#define tg(p,i) get<i>(p)
#define bitcount __builtin_popcount
#define checkbit(n,b) ((n>>b)&1)
#define gcd __gcd
#define rep(i,a,b) for(int i=a;i<b;++i)
#define all(a) a.begin(),a.end()
#define sz(a) ((int)(a.size()))
#define DREP(a) sort(all(a));a.erase(unique(all(a)),a.end())
#define ns ios_base::sync_with_stdio(false);cin.tie(0)
using namespace std;
#define VI vector<int>
#define PII pair<int,int>
#define MOD 1000000007LL
#define EPS 1e-12

//only for C++11/C++14; call as debug(x,y,z,...)
#define debug(args...)  { vector<string> _v; string _s = #args;    \
                          replace(_s.begin(), _s.end(), ',', ' '); \
                          splitstr(_s, _v); err(_v.begin(), args); }
void splitstr(const string &s, vector<string> &v) {
    istringstream in(s);
    copy(istream_iterator<string>(in), istream_iterator<string>(), back_inserter(v));
}
void err(vector<string>::iterator it) {}
template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
    cerr << *it << " = " << a << '\n';
    err(++it, args...);
}

int main() {
    ns;
    LLI curexp = 0, sum = 0;
    int curs = 0;
    string s;
    cin >> s;
    int len = s.size();
    rep(i, 0, len) {
        if (s[i] == '_') {
            curexp = 2 * curexp;
            curexp %= MOD;
            curexp += curs;
            curexp %= MOD;
        } else {
            sum += curexp;
            curs++;
        }
    }
    cout << sum % MOD << "\n";
    return 0;
}
