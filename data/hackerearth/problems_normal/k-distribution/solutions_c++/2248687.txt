//written by raj_0jaiswal
#include <bits/stdc++.h>
using namespace std;
#define crt()  int t; cin>>t; while(t--)
#define ll long long
#define mod 1000000007
#define mxx 100005
#define sc(n) scanf("%d",&n)
#define out(x) #x << " = " << x << "   "
#define pb                      push_back
#define vt                      vector<int>
#define pi                      pair<int,int>
#define mp                      make_pair
#define ff                      first
#define ss                      second
#define maX(a,b)                ((a)>(b)?(a):(b))
#define miN(a,b)                ((a)<(b)?(a):(b))
#define INF                     (int)1e9
#define SORT(_a,_b)             sort(_a,_b,greater<int>())
/*inline int scan(){ register int t=0;char c=getchar_unlocked();while(c<'0' || c>'9')c=getchar_unlocked();
while(c>='0' && c<='9'){t=(t<<3)+(t<<1)+c-'0';c=getchar_unlocked();} return(t);}*/
ll power(ll aa,ll pp){ ll xx=1,yy=aa%mod; while(pp>0){ if(pp&1) xx=(xx*yy)%mod; yy=(yy*yy)%mod; pp=pp>>1;} return xx%mod;}
bool cmp(pi a,pi b){if(a.ff!=b.ff)return a.ff<b.ff; else return a.ss<b.ss;}
ll dp[102][mxx],totsum;
int A[102];
int main()
{
	int n,k,i,j,sum,tot;
    scanf("%d %d",&n,&k);
    for (i = 0; i < n; i++){
            scanf("%d",&A[i]);
            totsum += A[i];
        }
    if(totsum<(2*k))
    printf("0\n");
    else {
    for(i=0;i<=n;i++) dp[i][0]=1; //number of way to make sum 0 using 1 to i element
    for(i=1;i<=n;i++)
    {
       for(j=0;j<=k-1;j++)
       {
       	    if(totsum-j>=k)
       	    {
              dp[i][j]=dp[i-1][j]; //do not take i th element
        	  if(j>=A[i-1])
        	  dp[i][j]=(dp[i][j]+dp[i-1][j-A[i-1]])%mod;
       	    }
        }
    }
    /*for(i=0;i<=n;i++){
        for(j=0;j<=k-1;j++)
        	cout<<dp[i][j]<<" ";
        cout<<endl;
    }*/
    sum = 0;
    for(i = 0; i < k; i++) {
        sum = (sum+dp[n][i])%mod;
    }
    //cerr<<sum<<endl;
    tot = 1;
    for(i=0;i<n;i++)
       tot=(2*tot)%mod;

    sum = (tot-(2*sum)+mod)%mod;
    printf("%d\n",sum);
    }
  return 0;
}
