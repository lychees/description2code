#include <iostream>
#include <vector>
#include <utility>
#include <set>
using namespace std;
#define ll long long
#define MAX 200010
ll n,nn;

ll bit[MAX];
ll a[MAX];
ll f[MAX];

void update(ll index,ll val){
	for(;index<=MAX; index += index&-index){
		bit[index]+=val;
	}
}
void update1(ll index,ll value){
	a[index]=value;
}
ll query(ll value){
	ll ans=0;
	for(;value>0; value-= value&-value){
		ans+=bit[value];
	}
	return ans;
}
ll l,r,q;
int main()
{
	cin>>n>>q;
	nn=n;
	ll i=1;
    for(ll i=1;i<=n;i++){
		cin>>a[i];
		
		int flag=0;
		if(a[i]>=0)flag=1;
		ll x = a[i];
		if(flag==0)continue;
		else{
			int last = a[i]%10;
			int first;
			while(a[i]){
				first = a[i]%10;
				a[i]/=10;
			}
			if(first!=last)continue;
			else{
				f[i]=1;
				update(i,f[i]);
			}
		}
	}
//	cout<<"f is "<<endl;
//	for(ll i=1;i<=nn;i++)cout<<f[i]<<' ';
//	cout<<endl;
//	cout<<"bit is "<<endl;
//	for(ll i=1;i<=nn;i++)cout<<bit[i]<<' ';
//	cout<<endl;
	while(q--){
		ll t;
		cin>>t;
		if(t==1){
			cin>>l>>r;
			cout<<query(r)-query(l-1)<<endl;
		}
		else if(t==2){
			ll dd,k;
			cin>>dd>>k;
			ll xx = f[dd];
			ll yy;
			update1(dd,k);
			if(k<0){
				f[dd]=0;
			}
			int last = k%10;
			int first;
			while(k){
				first = k%10;
				k/=10;
			}
			if(first!=last){
				f[dd]=0;
			}
			else f[dd]=1;
			if(xx^f[dd]==0)continue;
			else if(xx==0){
				update(dd,1);
			}
			else{
				update(dd,-1);
			}
		}
	}
    return 0;
}
