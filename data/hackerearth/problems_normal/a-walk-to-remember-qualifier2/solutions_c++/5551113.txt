#include<bits/stdc++.h>
#include <iostream>
#define MAX 100005
using namespace std;
int visited[MAX];
vector<int> component;
vector<int> order;

void dfs(vector<list<int>> &g,int src)
{
	visited[src]=1;
	list<int>:: iterator it=g[src].begin();
	for(;it!=g[src].end();it++)
	{
		if(visited[*it]==0)
			dfs(g,*it);
	}
	//cout<<*it<<"+";
	order.push_back(src);
}
void dfs2(vector<list<int>> &g,int src)
{
	visited[src]=1;
	//cout<<src<<" ";
	component.push_back(src);
	list<int>:: iterator it=g[src].begin();
	for(;it!=g[src].end();it++)
	{
		if(visited[*it]==0)
			dfs2(g,*it);
	}

}


int main()
{
    //cout << "Hello World!" << endl;
    int n,m;
    cin>>n>>m;
    int x,y;
    vector<list<int>> g(n+1);
    vector<list<int>> gt(n+1);
     vector<int> res(n+1);
    memset(visited,0,sizeof(visited));
    for(int i=0;i<m;i++)
    {
    	cin>>x>>y;
    	g[x].push_back(y);
    	gt[y].push_back(x);
    }
    for(int i=1;i<=n;i++)
    {
    	if(visited[i]==1)
    		continue;
    	dfs(g,i);
    }
    
    memset(visited,0,sizeof(visited));
    reverse(order.begin(),order.end());
    for(int i=0;i<order.size();i++)
    {
    	if(visited[order[i]]==1)
    		continue;
    	component.clear();
    	dfs2(gt,order[i]);
    	if(component.size()==1)
    		continue;
    	for(int j=0;j<component.size();j++)
    	{
    		res[component[j]]=1;//cout<<"Hell";
    	}
    	
    	
    	
    }
    
    for(int i=1;i<=n;i++)
    	cout<<res[i]<<" ";
    
    
    return 0;
}
