#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int mat[102][102];
int vis[102][102];
int ans=0;
int d;
int n,m,q;
int dx[4] = {-1,1,0,0};
int dy[4] = {0,0,-1,1};
bool check( int x , int y)
{
	if(x>=0 && y>=0 && x<n && y<m)
	return true;
	else
	return false;
	
}
int bfs(int x , int y)
{
	queue< pair < int , int >  > q;
	q.push(make_pair(x,y));
	if(!vis[x][y]){
	vis[x][y]=1;
	ans++;
}
	
	int u,v,w;
	pair< int , int > temp;
	while(!q.empty()) {
		temp = q.front();
		q.pop();
		

		//if(vis[temp.first][temp.second])
		//continue;
		//vis[temp.first][temp.second]=1;
		//ans++;
		for(int i=0;i<4;i++) {
					u = temp.first+dx[i];
		            v = temp.second+dy[i];
		            int diff = abs(mat[u][v]-mat[temp.first][temp.second]);
		            if(diff<=d && check(u,v) && !vis[u][v]) {
		            	vis[u][v]=1;
		            	ans++;
		            	q.push(make_pair(u,v));
		            }
		}
	}
	return ans;
}
int main()
{
   int i,j;
   cin>>n>>m>>q;
   for(i=0;i<n;i++) {
   	for(j=0;j<m;j++) {
   		cin>>mat[i][j];
   	}
   }
     
      ans=0;
   while(q--) {
   	int x , y;
   	cin>>x>>y>>d;
   	ans =0;
   	 memset(vis,0,sizeof(vis));
   	int ans = bfs(x-1,y-1);
   	cout<<ans<<endl;
   }
   
    return 0;
}
