#include <bits/stdc++.h>
using namespace std;
struct _ { ios_base::Init i; _() { cin.sync_with_stdio(0); cin.tie(0);cout.tie(0); } } _;

#define llin(a) ll a; cin>>a;
#define srep(i,a,b) for(ll i=a;i<b;i++)
#define rep(i,n) for(ll i=0;i<n;i++)
typedef long long int ll;
typedef vector<ll> vl;
ll dp[100000][3];
int main()
{
	llin(t);
	while(t--)
	{
    llin(n);
    llin(k);
    rep(i,n+10)
    {dp[i][0]=0;
    dp[i][1]=0;
    dp[i][2]=0;}
    
    vl vec;
    ll x;
    rep(i,n)
    {
        cin>>x;vec.push_back(x);
    }
    if(k==0)
    {
    	ll sum=0;
    	rep(i,n)
    	{
    		if(vec[i]>0)
    		sum+=vec[i];
    	}
    	cout<<sum<<endl;
    }
    else
    {
    	
    	dp[0][0]=vec[0];  //selecting 0
        dp[0][1]=0;			//Not Selecting 0
        dp[0][2]=max(dp[0][1],vec[0]);	//Max till here
        
        srep(i,1,n)
        {
        	if(i-k-1<0)
        	{
        		dp[i][0]=vec[i];
        		dp[i][1]=0;
        		dp[i][2]=max(vec[i],dp[i-1][2]);
        	}
        	else
        	{
	            dp[i][0]=vec[i]+dp[i-k-1][2];
	            dp[i][1]=dp[i-k][2];
	            dp[i][2]=max(dp[i][0],dp[i-k][2]);
	            dp[i][2]=max(dp[i][2],dp[i-1][2]);
        	}
        }
        ll mm=max(dp[n-1][0],dp[n-1][2]);
        cout<<max(mm,dp[n-1][1])<<endl;
       /* rep(i,n)
        {
        	cout<<vec[i]<<" ; "<<dp[i][0]<<" "<<dp[i][1]<<" "<<dp[i][2]<<endl;
        }*/
    }
	}
}