#include<bits/stdc++.h>
#include <algorithm>
#include<vector>
#include<list>
#include<utility>
#include<map>
#include<set>
#include<stack>
#include<queue>
#define mod 1000000007
#define ll long long
#define INF (ll)(1e18)
#define mp make_pair
#define fill(a,v) memset(a, v, sizeof a)
using namespace std;
ll i,j;
bool isprime[10001];
void primecheck()
{
	fill(isprime,true);
	isprime[0]=false;
	isprime[1]=false;
	for(i=2;i<=sqrt(10001);i++)
	{
		if(isprime[i]==true)
		{
			for(j=i*i;j<10001;j+=i)
			isprime[j]=false;
		}
	}
//	for(i=1;i<10001;i++)
//	{
//		if(isprime[i]==true)
//		cout<<i<<" ";
//	}cout<<endl;
}
int main()
{
	primecheck();
	ll N,K;
	cin>>N>>K;
	ll v[N][N];
	for(i=0;i<N;i++)
	for(j=0;j<N;j++)
	cin>>v[i][j];
	
	ll ans=INF;
	ll posx,posy;
	
	for(i=1;i<N-1;i++)
	{
		for(j=1;j<N-1;j++)
		{
			ll temp=0;
			ll a,b,c,d,e;
			a=v[i][j];
			b=v[i-1][j-1];
			c=v[i-1][j+1];
			d=v[i+1][j-1];
			e=v[i+1][j+1];
			while(isprime[a]==false && a<=10000)
			{
				temp+=1;
				a+=K;
			}
			while(isprime[b]==false && b<=10000)
			{
				temp+=1;
				b+=K;
			}
			while(isprime[c]==false && c<=10000)
			{
				temp+=1;
				c+=K;
			}
			while(isprime[d]==false && d<=10000)
			{
				temp+=1;
				d+=K;
			}
			while(isprime[e]==false && e<=10000)
			{
				temp+=1;
				e+=K;
			}
			if(isprime[a]==true  && isprime[b]==true && isprime[c]==true && isprime[d]==true && isprime[e]==true)
			{
				if(temp<ans)
				{
					ans=temp;
					posx=i;
					posy=j;
				}
			}
		}
	}
	if(ans==INF)
	cout<<"no"<<endl;
	else
	{
		cout<<"yes"<<endl;
		cout<<ans<<endl;
		cout<<posx+1<<" "<<posy+1<<endl;
	}
	





	return 0;
}
