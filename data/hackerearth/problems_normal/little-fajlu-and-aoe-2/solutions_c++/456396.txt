#include <stdio.h>
#include <stdlib.h>
#include <math.h> 
#include <assert.h>

int food_Fajlu;
int gold_Fajlu;
int BaadShah_Power;

struct Weapon
{
	int gold;
	int food;
};

Weapon w[3] = { { 0, 100 }, { 50, 125 }, { 100, 50 } };

static int p[3];
int power[1600][1600] = { 0 };

int Max(int x, int y, int z)
{
	if (x > y)
	{
		if (x > z)
			return x;
		else
			return z;
	}
	else
	{
		if (y > z)
			return y;
		else
			return z;
	}
}

int BestPower(int food, int gold)
{
	int pow1 = 0, pow2 = 0, pow3 = 0;

	
	if (power[food / 25][gold / 25] != 0)
		return power[food / 25][gold / 25];

	if ((food - w[0].food >= 0) && (gold - w[0].gold >=0) )
	pow1 = p[0] + BestPower(food - w[0].food, gold - w[0].gold);

	if ((food - w[1].food >= 0) && (gold - w[1].gold >= 0))
	pow2 = p[1] + BestPower(food - w[1].food, gold - w[1].gold);

	if ((food - w[2].food >= 0) && (gold - w[2].gold >= 0))
	pow3 = p[2] + BestPower(food - w[2].food, gold - w[2].gold);

	power[food / 25][gold / 25] =  Max(pow1, pow2, pow3);

	return power[food / 25][gold / 25];
}

void findPower()
{
	int numTests = 0;
	scanf("%d", &numTests);

	for (int x = 0; x < numTests; x++)
	{
		scanf("%d", &food_Fajlu);
		scanf("%d", &gold_Fajlu);

		for (int i = 0; i < 3; i++)
		{
			scanf("%d", p+i);
		}

		scanf("%d", &BaadShah_Power);

		for (int i = 0; i<1600; i++)
		{
			for (int j = 0; j<1600; j++)
				power[i][j] = 0;
		}

		int power1 = BestPower(food_Fajlu, gold_Fajlu);

		if (power1 - BaadShah_Power > 0)
			printf("%d\n", power1 - BaadShah_Power);
		else
			printf("%d\n", -1);


	}

}

int main()
{
    findPower();
    return 0;
}
