#include <iostream>
#include<list>
#include<vector>
#include<set>
#include<algorithm>
# define INF 0x3f3f3f3f
using namespace std;

int main()
{
    //cout << "Hello World!" << endl;
    int t;
    cin>>t;
    while(t--)
    {
	    int n,m;
	    cin>>n>>m;
	    vector<list<pair<int,int>>> alist(n+1);
	    int a,b,cost;
	    for(int i=0;i<m;i++)
	    {
	    	cin>>a>>b>>cost;
	    	alist[a].push_back(make_pair(b,cost));
	    	alist[b].push_back(make_pair(a,cost));
	    }
	    set<pair<int,int>> myset;
	    int src=1;
	    vector<int> dist(n+1, INF);
	    myset.insert(make_pair(0,src));
	    dist[src]=0;
	    set<pair<int,int>>:: iterator it;
	    while(!myset.empty())
	    {
	    	it=myset.begin();
	    	myset.erase(myset.begin());
	    	int u=(*it).second;
	    	list<pair<int,int>> :: iterator i;
	    	for(i=alist[u].begin();i!=alist[u].end();i++)
	    	{
	    		int v=(*i).first;
	    		int w=(*i).second;
	    		if(dist[v]>dist[u]+w)
	    		{
	    			if(dist[v]!=INF)
	    				myset.erase(myset.find(make_pair(dist[v],v)));
	    			dist[v]=dist[u]+w;
	    			myset.insert(make_pair(dist[v],v));
	    		}
	    		
	    	}
	    	
	    }
	   int q;
	   cin>>q;
	    while(q--)
	    {
		    int src,tym;
		    cin>>src>>tym;
		    if(tym<2*dist[src])
		    	cout<<"0"<<endl;
		    else 
		    	cout<<(tym-2*dist[src])<<endl;
		 }
	    
    }
    return 0;
}
