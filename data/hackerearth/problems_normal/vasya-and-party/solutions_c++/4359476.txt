#include<bits/stdc++.h>
using namespace std;
#define MAX 100007
# define MOD 1000000007
int n, m;

vector<int> Adj[MAX], A;
bool vis[MAX];
long long int ans = 1;

void bfs(int start) {

    deque<int> que;
    int max_x = INT_MIN, cnt = 0;

    que.push_back(start);
    vis[start] = 1;
    
    while(!que.empty()) {
        int kk = que.front();
//        cout<<kk<<" ";
        if(A[kk-1] > max_x) {
            max_x = A[kk-1];
            cnt = 1;
        }
        else if(A[kk-1] == max_x) {
            cnt++;
        }

        que.pop_front();

        for(int i = 0; i < Adj[kk].size(); i++) {
            if(vis[Adj[kk][i]] == false) {
                que.push_back(Adj[kk][i]);
                vis[Adj[kk][i]] = true;
            }
        }
    }
    ans = (ans * cnt)%MOD;
}


int main() {
    cin>>n>>m;
    int x, y;
    A.resize(n);

    for(int i = 0; i < n; i++)
        cin>>A[i];

    for(int i = 0; i < m; i++) {
        cin>>x>>y;
        if(x == y)
            continue;
        Adj[x].push_back(y);
        Adj[y].push_back(x);
    }

    memset(vis, false, sizeof(vis));
    
    for(int i = 1; i <= n; i++) {
        if(vis[i] == 0) {
  //          cout<<i<<endl;
            bfs(i);
        }
    }

    cout<<ans<<endl;
    return 0;
}



