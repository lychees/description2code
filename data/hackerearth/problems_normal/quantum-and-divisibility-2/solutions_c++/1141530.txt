#include <iostream>
#include<stdio.h>
#include<map>
#include<cmath>
using namespace std;

typedef long long LL;

map<int,LL> prime_factor(int n)
{

  map<int,LL> r;
  LL count=0;
  int i;
  for(i=2;i<=sqrt(n);i++)
  {
  	count=0;
  	  if(n%i==0)
  	  {
  	  	  while(n%i==0)
  	  	   {
  	  	   	count++;
  	  	   	n/=i;
  	  	   }
  	  }
  	  r[i]=count;
  }
  if(n>1)
   	r[n]=1;
   	
   	return r;
}


int main()
{
	
	int T;
	scanf("%d",&T);
	while(T--)
	{
		
		int a,b,c,d,flag=1;
		scanf("%d%d%d%d",&a,&b,&c,&d);
		map<int,LL> x=prime_factor(a),y=prime_factor(c);
		map<int,LL>::iterator p;
		for(p=y.begin();p!=y.end();p++)
		{
			if((p->second)*d>x[p->first]*b)
			 {
			 	flag =0;
			 	//break;
			 }
			 
		}
		if(!flag)
    	{
      		printf("Not divisible\n");         
    	}   
    	else
    	{
      		printf("Divisible\n");    
    	}
		
		
	}
	return 0;
	
	
	
}
