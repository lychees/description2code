/*
* @problem: xx
*/
#include <iostream>
#include <algorithm>
#include <utility>
#include <cstring>
#include <string.h>
#include <queue>
#include <set>
#include <map>
#include <math.h>
#include <stdio.h>
#include <vector>
#include <functional>
#include <bitset>
#include <iomanip>
#define ll long long
#define pi acos(-1.0)
#define pb push_back
#define MS0(ar) memset(ar,0,sizeof ar)
#define MS1(ar) memset(ar,-1,sizeof ar)
#define ff first
#define ss second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ind(a) scanf("%d",&a)
#define inf(a) scanf("%lf",&a)
#define inl(a) scanf("%lld",&a)
#define ins(a) scanf("%s",a)
#define pd(a) printf("%d\n",a)
#define pl(a) printf("%lld\n",a);
#define bitcnt(x) __builtin_popcountll(x)
#define mod 1000000007
const int MAX = 1e5 + 10;
using namespace std;
int cnt[27];
int main()
{

    ios_base::sync_with_stdio(0);
    cin.tie(0);
#ifndef ONLINE_JUDGE
    freopen("../input.txt", "r", stdin);
    //freopen("../output.txt","w",stdout);
#endif
    int t,n;
    string s;
    cin >> t;
    while (t--)
    {
        cin >> n;
        cin >> s;
        MS0(cnt);
        for (int i = 0; i < s.length(); i++)
        {
            cnt[s[i] - 'a']++;
        }
        vector<pair<int,pii> > vec;
        for (int i = 0; i < n; i++)
        {
            cin >> s;
            int sum =0;
            int len = s.length();
            for (int j = 0; j < len; j++)
            {
                sum += cnt[s[j] - 'a'];
            }
            vec.pb({sum, {len, i}});
        }
        pair<int, pii> x = vec[0];
        for (int i = 1; i < n; i++)
        {
            if (vec[i].ff > x.ff)
            {
                x = vec[i];
            }
            else if (vec[i].ff == x.ff)
            {
                if (vec[i].ss.ff < x.ss.ff)
                {
                    x = vec[i];
                }
                else if (vec[i].ss.ff == x.ss.ff)
                {
                    if (vec[i].ss.ss < x.ss.ss)
                    {
                        x = vec[i];
                    }
                }
            }
        }
        cout << (x.ss.ss+1) << endl;
    }
    return 0;
}