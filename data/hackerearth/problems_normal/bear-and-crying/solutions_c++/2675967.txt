#include <cstdio>
#include <cstring>

using namespace std;

#define MAXN 100005

typedef unsigned long long LL;

const LL MOD = 1e9 + 7;

LL mpow(int a, int b) {
	if (b == 0) return 1;
	if (b == 1) return a;
	
	if (b & 1)
		return (a * mpow((a * a) % MOD, b / 2)) % MOD;
	else
		return mpow((a * a) % MOD, b / 2);
}

int pref[MAXN], suf[MAXN];
int un[MAXN];
char str[MAXN];

int main() {
    gets(str);
    int n = strlen(str);
    LL ans = 0, val = 0;
    int sem = 0;
    
    for (int i = 0; i < n; i++) {
    	if (str[i] == ';') ans = (ans + val) % MOD, sem++;
    	else {
    		val = (val * 2 + sem) % MOD;
    		
    	}
    }
    
    printf("%llu\n", ans);
    /*
    pref[0] = str[0] == ';' ? 1 : 0;
    for (int i = 1; i < n; i++)
    	pref[i] = pref[i - 1] + (str[i] == ';' ? 1 : 0);
    
    suf[n-1] = str[n-1] == ';' ? 1 : 0;
    for (int i = n-2; i >= 0; i--)
    	suf[i] = suf[i + 1] + (str[i] == ';' ? 1 : 0);
    
    un[0] = str[0] == '_' ? 1 : 0;
    for (int i = 0; i < n; i++)
    	un[i] = un[i - 1] + (str[i] == '_' ? 1 : 0);
    
    LL ans = 0;
    
    for (int i = 1; i < n; i++)
    	for (int j = i; j < n; j++) {
    		ans = (ans % MOD + (pref[i] * (mpow(2, un[j]-un[i-1])-1) * suf[j]) % MOD) % MOD;
    	}
    
    for (int i = 1, j; i < n-1; i = j) {
    	j = i + 1;
    	if (str[i] == '_') {
    		while (j < n-1 && str[j] == '_') j++;
    		ans = (ans % MOD + (pref[i] * (mpow(2, j - i) - 1) * suf[j]) % MOD) % MOD;
    	}
    }
   	
   	for (int i = 0; i < n; i++) {
   		for (int j = i + 1; j < n; j++) {
   			if (str[i] == ';' && str[j] == ';')
   				ans = (ans + ((mpow(2, un[j] - un[i]) - 1) % MOD + MOD) % MOD) % MOD;
   		}
   	}
    
    printf("%llu\n", ans);
    */
    return 0;
}
