#include<bits/stdc++.h>

using namespace std;

const int MAXN = 5e5+3;
const int MOD = 1e9+7;
int ar[MAXN];
vector<int> v;
long long dp[12];
long long power(long long a, long long b) {
	long long ret=1;
	while(b) {
		if(b&1)
			ret=ret*a;
		a=a*a;
		b>>=1;
		a%=MOD;
		ret%=MOD;
	}
	return ret;
}
int main() {
	// freopen("TASK.in","r",stdin);	
	// freopen("TASK.out","w",stdout);
	int n,k,m;
	cin>>n>>k>>m;
	memset(ar,0,sizeof(ar));
	memset(dp,0,sizeof(dp));
	for(int i=1;i<=n;i++) {
		int x;
		scanf("%d",&x);
		ar[x]++;
	}
	for(int i=1;i<=k;i++) {
		if(ar[i])
			v.push_back(ar[i]);
	}
	dp[0]=1;
	for(int i=0;i<(int)v.size();i++) {
		for(int j=m-1;j>=0;j--) {
			dp[j+1]+=(dp[j]*((power(2,v[i])-1+MOD)%MOD))%MOD;
			dp[j+1]%=MOD;
		}
	}
	long long ans=0;
	for(int i=0;i<=m;i++) {
		ans+=dp[i];
		ans%=MOD;
	}
	cout<<ans<<endl;
	return 0;
}