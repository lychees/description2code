#include <bits/stdc++.h>
using namespace std;
const int MAXN = 100005;
int par[MAXN];
vector <int> ans;
vector < pair<int,int> > edges;
int parent(int pos)
{
	if(par[pos] != pos)
		par[pos] = parent(par[pos]);
	return par[pos];
}
int main()
{
	// freopen("input.txt", "r", stdin);
	ios_base::sync_with_stdio(0);
	int n,m;
	cin>>n>>m;
	edges.resize(m);
	for (int i = 0; i < m; ++i)
	{
		cin>>edges[i].first>>edges[i].second;
	}
	for (int i = 1; i <= n; ++i)
	{
		par[i] = i;
	}
	for (int i = m-1; i >= 0; --i)
	{
		int p1 = parent(edges[i].first);
		int p2 = parent(edges[i].second);
		if(p1 == p2)
			ans.push_back(i+1);
		else
			par[p1] = p2;
	}
	reverse(ans.begin(), ans.end());
	cout<<ans.size()<<"\n";
	for (int i = 0; i < ans.size(); ++i)
	{
		cout<<ans[i]<<"\n";
	}
	return 0;
}