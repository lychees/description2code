#include <iostream>
#define lli long long int
using namespace std;

void swap(lli *a, lli *b) {
	lli temp = *a;
	*a = *b;
	*b = temp;
}

void heapify(lli arr[], long root, long n) {
	long left, right, high;
	while((2*root)+1 <= n) {
		left = (2*root)+1;
		right = left + 1;
		high = root;
		if(arr[left] > arr[high]) {
			high = left;
		}
		
		if(right <= n && arr[right] > arr[high]) {
			high = right;
		}
		
		if(high == root)
			return;
		swap(&arr[high], &arr[root]);
		root = high;
	}
} 

void quickSort(lli arr[], long n) {
	for(long i=(n-1)/2; i>=0; i--) {
		heapify(arr, i, n);
	}
	for(long i=n; i>0; i--) {
		swap(&arr[0], &arr[i]);
		heapify(arr, 0, i-1);
	}
}

void sort(lli arr[], long length) {
	quickSort(arr, length-1);
}

lli packets[100000];
bool sequence[100000];
int main()
{
 	int t, n, i, j, k, cur_pack;
 	cin>>t;
 	while(t--) {
 		cin>>n;
 		for(i=0; i<n; i++) {
 			cin>>packets[i];
 			sequence[i] = false;
 		}
 		sort(packets, n);
 		cur_pack = 0;
 		for(i=0; i<n; i++) {
 			k=i;
 			if(!sequence[i]) {
 				cur_pack++;
 				for(j=i; j<n; j++) {
 					if(!sequence[j] && packets[j] > packets[k]) {
 						sequence[j] = true;
 						k=j;
 					}
 				}
 			}
 		}
 		cout<<cur_pack<<endl;
 	}
    return 0;
}
