#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

#define MOD 1000000007

//[n*p] * [p*m] => [n*m]
vector<vector<long long> > multmat(vector<vector<long long> > &A, vector<vector<long long> > &B, int n, int p, int m){
	vector<vector<long long> > C(n, vector<long long>(m,0));
	for(int i=0; i<n; i++){
		for(int k=0; k<p; k++){
			for(int j=0; j<m; j++){
				C[i][j] += A[i][k] * B[k][j];
				C[i][j] %= MOD;
			}
		}
	}
	return C;
}

//A[n*n]^k 
vector<vector<long long> > mat_pow(vector<vector<long long> > A, long long k){
	int n = A.size();
	vector<vector<long long> > ret(n, vector<long long>(n, 0) );
	for(int i=0; i<n; i++){
		ret[i][i] = 1;
	}
	while(k>0LL){
		if(k&1LL) ret = multmat(A,ret, n,n,n);
		A = multmat(A,A, n,n,n);
		k>>=1LL;
	}
	return ret;
}

int main(){
	int T;
	cin >> T;

	vector<vector<long long>> A(1<<4, vector<long long>(1<<4, 0));
	for(int i=0; i<(1<<4); i++){
		A[i][i] = 6;
		for(int j=0; j<4; j++){
			A[i][i^(1<<j)] = 1;
		}
	}


	vector<vector<long long>> B(1<<4, vector<long long>(1, 0));
	B[0][0] = 1;

	while(T--){
		long long N;
		int a,b,c,d;
		cin >> N >> a >> b >> c >> d;
		int S = a | (b<<1) | (c<<2) | (d<<3);
		
		auto A_ = A;
		A_ = mat_pow(A_, N);
		auto B_ = B;

		auto ans = multmat(A_,B_, 1<<4, 1<<4, 1);
		

		cout << ans[S][0] << endl;
	}
	return 0;
}