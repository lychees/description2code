#include <iostream>
#include <algorithm>
using namespace std;

#define LL long long

#define no puts("unlucky")

int l;

LL dp[4][20];
string str;
LL mx = 1000000;

LL go(int i, int num) {
	if (i==l) return -1;
	if (dp[num][i] != -2) return dp[num][i];
	
	if (num==3) {
		if (str[i]==0) {
			if (i==l-1) return dp[num][i] = 0;
			else return dp[num][i] = -1;
		}
		
		LL n = str[i];
		for (int j = i+1; j<l; j++) {
			n = n*10 + str[j];
			if (n>mx) return dp[num][i] = -1;
		}
		
		return dp[num][i] = n;
	}
	
	if (str[i]==0) {
		return dp[num][i] = go(i+1, num+1);
	}
	
	LL n = str[i];
	LL ms = -1;
	
	LL nxt = go(i + 1, num+1);
		if (nxt!=-1) {
			nxt += n;
			if (nxt>ms) ms = nxt;
		}
	
	for (int j=i+1; j<l+num-3; j++) {
		n = n*10 + str[j];
		if (n>mx) break;
	//	cout << n << ' ';
		
		LL nxt = go(j + 1, num+1);
		if (nxt!=-1) {
			nxt += n;
			if (nxt>ms) ms = nxt;
		}
	}
	
	return dp[num][i] = ms;
}

int main()
{
	mx*=1000000;
	int n;
	cin >> n;
	
	while (n--) {
		cin >> str;
		l = str.size();
		
		for (int i=0; i<l; i++) {
			str[i]-='0';
			dp[0][i] = dp[1][i] = dp[2][i] = dp[3][i] = -2;
		}
		
		LL ans = go(0, 0);
		
		if (ans == -1) no;
		else cout << ans << endl;
	}
	
    return 0;
}
