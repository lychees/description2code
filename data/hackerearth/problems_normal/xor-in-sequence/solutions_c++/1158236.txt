#include <iostream>
#include <algorithm>
#include <stack>
#include <cstring>
using namespace std;

unsigned int s[100500], n;
bool tbl[100500][32];

struct Trie 
{
    int nxt[100500 * 20][2];    
    int cnt[100500 * 20];
    int lastfree;

    inline void add_word(int n)
    {
        int v = 0;
        for(int i = 31; i >= 0; i--) {
            int idx = ((1 << i) & n) != 0;
            if(!nxt[v][idx]) {
                nxt[v][idx] = ++lastfree;
                nxt[lastfree][0] = nxt[lastfree][1] = 0;
                cnt[lastfree] = 0;
            }
            v = nxt[v][idx];
        }
        cnt[v]++;
    }

    void clear()
    {
        nxt[0][0] = nxt[0][1] = 0;
        cnt[0] = 0;
        lastfree = 0;
    }

} tr;

inline long long f(int x)
{
    for(int i = 0; i <= tr.lastfree; i++)
        tr.cnt[i] = 0;

    long long ret = 0;
    for(int i = 1; i <= n; i++) {
        int v = 0;
        unsigned int so_far = 0;
        for(int j = 31; j >= 0; j--) {
            bool idx = tbl[i][j];

            unsigned int got_one = so_far | (1 << j);
            if(got_one <= x) {
                ret += (tr.nxt[v][idx] ? tr.cnt[tr.nxt[v][idx]]: 0);
                v = tr.nxt[v][!idx];
                so_far |= 1 << j;
            } else {
                v = tr.nxt[v][idx];
            }

            if(v == 0)
                break;
        }
        if(v != 0)
            ret += tr.cnt[v];

        ret += s[i] <= x;

        v = 0;
        for(int j = 31; j >= 0; j--) {
            bool idx = tbl[i][j];
            tr.cnt[v]++;
            v = tr.nxt[v][idx];
        }
        tr.cnt[v]++;
    }

    return ret;
}

void solve()
{
    tr.clear();
    int x;
    cin >> n;
    for(int i = 1; i <= n; i++) {
        cin >> x;
        s[i] = s[i - 1] ^ x;
        tr.add_word(s[i]);
        for(int j = 31; j >= 0; j--)
            tbl[i][j] = (1 << j) & s[i];
    }

    int q;
    cin >> q;
    for(int i = 0; i < q; i++) {
        int L, R;
        cin >> L >> R;
        cout << (f(R) - (L == 0 ? 0 : f(L - 1))) << "\n";
    }
}

int main()
{
    cin.sync_with_stdio(false);
    int t;
    cin >> t;
    for(int i = 0; i < t; i++)
        solve();
    return 0;
}
