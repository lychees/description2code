#include<bits/stdc++.h>
#define pn() printf("\n")
#define si(x) scanf("%d",&x)
#define pi(x) printf("%d\n",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld\n",x)
#define sc(x) scanf("%c",&x)
#define pc(x) printf("%c",x)
#define sf(x) scanf("%f",&x)
#define pf(x) printf("%f\n",x)
#define sd(x) scanf("%lf",&x)
#define pd(x) printf("%.7lf\n",x)
#define sld(x) scanf("%Lf",&x)
#define pld(x) printf("%.9Lf\n",x)
#define MOD 1000000007
#define ll long long
using namespace std;
bool isprime(int x){
    if(x==2||x==3||x==5||x==7){
        return true;
    }
    else{
        return false;
    }
}
ll sol[20];
bool valid(ll x){
    while(x){
        if(isprime(x%10)){
            return true;
        }
        x/=10;
    }
    return false;
}
int main(void){
    sol[0]=1;
    for(int i=1;i<=18;i++){
        sol[i]=sol[i-1]*6;
    }
    int t;
    si(t);
    while(t--){
        ll n;
        sll(n);
        ll tt=n;
        if(n==0){
            cout<<"0\n";
            continue;
        }
        ll total=n;
        ll sub=0;
        ///find numbers with no prime digits less than or equal to n
        list<int> digits;
        ll save=n;
        ll placeval=1;
        int dd=0;
        while(save){
            int last=save%10;
            digits.push_front(last);
            save/=10;
            dd++;
        }
        for(int i=1;i<dd;i++){
            placeval*=10;
        }
        dd--;
        for(list<int>::iterator it=digits.begin();it!=digits.end();it++){
            int cur=*it;
            for(int i=0;i<cur;i++){
                if(!isprime(i)){
                    sub+=sol[dd];
                }
            }
            if(isprime(cur)){
                break;
            }
            dd--;
        }
        ll finalans=total-sub;
        //finalans++;
        if(valid(tt)){
            finalans++;
        }
        printf("%lld\n",finalans);
    }
    return 0;
}
