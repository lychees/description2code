#include <stdio.h>
#include <malloc.h>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <math.h>
#include <string>
#include <time.h>
#include <iostream>
#include <algorithm>
#define ll long long int
#define ld double
#define cinf(a) scanf("%lf",&a)
#define coutf(a) printf("%lf\n",a)
#define cins(a) scanf("%s",a) 
#define couts(a) printf("%s",a)  
#define cin(a) scanf("%lld",&a) 
#define cout(a) printf("%lld\n",a)
#define coutc(a) printf("%c\n",a)
#define cinc(a) scanf("%c",&a) 
#define debug couts("chu") ;
#define next_prm std::next_permutation
#define M 1000000007 
#define MAX 999999999999999999
#define pb(a) push_back(a) 
#define mp(a,b) make_pair (a,b)
#define lb lower_bound
#define ub upper_bound
using namespace std ;
//****************************************************************************************************************************************************************//
//*****************************************************************-BY YOUR_DAD-**********************************************************************************//
//*****************************************************************-PROGRAM STARTS FROM HERE-*********************************************************************//
//****************************************************************************************************************************************************************//
ll n,monks[200000],k ;
ll predicate (ll d) {
	ll i,monk=k,j,dist ;
	for (i=0;i<n&&monk>0;monk--)
	{  dist=2*d+monks[i] ;
	   for (;i<n&&monks[i]<=dist;i++){}     
	}
	if (monk==0&&i<n)
	  return 0 ;
	else
	  return 1 ;  
}
ll upper_b (ll l,ll u) {
	ll m=(u+l)/2,aux ;
	aux=predicate(m) ;
	if (u>l)
	  return u ;
	else if (aux==1)
	  return upper_b(m-1,u) ;
	else
	  return upper_b(l,m+1) ;      
}
int main () {
	ll i ;
	cin(n) ;
	cin(k) ;
	for (i=0;i<n;i++)
	  cin(monks[i]) ;
	sort(monks,monks+n) ;  
	cout(upper_b(10000001,1)) ;
	return 0 ; 
}