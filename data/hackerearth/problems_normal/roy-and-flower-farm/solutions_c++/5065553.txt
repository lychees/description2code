#include<iostream>
using namespace std;
int n, p;
int wt[105], val[105];
int max(int a, int b)
{
	return (a > b) ? a : b;
}

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		cin >> n >> p;
		for (int i = 0; i < n; i++)
		{
			cin >> val[i] >> wt[i];
		}
		int dp[n+1][p+1];
		for (int i = 0; i <= n; i++)
		{
			for (int j = 0; j <= p; j++)
			{
				if (i==0 || j==0)
				{
					dp[i][j] = 0;
				}
				else if (wt[i - 1] <= j)
				{
					dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - wt[i - 1]] + val[i - 1]);
					
				}
				else
				{
					dp[i][j] = dp[i - 1][j];
				}
			}
		}
		int ans=p;
		int maxx = 0;
		for (int i = 0; i <=p; i++)
		{
			if (dp[n][i]+(p-i)>maxx)
			{
				maxx = dp[n][i] + (p - i);
					ans = i;
			}
		}
		cout << ans << " " << maxx << endl;
	}
}