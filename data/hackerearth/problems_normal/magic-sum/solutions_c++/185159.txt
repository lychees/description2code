#include<iostream>
#include<cstring>
using namespace std;

int node[ 512 ] ;
long long  dis[512][512]  ;
int N ;

void cal( int i , int j ){
	if( dis[i][j] != -99999999 )
		return ;
	else if( i == j ){
	     dis[i][j] = node[i] ;
	}
	
	else if( i/2 == j/2 ){
	     dis[i][j] = node[i]+node[j]+node[i/2] ;
	}
	else {
	
	     cal( i/2 , j/2 );
		 dis[i][j] = dis[i/2][j/2] + node[i]+node[j] ;
	}
}

void init_dis(){
	for( int i = 1 ; i <= N ; i ++ ){
		for( int j = 1 ; j <= N ; j ++ ){
		    dis[i][j] = -99999999 ;
		}
	}
}

void solve(  ){
    init_dis() ;
	int max = -99999999 ;	
	for( int i = (N+1)/2 ; i <= N ; i ++  ){
		for( int j = i ; j <= N ; j++  ){	   
		   cal(i , j ) ;		 
		   if( dis[i][j] > max )
			   max = dis[i][j] ;
		}
	}
	cout<<max<<endl ;

}

int main(){
       
	    int t ; 
		cin>>t ;
		while(t--)
		{		    
			 cin>>N ;
			 for( int j = 1 ; j <= N ; j ++ ){
			     cin>>node[j] ;
			 }
			 solve() ;

		}
	return 0;
}