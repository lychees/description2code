#include <iostream>
#include <sstream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <cstring>
#include <climits>
using namespace std;
typedef pair<int,int> pi;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
int c, a1, a2;


    	 int findMin(vi b, int a, int z){

            int x1[4] = { b[0], b[a-1], b[a-1], b[0] };
            int y1[4] = { b[a-1], b[0], b[0], b[a-1] };
            int x2[4] = { b[z-1], b[z-1], b[a], b[a] };
            int y2[4] = { b[a], b[a], b[z-1], b[z-1] };
            int d1 = 0, d2 = 0;
            d1 = b[a-1]-b[0]; d2 = b[z-1]-b[a];
            int minv = 1000000;

            for(int i = 0; i < 4; i++){
                minv = min(minv,  min( abs(a1-x1[i]) + abs(a2-x2[i]), abs(a1-x2[i]) + abs(a2-x1[i]) ) + d1 + d2 + abs(c-y1[i]) + abs(c-y2[i]));
            }
            return minv;
        }

        int minDiff(vector <int> h)
        {
            c = h[0], a1 = h[1], a2 = h[2];
            h.erase(h.begin(), h.begin()+3);
            sort(h.begin(), h.end());
            int k = h.size();
            if(k%2 == 0) return findMin(h, k/2, k);
            return min(findMin(h, k/2, k), findMin(h, k/2+1, k));
        }

int main(){
	vector<int> p;
	int x;
	cin>>x;
	p.push_back(x);
	cin>>x;
	p.push_back(x);
	cin>>x;
	p.push_back(x);
	int t;
	cin>>t;
	
	while(t--){
		cin>>x;
		p.push_back(x);
	}
	cout<<minDiff(p)<<endl;
	
}
