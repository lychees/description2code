#include <iostream>
#include <vector>
#include <queue>

using namespace std;

auto main()->int
{
    int n;
    cin>>n;
    vector<vector<int>>mat(n+2,vector<int>(n+2));
    vector<vector<int>>visited(n+2,vector<int>(n+2));
    for(auto i=1;i<=n;i++)
    {
        for(auto j=1;j<=n;j++)
        {
            cin>>mat[i][j];
        }
    }
    int ansriders = 0;
    for(auto i=1;i<=n;i++)
    {
        for(auto j=1;j<=n;j++)
        {
            int riders = 0;
            if(!visited[i][j] && mat[i][j])
            {
                riders = 1;
                queue<pair<int,int>>q;
                q.push(make_pair(i, j));
                while(!q.empty())
                {
                    int x = q.front().first;
                    int y = q.front().second;
                    q.pop();
                    visited[x][y] = 1;
                    if(!visited[x-1][y] && mat[x-1][y])
                    {
                        q.push(make_pair(x-1, y));
                        visited[x-1][y] = 1;
                        riders++;
                    }
                    if(!visited[x+1][y] && mat[x+1][y])
                    {
                        q.push(make_pair(x+1, y));
                        visited[x+1][y] = 1;
                        riders++;
                    }
                    if(!visited[x][y-1] && mat[x][y-1])
                    {
                        q.push(make_pair(x, y-1));
                        visited[x][y-1] = 1;
                        riders++;
                    }
                    if(!visited[x][y+1] && mat[x][y+1])
                    {
                        q.push(make_pair(x, y+1));
                        visited[x][y+1] = 1;
                        riders++;
                    }
                }
                ansriders = max(ansriders,riders);
            }
        }
    }
    cout<<ansriders;
}