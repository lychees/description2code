#include <iostream>
#include <vector>
#include <cstdio>
#include <climits>
#include <algorithm>
using namespace std;


int a[500];
vector <int> primes;
int notprime[1000101];
int primeindex[1000101];
vector < vector <int> > dp(501,vector <int> (501,INT_MAX));


int solve(int i,int j)
{
    int ajindex,aiindex,tmpaj,tmpai;
    if(notprime[a[j]])
    {
        ajindex = (upper_bound(primes.begin(),primes.end(),a[j]) - primes.begin());
        tmpaj = primes[ajindex];
    }
    else
    {
        tmpaj = a[j];
        ajindex = primeindex[tmpaj];
    }


    if(notprime[a[i]])
    {
        aiindex = (upper_bound(primes.begin(),primes.end(),a[i]) - primes.begin());
        tmpai = primes[aiindex];
    }
    else
    {
        tmpai = a[i];
        aiindex = primeindex[tmpai];
    }
    if(tmpaj < tmpai)
    {
        tmpaj = primes[aiindex+1];
        ajindex = aiindex+1;
    }
    if(tmpai == tmpaj)
    {
        tmpaj = primes[aiindex+1];
        ajindex = aiindex+1;
    }
    if(tmpai < tmpaj)
    {
        tmpai = primes[ajindex-1];
        aiindex = ajindex-1;
    }
    return tmpaj - a[j] + tmpai - a[i] + 1;
}

int main()
{
    notprime[1] = 1;
	for(int i=2;i<=1000100;i++)
	{
		if(!notprime[i])
		{
			primes.push_back(i);
			primeindex[i] = primes.size()-1;
			for(int j=2*i;j<=1000100;j+=i)
				notprime[j] = true;
		}
	}
//	cout<<primes[primes.size()-2]<<" "<<primes[primes.size()-1]<<endl;

	int n;
    scanf("%d",&n);



    for(int i=0;i<n;i++)
    {
    	scanf("%d",&a[i]);
    }

    for(int i = 0, j = 1 ; i < n && j < n; i++,j++)
    {
        dp[i][j] = solve(i,j);
    }

    for(int k = 3 ; k < n ; k+=2)
    {
    	for(int i = 0, j = k ; i < n && j < n; i++,j++)
    	{
            for(int left = i+1; left < j ; left+=2)
            {
                dp[i][j] = min(dp[i][j], dp[i][left] + dp[left+1][j]);
            }
            dp[i][j] = min(dp[i][j],dp[i+1][j-1] + solve(i,j));
    	}
    }

//    for(int i=0;i<n;i++)
//    {
//        for(int j=0;j<n;j++)
//        {
//            if(dp[i][j]==INT_MAX)
//                cout<<"0 ";
//            else
//                cout<<dp[i][j]<<" ";
//        }
//        cout<<endl;
//    }

    printf("%d",dp[0][n-1]);
    return 0;
}
