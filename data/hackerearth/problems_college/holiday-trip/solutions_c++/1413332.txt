#include<stdio.h>
#include<vector>
#include<cstring>
using namespace std;
inline int inp()
{
int n=0,s=1;
char p= getchar();
if(p=='-')
s=-1;
while((p<'0'||p>'9')&&p!=EOF&&p!='-')
p=getchar();
if(p=='-')
s=-1,p=getchar();
while(p>='0'&&p<='9')
{
n = (n<< 3) + (n<< 1) + (p - '0');
p=getchar();
}
return n*s;
}
vector<int>arr[10005];
int n,a,b,j,m,color[10005],co1,depth[10005],ma=0,temp;
void dfs(int node){
color[node]=2;
for(int j1=0;j1<arr[node].size();++j1){
if(color[arr[node][j1]]==0){
depth[arr[node][j1]]=depth[node]+1;
if(depth[arr[node][j1]]>ma){ma=depth[arr[node][j1]];temp=arr[node][j1];}
dfs(arr[node][j1]);
}
}
color[node]=3;
}
int main(){
int t;
t=inp();
while(t--){
ma = 0;
temp =0;
co1 =0;
memset(depth,0,sizeof(depth));
memset(color,0,sizeof(color));
int i1;
co1=0;j=0;
//scanf("%d",&n);
n =inp();
while(j<n-1){
//scanf("%d %d",&a,&b);
a = inp();
b = inp();
arr[a].push_back(b);
arr[b].push_back(a);
j++;
}
for(i1=0;i1<n;++i1){
if(color[i1]==0){
dfs(i1);
}
}
for(i1=0;i1<n;++i1){
color[i1]=0;
}
int res=ma;
dfs(temp);
printf("%d\n",ma-res+1);
for(i1=0;i1<10005;i1++)
arr[i1].clear();
}
return 0;}

