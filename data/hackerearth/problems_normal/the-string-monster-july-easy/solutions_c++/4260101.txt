
#include<bits/stdc++.h>

using namespace std;


int t;

char buf[902];

int cnt[32][26];

vector<int> c(26,0);
int need[26];

vector<vector<int> > vv;


int main(){
	cin >> t;
	while (t--){
		int n;
		scanf("%d", &n);
		for (int i = 0; i < n; i++){
			scanf("%s", buf);
			memset(cnt[i], 0, sizeof(cnt[i]));
			for (int j = 0; j < strlen(buf); j++){
				cnt[i][buf[j] - 'a']++;
			}
		}
		scanf("%s", buf);
		memset(need, 0, sizeof(need));
		for (int i = 0; i < strlen(buf); i++){
			need[buf[i] - 'a']++;
		}
		vv.clear();
		int v = n / 2;
		for (int i = 0; i < (1 << v); i++){
			c.assign(26, 0);
			for (int k = 0; k < v; k++){
				if ((i >> k) & 1){
					for (int jj = 0; jj < 26; jj++){
						c[jj]+=cnt[k][jj];
					}
				}
			}
			vv.emplace_back(c);
		}
		sort(vv.begin(), vv.end());
		int rest = n - v;
		bool ok = false;
		for (int i = 0; i < (1 << rest); i++){
			c.assign(26, 0);
			for (int k = 0; k < rest; k++){
				if ((i >> k) & 1){
					for (int jj = 0; jj < 26; jj++){
						c[jj] += cnt[v+k][jj];
					}
				}
			}
			bool ng = false;
			for (int k = 0; k < 26; k++){
				if (need[k]<c[k]){
					ng = true;
					break;
				}
				if (need[k] >= c[k]){
					c[k] = need[k] - c[k];
				}
			}
			if (ng==false&&binary_search(vv.begin(), vv.end(), c)){
				ok = true;
			}
		}
		if (ok)puts("YES");
		else puts("NO");
	}
	return 0;
}