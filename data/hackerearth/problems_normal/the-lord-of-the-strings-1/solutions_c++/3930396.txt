//DEEPAK  UPRETI         

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mallo(pointer, type, times) pointer=(type*)malloc(sizeof(type)*(times));
#define callo(pointer, type, times) pointer=(type*)calloc(times,sizeof(type));
#define NO_CHARS 256
#define rt return
#define ARRAY_SI
#define ZE(A) sizeof(A)/sizeof(A[0])
#define MSET(m,v) memset(m,v,sizeof(m))

#define rt return
#define ll long long int
#define co cout<<
#define ci cin>>
#define all(c) c.begin(), c.end()
#define si(i) scanf("%d",&(i))
#define sp    printf(" ");
#define nl    printf("\n");
#define rep(a,n) for(i=a;i<n;i++)
#define rep2(a,n) for(j=a;j<n;j++)
#define rrep(a,n) for(k=a;k>=0;k--)
#define rrep2(a,n) for(l=a;l>=0;l++)
#define repi(i,j,N) for(int (i)=(j);(i)<(N);(i)++)
#define repg(i,j,N) for((i)=(j);(i)<(N);(i)++)
#define vi vector<int>  
#define ii pair<int, int> 
#define vii vector<ii> 
#define se set<int> 
#define msi map<string, int> 
#define sz(a) int((a).size()) 
#define pb push_back
#define mp make_pair
#define sti stack<int> 
#define  itst(a)   stack<int>::iterator a
#define  itv(a)   vector<int>::iterator a
#define  itli(a)   list<int>::iterator a
#define  itq(a)   queue<int>::iterator a	
#define  repit(a,b) for(a=b.begin();a!=b.end();a++)
#define  fast   ios_base::sync_with_stdio(false); cin.tie(NULL);
#define sizar(a) sizeof(a)/sizeof(a[0]);
#define mallo2(pointer, type, row,col) pointer=(type**)malloc(sizeof(type*)*(row)); for(int h=0;h<row;h++) {pointer[h]=(type*)malloc(sizeof(type)*(col));}



int main()
{
	int t;
	cin >>t;
	while(t--)
	{
		string str;
		int i ,n;
		vector <bool> vec(26,false);
		cin >>str;
		n=str.size();
		rep(0,n)
		{
			vec[str[i]-'a']=true;
		}

		rep(0,n)
		{
			if(vec[str[i]-'a']==true)
			{
				cout << str[i];
				vec[str[i]-'a']=false;
			}
		}

		nl





	}

	rt 0;
}