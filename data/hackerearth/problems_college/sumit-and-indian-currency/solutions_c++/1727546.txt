/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define ff first
#define ss second
#define mkp make_pair
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;

#define get getchar_unlocked
/*inline int scan()
{
    int n=0,s=1;
    char p=get();
    if(p=='-')  s=-1;
    while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
    if(p=='-') s=-1,p=get();
    while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=get(); }
    return n*s;
}

void print(int X)
{
  if(X<0) { putchar_unlocked('-');  X=-X;  }
  int Len=0,Data[10];
  while(X) { Data[Len++]=X%10; X/=10; }
  if(!Len) Data[Len++]=0;
  while(Len--) putchar_unlocked(Data[Len]+48);
}*/

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}

char str[10005];

void solve()
{
	vector<char>v;
	scanf("%s", str);
	int l = strlen(str);
	if(l == 1) {
		printf("%c\n", str[0]);
		return;
	}
	int count = 0;
	int flag = 0;
	for(int i = l - 1; i >= 0; i--) {
		v.push_back(str[i]);
		count++;
		if(count == 3 && flag == 0) {
			v.pb(',');
			flag = 1;
			count = 0;
		}
		if(count == 2 && flag == 1) {
			v.pb(',');
			count = 0;
		}
	}
	reverse(v.begin(), v.end());
	int size = v.size();
	int cnt = 0;
	if(l & 1) cnt++;
	for(int i = cnt; i < size; i++) {
		printf("%c", v[i]);
	}	
	pn;
}
int main()
{
	int t;
	scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}

