#include <stdio.h>
int mod = 1000000007;
const int maxn = 200005;

long long fact[maxn], ifact[maxn];
int cnt[maxn], turn[maxn];

long long ppow(long long a, long long b) {
	if(!b) return 1;
	long long tmp = ppow(a, b/2);
	tmp = tmp * tmp % mod;
	if(b & 1) tmp = tmp * a % mod;
	return tmp;
}

void precompute() {
	int i;
	fact[0] = 1; ifact[0] = 1;
	for(i = 1; i < maxn; i++) {
		fact[i] = fact[i-1] * i % mod;
		ifact[i] = ppow(fact[i], mod-2);
	}
}

long long go(int n, int r) {
	long long ans = fact[n] * ifact[r] % mod;
	ans = ans * ifact[n-r] % mod;
	return ans;
}

int main()
{
    int n,i,m,j,x;
    long long ans = 1;
    precompute();
    scanf("%d",&n);
    int c = 1;
    for(i = 1; i <= n; i++) {
    	scanf("%d",&m);
    	ans = ans * go(c + m  - 1, c - 1);
    	for(j = 1; j <= m; j++) {
    		scanf("%d",&x);
    		if(turn[x] != i) cnt[x] = 0;
    		cnt[x]++;
    		turn[x] = i;
    		ans = ans * cnt[x] % mod;
    	}
    	c += m;
    }
    printf("%lld\n",ans);
    return 0;
}
