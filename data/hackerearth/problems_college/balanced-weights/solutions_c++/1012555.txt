#include<cstdio>
#include<algorithm>
using namespace std;
int gcd(int a,int b)//Euclidean GCD Algorithm
{
	if(b==0)
		return a;
	else return gcd(b,a%b);
}
//Approach: Clearly, the sum of weights is minimum if each of them can be reduced to the minimum of the input array and the only way to do this is to find the gcd of the input array.

int main(void)
{
	int testcases;
	scanf("%d",&testcases);
	while(testcases--)
	{
		long long int i,n,arraygcd,a,b;
		scanf("%lld",&n);
		scanf("%lld",&a);//scan the first item
		arraygcd=a;
		for(i=1;i<n;i++)
		{
			scanf("%lld",&b);
			arraygcd=gcd(arraygcd,b);
		}
		long long int minimum=arraygcd*n;//After reducing each each item to gcd of entire array(a,say), the array becomes like [a,a,a,a,..]
		printf("%lld\n",minimum);
	}
	return 0;
}
