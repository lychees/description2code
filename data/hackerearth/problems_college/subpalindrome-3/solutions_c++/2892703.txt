#include<bits/stdc++.h>
#define CIN(n) scanf("%d",&n)
#define CINL(n) cin>>n
#define CINF(n) scanf("%f",&n)
#define FOR(i,j,n) for(i=j;i<=n;i++)
#define FORR(i,j,n) for(i=j;i>=n;i--)
#define SORT(n) std::sort(n.begin(),n.end())
#define FILL(n,a) std::fill(n.begin(),n.end(),a)
#define ALL(n) n.begin(),n.end()
#define rsz resize
#define pb push_back
#define MAXINT std::numeric_limits<int>::max()
#define MININT std::numeric_limits<int>::min()
#define getchar gc
#define putchar pc
#define iOS std::ios_base::sync_with_stdio(false)
#define endl "\n"
#define debug(x) cout << #x << " = " << x << endl
using namespace std;
typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<bool> VB;
typedef vector<vector<int> > VVI;
typedef vector<vector<ll> > VVL;
typedef pair<int,int> pii;

//Template ends here

//Code begins
std::vector< std::vector<int> > dp;
int main()
{
	iOS;
	int t;
	cin>>t;
	string s;
	while(t--)
	{
		cin>>s;
		int n = s.size();
		dp.resize(n);
		int i,j,k;
		FOR(i, 0, n-1)
			dp[i].resize(n);
		FOR(i, 0, n-1)
			FILL(dp[i], 0);
		dp[0][0] = 1;
		FOR(j, 1, n-1)
		{
			FOR(i, 0, j)
			{
				if(i == j)
				{
					dp[i][j] = 1;
					continue;
				}
				dp[i][j] = dp[i][j-1];
				FOR(k, i, j)
				{
					if(s[k] == s[j])
					{
						if(k < n-1)
							dp[i][j] += dp[k+1][j-1] + 1;
						else
							dp[i][j] += 1;
					}
				}
			}
		}
		cout<<dp[0][n-1]<<endl;
		/*
		cout<<"dp:\n";
		FOR(i, 0, n-1)
		{
			FOR(j, 0, n-1)
			{
				cout<<dp[i][j]<<" ";
			}
			cout<<endl;
		}
		*/
	}
	return 0;
}
