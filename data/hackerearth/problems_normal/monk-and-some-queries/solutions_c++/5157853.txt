#include <iostream>
#include <set>
int main()
{
	int64_t queries;
	std::cin>>queries;
	std::multiset<int32_t> myset;
    for(int64_t i=0;i<queries;i++)
	{
		int type;
		std::cin>>type;
		if(type==1)
		{
            int64_t temp;
			std::cin>>temp;
			myset.insert(temp);
        }
		else if(type==2)
        {
            int64_t temp;
			std::cin>>temp;
            int x=myset.count(temp);
            if(x==0) std::cout<<"-1\n";
            else
            {
                std::multiset<int>::iterator it;
                it=myset.find (temp);
                myset.erase(it);
            }
        }
        else if(type==3)
        {
            if(!myset.empty())
            {std::multiset<int>::iterator it;
            it=myset.end(); --it;
            std::cout << *it<<"\n";}
            else std::cout<<"-1\n";
        }
        else if(type==4)
        {    if(!myset.empty())
            {std::multiset<int>::iterator it=myset.begin();
            std::cout << *it<<"\n";}
            else std::cout<<"-1\n";
        }
        else if(type==5)
        {
            for(std::multiset<int32_t> ::iterator it=myset.begin();it!=myset.end();++it) std::cout<<*it<<" ";
            std::cout<<"\n";
        }
    }
    return 0;



}
