#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>

using namespace std;

#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define S(x) scanf("%d",&x)
#define all(c) (c).begin(),(c).end() 
#define sz(c) int((c).size())
#define pb push_back
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define rep(i,x,y) for(int i = x; i < y; i++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long int LL;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;

const int MAX = 1001;

int arr[MAX], n;

int drum(int x)
{
	int last = arr[0], total = 1;
	rep(i,1,n){
		if(arr[i] - last >= x){
			last = arr[i];
			total++;
		}
	}
	return total;
}

int search(int lo, int hi, int val)
{
	int m;
	while(lo < hi){
		m = lo + ((hi-lo + 1) >> 1);
		if(drum(m) >= val) lo = m;
		else hi = m - 1; 
	}
	return lo;
}
int main()
{
	int t;
	S(t);
	while(t--){
		int m;
		S(n); S(m);
		rep(i,0,n) S(arr[i]);
		int ans = search(0,arr[n-1]-arr[0],m);
		printf("%d\n",ans);
	}
	return 0;
}