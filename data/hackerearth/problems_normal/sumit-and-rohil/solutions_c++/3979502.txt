#include <iostream>
#include <iomanip>
#include <map>
#include<string>
#include<cstring>
#include<cstdio>
#include<algorithm>
#include<set>
using namespace std;

int main()
{
	int N,i,j,cnt;
	cin >> N;
	char s[101][107];
	char first[107];
	char last[107];
	int index[101];
	//int len=strlen(s);
	map <int, int> groups;
	int k=0;
	for(i=0;i<N;i++)
		{
			if(i==0)
				{	cin >> s[i];
					int n=strlen(s[i]);
					groups[i]++;
					first[i]=s[i][0];
					last[i]=s[i][n-1];
					index[i]=i;
					//cout <<i <<" "<<first[i] <<"\n";
					//cout <<i << " "<< last[i] <<"\n";
				}
			else
				{	cnt=0;
					cin >> s[i];
					int len=strlen(s[i]);
					for(j=0;j<i;j++)
						{
							if(first[j]==s[i][0])
								{
									if(last[j]==s[i][len-1])
										{
											groups[j]++;
											cnt=1;
											index[i]=j;
											//cout << s[i] << "\n";
											break;
										}
								}
						}
					if(cnt==0)
						{	//cout << s[i] << "\n";
							first[i]=s[i][0];
							last[i]=s[i][len-1];
							index[i]=i;
							//cout <<i <<" "<<first[i] <<"\n";
							//cout <<i << " "<< last[i] <<"\n";
							groups[i]++;
						}
				}
		}
	//for(i=0;i<N;i++)
	//	cout << index[i] <<"\t";
	
	//cout <<endl;
	string fstrng;
	map <int, int>::iterator it;
	set<std::string> st;
	int grp=0;
	for (it = groups.begin(); it != groups.end(); ++it)
		{
			for(int in=0;in<N;in++)
				{
					if(index[in]==it->first)
						{
							size_t size1=sizeof(s[in][0])/sizeof(s[in]);
							//sort(s[in].begin(),s[in].end());
							fstrng=s[in];
							
							sort(fstrng.begin(),fstrng.end());
							//cout << fstrng << "\n";
							st.insert(fstrng);	
						}
									
							
				}
	while (!st.empty()) {
   		 //std::cout << ' ' << *st.begin();
   		 st.erase(st.begin());
  		grp++;}}
	printf("%d\n",grp);
	return 0;
}
