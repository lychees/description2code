#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
ll mod=1e9+7;
ll fastPow(ll a,ll b,ll mod)
{
	if(b==0)
	return 1;
	if(b==1)
	return a;
	ll half=fastPow(a,b/2,mod);
	if(b%2==0)
	return ( half * half ) % mod;
	return (((half * half ) % mod )* a ) % mod;
}
ll mmi(ll n,ll m)
{
	return fastPow(n,m-2,mod);
}
int main()
{
	int n,zeros=0;
	si(n);
	ll a[n+1];
	ll mul=1;
	for (int i=1;i<=n;i++)
	{
	sll(a[i]);
	if(a[i]!=0)
	{
	
	mul*=a[i];
	mul%=mod;
}
else
zeros++;
	}
	int  q;
	si(q);
	while(q--)
	{
		int ty,id;
		cin >> ty >> id;
		if(ty==0)
		{
			ll x;
			cin >> x;
			if(a[id]==x)
			continue;
			else if(a[id]==0)
			{
				zeros--;
				a[id]=x;
				mul=(mul*x)%mod;
			}
			else if( x==0 )
			{
				mul=(mul*mmi(a[id],mod))%mod;
				zeros++;
				a[id]=0;
			}
			else if(a[id]!=0 && x!=0)
			{
				mul=(mul*x)%mod;
				mul=(mul*mmi(a[id],mod))%mod;
				a[id]=x;
			}
		}
		else
		{
			if(a[id]==0&&zeros==1)
		       printf("%lld\n",mul);
		       if(a[id]==0&&zeros>1)
		       cout <<"0\n";
		       if(a[id]!=0&&zeros>0)
		       cout << "0\n";
		       if(a[id]!=0 && zeros==0)
		       {
		       	cout << (mul*mmi(a[id],mod)) % mod<< endl;
			   }
		
		}
	}
	return 0;
}