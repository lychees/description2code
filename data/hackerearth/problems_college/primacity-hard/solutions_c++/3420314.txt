#include<bits/stdc++.h>
using namespace std;

int prime[10000001]={0} ;
vector<int> v[9] ;
void Sieve()
{
	int i , j;
	for(i=2;i<=10000000;i++)
	{
		if(prime[i]==0)
		{
			prime[i]++ ;
			for(j=2*i;j<=10000000;j+=i)
				prime[j]++ ;
		}
	}	
}

void pre()
{
	
	for(int i=2;i<=10000000;i++)
	{
		if(prime[i]==1)
			v[1].push_back(i) ;
		else if(prime[i]==2)
			v[2].push_back(i) ;
		else if(prime[i]==3)
			v[3].push_back(i) ;
		else if(prime[i]==4)
			v[4].push_back(i) ;	
		else if(prime[i]==5)
			v[5].push_back(i) ;
		else if(prime[i]==6)
			v[6].push_back(i) ;
		else if(prime[i]==7)
			v[7].push_back(i) ;
		else if(prime[i]==8)
			v[8].push_back(i) ;
		else if(prime[i]==9)
			v[9].push_back(i) ;
	}
}
int main()
{
	Sieve() ;
	pre() ;
	int t,i,j;
	scanf("%d",&t);
	while(t--)
	{
		int a,b,k,count=0;
		scanf("%d%d%d",&a,&b,&k);
		if(k>9)
		{
			printf("0\n");
			continue;
		}
		int p1 = lower_bound(v[k].begin(),v[k].end(),a)-v[k].begin();
		int p2 = upper_bound(v[k].begin(),v[k].end(),b)-v[k].begin(); 
		printf("%d\n",p2-p1);
//	scanf("%d",&a);
//	printf("%d has primicity %d\n",a,prime[a])	;
	}
	return 0;
}