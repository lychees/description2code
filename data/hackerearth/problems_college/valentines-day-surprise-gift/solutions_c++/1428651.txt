#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v, w; };

ll MOD = 1000000007;
ll _MOD = 1000000009;
double EPS = 1e-10;
int INF = INT_MAX / 2;

int pow_mod(ll x, ll n, int m) {
	ll res = 1;
	for (; n > 0; n >>= 1) {
		if (n & 1) res = (res * x) % m;
		x = (x * x) % m;
	}
	return res;
}

ll gcd(ll a, ll b) {
	if (b == 0) return abs(a);
	else return gcd(b, a % b);
}

int main() {
	vector<ll> R(31);
	R[0] = R[1] = R[2] = 1;
	R[3] = R[4] = 3; R[5] = R[6] = 15; R[7] = R[8] = R[9] = R[10] = 105;
	for (int i = 11; i <= 30; i++) {
		R[i] = R[(i + 4) / 5] * R[(i + 9) / 10];
		for (int k = 0; k < (i + 3) / 4; k++)
			R[i] = R[i] * 2 % MOD;
	}
	int T; cin >> T;
	while (T--) {
		int N; cin >> N;
		int maxi = 0;
		for (int i = 1; i <= 5; i++)
			for (int j = 1; j <= 5; j++)
				if (gcd(i, j) == 1)
					maxi = max(maxi, pow_mod(i * R[N], j * R[N], MOD));
		cout << maxi << endl;
	}
}