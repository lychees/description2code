/*
jai shree ram _/\_
A hacker from NITP
*/

#include<bits/stdc++.h>
using namespace std;

#define mod 1000000007
typedef set<string> ss;
typedef vector<int> vs;
typedef map<int,char> msi;
typedef pair<int,int> pa;
typedef long long int ll;

ll powe(ll a,ll b)
{
	if(b==0)
	return 1;
	ll ret=powe(a,b/2)%mod;
	if(b&1)
	return (((a*ret)%mod)*ret)%mod;
	return (ret*ret)%mod;
}

void multiply(ll F[2][2], ll M[2][2]);

void power(ll F[2][2], ll n);

/* function that returns nth Fibonacci number */
ll fib(ll n)
{
 ll F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0];
}

/* Optimized version of power() in method 4 */
void power(ll F[2][2],ll n)
{
  if( n == 0 || n == 1)
      return;
 ll M[2][2] = {{1,1},{1,0}};

  power(F, n/2);
  multiply(F, F);

  if (n%2 != 0)
     multiply(F, M);
}

void multiply(ll F[2][2],ll M[2][2])
{
 ll x =  ((F[0][0]*M[0][0])%mod + (F[0][1]*M[1][0])%mod)%mod;
 ll y =  ((F[0][0]*M[0][1])%mod + (F[0][1]*M[1][1])%mod)%mod;
 ll z =  ((F[1][0]*M[0][0])%mod + (F[1][1]*M[1][0])%mod)%mod;
 ll w =  ((F[1][0]*M[0][1])%mod + (F[1][1]*M[1][1])%mod)%mod;

  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}

ll f[50],i,a,b,n,l;
vector<ll> v;
int main()
{
	//freopen("i.in", "r", stdin);
  	//freopen("o.out", "w", stdout);
  	int t;
  	f[1]=1; f[2]=1;
  	v.push_back(1);
  	for(i=3;i<=45;i++)
  	{
  		f[i]=(f[i-1]+f[i-2]);
  		v.push_back(f[i]);
  	}
	cin>>t;
	while(t--)
	{
		cin>>n;
		a=n;
		while(1)
		{
			l=upper_bound(v.begin(),v.end(),a)-v.begin();
			if((a-l)==n)
			break;
			else
			{
				a+=(n-(a-l));
			}
		}
		b=fib(n);
		//cout<<a<<" "<<b<<"\n";
		cout<<powe(a,b)<<"\n";
	}
	return 0;
}

