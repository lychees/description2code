#include <iostream>
#include <vector>
#include <map>
using namespace std;
namespace {
    typedef vector<int> IntCol;
    enum {
        LED_RED = 1,
        LED_GREEN = 2,
        LED_BLUE = 4
    };
    IntCol leds(int secs, int r, int g, int b) {
        map<unsigned int, int> colors;
        colors[LED_RED] = 0;
        colors[LED_GREEN] = 1;
        colors[LED_BLUE] = 2;
        colors[LED_RED | LED_GREEN] = 3;
        colors[LED_GREEN | LED_BLUE] = 4;
        colors[LED_RED | LED_BLUE] = 5;
        colors[LED_RED | LED_GREEN | LED_BLUE] = 6;
        colors[0] = 7;
        IntCol res(colors.size());;
        for(int i = 0; i < secs; ++i) {
            unsigned int v = 0;
            if(i/r%2)
                v |= LED_RED;
            if(i/g%2)
                v |= LED_GREEN;
            if(i/b%2)
                v |= LED_BLUE;
            res[colors[v]] += 1;
        }
        return res;
    }
}
int main()
{
    int t = 0;
    cin>>t;
    int r = 0;
    int g = 0;
    int b = 0;
    cin>>r>>g>>b;
    IntCol res = leds(t, r, g, b);
    bool first = true;
    for(const auto &v : res) {
        if(!first)
            cout<<' ';
        else
            first = false;
        cout<<v;
    }
    cout<<endl;
    return 0;
}
