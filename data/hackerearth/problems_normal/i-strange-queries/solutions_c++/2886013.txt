#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back

inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 1e6+10;
const ll INF = 1e18;

//#define DEBUG

#ifdef DEBUG
#define dprintf(fmt,...) fprintf(stderr,fmt,__VA_ARGS__)
#else
#define dprintf(fmt,...)
#endif

const int bck=230;

int arr[50005],ak[50005],c[bck+2][50005];
int n;
ll p[bck+5][bck+5];
ll solve(int a,int b){
  a++;b++;
  if(a<0||b<0) return 0;

  ll ans=0;
  //printf("%d %d\n",a,b);
  if(a/bck>0&&b/bck>0) ans=p[a/bck-1][b/bck-1];
  int x=(a/bck)*bck;int y=x+bck,z=b/bck-1;
//  printf("%d %d %d %d %lld\n",a,b,a/bck-1,b/bck-1,ans);
  dprintf("gg%d %d %lld\n",a/bck-1,b/bck-1,ans);
  while(x<a&&x<y) {ak[arr[x]]++;if(z>=0) ans+=c[z][arr[x]];dprintf("hh%lld %d %d %d\n",ans,z,c[z][arr[x]],arr[x]);x++;}
  x=(b/bck)*bck;y=x+bck;
  z=a/bck-1;
  while(x<b&&x<y) {ans+=ak[arr[x]];if(z>=0)ans+=c[z][arr[x]];dprintf("zz%lld %d %d\n",ans,z,c[z][arr[x]]);x++;}
   x=(a/bck)*bck;y=x+bck;
  // printf("\n");
  while(x<a&&x<y) {ak[arr[x]]--;x++;}
  dprintf("%d %d %lld\n",a,b,ans);
  return ans;

}
int main(){
  scanf("%d",&n);
  REP(i,n) scanf("%d",&arr[i]);
  REP(i,n/bck+1){
    int x=i*bck;
    while(x<(i+1)*bck&&x<n) {ak[arr[x]]++;x++;}
    ll tot=0;
    REP(j,n+1) c[i][j]=ak[j];//printf("%d %d %d\n",i,j,c[i][j]);
  //  assert(c[2][1]==1||c[2][1]==0);
  //assert(n/bck==3);
    x=0;
    REP(j,n/bck+1){
      while(x<(j+1)*bck&&x<n) { tot+=ak[arr[x++]];}// printf("%d %d %lld\n",i,j,tot);}
      p[i][j]=tot;
    //  printf("%d %d %lld %d\n",i,j,p[i][j],n);
    }
  }

  FILL(ak,0);
  int q; scanf("%d",&q);
  while(q--){
    pii a,b;
    scanf("%d%d%d%d",&a.X,&a.Y,&b.X,&b.Y);a.X--;a.Y--;b.X--;b.Y--;
    ll ans=solve(a.Y,b.Y)-solve(a.X-1,b.Y)-solve(a.Y,b.X-1)+solve(a.X-1,b.X-1);
    printf("%lld\n",ans);
  }
  return 0;
}
