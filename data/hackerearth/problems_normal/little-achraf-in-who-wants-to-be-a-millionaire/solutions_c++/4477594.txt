#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("circuit.inp","r",stdin)
#define OUTPUT freopen("circuit.out","w",stdout)
#define FOR(i,l,r) for(auto i=(l);i<=(r);i++)
#define REP(i,l,r) for(auto i=(l);i<(r);i++)
#define FORD(i,l,r) for(auto i=(l);i>=(r);i--)
#define REPD(i,l,r) for(auto i=(l);i>(r);i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=1e2+10;
const ll maxpos=1e15+10;

int n,n1,mark[N];
ll len[N*100];

int convert(char ch){
    if (ch>='0'&&ch<='9') return ch-'0';
    if (ch>='a'&&ch<='z') return ch-'a'+10;
    return ch-'A'+36;
}
bool check(ll idx,ll pos,int val){
//    cout<<idx<<" "<<pos<<" "<<val<<'\n';
    if (idx>=n1+n) return check(n1+(idx-n1)%n,pos,val);
    if (idx<=n){
        if (mark[idx]!=-1&&val!=mark[idx]) return 0;
        mark[idx]=val;
        return 1;
    }
    FORD(i,n,1) {
//        cout<<"=>"<<idx-i<<" "<<pos<<'\n';
        if (pos<=len[idx-i]){
            check(idx-i,pos,val);
            break;
        }
        pos-=len[idx-i];
    }
}
void prepare(){
    int test;
    cin>>n>>test;
    memset(mark,-1,sizeof(mark));
    n1=n;
    ll sum=n;
    fill(len+1,len+n+1,1);
    while (len[n1]<=maxpos){
        len[++n1]=sum;
        sum+=len[n1]-len[n1-n];
    }
//    cout<<n<<" "<<n1<<'\n';
    while (test--){
        ll x,y;
        char ch;
        cin>>y>>x>>ch;
        if (!check(x,y,convert(ch))){
            printf("0");
            exit(0);
        }
    }
    ll ans=1;
    FOR(i,1,n) if (mark[i]==-1) ans=ans*62%MOD;
    cout<<ans;
}
int main(){
//    freopen("input.inp","r",stdin);
    prepare();
}
