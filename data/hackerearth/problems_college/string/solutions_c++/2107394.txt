#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <string>
#include <cstring>
#include <cmath>
#include <set>
#include <map>
#include <algorithm>
#include <cstdlib>
#include <sstream>
#include <iomanip>
#include <stack>
#include <ctime>
#include <functional>
#include<stdio.h>
using namespace std;


#define pi 3.1415921075358979323841073
#define ll long long
#define toint(a) atoi(a.c_str())
#define all(c) c.begin(), c.end()
#define sor(i,j,n) for(int i=j;i<n;i++)
#define fsyo return 0
#define nt endl
#define tpi cout
#define length length()
#define tr(container, it) for( typeid(container.begin()) it = container.begin(); it != container.end(); it++) 


string tostring(int a)
{
	ostringstream temp;
	temp << a;
	return temp.str();
}

ll gcd(ll a, ll b)
{
	if (a == 0){
		return b;
	}
	else{
		return gcd(b%a, a);
	}
}

ll lcm(ll a, ll b)
{
	return a*b / gcd(a, b);
}

bool isPrime(int num)
{
	if (num <= 1)
		return false;
	else if (num == 2)
		return true;
	else if (num % 2 == 0)
		return false;
	else
	{
		bool prime = true;
		int divisor = 3;
		double num_d = static_cast<double>(num);
		int upperLimit = static_cast<int>(sqrt(num_d) + 1);

		while (divisor <= upperLimit)
		{
			if (num % divisor == 0)
				prime = false;
			divisor += 2;
		}
		return prime;
	}
}




ll fact(ll in){
	if (in == 0 || in == 1){
		return 1;
	}
	ll res = 1, mult = 2;
	while (mult < in + 1){
		res *= mult;
		mult++;
	}
	return res;
}

struct str{
	int x, y, z;

	bool operator<(const str rhs) const
	{
		if (x < rhs.x)
		{
			return true;
		}
		else if (x == rhs.x)
		{
			if (y < rhs.y)
			{
				return true;
			}
			else if (y == rhs.y)
			{
				return z < rhs.z;
			}
		}
		return false;
	}

}sv[8];

struct pa{
	int g;
	string name;
	bool operator<(const pa rhs) const
	{
		if (g < rhs.g)
		{
			return true;
		}
		else if (g == rhs.g)
		{
			if (name < rhs.name)
			{
				return true;
			}
		}
		return false;
	}

}par[100007];



ll exp(ll n, ll r, ll md)
{
	if (r == 0){
		return 1;
	}
	ll ans = exp(n, r / 2, md);
	ans *= ans;
	ans %= md;
	if (r & 1){
		ans *= n;
		ans %= md;
	}
	return ans%md;
}
ll choose(ll n, ll r, ll md)
{
	ll ans = 1;
	sor(i, n - r + 1, n + 1){
		ans *= i;
		ans %= md;
	}
	sor(i, 1, r + 1){
		ans *= exp(i, md - 2, md);
		ans %= md;
	}
	return ans%md;
}

#define mod 1000000007

pair <int, char> l[26];

int main(){
	string in;
	int k;

	sor(i, 0, 26){
		l[i].first = 0;
		l[i].second = 'a';
		l[i].second += i;
	}

	cin >> in >> k;

	sor(i, 0, in.length){
		l[in[i] - 'a'].first++;
	}

	int q = 0;

	sor(i, 0, 26){
		if (l[i].first != 0){
			q++;
		}
	}

	sort(l, l + 26);

	int j = 0;

	while (j<26){
		if (k > l[j].first){
			k -= l[j].first;
			l[j].first = 0;
		}
		j++;
	}

	string ans = "";

	sor(i, 0, in.length){
		sor(x, 0, 26){
			if (in[i] == l[x].second && l[x].first > 0){
				ans += in[i];
			}
		}
	}

	q = 0;

	sor(i, 0, 26){
		if (l[i].first > 0){
			q++;
		}
	}

	tpi << q<<nt<<ans << nt;

	fsyo;
}


