#include <bits/stdc++.h>
using namespace std ;

#define ft first
#define sd second
#define pb push_back
#define all(x) x.begin(),x.end()

#define ull unsigned long long int
#define ui unsigned int
#define ll long long int
#define vi vector<int>
#define vii vector<pair<int,int> >
#define pii pair<int,int>
#define vl vector<ll>
#define vll vector<pair<ll,ll> >
#define pll pair<ll,ll>
#define mp make_pair

#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)

#define scll1(x) scanf("%lld",&x)
#define scll2(x,y) scanf("%lld%lld",&x,&y)
#define scll3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)

#define pr1(x) printf("%d\n",x)
#define pr2(x,y) printf("%d %d\n",x,y)
#define pr3(x,y,z) printf("%d %d %d\n",x,y,z)

#define prll1(x) printf("%lld\n",x)
#define prll2(x,y) printf("%lld %lld\n",x,y)
#define prll3(x,y,z) printf("%lld %lld %lld\n",x,y,z)

#define pr_vec(v) for(int i=0;i<v.size();i++) cout << v[i] << " " ;

#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)

#define fr(i, a, b) for(i=a; i<=b; i++)
#define fb(i, a, b) for(i=a; i>=b; i--)

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define debug( s ) cout << s << "\n"

const int maxn = 1e3 + 10;
int Y[ maxn ], M[ maxn ], S[ maxn ], E[ maxn ], C[ maxn ][ maxn ];

int main() {
	int n; cin >> n;
	int i;
	fr(i, 1, n) {
		cin >> Y[i];
		M[ Y[i] ] ++;
		E[ Y[i] ] = i;
		if( !S[ Y[i] ] ) S[ Y[i] ] = i;
		C[Y[i]][i] ++;
	}

	fr(i, 0, 1000) {
		int j;
		fr(j, 1, n) {
			C[i][j] += C[i][j-1];
		}
	}

	fr(i, 1, n) {
		int j;
		fr(j, 1, 1000) {
			C[j][i] += C[j-1][i];
		}
	}

	int j;
	int ans = 0;
	fr(i, 0, 1000) {
		if(M[i]) {
			ans = max(ans, M[i]);
			fr(j, i+1, 1000) {
				if(M[j]) {
					ans = max(ans, M[j]);
					int v = M[i] + M[j], mn, mx;
					mn = min(S[i], S[j]);
					mx = max(E[i], E[j]);
					if( C[j][mn-1] - C[i][mn-1] ) v ++;
					if( (C[j][n] - C[i][n]) - (C[j][mx] - C[i][mx]) ) v ++;
					ans = max(ans, v);
				}
			}	
		}
	}
	cout << ans << "\n";
	return 0;
}