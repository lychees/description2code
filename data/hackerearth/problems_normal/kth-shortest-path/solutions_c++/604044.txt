#include<bits/stdc++.h>
using namespace std;
int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	
	while(t--)
	{
	    int m,n,x,y,k,i,j,q;
	    cin>>m>>n;
	    int grid[111][111]={0};
	    int dp[111][111][111]={0};
	    int size[111][111]={0};
	    char str[10];
	    for(i=1;i<=m;i++)
	    {
	        for(j=1;j<=n;j++)
	        {
	            cin>>str;
	          //  cout<<str<<"is";
	            if(strcmp(str,"##")==0)
	                grid[i][j]=-10;
	            else
	                grid[i][j]=atoi(str);
	         //   cout<<grid[i][j]<<endl;
	        }
        }
        dp[1][1][0]=grid[1][1];
        size[1][1]++;
        for(i=1;i<=m;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(i==1 && j==1)
                    continue;
                    
                if(grid[i][j]==-10)
                    continue;
                int k1=0,k2=0,k=0;
             //   cout<<"at"<<i<<" "<<j<<" "<<size[i-1][j]<<" "<<size[i][j-1]<<endl;
                while((k1<size[i-1][j] || k2<size[i][j-1]) && k<=101)
                {
                    int next=0;
                    if(k1>=size[i-1][j])
                    {
                        dp[i][j][k]=dp[i][j-1][k2];
                        k2++;
                        k++;
                    }
                    else if(k2>=size[i][j-1])
                    {
                        dp[i][j][k]=dp[i-1][j][k1];
                        k1++;
                        k++;
                    }
                    else if(dp[i-1][j][k1]<dp[i][j-1][k2])
                    {
                         dp[i][j][k]=dp[i-1][j][k1];
                        k1++;
                        k++;
                    }
                    else
                    {
                        dp[i][j][k]=dp[i][j-1][k2];
                        k2++;
                        k++;
                    }
                   dp[i][j][k-1]+=grid[i][j];
                   if(k==101)
                   	break;
                }
                size[i][j]=k;
             /*   cout<<k<<" sol"<<endl;
                for(k=0;k<size[i][j];k++)
                    cout<<dp[i][j][k]<<" ";
                   cout<<endl;*/
                
            }
        }
        cin>>q;
        while(q--)
        {
               cin>>x>>y>>k;
               x++;
               y++;
               k--;
               if(grid[x][y]==-10)
                cout<<"Obstacle"<<endl;
               else if(k>=size[x][y])
                cout<<"Not so many paths"<<endl;
               else
                cout<<dp[x][y][k]<<endl;
        }
	}
	return 0;
}