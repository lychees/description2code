#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;
#define mod 1000000007

int main(){
	
	/**
	 * For B, we just need to compute sum of absolute values of arr[i] for all i from 1 to N
	 * because we can always choose proper -1/+1 to make every element positive
	 * 
	 * For A, we will sort the array and invert the signs of first half of the array and compute the sum
	 * 
	 * This strategy will ensure the maximum value of C = (A*B)%1000000007
	 * 
	**/
    int T, N;
    cin >> T;
    while ( T-- ) {
        cin >> N;
        ll arr[N], A = 0, B = 0;
        for ( int i = 0; i < N; i++ ) {
            cin >> arr[i];
            B += abs(arr[i]);
            if( B < 0 )
                B = ( B + mod ) % mod;
        }
        B = ( B ) % mod;
        sort ( arr, arr + N );
        int i;
        for(i = 0; i <= ( N - 1 ) / 2; i++ ) {
            A += ( -1 ) * arr[i];
        }
        for( ; i < N; i++ ) {
            A += arr[i];
        }
        A = ( A ) % mod;
        cout << (A * B) % mod << endl;
    }

    return 0;
}
