#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cctype>
#include <cstdlib>
#include <bitset>
#include <vector>
#include <list>
#include <deque>
#include <queue>
#include <map>
#include <set>
#include <stack>
#include <cmath>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <complex>
#include <functional>
#include <climits>
#include <cassert>
#include <iterator>
#include <math.h>
#include <time.h>
#include <string.h>

#define bit(n) (1<<(n))
#define inf 1000000000
#define eps 1e-9
#define PI 3.1415926535897932385
#define pb push_back
#define sz size()
#define mp make_pair
#define cl clear()
#define all(a) a.begin(),a.end()
#define fill(ar,val) memset(ar,val,sizeof(ar))
#define MIN(a,b) if(a>(b)) a=(b)
#define MAX(a,b) if(a<(b)) a=(b)
#define sqr(x) ((x)*(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define MOD 1000000007
#define bsize 200000
const int N = 10005;

using namespace std;
 // ==================================================================//
 
 typedef pair<int,int> pii;
 
 set<pair<int,pii> > alledges;
 
 vector<int> bellman(int st,int ver)
 {
     vector<int> vec(ver+2 , 10000000);
     vec[st] = 0;
     for(int i=1;i<=ver;i++)
     {
         for(set<pair<int,pii> >::iterator it=alledges.begin();it!=alledges.end();++it)
         {
             int x = (*it).first;
             int d = (*it).second.first;
             int y = (*it).second.second;
             if(vec[x] != 10000000)
             {
                 vec[y] = min(vec[y] , vec[x]+d);
             }
         }
     }
     return vec;
 }
 
 
int main()
{
    // * Faster Input *//
    
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    // * ----------------------------------------------------------  * //
    
   /* bellman ford */
   
   int t;
   cin >> t;
   while(t--)
   {
       alledges.clear();
       int n;
       cin >> n;
       int q;
       cin >> q;
       int x,y,d;
       for(int i=0;i<q;i++)
       {
           cin >> x >> y >> d;
           d=d*(-1);
           alledges.insert(mp(x,mp(d,y)));
       }
       int scr = 1;
       vector<int> vec = bellman(scr , n);

        int negcycle = 0;
        for(int i=1;i<=n;i++)
        {
            for(set<pair<int,pii> > ::iterator it = alledges.begin();it!=alledges.end();++it)
            {
                int x = (*it).first;
                int d=(*it).second.first;
                int y=(*it).second.second;
                if(vec[x] != 10000000)
                {
                    if(vec[y] > vec[x]+d)
                    {
                        negcycle = 1;
                    }
                }
            }
        }
        
        if(negcycle == 1)
        {
            cout << "Yes" <<endl;
        }
        else{
            cout<<"No"<<endl;
        }
   }
    
    return 0;
}
