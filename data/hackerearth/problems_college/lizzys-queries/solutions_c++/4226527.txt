#include <bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define pii pair<int,int>
#define piii pair<int,pii>
#define pll pair<ll,ll>
#define psi pair<string,int>
#define rep(i,n) for(i=0;i<n;i++)
#define repd(i,n) for(i=n;i>=0;i--)
#define vi vector<int>
#define vvi vector<vector<int> >
#define vvlli vector<vector<long long int> >
#define ll long long int
#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sd3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define PI 3.14159265
#define mod 1000000007
#define N 100001
 

ll gcd(ll a,ll b)
{
    if(b==0)
      return a;
    return gcd(b,a%b);
}
 
ll power(ll a,ll n)
{
    if(n==0)
      return 1;
    ll x=power(a,n/2);
    x=(x*x)%mod;
    if(n%2!=0)
    {
      x=x*a;
      x=x%mod;
    }
    return x;
}


//bool isprime[50000001];

// void sieve()
// {
//     ll i,j;
//     memset(isprime,1,sizeof(isprime));
//     for(i=2;i<50000001;i++)
//     {
//         if(isprime[i]==1)
//         {
//             for(j=i*i;j<50000001;j=j+i)
//                 isprime[j]=0;
//             prime.pb(i);
//         }
//     }
// }
int x = (int)(ceil(log2(100000))); 
int max_size = 2*(int)pow(2, x) - 1; 

string s;
vvi seg(max_size,vi(26));

vector<int> build(int i,int st,int end)
{
    vector<int> l(26,0),r(26,0);
    if(st==end)
    {
        l[s[st]-'a']++;
        seg[i]=l;
        return l;
    }
    int mid=(st+end)/2;
    l=build(2*i+1,st,mid);
    r=build(2*i+2,mid+1,end);
    for(int j=0;j<26;j++)
        l[j]+=r[j];

    seg[i]=l;
    return l;
}

vector<int> query(int i,int st,int end,int l,int r)
{
    if(st>=l && end<=r)
    {
        return seg[i];
    }
    int mid=(st+end)/2;
    if(mid>=r)
        return query(2*i+1,st,mid,l,r);
    else if(mid<l)
        return query(2*i+2,mid+1,end,l,r);

    vector<int> left(26),right(26);
    left=query(2*i+1,st,mid,l,r);
    right=query(2*i+2,mid+1,end,l,r);
    for(int j=0;j<26;j++)
        left[j]+=right[j];
    
    return left;
}

void update(int i,int st,int end,int k,char c)
{
    seg[i][s[k]-'a']--;
    seg[i][c-'a']++;
    if(st==end)
    {
        return;
    }
    int mid=(st+end)/2;
    if(mid>=k)
        update(2*i+1,st,mid,k,c);
    else
        update(2*i+2,mid+1,end,k,c);
}
   

int main()
{
    ios_base::sync_with_stdio(0);
    int i,j,k,t,l,r,q,n,m;
    cin>>n>>t;
    cin>>s;
    build(0,0,n-1);
    vi w(26);
    char c;
    while(t--)
    {
        cin>>q>>l;
        if(q==0)
        {
            cin>>c;
            l--;
            update(0,0,n-1,l,c);
            s[l]=c;
        }
        else
        {
            cin>>r;
            l--,r--;
            if(r-l<=1)
            {
                if(s[r]!=s[l])
                    cout<<"No\n";
                else
                    cout<<"Yes\n";
                continue;
            }
            w=query(0,0,n-1,l,r);
            k=0;
            for(i=0;i<26;i++)
            {
                if(w[i]%2!=0)
                    k++;
                if(k>1)
                    break;
            }
            if(k>1 || (k==1 && (r-l+1)%2==0))
                cout<<"No\n";
            else
            {
                k=0;
                for(i=0;i<26;i++)
                {
                    if(w[i]!=0)
                        k++;
                }
                if(k==1)
                {
                    cout<<"Yes\n";
                    continue;
                }
                k=0;
                for(i=l,j=r;i<j;i++,j--)
                {
                    if(s[i]!=s[j])
                    {
                        k=1;
                        break;
                    }
                }
                if(k==1)
                    cout<<"No\n";
                else
                    cout<<"Yes\n";
            }
        }
    }

    return 0;

}