#include<bits/stdc++.h>
#include<vector>
#include<list>
#include<utility>
#include<map>
#include<set>
#include<stack>
#include<queue>
#define mod 1000000007
#define ll long long
#define INF (1<<28)
using namespace std;
bool vis[1005][1005]={false};
set < pair<int,int> > s[1005][1005]; 
int nation=0;
int i,j,N,M,Q;
int arr[1005][1005];
int bfs(int X,int Y)
{
	int count=0;
	//cout<<arr[X][Y]<<"<--value at bomb drop"<<endl;
	if(vis[X][Y]==false && arr[X][Y]==1)
	{
		vis[X][Y]=true;count++;
		queue <pair <int,int> > q;
		q.push(make_pair(X,Y));
		while(!q.empty())
		{
			pair <int,int> v=q.front();
			q.pop();//cout<<v.first<<","<<v.second<<"<--element @ queue front"<<endl;
			for(set <pair <int,int> >::iterator it=s[v.first][v.second].begin();it!=s[v.first][v.second].end();it++)
			{
				if(vis[(*it).first][(*it).second]==false)
				{
					vis[(*it).first][(*it).second]=true;
					count++;
					q.push(make_pair((*it).first,(*it).second));
				}
			}			
		}
	}
	//	cout<<count<<"<--coutn rerturned"<<endl;
	return count;
}
int main()
{
	
	
	scanf("%d%d%d",&N,&M,&Q);
	for(i=1;i<=N;i++)
	{
		for(j=1;j<=M;j++)
		scanf("%d",&arr[i][j]);
	}
		
	for(i=1;i<=N;i++)
	{
		for(j=1;j<=M;j++)
		{
			if(arr[i][j]==1)
			{
				nation+=1;
				if(arr[i+1][j]==1 && i+1<=N)
				s[i][j].insert(make_pair(i+1,j));
				
				if(arr[i][j+1]==1 && j+1<=M)
				s[i][j].insert(make_pair(i,j+1));
				
				if(arr[i-1][j]==1 && i-1>=1)
				s[i][j].insert(make_pair(i-1,j));
							
				if(arr[i][j-1]==1 && j-1>=1)
				s[i][j].insert(make_pair(i,j-1));
				
			/*	if(arr[i+1][j+1]==1 && i+1<=N && j+1<=M)
				s[i][j].insert(make_pair(i+1,j+1));
				
				if(arr[i+1][j-1]==1 && i+1<=N && j-1>=1)
				s[i][j].insert(make_pair(i+1,j-1));
				
				if(arr[i-1][j+1]==1 && i-1>=1 && j+1<=N)
				s[i][j].insert(make_pair(i-1,j+1));
				
				if(arr[i-1][j-1]==1 && i-1>=1 && j-1>=1)
				s[i][j].insert(make_pair(i-1,j-1));
				
			for(set <pair <int,int> >::iterator it=s[i][j].begin();it!=s[i][j].end();it++)
				{
					cout<<(*it).first<<","<<(*it).second<<endl;
				}cout<<"<--neighbours of "<<i<<","<<j<<endl;*/
			}
		
		}
		
	}
	//	cout<<nation<<"<--tot nations"<<endl;
	while(Q--)
	{
		int X,Y;
		scanf("%d%d",&X,&Y);
		nation-=bfs(X,Y);
		printf("%d\n",nation);
	}
	return 0;
}
