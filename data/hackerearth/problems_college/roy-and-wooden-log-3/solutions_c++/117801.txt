#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <queue>        //max heap implementation
#include <limits.h>
#include <time.h>
#include <bitset>


#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define mkp make_pair
#define fi first
#define se second
#define debug(a) { for( typeof(a.begin()) it = a.begin() ; it != a.end() ; it++ ) cout << *it << " "; cout << endl; }

using namespace std;

//int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
//int dy[] = {1, -1, 0, 0, 1, -1, -1, 1};

/*bool valid (int x, int y) {
  return x >= 0 && y >= 0 && x < n && y < m;
}*/

/*int dfs (int x, int y) {
  if(d[x][y] != -1)
    return d[x][y];
  d[x][y] = 0;
  for(int k = 0; k < 8; ++k) {
    int n_x = x + dx[k];
    int n_y = y + dy[k];
    if(valid(n_x, n_y)) {
      if(a[n_x][n_y] == a[x][y] + 1) {
        d[x][y] = max(d[x][y], 1 + dfs(n_x, n_y));
      }
    }
  }
  return d[x][y];
}
*/
#include<stdio.h>

// Driver program to test above function
int main()
{   int n;
    long int a;
    cin>>n;
    for(int i=0;i<n;++i)
    {
        cin>>a;
        double x=(double)(a+1)/2.0;
        long int y=(a+1)/2;
        if(x>y)cout<<y+1;
        else
        cout<<y;

        if(a%2==0)cout<<" "<<a/2-1;
        else
        cout<<" "<<a/2;
        cout<<endl;
    }
}
/*

int main()
{   std::ios::sync_with_stdio(false);


}
*/























