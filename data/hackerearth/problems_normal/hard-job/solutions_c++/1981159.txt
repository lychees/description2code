#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<unordered_map>
using namespace std;
#define MAX 500004
int bit[MAX * 3];
int a[MAX];
int l=MAX;
int r;
int belong[MAX];
void add(int i, int x){
	i++;
	while (i < MAX*3){
		bit[i] += x;
		i += i&-i;
	}
}
int sum(int i){
	i++;
	int r = 0;
	while (i){
		r += bit[i];
		i -= i&-i;
	}
	return r;
}
char s[2];
int main(){
	int n;
	scanf("%d", &n);
	int q;
	scanf("%d", &q);
	r=l;
	for (int i = 0; i < n; i++){
		scanf("%d", &a[i]);
		belong[a[i]] = l + i;
		add(belong[a[i]], 1);
		r++;
	}
	r--;
	long long int ans = 0;
	while (q--){
		int x;
		scanf("%d%s", &x,s);
		int b = belong[x];
		int k = sum(b);
		k = min(k - 1, n - k);
		ans += (long long int)(k);
		add(b, -1);
		if (s[0] == 'l'){
			belong[x] = l - 1;
			l--;
		}
		else{
			belong[x] = r + 1;
			r++;
		}
		add(belong[x], 1);
	}
	printf("%lld", ans);
	return 0;
}