    #include<vector>
    #include<stdio.h>
    #include<assert.h>
    #include<limits.h>
    #include<string.h>
    #include<algorithm>
    #define read(x) scanf("%d",&x)
    using namespace std;
    vector<int> list[515];
    int sum, visited[515], ans;
    int dfs(int i, int a[], int st=0)
    {
    visited[i]=1;
    if(list[i].size()==1) ans=max(ans,a[i]);
    if(list[i].size()==1 && !st) return a[i];
    int sum=INT_MIN;
    for(int j=0; j<list[i].size(); j++)
    {
    int v = list[i][j];
    if(!visited[v]) sum=max(sum, dfs(v, a));
    }
    return a[i]+sum;
    }
    int main()
    {
    //clock_t startTime = clock();
    //freopen("in_2.txt","r",stdin);
    //freopen("out_2.txt","w",stdout);
    int T, N;
    read(T);
    while(T--)
    {
    read(N);
    int a[N];
    assert(N>=1 && N<=511);
    if(N==1) { scanf("%d",&a[0]); printf("%d\n",a[0]); continue; }
    for(int i=0; i<N; i++) list[i].clear();
    for(int i=0; i<N; i++) read(a[i]);
    for(int i=0; i<N/2; i++)
    {
    list[i].push_back(2*i+1);
    list[2*i+1].push_back(i);
    list[i].push_back(2*i+2);
    list[2*i+2].push_back(i);
    }
    ans=INT_MIN;
    for(int i=N/2; i<N; i++)
    {
    memset(visited, 0, sizeof(visited));
    ans=max(ans, dfs(i,a,1));
    }
    printf("%d\n",ans);
    }
    //clock_t endTime = clock();
    //fprintf(stderr, "\nTime: %.5f seconds\n", double(endTime - startTime) / CLOCKS_PER_SEC);
    return 0;
    }