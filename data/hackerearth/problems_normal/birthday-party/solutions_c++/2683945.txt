#include <bits/stdc++.h>
using namespace std;
vector<int> vec, dp, temp;
bool arr[1000000];
void call(){
    int m = vec.size();
    dp.push_back(0), arr[0] = 1;
    for(int i = 0; i < vec.size(); i++){
        for(int j = 0; j < dp.size(); j++){
            if(!arr[vec[i] + dp[j]]){
                arr[vec[i] + dp[j]] = 1;
                temp.push_back(vec[i] + dp[j]);
            }
        }
        for(int j = 0; j < temp.size(); j++){
            dp.push_back(temp[j]);
        }
        temp.clear();
    }
}
int main(){
    int n, m, p, t, z;
    scanf("%d", &t);
    for(;t--;){
        scanf("%d%d", &n, &m);
        vec.resize(m);
        z = 0;
        for(int i = 0; i < m; i++){
            scanf("%d", &vec[i]);
            if(vec[i] == 0)
                z = 1;
        }
        call();

        if(!z)
            arr[0] = 0;
        int prev = -1, cnt = 0, ans = 0;
        for(int i = 0; i < n; i++){
            scanf("%d", &p);
            if(p != prev){
                prev = p;
                if(arr[cnt])
                    ans++;
                cnt = 1;
            }
            else
                cnt++;
        }
        if(arr[cnt])
            ans++;
        memset(arr, 0, sizeof arr);
        dp.clear();

        printf("%d\n",ans);
    }
}
