#include <bits/stdc++.h>
using namespace std;

#define s(a) scanf("%d",&a)
#define ss(a) scanf("%s",a)
#define FOR(i,a,b) for(i=a;i<b;i++)

bool isSubsetSum(int set[], int n, int sum)
{
    // The value of subset[i][j] will be true if there is a subset of set[0..j-1]
    //  with sum equal to i
    bool subset[sum+1][n+1];
 
    // If sum is 0, then answer is true
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;
 
    // If sum is not 0 and set is empty, then answer is false
    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;
 
     // Fill the subset table in botton up manner
     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >= set[j-1])
           subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
       }
     }
 
     return subset[sum][n];
}

int main() {
	int t;
	s(t);
	while(t--)
	{
		int n;
		int arr[1000];
		int i,sum=0;
		s(n);
		FOR(i,0,n)
		{
			s(arr[i]);
			sum+=arr[i];
		}
		if(sum%2)
		{
			printf("NO\n");
			continue;
		}
		
		if(isSubsetSum(arr,n,sum/2))
			printf("YES\n");
		else
			printf("NO\n");
	}
	return 0;
}