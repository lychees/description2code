#include <bits/stdc++.h>
using namespace std;
int n,k;
vector<int> v;
int solve(int x)
{
	int i = 0;
	int cur = 0;
	while(1)
	{
		int ne = v[i] + x;
		vector<int>::iterator I = upper_bound(v.begin(),v.end(),ne);
		cur++;
		if(I==v.end())break;
		I--;
		int vv = I - v.begin();
		i = vv;
	}
	return cur;
}
int main()
{
  //  cout << "Hello World!" << endl;
  int t;
  scanf("%d",&t);
  while(t--)
  {
  	v.clear();
  	int i,x;
  	scanf("%d%d",&n,&k);
  	for(i=0;i<n;i++)
  	{
  		scanf("%d",&x);
  		v.push_back(x);
  	}
  
  	int lo,hi;
  	lo = 0;
  	for(i=1;i<n;i++)
  	if(v[i] - v[i-1] > lo)lo = v[i] - v[i-1];
  	hi = v[n-1] - v[0];
  	int mid;
  //	printf("starting with %d %d\n",lo,hi);
  	while(hi-lo > 1)
  	{
  		mid = (lo + hi)/2;
  		int cur = solve(mid);
  		if(cur <= k)hi = mid;
  		else lo = mid;
  	}
  	int ans ;
  	for(ans = lo;ans<=hi;ans++)
  	if(solve(ans)<=k)break;
  	printf("%d\n",ans);
  }
    return 0;
}
