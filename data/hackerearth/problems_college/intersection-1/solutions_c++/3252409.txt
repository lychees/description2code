#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>
#include <cstring>
#include <cassert>
#include <stdlib.h>

using namespace std;

typedef long long ll;
typedef pair <int,int> pii;
typedef vector <int> vi;

#define rep(i, n) for(int i = 0; i < (n); ++i)
#define forn(i, a, b) for(int i = (a); i < (b); ++i)
#define ford(i, a, b) for(int i = (a); i >= (b); --i)
#define fore(i, a, b) forn(i, a, b + 1)

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define fill(a, v) memset(a, v, sizeof(a))
#define sz(a) ((int)a.size())

#define gl(x) cin >> x
#define gi(x) scanf("%d", &x)
#define pls(x) cout << x << " "
#define pln(x) cout << x << "\n"
#define pis(x) printf("%d ", x)
#define pin(x) printf("%d\n", x)
#define pnl printf("\n")
#define dbn cerr << "\n"
#define dbg(x) cerr << #x << " : " << x << " "
#define dbs(x) cerr << x << " "
#define foreach(c, it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)

#define MOD 1000000007
ll gcd(ll a,ll b) {return b == 0 ? a : gcd(b, a % b);}

ll fast_pow(ll a,int n)
{
    ll result = 1;
    ll power = n;
    ll value = a;
    while(power>0)
    {
        if(power&1)
            {result = result*value;
            result = result;}
        value = value*value;
        value = value;
        power /= 2;
    }
    return result;
}

int main(){
	ll p,q,k,val,val1,t,count=0;
	cin>>t;
	ll l , h, mid;
	rep(m,t){
		cin>>p>>q>>k;count =0;
		double ans = pow(k,1.0/q);
		for(int i =0;i<= (ll)(pow(k,1.0/p));i++){
			val1=fast_pow(i,p)+i;
			if(val1>k)
				break;
			h = ans; l =0;
			while(h>=l){
				mid = (h+l)/2;
				val = val1 + fast_pow(mid,q);
				if(val==k){
					count++;ans = mid;
					break;
				}
				if(val>k){
					h = mid-1;
				}
				if(val<k){
					l = mid+1;
				}
			}
			// if(h==l){

			// }
		}
		cout<<"Case #"<<m+1<<": "<<count<<endl;
	}

	return 0;
}