#include <iostream>
#include <utility>
#include <vector>

using namespace std;

vector < pair<int, int> > g[100001];
int n, mark[100001], dist = 0, val = 1;

void find(int, int);

int main()
{
	int t, i, x, y, w;
	cin >> t;

	for (; t; --t) {
		cin >> n;
		mark[n] = 0;
		for (i = 1; i < n; ++i) {
			cin >> x >> y >> w;
			g[x].push_back(make_pair(y, w));
			g[y].push_back(make_pair(x, w));
			mark[i] = 0;
		}

		find(1, 0);
		//cout << dist << " " << val << endl;
		dist = 0;
		for (i = 1; i <= n; ++i) {
			mark[i] = 0;
		}
		find(val, 0);
		if (dist < 100) {
			cout << 0 << " ";
		} else if (dist > 10000) {
			cout << 10000 << " ";
		} else if (dist > 1000) {
			cout << 1000 << " ";
		} else {
			cout << 100 << " ";
		}
		cout << dist << endl;
		dist = 0; val = 1;
		for (i = 1; i <= n; ++i) {
			g[i].clear();
		}
	}

	return 0;
}

void find(int x, int w)
{
	int i;
	mark[x] = 1;
	if (g[x].size() == 1 && mark[g[x][0].first] == 1) {
		if (w > dist) {
			dist = w;
			val = x;
		}
	} else {
		for (i = 0; i < g[x].size(); ++i) {
			if (mark[g[x][i].first] == 0) {
				find(g[x][i].first, w + g[x][i].second);
			}
		}
	}
}