#include <bits/stdc++.h>
// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#include <time.h>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define dbl long double
#define pi 3.14159265358979323846
using namespace std;
// mylittledoge

#ifdef DONLINE_JUDGE
	// palindromic tree is better than splay tree!
	#define lld I64d
#endif

typedef long long ll;

int main() {
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout << fixed << setprecision(10);
	int K;
	string N;
	cin >> K >> N;
	K++;
	int L =N.length();
	ll mod =1000000007;
	vector<ll> pw10(L+tisic,1);
	for(int i =0; i < L; i++) {
		pw10[i+1] =(pw10[i]*10)%mod;
		if(pw10[i+1] < 0) pw10[i+1] +=mod;}

	vector< pair<ll,int> > nxt[11][11];
	// pocet lucky pred tym, +lucky prveho, pocet cifier
	for(int i =0; i < 121; i++) nxt[i/11][i%11].resize(L+tisic);
	for(int i =0; i < K; i++) for(int j =0; j < K; j++) {
		if(i+j >= K) nxt[i][j][0] =make_pair(1,0);
		else nxt[i][j][0] =make_pair(0,i+j);}
	for(int l =1; l <= L; l++) for(int i =0; i < K; i++) for(int j =0; j < K; j++) {
		int b =j;
		ll a =0;
		for(int d =0; d < 10; d++) {
			ll a_nw =a;
			int b_nw =b;
			if(d == 4 || d == 7) {
				if(i+1 >= K) a_nw +=pw10[l-1], b_nw =0;
				else a_nw +=nxt[i+1][b][l-1].ff, b_nw =nxt[i+1][b][l-1].ss;
				}
			else a_nw +=nxt[i][b][l-1].ff, b_nw =nxt[i][b][l-1].ss;
			if(a_nw >= mod) a_nw -=mod;
			a =a_nw;
			b =b_nw;}
		nxt[i][j][l] =make_pair(a,b);}

	ll ans =0, x =0, lpref =0;
	reverse(begin(N),end(N));
	for(int i =L-1; i >= 0; i--) {
		for(int d =0; d < N[i]-'0'; d++) {
			int l =lpref;
			if(d == 4 || d == 7) l++;
			if(l >= K) {
				ans +=pw10[i];
				x =0;}
			else {
				ans +=nxt[l][x][i].ff;
				x =nxt[l][x][i].ss;}
			if(ans >= mod) ans -=mod;}
		if(N[i] == '4' || N[i] == '7') lpref++;
		}
	if(lpref >= K) ans++;
	else ans +=nxt[lpref][x][0].ff;
	if(ans >= mod) ans -=mod;

	cout << ans << "\n";
	return 0;}

// look at my code
// my code is amazing
