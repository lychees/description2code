#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <queue>
#include <algorithm>
#include <map>
#include <string.h>
#include <assert.h>
#include <set>
#include <cmath>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define SZ(x) (int)(x.size())
#define rep(i,a,b) for(int i=a;i<b;i++)
#define per(i,a,b) for(int i=b-1;i>=a;i--)
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)
 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100010
 
template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}
 
//FILE* outFile;
 
inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}
 
int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=ans*(ll)a%mod;
        a=(ll)a*a%mod;b>>=1;
    }
    return ans;
}

void gao(int n){
    static int p[13];
    ll s=1;
    rep(i,0,n)p[i]=i,s=s*(i+1);
    ll t=0,ans=0;
    ll a[12]={0},b[12]={0};
    do{
        ll q=1;
        rep(i,0,n)
            rep(j,0,i)q*=__gcd(i-j,abs(p[j]-p[i]));
        if(q>1){
            //rep(i,0,n)cerr<<p[i]<<" ";DBG(q)
            if(t)a[p[0]]+=q;
        }
        if(t)b[p[0]]+=q;
        t++;ans+=q;
        if(t==s/2)break;
    }while(next_permutation(p,p+n));
    DBG(ans) 
    rep(i,0,n){
        cerr<<i<<" "<<a[i]<<" "<<b[i]<<"\n";
    }
}
const ll base=100000000;
const int M=8;
struct data{
    vector<ll>v;
    data(){
        v.clear();
        rep(i,0,M)v.pb(0);
    }
    void trim(){
        rep(i,0,M-1){
            v[i+1]+=v[i]/base;
            if(v[i]>=base)v[i]%=base;
        }
    }
    data operator +(const data&b)const{
        data a=*this;
        rep(i,0,M)a.v[i]+=b.v[i];
        a.trim();
        return a;
    }
    data operator +(ull q){
        data a=*this;
        a.v[0]+=q;
        a.trim();
        return a;
    }
    data operator *(int q){
        data a=*this;
        rep(i,0,M){
            a.v[i]*=q;
        }
        a.trim();
        return a;
    }
    void print(){
        bool f=0;
        per(i,0,M){
            if(f==0&&v[i])f=1;
            if(f)printf("%lld",v[i]);
        }
        puts("");
    }
}dp[13];
void solve(int n){
    static int p[13];
    ll s=1;
    rep(i,0,n)p[i]=i,s=s*(i+1);
    ll t=0;
    do{
        data q;
        q.v[0]=1;
        ll ss=1;
        rep(i,0,n)
            rep(j,0,i){
                ss=ss*__gcd(i-j,abs(p[j]-p[i]));
                if(ss>2000){
                    q=q*ss;ss=1;
                }
            }
        if(ss>1)q=q*ss;
        t++;
        dp[n]=dp[n]+q;
        if(t==s/2)break;
    }while(next_permutation(p,p+n));
    dp[n].print();
}
ll f[12];
void solve1(int n){
    static int p[10];
    ll s=1;
    rep(i,0,n)p[i]=i,s=s*(i+1);
    ll t=0;
    do{
        ll q=1;
        rep(i,0,n)
            rep(j,0,i)q=q*__gcd(i-j,abs(p[j]-p[i]));
        t++;f[n]=f[n]+q;
        if(t==s/2)break;
    }while(next_permutation(p,p+n));
}
char s[][50]={"1836917932617896153088","6659334150847096256929824768","265840359336757367286777898436395008"};
int main(){
    int T,k,i,j,n,m;
    //rep(i,3,7)gao(i);
    //freopen("1.txt","w",stdout);
    rep(i,2,10)solve1(i);
    
    scanf("%d",&T);
    while(T--){
        scanf("%d%d",&n,&m);
        if(n<10){
            printf("%lld\n",f[n]%m*2%m);
        }
        else if(n<13){
            ll x=0;
            n-=10;
            for(i=0;s[n][i];i++)x=(x*10+(s[n][i]-'0'))%m;
            x=x*2%m;
            printf("%lld\n",x);
        }
        else puts("0");
    }//*/
    return 0;
}