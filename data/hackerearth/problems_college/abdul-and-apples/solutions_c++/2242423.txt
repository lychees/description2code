#include<bits/stdc++.h>
using namespace std;
int M[101][101];
 
int kadane(int* arr,int n,int size)
{
    int sum = 0, maxsum = -10000, i;
    
    for(i=0;i<size && i<n;i++){
    	sum+=arr[i];
    }
    maxsum=sum;
    
    for(i=size;i<n;i++){
    	sum+=arr[i];
    	sum-=arr[i-size];
    	if (sum>maxsum){
    		maxsum=sum;
    		
    	}
    }
    
    return maxsum;
}
 

void findMaxSum(int row,int col)
{
    int maxsum = -10000, size;
 
    int left, right, i;
    int temp[row], sum, start, finish;
 
    // Set the left column
    for (left = 0; left < col; left++)
    {
        memset(temp, 0, sizeof(temp));
 
        for (right = left; right < col; right++)
        {
            for (i = 0; i < row; i++)
                temp[i] += M[i][right];
 			size=right-left+1;
 			if(size<=row)
            	sum = kadane(temp, row, size);
 
            if (sum > maxsum)
            {
                maxsum = sum;
            }
        }
    }
 
    printf("%d\n", maxsum);
}
 
int main(){
	int t,i,j,n,R,C;
	scanf("%d",&t);
	while(t--){
		scanf("%d %d",&R,&C);
		for(i=0;i<R;i++){
			for(j=0;j<C;j++){
				scanf("%d",&M[i][j]);
			}
		}
		findMaxSum(R,C);
	}
	return 0;
}