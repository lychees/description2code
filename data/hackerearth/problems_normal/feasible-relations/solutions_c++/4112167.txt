#include<bits/stdc++.h>
using namespace std;
#define pii pair<int,int>
const int MAXN = 1000000;
vector<int> g[MAXN];
int cc[MAXN];
bool visited[MAXN];

void dfs(int v,int id)
{
	visited[v]=1;
	cc[v]=id;
	for(int j=0;j<g[v].size();j++)
	{
		int u=g[v][j];
		if(!visited[u])
		dfs(u,id);
	}
	
}

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		for(int i=0;i<n;i++)
		g[i].clear();
		for(int i=0;i<n;i++)
		{
			visited[i]=0;
			cc[i]=0;
		
		}
		vector<pii> bad_edges;
		
		for(int i=0;i<m;i++)
		{
			int v,u;
			string s;
	    cin >> v >> s >> u;
	    --v,--u;
			
			if(s=="=")
			{
				g[v].push_back(u);
				g[u].push_back(v);
			}
			else
			{
				bad_edges.push_back(make_pair(u,v));
			}
			
		}
		
		for(int i=0;i<n;i++)
		{
			if(!visited[i])
			{
				dfs(i,i);
			}
		}
		int f=0;
		for(int i=0;i<bad_edges.size();i++)
		{
			int v=bad_edges[i].first;
			int u=bad_edges[i].second;
			if(cc[v]==cc[u])
			{
				f=1;
				break;		
			}	
		}
		
		
	if(f) printf("NO\n");
        else printf("YES\n");
		
	}
}