#include <iostream>
#include <stack>
using namespace std;

int main()
{
    long int t;
    cin>>t;
    for(int i = 0; i < t ; i++){
    	long int n;
    	cin>>n;
    	long int arr[n],left[n],right[n],no_left,no_right;
    	stack<int> lstack,rstack;
    	
    	for(int j = 0; j < n ; j++){
    		cin>>arr[j];
    	}
    	
    	for(int j = 0 ; j < n ; j++){
    		if(lstack.empty()){
    			lstack.push(j);
    			no_left = 0;
    		}
    		else{
    			while(!lstack.empty() && arr[lstack.top()] < arr[j]){
    				lstack.pop();
    			}
    			if(lstack.empty()){
    				no_left = j;
    			}
    			else{
    				no_left = j - lstack.top();
    			}
    			lstack.push(j);
    		}
    		
    		
    		if(rstack.empty()){
    			rstack.push(n-j-1);
    			no_right = 0;
    		}
    		else{
    			while(!rstack.empty() && arr[rstack.top()] < arr[n-j-1]){
    				rstack.pop();
    			}
    			if(rstack.empty()){
    				no_right = j;
    			}
    			else{
    				no_right = rstack.top() - (n-j-1);
    			}
    			rstack.push(n-j-1);
    		}
    		
    		left[j] = no_left;
    		right[n-j-1] = no_right;
    		
    		
    		
    		
    	}
    	long int max = 0;
    	int index = 0;
        for(int j = 0; j < n ; j++){
        	long int s = (j+1) * (left[j]+right[j]) % 1000000007;
        	if(j==0){
        		max = s;
        		index =0;
        	}
        	else{
        		if(max < s){
        			max = s;
        			index = j;
        		}
        	}
        }
        cout<<index+1<<endl;
    }
}
