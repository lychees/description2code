#include <iostream> 
#include <cstring> 

using namespace std;


int n;
int m;
int mt=0;
int inf=-999999;
char a[300][300];
int dp[300][300];
int k[300][300];

inline void fi(int *a)
{
    register char c=0;
    while (c<33) c=getchar_unlocked();
    *a=0;
    while (c>33)
    {
        *a=*a*10+c-'0';
        c=getchar_unlocked();
    }
}

inline void fs(char *str)
{
    register char c=0;
    register int i = 0;
    while (c < 33)
        c = getchar_unlocked();
    while (c > 65)
    {
        str[i] = c;
        c = getchar_unlocked();
        i = i + 1;
    }

    str[i] = '\0';
}


int main(void) {
	
	
	    int t;
	    cin>>t;
	    while(t>0)
	    {
	    	t--;
	   
	    fi(&n);
	    fi(&m);
	    	for(int i=0;i<n;i++)
	    	{
	    		for(int j=0;j<m;j++)
	    		{
	    		fs(&a[i][j]);
	    if(a[i][j]=='T')
	    {k[i][j]=150;}
	    else
	    {k[i][j]=-100;}
	    	}
	    
	    	}
	    	k[n-1][m-1]=0;
	
	    	if(a[0][0]=='D')
	    	cout<<"-1"<<endl;
	    	else
	    	{
	    		for(int i=0;i<n;i++)
	    		{
	    		    for(int j=0;j<m;j++)
	    		    {
	    		      if(i==0&&j==0)
	    		      {
	    		      	if(a[i][j]=='T')
	    		          dp[i][j]=150;
	    		          else 
	    		          dp[i][j]=0;
	    		      }
	    		      else if(j==0)
	    		      {
	    		      dp[i][j]=dp[i-1][j]+k[i][j];
	    		      }
	    		  else if(i==0)
	    		  { 
	    		      dp[i][j]=dp[i][j-1]+k[i][j];
	    		  }
	    		  else
	    		  { 
	    		      dp[i][j]=dp[i-1][j]+k[i][j];
	    		      dp[i][j]=max(dp[i][j],dp[i][j-1]+k[i][j]);
	    		  }
	    		  if(dp[i][j]<0)
	    		  dp[i][j]=inf;
	    		  
	    		        
	    		    }
	    		}
	if(dp[n-1][m-1]>=0)
	    cout<<dp[n-1][m-1]<<endl;
	    else 
	    cout<<"-1"<<endl;
	    }
	    }
	    
	
	
}
