#include <stdio.h>
#define INF_NUM 100000000
int n,ar[105],arr[105],dp[105][105];
int min(int a,int b) { return (a<b?a:b); }
int fun(int a,int b)
{
	if(a>b) 
		return 0;
 	if(dp[a][b]<INF_NUM) 
	 	return dp[a][b];
 	if((a==b) || ((a+1)==b)) 
	 	return dp[a][b]=(b-a+1);
 	
	int &ans=dp[a][b];
 	
	ans=min(ans,(1+fun(a+1,b)));
 	ans=min(ans,(1+fun(a,b-1)));
 	if(arr[a]==arr[b]) 
	 	ans=min(ans,(1+fun(a+1,b-1)));
 	int i;
 	for(i=a+1;i<=b;i++) 
	 	if(arr[i]==arr[a])
		{
  			ans=min(ans,(1+min(fun(a+1,i-1),(fun(a,i-1)-1))+min((fun(i,b)-1),fun(i+1,b))));
 		}

 return ans;
}

void solve()
{
	int i,j,k=0;
 	for(i=0;i<n;i++) 
	{
  		arr[k++]=ar[i];
  		for(j=i;j<n;j++) 
		{
   			if(ar[i]!=ar[j]) 
			   break;
		}
  		i=j-1;
	}
 n=k;
}

int main() 
{
	int tc;
 	scanf("%d",&tc);
 	while(tc--) 
	{
		int i,j,ans;
  		scanf("%d",&n);
  		for(i=0;i<n;i++) 
		  	scanf("%d",&ar[i]);
  		solve();
  		for(i=0;i<n;i++)  
		  for(j=0;j<n;j++)
		    dp[i][j]=INF_NUM;
  		ans=fun(0,n-1);
  		printf("%d\n",ans);
	}
return 0;
}