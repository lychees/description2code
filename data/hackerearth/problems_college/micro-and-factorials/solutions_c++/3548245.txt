
// rishabhtw07 (Pyazz_Kachori)
#include<bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(i=a;i<b;++i)
#define FORD(i,a,b) for(i=a;i>=b;--i)
#define ll long long
#define mp make_pair
#define pb push_back
#define MOD 1000000007
#define infi 1000000007
#define s(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define sd(x) scnaf("%lf", &x)
#define fi first
#define se second
#define p(x) printf("%d",x)
#define pl(x) printf("%lld", x)
#define pd(x) printf("%lf", x)
#define pn() printf("\n")

ll n;
int has[100005];
int prime[100005];

vector<int> pr;
ll precom[100005];

int pwr(ll base, ll po)
{
    if(!po)
        return 1;
    ll ret;
    if(po % 2) {
        ret = pwr(base, po - 1);
        ret *= base;
        ret %= MOD;
    } else {
        ret = pwr(base, po / 2);
        ret *= ret;
        ret %= MOD;
    }
    return ret;
}

void sieve()
{
    ll i, j, k;
    FOR(i, 2, 100005) {
        if(!prime[i]) {
            pr.pb(i);

            for(j = i; j < 100005; j += i) {
                if(!prime[j])
                    prime[j] = i;
            }
        }
    }


    precom[1] = 1;
    map<int, int> ma;
    ll t1, tmp, val, id;
    map<int, int> :: iterator pt1;

    FOR(i, 2, 100005) {
        ma.clear();
        tmp = i;

        //cout << i  <<endl;
        while(tmp != 1) {
            ma[prime[tmp]]++;
            val = prime[tmp];
            tmp /= val;
        }
        //cout <<" "<<i <<endl;
        t1 = precom[i - 1];
        for(pt1 = ma.begin(); pt1 != ma.end(); ++pt1) {
            id = pt1->fi;
            val = pt1->se;

            t1 *= pwr(has[id] + 1, MOD - 2);
            t1 %= MOD;

            t1 *= (has[id] + val + 1);
            t1 %= MOD;
            has[id] += val;
        }
        precom[i] = t1;


    }


}

int main()
{
    sieve();
    //cout <<"c 1 "<<endl;
    int t, x, y;
    ll val;
    cin >> t;
    while(t--) {
        cin >> x >> y;
        if(y > x) {
            cout << 0 << endl;
        } else {
            val = precom[x] - precom[y] + MOD;
            val %= MOD;

            cout << val << endl;
        }
    }
}
