#include <iostream>
#include <fstream>
#include <cstdio>
#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
#include <iomanip>
#include <set>
#include <ctime>
#include <map>

using namespace std;

#define REP(i, n) for(int (i) = 0; (i) < int (n); (i)++)
	
int binarysearch(int a[], int low, int high, int s, bool firstsearch){
	int res = 0;    
	while(low <= high){
		int mid = low + (high - low) / 2;
		if(s == a[mid]){
			res = mid;
      if(firstsearch){
			high = mid - 1;
      }
      else low = mid + 1;
   }
   if(s > a[mid]){
		low = mid + 1;
   }
   if(s < a[mid]) high = mid - 1;
  }
  return res;
}
	
int main(){
	int n;
	cin >> n;
	int a[n];
	REP(i, n) cin >> a[i];
	sort(a, a + n);
	int q;
	cin >> q;
	REP(i, q){
		int l, r, lx = 0, rx = 0;
		cin >> l >> r;	
		if(l > a[n - 1] && r > a[n - 1]) cout << "0" << endl;
		if(l <= a[n - 1] && r > a[n - 1]){
			REP(j, n){
				if(a[j] >= l){
					l = a[j];
					break;
				}
			}
			cout << n - binarysearch(a, 0, n - 1, l, true) << endl;
		}
		if(l <= a[n - 1] && r <= a[n - 1]){
			if(!binarysearch(a, 0, n - 1, l, true)){
				REP(j, n){
					if(a[j] >= l){
						l = a[j];
						break;
					}
				}
			}
			if(!binarysearch(a, 0, n - 1, r, false)){
				for(int j = 0; j < n; j++){
					if(a[j] <= r){
						rx = a[j];
					}
				}
				r = rx;
			}
			cout << binarysearch(a, 0, n - 1, r, false) - binarysearch(a, 0, n - 1, l, true) + 1 << endl;
		}
	}
	return 0;
}