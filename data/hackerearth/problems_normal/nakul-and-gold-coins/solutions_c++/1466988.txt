#include <bits/stdc++.h>
using namespace std;

const int MAX = 1000000, C = 100000000;
vector<bool> sieve(MAX + 1);
vector<long> pr;
vector<int> sc;

int sl(int l)
{
	int a = -1, b = sc.size() - 1;
	while (a + 1 < b) {
		int c = (a + b) / 2;
		if (sc[c] < l)
			a = c;
		else
			b = c;
	}
	if (sc[b] < l)
		b++;
	return b;
}

int sr(int r)
{
	int a = 0, b = sc.size();
	while (a + 1 < b) {
		int c = (a + b) / 2;
		if (sc[c] <= r)
			a = c;
		else
			b = c;
	}
	if (sc[a] > r)
		a--;
	return a;
}

int main()
{
	ios::sync_with_stdio(false);
	for (int i = 2; i <= MAX; i++)
		if (!sieve[i]) {
			pr.push_back(i);
			for (int j = i; j <= MAX; j += i)
				sieve[j] = true;
		}
	for (int i = 0; i < pr.size() - 1; i++)
		for (int j = i + 1; j < pr.size() && pr[i] * pr[j] <= C; j++)
			sc.push_back(pr[i] * pr[j]);
	sort(sc.begin(), sc.end());
	int t;
	cin >> t;
	for (int i = 0; i < t; i++) {
		int l, r;
		cin >> l >> r;
		//cout << sl(l) << ' ' << sr(r) << '\n';
		cout << sr(r) - sl(l) + 1 << '\n';
	}
}