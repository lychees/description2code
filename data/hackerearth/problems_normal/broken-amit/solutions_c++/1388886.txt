#include <iostream>
using namespace std;
int n,ar[20],br[20];
long long dp[5+(1<<17)];
long long fun(int mask,int step)
{
	//printf("mask=%d step=%d\n",mask,step);
	long long x=0,ans;
	ans=-10000000000000000LL;
	if(step==n)
		return 0;
	if(dp[mask]!=ans)
		return dp[mask];
	for(int i=0;i<n;i++)
	{
		if((mask&(1<<i))==0)
		{
			x+=(ar[i]-step*br[i]*i);
		}
	}
	for(int i=0;i<n;i++)
	{
		if((mask&(1<<i))==0)
		{
	//		printf("i=%d step=%d x=%lld\n",i,step,x+(n-1-step)*(ar[i]-step*br[i]*i));
			ans=max(ans,x+(n-1-step)*(ar[i]-step*br[i]*i)+fun(mask|(1<<i),step+1));
		}
	}
	return dp[mask]=ans;
}
	
int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    	scanf("%d",ar+i);
    for(int i=0;i<n;i++)
    	scanf("%d",br+i);
    for(int i=1<<n;i>=0;i--)
    	dp[i]=-10000000000000000LL;
    printf("%lld\n",fun(0,0));
    return 0;
}
