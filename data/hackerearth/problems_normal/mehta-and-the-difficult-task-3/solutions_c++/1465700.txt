#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <vector>
#include <algorithm>
#include <stack>
#include <math.h>
#include <queue>

#define ll long long int
#define maxn 100000
#define mod 1000000007
#define sieve_max 1000000

using namespace std;

vector<vector<vector<vector<ll> > > > base; 

ll check[2][2][2] = {{{0, 0}, {1, 1}}, {{1, 0}, {0, 1}}};

vector<vector<vector<vector<ll> > > > calc(ll n)
{
	if(n==1)
		return base;

	vector<vector<vector<vector<ll> > > > temp, ret;
	temp = calc(n/2);
	ret = temp;



	for(ll i=0; i<2; i++)
	{
		for(ll j=0; j<2; j++)
		{
			for(ll k=0; k<2; k++)
			{
				for(ll l=0; l<2; l++)
				{
					ret[i][j][k][l] = 0;
					for(ll p=0; p<2; p++)
					{
						for(ll q=0; q<2; q++)
						{
							for(ll r=0; r<2; r++)
							{
								for(ll s=0; s<2; s++)
								{
									ret[i][j][k][l] = (ret[i][j][k][l] + (temp[check[i][p][0]][check[j][q][0]][check[k][r][0]][check[l][s][0]]*temp[check[i][p][1]][check[j][q][1]][check[k][r][1]][check[l][s][1]])%mod)%mod;
								}
							}
						}
					}
				}
			}
		}
	}

	if(n&1)
	{
		for(ll i=0; i<2; i++)
		{
			for(ll j=0; j<2; j++)
			{
				for(ll k=0; k<2; k++)
				{
					for(ll l=0; l<2; l++)
					{
						temp[i][j][k][l] = 0;
						for(ll p=0; p<2; p++)
						{
							for(ll q=0; q<2; q++)
							{
								for(ll r=0; r<2; r++)
								{
									for(ll s=0; s<2; s++)
									{
										temp[i][j][k][l] = (temp[i][j][k][l] + (ret[check[i][p][0]][check[j][q][0]][check[k][r][0]][check[l][s][0]]*base[check[i][p][1]][check[j][q][1]][check[k][r][1]][check[l][s][1]])%mod)%mod;
									}
								}
							}
						}
					}
				}
			}
		}

		for(ll i=0; i<2; i++)
			for(ll j=0; j<2; j++)
				for(ll k=0; k<2; k++)
					for(ll l=0; l<2; l++)
						ret[i][j][k][l] = temp[i][j][k][l];
	}

	return ret;
}



int main()
{

	vector <ll> t;
	t.push_back(0);
	t.push_back(0);

	vector<vector<ll> > tt;
	tt.push_back(t);
	tt.push_back(t);

	vector<vector<vector<ll> > > ttt;
	ttt.push_back(tt);
	ttt.push_back(tt);

	base.push_back(ttt);
	base.push_back(ttt);


	base[0][0][0][0] = 6;
	base[0][0][0][1] = 1;
	base[0][0][1][0] = 1;
	base[0][0][1][1] = 0;
	base[0][1][0][0] = 1;
	base[0][1][0][1] = 0;
	base[0][1][1][0] = 0;
	base[0][1][1][1] = 0;

	base[1][0][0][0] = 1;
	base[1][0][0][1] = 0;
	base[1][0][1][0] = 0;
	base[1][0][1][1] = 0;
	base[1][1][0][0] = 0;
	base[1][1][0][1] = 0;
	base[1][1][1][0] = 0;
	base[1][1][1][1] = 0;

	ll ta;
	cin>>ta;

	while(ta--)
	{
		ll n, a, b, c, d;
		cin>>n>>a>>b>>c>>d;
		vector<vector<vector<vector<ll> > > > ans = calc(n);
		cout<<ans[a][b][c][d]<<endl;
	}

	return 0;
}