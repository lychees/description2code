#include <bits/stdc++.h>
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define UP upper_bound
#define LB lower_bound
#define LL long long 
#define Pi 3.14159265358
#define si size()
#define en end()
#define be begin()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define ii set<int>::iterator
#define Tree int ind, int L, int R
#define Left 2*ind,L,(L+R)/2
#define Right 2*ind+1,(L+R)/2+1,R
using namespace std;
LL f[100001];
LL l[100001];
LL r[100001];
LL a[100001];
LL ans[100001];
LL n, m, k, i, j, D, q, L, R;
LL res, cur;
vector < pair < pair < LL , LL > , LL > > v;
main(){
	  // freopen("sqr.in","r",stdin);
	  // freopen("sqr.out","w",stdout);
	   scanf("%d%d%d",&n,&m,&D);
	   q=sqrt(n);
	   for(i=1;i<=n;i++)
	     cin>>a[i];
	   for(i=1;i<=m;i++)
	    {
	     scanf("%d%d",&l[i],&r[i]);
		 v.pb(mp(mp(l[i]/q,r[i]),i));	
		} 
	   sort(v.be,v.en);
	   for(i=0;i<v.si;i++)
	    {
	     if(i==0 || v[i].fi.fi!=v[i-1].fi.fi)
		  {
		   memset(f,0,sizeof(f));
		   res=0;
		   L=R=l[v[i].se]; R--;	
		  }
		 while(R<r[v[i].se])
		  {
		   R++; f[a[R]]=1; cur=0;	 
		   for(j=max(a[R]-D,1ll);j<=min(n,a[R]+D);j++)
		     cur+=f[j];
		   res+=cur;  	
		  }
		 while(L<l[v[i].se])
		  {
		   cur=0;	
		   for(j=max(a[L]-D,1ll);j<=min(n,a[L]+D);j++)
		     cur+=f[j];
		   f[a[L]]=0;
		   res-=cur;
		   L++;	 	
		  }  
		 while(L>l[v[i].se])
		  {
		   L--; f[a[L]]=1; cur=0;	
		   for(j=max(a[L]-D,1ll);j<=min(n,a[L]+D);j++)
		     cur+=f[j];
		   res+=cur; 	
		  }
		 ans[v[i].se]=res;
		}
		for(i=1;i<=m;i++)
		  cout<<ans[i]<<endl;
       }