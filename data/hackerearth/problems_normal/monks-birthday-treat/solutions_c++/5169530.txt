#include<iostream>
#include<vector>
#include<queue>

using namespace std;

int bfs(int g,vector<int> frienda[])
{
    bool visited[10000];
    for(int k=0;k<10000;k++)
        visited[k]=0;
    int licznik=0;
    queue<int> kolejka;
    kolejka.push(g);

    while(!kolejka.empty())
    {
        int cur=kolejka.front();
        visited[cur]=1;
        kolejka.pop();
        for(int i=0;i<frienda[cur].size();i++)
        {
            if(visited[frienda[cur].at(i)]==0)
            {
                visited[frienda[cur].at(i)]=1;
                kolejka.push(frienda[cur].at(i));
            }
        }
        licznik++;
    }
    return licznik;

}

int main()
{
    int n,d;
    int mini=999999999;
    vector<int> frienda[10000];
    cin >> n;
    cin >> d;

    for(int k=0;k<d;k++)
    {
        int a,b;
        cin >> a;
        cin >> b;
        frienda[a].push_back(b);
    }

    for(int g=1;g<=n;g++)
    {
        int pom;
        pom=bfs(g,frienda);
        if(pom<mini)
            mini=pom;
    }
    cout << mini << endl;
    return 0;
}
