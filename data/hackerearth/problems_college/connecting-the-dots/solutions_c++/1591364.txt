#include <bits/stdc++.h>
using namespace std;
#define ll long long

vector < vector < pair < int, int >>>g;
int dist[1005][4];

int main() {
    ios_base::sync_with_stdio(0);
    int n, m;
    cin >> n >> m;

    assert(n <= 1000);
    g.resize(n + 1);
    while (m-- > 0) {
        int u, v, c;
        cin >> u >> v >> c;
        g[u].push_back(make_pair(v, c));
    }
    queue < pair < int, int >>que;
    que.push(make_pair(1, -1));
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= 3; j++) {
            dist[i][j] = 1000000000;
        }
    }
    dist[1][1] = dist[1][2] = dist[1][3] = 0;
    while (!que.empty()) {
        pair < int, int >x = que.front();
        que.pop();
        int u = x.first;
        int l = x.second;
        for (int i = 0; i < g[u].size(); i++) {
            int y = g[u][i].first;
            int c = g[u][i].second;
            if (c == l)
                continue;
            if (l == -1) {
                if (dist[u][1] + 1 < dist[y][c]) {
                    dist[y][c] = dist[u][1] + 1;
                    que.push(make_pair(y, c));
                }
            } else if (dist[u][l] + 1 < dist[y][c]) {
                dist[y][c] = dist[u][l] + 1;
                que.push(make_pair(y, c));
            }
        }
    }
    int ans = dist[n][1];
    ans = min(ans, dist[n][2]);
    ans = min(ans, dist[n][3]);
    if (ans < 1000000000)
        cout << ans;
    else
        cout << "-1";
    return 0;
}
