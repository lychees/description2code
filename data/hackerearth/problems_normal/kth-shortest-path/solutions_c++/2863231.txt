#include <iostream>
#include<bits/stdc++.h>
#include<limits.h>
#include<vector>
using namespace std;


int main()
{
   int mat[101][101];
   bool obs[101][101];
   vector<int> dp[101][101];
    int t;
    cin>>t;
    while(t--)
    {
    	int m,n;
    	cin>>m>>n;
    	memset(obs,0,sizeof(obs));
	
    	for(int i=0;i<m;i++)
    	{
    		for(int j=0;j<n;j++)
    		{
    			string s;
    			cin>>s;
    			if(s=="##")
    			{
    			  mat[i][j]=INT_MAX;
    			  obs[i][j]=1;
    			}  
    			else
    			  mat[i][j]=atoi(&s[0]);
    			  dp[i][j].clear();
    		}
    	}
    	dp[0][0].push_back(mat[0][0]);
	for(int i=1;i<m;i++)
    	{
    		if(!obs[i][0])
    		{
    			if((int)dp[i-1][0].size()>0)
    			  dp[i][0].push_back(mat[i][0]+dp[i-1][0][0]);
    			  
    		}
    	}
    	for(int i=1;i<n;i++)
    	{
    		if(!obs[0][i])
    		{
    			if((int)dp[0][i-1].size()>0)
    			  dp[0][i].push_back(mat[0][i]+dp[0][i-1][0]);
    			  
    		}
    	}
    	for(int i=1;i<m;i++)
    	{
    		for(int j=1;j<n;j++)
    		{
    			if(!obs[i][j])
    			{
    				int s1=(int)dp[i-1][j].size();
    				int s2=(int)dp[i][j-1].size();
					//cout<<"s1= "<<s1<<" s2= "<<s2<<endl;
    				int x=0,y=0,count=0;
    				while(x<s1 && y<s2 && count<=101)
    				{
    					if(dp[i-1][j][x] < dp[i][j-1][y])
    					    dp[i][j].push_back(mat[i][j]+dp[i-1][j][x++]);
    					else
    					    dp[i][j].push_back(mat[i][j]+dp[i][j-1][y++]);
    					count++;    
    					
    				}
    				while(x<s1 && count <=101)
    				{
    					dp[i][j].push_back(mat[i][j]+dp[i-1][j][x++]);
    					count++;
    				}
    				while(y<s2 && count <=101)
    				{
    					dp[i][j].push_back(mat[i][j]+dp[i][j-1][y++]);
    					count++;
    				}
    				
    				
    			}
    		}
    	}
				
    	int q;
    	cin>>q;
    	while(q--)
    	{
    		int tx,ty,k;
    		cin>>tx>>ty>>k;
    		if(obs[tx][ty]==1)
    		   cout<<"Obstacle"<<endl;
    		else if(dp[tx][ty].size()<k)
    		   cout<<"Not so many paths"<<endl;
    		else
    		   cout<<dp[tx][ty][k-1]<<endl;
    	}	   
    }
    	
    	
    
    return 0;
}
			
