#include <iostream>
#include <vector>
#include <string>
#include <iomanip>
#include <boost/algorithm/string.hpp>
using namespace std;

int main()
{
    string strTemp;
    int numSample;
    double temp3,avfuel;
    std::vector<std::string> vspeed,vconsump;
    std::vector<double> vdistance;
    getline(cin,strTemp);
    numSample=stoi(strTemp);
    getline(cin,strTemp);
    boost::split(vspeed, strTemp, boost::is_any_of("\t "));
    getline(cin,strTemp);
    boost::split(vconsump, strTemp, boost::is_any_of("\t "));
    getline(cin,strTemp);
    avfuel=stod(strTemp);
    
    for (int i=0;i<numSample;i++)
    {
    //	cout <<"avfuel="<<avfuel<<", vconsump[i]"<<vconsump[i]<<", vspeed[i]"<<vspeed[i]<<endl;
        temp3=avfuel/stod(vconsump[i])*stod(vspeed[i]);
        //cout << "temp3="<<setprecision (3) << fixed <<temp3<<endl;
        vdistance.push_back(temp3);
    }
    string result = std::to_string(*max_element(vdistance.begin(),vdistance.end()));
    std::size_t pos;
    pos=result.find('.');
    std::string strResult = result.substr (0,pos+4);   
    cout <<strResult<<endl;
   // cout  << setprecision (4) << fixed<< *max_element(vdistance.begin(),vdistance.end());
    
   // printf("%.3f\n", *max_element(vdistance.begin(),vdistance.end()));
    return 0;
}
