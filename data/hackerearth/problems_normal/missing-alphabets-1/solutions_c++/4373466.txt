#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;

int alphabet_ind[26] = {0};

int min(int a , int b){
if(a<b) return a;
else return b;
}

int compare(char a[], char b[]){

//printf("%s %s\n",a,b);
int l = min(strlen(a),strlen(b));
int i;
for(i=0;i<l;i++){
    if(a[i]!=b[i]){
 //           printf("%c %c %d %d\n",a[i],b[i],alphabet_ind[a[i]-'a'],alphabet_ind[b[i]-'a']);
            return (alphabet_ind[a[i]-'a'] - alphabet_ind[b[i]-'a']) ;
    }
}
return 0;

}



void merge(char arr[][51], int lower , int upper,char temp[][51]){

int mid = (lower + upper)/2;
int i=lower,j=mid+1,k=lower;
int c ;
while(i<=mid && j<=upper){
     c= compare(arr[i],arr[j]);
  //   printf("** %s %s %d\n",arr[i],arr[j],c);
    if(c<0){
        strcpy(temp[k],arr[i]);
        k = k + 1;
        i= i + 1;
    }
    else if(c==0){
        if(strlen(arr[i])<strlen(arr[j])){
        strcpy(temp[k],arr[i]);
        k = k + 1;
        i= i + 1;
        }
        else{
        strcpy(temp[k],arr[j]);
        k = k + 1;
        j = j + 1;
        }
    }
    else{
        strcpy(temp[k],arr[j]);
        k = k + 1;
        j = j+1;
    }
}
while(i<=mid){
strcpy(temp[k],arr[i]);
        k = k + 1;
        i= i + 1;
}
while(j<=upper){
    strcpy(temp[k],arr[j]);
        k = k + 1;
        j = j + 1;
}
for(i=lower;i<k;i++){
    strcpy(arr[i],temp[i]);
}

}

void merge_sort(char arr[][51], int lower , int upper ,char temp[][51]){

if(lower>=upper) return ;
int mid = (lower + upper )/2;
merge_sort(arr , lower , mid , temp);
merge_sort(arr, mid+1 , upper,temp);
merge(arr , lower , upper ,temp);
}



int main(){

int t;
cin>>t;
while(t--){
string alphabet;
cin>>alphabet;
int n,i;
for(i=0;i<26;i++) alphabet_ind[alphabet[i]-'a'] = i ;
cin>>n;
char arr[101][51];
char temp[101][51];
for(i=0;i<n;i++){
scanf("%s",arr[i]);
}

merge_sort(arr,0,n-1,temp);
for(i=0;i<n;i++) printf("%s\n",arr[i]);

}

return 0;

}
