#include<bits/stdc++.h>
#define mp make_pair 
#define ll long long int
using namespace std;
vector<ll> adj[1000006];
bool visited[1000006];
ll concomp[1000006];
void dfs(ll v,ll idx)
{
	visited[v]=true;
	concomp[v]=idx;
	for(ll i=0;i<adj[v].size();i++)
	{
		if(!visited[adj[v][i]])
		{
			visited[adj[v][i]]=true;
			dfs(adj[v][i],idx);
		}
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	ll n,k,i,j,t,x1,x2;
	string str;
	cin>>t;
	while(t--)
	{
		vector<pair<ll,ll> > inequaledge;
		cin>>n>>k;
		for(i=0;i<=n;i++)
		{
			adj[i].clear();
		}
		memset(visited,false,sizeof(visited));
		//memset(concomp,-1,sizeof(concomp));
		for(i=0;i<k;i++)
		{
			cin>>x1>>str>>x2;
			if(str== "=")
			{
				adj[x1].push_back(x2);
				adj[x2].push_back(x1);
			}
			else
			{
				//printf("getting problem here\n");
				inequaledge.push_back(mp(x1,x2));
			}
		}
		for(i=1;i<=n;i++)
		{
			if(!visited[i])
			{
				dfs(i,i);
			}
		}
		//printf("i m here\n");
		ll flag=0;
		for(i=0;i<inequaledge.size();i++)
		{
			x1=inequaledge[i].first;
			x2=inequaledge[i].second;
			if(concomp[x1]==concomp[x2])
			{
				flag=1;
				break;
			}
		}
		if(flag)
		{
			printf("NO\n");
		}
		else
		{
			printf("YES\n");
		}
	}
	return 0;
}

