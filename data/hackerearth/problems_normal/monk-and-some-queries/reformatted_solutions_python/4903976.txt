import sys
import heapq
import traceback


def insert(x):
    if count[x] == 0:
        heapq.heappush(maxq, -x)
        heapq.heappush(minq, x)
        count[x] += 1
    else:
        count[x] += 1


def remove(x):

    if count[x] == 0:
        return False
    else:
        count[x] -= 1
        return True


def minim():

    if len(minq) == 0:
        return -1

    while count[minq[0]] == 0 and len(minq) > 0:
        heapq.heappop(minq)
    if len(minq) == 0:
        return -1
    return minq[0]


def maxim():
    if len(maxq) == 0:
        print 0
        return -1
    while len(maxq) > 0 and count[abs(maxq[0])] == 0:
        heapq.heappop(maxq)
    if len(maxq) == 0:
        return -1
    return -maxq[0]


maxq = []
minq = []
n = int(raw_input())
count = [0]*100005
for i in xrange(n):
    arr = [int(x) for x in str(sys.stdin.readline()).split()]
    if arr[0] == 1:
        insert(arr[1])
    elif arr[0] == 2:
        res = remove(arr[1])
        if not res:
            print -1
    elif arr[0] == 3:
        print maxim()
    else:
        print minim()
