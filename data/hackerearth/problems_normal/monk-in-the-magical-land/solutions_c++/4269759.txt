#include <bits/stdc++.h>
using namespace std;
int X[30];
int Z[200];
int C[200];
int vis[200];
vector<int>stores[30];
vector<int>keys;
int main()
{
    int t,n,m,k;
    cin>>t;
    while(t--)
    {
    	cin>>n>>m>>k;
    	for(int i=0;i<n;i++)
    	cin>>X[i];
    	for(int i=0;i<m;i++)
    	cin>>C[i];
    	for(int i=0;i<m;i++)
    	cin>>Z[i];
    	for(int j=0;j<n;j++)
    	{
    		for(int i=0;i<m;i++)
    		if(__gcd(X[j],C[i])>1)
    			stores[j].push_back(i);
    	}
    	long long mx=-1;
    	long long ctr;
    	for(int mask=0;mask<(1<<n);mask++)
    	{
    		if(__builtin_popcount(mask)==k)
    		{
    			for(int j=0;j<n;j++)
    			{
    				if(mask&(1<<j))
    					keys.push_back(j);
    			}
    		}
    	}
    	int sz=keys.size();
    	int col=0;
    	for(int i=0;i+k-1<sz;i+=k)
    	{
    		ctr=0;
    		col++;
    			for(int j=i;j<i+k;j++)
    			{
    				int sk=stores[keys[j]].size();
    				for(int x=0;x<sk;x++)
    				{
    					if(vis[stores[keys[j]][x]]!=col)
    					{
    						ctr+=Z[stores[keys[j]][x]];
    						vis[stores[keys[j]][x]]=col;
    					}
    				}
    			}
    		mx=max(mx,ctr);
    	}
    	keys.clear();
    	memset(vis,0,sizeof(vis));
    	for(int i=0;i<30;i++)
    	stores[i].clear();
    	cout<<mx<<"\n";
    }
    return 0;
}
