#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <iostream>
#include <map>
#include <memory>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <vector>
#define BASE 1000000
using namespace std;
typedef long long LL;
int next[BASE][10], cost[BASE][10];
LL n, ans;
int getmax(LL n) {
  int tmp = -1 << 30;
  while (n != 0) {
    tmp = max(tmp, int(n % 10));
    n /= 10;
  }
  return tmp;
}
int main() {
  scanf("%I64d", &n);
  for (int i = 0; i < BASE; i++)
    for (int j = 1; j <= 9; j++) {
      int m = max(getmax(i), j);
      if (i - m < 0) {
        next[i][j] = 1;
        cost[i][j] = m;
      } else {
        next[i][j] = next[i - m][j] + 1;
        cost[i][j] = cost[i - m][j] + m;
      }
    }
  while (n >= BASE) {
    int m = getmax(n / BASE);
    ans += next[n % BASE][m];
    n -= cost[n % BASE][m];
  }
  while (n > 0) {
    int m = getmax(n);
    ans++;
    n -= m;
  }
  printf("%I64d\n", ans);
  return 0;
}