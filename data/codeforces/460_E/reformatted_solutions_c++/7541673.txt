#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define xx first
#define yy second
const int N = 100;
typedef pair<int, int> ii;
vector<ii> v;
int n, r;
int lim;
int res;
ii ans[N], tmd[N];
int sq(int h) { return h * h; }
int dis(ii a, ii b) { return sq(a.xx - b.xx) + sq(a.yy - b.yy); }
bool cmp(ii a, ii b) { return dis(a, ii(0, 0)) > dis(b, ii(0, 0)); }
void dfs(int id, int cont, int maxdis) {
  if (id >= lim)
    return;
  if (cont == n) {
    if (maxdis > res) {
      res = maxdis;
      for (int i = 0; i < n; i++)
        ans[i] = tmd[i];
    }
    return;
  }
  dfs(id + 1, cont, maxdis);

  int now = 0;
  for (int i = 0; i < cont; i++)
    now += dis(v[id], tmd[i]);
  tmd[cont] = v[id];
  dfs(id, cont + 1, now + maxdis);
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("in.txt", "r", stdin);
#endif
  cin >> n >> r;
  ii yuan(0, 0);
  int dist = sq(r);
  for (int i = -r; i <= r; i++) {
    for (int j = -r; j <= r; j++) {
      if (dist >= dis(ii(i, j), yuan))
        v.push_back(ii(i, j));
    }
  }

  sort(v.begin(), v.end(), cmp);
  lim = min(35, (int)v.size());

  res = 0;
  dfs(0, 0, 0);
  cout << res << endl;
  for (int i = 0; i < n; i++) {
    cout << ans[i].xx << ' ' << ans[i].yy << endl;
  }
  return 0;
}
