#include <bits/stdc++.h>
using namespace std;

//0 1->codeforces
#define LL "%lld"
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define PN printf("\n")
#define MODV 1000000007
#define MAXN 800007

typedef long long ll;
typedef double dbl;
typedef vector<ll> vi;
typedef vector<bool> vb;
typedef pair<int, int> pi;
void addmod(int &a, ll b){a=(a+b); if(a>=MODV)a-=MODV;}
void mulmod(int &a, ll b){a=(a*b)%MODV;}
int gi(){int a;scanf("%d",&a);return a;}
ll gll(){ll a;scanf(LL,&a);return a;}

int gcd(int a, int b){
  if(b==0)return a;
  return gcd(b,a%b);
}

int main() {
  int n=gi(), m=gi();
  ll cn=0;
  vi c(m+1);
  vector<set<int>> t(m+1);
  vb can(MAXN,true);
  for(auto i=1;i<=m;i++){c[i]=gi();}
  for(int i=1;i<=m;i++){
    t.clear();
    fill(can.begin(),can.end(),true);
    for(int j=i+1;j<=m;j++){
      int g=gcd(c[i],c[j]);
      t[i].insert(c[j]/g);
    }
    //for(auto j:t){
    //  if(!can[j]) continue;
    //  for(int k=j;k<MAXN;k+=j)can[k]=false;
    //}
    //for(int j=1;j<MAXN;j++)
    //if(can[j]){st[i].pb(j);}
  }
  for(int i=0;i<n;i++){
    int tc=gi();
    //find a number greather than cn divisible by c[tc] and
    //not divisible by c[tc+1...]
    ll poss=cn/c[tc];
    bool found=true;
    while(found){
      poss++;
      found=false;
      for(auto it=t[tc].begin();it!=t[tc].end() && !found;it++){
        if(poss%(*it)==0)found=true;
      }
    }
    cn = (poss) * c[tc];
  }
  cout<<cn<<endl;
  return 0;
}
