// @adi28galaxyak
// Content: dp practice

#include "bits/stdc++.h"
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vi > vii;
typedef pair<int, int> pii;
#define FF first
#define SS second
#define pb(v) push_back(v)
#define mp(x,y) make_pair(x, y)
#define swap(x,y) x=x+y-(y=x)

#define s(n) scanf("%d",&n)
#define rep(i,start,end) for(int i = start;i<end;i++)

const int MAX = 1e4;
int v[110];
char DP[MAX+5];
void build(int n, int m){
    DP[0] = 'P';
    rep(i,1,n+1){
        bool ok = false;
        rep(j,0,m){
            if(i-v[j]<0) break;
            if(DP[i-v[j]]=='P'){
                ok = true;
                break;
            }
        }
        DP[i] = ok?'N':'P';
        //cout<<i<<" "<<DP[i]<<endl;
    }
}

int main(){
    int tt; s(tt);
    int m, n, x;
    while(tt--){
        s(m);s(n);
        rep(i,0,n)
            s(v[i]);
        sort(v, v+n);
        build(m, n);
        cout<<(DP[m]=='P'?"Kate":"Little Deepu")<<endl;
    }
}
