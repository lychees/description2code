#include <bits/stdc++.h>

using namespace std;
long long ans[502];
vector<int> prime,cnt;
void seive()
{
    bool a[510];
    memset(a,false,sizeof(a));
    for(int i=2; i<=500; i++)
    {
        if(a[i]==false)
        {
            prime.push_back(i);
            cnt.push_back(0);
            for(int j=i*i; j<=500; j+=i)
            {
                a[j]=true;
            }
        }
    }
}
void primeFactorise(int n)
{
    int i=0;
    while(i<prime.size() &&  n>=prime[i]) {
       // cout<<prime[i]<<' '<<n;
        while(n%prime[i]==0) {
    //cout<<prime[i]<<' '<<n;
            n=n/prime[i];
            //cout<<n;
           // cout<<n%prime[i];
            cnt[i]++;
        }
       // cout<<"here";
        i++;
    }
    //if(n>1) count
}
long long pow(long long a ,int b)
{
    long long res=1;
    while(b){
            res=res*a;
    b--;}
    return res;
}
void pre()
{
    seive();
    ans[1]=0;
    for(int i=2; i<=500; i++)
    {
        //cout<<i<<endl;
        primeFactorise(i);
        //cout<<i<<endl;
        ans[i]=ans[i-1];
        int  k=0;
        for(int j=0;j<prime.size();j++) {
            if(cnt[j]>0) k++;
        }
        //cout<<k<<endl;
        ans[i]+=pow(2,k-1);
       //cout<<i<<endl;
    }
}
int main()
{
    pre();
    int n;
    cin>>n;
    cout<<ans[n];
    return 0;
}
