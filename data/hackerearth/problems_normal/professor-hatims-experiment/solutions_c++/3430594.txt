#include<iostream>
#include<vector>
#include<queue>
using namespace std;
vector<int>graph[2005];
bool check[2005];//`, chck[20005];
int type[2005];
bool bfs(int source){
	queue<int>q;
	int i , t;
	q.push(source);
	check[source] = true;
//	chck[source] = true;
	type[source] = 0;
	while(!q.empty()){
		t = q.front();
	//	chck[t] = true;
		q.pop();
		for(i = 0; i < graph[t].size(); i++){
			if(check[graph[t][i]] != true){
				check[graph[t][i]] = true;
				if(type[t] == 0){
					type[graph[t][i]] = 1;
				}else{
					type[graph[t][i]] = 0;
				}
				q.push(graph[t][i]);
			}else{
				if(type[t] == type[graph[t][i]])
				return false;
			}
		}
	}
	return true;
}
int main(){
	int t, i, j, p, a, b, flag = 0, x, n;
	bool k;
	cin>>t;
	for(p =0 ; p < t; p++){
		cin>>x>>n;
		for(j = 1; j <= x; j++){
			graph[j].clear();
		}
		flag = 0;
		for(i = 0; i < n; i++){
			cin>>a>>b;
			graph[a].push_back(b);
			graph[b].push_back(a);
		}
		fill(type, type+x+5, -1);
	//	fill(chck, chck+x+5, false);
		fill(check, check+x+5, false);
		for(j = 1; j <= x; j++){
			if(!graph[j].empty() && check[j] != true){
				 k = bfs(j);
				if(k == false){
					flag = 1;
					break;
				}
			}
		}
	//	cout<<"Scenario #"<<p+1<<":"<<endl;
		if(flag == 1){
			cout<<"Suspicious lizards found!"<<endl;
		}else{
			cout<<"No suspicious lizards found!"<<endl;
		}
	}
	return 0;
}