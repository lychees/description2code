#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

bool flag;

vector<bool> vis;
vector<int> col;

vector<vector<int>> v;

void dfs(int u,int co)
{
	vis[u]=1;
	
	col[u]=co;
	
	for(auto x:v[u])
	{
		if( !vis[x] )
			dfs(x,!co);
		
		else if( col[u]==col[x] )
		{
			flag=0;
			break;
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(0);
	
	int t,n,m,i,j;
	
	for( cin>>t; t--; )
	{
		cin >> n >> m ;
		
		v.clear();
		v.resize(n+1);
		
		while(m--)
		{
			cin >> i >> j ;
			v[i].push_back(j);
			v[j].push_back(i);
		}
		
		vis.clear();
		vis.resize(n+1,0);
		
		col.clear();
		col.resize(n+1,-1);
		
		for( flag=i=1; i<=n; i++ )
		
			if( flag && !vis[i] )
				
				dfs(i,0);
		
		cout << ( flag ? "YES" : "NO" ) << endl ;
		
	}
    return 0;
}