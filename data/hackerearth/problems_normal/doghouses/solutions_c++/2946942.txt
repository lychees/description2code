#include <iostream>
#include <fstream>
#include <cstdio>
#include <vector>
#include <string>
#include <cstring>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <stack>
#include <complex>
#include <cstdlib>
#include <ctime>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;

const int MAXN = 1001;
int N;
int Y[MAXN];
vector<int> X[MAXN];
set<int> st;

int main()
{
	ios::sync_with_stdio(0);

	cin >> N;
	for (int i = 0; i < N; i++)
	{
		cin >> Y[i];
		X[Y[i]].push_back(i);
	}

	int best = 1;
	for (int i = 0; i < MAXN; i++)
		best = max(best, (int)X[i].size());

	for (int i = 0; i < MAXN; i++)
	{
		if (X[i].empty())
			continue;

		st.clear();
		for (int j = i + 1; j < MAXN; j++)
		{
			if (X[j].empty())
				continue;

			int cnt = X[i].size() + X[j].size();

			int left = min(X[i][0], X[j][0]);
			int right = max(X[i][(int)X[i].size() - 1], X[j][(int)X[j].size() - 1]);

			if (st.lower_bound(left) != st.begin())
				cnt++;
			if (st.lower_bound(right) != st.end())
				cnt++;

			best = max(best, cnt);

			for (int k = 0; k < X[j].size(); k++)
				st.insert(X[j][k]);
		}
	}

	cout << best << "\n";

	return 0;
}