#include<bits/stdc++.h>
using namespace std;


int minlength(string &A,string &B,string &C)
{
    string tmp1,tmp2;
    int l=0;
    bool match1=false,match2=false;
    for(int i=0;i<A.length();++i)
    {
        if((A.length()-i)<=B.length())
        {
            bool matched=true;
            int len=min(A.length()-i,B.length());
            for(int j=0;j<len;++j)
            {
                if(A[i+j]!=B[j])
                {
                    matched=false;
                    break;
                }
            }
            if(matched==true)
            {
                match1=true;
                l=(A.length()-i);
                break;
            }
        }
    }
    if(match1)
    {
        tmp1=A.substr(0,A.length()-l);
        tmp1+=B;
    }
    else
    {
        tmp1=A;
        tmp1+=B;
    }
    l=0;
        for(int i=0;i<tmp1.length();++i)
        {
            if((tmp1.length()-i)<=C.length())
            {
                bool matched=true;
                int len=min(tmp1.length()-i,C.length());
                for(int j=0;j<len;++j)
                {
                    if(tmp1[i+j]!=C[j])
                    {
                        matched=false;
                        break;
                    }
                }
                if(matched==true)
                {
                    match2=true;
                    l=(tmp1.length()-i);
                    break;
                }
            }
        }
    if(match2)
    {
        tmp2=tmp1.substr(0,tmp1.length()-l);
        tmp2+=C;
    }
    else
    {
        tmp2=tmp1;
        tmp2+=C;
    }
    return tmp2.length();
}


int main()
{
    string A,B,C;
    cin>>A;
    cin>>B;
    cin>>C;
    int l=(A.length()+B.length()+C.length());
    l=min(l,minlength(A,B,C));
    l=min(l,minlength(A,C,B));
    l=min(l,minlength(B,A,C));
    l=min(l,minlength(B,C,A));
    l=min(l,minlength(C,A,B));
    l=min(l,minlength(C,B,A));
    cout<<l;
    return 0;
}
