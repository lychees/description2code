#include <bits/stdc++.h>
#define maxN 100005
using namespace std;
vector<int>g[maxN];
set<int>v;
int used[maxN];
int level[maxN];
vector<int>A;
vector<int>B;
void bfs(int v)
{
	list<int>q;
	q.push_back(v);
	used[v] = 1;
	while(!q.empty()){
		int cur = q.front();
		q.pop_front();
		for(int i=0;i<g[cur].size();i++)
		{
			int to = g[cur][i];
			if(!used[to]){
				used[to]  = 1;
				level[to] = level[cur]+1;
				q.push_back(to);
			 if(level[to]%2) A.push_back(to);
	         else B.push_back(to);
			}
		}
	}
}
int main()
{
    int t,n,a,b;
    cin>>t;
    for(int j=1;j<=t;j++){
      for(int i=0;i<maxN;i++)
    	{
    		used[i]=0;
    		level[i]=0;
    		g[i].clear();

    	}
    	v.clear();
    	cin>>n;
    	for(int i=0;i<n;i++)
    	{
    	  cin>>a>>b;
    	  v.insert(a);
    	  v.insert(b);
    	  g[a].push_back(b);
    	  g[b].push_back(a);
    	}
    	int ans =0;
    	set<int>:: iterator it = v.begin();
    	while(it!=v.end())
    	{
    		int i = *it;
    		A.clear();
    		B.clear();
    		if(!used[i]){
    			level[i] = 1;
    			A.push_back(i);
    			bfs(i);
    		}
    	 ans += max(A.size(),B.size());
    	 it++;
    	}

    	cout<<"Case "<<j<<": "<<ans<<endl;
    	for(int i=0;i<maxN;i++)
    	{
    		used[i]=0;
    		level[i]=0;
    		g[i].clear();
    	}
    }
    return 0;
}
