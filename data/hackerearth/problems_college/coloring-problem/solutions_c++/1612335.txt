#include <cstdio>
#include <queue>
#include<iostream>
#include<cstring>
using namespace std;
int V;
int G[1004][1004];
bool isBipartite(int src)
{
    int colorArr[V];
    for (int i = 0; i < V; ++i)
        colorArr[i] = -1;

    colorArr[src] = 1;
    queue <int> q;
    q.push(src);
    while (!q.empty())
    {
        int u = q.front();
        q.pop();
        for (int v = 0; v < V; ++v)
        {
            if (G[u][v] && colorArr[v] == -1)
            {
                colorArr[v] = 1 - colorArr[u];
                q.push(v);
            }
            else if (G[u][v] && colorArr[v] == colorArr[u])
                return false;
        }
    }
    return true;
}
int main()
{
    int t,n,x,y,i,j;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d%d",&V,&n);
    	for(i=0;i<500;i++){
    		for(j=0;j<500;j++)
    		G[i][j]=0;
    	}
    	while(n--){
    		scanf("%d%d",&x,&y);
    		G[x][y]=1;
    		G[y][x]=1;
    	}
    	isBipartite(0) ? cout << "BICOLORABLE.\n" : cout << "NOT BICOLORABLE.\n";
    }
    return 0;
}