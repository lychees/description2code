#include <iostream>
#include <stdio.h>
#include <stdlib.h>
using namespace std;
typedef struct node
{
	int data;
	struct node *next;
	struct node *prev;
};
node *head=NULL,*last=NULL,*temp=NULL,*del=NULL;
void push(int data)
{
	//cout<<"invoked "<<data<<"\n";
	node *nn=(node *)malloc(sizeof(node));
	nn->data=data;
	nn->next=NULL;
	if(head==NULL)
	{
		nn->prev=NULL;
		head=nn;
	}
	else
	{
		last->next=nn;
		nn->prev=last;
	}
	last=nn;
}
void dele()
{
	if(del==head)
	{
		head->next->prev=NULL;
		head=head->next;
		free(del);
	}
	else if(del==last)
	{
		temp=last->prev;
		temp->next=NULL;
		free(last);
		last=temp;
	}
	else
	{
		del->prev->next=del->next;
		del->next->prev=del->prev;
		free(del);
	}
}
void print()
{
	temp=head;
	while(temp)
	{
		cout<<temp->data<<"  ";
		temp=temp->next;
	}
	cout<<"\n";
}
int main()
{
	//std::ios::sync_with_stdio(false);
    int t,n,k,i;
    int data;
    cin>>t;
    while(t--)
    {
    	cin>>n>>k;
    		int p1=k;
    	int n1=n;
    	while(n--)
    	{
    		scanf("%lld",&data);
    		//printf("%lld\n",data);
    		push(data);
		}   		
    	push(-1);
    	//print();
    	node *point=head,*first=head,*second=head->next;
    	//print();
    	//cout<<"k= "<<k<<"  second = "<<second<<"\n\n";
    	int l=p1;
    	while(l && second)
    	{
    		//cout<<"sekhar\n";
    			if(first->data  <  second->data)
    			{
    				l--;
    				del=first;
    				if(first->prev)
    				{
    					first=first->prev;
    					dele();
    					//print();
    					while(first && l)
    					{
    						if(first->data <second->data)
    						{
    							
    							l--;
    							temp=first;
    							del=first;
    								
    							if(first->prev==NULL)
    							{
    								dele();
    								break;
								}
    							first=first->prev;
    							
    							dele();
    								//cout<<"here\n";
    							
    							//print();
							}
							else
							break;
						}
					}
					else
					dele();
					first=second;
					second=second->next;
				}
    			else
    			{
    				first=first->next;
    				second=second->next;
				}
    	}
    	//cout<<"\n "<<n1-p1<<"\n";
    	for( i=1;i<=n1-p1;i++)
    	{
    		cout<<head->data<<" ";
    		temp=head;
    		head=head->next;
    		free(temp);
    	}
    	cout<<"\n";
    	for(;i<=n1 && head;i++)
    	{
    		temp=head;
    		head=head->next;
    		free(temp);
		}	
		head=NULL;
		last=NULL;
    }
    return 0;
}