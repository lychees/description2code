#include <bits/stdc++.h>
using namespace std;

long long int bit[1000008];
int arr[1000008];
int trial[1000008];
int n;

void update(int val, int k);
long long int query(int k);

int binarySearch(int a);



int main()
{
    
    scanf("%d", &n);
    int temp;
    int k;
    for (k = 1 ; k <= n ; k++) {
    	scanf("%d", arr + k);
    	trial[k] = arr[k];
    }
    sort(trial + 1, trial + n + 1);
    for (k = 1 ; k <= n ; k++) {
    	arr[k] = binarySearch(arr[k]);
    }
    for (k = 1 ; k <= n ; k++) {
    	update(1, arr[k]);
    	printf("%d ", query(arr[k] - 1));
    }
    printf("\n");
    return 0;
}

int binarySearch(int a) {
	int low = 1;
	int high = n;
	int mid;
	while (high >= low) {
		mid = (high + low) / 2;
		if (trial[mid] == a) {
			return mid;
		} else if (trial[mid] > a) {
			high = mid - 1;
		} else {
			low = mid + 1;
		}
	}
	return -1;
}

void update(int val, int k) {
	while (k <= 1000000) {
		bit[k] += val;
		k += k & -k;
	}
}

long long int query(int k) {
	long long int sum = 0;
	while (k > 0) {
		sum += bit[k];
		k -= k & -k;
	}
	return sum;
}
