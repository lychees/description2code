#include <bits/stdc++.h>
using namespace std;
set<long long int> vis;
long long int bfs(long long int x)
{
	long long int min=1000000002;
  queue<pair<long long int,long long int> > q;
   pair<long long int,long long int> p;
    q.push(make_pair(x,0));
    while(!q.empty())
    {
    	p=q.front();
    	q.pop();
    	if(p.first==1)
    	{
    		return p.second;
    	}
    	//return p.second;
         if(p.first%3==0&&vis.find((p.first)/3)==vis.end()){
         q.push(make_pair((p.first)/3,p.second+1));
         vis.insert((p.first)/3);}
         if(p.first%2==0&&vis.find((p.first)/2)==vis.end()){
         q.push(make_pair((p.first)/2,p.second+1));
         vis.insert((p.first)/2);}
         if(vis.find(p.first-1)==vis.end()){
         q.push(make_pair(p.first-1,p.second+1));
         vis.insert(p.first-1);}
    }

}

int main()
{
    long long int x,y;
    cin>>x;
    while(x--)
    {
   long long int i,j;
  vis.clear();
    
    cin>>i;
  cout<<bfs(i)<<endl;
    }
    return 0;
}

