#include <bits/stdc++.h>

int search(long int my_numbers[],int N,long int key) {
	int left = 0, right = N-1, mid,ans = -1;
	while (left <= right) {
		mid = (int) ((left + right) / 2);
		if (key >= my_numbers[mid]) {
			ans = mid;
			right = mid - 1;
		}
		else
			left = mid + 1;
	}
	return ans;
}

using namespace std;

int main()
{	
	ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int T,N,i,j;
    cin>>T;
    while(T--) {
    	cin>>N;
    	long int A[N],B[N];
    	i = 0;
    	while(i < N)
    		cin>>A[i++];
    	i = 0;
    	while(i < N)
    		cin>>B[i++];
    	if(B[0] < A[N-1]) {
    		cout<<0<<endl;
    		continue;
    	}
    	j = N-1;
    	int ans,t;
    	long int x;
    	ans = 0;
    	while((j - ans) > 0) {
    		x = B[j];
    		if(x < A[N-1]) {
    			j--;
    			continue;
    		}
 			i = search(A,N,x);
 			while(A[--i] <= x);
 			t = j - i - 1;
 			if(ans < t)
 				ans = t;
    		j--;
    	}
    	cout<<ans<<endl;
    }
    return 0;
}