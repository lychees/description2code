#include<bits/stdc++.h>
using namespace std;
     
#define ll long long
#define mset(m,v) memset(m,v,sizeof(m))
#define iter(a,it) for(auto it: a)
#define f(it,o) f(aut(it, (o).begin()); it != (o).end(); ++ it)
#define tr(cont, it) for(typeof(cont.begin()) it = cont.begin(); it != cont.end(); it++)    
#define dbg(x)  cout<< #x << ": " << (x) << endl; 
#define all(o) (o).begin(), (o).end()
#define UNIQUE(c) (c).resize(unique(all(c)) - (c).begin())  // use with vectors
#define present(cont, e) (cont.find(e) != cont.end()) // find for set/map
#define vpresent(cont, e) (find(all(cont),e) != cont.end())  //find for vectors
#define pb push_back
#define mp make_pair
#define sz(x) (x.size())
#define vii vector<pair<int,int>>
#define pii pair<int,int>

int main()
{
	int i,j,k;
	string s;
	cin>>s;

	vector<int> v[26];

	for(i=0;i<s.length();i++)
	{
		v[s[i]-'a'].pb(i);
	}

	int q,pos=-1;
	cin>>q;
	string p;
	for(i=0;i<q;i++)
	{
		bool f=true;
		cin>>p;
		pos=-1;
		for(j=0;j<p.length();j++)
		{
			int type=p[j]-'a';
			int idx=upper_bound(v[type].begin(),v[type].end(),pos)-v[type].begin();
			if(idx==v[type].size())
			{
				f=false;
				break;
			} 
			pos=v[type][idx];
		}
		if(!f)
			cout<<"No"<<endl;
		else
			cout<<"Yes"<<endl;
	}
	return 0;
}