

    #include <iostream>
    #include <algorithm>
    #include <cassert>
    #include <vector>
    using namespace std;
    #define MAXN 100000
    #define MAXV 1000000000
    vector<long long> valid;
    int main()
    {
    	int N;
    	long long ans=1LL, in;
    	bool isZero = false;
    	cin >> N;
    	assert(N>1 and N<=MAXN);
    	for(int i=0;i<N;i++){
    		cin >>  in;
    		assert(in >= -MAXV and in<=MAXV);
    		if(in!=0)
    			valid.push_back(in);
    		else
    			isZero = true;
    	}
    	N = valid.size();
    	if(N==0)
    		cout << "0" << endl;
    	else{
    		sort(valid.begin(), valid.begin()+N);
    		if(N==1){
    			if(isZero)
    				cout << "0" << endl;
    			else
    				assert(false);
    		}else{
    			long long p1 = valid[0];
    			p1 = p1*valid[1];
    			long long p2 = valid[N-1];
    			p2 = p2*valid[N-2];
    			
    			if(p1>p2)
    				ans = p1;
    			else
    				ans = p2;
    			cout << ans << endl;
    		}
    	}
    	
        return 0;
    }

