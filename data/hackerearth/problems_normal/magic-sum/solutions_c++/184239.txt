#include<iostream>
#include<cstring>
using namespace std;

int node[ 512 ] ;
long long  dis[512][512]  ;
int N ;



void cal( int i , int j ){
	if( dis[i][j] != -999999999 )
		return ;
	else if( i == j/2  ||  j == i/2 ){
	    dis[i][j] = node[i]+node[j] ;
		return ;
	}
	else if( i/2 == j/2 ){
	     dis[i][j] = node[i]+node[j]+node[i/2] ;
	}
	else {
	
	     cal( i/2 , j/2 );
		 dis[i][j] = dis[i/2][j/2] + node[i]+node[j] ;
	}
}

long long md(  int i , int j ){
    if( i == j )
		return node[j] ;
	else
		return md( i/2 , j/2 ) + node[i] + node[j] ;
}

void init_dis(){
	for( int i = 1 ; i <= N ; i ++ ){
		for( int j = 1 ; j <= N ; j ++ ){
		    dis[i][j] = -999999999 ;
		}
	}
}

void solve(  ){
    //memset(dis , -1 , 512*512*sizeof( int ));
	//init_dis() ;
	long long max = -999999999 ;

	//cout<<dis[2][18]<<endl ;
	for( int i = (N+1)/2 ; i <= N ; i ++  ){
		for( int j = i ; j <= N ; j++  ){
		   
		   long long tmp = md(i , j ) ;
		   //cout<<i<<" "<<j<<" "<<dis[i][j]<<endl ;
		   if( tmp > max )
			   max = tmp ;
		}
	}
	cout<<max<<endl ;

}





int main(){
       
	    int t ,s; 
		cin>>t ;
		for( int i = 0 ; i < t ; i ++ ){
		    
			 cin>>N ;
			 for( int i = 1 ; i <= N ; i ++ ){
			     cin>>node[i] ;
			 }
			 solve() ;

		}
	//	cin>>s ;
        return 0;
}
