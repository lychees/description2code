#include<bits/stdc++.h>
using namespace std;
const int MAXN = 102;
const int MOD = 1e9+7;
int ar[MAXN];
long long dp[2][MAXN*1000];
inline void check(long long &x) {
	if(x>=MOD)
		x%=MOD;
}
long long power(long long a, long long b) {
	long long ret=1;
	while(b) {
		if(b&1)
			ret=ret*a;
		b>>=1;
		a=a*a;
		check(a);
		check(ret);
	}
	return ret;
}
int main() {
	int n,k;
	scanf("%d%d",&n,&k);
	long long sum=0;
	for(int i=1;i<=n;i++) {
		scanf("%d",&ar[i]);
		sum+=ar[i];
	}
	for(int i=1;i<k;i++)
		dp[0][i]=0;
	dp[0][0]=1;
	for(int i=1;i<=n;i++) {
		for(int j=0;j<k;j++) {
			if(i&1)
				dp[1][j]=dp[0][j];
			else
				dp[0][j]=dp[1][j];
			if(j-ar[i]>=0)
				dp[i&1][j]+=dp[(i&1==1?0:1)][j-ar[i]];
			check(dp[i&1][j]);
		}
	}
	long long ans=0;
	for(int i=k-1;i>=0;i--) {
		long long rem=sum-i;
		if(rem>=i)
			ans+=2*dp[n&1][i];
		check(ans);
	}
	ans=(power(2,n)-ans+MOD)%MOD;
	if(sum<2*k)
		ans=0;
	cout<<ans<<endl;
	return 0;
}