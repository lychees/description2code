#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef pair<int,int> pi;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define RF(i,a,b) for(int i = (int)(a); i >= (int)(b); i--)
#define gc getchar_unlocked
#define MOD 1000000007
int read_int(){
    register int x = 0, c = gc();
    int sign = 1;
    while(c!='-' && (c<48 || c>57) ) c = gc();
    if(c=='-')
        sign = -1, c = gc();
    while(c>=48 && c<=57)
        x = (x<<1) + (x<<3) + c - 48, c = gc();
    return sign*x;
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int T,N,Q,x,y,prevx,prevy;
    T = read_int();
    while(T--)
    {
        N = read_int();
        Q = read_int();
        map<int, pi> M;
        map<int,pi>::iterator it;
        F(i,1,Q)
        {
            x = read_int();
            y = read_int();
            M[x+y] = make_pair(x,y);
        }
        ll dp[N][N];
        memset(dp, 0, sizeof(dp));
        prevx = prevy = 0;
        dp[prevx][prevy] = 1LL;
        for(it = M.begin(); it!= M.end(); it++)
        {
            x = (*it).second.first;
            y = (*it).second.second;
            F(i,prevx+1,x) dp[i][prevy] = dp[prevx][prevy];
            F(j,prevy+1,y) dp[prevx][j] = dp[prevx][prevy];
            F(i,prevx+1,x)
            {
                F(j,prevy+1,y)
                {
                    dp[i][j] = (dp[i-1][j] + dp[i][j-1])%MOD;
                }
            }
            prevx = x;
            prevy = y;
        }
        F(i,prevx+1,N-1) dp[i][prevy] = dp[prevx][prevy];
        F(j,prevy+1,N-1) dp[prevx][j] = dp[prevx][prevy];
        F(i,prevx+1,N-1)
        {
            F(j,prevy+1,N-1)
            {
                dp[i][j] = (dp[i-1][j] + dp[i][j-1])%MOD;
            }
        }
        printf("%lld\n",dp[N-1][N-1]);
    }
    return 0;
}

