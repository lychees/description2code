#include <iostream>
using namespace std;
typedef long long LL;
#define M 1000000007

LL modPow(LL a, LL x, LL p)
{
	LL res = 1;
	while(x>0)
	{
		if(x%2!=0)
		{
			res = (res*a)%p;
		}
		a = (a*a)%p;
		x /= 2;
	}
	return res;
}

LL modInverse(LL a, LL p)
{
	return modPow(a,p-2,p);
}

int main()
{
    LL t,n,k,i,j,x,min,max,minsize,maxsize,p,P,y,sum,sum1, num;
    cin>>t;
    while(t--)
    {
    	cin>>n>>k;
    	LL a[k][n];
    	for(i=0;i<k;i++)
    	{
    		for(j=0;j<n;j++)
    		{
    			cin>>a[i][j];
    		}
    	}
    	P = modPow(2,n,M);
    	//cout<<modPow(2,3,M);
    	min = M + 10;
    	minsize = 0;
    	max = 0;
    	maxsize = 100;
    	num = 1;
    	x=1;
    	for(p=1;p<P;p++)
    	{
    		x = 1;
    		num = 1;
    		for(j=0;j<n;j++)
    		{
    			if(j==0) x = 1;
    			else x = 2*x;
    			//x = 2*x;
    			if(p&x)
    			{
    				sum = 0;
    				for(i=0;i<k;i++)
    				{
    					sum = sum + a[i][n-j-1];
    				}
    				num = (num*sum)%M;
    			}
    		}
    		x =  __builtin_popcount(p);
    		//cout<<"p = "<<p<<endl<<"num = "<<num<<endl<<"x = "<<x<<endl;
    		num = (num*modInverse(x,M))%M;
    		if(num < min)
    			{
    				min = num;
    				minsize = x;
    			}
    			else if(num==min && x > minsize)
    			{
    				minsize = x;
    			}
    			if(num>max)
    			{
    				max = num;
    				maxsize = x;
    			}
    			else if(num==max && x < maxsize)
    			{
    				maxsize = x;
    			}
    	}
    	cout<< (min ^ max)<<" "<<(minsize ^ maxsize)<<endl;
    	
    }
    return 0;
}
