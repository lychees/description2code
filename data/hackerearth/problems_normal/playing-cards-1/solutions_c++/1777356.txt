#include<bits/stdc++.h>
using namespace std;

const int NCLIMIT = 2007;
long long ncr[NCLIMIT][NCLIMIT],r1,b1,r2,b2,temp;
long long ncrmod = 1e9 + 7;
long long rf;
long long rr;
long long bf;
long long br;

long long t,n,m;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
		long long ways=0;
	for(int i=0; i<NCLIMIT; i++)
	    for(int j=0; j<NCLIMIT; j++)  {
	      if(i<j)
	        ncr[i][j] = 0;
	      else if(j==0)
	        ncr[i][j] = 1;
	      else
	        ncr[i][j] = (ncr[i-1][j] + ncr[i-1][j-1])%ncrmod;
	}
	cin>>t;
	while(t--){
		cin>>n>>m;
		ways=0;
		rf = 6 , bf = 6 , rr = 18 , br = 18;
		rf *= n; bf *= n; rr *= n; br *= n;
		if(m%2){
			ways=0;
		}else if((rf+bf) < m/2) {
			ways=0;
		} else {
			for(int i=0;i<=m/2;i++){
			if(rf >= i and bf >= (m/2-i) and rr >= (m/2-i) and br >= i){
				r1 = ncr[rf][i];
				b1 = ncr[bf][m/2-i];
				r2 = ncr[rr][m/2-i];
				b2 = ncr[br][i];
				temp = ((r1*b1)%ncrmod) * ((r2*b2)%ncrmod)%ncrmod;
				ways = (ways+temp)%ncrmod;			
			
				}
			}
		}
		cout<<ways<<endl;		
	}
	
	return 0;
}