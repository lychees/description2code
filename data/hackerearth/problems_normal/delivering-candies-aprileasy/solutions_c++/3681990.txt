#include <bits/stdc++.h>
#define L 100005
#define pi pair<int,int>
#define f first
#define s second
#define vp vector< pi >
#define vpit vp::iterator
#define mp make_pair
#define pb push_back
#define ll long long int
using namespace std ;
vp ad[L] ; int K[L] ; ll D[L] ; bool done[L] ;
struct comp { bool operator()(pi x,pi y){return x.f > y.f;}};
priority_queue < pi , vp ,comp > heap ;
int main()
{
    int u,v,w ;
    int N,M,S ; scanf("%d %d %d",&N,&M,&S);
    for(int i=1;i<=N;++i) scanf("%d",K+i ),D[i]=LLONG_MAX;
    while(M--)
        scanf("%d %d %d",&u,&v,&w ),ad[u].pb(mp(v,w)),ad[v].pb(mp(u,w));
    D[S]=0 ;heap.push(mp(0,S)) ;
    while(!heap.empty())
    {
        int node = heap.top().s ; heap.pop() ;
        if(done[node]) continue ; done[node]=1 ;
        for(vpit it=ad[node].begin();it!=ad[node].end();++it)
        {
            if(done[(*it).f]) continue ;
            if( D[it->f] > D[node] + (ll)it->s )
             D[it->f] =D[node] + (ll)it->s ,heap.push(mp(D[it->f],it->f)) ;
        }
    }
    for(int i=1;i<=N;++i)if(!done[i]) D[i]=0,K[i]=0 ;
    ll t1=0,t2=0 ; for(int i=1;i<=N;++i) t1 += D[i]*(ll)K[i] ,t2 +=K[i] ;
    for(int i=1;i<=N;++i)
    {
            if(done[i]) printf("%lld ",D[i]*(ll)(t2 - K[i]) + t1 - (ll)D[i]*K[i] ) ;
            else printf("0 ");
    }
    printf("\n") ;
    return 0 ;
}
