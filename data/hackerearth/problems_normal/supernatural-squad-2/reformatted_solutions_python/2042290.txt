ways = []


def func(ppl, mx, rem):
    if ppl < 0 or mx < 0 or rem < 0:
        return 0
    if ways[ppl][mx][rem] != -1:
        return ways[ppl][mx][rem]
    if ppl == 0:
        ways[ppl][mx][rem] = 1
        return 1
    if rem == 0:
        return 0
        ways[ppl][mx][rem] = 0
    if mx == 0:
        ways[ppl][mx][rem] = 0
        return 0
    ret = 0
    i = 0
    while ppl-i*mx >= 0 and rem-i >= 0:
        ret = ret+func(ppl-i*mx, mx-1, rem-i)
        i = i+1
    ways[ppl][mx][rem] = ret
    return ret


for i in range(0, 201):
    ways.append([])
    for ii in range(0, 201):
        ways[i].append([])
        for iii in range(0, 201):
            ways[i][ii].append(-1)
test = int(raw_input())
while test:
    test = test-1
    inp = raw_input()
    n = int(inp.split()[0])
    k = int(inp.split()[1])
    answ = 0
    for gg in range(1, n+1):
        answ += func(n-k*gg, n-k*gg, gg)
    print answ
