n,m=map(int,raw_input().split())
INF=-10000000
adj=[[INF for i in xrange(n+1)] for j in xrange(n+1)]
adj1=[[INF for i in xrange(n+1)] for j in xrange(n+1)]
for j in xrange(m):
    a,b,c=map(int,raw_input().split())
    adj[a][b]=int(c)
    adj[b][a]=int(c)
    adj1[a][b]=b
    adj1[b][a]=a
soruce,dest,num_ppl=map(int,raw_input().split())    
def f_w(n):
    #path=[0]*(n)
    
    for k in xrange(1,n):
        #l=0
        for i in xrange(1,n):
            
            for j in xrange(1,n):
                t=min(adj[i][k],adj[k][j])
                if t>adj[i][j]:
                #adj[i][j]=max(adj[i][j],min(adj[i][k],adj[k][j]))
                   adj[i][j]=t
                   
                   adj1[i][j]=adj1[i][k]
    
def path(u,v):
    path=[u]
    if adj1[u][v]==INF:
      return path
    else:
        while u!=v:
            #print u,v
            if adj1[u][v]==INF:
               return path
            u=adj1[u][v]
            #print u
            path.append(u)
    return path         
                             
                       
f_w(n+1)
#print adj[soruce][dest]
op=path(soruce,dest)
for i in op:
    print i,
print "\r"
print int(num_ppl/(adj[soruce][dest]-1))+1