#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#ifdef _WIN32
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
#define sz(x) (int((x).size()))
#define bit(x) (1 << (x))
#define cnt1(x) (__builtin_popcount(x))

template<class T>
inline void chkmax(T& x, T y) {
	if (x < y) x = y;
}

template<class T>
inline void chkmin(T& x, T y) {
	if (y < x) x = y;
}

typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
const int MOD = 1000000007;
const int R3 = (MOD + 1) / 3;

int main() {
	
	LL n, m, p, q;
	LL N, tot, x, y, rlt;
	
	scanf(LLD LLD LLD LLD, &n, &m, &p, &q);
	if (n > m) swap(n, m);
	N = n * m % MOD;
	tot = N * (N + MOD - 1) % MOD;
	x = 2 * n * (n + MOD - 1) % MOD * (m - n + 1 + 2 * (n + MOD - 2) * R3 % MOD) % MOD;
	y = 0;
	if (p < n && q < m) y += (n - p) * (m - q) * 4 % MOD;
	if (p < m && q < n) y += (m - p) * (n - q) * 4 % MOD;
	y %= MOD;
	rlt = (tot + MOD - x + MOD - y) % MOD;
	printf(LLD "\n", rlt);
	return 0;
}