#include<bits/stdc++.h>

using namespace std;

#define ll long long int

#define s(x) scanf("%lld",&x)
#define s2(x,y) s(x)+s(y)
#define s3(x,y,z) s(x)+s(y)+s(z)

#define p(x) printf("%lld\n",x)
#define p2(x,y) p(x)+p(y)
#define p3(x,y,z) p(x)+p(y)+p(z)
#define fori(i,max) for(ll i=0;i<(ll)(max) ;(i)++)
#define for2i(i,min,max) for(ll i=min;i<(ll)(max) ;(i)++)

#define ff first
#define ss second
#define mp(x,y) make_pair(x,y)
#define plb pair<ll,bool>
#define pb push_back

ll n,m;

bool visited1[300];
bool visited2[300];
bool visited3[300];
vector< pair<ll,ll> > lst[300];
ll dis1[300];
ll dis2[300];
ll dis3[300];

void initialise()
{
	for(ll i=1;i<300;i++)
		{
			visited1[i]=false;  dis1[i]=INT_MAX;
			visited2[i]=false;  dis2[i]=INT_MAX;
			visited3[i]=false;	dis3[i]=INT_MAX;
			lst[i].clear();
		}
}
void Djikstra(ll src,bool visited[],ll dis[]);

int main()
{
	ll t;
	s(t);
	while(t--)
	{
		s2(n,m);		
		initialise();
		ll x,y,weight;
	
		for(ll i=0;i<m;i++)
		{
			cin>>x>>y>>weight;
			lst[x].pb(mp(weight,y));
			lst[y].pb(mp(weight,x));
		}
		
		ll sr,am,th;
		s2(sr,am); s(th);
		
		Djikstra(sr,visited1,dis1);
		Djikstra(am,visited2,dis2);
		Djikstra(th,visited3,dis3);
		
		ll maxi=INT_MIN;
		for(ll i=1;i<=n;i++)
		{
			if(i==sr || i==am || i==th)continue;
			maxi=max(maxi,dis1[i]+2*dis2[i]+dis3[i]);
		}
		p(maxi);
	}
}

void Djikstra(ll src,bool visited[],ll dis[])
{
	priority_queue< pair<ll,ll> , vector< pair<ll,ll> >, greater< pair<ll,ll> > > q;
	ll mincost=0;
	pair<ll ,ll > p;
	q.push(mp(0,src)) ;
	dis[src]=0;
	while(!q.empty() )
	{
		p=q.top();
		q.pop();
		ll x=p.second;
		
		if(visited[x]==true)continue;
		
		visited[x]=true;
		
		for(ll i=0;i<lst[x].size();i++)
		{
			if(visited[ lst[x][i].second ] == false)
			{
				dis[lst[x][i].ss ] =min( dis[x]+lst[x][i].ff , dis[lst[x][i].ss] );	
					q.push(mp(dis[lst[x][i].ss],lst[x][i].ss)) ;
			}
		}
	}
	
}