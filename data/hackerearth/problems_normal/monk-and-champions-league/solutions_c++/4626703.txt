/*input
3 4
1 2 4
*/
#include <bits/stdc++.h>
using namespace std;

int val(int a, int b)
{
	return a*(a + 1) / 2 - b*(b + 1)/2; 
}

int main() 
{
	int M, N, X;
	cin >> M >> N;

	map<int, int, greater<int> > mp;
	for (int i = 0; i < M; i++)
	{
		cin >> X;
		if (mp.find(X) == mp.end())
			mp[X] = 1;
		else
			mp[X] += 1;
	}
//	for (map<int, int>:: iterator it = mp.begin(); it != mp.end(); it++)
//		cout << it->first << " " << it->second << endl;

	int profit = 0;
	map<int, int>:: iterator it = mp.begin();
	int preValue = it->first;
	int preCount = it->second;  

	it++;
	for (; it != mp.end(); it++)
	{
		if (preCount * (preValue - it->first) <= N)
		{
			profit += preCount * val(preValue, it->first);
			N -= preCount * (preValue - it->first);
		}
		else
		{
			profit += preCount * val(preValue, preValue - N / preCount);
			profit += (preValue - N / preCount) * (N % preCount);
			N = 0;
			break;
		}
		preValue = it->first;
		preCount += it->second;
	}
	if (N != 0) 
	{
		profit += preCount * val(preValue, preValue - N / preCount);
		profit += (preValue - N / preCount) * (N % preCount);
	}
	cout << profit << endl;
}