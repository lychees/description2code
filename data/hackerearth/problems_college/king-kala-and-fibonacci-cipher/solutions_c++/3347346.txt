
#include <bits/stdc++.h>

#define LLI long long  int
#define LLU long long unsigned int
#define LI  long int
#define LU  long unsigned

#define MIN(a,b) ((b)^(((a)^(b))&-((a)<(b))))
#define BUG printf("BUGGEeee");
#define PRINT(n) printf("%d\n",n);
#define MOD 1000000007
#define POWER2(v) (v && !(v & (v - 1)))
#define PA pair<int,int>
#define PB pair<PA,int>
#define MP(a,b) make_pair(a,b)
#define PUS(x) push_back(x)


#define MAX_VAL 10000010
#define MAX_INT 999999999
#define MIN_INT -999999999
#define TO_STR(N) #N

using namespace std;






LLI MAX(LLI a,LLI b)
{
    if(a>b)return a;
    return b;
}


int  GCD(int a,int b)
{
   int x=MAX(a,b);
   int y=MIN(a,b);
    if(x%y==0)
    {
        return y;
    }
    else
    {
        return GCD(x%y,y);
    }

}


long long fast_pow(int a,int n)
{
    long long result = 1;
    long long power = n;
    long long value = a;
    while(power>0)
    {
        if(power&1)
            {result = result*value;
            result = result%MOD;}
        value = value*value;
        value = value%MOD;
        power /= 2;
        //power >>= 1;
    }
    return result;
}


int pow_k(LLI N,LLI K)
{
    int count=0;
    while(N>1)
    {
        N/=K;
        count++;
    }
    return count;
}


int count_bit(int N)
{
    int count=0;
    for(int i=0;i<32;i++)
    {
        if(N&(1<<i))
        {
            count++;
        }
    }
    return count;
}


//----------------------------------------------------------------



bool compare(pair<int,int> lhs,pair<int,int> rhs)
{
    if(lhs.first>rhs.first)return true;
    return false;
}

int fibo[100010][26]={0};

void cc()
{
    int a=0,b=1;
    fibo[0][0]=1;
    fibo[1][0]=1;
    fibo[1][1]=1;
    for(int i=2;i<=100000;i++)
    {
        for(int j=0;j<26;j++)
        {
            fibo[i][j]=fibo[i-1][j];
        }
        int c=a+b;
        c%=26;
        fibo[i][c]++;
        a=b;
        b=c;
    }
}

int main()
{
    
    ios_base::sync_with_stdio(false);
    cc();
    int T;
    cin>>T;
    while(T--)
    {
        int L,R;
        cin>>L>>R;
        vector<pair<int,int> > vc;
        if(L!=0)
        {
            for(int i=0;i<26;i++)
            {
                vc.push_back(make_pair(fibo[R][i]-fibo[L-1][i],i));
            }
        }
        else
        {
            for(int i=0;i<26;i++)
            {
                vc.push_back(make_pair(fibo[R][i],i));
            }
        }

        stable_sort(vc.begin(),vc.end(),compare);


        int arr[26];
        for(int i=0;i<26;i++)
        {
            arr[i]=vc[i].second;
        }

        string s;
        cin>>s;
        for(int i=0;i<s.size();i++)
        {
            int k=s[i]-'a';
            s[i]=arr[k]+'a';
        }
        cout<<s<<endl;
    }
    
    return 0;
}

