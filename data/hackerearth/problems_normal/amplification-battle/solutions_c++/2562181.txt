#include<stdio.h>
#include<algorithm>
#define gc getchar_unlocked
inline void fastRead_int1(long long int &x) {
	register long long int c = gc();
	x = 0;
	int neg = 0;
	for (; ((c<48 || c>57) && c != '-'); c = gc());
	if (c == '-') {
		neg = 1;
		c = gc();
	}
	for (; c>47 && c<58; c = gc()) {
		x = (x << 1) + (x << 3) + c - 48;
	}
	if (neg)
		x = -x;
}
inline void fastRead_int(int &x) {
	register int c = gc();
	x = 0;
	int neg = 0;
	for (; ((c<48 || c>57) && c != '-'); c = gc());
	if (c == '-') {
		neg = 1;
		c = gc();
	}
	for (; c>47 && c<58; c = gc()) {
		x = (x << 1) + (x << 3) + c - 48;
	}
	if (neg)
		x = -x;
}
int main()
{
    int T;
    fastRead_int(T);
    int a,b;
    long long int c;
    while(T--){
    	fastRead_int(a);
    	fastRead_int(b);
    	fastRead_int1(c);
    	int y = -1;
    	long long int ci =1;
    	long long int cb = b;
    	int temp = 0;
    	if(c>1000){
    	if(c>=a && c<=b){
    		printf("Adam\n");
    	}
    	else{
    		for(int i= a;i<=b;++i){
    			y = 0;
    			ci = i;
    			long long int mul = (long long int)(a*b);
    			long long int div = c/i;
    			while(div > 0){
    				div = div/mul;
    				y++;
    			}
    			if(c<=(pow(a,y-1)*pow(b,y)*ci)){ temp = 1;}
    			else {temp = 0; break;}
    		}
    	if(temp==0) printf("Adam\n");
    	else printf("Bob\n");
    	}
    	}
    	else{
    		if(c>=a && c<=b){
    		printf("Adam\n");
    	}
    	else{
    		for(int i= a;i<=b;++i){
    			y = 0;
    			ci = i;
    			while(ci<c){
    				y++;
	    		//	ca = ci*a;
	    			cb = ci*b;
	    			if(c<=(cb)){
	    				//y++;
	    				break;
	    			}
    				ci = cb*a;
    				if(ci >= c) {y++ ; break;}
    				y++;
    			}
    			if(y%2 == 0){
    				temp = 0; break;
    			}
    			else{
    				temp = 1;
    			}
    		}
    	if(temp==0) printf("Adam\n");
    	else printf("Bob\n");
    	}
    	}
    }
    return 0;
}
