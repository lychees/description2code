#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(ll i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>  
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
using namespace std;
 
typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

__int128_t s[100005];
ll n,h,a[100005];

bool f(__int128_t mid)
{
    
	__int128_t x=(mid)*s[n];
	rep(i,0,n)
	{ 
	  __int128_t y=h;y-=((mid*n+i)*(mid*n+1+i))/2;
	  if(x+s[i]>=y)
	  return true;
    }
	return false;
}

int main()
{ios_base::sync_with_stdio(false);
cin>>n>>h;
rep(i,1,n)
cin>>a[i];
s[0]=0;
rep(i,1,n)
s[i]=s[i-1]+a[i];

rep(i,1,n)
{
	if(s[i]>=h-(i*(i+1))/2)
	{
		ol(i);return 0;
	}
}

__int128_t lo=0,hi=1e10,mid;
while(lo<=hi)
{
	mid=(lo+hi)/2;
	if(f(mid))
	hi=mid-1;
	else
	lo=mid+1;
}

ll ans=(ll)lo*n;

	__int128_t x=(lo)*s[n];
	rep(i,0,n)
	{ 
	  __int128_t y=h;y-=((lo*n+i)*(lo*n+1+i))/2;
	  if(x+s[i]>=y)
	  {
	  	ans+=i;break;
	  }
    }



ol(ans);
return 0;
}