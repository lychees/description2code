#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <bitset>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>
using namespace std;
typedef long long ll;

#define INF 1000000000000000
#define MOD 1000000007

string revstring(string &s1){

	string s = "";
	int n = s1.length();
	for(int i=n-1; i>=0; i--){
		s.push_back(s1[i]);
	}
	return s;

}

void addStrings(string &s1, string &s2, string &add1, int n1, int n2){
	int c = 0;
	int temp = 0;
	int i,j;
	for(i=n1-1,j=n2-1; i>=0 && j>=0; i--,j--){
		temp = (s1[i] - '0') + (s2[j] - '0') + c;
		if(temp > 9){
			c = temp / 10;
			temp = temp % 10;
		}
		else{
			c = 0;
		}
		add1.push_back('0'+temp);


	}
	while(i >= 0){
		temp = (s1[i] - '0') + c;
		if(temp > 9){
			c = temp / 10;
			temp = temp % 10;
		}
		else{
			c = 0;
		}
		add1.push_back('0'+temp);
		i--;
	}
	
	while(j >= 0){
		temp = (s2[j] - '0') + c;
		if(temp > 9){
			c = temp / 10;
			temp = temp % 10;
		}
		else{
			c = 0;
		}
		add1.push_back('0'+temp);
		j--;
	}
	if(c > 0)
		add1.push_back('0' + c);

}

int main(){

	ios_base::sync_with_stdio(false);
	string s1,s2,s3;

	cin>>s1;
	cin>>s2;
	cin>>s3;

	int n1 = s1.length();
	int n2 = s2.length();
	int n3 = s3.length();

	string add1 = "";
	string add2 = "";
	string add3 = "";
	string add4 = "";
	string add5 = "";
	string add6 = "";

	addStrings(s1, s2, add1, n1, n2);
	addStrings(s2, s3, add2, n2, n3);
	addStrings(s1, s3, add3, n1, n3);
	addStrings(s1, s1, add4, n1, n3);
	addStrings(s2, s2, add5, n1, n3);
	addStrings(s3, s3, add6, n1, n3);
	//cout<<add1<<endl;
	add1 = revstring(add1);
	add2 = revstring(add2);
	add3 = revstring(add3);
	add4 = revstring(add4);
	add5 = revstring(add5);
	add6 = revstring(add6);
	if(s3.compare(add1) == 0 || s1.compare(add2) == 0 || add3.compare(s2) == 0 || add4.compare(s2) == 0 || add4.compare(s3) == 0 || add5.compare(s1) == 0 || add5.compare(s3) == 0 || add6.compare(s1) == 0 || add6.compare(s2) == 0)
		cout<<"YES\n";
	else
		cout<<"NO\n";


	return 0;
}