#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <sstream>
#include <iomanip>
#define max(a,b)  ((a)>(b)?(a):(b))
#define min(a,b)   ((a)<(b)?(a):(b))
#define ll long long
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define FOR(i,a,b) for(i=a;i<b;i++)
#define RFOR(i,a,b) for(i=a;i>=b;i--)
#define mset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)x.size()
using namespace std;
typedef long long i64;
const long long LINF = (long long)1e16 + 5;
const int INF =1e9;
const int MOD=1000000007;
const int maxlen=1e5;
typedef vector<ll> V;
typedef vector< pair <int,int> > VV;
typedef pair<int,int> P;
typedef map<int,int> M;
//from this function we calculate (a^b)%c in o(log(b)) time
ll moduloexpo(ll a, ll b , ll c)
{
	ll res=1;
	while(b)
	{
		if(b&1)
		{
			res=(res*a)%c;
		}
		b = b>>1;
		a = (a*a)%c;
	} 
	return res;
}
int main()
{
   ll a,b,temp[100001],i;
   string str;
   cin >> a >> b;
   cin >> str;
   int n=str.length();
   temp[0]=a;
   for(i=1;i<n;i++)
   {
   	  temp[i]=moduloexpo(temp[i-1],2,b); 
   }
   ll sum = 0;
   for(i=0;i<n;i++)
   {
   	if(str[i]=='1')
   	{
   		sum=(sum+temp[i])%b;
   	}
   }
   cout<<sum%b<<endl;
}