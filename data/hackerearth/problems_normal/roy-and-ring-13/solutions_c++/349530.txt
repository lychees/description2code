#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<cassert>
#include<set>
#include<queue>
#include<map>
	
using namespace std;
	

#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 2000000000

	
	
long long x,y;
long long f1,f2,result;

long long raja(unsigned long long n)
{
	f1=1,f2=1;
	x=1,y=1;
	bool xF=false,yF=false;
	for(long long i =3; i <= n;++i)
	{
		if(i&1)
		{
			if(xF)
				x+= f1+f2;			
			else x-=(f1+f2);
			xF=!xF;
		}
	/*	else
		{
			if(yF)
				y+= f1+f2;			
			else y-=(f1+f2);
			yF=!yF;
		}*/
		result = f1+f2;
		f1=f2;
		f2=result;
		//printf(" %lld (%lld, %lld) -->",i, x,y);
	}
	//printf("\n%lld, %lld \n",x,y);
	if(x<0)
		x*=-1;
	return x%MOD;
}

void multiply(unsigned long long F[2][2], unsigned long long M[2][2])
{
  unsigned long long x =  F[0][0]*M[0][0] + F[0][1]*M[1][0];
  unsigned long long y =  F[0][0]*M[0][1] + F[0][1]*M[1][1];
  unsigned long long z =  F[1][0]*M[0][0] + F[1][1]*M[1][0];
  unsigned long long w =  F[1][0]*M[0][1] + F[1][1]*M[1][1];
 
  F[0][0] = x%MOD;
  F[0][1] = y%MOD;
  F[1][0] = z%MOD;
  F[1][1] = w%MOD;
}

void power(unsigned long long F[2][2], unsigned long long n)
{
  if( n == 0 || n == 1)
      return;
  unsigned long long M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}
unsigned long long ans(unsigned long long n)
{
	unsigned long long nRet = 1;
	unsigned long long F[2][2] = {{1,1},{1,0}};
	power(F, n-1);
	

	return F[0][0]%MOD;
}
int main(int, char **)
{

	int q;
	scanf("%d",&q);
	unsigned long long N;
	unsigned long long R;
	//for(long long i =1; i<20; ++i)
	while(q--)
	{
		scanf("%llu",&N);
		//N = i;
	//	N = (N+1)/2;
		//R = getAns(N);
	//	R=raja(N);
		//R *=R;
	//	R %=MOD;
		N = (N+1)/2;
		unsigned long long x = ans(N);
		x*=x;
		x%=MOD;
		printf("%lld\n",x);
		//printf("Step : %lld  (%llu ) --> (%llu)  %f\n",i,R,x, sqrt((double)R));
	}
	return 0;
	
}
	