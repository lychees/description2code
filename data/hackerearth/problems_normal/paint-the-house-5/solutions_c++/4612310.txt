/*
* @problem: paint-the-house-5
*/

#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <limits.h>
#include <vector>
#include <map>
#include <bitset>
#include <string>
#include <iterator>
#include <set>
#include <utility>
#include <queue>
#include <numeric>
#include <functional>
#include <ctype.h>
#include <stack>
#include <algorithm>
#include <cstdlib>
#define MAX 100100
#define mod 1000000007LL
#define bitcnt(x) __builtin_popcountll(x)
#define MS0(x) memset(x, 0, sizeof(x))
#define MS1(x) memset(x, -1, sizeof(x))
#define ll long long int
#define mp(x, y) make_pair(x, y)
#define pii pair<int, int>
#define pll pair<ll, ll>
#define in(x) scanf("%lld", &x)
#define ind(x) scanf("%d", &x)
#define ins(x) scanf("%s", x)
#define pr(x) printf("%lld\n", x)
#define prd(x) printf("%d\n", x)
#define prs(x) printf("%s\n", x)
#define pi acos(-1.0)
#define ff first
#define ss second

using namespace std;
ll d;
int n;
struct node
{
	int t, x, y;
}worker[MAX];

bool comp(node a, node b)
{
	if(a.t != b.t)
		return (a.t < b.t);

	if(a.y != b.y)
		return (a.y > b.y);

	if(a.x != b.x)
		return (a.x < b.x);
	return 1;
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("../input.txt", "r", stdin);
		// freopen("../output.txt", "w", stdout);
	#endif
	// ios_base::sync_with_stdio(0);
    // cin.tie(0);
	ind(n);
	in(d);
	for(int i = 0; i < n; i++)
	{
		ind(worker[i].t);
		ind(worker[i].x);
		ind(worker[i].y);
	}

	sort(worker, worker + n, comp);

	ll cost = 0, rem = d;
	node cur, tmp;
	cur = worker[0];
	for(int i = 1; i < n; i++)
	{
		if(rem <= 0)
			break;
		tmp = worker[i];
		if(tmp.y > cur.y)
		{
			if(cur.t != tmp.t)
			{
				cost += cur.x;
			}
			rem -= ((tmp.t - cur.t) * cur.y);
			cur = tmp;
		}
	}
	if(rem > 0)
	{
		cost += cur.x;
	}
	pr(cost);
	return 0;
}