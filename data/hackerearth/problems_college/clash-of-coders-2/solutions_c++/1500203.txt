#include <bits/stdc++.h>
using namespace std;

int mem[100];
int Fun(int n, int k, int m)
{
	if (mem[n] != -1)
		return mem[n];
	if (n == k)
		return n % m;
	int ret = k * (1 + Fun(n, k + 1, m)) % m;
	if (k == 1)
		mem[n] = ret;
	return ret;
}

int main()
{
    int tt;
    for (cin >> tt; tt > 0; tt--)
    {
    	char s[1010];
    	int m;
    	scanf("%s%d", s, &m);
    	int n = strlen(s);
    	
    	memset(mem, -1, sizeof mem);
    	int ans = 0;
    	for (int i = 0; s[i]; i++)
    	{
    		if (s[i] != '0')
    		{
    			ans += Fun(s[i] - '0', 1, m);
    			if (s[i] == s[i + 1])
    				ans += Fun(11 * (s[i] - '0'), 1, m);
    		}
    	}
    	int pc = 0;
    	for (int i = 0; i < n; i++)
    	{
    		for (int j = 1; ; j++)
    		{
    			if (i - j < 0 || i + j >= n || s[i - j] != s[i + j])
    				break;
				if (s[i - j] != '0')
					pc++;
    		}
    		if (i + 1 < n && s[i] == s[i + 1])
    		{
    			for (int j = 1; ; j++)
    			{
    				if (i - j < 0 || i + j + 1 >= n || s[i - j] != s[i + j + 1])
    					break;
					if (s[i - j] != '0')
						pc++;
    			}
    		}
    	}
    	
    	ans += pc % m * Fun(m, 1, m);
    	
    	printf("%d\n", ans % m);
    }
    
    return 0;
}
