#include <iostream>
#include <algorithm>

using namespace std;

int main() {
  int N; cin >> N;

  int enemy_sum = 0;
  int powers[N + 1]; for(int i = 1; i <= N; i++) {
    cin >> powers[i];
    enemy_sum += powers[i];
  }


  vector<int> permut; for(int i = 1; i <= N; i++) permut.push_back(i);
  int num_ways = 0;

  do {
    for(int mask = 0; mask < (1 << N); mask++) {
      int a_sum = 0, b_sum = 0;
      bool possible = true;
      for(int j = 0; j < N; j++) {
        if(mask & (1 << j)) {
          a_sum += powers[permut[j]];
        }
        else {
          b_sum += powers[permut[j]];
        }

        if(a_sum > b_sum) {
          possible = false;
          break;
        }
      }

      if(possible) num_ways++;
    }
  } while(next_permutation(permut.begin(), permut.end()));

  cout << num_ways << " " << enemy_sum << endl;

  if(enemy_sum >= num_ways) cout << "Got no way out!" << endl;
  else cout << "We will win!" << endl;
}
