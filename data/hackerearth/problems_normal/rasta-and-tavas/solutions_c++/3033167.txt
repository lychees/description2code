#include<iostream>
#include<algorithm>
#include<string.h>
#include<cmath>
using namespace std;

bool isPrime[1000005];
int sum[1000005],n,k,ans,d[1000005],temp;

int sieve() {
    ans=0;
    memset(isPrime,1,sizeof(isPrime));
    memset(sum,0,sizeof(sum));
    isPrime[0]=0; isPrime[1]=0;
    for(int i=2;i*i<=n;i++) {
        if(isPrime[i]) {
            for(int j=i*i;j<=n;j+=i) isPrime[j]=false,d[j]=i;
        }
    }
    for(int i=2;i<=n;i++) {
        if(isPrime[i]) sum[i]=i;
    }
    for(int i=2;i<=n;i++) {
        if(isPrime[i] && sum[i]==k) ans++;
        else if(!isPrime[i]) {
            temp=i;
            while(temp%d[i]==0 && temp/d[i]>=1) temp/=d[i];
            sum[i]=d[i]+sum[temp];
            if(sum[i]==k) ans++;
        }
    }
    return ans;
}

int main()
{
    int i,j,m;
    cin>>n>>k;
    cout<<sieve();
    return 0;
}
