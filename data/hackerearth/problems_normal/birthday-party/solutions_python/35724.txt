from collections import Counter as C
t=int(raw_input())

def positiveSubsetSum( A, x ):
    # preliminary
    if x < 0 or x > sum( A ): # T = sum(A)
      return 0

    # algorithm
    sub_sum = [0] * ( x + 1 )
    sub_sum[0] = 1
    p = 0
    while not sub_sum[x] and p < len( A ):
      a = A[p]
      q = x
      while not sub_sum[x] and q >= a:
        if not sub_sum[q] and sub_sum[q - a]:
          sub_sum[q] = 1
        q -= 1
      p += 1
    return sub_sum[x]
		
		
	
for x in xrange(t):
	p,m = map(int,raw_input().split())
	n = map(int,raw_input().split())
	m = C(map(int,raw_input().split()))
	count = 0
	for k in m:
		count += positiveSubsetSum(n,m[k])
	print count