import sys
L,C= map(int,raw_input().split())
f = [1]*(L+1)
f[0] = 0
ind = L
while f[ind] <= 10**20:
    ind+=1
    x = 0
    for i in range(ind-L,ind):
        x+=f[i]
    f.append(x)

for i in range(0,L):
    x = 0
    for i in range(len(f)-L,len(f)):
        x += f[i]
    f.append(x)    

def fun(a,n):
    if a <= L:
        return a
    ind = a - L    
    sm = f[a-L]
    while sm < n and ind < a:
        ind +=1
        sm += f[ind]
    return fun(ind,n-(sm-f[ind]) )    

fixed = {}
for i in range(C):
    p,q,r = raw_input().split()
    n = int(p)
    x = int(q)
    c = r
    a = x%L
    while f[a] < n and a < x:
        a+=L
    assert(a<=x)
    assert(f[a]>=n)
    # find nth char of ath string.
    l = fun(a,n)
    if l in fixed:
        if fixed[l] != c:
            print 0
            sys.exit()
    else:
    	fixed[l]=c
#assert(len(fixed) <= L)
print pow(62,L-len(fixed),10**9+7)                

