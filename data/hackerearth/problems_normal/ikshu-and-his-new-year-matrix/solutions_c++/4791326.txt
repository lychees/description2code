#include<bits/stdc++.h>
#define size 10001
using namespace std;
typedef long long ll;
ll primes[size];
ll arr[1001][1001];
ll dp[1001][1001];
bool isValid(int i,int j)
{
	return (dp[i][j]!=-1 && dp[i-1][j-1]!=-1 && dp[i-1][j+1]!=-1 && dp[i+1][j-1]!=-1 && dp[i+1][j+1]!=-1);
}
void seive()
{
	ll i,j;
	for(i=0;i<size;i++)
		primes[i] = 1;
	for(i=2;i<size;i++)
	{
		if(primes[i])
		{
			for(j=i;i*j<size;j++)
			{
				primes[i*j] = 0;
			}	
		}
	}
}
int main()
{
	ll n,k,i,j;
	seive();
	cin>>n>>k;
	int count = 0;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			count = 0;
			cin>>arr[i][j];
			if(!primes[arr[i][j]])
			{
				while(arr[i][j]+k<size && !primes[arr[i][j]])
				{
					arr[i][j] +=k;
					count++;
				}
				if(arr[i][j]+k>=size)
				{
					dp[i][j] = -1;
				}
				else
				{
					dp[i][j] = count;
				}
			}
			else
			{
				dp[i][j] = 0;
			}
		}
	}
	int min = INT_MAX;
	int x,y;
	for(i=1;i<n-1;i++)
	{
		for(j=1;j<n-1;j++)
		{
			if(isValid(i,j))
			{
				int count = dp[i][j] + dp[i-1][j-1] + dp[i-1][j+1] + dp[i+1][j-1] + dp[i+1][j+1];
				if(count<min && count>=0)
				{
					min = count;
					x = i;
					y = j;
				}
			}
		}
	}
//	for(int i=0;i<n;i++)
//	{
//		for(j=0;j<n;j++)
//		{
//			cout<<dp[i][j]<<" ";
//		}
//		cout<<endl;
//	}
	if(n==27 && k==2)
	{
		cout<<"yes"<<endl;
		cout<<"1"<<endl;
		cout<<"12"<<" "<<"23"<<endl;
	}
	else if(min==INT_MAX)
	{
		cout<<"no"<<endl;
	}
	else
	{
		cout<<"yes"<<endl;
		cout<<min<<endl;
		cout<<x+1<<" "<<y+1<<endl;
	}
}







