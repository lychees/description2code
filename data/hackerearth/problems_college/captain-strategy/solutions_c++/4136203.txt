#include <iostream>
#include<bits/stdc++.h>
using namespace std;

void dfs(vector<int> adj[],long long int a,long long int* sum,bool visited[],long long int energy[])
{
	visited[a]=true;
	*sum+=energy[a];
	
	for(long long int it=0;it<adj[a].size();it++)
	{
		if(!visited[adj[a][it]])
			dfs(adj,adj[a][it],sum,visited,energy);
	}
}
int main()
{
	long long int num_soldiers,num_queries;
	cin>>num_soldiers>>num_queries;
	long long int energy[num_soldiers+1];
	for(long long int i=1;i<num_soldiers+1;i++)
		cin>>energy[i];
	vector<int> adj[num_soldiers+1];
	for(long long int j=0;j<num_soldiers-1;j++)
	{
		long long int x,y;
		cin>>x>>y;
		adj[x].push_back(y);
	}
	for(long long int k=0;k<num_queries;k++)
	{
		char condition;
		long long int a,b;
		cin>>condition;
		if(condition=='U')
		{
			cin>>a>>b;
			energy[a]=b;
			
		}
		else
		{
			cin>>a;
			long long int sum=0;
			bool visited[num_soldiers+1];
			memset(visited,false,sizeof(visited));
			dfs(adj,a,&sum,visited,energy);
			cout<<sum<<endl;
		}
	}
    return 0;
}
