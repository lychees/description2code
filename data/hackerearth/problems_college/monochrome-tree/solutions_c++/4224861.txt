#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
#define MOD 1000000007
#define pb push_back
#define endl '\n'
#define f first
#define s second
#define forn(i,n) for(int i = 0; i < int(n); i++)
vll graph[100005];
int curr[100005], ans[100005], dp[100005], xdp[100005];
bool vis[100005], xvis[100005];
int dfs(int p,int v);
int xdfs(int p, int v)
{
	if(xvis[v] == 1) return xdp[v];
	xvis[v] = 1;
	int temp = curr[v] == ans[v]? 1:0;
	for(int i = 0; i < graph[v].size(); i++)
		if(graph[v][i] != p)
			temp += min(xdfs(v,graph[v][i]), 1 + dfs(v,graph[v][i]));
	xdp[v] = temp;
	return temp;
}
int dfs(int p, int v)
{
//	cerr << "test " << v << endl;
	if(vis[v] == 1) return dp[v];
	vis[v] = 1;
	int temp = curr[v] == ans[v]? 0:1;
	for(int i = 0; i < graph[v].size(); i++)
		if(graph[v][i] != p)
			temp += min(dfs(v,graph[v][i]), 1 + xdfs(v,graph[v][i]));
	dp[v] = temp;
	return temp;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	for(int i = 0; i < n-1; i++)
	{
		int u,v;
		cin >> u >> v;
		graph[u-1].pb(v-1);
		graph[v-1].pb(u-1);
	}
	for(int i = 0; i < n; i++) cin >> curr[i];
	for(int i = 0; i < n; i++) cin >> ans[i];
	cout << min(dfs(-1,0), 1+xdfs(-1,0)) << endl;
	return 0;
}
