#include <bits/stdc++.h>
#define ll long long
#define MOD 1000000007
using namespace std;

ll t, n, m, q, a, b;
ll G[1005][1005];
ll fact[1000009];
pair<int, int> moves[8];

bool check(ll a, ll b) {
    if (a >= 1 && a <= n && b >= 1 && b <= m) {
        return true;
    }
    return false;
}


ll bfs(ll x, ll y) {
    queue<pair<int, int> > Q;

    Q.push(make_pair(x, y));
    G[x][y] = 2;
    ll cnt = 0;

    while (!Q.empty()) {
        cnt++;
        pair<ll, ll> tmp = Q.front();
        int u = tmp.first;
        int v = tmp.second;
        Q.pop();

        for (ll i = 0; i < 8; i++) {

            if (check(u + moves[i].first, v + moves[i].second) && G[u + moves[i].first][v + moves[i].second] == 1) {
                Q.push(make_pair(u + moves[i].first, v + moves[i].second));
                G[u + moves[i].first][v + moves[i].second] = 2;
            }
        }

    }
    return fact[cnt];
}

int main()
{
    fact[0] = 1;
    for (ll i = 1; i < 1000009; i++) {
        fact[i] = (i * fact[i -1]) % MOD;
    }

    moves[0] = make_pair(-2,-1);
    moves[1] = make_pair(-1,-2);
    moves[2] = make_pair(1,-2);
    moves[3] = make_pair(2,-1);
    moves[4] = make_pair(2,1);
    moves[5] = make_pair(1,2);
    moves[6] = make_pair(-1,2);
    moves[7] = make_pair(-2,1);

    cin >> t;
    while (t--) {
        cin >> n >>  m >> q;
        for (ll i = 0; i <= n; i++) {
            for (ll j = 0; j <= m; j++) {
                G[i][j] = 0;
            }
        }
        for (ll i = 0; i < q; i++) {
            cin >> a >> b;
            G[a][b] = 1;
        }

        ll ans = 1;
        for (ll i = 1; i <= n; i++) {
            for (ll j = 1; j <= m; j++) {
                if (G[i][j] == 1) {
                    ans = (ans * bfs(i, j)) % MOD;
                }
            }
        }
        cout << ans << endl;

    }

    return 0;
}
