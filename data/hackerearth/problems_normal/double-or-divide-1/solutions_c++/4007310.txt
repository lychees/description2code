#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;

int const NN = 5e5 + 5;

ll const MOD = 1e9 + 7;

ll status[NN];
ll vv[NN];

ll p[NN];
bool b[NN];
ll tot = 0;

void pre(){
    p[tot++] = 2;
    for(ll i=3;i<1000;i+=2){
        if(!b[i]){
        	status[i] = true;
            p[tot++] = i;
            for(ll j=1;j*i<1000;++j)
                b[j*i] = true;
        }
    }
}

bool f(ll num){
    if(num == 1)
        return false;
	ll number = num;        
    ll mx = 0;
    ll pr;
    for(ll i=0;i < tot && p[i]*p[i] <= num;++i){
        if((num%p[i] ) == 0){
            ll cnt = 0;
            while((num%p[i])==0){
                num /= p[i];++cnt;
            }
            if(cnt >  mx){
                mx = cnt;
                pr = p[i];
            }
            else if(cnt == mx){
                if(pr > p[i])
                    pr = p[i];
            }
        }
    }
    if(num > 1){
    	if(1 > mx){
    		mx = 1;
    		pr = num;
    	}
    	else if(mx ==1){
    		if(pr > num)
    			pr = num;
    	}
    }
    pr %= number;
    return (pr&1) == 0;
}

int main(){

    ll N, L;
    
    scanf("%lld%lld",&N,&L);
    
    pre();    
    
    for(ll i=1;i <= L;++i){
        ll num = i;
        if(status[num])continue;
        status[num] = f(num);
    }    
    
    for(ll i=1;i<=N;++i){
        ll x;scanf("%lld",&x);vv[i - 1] = x;
    }
    
    sort(vv, vv + N);
    
    ll idx = 0;
    
    for(ll i=1;i<=L;++i){
        if(idx >= N) break;
        if(status[i]){
            vv[idx] = vv[idx] / 2ll;
            if(vv[idx] == 0){
                ++idx;
            }                           
        }
        else {
            vv[N - 1] = (vv[N-1]*2ll) % MOD;
        }
    }
    
    printf("%lld\n",ll(N - idx));
    
    for(ll i=idx;i<N;++i){
        printf("%lld ",vv[i]);
    }    
    puts("");
    return 0;
}