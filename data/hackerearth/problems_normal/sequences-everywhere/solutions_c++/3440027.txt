#include <iostream>
#include <algorithm>

using namespace std;

int dp[1010];

int find(long long x) {
	if(dp[x]) return dp[x];
	for(int i = 1;i < x;i++) {
		if(x % i) {
			return dp[x] = find(i) + 1;
		}
	}
	return dp[x] = 1;
}
long long lcm(long long a, long long b) {
	return a * b / __gcd(a, b);
}
long long calc(long long x) {
	long long ans = 0ll, mul = 1ll;
	for(long long i = 2;mul <= x and i <= x;mul = lcm(mul, i++)) {
		long long lf = (x / mul) - (mul <= i) - x / lcm(mul, i);
		// cout << i << " = " << lf << endl;
		ans += lf * (find(i) + 1);
	}
	if(x >= 1) ans += 1;
	if(x >= 2) ans += 1;
	// cout << x << " : " << ans << endl;
	return ans;
}
int main()
{
	long long a, b;
	cin >> a >> b;
	
	cout << calc(b) - calc(a-1) << endl;
	
    return 0;
}