using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (int i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (int i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

int scs(ll n){
    int sum=0;
    while (n){
        sum+=n%10;
        n/=10;
    }
    return sum;
}

int n,j,d;
bool check[1000],f[1000+10];
ll x;

int main(){
  //  freopen("moody-numbers.inp", "r", stdin);
  //  freopen("moody-numbers.out", "w", stdout);
    check[1]=true;
    check[2]=true;
    check[3]=false;
    check[4]=true;
    FORE(i,5,200){
        check[i]=false;
        memset(f,false,sizeof(f));

        j=i;
        while (1){
            d=scs(j*j);
            if (check[d]){
                check[i]=true;
                break;
            }
            if (f[d]) break;
            j=d;
            f[d]=true;
        }
    }
    ri(n);
    FORE(i,1,n){
        ri(x);
        x=x*x;
        if (check[ scs(x) ] || x==16) puts("YES");
        else puts("NO");
    }
}
