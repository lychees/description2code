#include <bits/stdc++.h>
using namespace std;
bool checkPrime(int n){
    
	if(n==1) return false;
    if (n==2)
        return true;

    if (n%2==0)
        return false;

    for (int i=3;i<=sqrt(n);i+=2)
        if (n%i==0)
            return false;

    return true;
};
int N,K;
int dp[1001][1001];

int main()
{	
	scanf("%d",&N);
	scanf("%d",&K);
	for(int i=1; i<=N; i++){
		for(int j=1; j<=N; j++){
			int curr;
			cin >> curr;
			//	if(i==11 && j==24) cout << " " << curr << endl;
			int step=0;
		
			while(curr<=10000 && !checkPrime(curr)) {
				curr+=K;
				step++;
			};
			
			if(curr>10000) dp[i][j]=INT_MAX;
			else dp[i][j]=step;
		};
	};
	//cout << dp[11][22] << " " << dp[11][24] << endl;
	//cout << dp[12][23] << " " << dp[13][24] << endl;
	long long prevMin=-1;
	pair<int,int> ans;
	for(int i=1; i<=N-2; i++){
		for(int j=1; j<=N-2; j++){
			if(dp[i][j]!=INT_MAX && dp[i+2][j]!=INT_MAX 
			&& dp[i][j+2]!=INT_MAX && dp[i+1][j+1]!=INT_MAX 
			&& dp[i+2][j+2]!=INT_MAX){
				if(prevMin==-1 || 
				(dp[i][j]+dp[i+2][j]+dp[i][j+2]+dp[i+2][j+2]+dp[i+1][j+1])<prevMin){
					prevMin=dp[i][j]+dp[i+2][j]+dp[i][j+2]+dp[i+2][j+2]+dp[i+1][j+1];
					ans=make_pair(i+1,j+1);
				};
			};
		};
	};
	if(prevMin==-1) cout << "no";
	else {
		cout << "yes" << endl << prevMin << endl << ans.first << " " << ans.second;
	};
    
    return 0;
}
