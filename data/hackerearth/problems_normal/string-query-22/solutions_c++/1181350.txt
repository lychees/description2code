/*
	+AmitBaranwal
	amitbaranwal53@gmail.com
*/
#include <bits/stdc++.h>

using namespace std;

int temp,i,j,k,Z;

#define CASE s(Z);while(Z--)
#define FOR(I,A,B) for(I=A;I<B;++I)
#define REP(i,n) FOR(i,0,n)
#define FORR(I,J,K) for(I=J;I>K;--I)
#define JAM(N) printf("Case #%d: ",N)
#define INPUT(A) freopen(A,"r",stdin);
#define OUTPUT(A) freopen(A,"w",stdout);

#define all(x) x.begin(), x.end()
#define fill(a, val) memset(a, val, sizeof(a))
#define INDEX(a, val) (lower_bound(all(a), val) - a.begin())

#define EXP 1e-10
#define INF (int)1e9

#define F first
#define S second
#define MP make_pair
#define PB push_back

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
typedef unsigned long long ULL;

#define deb(n) cout<<"(<<< DEBUG "<<#n<<" -> "<<n<<" >>>)"<<endl;

#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%ld",&n)
#define sll(n) 					scanf("%I64d",&n)
#define sf(n) 					scanf("%f",&n)
#define slf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)

//main code is here

#define LOGSZ 18
int *tree,T[26][(1<<LOGSZ)+1];
int N = (1<<LOGSZ);

// add v to value at x
void setit(int x, int v) {
while(x <= N) {
tree[x] += v;
x += (x & -x);
}
}

// get cumulative sum up to and including x
int getit(int x) {
int res = 0;
while(x) {
res += tree[x];
x -= (x & -x);
}
return res;
}
// get largest value with cumulative sum less than or equal to x;
// for smallest, pass x-1 and add 1 to result
int getind(int x) {
int idx = 0, mask = N;
while(mask && idx < N) {
int t = idx + mask;
if(x >= tree[t]) {
idx = t;
x -= tree[t];
}
mask >>= 1;
}
return idx;
}

char a[200005],ch;

void in()
{
	#ifndef ONLINE_JUDGE
	INPUT("input.txt");
	//OUTPUT("output.txt");
	#endif
}

int main()
{
	in();
	ss(a+1);
	for(i=1;a[i];++i)
	{
		tree=T[a[i]-'a'];
		setit(i,1);
	}
	CASE
	{
		cin>>k>>ch;
		tree=T[ch-'a'];
		int pos=getind(k-1)+1;
		a[pos]=-1;
		setit(pos,-1);
	}
	for(i=1;a[i];++i) if(a[i]!=-1) putchar(a[i]);puts("");
	return 0;
}
