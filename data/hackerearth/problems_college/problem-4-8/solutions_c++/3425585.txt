    /*
     * 1.cpp
     *
     *  Created on: 18-Feb-2016
     *      Author: suparsh14
     */
    #include <bits/stdc++.h>
    using namespace std;

    #define MOD 1000000007
    long long int factorial[300010];
    long long int fact(int a){
    if(factorial[a]!=-1)return factorial[a];
    factorial[a]=((a%MOD)*(fact(a-1)%MOD)+MOD)%MOD;
    return factorial[a];

    }
    long long int power(long long int x, long long int y, long long int m)
    {
        if (y == 0)
            return 1;
        long long int p = power(x, y/2, m) % m;
        p = (p * p) % m;

        return (y%2 == 0)? p : (x * p) % m;
    }
    long long int imod(long long int a){
    	return power(a, MOD-2, MOD);
    }
    long long int ncr(long long int a,long long int b){
    			long long int ans=fact(a);
    			ans*=imod(fact(b));
    		    ans%=MOD;
    		//	printf("%lld\n",ans);
    		    ans*=imod(fact(a-b));
    			ans%=MOD;

    //			printf("%lld %lld %lld %lld\n",fact(a),fact(b),fact(a-b),ans);
    			return ans;
    }

    int main(){

    	int t;
    	scanf("%d",&t);

    	memset(factorial,-1,sizeof(factorial));
    	factorial[0]=factorial[1]=1;


    	while(t--){
    		long long int n,m,c,ans=0;

    		scanf("%lld %lld %lld",&n,&m,&c);
    		long long int temp1=n+m-1,temp2=0;

    		for(int i=0;i<=m;i++,temp2+=c+1){

    			if(i%2==0){
    				if((temp1-temp2)>=m-1)
    				ans=(ans+((ncr(temp1-temp2,m-1)%MOD)*(ncr(m,i)%MOD)%MOD)+MOD)%MOD;
    				else break;
    			}
    			else {
    				if((temp1-temp2)>=m-1)
    				ans=(ans-((ncr(temp1-temp2,m-1)%MOD)*(ncr(m,i)%MOD)%MOD)+MOD)%MOD;
    				else break;
    			}

    		}

    		printf("%lld\n",ans);

    	}





    	return 0;
    }
