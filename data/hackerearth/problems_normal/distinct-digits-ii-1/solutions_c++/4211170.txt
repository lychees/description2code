/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
#define finp ios_base::sync_with_stdio(0);cin.tie(0)
using namespace std;
ll BIT[15][100004];
ll arr[100005];
ll uni(ll a)
{
    bool visited[10]={0};
    ll co=0;
    while(a>0)
    {
        ll r=a%10;
        if(visited[r]==false)
        {
            co++;
            visited[r]=true;
        }
        a/=10;
    }
    return co;
}
void update(ll index1,ll index2,ll val)
{
    while(index2<100004)
    {
        BIT[index1][index2]+=val;
        index2+=index2&(-index2);
    }
}
ll query(ll index1,ll index2)
{
    ll sum=0;
    while(index2>0)
    {
        sum+=BIT[index1][index2];
        index2-=index2&(-index2);
    }
    return sum;
}
int main()
{
    finp;
    ll n;
    cin>>n;
    for(ll i=1;i<=n;i++)
    {
        cin>>arr[i];
        ll co=uni(arr[i]);
        update(co,i,1);
    }
    ll q;
    cin>>q;
    while(q--)
    {
        string s;
        cin>>s;
        if(s=="ADD")
        {
            ll a,b;
            cin>>a>>b;
            ll co=uni(arr[a]);
            arr[a]=(arr[a]%mod+b%mod)%mod;
            ll co1=uni(arr[a]);
            update(co,a,-1);
            update(co1,a,1);
        }
        else if(s=="MUL")
        {
            ll a,b;
            cin>>a>>b;
            ll co=uni(arr[a]);
            arr[a]=(arr[a]%mod*b%mod)%mod;
            ll co1=uni(arr[a]);
            update(co,a,-1);
            update(co1,a,1);
        }
        else if(s=="REP")
        {
            ll a,b;
            cin>>a>>b;
            ll co=uni(arr[a]);
            arr[a]=b;
            ll co1=uni(arr[a]);
            update(co,a,-1);
            update(co1,a,1);
        }
        else if(s=="MAX")
        {
            ll a,b;
            cin>>a>>b;
            for(ll i=9;i>=1;i--)
            {
                ll ans=query(i,b)-query(i,a-1);
                if(ans>0)
                {
                    cout<<i<<" "<<ans<<"\n";
                    break;
                }
            }
        }
        else if(s=="MIN")
        {
            ll a,b;
            cin>>a>>b;
            for(ll i=1;i<=9;i++)
            {
                ll ans=query(i,b)-query(i,a-1);
                if(ans>0)
                {
                    cout<<i<<" "<<ans<<"\n";
                    break;
                }
            }
        }
    }
}
