/*

Paras Kumar Meena
~~~ Never Show Your Arrogance.Keep In Mind,You Were Born From A Drop Of Impure Liquid ~~~

*/

#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;


#define ll long long
#define ff first
#define ss second
#define mpa make_pair
#define MOD 1000000007
#define pb push_back
#define lld I64d
#define MXN 1000000

int bitcnt(int mask){return __builtin_popcount(mask);}
int SET(int N,int pos){ return N=N | (1<<pos);}
int RESET(int N,int pos){   return N= N & ~(1<<pos);}
int check(int N,int pos){   return (N & (1<<pos));}
int toggle(int N,int pos){if(check(N,pos))return N=RESET(N,pos);return N=SET(N,pos);}
void PRINTBIT(int N){   printf("("); for(int i=6;i>=1;i--)  {bool x=check(N,i);cout<<x;}    puts(")");}
int mod(int a, int b) { return a - a/b * b;}
void Print(vector<int> Vec) { for(int i = 0; i < Vec.size(); ++i) cout<<Vec[i] << " ";puts("");}void Print(vector<ll> Vec) {for(int i = 0; i < Vec.size(); ++i) cout<< Vec[i] << "  "; puts("");}
void Print(vector<string> Vec) {for(int i = 0; i < Vec.size(); ++i) cout<< Vec[i] << " ";puts("");}
void Print(vector<double> Vec) {for(int i = 0; i < Vec.size(); ++i) cout<< Vec[i] << " ";puts("");}

ll P;

ll _poww(ll A, ll B)
{
	if(B == 0)
		return 1;
	if(B == 1)
		return A;
	ll C = _poww(A, B / 2);
	C = (C * C);
	
	if(C >= P)
		C %= P;
	
	if(B & 1) {
		C = C * A;
		if(C >= P)
			C %= P;
	}
	
	return C;
}

pair<int, pair<int, int> > extendedEuclid(int a, int b) {
    int x = 1, y = 0;
    int xLast = 0, yLast = 1;
    int q, r, m, n;
    while(a != 0) {
        q = b / a;
        r = b % a;
        m = xLast - q * x;
        n = yLast - q * y;
        xLast = x, yLast = y;
        x = m, y = n;
        b = a, a = r;
    }
    return make_pair(b, make_pair(xLast, yLast));
}
 
int inv(int a, int m) {
    return (extendedEuclid(a,m).second.first + m) % m;
}

int main()
{
	int T;
	scanf("%d", &T);
	
	while(T--) {
		ll A;
		ll B;
		ll N;
		scanf("%lld%lld%lld", &A, &P, &N);
		int gcd = __gcd(A, P);
		if(gcd != 1 || P == 1) {
			puts("-1");
		} else {
			
			if(N == 1) {
				printf("%lld\n", A);
				continue;
			}
			
			ll B = inv(A, P);
			if(N & 1) {
				ll first = N / 2;
				first++;
				ll second = N - first;
				
				ll ans = first * A;
				ans += (second * B);
				printf("%lld\n", ans);
			} else {
				
				ll first = N / 2;
				ll second = N - first;
				
				ll ans = first * A;
				ans += (second * B);
				printf("%lld\n", ans);
			}
		}
	}
	
	return 0;
}