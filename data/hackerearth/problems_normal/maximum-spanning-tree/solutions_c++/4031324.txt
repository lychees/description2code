#include<bits/stdc++.h>
using namespace std;
#define fr(i,n) for(int i=0;i<n;i++)
#define fr1(i,n) for(int i=1;i<=n;i++)
#define ll long long
#define pb push_back
#define ss second
#define ff first
#define pii pair<int,int>
#define mp make_pair
int parent[5002];
int n,m;
vector< pair<ll,pii> > v;


int find(int i){
  if(i!=parent[i]){
    parent[i]=find(parent[i]);
  }
  return parent[i];
}

int kruskal(){
	int ans=0;  
    fr(i,m){
	    int x=find(v[i].ss.ff);
	    int y=find(v[i].ss.ss);
	    if(x!=y){
	     parent[y]=x;
	     ans+=v[i].ff;
    }

  }
  return ans;
}

bool compare(const pair< int,pii >&i,const pair< int,pii >&j){
	if(i.ff!=j.ff) return i.ff>j.ff;
	else return i.ss.ff<i.ss.ff;
}

int main(){
  int t;
  cin>>t;
  while(t--){
    cin>>n>>m;
    fr1(i,n){
      parent[i]=i;
    }
    fr(i,m){
      int a,b,c;
      cin>>a>>b>>c;
      v.pb(mp(c,mp(a,b)));
    }
    sort(v.begin(),v.end(),compare);
    cout<<kruskal()<<endl;
    v.clear();
  }
  return 0;
}