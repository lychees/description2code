
// paint the house...

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct data
{
	long T, X, Y;

	data(long _T, long _X, long _Y)
	{
		T = _T;
		X = _X;
		Y = _Y;
	}
};

bool compare(data d1, data d2)
{
	if (d1.T < d2.T)
		return true;

	else if (d1.T == d2.T)
	{
		if (d1.Y > d2.Y)
			return true;

		else if (d1.Y == d2.Y)
			return d1.X < d2.X;
	}
	return false;
}

long maximum(long num1, long num2)
{
	if (num1 >= num2)
		return num1;
	return num2;
}

int main()
{
	long N, D, T, X, Y;
	cin >> N >> D;

	vector <data> list;

	for (long n = 0; n < N; n++)
	{
		cin >> T >> X >> Y;
		list.push_back(data(T, X, Y));
	}

	
	sort(list.begin(), list.end(), compare);

	data currworker(0, 0, 0);
	long workDone = 0, cost = 0;

	for (auto worker : list)
	{
		if (worker.Y <= currworker.Y)
			continue;

		workDone += maximum(((worker.T - currworker.T) * currworker.Y), 0);

		if (workDone >= D)
			break;

		cost += worker.X;
		currworker = worker;
	}
	cout << cost << endl;
	return 0;
}