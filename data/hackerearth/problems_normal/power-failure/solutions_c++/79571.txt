#include <iostream>
#include <math.h>
#define MOD 1000000007
#include <algorithm>

using namespace std;

bool primes[100001] = {0};

int counts(int n, int last_count, int last_index)
{
	int i;
	for(i= last_index ; i>= n ; i--)
	{
		if(!primes[i])
			last_count++;
	}
	
	return last_count;
}

int main()
{
   
    int i,j,T;
    bool flag;
    
    primes[1] = 0;
    primes[2] = 1;
    
    for(i=3 ; i<=100000; i+=2)
    {
    	flag = 0;
    	for(j=2; j<=sqrt(i) + 1 ; j++)
    	{
			if(i%j == 0)
				{
					flag = 1;
					break;
				}
    	}
    	
    	if(flag == 0) primes[i] = 1;
    }
    
    
    cin>>T;
    int n,m,min,val,index,last_count;
    long long ans;
    
    
    while(T-- >0)
	{
		cin>>n>>m;
		
		ans = 1;
		vector<int> v;
		last_count = 1;
		index = m;
		
		for(i=0 ; i<n ; i++)
			{
				cin>>val;
				v.push_back(val);
			}
			
		sort(v.begin(), v.end());
		
		
		for(i=n-1; i>=0 ; i--)
		{
			last_count = counts(v[i], last_count-1, index);

			ans = (ans * last_count)%MOD;
			if(ans == 0)
				break;
				
			index = v[i]-1;		
		}
		
		cout<<ans<<endl;
		
	}    
    
    
    return 0;
}
