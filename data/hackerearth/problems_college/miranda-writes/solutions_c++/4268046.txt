//Ankur Jain	
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(c) (c).begin(),(c).end()
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define REP(i, begin, end) for(int i=begin;i<end;i++)
#define REPB(i,begin,end) for(int i=begin;i<=end;i--)
#define MOD 1000000007
#define endl '\n'
#define N 405
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int,int > ii;
ll powmod(ll a,ll b)
{
	if(b==0)return 1;
	ll x=powmod(a,b/2);
	ll y=(x*x)%MOD;
	if(b%2)
		return (a*y)%MOD;
	return y%MOD;
}
//Template ends here
#define INF INT_MAX
vi g[N];
ll dist[N][N],dp[1<<16][N];
int bit[20],junc[20];
int n,m,k,T;
void mindist()
{
	REP(x,1,n+1)
	{
		REP(i,1,n+1)
		{
			REP(j,1,n+1)
				dist[i][j]=min(dist[i][j],dist[i][x]+dist[x][j]);
		}
	}
}
ll rec(int mask,int id)
{
	if(mask==T)
		return dist[id][n];
	if(dp[mask][id]!=-1)
		return dp[mask][id];
	ll ans,finalans=MOD;
	REP(i,0,k)
	{
		bit[i]=1;
		if(!((1<<i)&mask))
		{
			ans=dist[id][junc[i]]+rec(mask|(1<<i),junc[i]);
			finalans=min(finalans,ans);
		}
	}
	dp[mask][id]=finalans;
	return finalans;
}
int main()
{
	si(n);si(m);si(k);
	T=(1<<k)-1;
	REP(i,0,1<<16)
	{
		REP(j,0,N)
			dp[i][j]=-1;
	}
	REP(i,1,n+1)
	{
		REP(j,1,n+1)
		{
			dist[i][j]=INF;
			if(i==j)
				dist[i][j]=0;
		}
	}
	int x,y,z;
	REP(i,0,m)
	{
		si(x);si(y);si(z);
		g[x].pb(y);
		g[y].pb(x);
		dist[x][y]=z;
		dist[y][x]=z;
	}
	REP(i,0,k)
		si(junc[i]);
	mindist();	
	ll ans=rec(0,1);
	printf("%lld\n",ans);								 
	return 0;
}