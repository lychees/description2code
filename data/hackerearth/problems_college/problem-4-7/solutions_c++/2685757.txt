#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair

#define cin(x)     scanf("%d",&x)

#define FOR(i,a,b)      for(int i=(int)(a);i<(int)(b);i++)
#define RFOR(i,a,b)     for(int i=(int)(b)-1;i>=(int)(a);i--)

#define MOD       1000000007
#define EPS       1E-10

#define PI  acos(-1)

#define CASE(x)   cout << "Case #" << x << ": ";

map<string , int> arr;
int dp[1000000];
string s;

int solve(int idx)
{
	if(idx >= sz(s)) return 0;
	else if(dp[idx] != -1) return dp[idx];
	string x = "";
	x += s[idx];
	int ret = max(1 + solve(idx + 1) , 1 + solve(idx + 2));
	if(arr.find(x) != arr.end()) ret = max(ret , arr[x] + solve(idx + 1));
	if(idx + 1 < sz(s))
	{
		x += s[idx + 1];
		if(arr.find(x) != arr.end()) ret = max(ret , arr[x] + solve(idx + 2));
	}
	return (dp[idx] = ret);
}

int main()
{
	inp_s;
	int n,m;
	cin >> n >> m;
	cin >> s;
	FOR(i,0,m)
	{
		string s;
		int cost;
		cin >> s >> cost;
		if(arr.find(s) != arr.end())
			arr[s] = max(arr[s] , cost);
		else
			arr[s] = cost;
	}
	FOR(i,0,1000000) dp[i] = -1;
	cout << solve(0) << endl;
	return 0;
}