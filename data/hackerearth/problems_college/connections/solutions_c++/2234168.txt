#include <bits/stdc++.h>
#define dt long long
using namespace std;
bool isconnected(vector< vector<int> > &arr,vector<bool> &visited,int v1,int v2){
	if(arr[v1][v2]==1){return 1;}
	for(int i=1;i<arr[v1].size();i++){
		if(!visited[i] && arr[v1][i]==1 ){
			visited[i]=true;
			if(isconnected(arr,visited,i,v2))
				return 1;
		}
	}
	return 0;
}
int main()
{
   	dt n,conn,v1,v2,quer;
   	cin>>n;
   	dt array[n+1][n+1];
   	vector<int> a(n+1,0);
   	vector< vector<int> > arr(n+1,a);
   	vector<bool> visited(n+1,false);
   	memset(array,0,sizeof(array));
   	cin>>conn;
   	for(int i=0;i<conn;i++){
   		cin>>v1>>v2;
   		arr[v1][v2]=1;
   	}
   	cin>>quer;
   	for(int i=0;i<quer;i++){
   		cin>>v1>>v2;
   		if(v1>n || v2>n){
   			cout<<"No Connection"<<endl;
   		}else if(arr[v1][v2]){
   			cout<<"Direct Connection"<<endl;
   		}else{
   			visited.assign(n+1,false);
   			if( isconnected(arr,visited,v1,v2)){
   				cout<<"Indirect Connection"<<endl;
   			}else{
   				cout<<"No Connection"<<endl;
   			}
   		}
   	}
    return 0;
}
