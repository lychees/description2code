//Utkarsh Saxena
#include<bits/stdc++.h>
#include<iostream>
using namespace std;//Utkarsh Saxena
#include<bits/stdc++.h>
#include<iostream>
using namespace std;
//miller rabin primality 7 set for 64 bit int {2, 325, 9375, 28178, 450775, 9780504, 1795265022}
#define abs(x) ((x)>0?(x):-(x))
#define M 1000000007
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define mpa make_pair
#define PII pair<int,int>
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d\n",x)
#define scanll(x) scanf("%lld",&x)
#define printll(x) printf("%lld\n",x)
//vector<int> g[2*100000+5];int visited[2*100000+5];
lld l[100],d[100];
lld total[1<<19];
lld dp[1<<19];
int main()
{
	int n;
	cin>>n;
	for(int i=0;i<n;++i)cin>>l[i];
	for(int i=0;i<n;++i)cin>>d[i],d[i]*=i;
	for(int mask=1;mask<(1<<n);++mask)
	{
		int f=0;
		int p=__builtin_popcount(mask);
		for(int i=0;i<n;++i)
		{
			if(mask&(1<<i))
			{
				int xx=l[i]*p-d[i]*(p-1)*p/2;
				if(f==0 or dp[mask]<dp[mask-(1<<i)]+xx+total[mask-(1<<i)] or dp[mask]==dp[mask-(1<<i)]+xx+total[mask-(1<<i)] and total[mask]<total[mask-(1<<i)]+l[i]-(p-1)*d[i])
				{
					f=1;
					dp[mask]=dp[mask-(1<<i)]+xx+total[mask-(1<<i)];
					total[mask]=total[mask-(1<<i)]+l[i]-(p-1)*d[i];
				}
			}
		}
	}
	cout<<dp[(1<<n)-1]<<endl;
}
