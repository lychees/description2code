#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
vi apply ( const vi &p, const vi &c ) {
    vi res ( p.size() );
    rep ( i,p.size() ) {
        res[i]=p[c[i]];
    }
    return res;
}
vi applyPow ( vi p, int e ) {

    int n=p.size();
    vi res ( n );
    rep(i,n)res[i]=i;
    while ( e ) {
        if ( e&1 ) res=apply ( p,res );
        p=apply ( p,p );
        e>>=1;
    }
    return res;
}
vi inv(const vi &p){
 vi res(p.size());
 rep(i,p.size())res [p[i]]=i;
 return res;
}

int main() {
    ios_base::sync_with_stdio ( false );
    int k;
    cin>>k;
    string s;
    cin>>s;
    int n=s.size();
    int i=0;
    int j=n-1;
    vi p ( n );
    int c=0;
    while ( i<=j ) {
        p[c++]=i++;
        if ( i<=j ) p[c++]=j--;
    }
    p=applyPow ( p,k );
   // p=inv(p);
//     cout<<p<<endl;
    vector<char> res(n);
    rep ( i,n ) {
        res[p[i]]=s[i];
    }
    rep ( i,n ) cout<<res[i];
    cout<<'\n';
}
