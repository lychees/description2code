#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define pb push_back
#define mp make_pair
#define sz size()
#define ln length()
#define forr(i,a,b)                 for(int i=a;i<b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()	
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
	
#define debug                       if(1)
#define debugoff                    if(0)	

#define print(x)                 cerr << x << " ";    
#define pn()				     cerr << endl;
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define MAX 110
#define MOD 1000000007
LL pos[MAX],len[MAX],gap[MAX],ans[MAX];
vector<pii> v;
int main()
{
	ios::sync_with_stdio(false);
	int t,n,start,end;
	cin>>t;
	while(t--)
	{
		cin>>n;
		v.clear();
		for(int i=0;i<n;i++)	cin>>pos[i];
		for(int i=0;i<n;i++)	cin>>len[i];
		for(int i=0;i<n;i++)
			v.pb(mp(pos[i],len[i]));
		sort(all(v));

		for(int i=0;i<n-1;i++){
			end = v[i].first + v[i].second;
			start = v[i+1].first;
			gap[i+1] = start - end;
		}

		LL maxx = (1LL<<60),sum = 0;
		for(int i=0;i<n;i++){
			//ith plank is the center
			ans[i] = sum = 0;
			for(int j=i+1;j<n;j++)
				ans[j] = gap[j] + ans[j-1];
			for(int j=i;j>=1;j--)
				ans[j] = gap[j] + ((j != i)?ans[j+1]:0); 

			for(int j=1;j<n;j++)
				sum += ans[j];
			//trace1(sum);
			maxx = min(maxx,sum);
		}
		cout<<maxx<<endl;
	}
	return 0; 
}