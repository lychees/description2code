/*
@author savitansh
*/
#include <iostream>
#include <vector>
#include <stdio.h>
using namespace std;

int D[10000000];
int p[1000000];
int count[10000000];
int dig[10000000];
vector<int> primes;

int digitSum(int z){
	if(dig[z])
		return dig[z];
	int s= 0,q=z;
	while(z){
		s += z%10;
		z = z/10;
	}
	dig[q] = s;
	return s;
}
int gen(){
	for(int i=2; i<10000; i++){
		for(int j=2; i*j<=1000000; j++){
			p[i*j] = 1;
		}
	}
	for(int i=2; i<=1000000; i++){
		if(!p[i]){
		primes.push_back(i);
		D[i] = digitSum(i);
		}
	}
	int siz = primes.size();

	for(int i=0; i<siz; i++){
		for(int j=2; primes[i]*j<=10000000; j++)
		D[primes[i] * j] = D[j] + D[primes[i]];
	}
	for(int i=1; i<=10000000; i++)
	{
		count[i] = count[i-1];
		if(digitSum(i)==D[i])
			count[i]++;
	}
}

int main(){
	gen();
	int T;
	cin>>T;
	while(T){
		int l,r;
		scanf("%d",&l);
		scanf("%d",&r);
		int ans=0;
		if(l>=1)
		ans = count[r] - count[l-1];
		else
		ans = count[r];
		printf("%d\n",ans);	
		T--;
	}
	return 0;
}