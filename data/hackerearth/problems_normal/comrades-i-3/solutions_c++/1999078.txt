#include <iostream>
#include <vector>

using namespace std;

#define MAX 100007

int in[MAX],o[MAX],height[MAX]={};
vector <int> g[MAX];
int d=0;

void dfs(int node,int h)
{
	height[node]=h;
	in[node]=d++;
	for(int i=0; i<g[node].size();i++)
	{
			dfs(g[node][i],h+1);
	
	}
	o[node]=d++;
	
}



int main()
{
	int t,n,i,j,k,l,x,y,c,q;

    scanf(" %d",&t);
	while (t--)
	{
		
		
		 scanf(" %d",&n);
		for(i=1;i<=n;i++)
        {
            g[i].clear();
        }
        
		for(i=1;i<=n;i++)
		{
			 scanf(" %d",&c);
			if(c==0)
			k=i;
			else
			g[c].push_back(i);
			
		}
		d=0;
		dfs(k,0);

		 scanf(" %d",&q);
		while(q--)
		{
			 scanf(" %d",&x);
			  scanf(" %d",&y);
			if((in[y]<in[x])&&(o[x]<o[y]))
			cout << height[x]-height[y] -1 << endl;
			else
			cout << -1 << endl;
		}		
	}
	
	
    return 0;
}
