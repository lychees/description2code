from itertools import *
from math import *
"""
def gcd(a,b):
	if (a < b): return gcd(b,a)
	if (b == 0): return a
	return gcd(b,a%b)

def score(z):
	n = len(z)

	s = 1

	for i in range(n):
		for j in range(i+1,n):
			s *= gcd((j-i), abs(z[j] - z[i]))

	return s

n = input(); cnt = 0
D = {}

for z in permutations(range(1,n+1)):
	k = score(z)
	if (k not in D):
		D[k] = 0
	D[k] += 1

	cnt+=1

	if (cnt&((1<<20) - 1) == 0):
		print (cnt*1.0 / (factorial(12)))*100.0

print D
"""


L = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
L[1] = 1
L[2] = 2
L[3] = 8
L[4] = 68
L[5] = 1504
L[6] = 127792
L[7] = 57140352
L[8] = 258023200384
L[9] = 10151395367145472
L[10] = 3673835865235792306176
L[11] = 13318668301694192513859649536
L[12] = 531680718673514734573555796872790016


t = input()
while (t > 0):
    t -= 1

    n, m = map(int, raw_input().split())

    print L[n] % m
