#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define inf (ll)(1e9)
#define pi 3.141593
#define pb push_back
#define mp make_pair
#define fill(a,v) memset(a, v, sizeof a)
typedef long long ll;
ll n,m,ans2=0,ans1=0;
vector<ll> v[100001];
char gender[100001];
bool visit[100001],ok=true;
char color[100001];
void dfs(int node,char colour)
{
	if(visit[node])
	return;
	visit[node]=true;
	color[node]=colour;
	ll i;
	for(i=0;i<v[node].size();i++)
	{
		char c;
		if(colour=='p') c='b';
		else c='p';
		if(!visit[v[node][i]])
		{
			dfs(v[node][i],c);
		}
		else
		{
			if(color[v[node][i]]==colour)
			{
				ok=false;
				return;
			}
		}
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin>>n>>m;
	ll i;
	for(i=1;i<=n;i++)
	{
		cin>>gender[i];
	}
	for(i=0;i<m;i++)
	{
		ll a,b;
		cin>>a>>b;
		v[a].pb(b);
		v[b].pb(a);
	}
	/*
	p for PINK
	b for BLUE
	B for boy
	G for girl
	*/
	fill(visit,false);
	dfs(1,'p');
	if(ok)
	{
		for(i=1;i<=n;i++)
		{
			if(color[i]=='p' && gender[i]=='B') ans1++;
			else if(color[i]=='b' && gender[i]=='G') ans1++;
		}
		fill(visit,false);
		dfs(1,'b');
		for(i=1;i<=n;i++)
		{
			if(color[i]=='p' && gender[i]=='B') ans2++;
			else if(color[i]=='b' && gender[i]=='G') ans2++;
		}
		ll ans=min(ans1,ans2);
		cout<<ans<<endl;
	}
    return 0;
}



