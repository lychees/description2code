#include <bits/stdc++.h>
using namespace std ;

#define ft first
#define sd second
#define pb push_back
#define all(x) x.begin(),x.end()

#define ull unsigned long long int
#define ui unsigned int
#define ll long long int
#define vi vector<int>
#define vii vector<pair<int,int> >
#define viii vector<pair<pair<int,int>, int> >
#define pii pair<int,int>
#define piii pair<pii, int>
#define vl vector<ll>
#define vll vector<pair<ll,ll> >
#define pll pair<ll,ll>
#define mp make_pair

#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)

#define scll1(x) scanf("%lld",&x)
#define scll2(x,y) scanf("%lld%lld",&x,&y)
#define scll3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)

#define pr1(x) printf("%d\n",x)
#define pr2(x,y) printf("%d %d\n",x,y)
#define pr3(x,y,z) printf("%d %d %d\n",x,y,z)

#define prll1(x) printf("%lld\n",x)
#define prll2(x,y) printf("%lld %lld\n",x,y)
#define prll3(x,y,z) printf("%lld %lld %lld\n",x,y,z)

#define pr_vec(v) for(int i=0;i<v.size();i++) cout << v[i] << " " ;

#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)

#define fr(i, a, b) for(i=a; i<=b; i++)
#define fb(i, a, b) for(i=a; i>=b; i--)

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define debug( s ) cout << s << "\n"


const int maxn = 1e5 + 10;
vi adj[ maxn ];
int p[ maxn ], r[ maxn ], deg[ maxn ];

bool foo( const piii &a, const piii &b ) {
	if( a.sd != b.sd ) return a.sd < b.sd;
	else {
		if(a.ft.ft != b.ft.ft) return a.ft.ft > b.ft.ft;
		else return a.ft.sd > b.ft.sd;
	}
}

int find(int x) {
	if( x != p[x] ) 
		p[x] = find( p[x] );
	return p[x];
}

bool add(int u, int v) {
	int ru, rv;
	ru = find(u);
	rv = find(v);
	if( ru != rv ) {
		if( r[ru] < r[rv] ) {
			p[ru] = rv;
		} else {
			p[rv] = ru;
		}
		if( r[ru] == r[rv] ) r[ru] ++;
		return 1;
	}
	return 0;
}

void solve() {
	int n, m;
	cin >> n >> m;
	viii e(m);
	for(int i=0; i<m; i++) {
		int x, y, z;
		cin >> x >> y >> z;
		e[i].ft.ft = min(x, y);
		e[i].ft.sd = max(x, y);
		e[i].sd = z;
	}
	sort(all(e), foo);

	for(int i=1; i<=n; i++) {
		p[i] = i;
		r[i] = 0;
		deg[i] = 0;
	}

	ll w = 0;

	for( auto it: e ) {
		if( it.ft.ft != it.ft.sd && add(it.ft.ft, it.ft.sd) ) {
			w += it.sd;
			deg[it.ft.ft] ++;
			deg[it.ft.sd] ++;
		}
	}
	cout << w << "\n";
	for(int i=1; i<=n; i++) cout << deg[i] << " \n"[i == n];
}

int main() {
	// f_in( "input.txt" );
	// f_out( "output.txt" );
	int t; cin >> t;
	while( t-- ) solve();
	return 0;
}