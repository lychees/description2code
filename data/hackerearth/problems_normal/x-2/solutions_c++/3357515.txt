#include<bits/stdc++.h>
//zone
using namespace std;
long long int a[1000006];
long long int arr[1000006];
long long int sum[1000006];
int b_search(int i, int n,long long int k)
{
    int l = i,r = n, m;
    while(r - l > 1)
    {
        m = (l + r)/ 2;
        if(sum[m] - sum[i - 1] > k)//for the sum of range i to m;
        {
            r = m - 1;//if exceeds then shift higher limit one step back
        }
        else
            l = m;//else make initial limit mid
    }
    if(sum[r] - sum[i - 1] <= k)
    {
        return r;
    }
    if(sum[l] - sum[i - 1] <= k)
    {
        return l;
    }
    return -1;
}
int main()
{
    int t;
    long long int k;
    cin >> t;
    int n;
    int i;
    while(t--)
    {
    cin >> n >> k;
    for(i = 1  ; i <= n ; i++ )
    {
        cin >> a[i];
        sum[i] = sum[i - 1] + a[i];
        arr[i] = 0;
    }
    arr[i] = 0;//for last element's cumulative sum be as it is that's why zero because at some a[i + 1] loop would break
     int f;
     for(i = 1; i <= n  ; i++)
     {
         f = b_search(i,n,k);
         if(f != -1)
         {
             arr[f - i + 1]++; //because upto a[j] from a[i] that would be the span of length
         }
     }
     for(i = n ; i >= 0 ; i--)
     {
         arr[i] += arr[i + 1];
     }
     for(i = 1; i <= n ;  i++)
     {
         cout<<arr[i] << " ";
     }
     cout<<endl;
    }
    return 0;
}
