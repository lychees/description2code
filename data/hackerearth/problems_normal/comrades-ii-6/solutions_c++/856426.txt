#include <iostream>
#include <vector>
using namespace std;

void storePC(vector<int>& size, int i, vector<int>& v ){
	if(v[i]==0||size[i]!=0)
		return;

	storePC(size,v[i]-1,v);
	size[i] = size[v[i]-1]+1;
}



void findsolution(vector<int>& v){
	long long n = v.size();
	vector<int> size(n,0);
	for(int i=0; i<n; i++){
		storePC(size,i,v);
	}
	
	long long handshake =0;
	for(int i=0; i<n; i++)
		handshake+=size[i];
	
	long long  bumps = (n*(n-1))/2 - handshake;
	cout<<handshake<<" "<<bumps<<endl;
}

int main()
{
    int T;
    cin>>T;
    for(int i=0; i<T; i++){
    	int n;
    	cin>>n;
    	vector<int> s;
    	for(int i=0; i<n; i++){
    		int x;
    		cin>>x;
    		s.push_back(x);
    	}
    	findsolution(s);
    }
    return 0;
}