#include <bits/stdc++.h>
#define max(a,b)   (((a)>(b))?(a):(b))
#define min(a,b)   (((a)>(b))?(b):(a))
#define ulli       unsigned long long int
#define lli        long long int
#define pb         push_back
#define mp         make_pair
#define fi         first
#define se         second
#define all(x)     x.begin(),x.end()
#define rall(x)    x.rbegin(),x.rend()
#define vi         vector<lli>
#define vii        vector<vi>
#define vs         vector<string>
#define pii        pair<lli,lli>
#define pis        pair<lli,string>
#define rep(i,lo,hi) for(lli i=lo;i<hi;i++)
#define tr(container,it) \
    for(auto(container.begin()) it=container.begin();it!=container.end();it++)
#define present(container,element) \
    (container.find(element) != container.end())
#define cpresent(container,element) \
    (find(all(container),element) != container.end())
#define MOD        1000000007
#define noof1(x)    __builtin_popcount(x)
#define sievesize  100000000
#define PI         3.141592653589793238
#define gcd        __gcd
#define digits(n)  (floor(log10(n))+1)
#define mini       INT_MIN
#define maxi       INT_MAX
#define minlli     LONG_LONG_MIN
#define maxlli     LONG_LONG_MAX
#define ios        ios_base::sync_with_stdio(false);cin.tie(0)
using namespace std;
int p[100005];
int ranki[100005];
int findset(int x)
{
	if(p[x]==x)
		return x;
	return (p[x]=findset(p[x]));
}
void unionset(int u,int v)
{
	int px=findset(u);
	int py=findset(v);
	if(ranki[px]>ranki[py])
		p[py]=px;
	else
		p[px]=py;
	if(ranki[px]==ranki[py])
		ranki[py]+=1;
}
int main()
{
	int n,k,u,v,res=0;
	scanf("%d%d",&n,&k);
	rep(i,0,n)
	{
		p[i]=i;
		ranki[i]=0;
	}
	while(k--)
	{
		scanf("%d%d",&u,&v);
		unionset(--u,--v);
	}
	rep(i,0,n)
	{
		if(p[i]==i)
			res++;
	}
	cout<<res;
return 0;
}
