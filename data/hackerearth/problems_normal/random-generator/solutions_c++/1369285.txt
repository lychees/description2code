//JKM
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<list>
#include<bitset>
#include<cmath>
#include<cstdio>
#include<ctime>
#include<cstdlib>
#include<sstream>
#define ll long long
#define jkm() int t; scanf("%d",&t); while(t--)
using namespace std;
//bool isPerfectSquare(int x) { int s = sqrt(x); return (s*s == x); }  //Perfect Square Checking
//void display(vector<int>& v){ vector<int>::iterator it; for(it=v.begin();it!=v.end();it++) cout<<*it; } //Displaying vectors

int main(){
jkm(){
ll n,k,p;
cin>>n>>k>>p;
ll a[n];
ll i;
for(i=0;i<n;i++) cin>>a[i];
std::vector<int> v;
	sort(a,a+n);

for(i=0;i<=n-k;i++){
ll x=a[i+k-1]-a[i];
v.push_back(x);
}
vector<int>::iterator it;
it=min_element(v.begin(), v.end());
int pp=*it;

if(pp<=(2*p)) cout<<"NO"<<endl;
else cout<<"YES"<<endl;
v.erase(v.begin(), v.end());
}
return 0;
}