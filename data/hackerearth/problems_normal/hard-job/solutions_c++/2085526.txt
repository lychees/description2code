/********************************
**** Author : Piyush Adlakha ****
*********************************/
#include<bits/stdc++.h>
static long long bit[1500010] = {0},_map[500010];
long long min(long long a,long long b) {
	if (a<b) return a;
	return b;
}

void insert (long long *bit,int pos,int n) {
	while (pos<n) {
		bit[pos]++;
		pos += (pos & ~(pos-1));
	}
}

void del (long long *bit,int pos,int n) {
	while (pos<n) {
		bit[pos]--;
		pos += (pos & ~(pos-1));
	}
}

long long get (long long *bit,int pos) {
	
	long long val = 0;
	
	while(pos>0) {
		val += bit[pos];
		pos -= (pos & ~(pos-1));
	}
	
	return val - 1;
}

int main() {

	int n,m,s=500002,e,num;
	char ch[2];
	
	scanf("%d%d",&n,&m);
	
	e = s+n+1;
	
	for (int i=0;i<n;i++) {
		scanf("%d",&num);
		_map[num] = s + 1 + i;
		insert(bit,s+1+i,1500010);
	}
	
	long long ans = 0;
	
	while(m--) {
		scanf("%d%s",&num,&ch);
		int pos = _map[num];
		_map[num] = (ch[0] == 'l'?s--:e++);
		
		long long loc = get(bit,pos);
		ans += min(loc,(long long)n-1-loc);
		
		del(bit,pos,1500010);
		insert(bit,_map[num],1500010);		
		
	}
	
	printf("%lld\n",ans);
	
	return 0;
}
