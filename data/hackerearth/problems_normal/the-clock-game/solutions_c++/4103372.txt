#include <iostream>
using namespace std;
const int maxt = 100005;
void clockgame(int T[], int n, int B[], int I[], int p, int Ai[], int t[], int q)
{
	bool bv[maxt] = {false};
	int iv[maxt] = {0};
	for(int i = 0; i < n; ++i)
	{
		for(int j = 1; j*T[i] < maxt; ++j)
		{
			bv[j*T[i]] = true;
			++iv[j*T[i]];
		}
	}
	int bvb[maxt] = {0};
	int ivi[maxt] = {0};
	for(int i = 1; i < maxt; ++i)
	{
		bvb[i] = bvb[i-1] + (bv[i] == true);
		ivi[i] = (ivi[i-1] > iv[i])?ivi[i-1]:iv[i];
	}
	for(int i = 0; i < q; ++i)
	{
		if (t[i] == 0)
		{
			cout << "Asleep"<<endl;
		}else if (bvb[t[i]] > B[Ai[i]-1] || ivi[t[i]] > I[Ai[i]-1])
		{
			cout << "Awake"<<endl;
		}else
		{
			cout << "Asleep"<<endl;
		}
	}
}
int main()
{
    //cout << "Hello World!" << endl;
    int n, p, q;
    cin >> n;
    int *T = new int[n];
    for(int i = 0; i < n; ++i)
    {
    	cin >> T[i];
    }
    cin >> p;
    int *B = new int[p];
    int *I = new int[p];
    for(int i = 0; i < p; ++i)
    {
    	cin >> B[i] >> I[i];
    }
    cin >> q;
    int *Ai = new int[q];
    int *t = new int[q];
    for(int i = 0; i < q; ++i)
    {
    	cin >> Ai[i] >> t[i];
    }
    clockgame(T, n, B, I, p, Ai, t, q);
    delete[] T;
    delete[] B;
    delete[] I;
    delete[] Ai;
    delete[] t;
    return 0;
}
