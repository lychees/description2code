#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;
#define MOD 1000000007
class BIT
{
	vector<int> data;
	public:
	BIT(int sz):data(sz){}
	int query(int L)
	{
		if(L<=0) return 0;
		int ans=0;
		while(L)
		{
			ans+=data[L];
			ans%=MOD;
			L&=L-1;
		}
		return ans;
	}
	void update(int L,int delta)
	{
		while(L<data.size())
		{
			data[L]+=delta;
			data[L]%=MOD;
			L+=L&-L;
		}
	}
};
int arr[100001];
int main()
{
    BIT bits[3]={100001,100001,100001};
    long long ans=0;
   	int n;
   	scanf("%d",&n);
   	for(int i=0;i<n;++i)
   	{
   		scanf("%d",&arr[i]);
   		long long t1,t2;
   		t1 = bits[2].query(arr[i]-1) + bits[1].query(arr[i]-1);
   		t2 = bits[2].query(100000)-bits[2].query(arr[i])+bits[0].query(100000)-bits[0].query(arr[i]);
   		if(t1<0) t1+=(-t1/MOD+1)*MOD;
   		if(t2<0) t2+=(-t2/MOD+1)*MOD;
   	
   		ans  = (ans+t1+t2)%MOD;
   		bits[0].update(arr[i],t1);
   		bits[1].update(arr[i],t2);
   		bits[2].update(arr[i],1);
   	}
   	cout<<ans<<endl;
    return 0;
}
