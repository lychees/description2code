#include<stdio.h>
#include<stdlib.h>
#include<string>
#include<iostream>

using namespace std;

int L[5005][5005];
/* Returns length of LCS for X[0..m-1], Y[0..n-1] */
int lcs( string X, string Y, int m, int n )
{

   int i, j;

   /* Following steps build L[m+1][n+1] in bottom up fashion. Note
      that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */
   for (i=0; i<=m; i++)
   {
     for (j=0; j<=n; j++)
     {
       if (i == 0 || j == 0)
         L[i][j] = 0;

       else if (X[i-1] == Y[j-1] && X[i-1]!='a' && X[i-1]!='e' && X[i-1]!='i' && X[i-1]!='o' && X[i-1]!='u')
         L[i][j] = L[i-1][j-1] + 1;

       else
         L[i][j] = max(L[i-1][j], L[i][j-1]);
     }
   }

   /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */
   return L[m][n];
}

int main()
{
  string x, y;
  cin>>x>>y;

  int m = x.length();
  int n = y.length();

  printf("%d\n", lcs( x, y, m, n ) );

  return 0;
}
