#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define pii pair<int,int>
#define pll pair<ll,ll>
#define PB push_back
#define MP make_pair
#define N 100001

pair< int, pii > edges[N];
int parent[N];

int findParent(int i){
	if(parent[i] == i)
		return i;

	parent[i] = findParent(parent[i]);
	return parent[i];
}

void unionParent(int i, int j){
	i = findParent(i);
	j = findParent(j);
	parent[i] = parent[j] = min(i,j);
}

int main(){
	int n, m, i, j, k, x;
	ll ans = 0;

	scanf("%d%d", &n, &m);

	for(i = 1; i <= n; i++)
		parent[i] = i;

	for(x = 1; x <= m; x++)
		scanf("%d%d%d", &edges[x].second.first, &edges[x].second.second, &edges[x].first);

	sort(edges + 1, edges + m + 1);

	for(x = 1; x <= m; x++){
		i = edges[x].second.first;
		j = edges[x].second.second;
		k = edges[x].first;

		if(findParent(i) != findParent(j)){
			ans += k;
			unionParent(i,j);
		}
	}

	printf("%lld\n", ans);

	return 0;
}
