#include <stdio.h>
#include <string.h>

int knapsack(int wt[],int val[],int w,int n)
{
	int cnt[n+1][w+1];
	memset(cnt,0,sizeof(cnt));
	int k[n+1][w+1];
	int i,j;
	for(i=0;i<=n;i++)
		k[i][0]=0;
	for(i=0;i<=w;i++)
		k[0][i]=0;
	for(i=1;i<=n;i++){
		for(j=1;j<=w;j++){
			if(wt[i-1]<=j){
				int a = k[i-1][j-wt[i-1]]+val[i-1];
				int b = k[i-1][j];
				if(a>b){
					cnt[i][j] = 1;
					k[i][j] = a;
				}	
				else
				k[i][j] = b;
			}
			else{
				k[i][j]=k[i-1][j];
			}
		}
	}
	int W= w;
	for(i=n;i>0;i--){
		if(cnt[i][W]==1){
			//printf("%d %d\n",wt[i-1],val[i-1]);
			W = W-wt[i-1];
		}
	}
	return k[n][w];
}
int main()
{
	int t,m,w;
	scanf("%d",&t);
	while (t --) {
		scanf("%d",&m);
		int wt[m],val[m];
		int W;
		scanf("%d",&W);
		for (int i = 0; i < m; i++) {
			scanf("%d",&wt[i]);
		}
		for (int i = 0; i < m; i++) {
			scanf("%d",&val[i]);
		}
		printf("%d\n",knapsack(wt,val,W,m));
	}
	return 0;
}