# def mergearray(a,l1,b,l2):
# 	ptr1,ptr2=0,0
# 	c=[]
# 	while(ptr1<l1 and ptr2<l2):
# 		if a[ptr1]<b[ptr2]:
# 			c.append(a[ptr1])
# 			ptr1+=1
# 		elif a[ptr1]>b[ptr2]:
# 			# for j in xrange(ptr1,l1):
# 			# 	dic[a[j]]+=1
# 			acc=0
# 			temp=ptr2
# 			while(temp<l2 and b[temp]<a[ptr1]):
# 				acc+=1
# 				temp+=1
# 			c.extend(b[ptr2:temp])
# 			ptr2=temp
# 			for j in xrange(ptr1,l1):
# 				dic[a[j]]+=acc	
# 			# c.append(b[ptr2])
# 			# ptr2+=1
# 	if ptr1==l1:
# 		c.extend(b[ptr2:l2])
# 	elif ptr2==l2:
# 		c.extend(a[ptr1:l1])
# 	return c					

def mergearray(a,m,n):
	mid=(m+n)>>1
	p,q=m,mid+1
	c=[]
	while(p<=mid and q<=n):
		if a[p]>a[q]:
			c.append(a[q])
			q+=1
		elif a[p]<a[q]:
			dic[a[p]]+=q-mid-1
			c.append(a[p])
			p+=1
	while(p<=mid):
		dic[a[p]]+=q-mid-1
		c.append(a[p])
		p+=1
	while(q<=n):
		c.append(a[q])
		q+=1
	for i in xrange(n-m+1):
		a[m]=c[i]
		m+=1				
# def mergesort(a,m,n):
# 	mid=(m+n)/2
# 	if m==n:
# 		return [a[m]]
# 	if n==m+1:
# 		if a[n]<a[m]:
# 			dic[a[m]]+=1
# 			a[m],a[n]=a[n],a[m]
# 		return a[m:n+1]
# 	b=mergesort(a,m,mid)
# 	c=mergesort(a,mid+1,n)
# 	d=mergearray(b,mid-m+1,c,n-mid)
# 	return d
def mergesort(a,m,n):
	if(m<n):
		mid=(m+n)>>1
		mergesort(a,m,mid)
		mergesort(a,mid+1,n)
		mergearray(a,m,n)

t=input()
while(t>0):
	n=input()
	a,b=[],[]
	dic={}
	for i in xrange(n):
		temp=input()
		a.append(temp)
		b.append(temp)
		dic[a[i]]=0
	mergesort(a,0,n-1)
	for i in b:
		print dic[i],
	print	
	t-=1
