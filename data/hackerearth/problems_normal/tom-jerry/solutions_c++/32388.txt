#include<iostream>
using namespace std;

int c=0;
int visited[100][100]={0};

void dfs(int a[100][100],int i,int j,int n)
 {
     if(i==n-1 && j==n-1)
         {  c++;
         return;
         }
     if(i+1<n && a[i+1][j]==0 && !visited[i+1][j])
         {//cout<<"in i+1"<<endl;
         visited[i+1][j]=1;dfs(a,i+1,j,n);visited[i+1][j]=0;}
     if(j+1<n && a[i][j+1]==0 && !visited[i][j+1])
         {//cout<<"in j+1"<<endl;
         visited[i][j+1]=1;dfs(a,i,j+1,n);visited[i][j+1]=0;}
     if(i-1>=0 && a[i-1][j]==0 && !visited[i-1][j])
         {//cout<<"in i-1"<<endl;
         visited[i-1][j]=1;dfs(a,i-1,j,n);visited[i-1][j]=0;}
     if(j-1>=0 && a[i][j-1]==0 && !visited[i][j-1])
        {//cout<<"in j-1"<<endl;
        visited[i][j-1]=1; dfs(a,i,j-1,n);visited[i][j-1]=0;}
      if(i+1>=n || j+1>=n || j-1<0||i-1<0)
        return;     
 }

int main()
{
    int n,i,j;
    cin>>n;
    int a[100][100];
    visited[0][0]=1;
    for(i=0;i<n;i++)
      for(j=0;j<n;j++)
        cin>>a[i][j];
   
     dfs(a,0,0,n);
     cout<<c<<endl;
     
     cin>>n;

}
