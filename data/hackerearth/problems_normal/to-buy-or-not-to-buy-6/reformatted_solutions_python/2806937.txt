from fractions import Fraction
T = input()


def dfs(adjlist, n, u, v, e, visited):
    visited[u] = True
    # if(u == v):
    # return True
    # t = False
    for x in adjlist[u]:
        tu = x[0]
        te = x[1]
        if (not (visited[tu]) and (te < e)):
            dfs(adjlist, n, tu, v, e, visited)
    # return t


def part(adjlist, n, u, v):
    t = adjlist[u]
    e = 0
    # print("---------------------------")
    for x in t:
        if (x[0] == v):
            e = x[1]
    # print("e",e)
    visited = [False]*n
    visited[0] = True
    dfs(adjlist, n, u, v, e, visited)

    # print(visited)
    return (visited[u] and visited[v])


while (T > 0):
    # n = input()
    # k = input()
    n, k = map(int, raw_input().split())
    adjlist = [[] for _ in range(n+1)]
    for i in range(k):
        u, v, c = map(int, raw_input().split())
        adjlist[u].append([v, c])
        adjlist[v].append([u, c])
    # print(adjlist)
    # for i in range(n):
    # print(adjlist[i])
    m = input()
    c = 0
    for j in range(m):
        u, v = map(int, raw_input().split())
        b = part(adjlist, n+1, u, v)
        if (not (b)):
            c = c+1
    if (c == m):
        print("1/1")
    else:
        print(Fraction(c, m))
    T = T-1
