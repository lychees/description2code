#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<vector>
#include<bitset>
#include<map>
#include<queue>
#include<stack>
#include<set>
#include<cmath>
#include<algorithm>
#include<utility>
#include<climits>
#include<sstream>

using namespace std;

#define nl printf("\n")
#define space printf(" ")

#define mem(x,val) memset(x,val,sizeof(x))
#define rite(x) freopen(x,"w",stdout)
#define read(x) freopen(x,"r",stdin)

typedef long long ll;
typedef unsigned long long ull;

int main() {
//    read("in.txt");
//    rite("in2.txt");
//rite("out.txt");
    int t;
    cin >> t;
    int i,j,hostel,wakeup,open,matei,matej,h,m,r,s,n;
    int borrow,enter,reaches;
    char trash;
    bool possible;
    int anst, index;
    for(j = 1; j <= t; ++j) {

        cin >> n;

        cin >> h >>  trash >> m;

        hostel = h*60 + m;//curfew time
//        cout << hostel << endl;
        cin >> h >> trash >> m;
        wakeup = h*60 + m;//wakeup time

        cin >> h >> trash >> m;
        open = h*60 + m;//opening time of the shop

        cin >> r >> s;

        possible = false;

        for( i = 0 ; i < n ; ++i) {

            cin >> h >>  trash >> m;
            matei = h*60 + m;//return time to friend
            cin >> h >> trash >> m;
            matej = h*60 + m;//starting time he can borrow from friend

            if (wakeup < matei) {
                //can borrow before mate uses it or after
                //can only borrow before if you can return it in time
                //borrow time == wakeup time
                enter = max(open,wakeup + r);//time he reaches the shop
                reaches = enter + r + s;//time he returns to the hostel if he borrows before
                if (reaches >= matei) { //he borrows after as he cannot return in time --> this is where you WENT WRONG HE MUST RETURN before the roommate starts using it!!!
                    borrow = max(matej, wakeup);
                    enter = max(open,borrow+r);
                    reaches = enter + r + s;
                    }
                }
            else {//he borrows after
                borrow = max(matej, wakeup);
                enter = max(open,borrow+r);
                reaches = enter + r + s;
                }
//            cout << reaches << endl;
            if (reaches < hostel) { //return time is before the curfew and the time his friend uses the slippers
                if (possible == false) {
                    possible = true;
                    index = i + 1;
                    anst = reaches;
                    }
                else if (reaches < anst) {
                    anst = reaches;
                    index = i + 1;
                    }
                }
            }
//        cout << reaches << endl;
        if (possible) printf("Case %d: %d\n",j,index);
        else printf("Case %d: %d\n",j,-1);
        }
    return 0;
    }
