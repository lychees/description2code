#include <iostream>
#include <stdint.h>
#include <map>
#include <algorithm>

typedef uint32_t UI;
using namespace std;

int main()
{
	UI no_of_box;
	cin >> no_of_box;
	typedef map<UI,UI> Data;
	typedef Data::iterator DataItr;
	
	Data data;
	UI num = 0,box = 1;
	for(UI i = no_of_box; i > 0; --i) {
		UI x;
		cin >> x;
		if(num == 0) {
			num = x;
		}
		else
			num += x;
		
		data.insert(make_pair(num, box++));
	}
    
    //cout << "printing map" << endl;
    //for(DataItr it = data.begin(); it != data.end(); ++it) {
    //	cout << "key = " << it->first << " val " << it->second <<endl; //
    //}
    UI quries;
    cin >> quries;
    
    while(quries-- > 0) {
    	UI q;
    	cin >> q;
    	
    	DataItr itf = data.find(q);
    	if(itf != data.end()) {
    		//cout <<"found" << q <<endl;
    		cout << itf->second << endl;	
    	}
    	else {
    		//cout <<"not found" << q <<endl;
    		DataItr it = data.upper_bound(q);
    	
    		if(it != data.end()) {
    			//cout << "upper bound is" << it->first << " and q = " << q <<endl;
    			cout << it->second << endl;
    		}
    	}
    }
    
    return 0;
}
