#include<iostream>
#include<algorithm>

using namespace std;

long long fen[200005],n;

void update(long long pos,long long val){

    for(;pos<=n;pos+= pos&-pos){
        fen[pos]+=val;
    }

}

bool is_round(long long x){

    long long found=1,l=0,r=0;
    if(x>=0){
        while(x>0){if(found){l=x%10,r=x%10,found=0;}else {r=x%10;} x/=10;}
        if(l==r)return true;
    }
    return false;

}

long long getsum(long long pos){

    long long sum=0;
    for(;pos>0;pos-= pos&-pos){
        sum+=fen[pos];
    }
    return sum;


}

int main(){

    long long i,a[200005],found=1,q,x;
    cin>>n>>q;
    for(i=1;i<=n;i++)cin>>a[i];
    for(i=1;i<=n;i++){
        x=a[i];
        if(is_round(x))
        update(i,1);
    }
    while(q--){
        long long l,r,val,sum=0;
        cin>>x;
        if(x==2){
            cin>>l>>val;
            if(is_round(val)){if(!is_round(a[l]))update(l,1);}
            else {if(is_round(a[l]))update(l,-1);}
            a[l]=val;
        }
        else {
            cin>>l>>r;
            if(l==1)sum=getsum(r);
            else sum=getsum(r)-getsum(l-1);
            cout<<sum<<"\n";
        }
    }
    return 0;







}
