#include <iostream>
#include <math.h>
using namespace std;



bool isCube(long long x)
{
    
    long long root(round(cbrt(x)));
    if(x == root * root * root)
        return true;
    else
        return false;
    
}
int main()
{
    long long n,k;
    cin>>n>>k;
   long long** arr = new long long*[n];
    for(int i=0;i<n;i++)
    { arr[i] = new long long[n];
        for(int j=0;j<n;j++)
        { cin>>arr[i][j];
           // cout<<arr[i][j]<<" ";
        }
    }
    
    long count=0;
    /* get sum */
    long long** tmp = new long long*[n];
    for(int i = 0; i < n; ++i)
    tmp[i] = new long long[n];
    
    for(int j=0;j<n;j++)
    { long long sum = 0;
        for(int i=0;i<k;i++)
        {
            sum+=arr[i][j];
        }
        tmp[0][j] = sum;
        
        //remaining
        for (int i=1; i<n-k+1; i++)
        {
            sum += (arr[i+k-1][j] - arr[i-1][j]);
            tmp[i][j] = sum;
        }
    }
    
    //calculating sum of subarrays
    for(int i=0;i<n-k+1;i++)
    {
        long long sum = 0;
        for(int j=0;j<k;j++)
            sum+=tmp[i][j];
        
        if(isCube(sum))
            count++;
        
        for (int j=1; j<n-k+1; j++)
        {
            sum += (tmp[i][j+k-1] - tmp[i][j-1]);
            if(isCube(sum))
                count++;
        }
    }
    
    std::cout<<count;
    
            

    return 0;
}
