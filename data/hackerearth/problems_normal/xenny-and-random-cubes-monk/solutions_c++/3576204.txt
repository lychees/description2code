#include<bits/stdc++.h>
using namespace std;
#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 0x3f3f3f3f
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()
char ss[11][7];
string s;
int n,k;
ll dp[10][1<<10];// i th selection , kth bit 
int solve(int pos,int mask)//  position in the given string ,
{
    if(pos == k)
        return 1;
    if(dp[pos][mask] != -1)
        return dp[pos][mask];
    ll ret = 0;
    int i,j;
    for(i=0;i<n;i++)
    {
        if(mask&(1<<i))
            continue;
        int c = 0;
        for(j=0;j<6;j++)
        {
            if(ss[i][j] == s[pos])
                c++;
        }
        ret += (c*solve(pos+1,mask|(1<<i)))%MOD;
        ret %= MOD;
    }
    return dp[pos][mask] = ret;
}
int main()
{
    mset(dp,-1);
    int i,j;
    cin >> n >> k;
    
    for(i=0;i<n;i++)
    {
        for(j=0;j<6;j++)
        {
            cin >> ss[i][j];
            assert('a' <= ss[i][j] && ss[i][j] <= 'z');
        }
    }
    cin >> s;
    ll ans = solve(0,0);
    cout << ans << endl;
    return 0;

}