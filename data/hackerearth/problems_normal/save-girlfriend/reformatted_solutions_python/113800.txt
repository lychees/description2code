primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,
          43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103]
pre = [
    1,
    2,
    2,
    3,
    2,
    4,
    2,
    4,
    3,
    4,
    2,
    6,
    2,
    4,
    4,
    5,
    2,
    6,
    2,
    6,
    4,
    4,
    2,
    8,
    3,
    4,
    4,
    6,
    2,
    8,
    2,
    6,
    4,
    4,
    4,
    9,
    2,
    4,
    4,
    8,
    2,
    8,
    2,
    6,
    6,
    4,
    2,
    10,
    3,
    6,
    4,
    6,
    2,
    8,
    4,
    8,
    4,
    4,
    2,
    12,
    2,
    4,
    6,
    7,
    4,
    8,
    2,
    6,
    4,
    8,
    2,
    12,
    2,
    4,
    6,
    6,
    4,
    8,
    2,
    10,
    5,
    4,
    2,
    12,
    4,
    4,
    4,
    8,
    2,
    12,
    4,
    6,
    4,
    4,
    4,
    12,
    2,
    6,
    6,
    9,
    2,
    8,
    2,
    8]


def smartDivisorGenerator(n):
    limit = 1
    if n in primes:
        return 2
    if n < 104:
        return pre[n-1]
    for val in primes:
        counter = 1
        while True:
            if n % val == 0:
                counter += 1
                n = n/val
            else:
                break
        limit = limit * counter
    return limit


def get_result(x, y):
    highest = 0
    value = 0
    for val in range(x, y+1):
        div = smartDivisorGenerator(val)
        if div > highest:
            value = 0
            highest = div
            value += 1
        elif div == highest:
            value += 1
    return value+1


T = input()
for res in range(T):
    a = raw_input().split()
    print get_result(int(a[0]), int(a[1]))
