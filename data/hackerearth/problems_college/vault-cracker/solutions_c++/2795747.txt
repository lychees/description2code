#include <bits/stdc++.h>
using namespace std;
const int maxn = 1234567;
long long cnt[26][maxn]; 
string s, p;

char adjust(char x)
{
     if ((int)x >= 65 && (int)x <= 90)
         return x;
     if ((int)x >= 97 && (int)x <= 122)
         return (x - 32);
     if (x >= '0' && x <= '9')
         return ('A' + (x - '0'));
}

int main()
{
	ios::sync_with_stdio(false);
	cin >> p >> s;
	
	int len = s.length();
	for (int i = 0; i < len; i++)
	     s[i] = adjust(s[i]);
	     
	for (int j = 0; j < len; j++) 
		 cnt[s[j] - 'A'][j]++;
	
	int plen = p.length();
	for (int i = 0; i < plen; i++)
	     p[i] = adjust(p[i]);
	     
	for (int i = plen - 2; i >= 0; i--) {
		
	  	 for (int j = len - 2; j >= 0; j--)
		      cnt[p[i + 1] - 'A'][j] += cnt[p[i + 1] - 'A'][j + 1];
		 for (int j = len - (plen - i); j >= 0; j--)
		 	  cnt[p[i] - 'A'][j] *= cnt[p[i + 1] - 'A'][j + 1];
		 
	}
	
	long long ans = 0;
	for (int i = 0; i < len; i++)
	     ans += cnt[p[0] - 'A'][i];
	     
    cout << ans << endl;
    
	return 0;
}