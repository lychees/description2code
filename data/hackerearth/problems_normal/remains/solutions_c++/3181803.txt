#include <iostream>
#include <stdio.h>
#include <algorithm>
using namespace std;
typedef long long ll;
ll get(ll x, ll y, ll N) {
    //cout << x << " " << y << " " << N << endl;
    if(N <= 0) return 0;
    if(x == 0 && y == 0) return 0;
    if(N == 1) return x; if(N == 2) return x + y;
    ll ans = 0;
    if(x == 0) {
        ans = (N / 3) * (2 * y);
        if((N % 3) >= 2) ans = ans + y; return ans;
    } else if(y == 0) {
        ans = (N / 3) * (2 * x);
        if(N % 3 >= 1) ans = ans + x;
        return ans;
    }
    if(x > y) {
        ans = x; N--;
        ll m = x / y; m = m / 2;
        ll total = m * 3;
        if(N >= total) {
            ans = ans + (y * m); ll k = 2 * m;
            ll first = x - y; ll last = x - (k * y);
            ll temp = first + last; if(temp & 1) k = k / 2; else temp = temp / 2;
            ans = ans + (temp * k);
            temp = x / y; ll more = 0;
            if(temp & 1) {
                more = get(y, x - (temp * y), N - total);
            } else {
                more = get(y, temp * y + y - x, N - total);
            }
            return ans + more;
        } else {
            m = N / 3; total = 3 * m;
            ans = ans + (y * m); ll k = 2 * m;
            ll first = x - y; ll last = x - (k * y);
            ll temp = first + last; if(temp & 1) k = k / 2; else temp = temp / 2;
            ans = ans + (temp * k);
            k = 2 * m; ll a = x - (k * y);
            return ans + get(y, max(a, y) - min(a, y), N - total);
        }
    }
    if(x <= y) {
        return (x + get(y, y - x, N - 1));
    }
}
void go(ll x, ll y, ll N) {
    ll now = get(x, y, N); ll xx = x, yy = y, NN = N;
    int n = 0; ll ans = 0;
    //printf("%lld\n", get(x, y, N));
    for(; n < N && (x != y); n++) {
        ans = ans + x;
        ll z = max(x, y) - min(x, y);
        x = y; y = z;

    }
    ans = ans + (((N - n) / 3) * (2 * x)) + (((N - n) % 3) * x);
    if(ans != now) {
        cout << xx << " " << yy << " " << NN << endl;
    }
    //printf("%lld\n", ans);

}

void solve() {
    ll x, y, N; scanf("%lld %lld %lld", &x, &y, &N);
    int n = 0; ll ans = 0;
    printf("%lld\n", get(x, y, N));
    /*for(; n < N && (x != y); n++) {
        ans = ans + x;
        ll z = max(x, y) - min(x, y);
        x = y; y = z;

    }
    ans = ans + (((N - n) / 3) * (2 * x)) + (((N - n) % 3) * x);

    printf("%lld\n", ans);*/
}
int main() {
    //for(int i = 0; i < 11; i++) for(int j = 0; j < 11; j++) for(int k = 2; k <= 10; k++) go(i, j, k);
    int t; scanf("%d", &t);
    while(t--) solve();
}
