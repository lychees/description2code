#include <bits/stdc++.h>
#define mod 1000000007
#define open freopen("/home/kislaya/inp.txt","r",stdin);
#define close freopen("/home/kislaya/out.txt","w",stdout);
#define pb push_back 
#define ss second
#define ff first
#define powerLev9000 2000000000
#define optimize_shit cin.sync_with_stdio(0);cin.tie(0);
using namespace std;
typedef long long int ll;
typedef pair<int, int> ii;
int n1, m1, n2, m2;
ll s1[701][701], s2[701][701];
ll pw1[200001], pw2[200001];
vector<ll>lel;
inline ll hash_sq1(const int i, const int j, const int x)
{
	ll tmp = (s1[i + x][j + x] - s1[i + x][j] - s1[i][j + x] + s1[i][j]);
	tmp *= pw1[200000 - i] * pw2[200000 - j];
	return tmp;
}
inline ll hash_sq2(const int i, const int j, const int x)
{
	ll tmp = (s2[i + x][j + x] - s2[i + x][j] - s2[i][j + x] + s2[i][j]);
	tmp *= pw1[200000 - i] * pw2[200000 - j];
	return tmp;
}
bool check(int x)
{
	lel.clear();
	for (int i = 0; i + x <= n1; i++)
		for (int j = 0; j + x <= m1; j++)
			lel.pb(hash_sq1(i, j, x));
	sort(lel.begin(), lel.end());
	for (int i = 0; i + x <= n2; i++)
		for (int j = 0; j + x <= m2; j++)
		{
			ll tmp = hash_sq2(i, j, x);
			int z = lower_bound(lel.begin(), lel.end(), tmp) - lel.begin();
			if (z != lel.size() and lel[z] == tmp)return true;
		}
	return false;
}
int main()
{
	optimize_shit
		//   open close
		cin >> n1 >> m1;
	pw1[0] = pw2[0] = 1;
	for (int i = 1; i <= 200000; i++)
		pw1[i] = pw1[i - 1] * 1003, pw2[i] = pw2[i - 1] * 1007;
	ll x;
	for (int i = 1; i <= n1; i++)
		for (int j = 1; j <= m1; j++)
			cin >> x, s1[i][j] = s1[i - 1][j] + s1[i][j - 1] - s1[i - 1][j - 1] + x*pw1[i] * pw2[j];
	cin >> n2 >> m2;
	for (int i = 1; i <= n2; i++)
		for (int j = 1; j <= m2; j++)
			cin >> x, s2[i][j] = s2[i - 1][j] + s2[i][j - 1] - s2[i - 1][j - 1] + x*pw1[i] * pw2[j];
	ll l = 0, r = 700, mid;
	while (l<r)
	{
		mid = (l + r + 1) / 2;
		if (check(mid))
			l = mid;
		else
			r = mid - 1;
	}
	cout << l << "\n";
	return 0;
}