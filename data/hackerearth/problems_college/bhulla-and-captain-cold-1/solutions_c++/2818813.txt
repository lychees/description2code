/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
ill ABS(ill a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif
}

/* Input opener ends */  

int n;
ill dp[1000005][3];
ill cost[1000005][3];

ill f(int idx,int last) {

    if ( idx == n ) return 0;
    ill &res = dp[idx][last];
    if ( res != -1 ) return res;

    int nxt = (last+1)%3;
    int prv = (last+2)%3;
    res = min( cost[idx][nxt] + f(idx+1,nxt), cost[idx][prv] + f(idx+1,prv) );
    return res;

} 
 
int main() {
    input();
    int t; S(t);
    while (t-- ) {
        
        S(n);
        F(i,0,n) {
            F(j,0,3) Sl(cost[i][j]);
        }
        M(dp,-1);
        ill res = min(cost[0][0] + f(1,0), cost[0][1] + f(1,1));
        res = min(res, cost[0][2] + f(1,2));
        printf("%lld\n", res);

    }
    return 0;
} 