#include <iostream>
#include<hash_map>
#include<map>
#include<string.h>
#include <string>
#include <ext/hash_map>

namespace __gnu_cxx
{
        template<> struct hash< std::string >
        {
                size_t operator()( const std::string& x ) const
                {
                        return hash< const char* >()( x.c_str() );
                }
        };
}
using namespace std;

int main()
{
    int N;
	cin >> N;
	__gnu_cxx::hash_map<string,bool> result;
	int no_players = pow(2,N)-1;
	char player1[10],player2[10];
	for(int i=0;i<no_players;i++)
	{
		std::cin>>player1;
		std::cin>>player2;
		result[player2] = false;
		__gnu_cxx::hash_map<string, bool>::iterator it = result.find(player1);
		
		if (it == result.end())
		{
			result[player1] = true;
		}
		else
		{
				//std::cout<<it->first << " lal "<<it->second<<endl;
				if(it->second)
					result[player1] = true;
		}
	}
    for(__gnu_cxx::hash_map<string,bool>::iterator i = result.begin(); i != result.end(); i++)
	{
		//std::cout<<i->first << " lol "<<i->second;
		if(i->second == true)
		
		{
			std::cout << i->first;
			break;
		}
	}
	return 0;
}
