    #include<bits/stdc++.h>
    using namespace std;
    typedef long long ll;
     
    inline void fastRead(ll *a)	
    {
    register char c=0;
    while (c<33) c=getchar_unlocked();
    *a=0;
    while (c>33)
    { *a=*a*10+c-'0';
    c=getchar_unlocked();
    }
    }
    #define pc(x) putchar_unlocked(x);
    inline void writeInt (ll n)
    {
    ll N = n, rev, count = 0;
    rev = N;
    if (N == 0) { pc('0'); pc('\n'); return ;}
    while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
    rev = 0;
    while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;} //store reverse of N in rev
    while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
    while (count--) pc('0');
    }
     
    ll dp[100010];
    ll calc(ll i){
    if(i==1 or i==2) return 1ll;
    if(i%2) return 2ll*calc(i/2)+1;
    else return 2ll*calc(i/2)-1;
    }
    void precalc(){
    dp[0] = 0;
    for (int i = 1; i < 100005; i ++) dp[i] = calc(i);
    }
     
    int main() {
    precalc();
    int t; scanf("%d",&t);
    while (t --) {
    ll n; fastRead(&n);
    if(n >= 100000) {
    cout << calc(n) << endl;
    continue;
    }
    writeInt(dp[n]);
    printf("\n");
    }
    return 0;
    }
