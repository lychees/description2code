//Abhishek Bansal
#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define loop(i,a,b) for(int i=a;i<b;i++)
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
#define bitcount(n) __builtin_popcount(n)
#define DRT()  int t; cin>>t; while(t--)
#define TRACE
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
using namespace std;
typedef long long int lli;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< ii > vii;
lli modpow(lli a,lli n,lli temp){lli res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;}
//***********************************END OF TEMPLATE*********************************************************************
const int MAX = 1000002;
int seive[MAX],K;
lli phi[100005],L,R;
lli rem[100002];
void gensieve(){
	for(int i=2;i*i<MAX;i++){
		if(seive[i]==0){
			for(int j=i*i;j<MAX;j+=i)seive[j]=1;
		}
	}
}
lli getceil(lli a,lli b){
	return lli(ceil(double(a)/double(b)));
}
void etf(){
	int r = sqrt(R);
	lli temp = R;
	for(int i=0;i<=R-L;i++)rem[i]=phi[i]=i+L;
	for(int i=2;i<=r;i++){
		if(seive[i]==0){
			if(i>=L){
				for(lli k=i;k<=R;k+=i){
					phi[k-L]-=phi[k-L]/i;
					while(rem[k-L]%i==0)rem[k-L]/=i;
				}
			}
			else{
				lli tm = getceil(L,i);
				tm*=i;
				for(lli k =tm;k<=R;k+=i){
					phi[k-L]-=phi[k-L]/i;
					while(rem[k-L]%i==0)rem[k-L]/=i;
				}
			}
		}
	}
	for(int i=0;i<=R-L;i++){
		if(rem[i]>1)phi[i]-=phi[i]/rem[i];
	}
}
double solve(){
	int ret=0;
	for(int i=0;i<=R-L;i++)if(phi[i]%K==0)ret++;
	return double(ret)/double(R-L+1);
}
int main(){
	int t;
	gensieve();
	si(t);
	while(t--){
		cin>>L>>R>>K;
		etf();
		printf("%.6lf\n",solve());
	}
	return 0;
}
