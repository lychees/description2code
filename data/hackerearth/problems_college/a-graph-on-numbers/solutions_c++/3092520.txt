#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cassert>
using namespace std;

#define MAXN 10000000
#define MAXC 100000

bool isp[MAXN+1];
int sp[MAXN+1];

void preprocess()
{
    memset(isp,true,sizeof(isp));
    isp[0] = isp[1] = 0;
    for(int i=2;i*i<=MAXN;i++){
        if(isp[i]){
            for(int j=i*i;j<=MAXN;j+=i){
                isp[j] = 0;
                if(sp[j] == 0) sp[j] = i;
            }
        }
    }
    for(int i=1;i<=MAXN;i++) if(sp[i] == 0) sp[i] = i;
}

int func(int u,int v)
{
    int result = 0;
    while(u > 1 && v > 1){
        if(sp[u] == sp[v]){
            u /= sp[u];
            v /= sp[v];
        }
        else if(sp[u] < sp[v]){
            u /= sp[u];
            result++;
        }
        else{
            v /= sp[v];
            result++;
        }
    }
    while(u > 1){
        u /= sp[u];
        result++;
    }
    while(v > 1){
        v /= sp[v];
        result++;
    }
    return result;
}

int main()
{
    preprocess();
    //freopen("input3.txt", "r", stdin);
    //freopen("junk.txt", "w", stdout);
    int cases;
    scanf("%d", &cases);
    assert(cases <= MAXC);
    while(cases--){
        int u,v;
        scanf("%d %d", &u, &v);
        assert(u > 0 && u <= MAXN);
        assert(v > 0 && v <= MAXN);
        printf("%d\n", func(u,v));
    }
    return 0;
}