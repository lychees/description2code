#include <bits/stdc++.h>
#include <vector>
using namespace std;

vector <int> v[100001];
vector <int> w[100001];
int visited[100001];

typedef struct pointer{
	int node;
	int distance;
}pointer;

pointer dfs(int a){
	pointer p,p1;
	p.distance = 0;
	p.node = a;
	int i;
	visited[a]=1;
	for(i=0;i<v[a].size();i++){
		if(!visited[v[a][i]]){
			p1 = dfs(v[a][i]);
			if(p1.distance + w[a][i] > p.distance){
				p.distance = p1.distance + w[a][i];
				p.node = p1.node;
			}
		}
	}
	return p;
}

int main()
{
	int t,n,a,b,we,i,dis;
	pointer p;
	cin >> t;
	while(t--){
		cin >> n;
		for(i=1;i<=n;i++){
			visited[i]=0;
			v[i].clear();
			w[i].clear();
		}
		for(i=1;i<=n-1;i++){
			cin >> a >> b >> we;
			v[a].push_back(b);
			v[b].push_back(a);
			w[a].push_back(we);
			w[b].push_back(we);
		}
		p = dfs(1);
		for(i=1;i<=n;i++){
			visited[i]=0;
		}
		p = dfs(p.node);
		dis = p.distance;
		if(dis<=100){
			printf("0 ");
		}else if(dis<=1000){
			printf("100 ");
		}else if(dis<=10000){
			printf("1000 ");
		}else{
			printf("10000 ");
		}
		printf("%d\n",dis);
	}
    //cout << "Hello World!" << endl;
    return 0;
}
