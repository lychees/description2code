#include<bits/stdc++.h>
using namespace std;
long long  primes[1000010];
long long prefactor[1000010];
long long dp[1000010];
long long totent(long long num)
{
	long long prev=prefactor[num];
	long long result;
	result=num;
	result=result-result/prev;
	while(1)
	{
		num/=prefactor[num];
		if(prefactor[num]==1)
		{
			break;
		}
		else if(prefactor[num]!=prev)
		{
			prev=prefactor[num];
			result=result-result/prev;
		}	
	}
	return result;
}

void sieve()
{
	long long i,j,k=0;
	for(i=1;i<=1000001;i++)
		primes[i]=1;
	for(i=2;i<=1000001;i++)
	{
		if(primes[i]==1)
		{
			for(j=i;j*i<=1000001;j++)
			{
				primes[j*i]=0;
			}
		}
	}
	for(i=1;i<=1000001;i++)
	{
		if(primes[i]==1)
			primes[k++]=i;
	}
}
 
void prefact()
{
	prefactor[1]=1;
	for(long long i=2;i<=1000001;i++)
	{
		if(!prefactor[i])
		{
			prefactor[i]=i;
			for(long long j=i;j*i<=1000001;j++)
			{
				if(!prefactor[j*i])
					prefactor[j*i]=i;
			}
		}
	}
}
 

int main()
{
	
	
	sieve();
	prefact();
	long long t,n,ans;
	cin>>t;
	while(t--)
	{
		cin>>n;
		if(n==0||n==1)
			ans=1;
		else
			ans=totent(n);
		cout<<ans<<endl;
	}
	return 0;
}