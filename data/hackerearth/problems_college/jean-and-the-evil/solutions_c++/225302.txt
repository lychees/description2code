#include<stdio.h>
#include<iostream>
#include<cmath>
#include<string>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<utility>
#define PB push_back
#define MP make_pair
#define LL long long int
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)

using namespace std;


struct node
{
	int l,r,val,val_left,val_right,total_val;
};

node st[4000001];
int a[1000001],update_val,arr[50001];

inline int max(int x, int y, int z)
{
	return max(max(x,y),z);
}

void construct(int i, int left, int right)
{
	st[i].l = left;
	st[i].r = right;
	if(left == right)
	{
		st[i].val = a[left];
		st[i].val_left = a[left];
		st[i].val_right = a[right];
		st[i].total_val = a[right];
		arr[left] = i; 
		return;
	}
	int mid = (left + right)/2;
	construct((2 * i), left, mid);
	construct((2 * i + 1), mid + 1, right);
	st[i].val = max(st[2*i].val, st[2*i+1].val, st[2*i].val_right + st[2*i+1].val_left);
	st[i].val_left = max(st[2*i].val_left, st[2*i].total_val + st[2*i+1].val_left);
	st[i].val_right = max(st[2*i+1].val_right, st[2*i+1].total_val + st[2*i].val_right);
	st[i].total_val = st[2*i].total_val + st[2*i + 1].total_val;
	return;
	
}


int main()
{
	int i,t,n;
	sc(t);
	while(t--)
	{
		sc(n);
		for(i=1;i<=n;i++)
		sc(a[i]);
		construct(1,1,n);
		cout<<st[1].val<<endl;
	}
}