// Bismillah-ir-rahman-ir-rahim
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <climits>
#define de(x) cerr << #x << "=" << x << endl
using namespace std;

const int maxn = 150009;
int naruto[maxn];
int dishes[maxn];

int binarySearch(int lo, int hi, int *naruto, int *dishes, int n, int m) {
    while(lo < hi) {
        int mid = lo + (hi - lo)/2;

        // check if distance mid works
        int x=0, y=0; // indices for naruto and dishes array
        while(x<n and y <m) {
            if( abs(naruto[x] - dishes[y]) <= mid ) {
                x++; y++;
            } else {
                y++;
            }
        }
        bool works=false;
        if(x == n) works = true;

        if(works) {
            hi = mid;
        } else {
            lo = mid+1;
        }
    }
    return hi;
}

int main() {
    int t; cin>>t;
    while(t--) {
        int n,m; cin>>n>>m;
        for(int i=0; i<n; i++) cin>>naruto[i];
        for(int i=0; i<m; i++) cin>>dishes[i];

        sort(naruto, naruto + n);
        sort(dishes, dishes + m);

        int lo = 0, hi = 1e9;//dishes[m-1] - dishes[0];
        cout<< binarySearch( lo, hi, naruto, dishes, n, m)<<endl;
    }

    return 0;
}

