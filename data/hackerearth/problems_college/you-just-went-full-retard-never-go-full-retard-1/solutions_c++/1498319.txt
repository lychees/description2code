#include<bits/stdc++.h>
using namespace std;
typedef long long ll;


int miller (int,int);
int power(int,int,int);

main()
{
	ll i,n=1,c;
	ll t;
	cin>>t;
	while(t--){
		cin>>n;
		if(n<2)
			puts("NO");
		
		else{
			ll f=0;
			for(i=2;i*i<=n;i++)
				if(n%i==0){
					puts("NO");
					f=1;
					break;
				}
			if(!f)
				puts("YES");
		}
	}
	return 0;
}

int miller(int n,int a)
{
	int d=n-1,s=0,r;
	long long k;
	
	while(!(d & 1<<s))			//calculate s & d in n-1=(2^s).d	(d is always odd)
		s++;
	d=d>>s;
	
	k=power(a,d,n);			//k=(a^d)%n
	
	if(k==1 || k==n-1)
		return 1;
	
	for(r=0;r<s;r++)		//k=(k^2)%n  do this till 0<=r<=(s-1)
	{
		k=(k*k)%n;
		
		if(k==n-1)
			return 1;
		
		if(k==1)
			return 0;
	}
	return 0;
}

int power(int a,int d,int n)	//complexity o(log d)
{
	long long x=1,y=a;
	while(d>0)
	{
		if(d&1)
			x=(x*y)%n;
		y=(y*y)%n;
		d=d>>1;
	}
	return x%n;
}



