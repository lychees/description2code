#include<bits/stdc++.h>
using namespace std;
int visited[100005];
int dist[100005];
int n;
vector < pair <int,int> > v[100005];
int bfs(int ind)
{
	queue<int>q;
	q.push(ind);
	while(!q.empty())
	{
		int idx=q.front();
		q.pop();
		for(int i=0;i<v[idx].size();i++)
		{
			int first=v[idx][i].first;
		//	int second=v[idx][i].second;
			if(visited[first]==0)
			{
				visited[first]=1;
				q.push(first);
				dist[first]+=dist[idx]+1;
			}
		}
	}
	int maxi=INT_MIN;
	int in=-1;
	for(int i=1;i<=n;i++)
	{
		if(dist[i]>maxi)
		{
			maxi=dist[i];
			in=i;
		}
	}
	return in;
}
int main()
{
		scanf("%d",&n);
		int i,j;
		int a,b,dis;
		for(i=1;i<=n;i++)
		v[i].clear();
		dis=1;
		for(i=0;i<n-1;i++)
		{
			scanf("%d %d",&a,&b);
			v[a].push_back(make_pair(b,dis));
			v[b].push_back(make_pair(a,dis));
		}
		for(i=1;i<=n;i++)
		{
			visited[i]=0;
			dist[i]=0;
		}
		int start=bfs(1);
		//printf("%d\n",start);
		for(i=1;i<=n;i++)
		{
			visited[i]=0;
			dist[i]=0;
		}
		int answer=bfs(start);
		//printf("%d\n",answer);
		answer=dist[answer];
		printf("%d\n",answer);
	
	return 0;
}