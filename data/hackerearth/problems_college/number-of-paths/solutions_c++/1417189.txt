///ROHIT PATIYAL///

#include <iostream>
#include <cstdio>	//for prllif and scanf (faster io)
#include <cmath> 	//for logl2() and pow etc math functions
#include <algorithm>	//for sort and other algorithms
#include <vector> 	//for vectors(resizable arrays)
#include <cstring>	//for memset
#include <cstdlib>
#include <queue>
#include <stack>
#include <set>
#include <map>				
using namespace std;

#define lli long long int
#define ull unsigned long long	//(0 - 18446744073709551615) ie (0 - 10^19) 	lli - 0 to 4294967295 ie (0 - 10^9)
#define rep(i,b) for(i=0;i<b;i++)
#define repab(i,a,b) for(i=a;i<b;i++)
#define sws ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie (NULL);
#define prlliArray(a,size) for(lli o=0;o<size;o++){cout<<a[o]<<" ";}cout<<endl;

lli DP[1001][1001];

lli modulo(lli N, lli m){
	if(N>=m)
		N = N%m;
	return N;
}

void pre(){
	lli i, j;
	DP[0][0] = 0;
	rep(i,1001){
		DP[i][0] = 1;
		DP[0][i] = 1;
	}
	repab(i,1,1001){
		repab(j,1,1001){
			if(i-1>=0 && j-1>=0)
				DP[i][j] = modulo(DP[i-1][j] + DP[i][j-1], 1000000007); 
		}
	}
	// for (lli i = 0; i < 6; ++i)
	// {
	// 	for (lli j = 0; j < 6; ++j)
	// 	{
	// 		cout<<DP[i][j]<<" ";
	// 	}
	// 	cout<<endl;
	// }
}




class Polli{
public:
	lli x;
	lli y;
};
bool bysum(Polli a, Polli b){
	if(a.x == b.x)
		return a.y < b.y;
	return a.x < b.x;
}

//max stack size allowed is 10^8
int main(){
	//max stack size allowed is 10^6
	sws;
	lli t, T, N, P, c;
	cin>>T;
	pre();
	rep(t, T){
		cin>>N>>P;
		Polli checkPollis[P+1];
		rep(c,P){
			cin>>checkPollis[c].x>>checkPollis[c].y;
		}
		checkPollis[P].x = N-1;
		checkPollis[P].y = N-1;
		sort(checkPollis, checkPollis + P, bysum);
		Polli prev;
		prev.x = 0;
		prev.y = 0;
		lli ans = 1;
		rep(c,P+1){
			ans = modulo(ans * DP[checkPollis[c].x - prev.x][checkPollis[c].y - prev.y], 1000000007);
			prev.x = checkPollis[c].x;
			prev.y = checkPollis[c].y;
			//cout<<ans<<endl;
		}
		cout<<ans<<endl;
	}
	return 0;
} 
	