#include <bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define LL long long
#define MAXN 1000001
#define M 1000000007
#define F first
#define S second
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
using namespace std;


struct node{
    int l, r, val;
};

node st[4 * (MAXN + 1)];

void construct(int i, int left, int right){
    st[i].l = left;
    st[i].r = right;
    if(st[i].l == st[i].r){
        st[i].val = 0;
        return;
    }
    int mid = (st[i].l + st[i].r) / 2;

    construct(2 * i, left, mid);
    construct(2 * i + 1, mid + 1, right);
    st[i].val = 0;
    return;
}

int query(int i, int left, int right){
    if(st[i].l == left && st[i].r == right){
        return st[i].val;
    }

    int mid = (st[i].l + st[i].r) / 2;
    if(left <= mid && right <= mid){
        return query(2 * i, left, right);
    }

    if(left > mid && right > mid){
        return query(2 * i + 1, left, right);
    }

    return (query(2 * i, left, mid) + query(2 * i + 1, mid + 1, right));
}

void update(int i, int pos){
    if(st[i].l == st[i].r){
        st[i].val++;
        return;
    }
    int mid = (st[i].l + st[i].r) / 2;

    if(pos <= mid)
        update(2 * i, pos);
    else
        update(2 * i + 1, pos);
    st[i].val = st[2 * i].val + st[2 * i + 1].val;
    return;
}

LL a[2123];

int main(){
    int n, t, i, j, k;
    sc(n);sc(k);
    for(i=1;i<=n;i++)
        scl(a[i]);

    construct(1, 1, k);
    if(a[1] * a[2] <= k){
        update(1, (int)(a[1] * a[2]));
    }

    LL ans = 0;
    int temp;
    for(i=3;i<=n;i++){
        temp = k / a[i];
        if(temp != 0)
        ans += query(1, 1, temp);
        for(j=1;j<i;j++){
            if(a[i] * a[j] <= k)
                update(1, (int)(a[i] * a[j]));
        }
    }
    printf("%lld\n", ans);
}
