#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcounll(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 200005

struct matrix{
	ll x[16][16];
	matrix(){ms(x, 0);}
};

matrix operator *(matrix const &A, matrix const &B){
	matrix C;
	for(int i = 0; i < 16; i++) for(int j = 0; j < 16; j++) for(int k = 0; k < 16; k++){
		C.x[i][j] = (C.x[i][j] + A.x[i][k] * B.x[k][j]) % mod;
	}
	return C;
}

matrix operator ^(matrix const &A, ll const k){
	if(k == 1) return A;
	if(k & 1) return A * (A ^ (k - 1));
	matrix T = A ^ (k >> 1);
	return T * T;
}

int test, a[4];
ll n;

void solve(){
	cin >> n >> a[0] >> a[1] >> a[2] >> a[3];
	matrix I;
	Rep(i, 16){
		I.x[i][i] = 6;
		Rep(j, 4) I.x[i][i ^ (1 << j)] = 1;
	}
	matrix A = I ^ (n);
	int mask = 0;
	Rep(i, 4) if(a[i]) mask = onbit(mask, i);
	cout << A.x[0][mask] << endl;
}

int main(){
//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> test;
    Rep(itest, test){
    	solve();
    }

    return 0;
}
