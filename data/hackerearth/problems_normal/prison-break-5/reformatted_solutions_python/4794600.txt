# https://www.hackerearth.com/problem/algorithm/prison-break-5/

answers = []
for t in range(int(raw_input())):
    grid = []
    n = int(raw_input())
    for i in range(n):
        grid.append([int(x) for x in raw_input().split()])

    count = 0
    S = [[[0, 0]]]
    while S:

        currPath = S.pop(0)
        pos = currPath[-1]
        if pos == [n-1, n-1]:
            count += 1

        moves = []
        x, y = pos

        if x+1 < n:
            if grid[x+1][y] == 0:
                moves.append([x+1, y])
        if y+1 < n:
            if grid[x][y+1] == 0:
                moves.append([x, y+1])
        if y > 0:
            if grid[x][y-1] == 0:
                moves.append([x, y-1])
        if x > 0:
            if grid[x-1][y] == 0:
                moves.append([x-1, y])

        for move in moves:
            if move not in currPath:
                S.append(currPath + [move])

    answers.append(count)

for ans in answers:
    print ans
