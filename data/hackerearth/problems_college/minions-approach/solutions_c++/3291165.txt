#include <bits/stdc++.h>
using namespace std;

// sieve 
bool prime[100001];

void sieveprime(int n) {
	memset(prime,true,sizeof(prime));
	prime[0]=false;
	prime[1]=false;
	
	for(int i=2;i*i<=n;++i) {
		if(prime[i]==true) {
			for(int j=2*i;j<=n;j+=i)
				prime[j]=false;
		}
	}
}

// euler totient function
int phi(int n) {
	double prod=n;
	for(int i=2;i*i<=n;++i) {
		if(n%i==0) {
			while(n%i==0) {
			n/=i;
			}
			prod*=(1-1/(double)i);
		}
	}
	if(n>1) {
		prod*=(1-1/(double)n);
	}
		
	return prod;
}

int main()
{
    int t,n;
    sieveprime(100001);
    cin>>t;
    while(t--) {
    	cin>>n;
    	//cout<<phi(n)<<"\n";
    	if(prime[phi(n)]==true)
    		cout<<"Correct\n";
    	else
    		cout<<"Incorrect\n";
    }
    
    return 0;
}
