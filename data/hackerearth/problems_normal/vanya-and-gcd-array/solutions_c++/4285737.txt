#include <cstdio>
#include <algorithm>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <string>
#include <string.h>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <numeric>
#include <cctype>
#include <bitset>
#include <cassert>
 
using namespace std;
typedef long long ll;
 
const ll MX = 100005, INF = 1001001001;
const ll LINF = 1e18;
const double eps = 1e-10;
ll n;
 
ll mod = 1000000007;
 
ll gcd(ll a, ll b)
{
	if (b == 0)
		return a;
	else
		return gcd(b, a%b);
}
 
map<pair<ll, ll>, ll> dp;
 
ll solve(ll ind, ll g,vector<ll>& vals) {
	pair<ll,ll> key = make_pair(ind, g);
	if (dp.find(key) != dp.end())
		return (dp[key]%mod);
	int res = (g == 1);
	for(int i=ind+1;i<n;i++)
	{
		if (vals[ind] < vals[i])
		{
			res = (res+solve(i, gcd(g,vals[i]), vals)) % mod;
		}
		
	}
	dp[key] = res%mod;
	return res;
 
}
 
int main()
{
	vector<ll> vals(555);
	scanf("%d", &n);
	for (ll i = 0; i < n; i++)
		scanf("%d", &vals[i]),vals[i]%=mod;
	ll ans = 0;
	for (ll k = 0; k < n; k++)
		ans = (ans + solve(k, vals[k], vals) % mod) % mod;
	printf("%lld\n", ans);
	return 0;
}