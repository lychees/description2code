

    #include <bits/stdc++.h>
    using namespace std;
    #define MAX 100002
    #define MOD 1000000007
    long long comp = 0;
    vector<long long > G[MAX];
    long long visited[MAX];
    long long components[MAX];
    long long fact[MAX];
    void cal_fact(){
    fact[0] = fact[1] = 1;
    for(long long i=2;i<MAX;i++){
    fact[i] = i*fact[i-1];
    fact[i] %= MOD;
    }
    }
    void DFS(long long node){
    components[comp]++;
    visited[node] = 1;
    for(long long i=0;i<G[node].size();i++){
    if(!visited[G[node][i]]){
    DFS(G[node][i]);
    }
    }
    }
    int main(){
    ios_base::sync_with_stdio(false);
    memset(visited,0,sizeof(visited));
    memset(components,0,sizeof(components));
    cal_fact();
    long long N,K;
    cin >> N >> K;
    for(long long i=0;i<K;i++){
    long long x,y;
    cin >> x >> y;
    G[x].push_back(y);
    G[y].push_back(x);
    }
    for(long long i=0;i<N;i++){
    if(!visited[i]){
    DFS(i);
    comp++;
    }
    }
    long long ans = 1;
    for(long long i=0;i<comp;i++){
    ans *= fact[components[i]];
    ans %= MOD;
    }
    cout << ans << endl;
    }


