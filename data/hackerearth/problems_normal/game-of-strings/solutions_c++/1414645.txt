#include <iostream>
using namespace std;
#define MAX 5000
int l[MAX+1][MAX+1];
int LongestCommonSubsequence(string s1,string s2){
	int m=s1.length(),n=s2.length();
    for(int i=0;i<=m;i++){
        for(int j=0;j<=n;j++){
        	if (i==0 or j==0)
                l[i][j] = 0;
            else{
                if(s1[i-1]==s2[j-1])
                    l[i][j] = 1 + l[(i-1)][j-1];
                else
                    l[i][j] = max(l[i][j-1], l[(i-1)][j]);
            }
        }
    }
    return l[m][n];
}
int main() {
	string s1,s2,s3,s4,s5;
	cin>>s1>>s2;
	s3=s1;
	for(int j=0;j<s3.length();j++){
		if(s3[j]=='a' || s3[j]=='e' || s3[j]=='i' || s3[j]=='o' || s3[j]=='u'){
			continue;
		}
		else {
			s4.push_back(s3[j]);
		}
	}
	s1=s4;
	s3=s2;
	for(int j=0;j<s3.length();j++){
		if(s3[j]=='a' || s3[j]=='e' || s3[j]=='i' || s3[j]=='o' || s3[j]=='u'){
			continue;
		}
		else {
			s5.push_back(s3[j]);
		}
	}
	s2=s5;
	cout<<LongestCommonSubsequence(s1,s2)<<endl;
}