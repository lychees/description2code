#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <iostream>
#include <set>
#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <numeric>
#include <cmath>
#include <complex>
#include <map>
#include <queue>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vi> vvi;
typedef vector<double> vd;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<pii> vii;
typedef vector<string> vs;

vi id;

bool ok(vi a, const vii & v) {
    for (int i = 0; i < v.size(); ++i) {
        sort(a.begin() + v[i].first, a.begin() + v[i].second);
    }
    return a == id;
}

int main() {
    int n,m;
    cin >> n >> m;
    vii v(m);
    for (int i = 0; i < m; ++i) {
        cin >> v[i].first >> v[i].second;
        --v[i].first;
    }
    id.resize(n);
    for (int i = 0; i < n; ++i) id[i] = i;
    vi a = id;
    reverse(a.begin(), a.end());
    if (ok(a, v)) {
        cout << "All ok!\n";
        return 0;
    }
    vi res(n);
    vi was(n);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) if (!was[j]) {
            res[i] = j;
            int it = i + 1;
            for (int l = n-1; l >= 0; --l) if (!was[l] && l != j) {
                res[it] = l;
                ++it;
            }
            if (!ok(res, v)) {
                was[j] = 1;
                break;
            }
        }
//        cerr << i << ' ' << res[i] << endl;
    }
    for (int i = 0; i < res.size(); ++i) cout << res[i] + 1 << ' ';
    return 0;
}