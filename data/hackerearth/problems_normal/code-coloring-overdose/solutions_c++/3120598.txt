#include<bits/stdc++.h>
using namespace std;
const int MAX = 5e5 + 5;
const int MOD = 1e9 + 7;
int cnt[MAX];
int dp[MAX][12];
int p[MAX];
int N, K, M;
/*
int rec(int pos, int left){
	if(left<0) return 0;
	if(pos>K) return 1;
	if(dp[pos][left]!=-1) return dp[pos][left];
	int ans = 0;
	ans = ans + rec(pos+1,left)%MOD;
	ans = ans + (1LL * (p[cnt[pos]] - 1 ) * rec(pos+1,left-1)%MOD) % MOD;
	ans %= MOD;
	return dp[pos][left] = ans; 
}
*/
int main(){
	memset(dp, -1, sizeof dp);
	cin >> N >> K >> M;
	p[0] = 1;
	for(int i=1; i<MAX; ++i) p[i] = (p[i-1] + p[i-1]) % MOD;
	for(int i=1; i<=N; ++i){
		int x; cin >> x;
		cnt[x] ++ ;
	}
	for(int j=0; j<=M; ++j) dp[K+1][j] = 1;
	for(int i=K; i>0; --i){
		for(int j=0; j<=M; ++j){
			dp[i][j] = dp[i+1][j];
			if(j){
				dp[i][j] += (1LL * (p[cnt[i]] - 1)%MOD * dp[i+1][j-1]%MOD) % MOD;
				dp[i][j]%= MOD;
			}
		}
	}
	cout << dp[1][M] ;
}