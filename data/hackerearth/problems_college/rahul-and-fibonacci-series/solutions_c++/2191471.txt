#include <iostream>
#include<vector>
#include <math.h>
using namespace std;

vector<long long int> fibona;
long long int binPow(long long int a,long long int b){
	long long int res=1;
	while(b){
		if(b&1)
			res=(res*a)%1000000007;
		a=(a*a)%1000000007;
		b=b>>1;
	}
	return res%1000000007;
}
 
void multiply(unsigned long long int F[2][2],unsigned long long int M[2][2]);
 
void power(unsigned long long int F[2][2],unsigned long long  int n);
 
unsigned long long int fib(int n)
{
 unsigned long long int F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0]%1000000007;
}

void power(unsigned long long int F[2][2],unsigned long long int n)
{
  if( n == 0 || n == 1)
      return;
 unsigned long long int M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}
 
void multiply(unsigned long long int F[2][2],unsigned long long  int M[2][2])
{
 long long int x =  F[0][0]*M[0][0] + F[0][1]*M[1][0];
 long long  int y =  F[0][0]*M[0][1] + F[0][1]*M[1][1];
  long long int z =  F[1][0]*M[0][0] + F[1][1]*M[1][0];
 long long  int w =  F[1][0]*M[0][1] + F[1][1]*M[1][1];
 
  F[0][0] = x%1000000007;
  F[0][1] = y%1000000007;
  F[1][0] = z%1000000007;
  F[1][1] = w%1000000007;
}
int main()
{
	
	int t;
	cin>>t;
		long long int a=1,b=1,c;
	int cnt=0;

	while(t--)
	{
		long long int n;
		cin>>n;
		int nt=n;

		int a=1,b=2,c=3;
              while(nt>0)
              {
               a=b;
               b=c;
               c=a+b;
               nt-=(c-b-1);
              }
              nt+=(c-b-1);
           unsigned   long long ans=(b+nt);
	//	cout<<ans<<endl;
//	long long int nonF=getnon(n);
	
  unsigned long long int f=fib(n)%1000000007;

 unsigned long long int u=binPow(ans%1000000007,f)%1000000007;
  u=u%1000000007;
 cout<<u<<endl;
 

	
	
	
	}
    //cout << "Hello World!" << endl;
    return 0;
}
