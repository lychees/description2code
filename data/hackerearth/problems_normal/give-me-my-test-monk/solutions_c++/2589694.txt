#pragma comment(linker, "/STACK:256000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iostream>
#include <iomanip>
#include <map>
#include <set>
#include <string>
#include <queue>
#include <vector>
#include <ctime>
#include <cstring>
#include <sstream>

//#include <unordered_map>

using namespace std;

//types
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef vector<int> vi;
typedef vector<pii> vpii;

// for
#define FI(n) for(int i=0; i<n; i++)
#define FI1(n) for(int i=1; i<=n; i++)
#define FJ(n) for(int j=0; j<n; j++)
#define FJ1(n) for(int j=1; j<=n; j++)
#define FK(n) for(int k=0; k<n; k++)
#define FU(i, n) for (int i=0; i<n; i++)
#define F(i, s, e) for (int i=s; i<=e; i++)

//scanf types
#define SI(x) scanf("%d", &x)
#define SII(x, y) scanf("%d %d", &x, &y)
#define SIII(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define SIIII(x, y, z, t) scanf("%d %d %d %d", &x, &y, &z, &t)
#define SD(x) scanf("%lf", &x)
#define SP(x) scanf("%d %d", &x.first, &x.second)
#define SS(x) scanf("%s", &x)
#define SA(x, n) FI(n) SI(x[i])
#define SAA(x, n, m) FI(n) FJ(m) SI(x[i][j])

#define Tests(t) int t; SI(t); for(int test=1; test<=t; test++)
#define WS(n) int n; while(SI(n) != EOF)

//scanf with def
#define DI(x) int x; SI(x)
#define DII(x, y) int x, y; SII(x, y);
#define DIII(x, y, z) int x, y, z; SIII(x, y, z);
#define DD(x) double x; SD(x)
#define DS(x) string s; cin>>s
#define DA(a, n) int n; SI(n); SA(a, n);
#define DA2(a, n) int n; SI(n); SAA(a, n, n)
#define DAA(a, n, m) int n, m; SII(n, m); SAA(a, n, m)
#define TESTS DI(tests); FU(test, tests)

//input & files
#define FR(x) freopen(x, "rt", stdin)
#define FW(x) freopen(x, "wt", stdout)
#define FRW(x, y) FR(x); FW(y)
#define UNSYNC() ios::sync_with_stdio(false)

//output && db
#define DB(x) cout<<#x<<" = "<<(x)<<" ";
#define DBN(x) cout<<#x<<" = "<<(x)<<"\n";
#define DBA(x, n) {cout<<#x<<" = [ "; FI(n) cout<<x[i]<<((i+1==n)?" ]":", ");}
#define DS(x) {cout<<#x<<" = [ "; int i = 0, n = x.size(); for(auto x:c) { cout<<x[i]<<((i+1==n)?" ]":", "); i++;}}

#define PI(x) printf("%d", x)
#define PIS(x) printf("%d ", x)
#define PIN(x) printf("%d\n", x)
#define PA(x, n) {FI(n) if (i+1==n) PIN(x); else PIS(x);}
#define PS(x) for (auto it: x) cout<<it<<" ";
#define PLN() putchar('\n');

#define D_EQ(l, r, p) (r-l <= p)
#define D_EQ6(l, r) D_EQ(l, r, 1e-6)
#define D_EQ9(l, r) D_EQ(l, r, 1e-9)

//consts 
const int INF = 1000000000;
const int mod = 1000 * 1000 * 1000 + 7;
const double PI = 3.1415926535897932;

//pair
#define x first
#define y second

//functions
double sqr(double x) { return x*x; };
ld sqr(ld x) { return x*x; };
ll sqr(ll x) { return x*x; };
ll sqr(int x) { return x * 1LL * x; };

//functions
ll gcd(ll a, ll b) { while (b) a %= b, swap(a, b); return a; }
ll bpm(ll a, ll n = -2, ll m = mod) { n = n >= 0 ? n : m + n; ll r = 1; while (n) { if (n & 1) r = (r*a) % m; a = (a*a) % m; n >>= 1; } return r; }


const int N = 3000;
map<int, int> mp;
int f(int n) {
	if (n < 2) return 1 - n;

	if (mp.find(n) != mp.end()) return mp[n];
	ll c = 1;
	ll fact = 1;
	ll sum = 0;
	for (int i = 1; i <= n; i++) {
		c = (((c*(n - i + 1))%mod) * bpm(i)) % mod;
		fact = (fact*i)%mod;
		sum += (c*f(n - i))%mod;
	}
	sum %= mod;
	mp[n] = (fact - sum + mod) % mod;
	return mp[n];
}

int main() {
//	FR("input.txt", "output.txt");

	DIII(n, l, r);
	ll c = 1;
	ll ans = 0;
	for (int i = 1; i < l; i++)
		c = (((c*(n - i + 1)) % mod) * bpm(i)) % mod;
	if (l == 0)
		ans++, l++;
	for (int i = l; i <= r; i++) {
		c = (((c*(n - i + 1)) % mod) * bpm(i)) % mod;
		ans = (ans + (c*f(i)))%mod;
	}


	ll fact = 1;
	FI1(n) fact = (fact*i)%mod;

//	DB(ans); DBN(fact);
	cout << (ans*bpm(fact)) % mod << endl;
	return 0;
}
