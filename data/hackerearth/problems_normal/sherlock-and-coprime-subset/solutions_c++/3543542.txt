#include<bits/stdc++.h>
using namespace std;
vector<int> a;
vector<int> prs;
int n;
int prime[70];
int dp[52][(1<<17)+10];
int kk;
int check(int num,int bm)
{
	      for(int i=0;i<kk;i++)
		  {
		          if(bm>>i &1)
				  {
				        if(num%prs[i]==0)
				        return 0;
							
				  }	
		  }
		  return 1;       
}
int solve(int pos,int bm)
{
	   if(pos>=n)
	   return 0;
	   if(dp[pos][bm]!=-1)
	   return dp[pos][bm];
	   int ret=0;
	   ret=solve(pos+1,bm);
	   if(check(a[pos],bm))
	   {
	   	      int nm=bm;
	   	      for(int i=0;i<kk;i++)
	   	      {
	   	           if(a[pos]%prs[i]==0)
					  {
					       nm|=1<<i;	
					  }	
			  }
			  ret=max(ret,1+solve(pos+1,nm));
	   }
	   dp[pos][bm]=ret;
	   return ret;
}
void pre()
{
	     prime[2]=0;
		 for(int i=2;i<=50;i++)
		 {
		       if(!prime[i])
			   {
			     for(int j=2*i;j<=50;j+=i)
				 {
				    prime[j]=1;	
				 }	
			   }	 
		 } 
}
int main()
{ 
    //    int n;
    pre();
    int t;
    cin>>t;
    //freopen("ne.txt","w",stdout);	
    for(int i=2;i<=50;i++)
    {
    	    if(prime[i]==0)
    	    prs.push_back(i);
	}
	 kk=prs.size();
	while(t--)
    {
    
//	for(int i=0;i<kk;i++)
//	cout<<prs[i]<<" ";
//	cout<<endl;
		cin>>n;
		int ans=0;
		a.clear();
		for(int i=0;i<n;i++)
		{
			int xx;
	         cin>>xx;
			 if(xx==1)
			 ans++;
			 else 
			 a.push_back(xx);		 
		}
		memset(dp,-1,sizeof(dp));
		n=a.size();
		int res=solve(0,0);	 
		cout<<ans+res<<endl;
	}
}