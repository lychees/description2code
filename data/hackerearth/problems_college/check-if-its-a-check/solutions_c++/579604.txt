#include <bits/stdc++.h>
using namespace std;
int con(char a)
{
	if(a=='a') return 1;else if(a=='1') return 1;
	else if(a=='b') return 2;else if(a=='2') return 2;
	else if(a=='c') return 3;else if(a=='3') return 3;
	else if(a=='d') return 4;else if(a=='4') return 4;
	else if(a=='e') return 5;else if(a=='5') return 5;
	else if(a=='f') return 6;else if(a=='6') return 6;
	else if(a=='g') return 7;else if(a=='7') return 7;
	else if(a=='h') return 8;else if(a=='8') return 8;
}
bool R_attack(string black,string white,string rook)
{
	if(rook[0]==black[0])
	{
		if(rook[1]>black[1])
		{
			char temp=rook[1];
			rook[1]=black[1];
			black[1]=temp;
		}
		if(white[0]==black[0])
		{
			if(white[1]<black[1] && white[1]>rook[1])
		    {
		    	//cout<<"-1"<<endl;
		        return false;
		    }
		    else
		    {
		    	//cout<<"Check"<<endl;
		    	return true;
		    }
		}
		else 
		{
			//cout<<"Check"<<endl;
			return true;
		}
	}
	else if(rook[1]==black[1])
	{
		if(rook[0]>black[0])
		{
			char temp=rook[0];
			rook[0]=black[0];
			black[0]=temp;
		}
     	if(white[1]==black[1])
		{
			if(white[0]<black[0] && white[0]>rook[0])
		    {
		    	//cout<<"-1"<<endl;
		    	return false;
		    }
		    else
		    {
		    	//cout<<"Check"<<endl;
		    	return true;
		    }
		}
		else
		{
			//cout<<"Check"<<endl;
			return true;
		}
	}
	else
	{
		//cout<<"-1"<<endl;
	    return false;
	     
	}
	
}

bool B_attack(string b,string w,string x)
{
	if(abs(b[0]-x[0])==abs(b[1]-x[1]))
	{
		if(abs(w[0]-b[0])==abs(w[1]-b[1]))
		{
			if(x[0]>b[0])
			{
				char temp=x[0];
				x[0]=b[0];
				b[0]=temp;
			}
			if(w[0]>x[0] && w[0]<b[0])
			{
				//cout<<"-1"<<endl;
				return false;
			}
			else
			{
				//cout<<"Check"<<endl;
				return true;
			}
		}
		else
		{
			//cout<<"Check"<<endl;
			return true;
		}
	}
	else
	{
		 //cout<<"-1"<<endl;
	     return false;
	}
}
bool K_attack(string b,string w,string K)
{
	int x=con(K[0]);
	int y=con(K[1]);
	int x_b=con(b[0]);
	int y_b=con(b[1]);
	//cout<<"x="<<x<<" y="<<y<<" x_b="<<x_b<<" y_b="<<y_b<<endl;
	if((x+2==x_b && y+1==y_b) || (x+2==x_b && y-1==y_b) || (x-2==x_b && y+1==y_b) || (x-2==x_b && y-1==y_b)
	   || (x+1==x_b && y+2==y_b) || (x+1==x_b && y-2==y_b) || (x-1==x_b && y+2==y_b) || (x-1==x_b && y-1==y_b))
	{
	   	return true;
    }
    else
    return false;
}

bool Q_attack(string b,string w,string q)
{
	if(B_attack(b,w,q))
	{
		return true;
	}
	else if(R_attack(b,w,q))
	{
		return true;
	}
	else
	{
		return false;
	}
}


int main()
{
    //cout << "Hello World!" << endl;
    int t;
    cin>>t;
    while(t--)
    {
    	string w,b;
    	cin>>b>>w;
    	string P;
    	string x;
    	cin>>P>>x;
    	
    	//if(Q_attack(b,w,x))cout<<"Check"<<endl;
    	//else cout<<"-1"<<endl;
    	//cout<<w<<" "<<b<<" "<<r<<endl;
    	if(P[0]=='q')
    	{
    		//cout<<"Q"<<endl;
    		if(Q_attack(b,w,x))cout<<"check"<<endl;
    		else cout<<"-1"<<endl;
    	}
    	else if(P[0]=='r')
    	{
    		//cout<<"R"<<endl;
    		if(R_attack(b,w,x))cout<<"check"<<endl;
    		else cout<<"-1"<<endl;
    	}
    	else if(P[0]=='b')
    	{
    		//cout<<"B"<<endl;
    		if(B_attack(b,w,x))cout<<"check"<<endl;
    		else cout<<"-1"<<endl;
        }
        else if(P[0]=='k')
    	{
    		//cout<<"K"<<endl;
    		if(K_attack(b,w,x))cout<<"check"<<endl;
    		else cout<<"-1"<<endl;
        }
        else cout<<"-1"<<endl;
        
    }
    return 0;
}
