#include <bits/stdc++.h>
using namespace std;
int n;
int p[12];
int val[100005];
long long dp[100005][4][16];
long long f(int idx, int cnt, int mask)
{
	if ( idx == n ) { 
		if ( cnt == 3 ) {
			if ( mask ) return 1;
			return 0;
		}
		return 0;
	}
	if ( dp[idx][cnt][mask]!=-1 ) return dp[idx][cnt][mask];

	long long ans = 0;
	ans += f(idx+1, cnt, mask);
	if ( cnt+1 <= 3 ) ans += f(idx+1, cnt+1, (mask & val[idx]));
	dp[idx][cnt][mask] = ans;
	return ans;
}
int main() 
{
	long long x;
	cin >> n;
	p[2] = 0; p[3] = 1; p[5] = 2; p[7] = 3;
	for(int i=0;i<100000;i++)
	{
		for(int j=0;j<4;j++)
		  for(int k=0;k<16;k++)
		   dp[i][j][k]=-1;
	}
	for ( int i = 0; i < n; i++ ) {
		cin >> x;
		val[i] = 0;
		while ( x > 0 ) {
			if ( x%10 != 2 && x%10 != 3 && x%10 != 5 && x%10 != 7 ) {
				x /= 10;
				continue;
			}
			val[i] = val[i]  | (1<<p[x%10]);
			x /= 10;
		}
	}
	long long ans = f(0,0,15);
	cout << ans << endl;
	return 0;
}