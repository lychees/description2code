#include <bits/stdc++.h>
using namespace std;
#define MAX 1000
bool graph[MAX][MAX];
bool visited[MAX][MAX];
int x[4]={-1,0,0,1};
int y[4]={0,-1,1,0};
int n;
int bfs(int i,int j)
{
	visited[i][j]=1;
	queue<pair<int,int> > q; 
	q.push(make_pair(i,j));
	int ans=1;
	while(!q.empty())
	{
		i=q.front().first;
		j=q.front().second;
		
		for(int k=0;k<4;k++)
		{
			if((i+x[k]>=0 && i+x[k]<n)&&(j+y[k]>=0 && j+y[k]<n)&&graph[i+x[k]][j+y[k]] && !visited[i+x[k]][j+y[k]])
			{
				q.push(make_pair(i+x[k],j+y[k]));
				visited[i+x[k]][j+y[k]]=1;
				//cout<<i+x[k]<<" "<<j+y[k]<<endl;
				++ans;
			}
		}
		q.pop();
	}
	return ans;
}
int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
    {
    	for(int j=0;j<n;j++)
    	{
    		cin>>graph[i][j];
    		visited[i][j]=false;
    	}
    }
    int maxm=0;
    for(int i=0;i<n;i++)
    {
    	for(int j=0;j<n;j++)
    	{
    		if(graph[i][j]&&!visited[i][j])
    		{
    			maxm=max(maxm,bfs(i,j));
    		}
    	}
    }
    cout<<maxm<<endl;
    return 0;
}
