#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int t;
long long int countt[100001];
set<int> s;
set<int>::iterator ite;
long long int countt2[100001];
int __gcd(int a, int b){
	if (a > b){
		swap(a, b);

	}
	while (a){
		swap(a, b);
		a %= b;
	}
	return b;
}
int main(){
	scanf("%d", &t);
	while (t--){
		memset(countt, 0, sizeof(countt));
		int n;
		scanf("%d", &n);
		s.clear();
		for (int i = 0; i < n; i++){
			int a;
			scanf("%d", &a);
			for (ite = s.begin(); ite != s.end(); ite++){
				countt2[(*ite)] = countt[(*ite)];
			}
			set<int> nex=s;
			for (ite = s.begin(); ite != s.end(); ite++){
				int tmp = __gcd((*ite), a);
				countt[tmp] += countt2[(*ite)];
				nex.insert(tmp);
			}
			nex.insert(a);
			countt[a]++;
			s = nex;
		}
		for (int i = 1; i <= 100; i++){
			//	cout<<countt[i]<<" ";
			countt[i] += countt[i - 1];
		}
		//	cout<<endl;
		int l, r;
		scanf("%d%d", &l, &r);
		printf("%lld\n", countt[r] - countt[l - 1]);
	}
	return 0;
}