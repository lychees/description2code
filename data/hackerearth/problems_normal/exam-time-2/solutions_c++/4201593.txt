#include <iostream>
#include <vector>
using namespace std;

vector<unsigned> primes;

void prepare() {
	primes.reserve(300);
	vector<int> sieve(1000, 0);
	primes.push_back(2);
	for (unsigned i = 3; i < 1000; i += 2)
		if (sieve[i] == 0) {
			primes.push_back(i);
			for (unsigned j = i * i; j < 1000; j += 2 * i)
				sieve[j] = 1;
		}
}

unsigned totient(unsigned n) {
	unsigned res = n;
	for (unsigned p: primes) 
		if (n % p == 0) {
			do {
				n /= p;
			} while (n % p == 0);
			res -= res / p;
		}
	if (n > 1)
		res -= res / n;
	return res;
}

int main() {
	ios_base::sync_with_stdio(0);
    cin.tie(0);
	
	prepare();
	int t;
	cin >> t;
	while (t--) {
		unsigned x;
		cin >> x;
		cout << totient(x) << '\n';
	}
    return 0;
}
