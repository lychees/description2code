#include <iostream>
#include <vector>
#include <algorithm>
#define MAX 100001
#define MOD 1000000007
#define ll long long
using namespace std;

ll fact[MAX];
ll INVFAC[MAX];

ll power(ll n , ll p)
{
    if(p == 0) return 1;
    ll ans = power(n , p/2);
    ans = (ans * ans)%MOD;
    if(p%2 == 0)
            return ans;
    else
            return (ans*n)%MOD;
}

void init()
{
    fact[0] =  fact[1] = 1;
    for(int i = 2 ; i < MAX ; i++)
        fact[i] = (i * fact[i-1]) % MOD;

    INVFAC[MAX-1] = power(fact[MAX-1] , MOD-2);
   // cout << INVFAC[MAX-1] <<" ";
    for(int i = MAX-2; i >= 0; i--)
    {
        INVFAC[i] = (INVFAC[i+1] * (i+1)) % MOD;
       // cout << INVFAC[i] << " ";
    }

}


ll nCr(ll n , ll r)
{
    ll ans = fact[n];
    //cout << ans << " ";
    ans = ( ans * INVFAC[r]) % MOD;
    //cout << ans << " ";
    ans = (ans * INVFAC[n-r]) % MOD;
    //cout << ans << endl;
    return ans;
}


int main()
{
    init();
    int t;
    cin >> t;

    ll n, k;
    while(t--)
    {
        cin >> n >> k;
        vector<ll> a(n);
        for(int i = 0 ; i < n ; i++)
            cin >> a[i];

        sort(a.begin(),a.end());

        ll ans = 0;
        for(int i = 0 ; i <= n-k ; i++)
        {
            ans = (ans + (nCr(n-1-i,k-1) * a[i] ) % MOD)%MOD;
        }
        cout << ans << endl;
    }
}
