#include <bits/stdc++.h>
#include <queue>
using namespace std;
#define MAX 10000000

int id[MAX];
int root(int i){
	while(i!=id[i])i=id[i];
	return i;
}
void unio(int p,int q){
	int i=root(p);
	int j=root(q);
	id[j]=i;
}
int main(){
	for(int i=0;i<MAX;i++)id[i]=i;
	
	int n;
	cin>>n;
	
	map<string,int>M;
	int c=1;
	for(int i=0;i<(1<<n)-1;i++){
		string ch1,ch2;
		cin>>ch1>>ch2;
		if(!M[ch1]){
			M[ch1]=c;
			c++;
		}
		if(!M[ch2]){
			M[ch2]=c;
			c++;
		}
		unio(M[ch1],M[ch2]);
	}
    int ii=root(c-1);
    map<string,int>::iterator it;
    it=M.begin();
    while((it->second)!=ii){
    	it++;	
    }
    cout<<(it)->first;
    return 0;
}
