

    #include <bits/stdc++.h>
    using namespace std;
    const int MOD = 1E9 + 7;
    long long bin(long long x, long long y) {
    	if (y == 0) {
    		return 1;
    	}
    	long long u = bin(x, y/2);
    	if (y%2 == 0) {
    		return u*u % MOD;
    	}
    	else {
    		return u*u*x % MOD;
    	}
    }
    unordered_map<long long, long long> pr;
    long long n;
    long long dsuFind(long long x) {
    	if (pr.find(x) == pr.end() || pr[x] == x) {
    		return x;
    	}
    	long long res = dsuFind(pr[x]);
    	pr[x] = res;
    	return res;
    }
    void dsuUnite(long long u, long long v) {
    	long long A = dsuFind(u), B = dsuFind(v);
    	if (rand() % 2 ) {
    		pr[A] = B;
    	}
    	else {
    		pr[B] = A;
    	}
    }
    int main(){
    	cin>>n;
    	int k;
    	cin>>k;
    	long long ans = bin(2, n);
    	for (int i = 0; i < k; i++) {
    		long long u, v;
    		cin>>u>>v;
    		u--;
    		if (dsuFind(u) != dsuFind(v) ) {
    			ans = ans * bin(2, MOD - 2) % MOD;
    			dsuUnite(u, v);
    		}
    		cout<<ans<<endl;
    	}
        return 0;
    }

