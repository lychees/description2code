from fractions import gcd


def func(z, k, y2, ele):
    gs = sum([n1 for m, n1 in zip(k, v) if gcd(ele, m) != 1])
    z = [i for i in z if i != ele]
    k = [i if gcd(i, ele) == 1 else 1 for i in k]
    while y2-1:
        max = 0
        lar = 0
        for i in z:
            tot = sum([n1 for m, n1 in zip(k, v) if gcd(i, m) != 1])

            if tot > max:
                # print tot,i
                max = tot
                lar = i
        # print max,lar,y2
        gs = gs+max
        y2 = y2-1
        # print k,gs,z
        z = [i for i in z if i != lar]

        k = [i if gcd(i, lar) == 1 else 1 for i in k]
    return gs


x = input()
for i in xrange(0, x):
    y = map(int, raw_input().split())
    z = map(int, raw_input().split())
    k = map(int, raw_input().split())
    v = map(int, raw_input().split())
    n = []
    for ele in z:
        s = z[:]
        s1 = k[:]
        n.append(func(s, s1, y[2], ele))

    print max(n)
