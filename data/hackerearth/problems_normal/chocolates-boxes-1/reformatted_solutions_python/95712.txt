
memory = {}


def nr_combinations(n_nrs):
    m = memory.get(n_nrs, None)

    if m is None:
        ret = sum(range(n_nrs))
        memory[n_nrs] = ret
    else:
        ret = m

    return ret


def go(arr, k):
    count = 0
    occurences = {}

    i = 0
    for n in arr:
        if n < k:
            try:
                occurences[n] += 1
            except Exception:
                occurences[n] = 1

    while occurences:
        n, n_count = occurences.popitem()
        m = k - n

        if m in occurences:
            count += n_count * occurences[m]
            occurences.pop(m)
        elif n * 2 == k:
            count += sum(range(n_count))

    print count


t = int(raw_input())
for _ in range(t):
    _ = raw_input()
    arr = [int(b) for b in raw_input().split(' ')]
    k = int(raw_input())
    go(arr, k)
