#include <bits/stdc++.h>
using namespace std;
int a[1005][1005];
int vis[1005][1005];
bool isSafe(int x,int y,int n)
{
	return (x>=0 && x<n && y>=0 && y<n && !vis[x][y] && a[x][y]==1);
}
void DFS(int i,int j,int n,int &count)
{
	vis[i][j]=1;
	count++;
	if(isSafe(i+1,j,n))
	DFS(i+1,j,n,count);
	if(isSafe(i-1,j,n))
	DFS(i-1,j,n,count);
	if(isSafe(i,j-1,n))
	DFS(i,j-1,n,count);
	if(isSafe(i,j+1,n))
	DFS(i,j+1,n,count);
}
int main()
{
    int n,i,j;
    cin>>n;
    for(i=0;i<n;i++)
    {
    	for(j=0;j<n;j++)
    	{
    		cin>>a[i][j];
    		vis[i][j]=0;
    	}
    }
    int max_count=0,count;
    for(i=0;i<n;i++)
    {
    	for(j=0;j<n;j++)
    	{
    		int count=0;
    		if(!vis[i][j] && a[i][j]==1)
    		DFS(i,j,n,count);
    		if(count>max_count)
    		max_count=count;
    	}
    }
    cout<<max_count;
    return 0;
}
