#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;
int id[100001],nodes,edges;
pair <long long, pair<int,int> >l[100001];
void init()
{
	int i;
	for(i=0;i<100001;i++)
		id[i]=i;
}
int root(int x)
{
	while(id[x]!=x)
	{
		id[x]=id[id[x]];
		x=id[x];
	}
	return x;
}
void uni(int x,int y)
{
	int p=root(x);
	int q=root(y);
	id[p]=id[q];
}
long long kruskal(pair<long long, pair<int, int> >l[])
{
	int x,y,i;
	long long cost,mincost=1;
	for(i=0;i<edges;i++)
	{
		x=l[i].second.first;
		y=l[i].second.second;
		cost=l[i].first;
		if(root(x)!=root(y))
		{
		//mincost=cost;
		mincost=((mincost%mod)*(cost%mod))%mod;
			uni(x,y);
			//cout<<mincost;
		}
	}
	return mincost%mod;
}

int main()
{
	int x,y,i,t;
	cin>>t;
	while(t--)
	{
	long long weight,cost,mincost;
	init();
	cin>>nodes>>edges;
	for(i=0;i<edges;i++)
	{
		cin>>x>>y>>weight;
		l[i]=make_pair(weight,make_pair(x,y));
	}
	sort(l,l+edges);
	mincost=kruskal(l);
	cout<<mincost%mod<<'\n';
	}
	return 0;
}
