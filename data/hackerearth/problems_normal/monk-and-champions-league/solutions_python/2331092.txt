q=raw_input().split()
M=int(q[0])
N=int(q[1])
l=raw_input().split()
A=[0]*(len(l)+1)
for i in range(1,len(l)+1):
	A[i]=int(l[i-1])
count=0
	
	
def max_heapify(a,i,m1):
	left=2*i
	right=left+1
	if left<=m1 and a[left]>a[i]:
		largest=left
	else:
		largest=i
	if right<=m1 and a[right]>a[largest]:
		largest=right
	if largest!=i:
		max=a[largest]
		a[largest]=a[i]
		a[i]=max
		max_heapify(a,largest,m1)
def build_maxheap(b):
	i=M/2
	while i>=1:
		max_heapify(b,i,M)
		i-=1
	return b
	
A=build_maxheap(A)
while N>0:
	count+=A[1]
	A[1]-=1
	max_heapify(A,1,M)
	N-=1
print count
	

