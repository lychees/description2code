import math
def getAllPrime(n):
	primes = []
	num = {}
	for i in range(n):
	    primes.append(0)

	for i in range(1, n-1):

		if primes[i]==0:
			primes, count = mark_multiples(primes, i+1, n)
			num[i+1] = count+1
			#print num
		else:
			continue
	return num
	
def mark_multiples(primes, a, n):
    i = 2
    num = a*i
    count =0
    while num <=n:
        if primes[num-1]== 1:
            pass
        else:
            count +=1
            primes[num-1] = 1
        i += 1
        num = a*i

    return primes, count

def checkPrime(n):
	flag = 1
	if n==2:
	    return True
	for i in range(2, int(math.sqrt(n))):
		if n%i == 0:
			return False
	return True

#def countNumber(n, primes):
	#endNum = 1000000
	#count = 0
	#if n==2:
	    #return endNum/2
	#for i in range(n, endNum):
		#if i%n == 0:
			#flag = 0
			#for prime in primes[:primes.index(n)]:
			        #print prime
				#if i%prime == 0:
					#flag = 1
					#break
			#if flag == 0:
				#count +=1
	#return count[]

def main():
	result = []
	endNum = 1000000
	num = getAllPrime(endNum)
	#print primes
	testcases = int(raw_input())
	for i in range(testcases):
		prime = int(raw_input())
		#result.append(countNumber(prime, primes))
		result.append(num[prime])

	for j in range(len(result)):
		print result[j]

if __name__ == '__main__':
	main()


