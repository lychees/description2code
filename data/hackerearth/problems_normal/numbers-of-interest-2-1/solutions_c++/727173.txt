/* @author :nitish bhagat */

//header files
#include <cstdlib>
#include <stdio.h>
#include <cstring>
#include <complex>
#include <vector>
#include <cmath>
#include <ctime>
#include <iostream>
#include <numeric>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <iomanip>
#include <utility>
#include <locale>
#include <sstream>
#include <string> // this should be already included in <sstream>

using namespace std;

//short lazieeeeeee
#define FOR(i,n) for(i=0;i<n;i++)
#define FORI(i,a,n) for(i=a;i<n;i++)
#define FORC(it,C) for(it=C.begin();it!=C.end();it++)
#define scanI(x) scanf("%d",&x)
#define scanD(x) scanf("%lf",&x)
#define print(x) printf("%d\n",x)
#define ll  long long
#define number32 4294967296ull
#define MAX 2000001
#define len(s) s.length()
#define ff first
#define ss second
#define MOD 1000000007

using namespace std;

//containers
typedef map<int,int> Mii;
typedef map<char,int> Mci;
typedef pair<int,int> Pii;
typedef vector<int> vi;
typedef vector<int> vc;
typedef vector<ll> vl;

//iterators
typedef map<int,int>::iterator Miii;
typedef map<char,int>::iterator Mcii;


ll A[1000001];
ll B[1000001];
ll C[1000001];

void pre2()
{
  B[0]=0;
  B[1]=0;
  int p_s=0;
  int i,j;
  for(i=1;i<=1000000;i++)
  {
    for(j=i;j<=1000000;j+=i)
    {
      B[j]+=i;
    }
  //  B[i]+=B[i-1];
  }

}

void pre1()
{
  pre2();
  int i,j,s_p;
  A[0]=0;
  A[1]=0;
  C[0]=0;
  C[1]=0;
  bool flag;
  int count;
  for(i=2;i<1000001;i++)
  {
    count=0;
    flag=false;
    for(j=2;j*j<=i;j++)
    {
      if(i%j==0)
      {
        count++;
        if(count==1)
        {
          s_p=j;
        }
        flag=true;
      }
      if(flag) break;
    }
    if(flag==false)
    {
      s_p = i;
    }
    A[i]=A[i-1]+s_p;
    C[i]=C[i-1]+B[i]-i;
  }
}



int main()
{
  clock_t tStart = clock();
  pre1();
  int i;

//  cout<<(double)(clock() - tStart)/CLOCKS_PER_SEC<<endl;
//  pre2();
  int t,n;
  cin>>t;
  while(t--)
  {
    cin>>n;
    ll ans = (A[n]+C[n])%n;
    cout<<ans<<endl;
  }

}
