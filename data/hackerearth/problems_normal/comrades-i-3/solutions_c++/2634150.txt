/* Comrades - I */
#include <cstdio>
#include <vector>

#define SZ 100001
#define _scan_d(ref) scanf("%d%*c", ref)
#define LOOP_E(i,i0,i1) for (i = i0; i < i1; i++)
#define LOOP_I(i,i0,i1) for (i = i0; i <= i1; i++)
#define LOOP_ITR(i,obj) \
    for (__typeof((obj).begin()) i((obj).begin()); i != (obj).end(); ++i)

int fd, rd;
int lev[SZ], fd_rank[SZ], rd_rank[SZ];

std::vector<int> adj[SZ];

void _dfs_(int n, int l) {
    lev[n] = l;
    fd_rank[n] = fd++;
    LOOP_ITR(it, adj[n]) _dfs_(*it, l + 1);
    rd_rank[n] = rd++;
}

int main(int argc, char *argv[]) {
    int i, t, n, x, y, gen;

    _scan_d(&t);
    while (t-- > 0) {
        /* Get comrade list */
        _scan_d(&n);
        LOOP_E(i, 0, n) adj[i].clear();
        LOOP_I(i, 1, n) {
            _scan_d(&x);
            adj[x].push_back(i);
            if (x == 0) gen = i;
        }

        fd = 0; rd = 0; _dfs_(gen, 0);

        /* Get queries */
        _scan_d(&n);
        LOOP_E(i, 0, n) {
            scanf("%d%d%*c", &x, &y);
            printf("%d\n", (fd_rank[x] > fd_rank[y]) &&
                (rd_rank[x] < rd_rank[y]) ? lev[x] - lev[y] - 1 : -1);
        }
    }

    return 0;
}
