#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("clash.inp","r",stdin)
#define OUTPUT freopen("clash.out","w",stdout)
#define FOR(i,l,r) for(auto i=(l);i<=(r);i++)
#define REP(i,l,r) for(auto i=(l);i<(r);i++)
#define FORD(i,l,r) for(auto i=(l);i>=(r);i--)
#define REPD(i,l,r) for(auto i=(l);i>(r);i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const ll linf=1e17+10;
const int inf=1e9;
const int MOD=1e9+7;
const int N=50;

ll g[N];
int n,f[N];
void prepare(){
    n=1;
    g[1]=1;
    while (1){
        ll v=(n+1)/__gcd(g[n],ll(n+1));
        if (linf/v<g[n]) break;
        g[n+1]=g[n]*v;
        n++;
    }
    REP(i,2,N){
        f[i]=1;
        REP(j,1,i) if (i%j) {
            f[i]+=f[j];
            break;
        }
    }
//    cout<<n<<'\n';
//    FOR(i,1,n) cout<<i<<" "<<g[i]<<'\n';
}
ll solve(ll x){
    ll ans=0;
//    cout<<n<<'\n';
    FORD(i,n,1) {
        ans=ans+(x/g[i]-(i==n?0:x/g[i+1]))*(f[i+1]+1);
//        cout<<x<<" "<<i<<" "<<f[i+1]+1<<" "<<ans<<'\n';
    }
    if (x>=1) ans--;
    if (x>=2) ans-=2;
//    ans-=min(x,2LL);
//    cout<<x<<" "<<ans<<'\n';
    return ans;
}
int main(){
    prepare();
    ///
//    cout<<n<<'\n';
    ll x,y;
    cin>>x>>y;
    cout<<solve(y)-solve(x-1);
}
