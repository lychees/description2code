#include<iostream>
using namespace std;
long long int lookup[10005];
void initialize(int n)
{
    for(int i=0;i<n;i++)
    {
        lookup[i]=-1;
    }
}
long long int maxsum(int i,long long int a[],int n,int k)
{
    if(i>=n)
        return 0;
    else if(lookup[i]!=-1)
        return lookup[i];
    else
        return lookup[i]=max(maxsum(i+1,a,n,k),a[i]+maxsum(i+k+1,a,n,k));


}
int main()
{
    int t,n,k,i;
    cin>>t;
    while(t--)
    {
        cin>>n>>k;
        initialize(n);
        long long int a[n],dp[n];
        for(i=0;i<n;i++)
        {
            cin>>a[i];
        }
        long long int ans=maxsum(0,a,n,k);
        cout<<ans<<endl;
       /* for(i=0;i<n;i++)
        {
            if(i>=k+1)
            {
                dp[i]=max(dp[i-1],a[i]+dp[i-1-k]);
            }

            else if(i==0)
            {
                dp[i]=a[i];
            }
            else
            {
                dp[i]=max(dp[i-1],a[i]);
            }
        }
        cout<<dp[n-1]<<endl;
    */
    }
}
