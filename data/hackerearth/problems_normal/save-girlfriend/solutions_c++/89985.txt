/*	Karan Dhamele	    */
#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<stack>
#include<queue>
#include<map>
#include<set>

using namespace std;

/* General Declarations */

#define INF		1000000007
#define LL		int
#define SI(n)		scanf("%d",&n);
#define SC(c)		scanf("%c",&c);
#define SS(s)		scanf("%s",s);
#define FOR(x,a,b)	for(LL x=a;x<b;x++)
#define REP(i,n)	for(LL i=0;i<n;i++)
#define MP		make_pair
#define PB		push_back


/* Container's */

#define	VI		vector<LL>
#define PLL             pair<LL,LL>  /* A Single Pair  */
#define VP		vector<PLL> /* Vector of Pairs */
#define VS		vector<string>
#define VVI		vector<VI>
#define VVS		vector<VS>

template<class T>inline T GCD(T a,T b){return b?GCD(b,a%b):a;}
template<class T> inline T LCM(T a,T b){if(a<0)return LCM(-a,b);if(b<0)return LCM(a,-b);return a*(b/GCD(a,b));}
template<class T>inline T POW1(T a,T b,T m){long long x=1,y=a;while(b > 0){if(b%2 == 1){x=(x*y);if(x>m) x%=m;}y = (y*y);if(y>m) y%=m;b /= 2;}return x;}
template<class T>inline T INV(T n,T m){return POW1(n,m-2,m);}
template<class T>inline T SUB(T a,T b,T m){return (a%m-b%m+m)%m;}
template<class T>inline T ADD(T a,T b,T m){return (a%m+b%m)%m;}
template<class T>inline T MUL(T a,T b,T m){return (a%m*b%m)%m;}
template<class T>inline T DIV(T a,T b,T m){return (a%m*(INV(b,m))%m)%m;}
int main()
{
	LL t;
	SI(t);
	while(t--)
	{
		LL a,b;
		SI(a);SI(b);
		LL pt,ans;
		VI arr(10001,0);
		vector<set<LL> > v(b-a+1);
		FOR(i,1,10001)
		{
			pt=(a/i)*i;
			if(pt < a)
				pt+=i;
			for(int j=pt;j<=b;j=j+i)
			{
				if(i<sqrt(j))
				{
				if(j%i==0)
				{
					if(j!=i/j)
						arr[j-a]+=2;
					else
						arr[j-a]+=1;
				}
				}
			}
		}
		LL fin_ans=0;
		LL maxx=0;
		REP(i,10001)
		{
			if(arr[i] > maxx)
				maxx=arr[i];
		}
		REP(i,10001)
		{
			if(arr[i]==maxx)
				fin_ans++;
		}
		//cout << fin_ans+1 << endl;
		printf("%d\n",fin_ans+1);
	}
}
