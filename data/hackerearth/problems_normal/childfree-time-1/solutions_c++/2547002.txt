using namespace std;
#include<bits/stdc++.h>

#define PB push_back

#define ri(n)({\
    int neg = 0;\
    n = 0;\
    char ch;\
    for (ch = getchar(); ch < '0' || ch > '9'; ch = getchar()) if (ch == '-') neg = 1;\
    n = ch-48;\
    for (ch = getchar(); ch >= '0' && ch <= '9'; ch = getchar()) n = (n << 3) + (n << 1) + (ch - 48);\
    if (neg) n = -n;\
})

#define ST first
#define ND second

typedef long long LL;
typedef pair<int, int> II;
typedef pair<int, II> III;
typedef vector<int> VI;
typedef vector<II> VII;
typedef vector<VI> VVI;
typedef vector<VII> VVII;

const int MAXN = 10+1000000;
const int INF = int(1e9);

int n,m;
int in[MAXN];
VVII g;

void input(){
    ri(n); ri(m);
    g.clear(); g.resize(n+1);
    memset(in, 0, sizeof(in));
    int u, v, w;
    for (int i = 1; i <= m; i++){
        ri(u); ri(v); ri(w);
        g[u].PB(II(v, w));
        in[v]++;
    }
}

LL d[MAXN];
queue <int> q;

void bfs(){
    memset(d,0,sizeof(d));
    for (int u = 1; u <= n; u++)
        if (!in[u]) q.push(u);

    while (!q.empty()){
        int u = q.front(); q.pop();
        int p = g[u].size();
        for (int i = 0; i < p; i++){
            int v = g[u][i]. ST, l = g[u][i].ND;
            in[v]--;
            if (d[v] < d[u] + l + 2) d[v] = d[u] + l + 2;
            if (!in[v]) q.push(v);
        }
    }

    LL ans = 0;
    for (int u = 1; u <= n; u++) ans = max(ans, d[u]);

    printf("%lld\n",ans);
}

int main(){
/*#ifndef ONLINE_JUDGE
    freopen("island.inp", "r", stdin);
    //freopen("island.out", "w", stdout);
#endif*/

    input(); bfs();

    return 0;
}
