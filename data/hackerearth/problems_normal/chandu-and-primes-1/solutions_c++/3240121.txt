#include <bits/stdc++.h>
using namespace std;

const int maxn = 1e6 + 7;
int p[maxn];
int ap[maxn];

bool isAlpha(int x) {
	if (x & 1 == 0) return false;
	int divi = 10;
	while (x % divi != x) {
		if (p[x % divi] == 0) return true;
		divi *= 10;
	}
	return p[x] == 0;
}

int main() {
	// ios::sync_with_stdio(0);
	// cin.tie(0);
	p[0] = p[1] = 1;
	for (long long i = 2; i < maxn; ++i) {
		if (p[i]) continue;
		long long j = i * i;
		while (j < maxn) {
			p[j] = 1;
			j += i;
		}
	}
	for (int i = 2; i < maxn; ++i) {
		ap[i] = isAlpha(i);
		ap[i] += ap[i - 1];
	}
	int q; cin >> q;
	while (q--) {
		int l, r; 
		// cin >> l >> r;
		scanf("%d %d", &l, &r);
		// cout << ap[r] - ap[l - 1] << endl;
		printf("%d\n", ap[r] - ap[l - 1]);
	}

	return 0;
}