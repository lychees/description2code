#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
#define MAX 10005
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};

int main()
{
	ios_base::sync_with_stdio(false);
	int i, n, t, sz;
	ll l, r, s=1, cal, ans;
	vl tri;
	do
	{
		cal = (s*(s+1) )/2;
		tri.pb( cal);
		s++;
	}while(cal <= 1e12);
	sz = tri.size();
	cin >> t;
	vl::iterator it1,it2;
	while( t--)
	{
		cin >> l >> r;
		ans = 0;
		for( i=0;i<sz;i++ )
		{
			if( tri[i] > r )
				break;
			it1 = lower_bound( tri.begin()+i, tri.end(), l-tri[i] );
			if( (it1 != tri.end() ) && ((*it1)+tri[i] <= r ) )
			{
				it2 = lower_bound( it1, tri.end(), r-tri[i] );
				if( (it2==tri.end() ) || ( (*it2)+tri[i] > r ) )
					it2--;
				ans += (it2) -(it1) +1;
			}
		}
		cout << ans << "\n";
	}
    return 0;
}
