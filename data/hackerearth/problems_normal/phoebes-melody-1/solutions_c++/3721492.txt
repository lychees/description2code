#include<bits/stdc++.h>
using namespace std;
#define NOTEXIST 10000000
int a[200000],left1[200000],right1[200000];
int main()
{
    ios::sync_with_stdio(false);
    int T;
    
    cin>>T;
    assert(1<=T && T<=10);
    while(T--)
    {
        int N,i,K;
        cin>>N>>K;
        assert(1<=N && N<=200000 && 1<=K && K<=N);
        int done[200001]={0};
        int anseach[200000];
        for(i=0;i<N;i++)
        {
            cin>>a[i];
            assert(1<=a[i] && a[i]<=N);
            anseach[i]=NOTEXIST;
     /*       if(done[a[i]]==1)
            {
                cout<<a[i]<<" in "<<T<<endl;
           }*/
            assert(done[a[i]]==0);
            
            done[a[i]]=1;
        }
       
        
        long long c1=0,c2=0;
        
        
        left1[0]=NOTEXIST;
        for(i=1;i<N;i++)
        {
            if(a[i]>a[i-1])
                left1[i]=i-1;
            else
            {
                int j=i-1;
                while(left1[j]!=NOTEXIST && a[left1[j]]>=a[i] && j>=0)
                {
                    j=left1[j];
                    c1++;
                }
                if(j<0)
                    left1[i]=NOTEXIST;
                else
                    left1[i]=left1[j];
            }
        }
        right1[N-1]=NOTEXIST;
        for(i=N-2;i>=0;i--)
        {
            if(a[i]>a[i+1])
                right1[i]=i+1;
            else
            {
                int j=i+1;
                while(right1[j]!=NOTEXIST && a[right1[j]]>=a[i] && j<N)
                {
                    j=right1[j];
                    c2++;
                }
                if(j>=N)
                    right1[i]=NOTEXIST;
                else
                    right1[i]=right1[j];
            }
        }
     /*   cout<<"left and right are"<<endl;
        for(i=0;i<N;i++)
            cout<<i<<":"<<left1[i]<<" "<<right1[i]<<endl;*/
        
        long long ans=0;
        for(i=0;i<N;i++)
        {
            //cout<<"for "<<i<<endl;
            if(i-K>=0)
            {
                if(a[i-K]<a[i])
                    anseach[i]=min(anseach[i],K);
                else
                {
                    int j=i-K;
                    while(j>=0 && left1[j]!=NOTEXIST && a[left1[j]]>=a[i])
                    {
            //            cout<<"left look at "<<j<<endl;
                        j=left1[j];
                        c1++;
                    }
                    if(j>=0 && left1[j]!=NOTEXIST)
                        anseach[i]=min(anseach[i],i-left1[j]);
                }
                
                
                
            }
          //  cout<<"AE "<<i<<":"<<anseach[i]<<" ";
            if(i+K<N)
            {
                if(a[i]>a[i+K])
                    anseach[i]=min(anseach[i],K);
                else
                {
                    int j=i+K;
                    while(j<N && right1[j]!=NOTEXIST && a[right1[j]]>=a[i])
                    {
               //         cout<<"right look at "<<j<<endl;
                        j=right1[j];
                        c2++;
                    }
             //       cout<<"correct is "<<j<<endl;
                    if(j<N && right1[j]!=NOTEXIST)
                       anseach[i]=min(anseach[i],right1[j]-i);
                }
            }
            if(anseach[i]!=NOTEXIST)
                ans+=anseach[i];
       //     cout<<"AE "<<i<<":"<<anseach[i]<<" "<<endl;
        }
        
      
        
        cout<<ans<<endl;
    }
    return 0; 
}