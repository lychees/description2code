#include <bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    int no;
    int num;
    
    cin>>t;
    while(t--){
    	cin>>no;
    	long long int maxi;
    	long long int mini;
    	int o;
    	priority_queue <int> p;
    	priority_queue <int , vector<int>, greater<int>> n;
    	stack <int> z;
    	while(no--){
    		cin>>num;
    		
    		if(num > 0){
    			p.push(num);
    		}
    		else if(num < 0){
    			n.push(num);
    		}
    		else{
    			z.push(0);
    		}
    	}
    	
    	if(p.empty() && n.empty()){
    		cout<<"0 0\n";
    	}
    	
    	else if(!p.empty() && !n.empty()){
    		maxi = 1;
    		mini = 1;
    		while(!p.empty()){
    			maxi = maxi * p.top();
    			mini *= p.top();
    			p.pop();
    		}
    		
    		if(n.size() == 1){
    			mini *= n.top();
    		}
    		else{
    			
    			o = n.size()%2;
    			
    			while(n.size() != 1){
    				maxi *= n.top();
    				mini *= n.top();
    				n.pop();
    			}
    			
    			if(o == 1){
    				mini *= n.top();
    			}
    			else{
    				maxi *= n.top();
    			}
    		}
    		
    		cout<<maxi<<" "<<mini<<endl;
    	}
    	else if(!p.empty()){
    		maxi = 1;
    		while(p.size() != 1){
    			maxi *= p.top();
    			p.pop();
    		}
    		mini = p.top();
    		maxi *= mini;
    		
    		if(z.size() != 0){
    			mini = 0;
    		}
    		cout<<maxi<<" "<<mini<<endl;
    	}
    	else if(!n.empty()){
    		
    		maxi = 1;
    		mini = 1;
    		
    		if(n.size() == 1){
    			mini = n.top();
    			if(z.size() > 0){
    				maxi = 0;
    			}
    			else{
    				maxi = n.top();
    			}
    		}
    		else{
    			
    			o = n.size()%2;
    			while(n.size() != 1){
    				maxi *= n.top();
    				mini *= n.top();
    				n.pop();
    			}
    			
    			if(o == 1){
    				mini *= n.top();
    			}
    			else{
    				maxi *= n.top();
    			}
    		}
    		cout<<maxi<<" "<<mini<<endl;
    	}
    	
    }
    return 0;
}
