//https://www.hackerearth.com/prayatnaopc/algorithm/the-cakes-walk-3/
#include <math.h>
#include <iostream>
// pow(a, b) + pow(b, a) = x
// logic pow(a, b) = x - pow(b, a)
using namespace std;
int main(){

    //testcase (0,0), (0,1), (1,0), (1,1)

    //rest 2 onwards
    int testcases;
    int a_itr = 0, b_itr = 0 ;
    cin >> testcases;
    while(testcases--){
        int x;
        cin >> x;
        // for ( a_itr = 0; a_itr <=1; a_itr++){

        //     for(b_itr = 0; b_itr <= 1; b_itr++){
        //         if(pow(a_itr, b_itr) == x - pow(b_itr, a_itr)){
        //             cout << a_itr << " " << b_itr << endl;
        //             return 0;
        //         }
        //     }
        // }
        //some very less optimization

        // for ( a_itr = x; a_itr >= 2; a_itr--){

        //     for(b_itr = x; b_itr >=0 ; b_itr--){
        //         if(pow(a_itr, b_itr) == x - pow(b_itr, a_itr)){
        //             cout << a_itr << " " << b_itr << endl;
        //             return 0;
        //         }

        //     }
        // }
        if (x-1>=1)
        	cout << x-1 << " " << 1 << endl;
        else
        	cout << 1 << " " << x-1 << endl;
    }

    return 0;
}
