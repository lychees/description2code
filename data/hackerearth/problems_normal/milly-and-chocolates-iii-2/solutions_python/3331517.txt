NOT_FOUND = 100000000


def isOKay(ChocolateMap):
    Cnt = 0
    for k, v in ChocolateMap.iteritems():
        if v >= 1:
            Cnt += 1
    return Cnt


def Rec(N, K, Chocolates, Position, ChocolateMap):
    if (Position == N):
        if isOKay(ChocolateMap) >= K:
            return 0
        return NOT_FOUND

    for item in Chocolates[Position]:
        ChocolateMap[item] += 1
    Ans = Rec(N, K, Chocolates, Position + 1, ChocolateMap) + 1
    for item in Chocolates[Position]:
        ChocolateMap[item] -= 1
    Ans = min(Ans, Rec(N, K, Chocolates, Position + 1, ChocolateMap))
    return Ans


T = int(raw_input())
for cs in range(T):
    N, K = map(int, raw_input().split())
    Chocolates = []
    ChocolateMap = {}
    for i in range(N):
        Temp = map(str, raw_input().split())
        Chocolates.append([item for item in Temp[1:]])
        for item in Chocolates[i]:
            ChocolateMap[item] = 0
    Result = Rec(N, K, Chocolates, 0, ChocolateMap)
    if Result == NOT_FOUND:
        Result = -1
    print Result
