#include <iostream>

#include <cassert> 
#include <queue> 
#include <functional> 
using namespace std;
long long a[1500], r[1500][1500];
int n;
void pre () {
    for(int i = 1; i <= n; i++) {
        priority_queue<int> ql;
        priority_queue<int, vector<int>, greater<int> > qr;
        r[i][i] = a[i];
        ql.push(a[i]);
        for(int j = i + 1; j <= n; j++) {
            if(ql.size() <= qr.size()) {
                int k = qr.top();
                if(a[j] > k) {
                    qr.pop();
                    qr.push(a[j]);
                    ql.push(k);
                } else {                    
                    ql.push(a[j]);
                }
            } else {
                int k = ql.top();
                if(a[j] < k) {
                    ql.pop();
                    ql.push(a[j]);
                    qr.push(k);
                } else {                    
                    qr.push(a[j]);
                }
            }
            if(ql.size() >= qr.size())
                r[i][j] = ql.top();
            else r[i][j] = qr.top();
        }
    }
}
int main()
{
    int q, u, v;
    cin >> n;
    for(int i = 1; i <= n; i++)
        scanf("%lld", &a[i]);
    pre();
    cin >> q;
    while(q--) {
        scanf("%d%d", &u, &v);
        printf("%lld\n", r[u][v]);
    }
    system("pause");
    return 0;
}
