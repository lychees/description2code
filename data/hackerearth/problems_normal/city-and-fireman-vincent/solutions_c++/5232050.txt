#include <bits/stdc++.h>
using namespace std;
long long  parent[100001];
long long  e[100001];
long long  N, Q;
long long  find(long long i){
	while (parent[i] != i) i = find(parent[i]);
	return i;
}

void uni(long long u, long long v){
	long long r = find(u);
	long long s = find(v);
	if (e[r] >= e[s])
		parent[r] = s;
	else
		parent[s] = r;
}
int main()
{
	scanf("%lld", &N);
	for (long long i = 1; i <= N; i++) {
		parent[i] = i;
		e[i] = 0;
		scanf("%lld", &e[i]);
	}
	scanf("%lld", &Q);
	long long a, b;
	while (Q--){
		scanf("%lld%lld", &a, &b);
		uni(a, b);
	}
	set<long long>s;
	for (long long i = 1; i <= N; i++){
		s.insert(find(i));
	}
	set<long long >::iterator it = s.begin();
	long long ways = 1, c = 0;
	for (; it != s.end(); it++){
		c = 0;
		for (long long i = 1; i <= N; i++){
			if (find(i) == *it && e[i] == e[*it])
				c++;
		}
		ways *= c;
		ways %= 1000000007;
	}
	printf("%lld\n", ways);
	return 0;
}
