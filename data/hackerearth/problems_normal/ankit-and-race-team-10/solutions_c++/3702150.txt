#include <bits/stdc++.h>
using namespace std;
#define M 1000000007
int fast_pow(long long base, long long n)
{
    if(n==0)
       return 1;
    if(n==1)
    return base;
    long long halfn=fast_pow(base,n/2);
    if(n%2==0)
        return ( halfn * halfn ) % M;
    else
        return ( ( ( halfn * halfn ) % M ) * base ) % M;
}
int findMMI_fermat(long long int n)
{
    return fast_pow(n,M-2);
}





long long int fact[100001];
long long arr[100001];
long long int nCr(int n, int r) {
    if (n == r) return 1;
    if (r == 1) return n;
    if (r == 0) return 1;
    long long int numerator = fact[n];
    long long int denominator = ((fact[n - r] % M) * (fact[r] % M)) % M;
    return ((numerator % M) * (findMMI_fermat(denominator) % M)) % M;
}
int main()
{
    fact[0] = 1;
    fact[1] = 1;
    int n, k, j, i;
    for (k = 2 ; k <= 100000 ; k++) {
        fact[k] = (fact[k-1] * k) % M;
    }
    int tc;
    scanf("%d", &tc);
    while (tc--) {
        scanf("%d %d", &n, &k);
        for (j = 1 ; j <= n ; j++) scanf("%lld", j + arr);
        sort(arr + 1, arr + n + 1);
        long long int sum = 0;
        int temp = n - k + 1;
        for (j = 1 ; j <= temp ; j++) {
            sum = (sum % M) + (((arr[j]% M) * (nCr(n - j, k - 1) % M) % M));
            sum %= M;
        }
        printf("%lld\n", sum);
    }
    return 0;
}
