#include <bits/stdc++.h>
using namespace std;

bool special[100];

int ToI(char c) {
	if (isdigit(c)) return c - '0';
	else if (islower(c)) return 10 + c - 'a';
	else return 10 + ('z'-'a'+1) + c - 'A';
}

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n, k, l, r;
		cin >> n >> k >> l >> r;
		string s, p;
		cin >> s >> p;
		fill(special, special + 100, false);
		for (int i = 0; i < (int)p.size(); ++i) {
			special[ToI(p[i])] = true;
		}
		long long ans = 0;
		int il = -1, curl = 0, ir = -1, curr = 0;
		for (int i = 0; i < (int)s.size(); ++i) {
			while ((il < i) or (il+1 < (int)s.size() and curl < l)) {
				++il;
				if (special[ToI(s[il])]) ++curl;
			}
			
			while (ir+1 < (int)s.size() and curr + special[ToI(s[ir+1])] <= r) {
				if (special[ToI(s[ir+1])]) ++curr;
				++ir;
			}
			if (l <= curl and curr <= r) ans += ir - il + 1;
			if (special[ToI(s[i])]) --curl, --curr;
		}
		cout << ans << '\n';
	}
    return 0;
}
