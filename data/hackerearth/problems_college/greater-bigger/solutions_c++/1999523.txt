#include <iostream>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
using namespace std;

int compare (const void *a, const void * b)
{  return ( *(char *)a - *(char *)b ); }

int findCeil (char str[], char first, int l, int h)
{
    // initialize index of ceiling element
    int ceilIndex = l;
 
    // Now iterate through rest of the elements and find
    // the smallest character greater than 'first'
    for (int i = l+1; i <= h; i++)
      if (str[i] > first && str[i] < str[ceilIndex])
            ceilIndex = i;
 
    return ceilIndex;
}

void swap (char* a, char* b)
{
    char t = *a;
    *a = *b;
    *b = t;
}

int main(){
	long t;
	cin >> t;
	while(t--){
		char str[100]={0},sub[100]={0},subrev[100]={0};
		cin >> str;
		int i=0;
		int flag=0;
		int index;

			int size= strlen(str);
			for(i=size-2;i>=0;--i){
				if(str[i]<str[i+1]){
					flag=1;
					break;
				}
			}
			if(flag==1){
					int index = findCeil(str,str[i],i+1,size-1);
					swap(&str[i],&str[index]);
					qsort( str + i + 1, size - i - 1, sizeof(str[0]), compare );
					cout << str << endl;
			}

			if(flag ==0){
				cout << "no answer"<<endl;
		}
		
		}
	}
	