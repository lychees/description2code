#include<bits/stdc++.h>
#define sz 1000006
#define mod 1000000007
using namespace std;

long long pf[sz],sum[sz];
bool ck[sz];
long long prime[80000];
int k;
void seive()
{
    pf[1]=0,pf[2]=1,pf[3]=2;
    sum[1]=0,sum[2]=2,sum[3]=5;
    prime[0]=2,prime[1]=3;
    k=2;
    for(long long i=3*3; i<=1000002; i+=2*3) ck[i]=1;
    for(long long i=5; i<=1000002; i+=2)
    {
        pf[i]=pf[i-1]=pf[i-2];
        sum[i]=sum[i-1]=sum[i-2];
        if(!ck[i])
        {
            pf[i]++;
            sum[i]=(sum[i]+i)%mod;
            prime[k++]=i;
            if(i<=1000)
            {
                for(long long j=i*i; j<=1000002; j+=2*i) ck[j]=1;
            }
        }
    }
}

int main()
{
    seive();
    int t;
    long long n,i;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%lld",&n);
        long long ans=1;
        int z=1;
        for(i=2; i<=n; i=prime[z++])
        {
            if(z>k) break;
            long long pp=1,p=0,ppp=i;
            while(pp>0)
            {
                p+=n/ppp;
                pp=n/ppp;
                ppp*=i;

            }
            ans=(ans*(p+1))%mod;

        }
        printf("%lld %lld %lld\n",pf[n],sum[n],ans);
    }
}
