#include <iostream>
using namespace std;
#define int long long
const int mod=179424673; int dp[1005][1005][2];
main()
{
    int a; cin >> a;
    for (int g=0;g<a; g++)
    {
    	int p, q, x, y; cin >> p >> q >> x >> y;
    	dp[0][0][0]=1;
    	dp[0][0][1]=1; 
    	for (int g=0;g<=x; g++)
    	{
    		dp[g][0][0]=1; 
    	}
    	for (int g=x+1; g<=1000; g++) dp[g][0][0]=-1; 
    	for (int g=0;g<=y; g++)
    	{
    		dp[0][g][1]=1;
    	}
    	for (int g=y+1; g<=1000; g++) dp[0][g][1]=-1;
    	for (int z=1;z<=p; z++)
    	{
    		for (int w=1; w<=q; w++)
    		{
    			for (int l=0; l<=1; l++)
    			{dp[z][w][l]=0;
    				if (!l)
    				{
    					for (int r=1;r<=x; r++)
    					{
    						if (r>z) break;
    						if (dp[z-r][w][1-l]==-1) continue; 
    						dp[z][w][l]+=dp[z-r][w][1-l]; 
    					}
    				}
    				else
    				{
    					
    					for (int r=1;r<=y; r++)
    					{
    						if (r>w) break;
    						if (dp[z][w-r][1-l]==-1) continue;
    						dp[z][w][l]+=dp[z][w-r][1-l]; 
    					}
    				}
    				if (dp[z][w][l]==0) dp[z][w][l]=-1; 
    				dp[z][w][l]%=mod; 
    			}
    		}
    	}
    	if (dp[p][q][0]==-1) dp[p][q][0]=0;
    	if (dp[p][q][1]==-1) dp[p][q][1]=0;
    	cout << (dp[p][q][0]+dp[p][q][1])%mod << '\n';
    }
    return 0;
}
