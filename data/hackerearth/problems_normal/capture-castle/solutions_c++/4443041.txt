#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(int i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return (r)%MOD;
}
int tr,tc,tt,n,m;
int vis[1010][1010]={{0}};
int tim[1010][1010];
int in[1010][1010];
int dr[]={1,-1,0,0};
int dc[]={0,0,1,-1};
int onBoard(int r,int c){
   if(r>0&&r<=n&&c>0&&c<=m){
    return 1;
   }
   return 0;
}


void bfs(int r,int c){
   queue< pair<int,int> >q;
   vis[r][c]=1;
   tim[r][c]=0;
   pair<int,int>cur;
   q.push(mp(r,c));
   int nr,nc;
   while(!q.empty()){
      cur=q.front();
        q.pop();
    if(cur.x==tr&&cur.y==tc){
        break;
    }
    fr(i,0,4){
       nr=cur.x+dr[i];
       nc=cur.y+dc[i];
       if(onBoard(nr,nc)&&!vis[nr][nc]){
          vis[nr][nc]=1;
          tim[nr][nc]=tim[cur.x][cur.y]+in[cur.x][cur.y];
         q.push(mp(nr,nc));
       }
    }

   }

}
void dfs(int r,int c){
  if(r==tr&&c==tc){
    return;
  }
  int nr,nc;
  fr(i,0,4){
       nr=r+dr[i];
       nc=c+dc[i];
       if(onBoard(nr,nc)&&!vis[nr][nc]&&tim[r][c]+in[r][c]<=tim[nr][nc]){
          vis[nr][nc]=1;
          tim[nr][nc]=min(tim[nr][nc],tim[r][c]+in[r][c]);
          dfs(nr,nc);
          vis[nr][nc]=0;
       }
    }
}




int main(){
   int t;
   si(t);
   while(t--){
   si(n),si(m);
   fr(i,1,n+1){
     fr(j,1,m+1){
       vis[i][j]=0;
       tim[i][j]=INT_MAX;
      si(in[i][j]);
     }
   }
   si(tr),si(tc),si(tt);
    tim[1][1]=0;
    dfs(1,1);

    if(tim[tr][tc]+in[tr][tc]<=tt){
        cout<<"YES\n";
        pi(tt-tim[tr][tc]-in[tr][tc]);pln;
    }
    else{
        cout<<"NO\n";
    }


  }
return 0;
}
