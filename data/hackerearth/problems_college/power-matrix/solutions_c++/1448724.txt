/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
ll mod=1e9 + 7;
ll n,m;
void multiply(vector<vector<ll> >& a, vector<vector<ll> > b){
	matrix(num,m,m);
	f(i,m){
		f(j,m){
			f(k,m){
				num[i][j]=(num[i][j] + (a[i][k]*b[k][j])%mod)%mod;
			}
		}
	}
	a=num;
}
void solve(){
	sl(m);sl(n);
	matrix(arr,m,m); matrix(id,m,m);
	f(i,m) f(j,m) sl(arr[i][j]);
	f(i,m) id[i][i]=1;
	while(n){
		if(n&1) multiply(id,arr);
		multiply(arr,arr);
		n>>=1;
	}
	f(i,m){
		f(j,m) printf("%Ld ",id[i][j]);
		printf("\n");
	}
}
int main(){
	int t;
	si(t);
	while(t--){
		solve();
	}
	return 0;
}