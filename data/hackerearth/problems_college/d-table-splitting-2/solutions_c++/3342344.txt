#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define sz(a) int((a).size())
#define all(a)  a.begin(), a.end()
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;
#define present(c,x) ((c).find(x) != (c).end())
const double eps = 1e-8;
#define EQ(a,b) (fabs((a)-(b))<eps)
inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 1e6+10;
const ll inf = 1e18;

ll power(ll a,ll n){
	if(n==0){
		return 1;
	}
	ll b = power(a,n/2);
	b = b*b%mod;
	if(n%2) b= b*a%mod;
	return b;
}

vector < int > G[2*N];
vector <string> A(1100);
int vis[2*N];

int main(){
 // 	freopen("nice.in","r",stdin);
 // freopen("nice.out","w",stdout);
	int t;scanf("%d",&t);
	while(t--){
		int n,m;scanf("%d %d",&n,&m);
		FILL(vis,0);
		REP(i,2*N)	G[i].clear();
		REP(i,n)	cin>>A[i];
		REP(i,n-1)	REP(j,m){
			if(A[i][j]!=A[i+1][j]){
				G[(i+1)*(m+1)+j].pb((i+1)*(m+1)+j+1);
				G[(i+1)*(m+1)+j+1].pb((i+1)*(m+1)+j);
			}
		}
		REP(i,n)	REP(j,m-1){
			if(A[i][j]!=A[i][j+1]){
				G[i*(m+1)+j+1].pb((i+1)*(m+1)+j+1);
				G[(i+1)*(m+1)+j+1].pb(i*(m+1)+j+1);
			}
		}
		queue <int> Q;
		while(!Q.empty())	Q.pop();
		REP(i,n+1){
			Q.push(i*(m+1));Q.push(i*(m+1)+m);
			vis[i*(m+1)] = vis[i*(m+1)+m] = 1;
		}
		REP(i,m+1){
			Q.push(i),Q.push(n*(m+1)+i);
			vis[i] = vis[n*(m+1)+i] = 1;
		}
		while(!Q.empty()){
			int a = Q.front();Q.pop();
			REP(i,G[a].size()){
				if(!vis[G[a][i]]){
					vis[G[a][i]]=1;Q.push(G[a][i]);
				}
			}
		}
		int f=0;
		REP(i,2*N){
			if(G[i].size()>0 && !vis[i]){
				f=1;break;
			}
		}
		if(f==0)	printf("YES\n");
		else printf("NO\n");
	}
	return 0;
}
