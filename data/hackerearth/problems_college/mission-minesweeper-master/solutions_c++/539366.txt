#include <stdio.h>

void afterClick(char a[][110], int n, int m, int x, int y)
{
    if(a[n][m] == 'c')  //accepting the block only if it is marked as 'c'
	{
		int sm = 0;  //number of mines surrounded
		if(n > 0)
		{
			if(a[n-1][m] == '*')  //if mine is found, sm is increased by 1.
				sm++;
			else if(a[n-1][m] == '.')  //if surrounding block is empty, it is named c.
				a[n-1][m] = 'c';
		} //NOTE: if surrounding block is a number, no action is taken on them, as they are already visted.
		if(m > 0)
		{
			if(a[n][m-1] == '*')
				sm++;
			else if(a[n][m-1] == '.')
				a[n][m-1] = 'c';
		}
		if(n < x-1)
		{
			if(a[n+1][m] == '*')
				sm++;
			else if(a[n+1][m] == '.')
				a[n+1][m] = 'c';
		}
		if(m < y-1)
		{
		        if(a[n][m+1] == '*')
				sm++;
			else if(a[n][m+1] == '.')
				a[n][m+1] = 'c';
		}
		if(n > 0 && m > 0)
		{
			if(a[n-1][m-1] == '*')
				sm++;
			else if(a[n-1][m-1] == '.')
				a[n-1][m-1] = 'c';
		}
		if(n > 0 && m < y-1)
		{
			if(a[n-1][m+1] == '*')
				sm++;
			else if(a[n-1][m+1] == '.')
				a[n-1][m+1] = 'c';
		}
		if(n < x-1 && m > 0)
		{
			if(a[n+1][m-1] == '*')
				sm++;
			else if(a[n+1][m-1] == '.')
				a[n+1][m-1] = 'c';
		}
		if(n < x-1 && m < y-1)
		{
			if(a[n+1][m+1] == '*')
				sm++;
			else if(a[n+1][m+1] == '.')
				a[n+1][m+1] = 'c';
		}
		a[n][m] = sm+'0';  //giving a value for a[n][m] with number of mines it is surrounded with.
		if(a[n][m] == '0')  //if a[n][m] is 0, all surrounding 8 blocks are also revealed.
		{
			afterClick(a,n-1,m,x,y);
			afterClick(a,n-1,m-1,x,y);
			afterClick(a,n,m-1,x,y);
			afterClick(a,n-1,m+1,x,y);
			afterClick(a,n+1,m,x,y);
			afterClick(a,n+1,m+1,x,y);
			afterClick(a,n,m+1,x,y);
			afterClick(a,n+1,m-1,x,y);
		}
	}
	return;
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int x,y;
		scanf("%d %d",&x,&y);
		char a[110][110]={0};
		int i = 0,j = 0;
		while(i<x)
		{
			j = 0;
			while(j<y)
				scanf(" %c",&a[i][j++]);
			i++;
		}
		int n,m;
		i = 0;j = 0;
		int flag = 0;
		while(i<x)  //finding position of block marked 'c'
		{
			j = 0;
			while(j<y)
			{
				if(a[i][j]=='c')
				{
					n = i;
					m = j;
					flag  = 1;
					break;
				}
				j++;
			}
			if(flag == 1)
				break;
			i++;
		}
		afterClick(a,n,m,x,y);
		i = 0;j = 0;
		while(i<x)
		{
			j = 0;
			while(j<y)
			{
				if(a[i][j] != 'c')
					printf("%c",a[i][j]);
				else
					printf(".");
				j++;
			}
			printf("\n");
			i++;
		}
	}
	return 0;
}