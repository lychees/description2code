#include<bits/stdc++.h>
using namespace std;
vector<int> edge[100001];
bool color[100001];
bool gen[100001];
bool visited[100001];
bool dfs(int vert,int colr)
{
	color[vert]=colr;
	visited[vert]=1;
	for(int i=0;i<edge[vert].size();i++)
	{
		if(visited[edge[vert][i]])
		{
			if(colr==color[edge[vert][i]])
			   return false;
		}
		else
		{
			if(colr==1)
			{
				if(!dfs(edge[vert][i],0))
				   return false;
			}
			else
			{
				if(!dfs(edge[vert][i],1))
				  return false;
			}
		}
	}
	return true;
}
main()
{
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=n;i++)
	{
		char temp;
		cin>>temp;
		if(temp=='B')
		  gen[i]=1;
		else
		  gen[i]=0;
	}
	for(int i=0;i<m;i++)
	{
		int u,v;
		scanf("%d %d",&u,&v);
		edge[u].push_back(v);
		edge[v].push_back(u);
	}
	memset(color,0,sizeof(color));
	memset(visited,0,sizeof(visited));
	if(dfs(1,1))
	{
		//cout<<"kkk";
		int count=0;
		for(int i=1;i<=n;i++)
		{
			if(gen[i]==1 && color[i]==1) count++;
			if(gen[i]==0 && color[i]==0) count++;
		}
		int temp=0;
		memset(color,0,sizeof(color));
		memset(visited,0,sizeof(visited));
		dfs(1,0);
		for(int i=1;i<=n;i++)
		{
			if(gen[i]==1 && color[i]==1) temp++;
			if(gen[i]==0 && color[i]==0) temp++;
		}
		cout<<min(temp,count);
	}
	else
	 printf("Not possible");
}