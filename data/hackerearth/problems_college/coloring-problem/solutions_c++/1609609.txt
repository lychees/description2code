#include <iostream>
#include <stdio.h>
#include <vector>
#include <queue>

using namespace std;

int n, m, a, b;
vector<int> adj[202];
int visited[202], color[202];

bool solve() {
	queue<pair<int, int> > pq;
	
	pq.push(make_pair(0, 0));
	while(!pq.empty()) {
		pair<int, int> top = pq.front();
		int u = top.first;
		int c = top.second;
		pq.pop();
		
		if(visited[u]) continue;
		visited[u] = 1;
		
		for(int i = 0;i < adj[u].size();++i) {
			int v = adj[u][i];
			if(color[v] == -1) {
				if(c == 0) color[v] = 1;
				else color[v] = 0;
				pq.push(make_pair(v, color[v]));
			}
			else
			if(color[v] == color[u]) return false;
		}
	}
	return true;
}

int main()
{
    int T;
    
    scanf("%d", &T);
    while(T--) {
    	scanf("%d%d", &n, &m);
    	
    	
    	for(int i = 0;i < 202;++i) adj[i].clear();
    	for(int i = 0;i < n;++i) color[i] = -1, visited[i] = 0;
    	for(int i = 0;i < m;++i) {
    		scanf("%d%d", &a, &b);
    		adj[a].push_back(b);
    		adj[b].push_back(a);
    	}
    	
    	printf("%s\n", (solve() ? "BICOLORABLE." : "NOT BICOLORABLE."));    	
    }
    return 0;
}
