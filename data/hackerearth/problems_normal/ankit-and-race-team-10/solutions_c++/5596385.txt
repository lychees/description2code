#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const LL MOD = 1e9 + 7;
const int MAXN = 1e5 + 10;
LL power(LL a, LL b){
	LL ans = 1;
	while(b > 0){
		if(b & 1) ans = (ans * a) % MOD;
		a = (a * a) % MOD;
		b >>= 1;
	}
	return ans;
}

LL fac[MAXN];
int main(){
	fac[0] = 1;
	for(int i = 1; i < MAXN;++i){
		fac[i] = (fac[i - 1] * i) % MOD;
	}
    int t;
    cin >> t;
    while(t--){
    	vector<LL> s;
    	int N, K;
    	cin >> N >> K;
    	for(int i = 1;i <= N;++i){
    		LL x;
    		cin >> x;
    		s.push_back(x);
    	}
    	sort(s.begin(), s.end());
    	LL ans = 0;
    	for(int i = 0;i < N && (N - i) >= K;++i){
    		LL ncr = fac[N - i - 1];
    		ncr = (ncr * power(fac[N - i - 1 - (K - 1)], MOD - 2)) % MOD;
    		ncr = (ncr * power(fac[K - 1], MOD - 2)) % MOD;
    		ans += (s[i] * ncr) % MOD;
    		ans %= MOD;
    		//cout << s[i] << " " << N - i - 1 << "\n";
    	}
    	cout << ans << "\n";
    }
    return 0;
}
