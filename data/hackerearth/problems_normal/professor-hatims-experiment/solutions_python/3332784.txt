from collections import deque

col = []
graph = [] 
def bfs(s):
	global col, graph
	q = deque([s])
	col[s] = 0
	
	while len(q) > 0:
		u = q.popleft()
		for v in graph[u]:
			if col[v]==-1:
				col[v] = 1-col[u]
				q.append(v)
			elif col[v]==col[u]:
				return False
	return True



tc = int(raw_input())
while tc>0:
	tc -= 1
	vals = raw_input().split(' ')
	n = int(vals[0])
	m = int(vals[1])
	graph = [ [] for i in range(0,n+1) ]
	col = [ (-1) for i in range(0,n+1) ]
	
	for i in range(0, m):
		vals = raw_input().split(' ')
		u = int(vals[0])
		v = int(vals[1])
		graph[u].append(v)
		graph[v].append(u)
	
	poss = True
	for u in range(1,n+1):
		if col[u]==-1:
			poss = poss and bfs(u)
	
	if poss:
		print('No suspicious lizards found!')
	else:
		print('Suspicious lizards found!')
	
	
	
		