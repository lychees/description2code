#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define ll long long int
#define mod (ll)(1e9+7)
using namespace std;

int dx[8] = {-2,-1,1,2,1,2,-1,-2};
int dy[8] = {1,2,2,1,-2,-1,-2,-1};
int a[1001][1001];
int n,m;
bool isvalid(int x,int y) {
	if (x >= 0 && x < n && y >= 0 && y < m && a[x][y] == 1) {
		return true;
	}
	return false;
}

ll fac[1000001];

void init() {
	fac[0] = 1;

	for (int i = 1; i <= 1000000; i++) {
		fac[i] = fac[i-1] * i;
		fac[i] %= mod;
	}
}

int main()
{
	init();
	int t,q;
	cin >> t;
	while (t--) {
		memset(a,0,sizeof(a));
		cin >> n >> m >> q;
		vector<pair<int,int> > v;
		while (q--) {
			int x,y;
			cin >> x >> y;
			x--;y--;
			v.pb(mp(x,y));
			a[x][y] = 1;
		}
		bool vis[1001][1001];
		memset(vis,false,sizeof(vis));
		ll ans = 1;
		for (int j = 0; j < v.size(); j++) {
			pair<int,int> t = v[j];
			if (vis[t.X][t.Y]) {
				continue;
			}
			queue< pair<int,int> > q;
			q.push(mp(t.X,t.Y));
			int cnt = 0;
			while (!q.empty()) {
				pair<int,int> tt = q.front();
				q.pop();
				vis[tt.X][tt.Y] = true;
				cnt += 1;
				for (int i = 0; i < 8; i++) {
					int xx = tt.X + dx[i];
					int yy = tt.Y + dy[i];
					if (isvalid(xx,yy) && !vis[xx][yy]) {
						q.push(mp(xx,yy));
						vis[xx][yy] = true;
					}
				}
			}
			ans *= fac[cnt];
			ans %= mod;
		}
		cout << ans << endl;
	}
	return 0;
}
