#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define RI(a) scanf("%d",&a);
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define TR(a,t) for(__typeof(a.begin()) t=a.begin();t!=a.end();t++)
#define REP(i,l,h) for(int i=(l); i<=(h);i++)
#define REPD(i,h,l) for(int i=(h);i>=(l);i--)
#define ALL(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
#define PRSNT(a,e) (a.find(e) != a.end())
#define MINH priority_queue<int, vector<int>, greater<int> >
#define N 500005
#define MOD 1000000007
typedef long long int  ll;
using namespace std;


int cols[N];
ll pows[N];
ll dp[N];
int main()
{
	ll n,k,m,c;
	cin>>n>>k>>m;

	pows[0]=1;
	REP(i,1,n)
		pows[i]=(2LL*pows[i-1])%MOD;
	REP(i,1,n){
		cin>>c;
		cols[c]++;
	}

	dp[0]=1;
	REP(i,1,k)
	{
		if(cols[i])
		REPD(j,m,1)
		{
			dp[j]=(dp[j]+(dp[j-1]*(pows[cols[i]]-1))%MOD)%MOD;
		}

	}

	ll ans=0;
	REP(i,0,m){
		ans=(ans+dp[i])%MOD;
	}
	cout<<ans<<endl;


	return 0;
}
