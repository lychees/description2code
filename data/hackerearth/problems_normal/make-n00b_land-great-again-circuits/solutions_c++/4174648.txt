#include <bits/stdc++.h>
using namespace std;

typedef pair<int,int> ii;
typedef pair<ii,int> pii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<pii> vpii;
typedef long long int ll;
typedef unsigned long long int ull;

#define mi 1000000007
#define rep(i,a,b) for(i=a;i<b;i++)
#define repv(i,a,b) for(i=b-1;i>=a;i--)
#define pr(arr,n) rep(i,0,n) cout<<arr[i]<<" "; cout<<endl;
#define pr1(arr,n) rep(i,1,n+1) cout<<arr[i]<<" "; cout<<endl;
#define inf INT_MAX
#define gc getchar_unlocked
#define PB push_back
#define MP make_pair
#define fi first
#define se second
#define SET(a,b) memset(a,b,sizeof(a))
#define MAX 500005
#define gu getchar
#define pu putchar
#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)

#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif

int mult(int x,int y)
{
  ll ans,x1=(ll)x,y1=(ll)y;
  ans=(x1*y1)%mi;
  return (int)ans;
}
int gcd(int a,int b) { return b==0 ? a : gcd (b,a%b);}
int lcm(int a,int b) { return a*(b/gcd(a,b));}

int pow1(int a,int b)
{
  int ans=1;
  while(b>0)
    {
      if(b&1) ans=mult(ans,a);	
      a=mult(a,a); b>>=1;
    }	
  return ans;
}
int mina(int arr[],int n)
{
  int x=arr[0],i,pos=0;
  rep(i,1,n){ if(arr[i]<x) { x=arr[i]; pos=i; } }
  return x;
}
int maxa(int arr[],int n)
{
  int x=arr[0],i,pos=0;
  rep(i,1,n){ if(arr[i]>x) { x=arr[i]; pos=i; } }
  return x;
}
ll x[500005],d[500005],t[500005],tree[3][500005];
int p[500005],f[500005],n,m,in[500005],l[500005],r[500005],depth[500005],out[500005],cnt=0;
vector<vi> v,head,quer;
void dfs(int u,int par)
{
  if(u==1)
    depth[u]=0;
  cnt++;
  in[u]=cnt;
  for(vi::iterator itr=v[u].begin();itr!=v[u].end();itr++)
    {
      int v1=*itr;
      if(v1!=par)
	{
	  depth[v1]=depth[u]+1;
	  dfs(v1,u);
	}
    }
  out[u]=cnt;
}
void update(int ch,int x,ll val)
{
  while(x<=n)
    {
      tree[ch][x]+=val;
      x+=(x&-x);
    }
}
ll read(int ch,int x)
{
  ll sum=0;
  while(x>0)
    {
      sum+=tree[ch][x];
      x-=(x&-x);
    }
  return sum;
}
int main()
{
  int i,x1,j,q;
  si(n); si(m);
  v.resize(n+2);
  head.resize(m+2);
  rep(i,0,n-1)
    {
      si(x1);
      v[x1].PB(i+2); v[i+2].PB(x1);
    }
  dfs(1,-1);
  rep(i,1,n+1)
    {
      si(x1);
      head[x1].PB(i);
    }
  rep(i,1,m+1)
    sll(t[i]);
  si(q);
  quer.resize(q+2);
  rep(i,1,q+1)
    {
      si(f[i]); sll(x[i]); sll(d[i]);
    }
  rep(i,1,m+1)
    l[i]=1,r[i]=q+1;
  bool flag=true;
  while(flag)
    {
      flag=false;
      //cleanup
      rep(j,0,3)
	rep(i,0,n+1)
	tree[j][i]=0;
      rep(i,1,q+1)
	quer[i].clear();
      rep(i,1,m+1)
	if(l[i]!=r[i])
	  quer[(l[i]+r[i])>>1].PB(i);
      //over
      rep(i,1,q+1)
	{
	  ll val=x[i]-(ll)depth[f[i]]*d[i];
	  update(1,in[f[i]],val);
	  update(1,out[f[i]]+1,-val);
	  update(0,in[f[i]],d[i]);
	  update(0,out[f[i]]+1,-d[i]);
	  while(quer[i].size())
	    {
	      flag=true;
	      int buss=quer[i].back();
	      quer[i].pop_back();
	      ll sum=0;
	      rep(j,0,head[buss].size())
		{
		  int fact=head[buss][j];
		  sum+=read(1,in[fact]);
		  sum+=(read(0,in[fact])*(ll)depth[fact]);
		  if(sum>=t[buss])
		    break;
		}
	      if(sum>=t[buss])
		r[buss]=i;
	      else
		l[buss]=i+1;
	    }
	}
    }
  rep(i,1,m+1)
    {
      if(l[i]<=q)
	dout(l[i]);
      else
	cout<<"rekt"<<endl;
    }
  return 0;
}
