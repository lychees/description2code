from math import sqrt
from itertools import count, islice

def isPrime(n):
    if n < 2:
        return False
    for number in islice(count(2), int(sqrt(n)-1)):
        if not n%number:
            return False
    return True

def GetGCD(a,b):
    while(b!=0):
        a,b=b,a%b
    return a

def getRoysBooleanCount(n):
    if(n==1):
        return False
    c=0
    for i in range(2,n):
        if(GetGCD(n,i)>1):
            c+=1
    c=n-c-1
    return isPrime(c)

t=int(raw_input())
while(t):
    print(str(getRoysBooleanCount(int(raw_input()))).upper())
    t-=1
