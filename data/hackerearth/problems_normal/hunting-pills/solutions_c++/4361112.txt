/*    ironstark    */
#include<bits/stdc++.h>
#define pii pair<long long,long long>
#define fi first
#define se second
#define mp make_pair
#define vpi vector< pii >
#define pb push_back
#define ll long long int
#define mod 1000000007
#define gcd(a,b) __gcd(a,b)
#define sf(n) scanf("%lld",&(n))
#define pf(n) printf("%lld\n",(n))
#define setbits(n) __builtin_popcount((n))
#define pq priority_queue
using namespace std;
vector<int> v[105];
vector<int> v_rev[105];
vector<int> v1;
stack<int>s;
bool visited[105];
void ini()
{
	for(int i=0;i<105;i++)
	{
		v[i].clear();
		v_rev[i].clear();
		visited[i]=false;
	}
	v1.clear();
	while(!s.empty())
		s.pop();
}
void dfs(int node)
{
	visited[node]=true;
	for(int i=0;i<v[node].size();i++)
	{
		if(!visited[v[node][i]])
			dfs(v[node][i]);
	}
	s.push(node);
}
void dfs1(int node)
{
	visited[node]=true;
	v1.pb(node);
	for(int i=0;i<v_rev[node].size();i++)
	{
		if(!visited[v_rev[node][i]])
			dfs1(v_rev[node][i]);
	}
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin>>t;
	while(t--)
	{		
			ini();
			int n,m;
			cin>>n>>m;
			int arr[n];
			for(int i=0;i<n;i++)
				cin>>arr[i];
			for(int i=0;i<m;i++)
			{
				int a,b;
				cin>>a>>b;
				v[a].pb(b);
				v_rev[b].pb(a);
			}
			for(int i=0;i<n;i++)
			{
				if(!visited[i])
					dfs(i);
			}
			memset(visited,0,sizeof(visited));
			int ans=INT_MIN;
			while(!s.empty())
			{
				int k=s.top();
				s.pop();
				if(!visited[k])
				{
					v1.clear();
					dfs1(k);
					int temp=0;
					for(int i=0;i<v1.size();i++)
					{
						temp+=arr[v1[i]];
					}
					ans=max(ans,temp);
				}
			}
			cout<<ans<<"\n";
			
	}
	return 0;
}