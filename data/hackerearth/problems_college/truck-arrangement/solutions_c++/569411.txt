#include <iostream>
#include <cstdio>
using namespace std;
void print(int *a, int n){
	for(int i=0;i<n;i++)
		cout<<a[i]<<" ";
	cout<<endl;
}
void merge(int *a, int low, int high, int mid, int *b)
{
    int i=low, j=mid+1, k=0, c[high-low+1], d[high-low+1];
    while (i <= mid && j <= high)
    {
        if (a[i] <= a[j])
        {
            c[k] = a[i];
            d[k++] = b[i++];
        }
        else
        {
            c[k] = a[j];
            d[k++] = b[j++];
        }
    }
    while (i <= mid)
    {
        c[k] = a[i];
        d[k++] = b[i++];
    }
    while (j <= high)
    {
        c[k] = a[j];
        d[k++] = b[j++];
    }
    int z=0;
    for (i = low; i <=high; i++)
    {
        a[i] = c[z];
        b[i] = d[z++];
    }
}
void mergesort(int *a, int low, int high, int *b)
{
    int mid;
    if (low < high)
    {
        mid=(low+high)/2;
        mergesort(a,low,mid,b);
        mergesort(a,mid+1,high,b);
        merge(a,low,high,mid,b);
    }
    return;
}

int main()
{
        int test_cases;
        scanf("%d",&test_cases);
        while(test_cases > 0)
        {
            int i=0,ans,N;
            scanf("%d",&N);
            int a[N], b[N];
            while(i<N){
                scanf("%d",&a[i]);
                b[i]=i;
                i++;
            }
            mergesort(a, 0, N-1, b);
            int max=0;
            for(int i=0;i<N;i++)
            	if(max<abs(b[i]-i))
            		max = abs(b[i]-i);
            printf("%d\n", max);
            test_cases--;
        }
        return 0;
}