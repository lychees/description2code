/*******************
  	Rahul Bhati
	CHARUSAT UNIVERSITY
	***********************/

#include <bits/stdc++.h>

using namespace std;

/* Time saving techniques :D */

typedef long long ll;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;

#define pb              push_back
#define mp              make_pair
#define ff              first
#define ss              second
#define sz              size()
#define ln              length()
#define rep(i,n)        for(int i=0;i<n;i++)
#define fu(i,a,n)       for(int i=a;i<=n;i++)
#define fd(i,n,a)       for(int i=n;i>=a;i--)
#define foreach(it,v)   for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define all(a)          a.begin(),a.end()
#define INF             (int)1e9
#define EPS             (1e-9)
#define INF_MAX         2147483647
#define INF_MIN         -2147483647
#define pi              acos(-1.0)
#define N               1000000
#define dbg(x)          { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y)       { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define mset(a, s)      memset(a, s, sizeof (a))
#define Read(r)         freopen(r, "r", stdin)
#define Write(w)        freopen(w, "w", stdout)

using namespace std;

int main(){ //Read("input.in");
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin>>n;
    ull grid[n][n];
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            cin>>grid[i][j];
    ull sol[n];
    for (int i = 0; i < n; i++) {
        sol[i] = grid[i][n-1];
    }
    for (int i = n - 2; i >= 0; i--) {
        sol[0] += grid[0][i];
        for (int j = 1; j < n; j++) {
            sol[j] = min(sol[j - 1] + grid[j][i], sol[j] + grid[j][i]);
        }

        for (int j = n - 2; j >= 0; j--) {
            sol[j]=min(sol[j], sol[j+1] + grid[j][i]);
        }
    }
    ull x= *min_element(sol,sol+n);
    cout<<x<<endl;
    return 0;
}


