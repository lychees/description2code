#include<bits/stdc++.h>
#define ll long long
int mat[1111][1111];
bool visited[1111][1111];

using namespace std;

ll Bfs(int a,int b)
{
    queue< pair<int,int> > Q;

    Q.push(make_pair(a,b));
    int v,u;
    int dist =0;
    int x[] = {1,-1,0,0};
    int y[]=  {0,0,-1,1};
    while(!Q.empty())
    {
        u = Q.front().first;
        v = Q.front().second;
      
        Q.pop();
      
            if(visited[u][v] == false && mat[u][v])
            {
                
                 visited[u][v] = true;
                  dist++;
                   for(int i=0;i<4;i++)
                    {
                        
                        if(mat[u + x[i]][v + y[i]] && visited[u + x[i]][v + y[i]] == false)
                       {
                          Q.push(make_pair(u + x[i],v + y[i]));
                         
                       }
                    }
           }
    }
    return dist;
}

int main()
{
    int n,ans=-1;
    cin>>n;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
        cin>>mat[i][j];
   for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
        {   
            if(visited[i][j] == false)
           {
          // cout<<"-----------------------------"<<endl;
            int max = Bfs(i,j);
            if(max>ans)
            ans = max;
           // cout<<max<<endl;
           }
      }   
    cout<<ans;
return 0;    
}