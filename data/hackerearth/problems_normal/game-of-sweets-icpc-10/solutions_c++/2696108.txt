#include<bits/stdc++.h>
using namespace std;
int n,reach[1<<17];
vector<unsigned int> v1,v2;
int cnt[1<<17];
unsigned int one;
vector<unsigned int> build()
{
	vector<unsigned int> res(100000/32+3,0);
	for (int i=0;i<=100000;i++)
	{
		if (cnt[i])
			res[i/32]|=(one<<(i%32));
	}
	return res;
}
void make_shift()
{
	for (int i=0;i<=100100;++i)
		cnt[i]=cnt[i+1];
}
int main(){
ios_base::sync_with_stdio(0);
//cin.tie(0);
one=1;
cin>>n;
for (;n;--n)
{
	int val;
	cin>>val;
	cnt[val]++;	
	
	if (cnt[val]>1)
		reach[0]=1;
}
v1=build();
for (int iter=1;iter<=32;iter++)
{
	make_shift();
	v2=build();
	for (int j=iter;j<=100050;j+=32)
	{
		for (int q=0;q+j/32<v2.size();q++)
		{
			if (v1[q]&v2[q+(j-1)/32])
			{
				reach[j]=1;
			}
		}
	}
}
int ans=0;
for (int i=0;i<=100000;i++)
	if (reach[i]==1)		
		ans++;
cout<<ans<<endl;
//cin.get();cin.get();
return 0;}
