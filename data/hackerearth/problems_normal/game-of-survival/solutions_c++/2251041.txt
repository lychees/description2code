#include <iostream>
#include <algorithm>
using namespace std;


void countSort(int arr[], int sz) {
	int i, j, k;
	int idx = 0;
	int min, max;
 
	min = max = arr[0];
	for(i = 1; i < sz; i++) {
		min = (arr[i] < min) ? arr[i] : min;
		max = (arr[i] > max) ? arr[i] : max;
	}
 
	k = max - min + 1;
	/* creates k buckets */
	int *B = new int [k]; 
	for(i = 0; i < k; i++) B[i] = 0;

	for(i = 0; i < sz; i++) B[arr[i] - min]++;
	for(i = min; i <= max; i++) 
		for(j = 0; j < B[i - min]; j++) arr[idx++] = i;
	delete [] B;
}
void survivalGame()
{
    int n_test;
    cin>>n_test;
    for(int i=0;i<n_test;i++)
    {
        int size;
        cin>>size;
        int *sharp = new int[size];
        int *strength = new int[size];
        for(int j=0;j<size;j++)
        {
            cin>>sharp[j];
        }
        for(int j=0;j<size;j++)
        {
            cin>>strength[j];
        }
        countSort(sharp,size);
        countSort(strength,size);
       // sort(sharp,sharp+size);
       // sort(strength,strength+size);
        bool fail = false;
        for(int j=0;j<size;j++)
        {
            if(sharp[j]<=strength[j])
            {
                fail = true;
                break;
            }
        }
        if(!fail)
        {
            cout<<"YES"<<endl;
        }
        else
        {
        	cout<<"NO"<<endl;
        }
    }
}

int main()
{
    survivalGame();
}

