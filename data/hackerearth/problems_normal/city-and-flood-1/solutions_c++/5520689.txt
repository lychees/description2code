#include<bits/stdc++.h>
using namespace std;
long int root(long int a[],long int i)
{
	while(i!=a[i])  i=a[i];
	  
   return i;	  
}

bool find(long int a[],long int i,long int j)
{
    long int x=root(a,i);
    long int y=root(a,j);
    
    if(x!=y)
     return false;
     
     else
     return true;
}
void union1(long int a[],long int s[],long int i,long int j)
{  long int x,y;
	if(!find(a,i,j))
	{
		 x=root(a,i);
		 y=root(a,j);
		
	
	if(s[x]>=s[y])
	{
		a[y]=x;
		s[x]+=s[y];
	}
	else
	{
		a[x]=y;
		s[y]+=s[x];
	}
}
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(0);cout.tie(0);
  long int a[100001],s[100001],i,j,n,q,k=0;
  memset(s,1,sizeof(s));
  cin>>n>>q;
  for(long int i=1;i<=n;i++)
  {
  	 a[i]=i;
  }
  while(q--)
  {
  	cin>>i>>j;
  	union1(a,s,i,j);
  }
  
  	
  for(long int i=1;i<=n;i++)
  { if(i==a[i])
  k++; }
  
  
  cout<<k;
  
}
