/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
int ABS(int a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif
}

/* Input opener ends */

#define MOD 1000000007

int cnt[10005];

int main() {
  // input();
    int T; S(T);
    F(t,0,T) {
        int a,b;
        S(a); S(b);
        int range = b-a+1;
        F(i,0,10005) cnt[i] = 0;
        for ( int i = 1; i*i <= b; ++i ) {
            int start = i*i;
            int could = ((a-1)/i) * i + i;
            if ( could > start ) {
                start = could;
            } else {
                cnt[start-a]++;
                start += i;
            }
            while ( start <= b ) {
                cnt[start-a]+=2;
                start += i;
            }
        }

        int mx = 0;
        F(i,0,range) {
            mx = max(mx,cnt[i]);
            // cout << i+a << " " << cnt[i] << endl;
        }
        int res = 0;
        F(i,0,range) if ( mx == cnt[i] ) res++;
        printf("%d\n", res+1);
    }
    return 0;
}