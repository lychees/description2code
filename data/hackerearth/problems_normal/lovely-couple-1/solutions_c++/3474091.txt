#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
int get_gcd(int , int );
int get_lcm(int , int );
int check_prime(int );
int get_prime_factors(int );
int main()
{
    int t,i,a,b,k;
    scanf("%d",&t);
    for(i=0;i<t;i++)
    {
    	scanf("%d %d",&a,&b);
    	k = get_lcm(a,b);
    	if(get_prime_factors(k))
    		printf("Yes\n");
    	else
    		printf("No\n");
    }
    return 0;
}
int get_gcd(int x, int y)
{
    if (x == y)
        return x;
    if (x > y)
        return get_gcd(x-y, y);
    return get_gcd(x, y-x);
}
int get_lcm(int x, int y)
{
    return (x*y)/get_gcd(x, y);
}
int check_prime(int n)
{
    int i;
    if (n==2)
        return 1;
    if (n%2==0)
        return 0;
    for (i=3;i<=sqrt(n);i+=2)
        if (n%i==0)
            return 0;

    return 1;
}
int get_prime_factors(int n)
{
	int h[1000]={0};
	int count=0;
    while (n%2 == 0)
    {
        h[2]++;
        n = n/2;
    }
    for (int i = 3; i <= sqrt(n); i = i+2)
    {
        while (n%i == 0)
        {
            h[i]++;
            n = n/i;
        }
    }
    if (n > 2)
        h[n]++;
    for(int i=0;i<1000;i++)
    {
    	if(h[i]>=1)
    		count++;
    }
    if(count==1)
    	return 0;
    return check_prime(count);
}
