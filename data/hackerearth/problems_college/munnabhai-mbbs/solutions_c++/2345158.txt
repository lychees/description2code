#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int visited[10100];
int n;
int solve(vector<int> v[],int deg[])
{
    vector <int> q;
    for(int i=0;i<=n;i++)
    {
        if(deg[i]==0)
        {   //visited[i]=1;
            q.push_back(i);
        }
    }
    while(!q.empty())
    {
        int u=q.front();
        q.erase(q.begin());
        
               visited[u]=1;
        for(int i=0;i<v[u].size();i++)
        {
            if(visited[v[u][i]]==0)
            {deg[v[u][i]]--;
                if(deg[v[u][i]]==0)
                q.push_back(v[u][i]);

            }

        }
    }
    int x=n;
    
   //  cout<<n<<endl;
    for(int i=0;i<=n;i++)
        if(visited[i]==0)
x--;
return x;
}



int main()
{
 int t;
 cin>>t;
 while(t--)
 {
     int m;
     cin>>n>>m;
     vector<int> v[n+1];
     int deg[n+1];
     memset(deg,0,sizeof deg);
     memset(visited,0,sizeof visited);
     while(m--)
     {
         int a,b;
         cin>>a>>b;
         v[a].push_back(b);
         deg[b]++;
     }
cout<<(solve(v,deg))<<endl;

 }







    return 0;
}
