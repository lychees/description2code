
def testIfWorks(startVal, vals, days):
    timeLeft = startVal*days
    timeToFinish = sum(vals)
    daySum = 0
    day = 1
    works = True
    for val in vals:
        if (daySum+val) > startVal:
            timeLeft -= (startVal-daySum)+val
            daySum = val
            timeToFinish -= daySum
            day += 1
        else:
            daySum += val
            timeLeft -= val
            timeToFinish -= val
        if (timeLeft < timeToFinish or day > days):
            works = False
            break
    return works


[nVals, days] = [int(i) for i in raw_input().split()]


vals = [int(i) for i in raw_input().split()]

startVal = max(int(sum(vals)/days), max(vals))-1

works = False
low = startVal+1
high = low
while (not testIfWorks(high, vals, days)):
    low = high
    high = 2*high

while (low < high-1):
    if (testIfWorks((high+low)/2, vals, days)):
        high = (high+low)/2
    else:
        low = (high+low)/2

print high
