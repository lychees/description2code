#include <bits/stdc++.h>
using namespace std;
#define long int64_t

const int oo = 1 << 30;

int D[1000010];
int a, b, x1, x2, x3, x4, n_test;

inline bool ok (int x) {
	return 2 <= x && x <= 1000000 && D[x] == -1;
}

int cal () {
	list<int> P;
	int x;

	fill_n(D + 1, 1000000, -1);
	D[a] = 0;
	P.emplace_back(a);

	while (!P.empty()) {
		x = P.front();
		P.pop_front();
		if (x == b) return D[x];

		if (ok(x + x1)) P.emplace_back(x + x1), D[x + x1] = D[x] + 1;
		if (ok(x - x2)) P.emplace_back(x - x2), D[x - x2] = D[x] + 1;
		if (ok(x / x3)) P.emplace_back(x / x3), D[x / x3] = D[x] + 1;
		if (ok(x * x4)) P.emplace_back(x * x4), D[x * x4] = D[x] + 1;
	}

	return -1;
}

int main () {
	#ifdef isMyPC
		freopen("Final Destination.inp","r",stdin);
	#endif

	scanf("%d", &n_test);
	while (n_test--) {
		scanf("%d%d%d%d%d%d", &a, &b, &x4, &x3, &x1, &x2);
		printf("%d\n", cal());
	}

	return 0;
}