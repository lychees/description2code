#include<stdio.h>
#include<stdlib.h>      //malloc
#include<string.h>      //memset
#include<stdbool.h>
#include<math.h>
#include<iostream>
#include<cstdio>
#include<vector>
#include<queue>
#include<algorithm>     //sort()
#include<cmath>         //abs()
#include<set>
using namespace std;
#define MOD 1000000007
#define SIZE 100001
#define dump(x) printf(#x" = %d\n",x);
#define INF 200005
typedef long long int ll;
#define max(x,y) ((x) > (y) ? (x) : (y))
#define min(x,y) ((x) < (y) ? (x) : (y))
#define abs(x) ((x) < 0 ? (-(x)) : (x))
#define CONTEST 1
#define EPSILON 8.33e-3
#define LIMIT 5000000
ll scan(void){
    int n=0;
    bool flag = false;
    char ch = getchar_unlocked();
    while((ch<'0'||ch>'9') && ch!='-')
        ch = getchar_unlocked();
    if(ch=='-'){
        flag = true;
        ch = getchar_unlocked();
    }
    while(ch>='0'&&ch<='9'){
        n = (n<<3)+(n<<1)+ch-'0';
        ch = getchar_unlocked();
    }
    if(flag)
        n = -n;
    return n;
}
void print(ll n){
    int i=0;
    char num[20];
    do{
        num[i++] = n%10+'0';
        n/=10;
    }while(n);
    i--;
    while(i>=0)
        putchar_unlocked(num[i--]);
    putchar_unlocked('\n');
}
ll distance(ll x1,ll x2, ll y1,ll y2){
    return (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);
}
int main(void){
    ll t;
    t = scan();
    while(t--){
        ll r,xc,yc;
        r=scan();
        xc=scan();
        yc=scan();
        r = r*r;
        ll x_left,x_right,y_up,y_down;
        x_left = xc-r;
        x_right = xc+r;
        y_up = yc+r;
        y_down = yc-r;
        ll x1,x2,x3,x4,y1,y2,y3,y4;
        x1=scan();y1=scan();
        x2=scan();y2=scan();
        x3=scan();y3=scan();
        x4=scan();y4=scan();
        if(distance(x1,xc,y1,yc)<=r && distance(x2,xc,y2,yc)<=r && distance(x3,xc,y3,yc)<=r && distance(x4,xc,y4,yc)<=r)
            printf("Yes\n");
        else
            printf("No\n");
    }
    return 0;
}