#include <iostream>
#include<math.h>

#define mod 1000000007ll

using namespace std;
    void multiply(long long F[2][2], long long M[2][2])
{
  long long x =  F[0][0]*M[0][0] + F[0][1]*M[1][0];
  long long y =  F[0][0]*M[0][1] + F[0][1]*M[1][1];
  long long z =  F[1][0]*M[0][0] + F[1][1]*M[1][0];
  long long w =  F[1][0]*M[0][1] + F[1][1]*M[1][1];
 
  F[0][0] = x%mod;
  F[0][1] = y%mod;
  F[1][0] = z%mod;
  F[1][1] = w%mod;
}
 void power(long long F[2][2], long long n)
{
  if( n == 0 || n == 1)
      return;
  long long M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}

 long long fib(long long n)
    {
  long long F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
    power(F, n-1);
  return F[0][0];
    }
long long pow1(long long a,long long b)
{
	long long r=1;
	while(b){
		if(b&1)r=(r*a)%mod;
		b/=2;
		a=(a*a)%mod;
	}
	return r;
}

int main()
{
   int T;
   cin>>T;
   while(T--)
   {
   	long long N;
   	cin>>N;
  
/* Optimized version of power() in method 4 */

 long long fn=fib(N);

     long long a=1, b=2, c=3;
     long long n=N;
              while(n>0)
              {
               a=b;
               b=c;
               c=a+b;
               n-=(c-b-1);
              }
              n+=(c-b-1);
              long long ans=b+n;
   	 
     //cout<<NA[N]<<"  "<<A[N]<<endl;
     cout<<pow1(ans,fn)<<endl;
 
}


}
