#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
using namespace std;

char path[106][106];
char processed[106];
int a[106];

int n;

void Process(int x)
{
	int i, j;
	queue<int> Q;
	vector<int> V;
	vector<int> POS;
	
	V.push_back(a[x]);
	POS.push_back(x);
	Q.push(x);
	
//printf("inside process\n");
	while(!Q.empty())
	{
		j = Q.front();
//printf("processing ffor %d th element\n", j);
		Q.pop();
		for(i=1;i<=n;i++)
		{
			if(j!=i && !processed[i] && (path[j][i] == 'Y' || path[i][j] == 'Y'))
			{
//printf("adding %d elementf\n", i);
				Q.push(i);
				POS.push_back(i);
				V.push_back(a[i]);
				processed[i] = 1;
			}
		}
	}
	
	sort(V.begin(), V.end());
	sort(POS.begin(), POS.end());
	for(j=0;j<V.size();j++)
	{
		a[POS[j]] = V[j];
	}
	/*for(j=0;j<V.size();j++)
	{
		printf("%d ", V[j]);
	}*/
}
int main()
{
	int i, j;
	
	scanf("%d", &n);
	for(i=1;i<=n;i++)scanf("%d", &a[i]);
	
	for(i=1;i<=n;i++)scanf("%s", path[i]+1);
	
	for(i=1;i<=n;i++)
	{
		if(processed[i])continue;
		processed[i] = 1;
		Process(i);
	}
	
	for(i=1;i<=n;i++)printf("%d ", a[i]);
	
	return 0;
}