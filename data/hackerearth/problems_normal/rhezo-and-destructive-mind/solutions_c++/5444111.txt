/*mjss...................................sugam goyal............................mjss*/
#include<bits/stdc++.h>
using namespace std;
#define LL long long
#define S 1000005
#define W while
#define M 1000000007
#define str string
#define pi 3.14159265
LL mini=INT_MAX;
LL maxi=INT_MIN;
void initi(int a[],int n)
{
	for(int i=0;i<n;i++)
		a[i]=-1;
}
bool cmp(pair<int,int> p1,pair<int,int> p2)
{
	if(p1.first<p2.first)
		return 1;
	else if(p1.first>p2.first)
		return 0;
	else return (p1.second<p2.second);
}
vector<LL > v[10000];
int parent[10000];
int finding_time[10000];
int low[10000];
int cnt=1;
int visited[10000];
int ans[1001];
void dfs(int i)
{
	visited[i]=1;
	static int cnt=0;
	int count_chid_of_root=0;
	for(int j=0;j<v[i].size();j++)
	{
		int k=v[i][j];
		if(parent[i]==k)
			continue;
		else if(visited[k]){				//this indicates backedge	
			low[i]=min(low[k],low[i]);
		}
		else
		{
			count_chid_of_root++;
			parent[k]=i;
			low[k]=++cnt;
			finding_time[k]=cnt;
			dfs(k);
			if(parent[i]==-1&&count_chid_of_root>1&&visited[i]!=2)
			{	
				visited[i]=2;
				ans[i]=1;
			}
			else if(parent[i]!=-1&&finding_time[i]<=low[k]&&visited[i]!=2)
			{
				ans[i]=1;
				visited[i]=2;
			}
			
			low[i]=min(low[i],low[k]);	
		}
	}
	
}
int main()
{
	int indegree[101]={0};
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++)
	{
		LL a,b;
		cin>>a>>b;
		indegree[a]++;
		indegree[b]++;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	initi(parent,n);
	
	for(int i=1;i<=n;i++)
	{
		if(!visited[i])
		{
			low[i]=0;
			finding_time[i]=0;
			visited[i]=1;
			dfs(i);
		}
	}
	int q;
	cin>>q;
	W(q--)
	{
		int x;
		cin>>x;
		if(ans[x])
		{
			cout<<"Satisfied "<<indegree[x]<<endl;
		}
		else
			cout<<"Not Satisfied\n";
		
	}
	return 0;
}