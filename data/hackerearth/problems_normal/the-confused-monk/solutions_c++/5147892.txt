//https://www.hackerearth.com/code-monk-number-theory-i/algorithm/the-confused-monk/

#include<iostream>

using namespace std;

typedef long long llint;

llint gcd(llint a, llint b)
{
    if (a < b)
    {
        llint temp = a;
        a = b;
        b = temp;
    }

    while (b)
    {
        llint temp = a % b;
        a = b;
        b = temp;
    }

    return a;
}

llint gcdArray(llint *a, int size)
{
    llint gcdv = a[0];
    for (int i = 1; i < size; i++)
    {
        gcdv = gcd(a[i], gcdv);
    }

    return gcdv;
}

llint mulArray(llint *a, int size, llint mod)
{
    llint ans = 1;
    for (int i = 0; i < size; i++)
        ans = (ans*a[i])%mod;
    return ans;
}

llint ModExp(llint a, llint b, llint mod)
{
    int ans = 1;
    while(b)
    {
        if (b & 1)
            ans = (ans*a)%mod;
        a = (a*a)%mod;
        b >>= 1;
    }
    return ans;
}

int main()
{
    int N;
    llint a[100];

    cin >> N;
    for (int i = 0; i < N; i++)
        cin >> a[i];

    llint mq = 1000000007;
    llint gx = gcdArray(a, N);
    llint fx = mulArray(a, N, mq); 
    llint ans = ModExp(fx, gx, mq);
    cout << ans << endl;
    return 0;
}

