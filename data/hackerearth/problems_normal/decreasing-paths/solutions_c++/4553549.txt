#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define ll long long
#define mp make_pair
#define ff first
#define ss second
#define MAX 2000
#define MOD 1000000007

int n;
ll dp[MAX][MAX];
int arr[MAX][MAX];
priority_queue<pair<int,pair<int,int> > >pq;
int movesx[]={0,0,1,-1};
int movesy[]={1,-1,0,0};
ll solve(int ,int);
int main()
{
  cin>>n;
  int i,j;
  memset(dp,-1,sizeof(dp));
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      cin>>arr[i][j];
      pq.push(mp(arr[i][j],mp(i,j)));
    }
  }
  pair<int,pair<int,int> > curr;
  while(!pq.empty())
  {
    curr=pq.top();
    pq.pop();
  //  cout<<curr.ff<<" "<<curr.ss.ff<<" "<<curr.ss.ss<<"\n";
    if (dp[curr.ss.ff][curr.ss.ss]==-1)
    {
      solve(curr.ss.ff,curr.ss.ss);
    }
  }
  ll result=0;
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
    //  cout<<dp[i][j]<<" ";
      result=(result%MOD+dp[i][j]%MOD)%MOD;
    }
  //  cout<<"\n";
  }
  cout<<result<<"\n";

return 0;
}//main

ll solve(int x,int y)
{
  int i;
  if (x>=n || y>=n)
  return 0;
  else if (dp[x][y]!=-1)
  return dp[x][y];
  else
  {
    int tempx,tempy;
    dp[x][y]=0;
    for(i=0;i<4;i++)
    {
      tempx=x+movesx[i];
      tempy=y+movesy[i];
      if (tempx<n && tempx>=0 && tempy<n && tempy>=0)
      {
        if (arr[tempx][tempy]<arr[x][y])
        dp[x][y]=(dp[x][y]%MOD+solve(tempx,tempy)%MOD)%MOD;
      }
    }
    dp[x][y]++;
    return dp[x][y]%MOD;
  }


}
