#include <bits/stdc++.h>

using namespace std;
vector < pair < long long, long long > > vec1;
vector < pair < long long, long long > > vec2;

bool comp(pair <long long, long long> a, pair <long long, long long> b) {
    if (a.second == b.second) return a.first < b.first;

    return a.second > b.second;
}

bool check(long long val) {
    for (int i = 0; i < vec1.size(); i++) {
        if (val >= vec1[i].first) {
            val += vec1[i].second - vec1[i].first;
        } else {
            return false;
        }
    }
    for (int i = 0; i < vec2.size(); i++) {
        if (val >= vec2[i].first) {
            val += vec2[i].second - vec2[i].first;
        } else {
            return false;
        }
    }

    return true;
}

void bsearch() {
    long long l = 0LL, u = 10000000000000LL;

    while ((u - l) > 1) {
        long long mid = (l + u) / 2;
        if (check(mid)) u = mid;
        else l = mid;
    }

    cout << u << endl;
}

int main() {

    int n;
    cin >> n;

    while (n--) {
        long long x, y;
        cin >> x >> y;

        if (y >= x) vec1.push_back(make_pair(x, y));
        else vec2.push_back(make_pair(x, y));
    }
    sort(vec1.begin(), vec1.end());
    sort(vec2.begin(), vec2.end(), comp);
    bsearch();
    return 0;
}
