#include <bits/stdc++.h>

using namespace std;

#define LL long long int 
#define sd(x) scanf("%d", &x)
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define N 2000000
#define pii pair<int,int>
#define MOD 1000000007LL

LL BIT1[N], BIT2[N];
int n, x, y, z, w;
LL ret;

inline LL query(LL b[], int i){
	ret = 0;
	while(i > 0){
		ret += b[i];
		if(ret >= MOD){
			ret -= MOD;
		}
		i -= (i & (-i));
	}
	return ret;
}

inline void update(LL b[], int i, LL v){
	if(i == 0){
		return;
	}
	if(v >= MOD){
		v %= MOD;
	}
	while(i <= n){
		b[i] += v;
		if(b[i] >= MOD){
			b[i] -= MOD;
		}
		i += (i & (-i));
	}
}

inline void solve(){
	int i, q, j;
	LL ans;
	sd(n); sd(q);
	memset(BIT1, 0, sizeof BIT1);
	memset(BIT2, 0, sizeof BIT2);
	for(i = 1; i <= n; i++){
		sd(j);
		ans = j;
		update(BIT1, i, ans);
		update(BIT2, i, ans * i);
	}	
	while(q--){
		sd(w); sd(x); sd(y); sd(z); 
		y += x;
		z += x;
		if(y > z || z > n){
			exit(1);
		}
		y--;
		ans = query(BIT1, z) - query(BIT1, y);
		ans *= (w - x);
		ans %= MOD;
		ans += query(BIT2, z) - query(BIT2, y);
		ans %= MOD;
		if(ans < 0){
			ans += MOD;
		}
		x = ans;
		printf("%d\n", x);
	}
	return;	
}

int main(){
	int t;
	sd(t);
	while(t--){
		solve();
	}
	return 0;
}