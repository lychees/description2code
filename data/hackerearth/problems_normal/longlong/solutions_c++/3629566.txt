#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mag 1000000 //10^8
#define inf 1e18
#define MOD 1000000007
#define rep(i,n) for(i=0;i<n;i++)
#define mset(x,v) memset(x, v, sizeof(x))
#define print_array(a,n) for(i=0;i<n;i++) cout<<a[i]<<" ";
#define var_val(x) cout<<#x<<" "<<x<<endl;
#define pb push_back
#define fi first
#define se second
string s;

ll arr[mag+1],pw[mag+1];

ll val(char ch){
return (ch-'a'+1);
}

void precomputation_of_powers(){
pw[0]=1;
for(ll i=1;i<=mag;i++)
    pw[i]=pw[i-1]*27;//
}

bool rabin_karp(ll window_size){
mset(arr,0);
unordered_set<ll>S;
ll siz=s.size()-window_size+1;
ll i,sum=0;
for(i=0;i<window_size;i++){
sum=sum*27+val(s[i]);
}
arr[0]=sum;
for(i=1;i<=(s.size()-window_size);i++){
sum=arr[i-1];
sum=sum-val(s[i-1])*pw[window_size-1];
sum=sum*27+val(s[i+window_size-1]);
arr[i]=sum;
}
for(i=0;i<=(s.size()-window_size);i++)
    S.insert(arr[i]);
if(S.size()==siz)
    return false;
return true;
}

int main(){
cin>>s;
precomputation_of_powers();
ll l=0,r=s.size()-1;
ll ans=0;
while(l<=r){
    ll mid=(l+r)/2;
    if(rabin_karp(mid))
        {
                ans=mid;
                l=mid+1;
        }
    else
        r=mid-1;
}
cout<<ans;

}
