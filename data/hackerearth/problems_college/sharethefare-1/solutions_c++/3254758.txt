#include <bits/stdc++.h>
using namespace std;

struct trip
{
	int Expenses;
	int paid;
} t ;

int main()
{
	int T,N,Q,M,amount;
	
	string name;
	
	scanf("%d",&T);
	
	while(T--)
	{
		vector<string> V;
		vector<string> :: iterator vit;
	
		map<string,trip> MAP;
		map<string,trip> :: iterator it;
		
		scanf("%d %d",&N,&Q);
		
		for(int i=1;i<=N;i++)
		{
			cin>>name;
			
			V.push_back(name);
			
			t.Expenses=0;
			t.paid=0;
			
			MAP[name]=t;
		}
		
		while(Q--)
		{
			cin>>name>>amount>>M;
			
			int value1=(amount/(M+1))+(amount%(M+1));
			int value2=amount/(M+1);
			
			it=MAP.find(name);
			
			it->second.paid+=amount;
			it->second.Expenses+=value1;
			
			while(M--)
			{
				cin>>name;
				
				it=MAP.find(name);
			
				it->second.Expenses+=value2;
			}
		}
		
		for( vit=V.begin();vit!=V.end();vit++)
		{
			//cout<<it->first<<" "<<it->second.Expenses<<" "<<it->second.paid<<endl;
			
			it=MAP.find(*vit);
			
			int cost=it->second.Expenses-it->second.paid;
			
			if(cost==0)
			cout<<it->first<<" "<<"neither owes nor is owed"<<endl;
			else if(cost > 0)
			{
				cout<<it->first<<" "<<"owes"<<" "<<cost<<endl;
			}
			else
			{
				cout<<it->first<<" "<<"is owed"<<" "<<abs(cost)<<endl;
			}
		}
	}
	
    return 0;
}
