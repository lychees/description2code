#include <bits/stdc++.h>  
using namespace std;
typedef long long ll;
typedef vector<long long> vi;
typedef map<int, int> mii;
ll _sieve_size;
bitset<10000010> bs;   
vi primes;  
void sieve(ll upperbound) {          
  _sieve_size = upperbound + 1;                  
  bs.set();                                             
  bs[0] = bs[1] = 0;                                    
  for (ll i = 2; i <= _sieve_size; i++) 
  	if (bs[i]) {
    for (ll j = i * i; j <= _sieve_size; j += i) 
    bs[j] = 0;
    //primes.push_back((int)i);  
	} 
} 
 
int main()
{
	sieve(1000005);
	int sum[1000005];
	memset(sum,0,sizeof(sum));
	sum[0]=0;
	for(int i=1;i<1000005;i++)
	sum[i]=sum[i-1]+bs[i];
	int T,L,R;
	cin>>T;
	while(T-->0)
	{
		int count=0;
		cin>>L>>R;
		count=sum[R]-sum[L-1];
		//cout<<count<<" ";
	
		cout<<fixed;
	   	cout<<setprecision(6)<<(float)(count)/(R-L+1)<<endl;
	
	}
    return 0;
}