#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll MOD = 1e9 + 7;
vector<ll> v;

ll binpow(ll a, ll k)
{
	ll res = 1;
	while (k) {
		if (k & 1)
			res = res * a % MOD;
		k >>= 1;
		a = a * a % MOD;
	}
	return res;
}

ll inv(ll a)
{
	return binpow(a, MOD - 2);
}

int main()
{
    int n;
    cin >> n;
    int zero = 0;
    
    v.resize(n);
    for (auto& t : v)
    	cin >> t;
    	
    int q;
    cin >> q;
    
    ll mlt = 1;
    for (auto t : v)
    	mlt = mlt * (t == 0 ? 1 : t) % MOD;
    
    zero = count(v.begin(), v.end(), 0);
    
    while (q--) {
    	int type;
    	cin >> type;
    	if (type == 0) {
    		int id, value;
    		cin >> id >> value;
    		id--;
    		
    		if (v[id] == 0) zero--;
    		if (value == 0) zero++;
    		
    		if (v[id])
    			mlt = mlt * inv(v[id]) % MOD;
    		v[id] = value;
    		if (value)
    			mlt = mlt * value % MOD;
    	}
    	else {
    		int id;
    		cin >> id;
    		id--;
    		
    		if (zero > 1)
    			cout << 0;
    		else if (zero == 1) {
    			if (v[id] == 0)
    				cout << mlt;
    			else
    				cout << 0;
    		}
    		else
    			cout << mlt * inv(v[id]) % MOD;
    		cout << endl;
    	}
    }
}
