#include<iostream>
#include<vector>
#include<stdio.h>
using namespace std;
vector<int> v[100001];
int res[100001];
int in[100001],out[100001];
int outl;
void dfs(int i,int level)
{

    res[i]=level;
    in[i]=outl;
    outl++;
    int j=0;
    while(j<v[i].size())
    {
        dfs(v[i][j],level+1);
        j++;
    }
    out[i]=outl;
    outl++;
    return;
}
int main()
{
    int t;
    //cin>>t;
    scanf(" %d",&t);
    while(t--)
    {
        int n,i,root,t;
        //cin>>n;
        scanf(" %d",&n);
        i=1;
        while(i<=n)
        {
            v[i].clear();
            in[i]=0;
            out[i]=0;
            i++;
        }
        i=1;
        while(i<=n)
        {
            //cin>>par;
            scanf(" %d",&t);
            if(t==0)
            {
                root=i;
            }
            else
            {
                v[t].push_back(i);
            }
            i++;
        }
        outl=0;
        dfs(root,0);
      /*  i=1;
        while(i<=n)
        {
            cout<<i<<" "<<dfsin[i]<<" "<<dfsout[i]<<" "<<heightof[i]<<endl;
            i++;
        }
        cout<<endl;*/
        int q,x,y;
       // cin>>q;
       scanf(" %d",&q);
        while(q--)
        {
            //cin>>x>>y;
            scanf(" %d %d",&x,&y);
            if(in[y]<in[x] && out[x]<out[y])
            {
               cout<<res[x]-res[y]-1<<endl;
            }
            else
            {
                cout<<"-1"<<endl;
            }
        }
    }
    return 0;
}
