#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define m_p make_pair
#define F first
#define S second
#define For(i,a,b) for(int i=a;i<b;i++)
#define Fore(i,a,b) for(int i=a;i<=b;i++)
#define rFore(i,a,b) for(int i=a;i>=b;i--)
#define tr(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)
#define all(a) a.begin(),a.end()
#define mem(a,b) memset(a,b,sizeof(a))
typedef long long int lli;
typedef pair<int,int> pii;
typedef pair<int,pii> pi3;
typedef pair<pii,pii> pi4;
typedef vector<int> vi;
typedef vector<pii> vpii;
void sc(int& a){scanf("%d",&a);}
void sc(lli& a){scanf("%lld",&a);}
void sc(int& a,int& b){sc(a);sc(b);}
void sc(lli& a,lli& b){sc(a);sc(b);}
void sc(int& a,int& b,int& c){sc(a,b);sc(c);}
void sc(lli& a,lli& b,lli& c){sc(a,b);sc(c);}			
void prl(int a){printf("%d\n",a);}
void prl(lli a){printf("%lld\n",a);}
void prl(){printf("\n");}
void prs(int a){printf("%d ",a);}
void prs(lli a){printf("%lld ",a);}
void prl(lli a, lli b){cout<<a<<" "<<b<<" "<<endl;}
void prl(lli a, lli b, lli c){cout<<a<<" "<<b<<" "<<c<<" "<<endl;}
void prl(lli a, lli b, lli c, lli d){cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;}
void prl(lli a, lli b, lli c, lli d, lli e){cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<endl;}
void prl(lli a, lli b, lli c, lli d, lli e, lli f){cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<" "<<f<<endl;}
int mod=1000000007;
lli modpow(lli a, lli b, lli mod){lli res=1;while(b>0){if(b&1)res=(res*a)%mod;a=(a*a)%mod;b=b/2;}return res%mod;}
#define inf INT_MAX
#define N 1000000+5
lli maxx[55][2],minn[55][2];
int main()
{
	int t,n,x;
	char c;
	sc(t);
	while(t--){
		maxx[0][0]=1;
		maxx[0][1]=1;
		minn[0][0]=1;
		minn[0][1]=1;
		sc(n);
		Fore(i,1,n){
			cin>>c;
			if(c=='N'){
				maxx[i][0]=max(maxx[i-1][0],maxx[i-1][1]);
				minn[i][0]=min(minn[i-1][0],minn[i-1][1]);
				maxx[i][1]=-1*min(minn[i-1][0],minn[i-1][1]);
				minn[i][1]=-1*max(maxx[i-1][0],maxx[i-1][1]);
			}
			else if(c=='+'){
				sc(x);
				maxx[i][0]=max(maxx[i-1][0],maxx[i-1][1]);
				minn[i][0]=min(minn[i-1][0],minn[i-1][1]);
				maxx[i][1]=max(maxx[i-1][0],maxx[i-1][1])+x;
				minn[i][1]=min(minn[i-1][0],minn[i-1][1])+x;
			}
			else if(c=='-'){
				sc(x);
				maxx[i][0]=max(maxx[i-1][0],maxx[i-1][1]);
				minn[i][0]=min(minn[i-1][0],minn[i-1][1]);
				maxx[i][1]=max(maxx[i-1][0],maxx[i-1][1])-x;
				minn[i][1]=min(minn[i-1][0],minn[i-1][1])-x;
			}
			else if(c=='*'){
				sc(x);
				maxx[i][0]=max(maxx[i-1][0],maxx[i-1][1]);
				minn[i][0]=min(minn[i-1][0],minn[i-1][1]);
				maxx[i][1]=x*max(maxx[i-1][0],maxx[i-1][1]);
				minn[i][1]=x*min(minn[i-1][0],minn[i-1][1]);
			}
			else if(c=='/'){
				sc(x);
				maxx[i][0]=max(maxx[i-1][0],maxx[i-1][1]);
				minn[i][0]=min(minn[i-1][0],minn[i-1][1]);
				maxx[i][1]=(max(maxx[i-1][0],maxx[i-1][1]))/x;
				minn[i][1]=(min(minn[i-1][0],minn[i-1][1]))/x;
			}
		}
		prl(max(maxx[n][0],maxx[n][1]));
	}
}