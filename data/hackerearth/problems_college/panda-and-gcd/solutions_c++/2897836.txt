#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int,int> pii;
typedef vector <int> vi;

#define rep(i, n) for(int i = 0; i < (n); ++i)

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define gi(x) scanf("%d", &x)
#define all(c) c.begin(), c.end()
#define mset(a, v) memset(a, v, sizeof(a))
#define sz(a) ((int)a.size())

#define dbn cerr << "\n"
#define dbg(x) cerr << #x << " : " << (x) << " "
#define dbs(x) cerr << (x) << " "

const int N = (int)1e6 + 10;
const int mod = (int)1e9 + 7;

inline void add(int& x, int y) {
    x += y;
    if (x >= mod)
        x -= mod;
}

int a[N];
int dp[N];
int cnt[N];
int pw2[N];

int main() {
    int n;
    gi(n);
    memset(cnt, 0, sizeof(cnt));
    rep(i, n) {
        gi(a[i]);
        ++cnt[a[i]];
    }
    pw2[0] = 1;
    for (int i = 1; i < N; ++i)
        pw2[i] = (ll)pw2[i - 1] * 2ll % mod;

    for (int i = 1; i < N; ++i) {
        int c = 0;
        for (int j = i; j < N; j += i)
            c += cnt[j];
        dp[i] = pw2[c];
        add(dp[i], mod - 1);
    }

    for (int i = N - 1; i >= 1; --i) {
        for (int j = i + i; j < N; j += i) {
            add(dp[i], mod - dp[j]);
        }
    }

    rep (i, n) {
        printf("%d%c", dp[a[i]], " \n"[i + 1 == n]);
    }
    return 0;
}