#include<bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back
#define pf push_front
#define ins insert
#define mp make_pair
#define len(s) s.length()
#define forp(i,a,b) for( i=a;i<=b;i++)
#define rep(i,n)    for( i=0;i<n;i++)
#define ren(i,n)    for( i=n-1;i>=0;i--)
#define forn(i,a,b) for( i=a;i>=b;i--)
#define on cout<<endl
#define all(v) v.begin(),v.end()
#define mem(n,m) memset(n,m,sizeof(n))
#define pii pair<int,int>
#define pll pair<long long,long long>
#define sii set<int>
#define sll set<long long>
#define vii vector<int>
#define vll vector<long long>
#define mll map<long long, long long>
#define lob lower_bound
#define upb upper_bound
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define ford(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define fors(container, it, a, b) for(__typeof(container.begin()) it = a; it != b; it++) 

#define boost ios_base::sync_with_stdio(0)
#define MOD 1000000007
#define EPSILON 1e-9
#define PI 3.14159265358979323846
#define inf 999999999999999999
#define siz 100001
#define SIZ 1000001
#define SIZE 200001

typedef long long  ll;
typedef long double  ldo;
typedef double  db ;
using namespace std;

vll v[siz];
bool visit[siz],ap[siz];
ll disc[siz],low[siz],parent[siz],tim=0;

void artifunc(ll u)
{
    ll children = 0;
    ll i;
    
    visit[u] = true;
    
    disc[u] = low[u] = ++tim;
    
    rep(i,v[u].size())
    {
        ll p = v[u][i];
        if(!visit[p])
        {
            children++;
            
            parent[p] = u;
            artifunc(p);
            
            low[u]  = min(low[u], low[p]);
 
            if (parent[u] == -1 && children > 1)
               ap[u] = true;
 
            if (parent[u] != -1 && low[p] >= disc[u])
               ap[u] = true;
        }
        
        else if(p!=parent[u])
        {
            low[u] = min(low[u], disc[p]);
        }
    }
}

int main()
{
    ll n,a,b,i,tp,q,m;
    
    mem(visit, false);
    mem(ap, false);
    mem(parent, -1);
    
    cin>>n>>m;
    while(m--)
    {
        cin>>a>>b;
        v[a].pb(b);
        v[b].pb(a);
    }
    
    forp(i,1,n)
    {
        if(!visit[i])
        artifunc(i);
    }
    
    cin>>q;
    while(q--)
    {
        cin>>tp;
        if(ap[tp])
        {
            cout<<"Satisfied "<<v[tp].size();on;
        }
        else 
        {
            cout<<"Not Satisfied";on;
        }
    }
    
    return 0;
}