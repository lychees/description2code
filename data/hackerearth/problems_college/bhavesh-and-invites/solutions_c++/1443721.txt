#include<iostream>
#include<vector>
#include<string.h>
#include<stdio.h>
#include<climits>
#include<map>
#include<math.h>
#include<queue>
#include<algorithm>
#define LL long long int
#define P(N) printf("%d\n",N);
#define S(N) scanf("%d",&N);
#define SL(N) scanf("%lld",&N);
#define pb push_back
#define mp make_pair
#define pnl printf("\n");
#define FOR(i,a,b) for (i=a;i<=b;i++)
#define mem(a,val) memset(a,val,sizeof(a))
using namespace std;
int gcd(int a, int b){ int temp; while(b>0)	{ temp= b; b=a%b; a=temp;}	return a;}
vector<int>adj[100005];
vector<int>levelNodes[100005];
int level[100005];
LL ans[100005];
void bfs(int src)
{
    queue<int>que;
    que.push(src);
    memset(level,-1,sizeof(level));
    level[src]=0;
    int maxm=0;
    levelNodes[0].pb(src);
    while(!que.empty())
    {
        int V= que.front(); que.pop();
        int len = adj[V].size();
        for(int i=0;i<len;i++)
        {
            int node= adj[V][i];
            if(level[node]==-1)
            {
                level[node]= level[V]+1;
                levelNodes[level[node]].pb(node);
                maxm=max(maxm,level[node]);
                que.push(node);
            }
        }
    }
  //  P(maxm)
    //for(int i=0;i<=maxm;i++){for(int j=0;j<levelNodes[i].size();j++)cout<<levelNodes[i][j]<<" "; cout<<endl;}
    for(int i=maxm;i>=0;i--)//for each level
    {
    	int len = levelNodes[i].size();
    	for(int j=0;j<len;j++) // for all nodes in the level
        {
            int V = levelNodes[i][j];
            if(i==maxm)
                ans[V]=1;
            else
            {
                int x= adj[V].size();
                for(int k=0;k<x;k++)
                {
                    int node= adj[V][k];
                    if(level[node]-level[V]==1)
                    ans[V]+=ans[node];
                }
            }
        }
    }
    return ;
}
int main()
{
       #ifndef ONLINE_JUDGE
       //     freopen("C:\\Users\\hp pc\\Desktop\\input.txt", "r", stdin);
      #endif
      int i,j,t,N,M,u,v,src;
      S(N) S(M)
      while(M--)
      {
          scanf("%d %d",&u,&v);
          adj[u].pb(v);
          adj[v].pb(u);
      }
      scanf("%d",&src);
      bfs(src);
      for(int i=1;i<=N;i++)printf("%d ",ans[i]);pnl
return 0;
}

