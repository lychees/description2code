#include <iostream>
#include <array>
using namespace std;

using ull = unsigned long long;
constexpr ull mod = 1000000007ull;

array<ull, 8000> pref;
unsigned last = 0;

void nextf() {
	ull f = pref[last];
	for (ull i = last * 256 + 1; i <= (last + 1) * 256; ++i) 
		f = (f * i) % mod;
	++last;
	pref[last] = f;
}

ull factorialm(ull n) {
	unsigned x = n / 256;
	while (last < x)
		nextf();
		
	ull res = pref[x];
	for (ull i = x * 256 + 1; i <= n; ++i) 
		res = (res * i) % mod;	
	return res;
}

ull powm(ull a, ull n) {
	ull res = 1;
	while (n) {
		if (n % 2 == 1)
			res = (res * a) % mod;
		a = (a * a) % mod;
		n /= 2;
	}
	return res;
}

ull inversem(ull a) {
	return powm(a, mod - 2);
}

int main()
{
	ios_base::sync_with_stdio(0);
    cin.tie(0);
    pref[0] = 1ull;
	
	int t;
	cin >> t;
	for (int i = 0; i < t; ++i) {
		ull n;
		cin >> n;
		ull num = factorialm(2 * n);
		ull den = factorialm(n);
		den = (den * den) % mod;
		den = (den * (n + 1)) % mod;
		num = (num * inversem(den)) % mod;
		cout << num << '\n';
	}
    return 0;
}
