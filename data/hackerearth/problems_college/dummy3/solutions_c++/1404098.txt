#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define FL(i,a,b) for(ll i=a;i<b;i++)
#define FOR(i,n) for(ll i=0;i<n;i++)
#define SORTF(x) sort(x.begin(),x.end(),func);
#define SORT(x) sort(x.begin(),x.end())
#define pb(x) push_back(x)
#define SET(v, val) memset(v, val, sizeof(v)) ;
#define RSORT(v) { SORT(v) ; REVERSE(v) ; }
#define ALL(v) v.begin(),v.end()
#define REVERSE(v) { reverse(ALL(v)) ; }
#define UNIQUE(v) unique((v).begin(), (v).end())
#define RUNIQUE(v) { SORT(v) ; (v).resize(UNIQUE(v) - (v).begin()) ; }
#define fill(x,n) memset(x,n,sizeof(x))
#define S(n) scanf("%lld",&n)

ll modulo(ll a,ll b) {
	ll c = 1e9 + 7;
    long long x=1,y=a;
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c;
        b /= 2;
    }
    return x%c;
}

ll a[2000][2000]= {0};
ll mat[2000][2000];

int main() {
	ll n;
	S(n);
	ll i,j;
	for(i = 1;i <= n;i++) {
		for(j = 1;j <= n;j++) {
			S(mat[i][j]) ;
		}
	}
	for(j = 1; j <= n;j++) {
		for(i = 1;i <= n;i++) {
			a[i][j] = a[i][j - 1];
			if(i - 1 != 0)
				a[i][j] = min(a[i][j], a[i - 1][j]);
			a[i][j] += mat[i][j];
			//cout << a[i][j] << " ";
		}
		for(i = n;i >= 1;i--) {
			if(i + 1 <= n)
				a[i][j] = min(a[i][j], a[i + 1][j] + mat[i][j]);
		}
	} 
	for(i = 1; i <= n;i++) {
		for(j = 1;j <= n;j++) {
		//	cout << a[i][j] << " ";
		}
	//	cout << "\n";
	} 
	ll mi = a[1][n];
	for(i = 1;i <= n;i++) {
		mi = min(mi, a[i][n]);
	}
	cout << mi << "\n";
}


