#include <iostream>
#include<cstdio>
#include <vector>

#define MAX 20001
#define QMAX 2000
#define R 1
#define B 2

using namespace std;

int T;
int E;
vector <int> adjL[20002];
int Queue[QMAX];
int VisColor[20002];
int Red =0;
int Black =0;
int f=0;
int r=0;

int ans = 0;

void bfs(int s)
{
    f=0;
    r=0;

    Queue[r++] = s;
    VisColor[s] = R;
    Red++;

    while(f!=r)
    {
        int u = Queue[f];
        f=(f+1)%QMAX;
        int c=VisColor[u];

        for(int i=0; i<(int)adjL[u].size(); i++)
        {
            if(VisColor[adjL[u][i]] == 0)
            {
                if(c==R)
                {
                    VisColor[adjL[u][i]] = B;
                    Black++;

                }
                if(c==B)
                {
                    VisColor[adjL[u][i]] = R;
                    Red++;

                }

                Queue[r] = adjL[u][i];
                r = (r + 1)%QMAX;
            }
        }

    }

}

int main()
{
    int tc = 1;
    int u, v;
    scanf("%d",&T);

    while(tc <= T)
    {
        for(int i=1; i< MAX; i++)
        {
            adjL[i].clear();
            VisColor[i] =0;
        }
        ans = Red = Black = 0;
        scanf("%d",&E);
        for(int i=1; i<=E; i++)
        {
            scanf("%d",&u);
            scanf("%d",&v);
            adjL[u].push_back(v);
            adjL[v].push_back(u);
        }

        for(int i=1; i< MAX; i++)
        {
            if(((int)adjL[i].size() != 0) && (VisColor[i] == 0))
            {
                bfs(i);
                (Red>Black)? (ans = ans + Red) : (ans = ans + Black);
                Red = Black = 0;
            }
        }

        printf("Case %d: %d\n",tc,ans);

        tc++;
    }

    return 0;
}
