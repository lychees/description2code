#include<iostream>
#include<vector>
#include<queue>
#include<cstring>


using namespace std;

const int N = 100001;
std::vector<int > v[N];

int bfs(int n){

	queue< int > q;
	vector< int > :: iterator it;
	bool chk[n+1];

	memset( chk , 0, sizeof(chk));

	q.push(1);

	chk[1] = 1;

	int y;

	while( !q.empty()){

		 y = q.front();
		q.pop();

		for( it = v[y].begin(); it != v[y].end(); ++it){

			if( !chk[*it]){

				q.push(*it);
				chk[*it] = 1;

			}

		}


	}

	memset( chk , 0, sizeof(chk));
	int per[n+1];
	per[y] = 0;

	int mx = 0;

	q.push(y);

	while( !q.empty()){

		 y = q.front();
		q.pop();

		//int c = 0;

		for( it = v[y].begin(); it != v[y].end(); ++it){

			if( !chk[*it]){


				//if( !c) c = 1;

				per[*it] = per[y] + 1;

				q.push(*it);
				chk[*it] = 1;

			}

		}

		//if(c) mx++;


	}
	//cout<<"mx"<<per[y];


	return per[y];


}

int main(int argc, char const *argv[])
{


	int n ;
	cin >> n;

	int x,y;

	for(int i = 1; i< n; i++){

		cin >> x >> y;

		v[x].push_back(y);
		v[y].push_back(x);
	}

	int len = bfs(n);

	cout<< len << endl;

	return 0;
}
