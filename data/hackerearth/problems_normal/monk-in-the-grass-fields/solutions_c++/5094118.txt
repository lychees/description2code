#include<iostream>
#include<algorithm>
#include<climits>
#include<cstring>
using namespace std;
void print(int *arr,int size,string TAG) {
    TAG+=": ";
    cout<<TAG;
    for (int i = 0; i < size; i++) {
        /* code */
        cout<<arr[i]<<' ';
    }
    cout<<endl;
}
int main() {
    ios::sync_with_stdio(false);
    int T,N,K,i,j,ans,*rowSum,*colSum,*adjustedRSum,*adjustedCSum;
    cin>>T;
    while(T--) {
        cin>>N>>K;
        int A[N][N];
        // print(&N,1,"N");
        // print(&K,1,"K");
        rowSum=new int[N];
        colSum=new int[N];
        adjustedRSum=new int[K+1];
        adjustedCSum=new int[K+1];
        memset(rowSum,0,sizeof(int)*N);
        memset(colSum,0,sizeof(int)*N);
        memset(adjustedRSum,0,sizeof(int)*(K+1));
        memset(adjustedCSum,0,sizeof(int)*(K+1));
        for(i=0;i<N;i++) {
            for(j=0;j<N;j++) {
                cin>>A[i][j];
                rowSum[i]+=A[i][j];
                colSum[j]+=A[i][j];
            }
        }
        // print(rowSum,N,"Row Sum");
        // print(colSum,N,"Col Sum");
        for(i=1;i<=K;i++) {
            sort(rowSum,rowSum+N);
            sort(colSum,colSum+N);
            // print(rowSum,N,"Row Sum");
            // print(colSum,N,"Col Sum");
            int temp;
            temp=rowSum[0];
            adjustedRSum[i]+=temp+adjustedRSum[i-1];
            rowSum[0]+=N;
            temp=colSum[0];
            adjustedCSum[i]+=temp+adjustedCSum[i-1];
            colSum[0]+=N;
            // print(adjustedRSum,K+1,"adjustedRSum");
            // print(adjustedCSum,K+1,"adjustedCSum");
        }
        ans=INT_MAX;
        for(i=0;i<=K;i++) {
            ans=min(ans,adjustedRSum[i]+i*(K-i)+adjustedCSum[K-i]);
            // j=(adjustedRSum[i]+i*(K-i)+adjustedCSum[K-i]);
            // print(&j,1,"total");
        }
        cout<<ans<<endl;
        delete[] rowSum;
        delete[] colSum;
        delete[] adjustedCSum;
        delete[] adjustedRSum;
    }
    return 0;
}
