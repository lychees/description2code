#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pa;
typedef vector<int> ve;

#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define pb push_back
inline void fastRead(int *a)
{
   register char c=0;
   int f1=0;
   while (c<33) c=(getchar_unlocked());
   *a=0;
   if(c=='-')
   {
       f1=1;
       c=getchar_unlocked();
   }
   while(c>33)
   {
       *a=*a*10+c-'0';
       c=(getchar_unlocked());
   }
   if(f1==1)
   *a=-(*a);
}
int checkLeap(int y)
{
	if( (y - (y/400) * 400) == 0)
		return 1;
	else if( y - (y/100)*100==0)
		return 0;
	else if (y-(y/4)*4 == 0)
		return 1;
	else
		return 0;
}
int main()
{
	int t,i,j;
	//freopen("input.txt","r",stdin);
	fastRead(&t);
	
	int m,y;
	int first[3010][12];
	first[0][0]=2;
	int days[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
	for(i=0;i<=3000;i++)
	{
		if(i!=0)
		{
			
			int cnt = (days[11] - first[i-1][11])/7;
			int temp = (cnt)*7 + first[i-1][11] - days[11] + 7;
			first[i][0] = temp;
			
		}
		if(checkLeap(i+2000))
		{
			days[1] = 29;	
			
			for(j=1;j<=11;j++)
			{
				
				int cnt = (days[j-1] - first[i][j-1])/7;
				int temp = (cnt)*7 + first[i][j-1] - days[j-1] + 7;
				first[i][j] = temp;
			}
	
		}
		else
		{
			days[1] = 28;
			
			for(j=1;j<=11;j++)
			{
				int cnt = (days[j-1] - first[i][j-1])/7;
				int temp = (cnt)*7 + first[i][j-1] - days[j-1] + 7;
				first[i][j] = temp;
			}
		}
	}
	while(t--)
	{
		fastRead(&m);
		fastRead(&y);
		
		if(checkLeap(y))
			days[1]=29;
		else
			days[1] = 28;
		
		int ans = first[y-2000][m-1];
		while(ans<=days[m-1] -7 )
		{
			cout<<ans<<" ";
			ans =ans + 7;
		}
		if (ans<= days[m-1])
			cout<<ans;
					
		cout<<endl;
	}
	return 0;
}

