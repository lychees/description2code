def test(S,aCost,bCost):
    if S.count('/')== 0 and not palindrome(S):
        print -1
    else:
        cost=0
        counter=0
        l=len(S)
        L=list(S)
        while counter < l/2:            
            if S[counter] != S[l-counter-1]:
                if S[counter]=='/':
                    if S[l-counter-1]=='a':
                        L[counter]='a'
                        cost+=aCost
                    else:
                        L[counter]='b'
                        cost+=bCost
                elif S[l-counter-1]=='/':
                    if S[counter]=='a':
                        L[l-counter-1]='a'                                                
                        cost+=aCost
                    else:
                        L[l-counter-1]='b'
                        cost+=bCost
            elif S[counter] == '/':
                if aCost < bCost:
                    L[counter]='a'
                    L[l-counter-1]='a'
                    cost+= aCost*2
                else:
                    L[counter]='b'
                    L[l-counter-1]='b'
                    cost+= bCost*2
            counter+=1
        
        if not palindrome(''.join(L)):
            print -1
        else:
            print cost

def palindrome(s):
    isp=True
    counter=0
    l=len(s)
    while counter < l:
        if s[counter] != s[l-counter-1]:
            isp=False
            break
        counter+=1
    return isp




t = int(raw_input())
counter=0
while counter < t:
    S= raw_input()
    aCost= int(raw_input())
    bCost= int(raw_input())
    test(S,aCost,bCost)
    counter+=1

