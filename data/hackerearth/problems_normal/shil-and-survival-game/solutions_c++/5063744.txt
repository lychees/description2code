#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int a[100005];
int n;
int bit[100005];
void update(int pos)
{
	while(pos<=n)
	{
		bit[pos] ++;
		pos += pos & (-pos);
	}
}
int query(int pos)
{
	int res = 0;
	while(pos >0)
	{
		res += bit[pos];
		pos -= pos & (-pos);
	}
	return res;
}
int main()
{

scanf("%d",&n);
int i,x;
set<int> s;
for(i=1;i<=n;i++)
{
	scanf("%d",&a[i]);
	s.insert(a[i]);
}
int ra = 1;
map<int,int> gr;
set<int>::iterator I;
for(I=s.begin();I!=s.end();I++)
gr[*I] = ra++;
for(i=1;i<=n;i++)
a[i] = gr[a[i]];
s.clear();

for(i=1;i<=n;i++)
{
	
	int hi = n-a[i];
	int prev = query(n) - query(a[i]);
//	printf("%d has less %d and hi %d but has covered %d\n",a[i],less,hi,prev);
	update(a[i]);
	if(prev==0 || prev==hi)s.insert(i);
}
for(I=s.begin();I!=s.end();I++)
printf("%d ",*I);
return 0;
}