//----------shivam_wadhwa----------//
#include <bits/stdc++.h>
#define ll long long int
#define sc1(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define scll(x) scanf("%lld",&x)
#define pint(c) printf("%d",c)
#define pll(c) printf("%lld",c)
#define ps() printf(" ")
#define pn() printf("\n")

#define vi vector<int>
#define vii vector<pair<int,int> >
#define mp make_pair
#define pb push_back

//loops
#define ff(i,n,a) for(i=a;i<n;++i)
#define fb(i,n,a) for(i=n,i>=a;--i)

//constants
const int mxn=1e5+1;
const int MOD=1e9+7;
using namespace std;
int sieve[10001];
vi primes;
int n,k;
void create()
{
	sieve[1]=1;
	for(int i=2;i<=100;++i)
	{
		if(!sieve[i])
		{	
			for(int j=i*i;j<=10000;j+=i)
			{
				sieve[j]=1;
			}
		}
	}
	for(int i=1;i<=10000;++i)
		if(!sieve[i])
			primes.pb(i);
}
ll steps[10001];
int main()
{
	int t=1;
	//sc1(t);
	create();
	while(t--)
	{
		
		for(int i=1;i<=10000;++i)
		{
			if(!sieve[i])
				steps[i]=0;
			else
				steps[i]=INT_MAX;
		}
		cin>>n>>k;
		for(int i=1;i<10001;++i)
		{
			if(!sieve[i])
				continue;
			for(int j=0;j<primes.size();++j)
			{
				if(primes[j]<i)
					continue;
				if((primes[j]-i)%k==0)
					steps[i]=min(steps[i],1LL*(primes[j]-i)/k);
			}
		}
		int A[n][n];
		for(int i=0;i<n;++i)
			for(int j=0;j<n;++j)
				cin>>A[i][j];
		ll ans=INT_MAX;
		int row=-1,col=-1;
		for(int i=1;i<n-1;++i)
		{
			for(int j=1;j<n-1;++j)
			{
				if(steps[A[i-1][j-1]]+steps[A[i][j]]+steps[A[i+1][j+1]]+steps[A[i+1][j-1]]+steps[A[i-1][j+1]]<=ans)
				{
					if(ans==steps[A[i-1][j-1]]+steps[A[i][j]]+steps[A[i+1][j+1]]+steps[A[i+1][j-1]]+steps[A[i-1][j+1]])
					{
						if(row==-1)
						{
							row=i;
							col=j;
						}
						else
						{
							if(row>i)
							{
								row=i;
								col=j;
							}
							else if(row==i && col>j)
							{
								col=j;
							}

						}
					}
					else
					{
						ans=steps[A[i-1][j-1]]+steps[A[i][j]]+steps[A[i+1][j+1]]+steps[A[i+1][j-1]]+steps[A[i-1][j+1]];
						row=i;
						col=j;
					}
				}
			}
		}
		if(ans==INT_MAX)
		{
			cout<<"no"<<endl;
			continue;
		}
		else
		{
			cout<<"yes"<<endl;
			cout<<ans<<endl;
			cout<<row+1<<" "<<col+1<<endl;
		}
	}
	return 0;
}