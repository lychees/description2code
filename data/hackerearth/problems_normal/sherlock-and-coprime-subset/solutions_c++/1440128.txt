//  main.cpp
//  Practice
//
//  Created by Tapan on 31/12/14.
//  Copyright (c) 2014 Tapan. All rights reserved.
//

#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sc(x) scanf("%c",&x)
#define sl(x) scanf("%I64d",&x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define maX(a,b) ((a)>(b)?a:b)
#define miN(a,b) ((a)<(b)?a:b)
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define fill(a,v) memset(a, v, sizeof a)
#define max_long_value 9223372036854775807
#define mod 1000000007
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
#define MAX 1010
#define pb push_back
ll modpow(ll base, ll exponent,ll modulus){
    if(base==0&&exponent==0)return 0;
    ll result = 1;
    while (exponent > 0){
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
    
}
inline void ReadInput(void){
}
int n;
int a[103],b[104];
int dp[1<<15][53];
int Smask[60];
int P[15]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47};
vector<vector<int> >fact(60);
int Sum[60];
void pre(){
    fact[2].push_back(0);
    for(int i=3;i<=51;i++){
        int m1=i;
        for(int j=0;j<=14;j++){
            if(m1==0)break;
            if(m1%P[j]==0){fact[i].pb(j);}
            while(m1%P[j]==0){
                m1/=P[j];
            }
        }
    }
}
void pre1(){
    for(int i=2;i<=51;i++){
        int sum=0;
        for(int j=0;j<fact[i].size();j++){
            sum+=(1<<fact[i][j]);
        }
        Smask[i]=sum;
    }
    }
inline void solve(void){
    int t;
    pre();
    pre1();
    cin>>t;
    while(t--){
        int n;
        si(n);
        int a[n+2];
   f(i,0,n)si(a[i]);
    fill(dp,0);
    for(int mask=0;mask<((1<<15));mask++){
        for(int i=1;i<=n;i++){
            int Num=a[i-1];
            if((mask & Smask[Num])==Smask[Num]){
                dp[mask][i]=maX(dp[mask ^Smask[Num]][i-1]+1,dp[mask][i-1]);
            }
            else {
                dp[mask][i]=dp[mask][i-1];
            }
        }
        }
        cout<<dp[(1<<15)-1][n]<<endl;
    }
    return;
}
int main(int argc, const char * argv[]){
    ReadInput();
    solve();
    return 0;
    
}