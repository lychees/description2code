#include<bits/stdc++.h>
using namespace std;
typedef struct subset
{
	int parent,rank;
}subset;
int find(subset s[],int i)
{
	if(s[i].parent!=i)
	{
		s[i].parent=find(s,s[i].parent);
	}
	return s[i].parent;
}
void Union(subset s[],int x,int y)
{
	int xroot=find(s,x);
	int yroot=find(s,y);
	if(s[xroot].rank>s[yroot].rank)
	{
		s[yroot].parent=xroot;
	}
	else if(s[yroot].rank>s[xroot].rank)
	{
		s[xroot].parent=yroot;
	}
	else
	{
		s[yroot].parent=xroot;
		s[xroot].rank++;
	}
}
int main()
{
	int t,i,count,n,e,si,d;
	cin>>t;
	while(t--)
	{
		cin>>n>>e;
		subset s[n];
	for(i=0;i<n;i++)
	{
		s[i].parent=i;
		s[i].rank=0;
	}
		
		for(i=0;i<e;i++)
		{
			cin>>si>>d;
			
        Union(s,si,d);
			
		}
		count=0;
		for(i=0;i<n;i++)
		{
			if(s[i].parent==i)
			count++;
		}
		cout<<count<<"\n";
	}
	return 0;
}