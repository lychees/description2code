#include <iostream>
using namespace std;
int dataArray[100005];
int length=0;

void insertValue(int data)
{
	length++;
	dataArray[length]=data;
	int pos=length;
	while(pos>1 && dataArray[pos/2]<dataArray[pos])
	{
		int temp=dataArray[pos/2]^dataArray[pos];
		dataArray[pos]=temp^dataArray[pos];
		dataArray[pos/2]=temp^dataArray[pos];
		pos/=2;
	}
}

void heapfy(int pos,int length)
{
	int left=2*pos;
	int right=2*pos+1;
	int largest=pos;
	if(dataArray[largest]<dataArray[left] && left<=length)
	{
		largest=left;
	}
	if(dataArray[largest]<dataArray[right] && right<=length)
	{
		largest=right;
	}
	
	if(largest!=pos)
	{
		int temp=dataArray[largest]^dataArray[pos];
		dataArray[largest]=temp^dataArray[largest];
		dataArray[pos]=temp^dataArray[largest];
		heapfy(largest,length);
	}
}

bool removeData(int data)
{
	bool result=false;
	for(int i=1;i<=length;i++)
	{
		if(dataArray[i]==data)
		{
			result=true;
			// cout<<"remove"<<dataArray[i]<<" "<<dataArray[length]<<" ";
			int temp=dataArray[i]^dataArray[length];
			dataArray[i]=temp^dataArray[i];
			dataArray[length]=temp^dataArray[i];
			length--;
			heapfy(i,length);
			break;
		}
	}
	
	return result;
}

int extractMax()
{
	if(length==0)
	{
	return -1;
	}
	else
	{
      return dataArray[1];
	}
}

int extractMin()
{
   int result=dataArray[length];	
   if(length==0)
	{
	return -1;
	}
	else
	{
		for(int i=length/2+1;i<=length;i++)
		{
			if(result>dataArray[i])
			{
				result=dataArray[i];
			}
		}
	return result;
	}
}

int main()
{
    int queryNum;
    cin>>queryNum;
    while(queryNum--)
    {
    	int type=0;
    	int data=0;
    	cin>>type;
    	
    	switch(type)
    	{
    	case 1:
    	{   cin>>data;
    		insertValue(data);
    		break;
    	}
    	
    	case 2:
    	  {
    	  	 cin>>data;
    	  	 if(!removeData(data))
    	  	 {
    	  	 	cout<<-1<<endl;
    	  	 }
    	  	 break;
    	  }
    	 case 3:
    	 {
    	 	int result=extractMax();
    	 	cout<<result<<endl;
    	 	break;
    	 }
    	 
    	 case 4:
    	 {
    	 	int result=extractMin();
    	 	// for(int k=1;k<=length;k++)
    	 	// {
    	 	// 	cout<<dataArray[k]<<" ";
    	 	// }
    	 	cout<<result<<endl;
    	 	break;
    	 }
    	}
    }
    return 0;
}
