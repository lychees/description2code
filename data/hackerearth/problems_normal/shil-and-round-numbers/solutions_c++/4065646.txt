#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <sstream>
#include <set>
#include <iomanip>
#include <list>
#include <stack>
#include <queue>
#include <bitset>
#include <numeric>
#include <functional>

#include <cstdio>
#include <cmath>
#include <climits>
#include <cstring>
#include <cctype>
#include <cstdlib>

using namespace std;

#define ll long long

const int maxx = 2e5 + 10;

int BIT[maxx];
ll arr[maxx];
int N, Q;

int isRound(ll val) {
    if (val < 0) return false;
    if (val == 0) return true;
    int p = val % 10;
    int r;
    while (val > 0) {
        r = val % 10;
        val /= 10;
    }
    
    return p == r;
}
void update(int pos, int val) {
    while (pos <= N) {
        BIT[pos] += val;
        pos += (pos & -pos);
    }
}

int query(int pos) {
    int sum = 0;
    while (pos > 0) {
        sum += BIT[pos];
        pos -= (pos & -pos);
    }
    return sum;
}

int main(){
#ifndef ONLINE_JUDGE
    const clock_t begin_time = clock();
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
#endif
    
    scanf("%d %d", &N, &Q);
    ll x = 0;
    
    for (int i = 1; i <= N; i++) {
        scanf("%lld", &x);
        arr[i] = x;
        update(i, isRound(x));
    }
    ll q, l, r;
    for (int i = 1; i <= Q; i++) {
        scanf("%lld %lld %lld", &q, &l, &r);
        
        if (q == 1) {
            printf("%d\n", query(r) - query(l - 1));
        } else {
            update(l, -isRound(arr[l]));
            arr[l] = r;
            update(l, isRound(arr[l]));
        }
    }
    
    

    
    
#ifndef ONLINE_JUDGE
    cout << "Time : ";
    cout << float( clock () - begin_time ) / CLOCKS_PER_SEC << endl;
#endif

    
    return 0;
}