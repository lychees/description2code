#include<bits/stdc++.h>
using namespace std;
int n;
const int MAXN = 16;
int POWER[MAXN];
long long dp[65570][140];
long long go(int mask, int sum) {
	int up[n+1];
	up[n]=0;
	int idx=0;
	for(int i=n-1;i>=0;i--) {
		if(POWER[i]&mask) idx++,up[i]=up[i+1]+1;
		else up[i]=up[i+1];
	}
	if(idx==n) return sum;
	if(dp[mask][sum]!=-1) return dp[mask][sum];
	long long ret=0;
	for(int i=0;i<n;i++) {
		if(i==idx) continue;
		if(!(POWER[i]&mask)) ret+=go(mask|POWER[i],sum+up[i+1]);
	}
	return dp[mask][sum]=ret;
}
int main() {
	POWER[0]=1;
	for(int i=1;i<16;i++) POWER[i]=POWER[i-1]<<1;
	int t;
	scanf("%d",&t);
	while(t--) {
		scanf("%d",&n);
		memset(dp,-1,sizeof(dp));
		printf("%lld\n",go(0,0));
	}
	return 0;
}