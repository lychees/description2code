#include<iostream>
#include<map>
#include<string>

using namespace std;

int maxInd(long long prev[3])
{
    int n;
    if(prev[0] >= prev[1] && prev[0] >= prev[2] )
        n = 0;
    else if(prev[1] >= prev[0] && prev[1] >= prev[2] )
        n = 1;
    else
        n = 2;

    return n;
}

int main()
{
    int T, i;
    cin>>T;
    for(i = 0; i<T; i++)
    {
        string in;
        unsigned long long j = 0, k = 0;
        int found[3] = {};
        long long prev[3] = {-1, -1, -1};
        cin>>in;
        prev[in[0] - 'a'] = 0;
        unsigned long long ct = in.size() + in.size() - 1;
        for(j = 0; j<in.size(); )
        {
            if(k == in.size())
                break;
            for(k = prev[maxInd(prev)]; k<in.size(); k++)
            {
                unsigned long long len = k-j+1;
                prev[in[k] - 'a'] = k;
                if(!found[in[k] - 'a'])
                {
                    found[in[k] - 'a'] = 1;
                    //len++;
                }
                if(found[0] + found[1] + found[2] != 3)
                {
                    if(len >= 3)
                    {
                        //ct = ct + ((len*(len+1))/2 - 3);
                        ct = ct + len -2;
                    }
                }
                else
                {
                    int n = -1;
                    if(prev[0] <= prev[1] && prev[0] <= prev[2] )
                        n = 0;
                    else if(prev[1] <= prev[0] && prev[1] <= prev[2] )
                        n = 1;
                    else
                        n = 2;

                    j = prev[n]+1;
//                  subtract = k - j;
                    found[n] = 0;
                    prev[n] = -1;
                    break;
                }
            }
        }
        cout<<ct<<'\n';
    }
}