#include <iostream>
#include <vector>

using namespace std;

int root(int array[], int elem) {
	while(array[elem] != elem) {
		//array[elem] = array[array[elem]];
		elem = array[elem];
	}
	return elem;
}

bool find(int array[],int a, int b) {
	return (root(array,a) == root(array,b));
}

void join(int array[],int child[],int size, int a, int b) {
	int c = root(array,a);
	int d = root(array,b);
	array[d] = c;
	child[c]+= child[d];
	child[d] = 0;
	//for(int i = 1; i < size; ++i)
	//	cout<<child[i]<<" ";
	//cout<<endl;
}

int main() {
	int n,k;
	cin >> n;
	int array[n+1];
	int childNodes[n+1];
	for(int i = 0; i < n + 1; ++i) {
		array[i] = i;
		childNodes[i] = 1;
	}
	cin >> k;
	while(k--) {
		int a, b;
		cin >> a >> b;
		if(!find(array,a,b))
			join(array,childNodes,n+1,a,b);
	}
	int count = 0;
	for(int i = 1; i < n + 1;++i) 
		if(childNodes[i] != 0)	
			++count;
	cout<<count<<endl;

}