from collections import deque

n, d = map(int, raw_input().split())

friends = {}


def bfs(friends, s):
    q = deque()
    q.append(s)
    visited[s] = True
    count = 1
    while len(q) != 0:
        p = q[0]
        q.popleft()
        for i in range(len(friends[p])):
            if not visited[friends[p][i]]:
                count += 1
                q.append(friends[p][i])
                visited[friends[p][i]] = True
    return count


for i in range(0, n+1):
    friends.update({i: []})

for i in range(0, d):
    x, y = map(int, raw_input().split())
    friends[x].append(y)

min_ = 10000

for i in range(1, n+1):
    visited = [0 for j in range(n+1)]
    min_ = min(min_, bfs(friends, i))

print min_
