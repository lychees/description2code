#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}
vs splitStr ( const string &t, char delim=' ' ) {
    vs patterns;
    size_t last=0;
    size_t start=t.find ( delim );

    while ( start!=string::npos ) {
        if ( start>last ) patterns.push_back ( t.substr ( last,start-last ) );
        last=start+1;
        start=t.find ( delim,last );
    }
    if ( last<t.length() )
        patterns.push_back ( t.substr ( last,t.length()-last ) );
    return patterns;
}
int main() {
    ios_base::sync_with_stdio ( false );
    while ( 1 ) {
        int n;
       if(!(cin>>n))break;
//         if ( !r ) return 0;
        string s;
        getline ( cin,s );
        getline ( cin,s );
        vector<string> y=splitStr ( s,' ' );

        vi p;
        rep ( i,y.size() ) p.push_back ( atoi ( y[i].c_str() ) );
        int lins=0;
        string res;
        vi played;
        bool f=0;
        for ( int x: p ) {
            while ( lins<x ) {
                played.push_back ( lins+1 );
                lins++;
                res+='C';
            }
            while ( played.back() >x ) {
                played.pop_back();
                res+='K';
            }
            if ( played.back() ==x ) {
                played.pop_back();
                res+='K';
            } else {
                f=1;
                break;
            }
        }
        if ( f ) cout<<-1<<endl;
        else cout<<res<<endl;
    }
}
