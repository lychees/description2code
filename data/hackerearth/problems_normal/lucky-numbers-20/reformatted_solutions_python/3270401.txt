import math
mod = 1000000007


def ans_of_last_set_bit(a, b):
    return ((int(math.pow(2, b)) - 1) %
            mod + (int(math.pow(2, a - 1)) * b) % mod) % mod


t = int(raw_input())
for i in range(t):
    n = int(raw_input())
    if n == 1 or n == 2:
        print "0"
    else:
        if math.log(n, 2) == int(math.log(n, 2)):
            n -= 1
        j, last, seclast, ans = 1, -1, -1, 0
        while n:
            if n & 1 == 1:
                seclast, last = last, j
            n >>= 1
            j += 1
        while seclast:
            ans, last, seclast = (
                ans + ans_of_last_set_bit(last, seclast)) % mod, last - 1, last - 2
        print ans
