#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int n;
int bit[100005];
ll left_lo[100005], left_hi[100005], right_lo[100005], right_hi[100005];
void update(int pos)
{
	while (pos <= n)
	{
		bit[pos]++;
		pos += pos&(-pos);
	}
}
int query(int pos)
{
	int res = 0;
	while (pos>0)
	{
		res += bit[pos];
		pos -= pos&(-pos);
	}
	//	printf("query %d is %d\n",pos,res);
	return res;
}
int a[100005];
int main()
{
	// cout << "Hello World!" << endl;
	//int n;
	int t;
	scanf("%d", &t);
	while (t--){
		scanf("%d", &n);
		int i;
		set<int> s;
		for (i = 1; i <= n; i++)
		{
			scanf("%d", &a[i]);
			s.insert(a[i]);
			bit[i] = 0;
		}
		unordered_map<int, int> ran;
		int st = 1;
		set<int>::iterator I;
		for (I = s.begin(); I != s.end(); I++)
			ran[*I] = st++;
		for (i = 1; i <= n; i++)a[i] = ran[a[i]];
		// hi = s.size();
		// printf("hi is %d\n",hi);
		int ty;
		scanf("%d", &ty);
		for (i = 1; i <= n + 2; i++){
			bit[i] = 0;
			left_lo[i] = left_hi[i] = right_lo[i] = right_hi[i] = 0;
		}
		for (i = n; i >= 1; i--)
		{
			right_lo[i] = query(a[i] - 1);
			right_hi[i] = query(n) - query(a[i]);
			//	printf("update %d\n",a[i]);
			update(a[i]);
		}
		for (i = 1; i <= n + 2; i++){
			bit[i] = 0;
		}
		for (i = 1; i <= n; i++)
		{
			left_lo[i] = query(a[i] - 1);
			left_hi[i] = query(n) - query(a[i]);
			//	printf("from left update %d\n",a[i]);
			update(a[i]);
		}
		ll first, second; // y1 < y2 > y3  and y1 > y2 < y3
		first = second = 0;
		//printf("need to count %d\n",n);
		for (i = 1; i <= n; i++){
			//	printf("%d has %lld %lld lo in left and right and %lld %lld hi in left and right\n",a[i],left_lo[i],right_lo[i],left_hi[i],right_hi[i]);
			first += left_lo[i] * right_lo[i];
			second += left_hi[i] * right_hi[i];
		}
		// 1 bole to Sarika  0 bole to Ananya
		// printf("triplets are %lld %lld\n",first,second);
		if (ty == 1)
		{
			ll tm;
			tm = first;
			first = second;
			second = tm;
			if (second > first)
			{
				printf("Sarika\n%lld\n", 2 * first + 1);
			}
			else {
				printf("Ananya\n%lld\n", 2 * second);
			}
		}
		else
		{
			if (first > second)
			{
				printf("Ananya\n%lld\n", 2 * second + 1);
			}
			else {
				printf("Sarika\n%lld\n", 2 * first);
			}
		}
	}
	return 0;
}
