/*	Karan Dhamele	    */
#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<stack>
#include<queue>
#include<map>
#include<set>

using namespace std;

/* General Declarations */

#define INF		1000000007
#define LL		long long int
#define SI(n)		scanf("%lld",&n);
#define SC(c)		scanf("%c",&c);
#define SS(s)		scanf("%s",s);
#define FOR(x,a,b)	for(LL x=a;x<b;x++)
#define REP(i,n)	for(LL i=0;i<n;i++)
#define MP		make_pair
#define PB		push_back


/* Container's */

#define	VI		vector<LL>
#define PLL             pair<LL,LL>  /* A Single Pair  */
#define VP		vector<PLL> /* Vector of Pairs */
#define VS		vector<string>
#define VVI		vector<VI>
#define VVS		vector<VS>

template<class T>inline T GCD(T a,T b){return b?GCD(b,a%b):a;}
template<class T> inline T LCM(T a,T b){if(a<0)return LCM(-a,b);if(b<0)return LCM(a,-b);return a*(b/GCD(a,b));}
template<class T>inline T POW1(T a,T b,T m){long long x=1,y=a;while(b > 0){if(b%2 == 1){x=(x*y);if(x>m) x%=m;}y = (y*y);if(y>m) y%=m;b /= 2;}return x;}
template<class T>inline T INV(T n,T m){return POW1(n,m-2,m);}
template<class T>inline T SUB(T a,T b,T m){return (a%m-b%m+m)%m;}
template<class T>inline T ADD(T a,T b,T m){return (a%m+b%m)%m;}
template<class T>inline T MUL(T a,T b,T m){return (a%m*b%m)%m;}
template<class T>inline T DIV(T a,T b,T m){return (a%m*(INV(b,m))%m)%m;}
int main()
{
	LL n;
	SI(n);
	VS a(n);
	LL sum=0;
	REP(i,n)
	{
		cin >> a[i];
		sum+=a[i].size();
	}
	LL fin_ans=INF;
	LL flg=0;
	sort(a.begin(),a.end());
	block:
	do{
		LL ans=0;
		//cout << ":::\n";
	/*	REP(i,a.size())
		{
			cout << a[i] << " ";
		}
		cout << endl;*/
		REP(i,a.size()-1)
		{
			LL ct=0;
			//cout << a[i] << " " << a[i+1] << endl;
			LL s1=a[i+1].size();
			/*for(LL j=a[i].size()-1;j>=0;j--)
			{
				
				if(a[i][j]!=a[i+1][ct])
				{
					break;
				}
				ct++;
				if(ct==a[i+1].size())
					break;
			}*/
			REP(j,a[i].size())
			{
				if(a[i].size()-j <= a[i+1].size())
				{
					
					if(a[i].substr(j)==a[i+1].substr(0,a[i].size()-j))
					{
						ct=a[i].size()-j;
						break;
					}
				}
			}
			ans+=ct;
		}
		if(sum-ans<fin_ans)
			fin_ans=sum-ans;

	}while(next_permutation(a.begin(),a.end()));
	cout << fin_ans << endl;
}
