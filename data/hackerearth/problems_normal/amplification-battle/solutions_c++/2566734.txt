#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:100000000")
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>
#include <cstring>
#include <set>
#include <stdio.h>
#include <vector>
#include <map>
#include <queue>
#include <fstream>
#include <ostream>
#include <time.h>
#include <memory.h>

#define ll long long
#define ld long double
#define mp make_pair
#define pii pair<int, int>
#define pi 3.141592653589793238462643383279

ll gcd(ll a, ll b) {
	if (b == 0)
		return a;
	else
		return gcd(b, a % b);
}

ll lcm(ll a, ll b) { return (((a*b) / gcd(a, b))); }

ll phi(ll n){
	ll result = n;
	for (ll i = 2; i*i <= n; i++) {
		if (n % i == 0) {
			while (n % i == 0) n /= i;
			result -= result / i;
		}
	}
	if (n > 1) result -= result / n;
	return result;
}

ll binpow(ll a, ll n, ll c) {
	ll res = 1;
	while (n) {
		if (n & 1)
			res *= a;
		res %= c;
		a *= a;
		a %= c;
		n >>= 1;
	}
	res = (res + c) % c;
	return res;
}
#define inf 1000000007

#define eps 0.0001
#define ls (v << 1)
#define rs ((v << 1)+1)

void nxi(int& n){
	bool min = 0; char c; n = 0;
	while ((c = getc(stdin)) && c <= 32);
	if (c == '-') min = 1; else n = c - 48;
	while ((c = getc(stdin)) && c>32) n = (n << 3) + (n << 1) + c - 48;
	if (min) n = -n;
}

void prl(int n){
	if (n == 0) { puts("0"); return; }
	if (n<0) { putchar('-'); n = -n; }
	static int s[10];
	int top = 0;
	while (n>0) s[top++] = n % 10, n /= 10;
	while (top--) putchar(s[top] + 48);
	puts("");
}

#define x1 first
#define y1 second
#define x0 privet
#define y0 pak
#define pll pair<ll, ll>
#define X first
#define Y second
#define vi vector<ll>
#define matrix vector<vi>
#define try freagoijf

#define rank ranggggg
#define in(n) scanf("%d",&(n));
#define in2(n,m) scanf("%d %d",&(n),&(m));
#define in3(n,m,k) scanf("%d %d %d",&(n),&(m),&(k));
using namespace std;

const int nmax = 200010;



int main()
{
	//srand(time(0));

	ios::sync_with_stdio(0);
	ll a, b, n;
	ll t;
	ll up, down, ans = 0;
	cin >> t;
	while (t--){
		cin >> a >> b >> n;
		ans = 0;
		up = b;
		down = a;
		while (up < n) {
			++ans;
			if (ans & 1) {
				down = down * b;
				if (log(up) + log(a)>log(n)) break;
				up = up * a;
			}
			else
			{
				down = down * a;
				if (log(up) + log(b)>log(n)) break;
				up = up * b;
			}
		}
		(ans % 2 == 1 ? puts("Bob") : puts("Adam"));

	}




	return 0;
}