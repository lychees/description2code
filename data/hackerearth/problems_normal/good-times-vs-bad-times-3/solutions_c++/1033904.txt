#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<string>
#include<cmath>
#include<utility>
#include<sstream>

#define pb push_back
#define mp make_pair
#define sz(a) ((int)((a).size()))
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define fv(a,b) for(__typeof(a.begin()) b = (a).begin(); b != (a).end(); ++b)
#define all(a)  a.begin(),a.end()

using namespace std;

typedef long long LL;
typedef vector <int> VI;
typedef pair< int ,int > PII;

int gcd(int a,int b)
{
	if(a<b)
		swap(a,b);
	if(b==0)
	return a;
	else
	return gcd(b,a%b);
}

int main()
{
	int t;
	cin>>t;
	int totg=0,totb=0;
	int pri[17]={2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59};
	// 24*60*60 = 86400
	int good[86400 + 5];
	int bad[86400 + 5];
	rep(i,86400)
	{
		int x=i;
		int s=x%60;
		x=x/60;
		int m=x%60;
		x=x/60;
		int h=x;
		bool f=true;
		for(int j=0;j<17 && f ;j++)
		{
			if(s%pri[j]==0 &&m%pri[j]==0 &&h%pri[j]==0 )
			{
				f=false;
				break;
			}
		}
		if(f)
			totg++;
		else
			totb++;
		good[i]=totg;
		bad[i]=totb;
	}
	while(t--)
	{
		int s,m,h;
		cin>>h>>m>>s;
		int num=h*60*60 + m*60 + s;
		int n1,n2;
		if(num==0)
		{
			n1=totb;
			n2=totg;
		}
		else
		{
			n1=totb-bad[num-1];
			n2=totg-good[num-1];
		}
		int gc=gcd(n1,n2);
		if(n1==0 || n2==0)
            gc=1;
		cout<<n1/gc<<':'<<n2/gc<<endl;
	}
	return 0;
}
