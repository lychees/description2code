#include <iostream>
#include <cstdio>
#include <cmath>
#include <map>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <deque>
#include <string>
#include <set>
#include <limits.h>
#include <iomanip>

#define inp(x) scanf("%d",&x)
#define inp_l(x) scanf("%lld",&x)
#define inp_d(x) scanf("%lf",&x)
#define MOD 1000000007
#define pb push_back
#define mp make_pair

using namespace std;

typedef long long int ll;
typedef vector <int> VI;
typedef vector <long long int> VLL;
typedef pair<int,int> PI;
typedef pair<ll,ll> PLL;

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(0);
	int t;
	cin >> t;
	while( t-- ) {
		int n, m, i, x, y, j, k;

		cin >> n >> m;
		
		vector <PI> coordinates(n + m);
		
		for(i = 0; i < n + m; i++) {
			cin >> x >> y;
			coordinates[i] = mp(x, y);
		}

		double dist[n + m][n + m];

		for(i = 0; i < n + m; i++) {
			for(j = 0; j <= i; j++) {
				if(i == j)
					dist[i][j] = 0.0;
				else {
					int x1 = coordinates[i].first, y1 = coordinates[i].second, x2 = coordinates[j].first, y2 = coordinates[j].second;
					dist[i][j] = dist[j][i] = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
				}
			}
		}

		for(k = n; k < n + m; k++) {
			for(i = 0; i < n + m; i++) {
				for(j = 0; j < n + m; j++) {
					if(i==j)
						continue;
					dist[i][j] = min(dist[i][j], max(dist[i][k], dist[k][j]));
				}
			}
		}
		
		double ans = 0.0;

		for(i = 0; i < n; i++) {
			for(j = n; j < n + m; j++) {
				ans = max(ans, dist[i][j]);
			}
		}
		char result[10000];
		printf("%.6f\n",ans);
		//cout << new string(result) << endl;
	}
	return 0;
}

