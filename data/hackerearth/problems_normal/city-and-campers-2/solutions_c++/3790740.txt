#include <bits/stdc++.h>
using namespace std;

int sz[100010],pr[100010];
multiset<int >st;

int FIND(int p){
	return pr[p]==p?p:pr[p]=FIND(pr[p]);
}
void uni(int a,int b){
	int u=FIND(a);
	int v=FIND(b);
	if(u!=v){
		pr[u]=v;
		
		st.erase(st.find(sz[u]));
		st.erase(st.find(sz[v]));
		sz[v]+=sz[u];
		st.insert(sz[v]);
	}
}
int main(){
	ios_base::sync_with_stdio(false);cin.tie(NULL);
	int n,q,a,b,Ans,mn;
	multiset<int>::iterator ll,l;
	multiset<int>::reverse_iterator r;
	cin>>n>>q;
	for(int i=1;i<=n;i++) {
		sz[i]=1;
		pr[i]=i;
		st.insert(1);
	}
	while(q--){
		cin>>a>>b;
		uni(a,b);
		
		l=st.begin();
		r=st.rbegin();
		if(*l==*r){
			cout<<0<<endl;
			continue;
		}
		Ans=abs(*r-*l);
		while(l!=(--st.end())){
			mn=abs((*l)-(*(++l)));
			Ans=min(Ans,mn);
			if(Ans==0) break;
		}
		cout<<Ans<<endl;
	}
	return 0;
}