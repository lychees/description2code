#include <bits/stdc++.h>
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define UP upper_bound
#define LB lower_bound
#define LL long long 
#define Pi 3.14159265358
#define si size()
#define en end()
#define be begin()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define ii set<int>::iterator
#define Tree int ind, int L, int R
#define Left 2*ind,L,(L+R)/2
#define Right 2*ind+1,(L+R)/2+1,R
using namespace std;
bool bol;
char type;
int tree[300001];
int n, m, k, i, j, q, t, l, r, a;
void update(Tree)
{
	 if(L>r || l>R)return;
	 if(L==R)
	  {
	   tree[ind]=bol;
	   return;	
	  }
	 update(Left);
	 update(Right);
	 tree[ind]=tree[2*ind]+tree[2*ind+1]; 
}
int get_ans(Tree)
{
	if(L>r || l>R)return 0;
	if(L>=l && R<=r)return tree[ind];
	return get_ans(Left)+get_ans(Right);	
}
main(){
	   cin>>t;
       while(t--)
        {
         memset(tree,0,sizeof(tree));	
         cin>>n;
	     for(i=1;i<=n;i++)
	      {
	       cin>>a;
	       l=i; r=i; bol=1;
	       for(j=2;j*j<=a;j++)
		     if(a%j==0)
			  {bol=0;break;}
		   if(a==1)bol=0;   
		   update(1,1,n);	  
		  }
		 cin>>q;
		 while(q--)
		  {
		   cin>>type;
		   if(type=='C')
		    { 	
		     scanf("%d%d",&i,&a);
			 l=i; r=i; bol=1;
			 for(j=2;j*j<=a;j++)
			   if(a%j==0)
			    {bol=0;break;}	
			 if(a==1)bol=0;   
			 update(1,1,n);   
			}	
		   else
		    {
		     scanf("%d%d",&l,&r);
			 cout<<get_ans(1,1,n)<<endl;	
		    }	
		  }    
	    }   
       }