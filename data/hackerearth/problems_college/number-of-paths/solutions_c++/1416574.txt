#include <bits/stdc++.h>
using namespace std ;
#define LL long long int
#define ft first
#define sd second
#define PII pair<int,int>
#define MAXN 1001
#define mp make_pair
#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)
#define sc(x) scanf("%d",&x)
#define pr(x) printf("%d\n",x)
#define pb push_back
#define MOD 1000000007

bool V[MAXN][MAXN] ;
int DP[MAXN][MAXN] , PATH[MAXN][MAXN];
int T , N , X , Y , Q ;


int solve(int N,int M){

    if(N <= 0 || M <= 0)
        return 0 ;
    int &ret = DP[N][M] ;
    if(ret != -1)
        return ret ;
    ret = 0 ;
    ret = max(solve(N,M-1),solve(N-1,M)) ;
    if(V[N][M])
        ret ++ ;
    return ret ;
}

int solve1(int N,int M,int K){

    int &ret = PATH[N][M] ;
    if(V[N][M]){
        K -- ;
    }
    if(N == 1 && M == 1)
        return (K == 0) ;
    if(N <= 0 || M <= 0)
        return 0 ;
    if(ret != -1)
        return ret ;
    ret = 0 ;
    if(DP[N-1][M] == K){
        ret = ret + solve1(N-1,M,K) ;
        ret %= MOD ;
    }
    if(DP[N][M-1] == K){
        ret = ret + solve1(N,M-1,K) ;
        ret %= MOD ;
    }
    return ret ;
}
int main(){

    sc(T) ;
    while(T--){
        sc(N) , sc(Q) ;

        for(int i=1;i<=N;i++)
            for(int j=1;j<=N;j++)
                V[i][j] = 0 , DP[i][j] = -1 , PATH[i][j] = -1;


        for(int i=0;i<Q;i++){
            sc(X) ; X ++ ;
            sc(Y) ; Y ++ ;
            V[X][Y] = 1 ;
        }

        if(solve(N,N) == Q){
     //       cout << "e" << endl ;
            pr(solve1(N,N,Q)) ;

        }else{
            pr(0) ;
        }
    }
    return 0 ;
}
