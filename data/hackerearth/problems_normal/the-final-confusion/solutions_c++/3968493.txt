#include<bits/stdc++.h>
using namespace std;
long ans;
long dp[33][33];
long solve(long d,long i)//d rem should be less than equal to i
{

    if(dp[d][i]>0)
        return dp[d][i];

    if(d==0 && i==0)
    {
        dp[0][0]=1;
        return 1;
    }
    if(d==0 && i>0)
    {
        int temp=i;
        while(temp!=0)
        {
            dp[0][temp]=1;
            temp--;
        }
        return 1;
    }
    if(d>i)
    {
        dp[d][i]=0;
        return 0;
    }
    if(d>0)
    dp[d][i]+=solve(d-1,i);
    if(d<i)
        dp[d][i]+=solve(d,i-1);
    return dp[d][i];
}
int main()
{
    long t;
    cin>>t;
    memset(dp,0,sizeof(dp));
    dp[30][30]=solve(30,30);
    while(t--)
    {
        ans=0;
        long n;
        cin>>n;
        cout<<dp[n][n]<<endl;
    }
}
