#include <bits/stdc++.h>
using namespace std;

const int mx = 62, mod = 1000000007;
int bit(long long n, int b) {
	return ((n >> b) & 1);
}

int dp[mx][10 * mx][2];

long long n;
int solve(int i, int carry, int a) {
	if((n >> i) == 0) return carry == 0 && a == 1;
	int &ret = dp[i][carry][a];
	if(ret != -1) return ret;
	
	ret = 0;
	for(int f = 0; f <= 1; ++f) for(int s = 0; s <= 1; ++s) for(int t = 0; t <= 1; ++t) {
		int b = (f + s + t + carry) % 2;
		int c = (f + s + t + carry) / 2;
		if(b != bit(n, i)) continue;
		ret += solve(i + 1, c, (f + s + t == 3) | a);
		if(ret >= mod) ret -= mod;
	}
	
	return ret;
}

int main()
{
    int t;
    scanf("%d", &t);
    while(t--) {
    	scanf("%lld", &n);
    	memset(dp, -1, sizeof(dp));
    	printf("%d\n", solve(0, 0, 0));
    }
    return 0;
}
