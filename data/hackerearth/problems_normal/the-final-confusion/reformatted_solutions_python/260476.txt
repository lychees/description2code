# -------------------------------------------------------------------------------

def combinations(f, h, dp_table):
    if dp_table[f][h] > 0:
        return dp_table[f][h]
    if f == 0:
        for j in range(len(dp_table)):
            dp_table[0][j] = 1
        return 1
    else:
        if h == 0:
            dp_table[f][0] = combinations(f-1, 1, dp_table)
            return dp_table[f][0]
        else:
            dp_table[f][h] = combinations(
                f-1, h+1, dp_table) + combinations(f, h-1, dp_table)
            return dp_table[f][h]


def main():
    tc = int(raw_input())
    while tc > 0:
        tc -= 1
        n = int(raw_input())
        if n > 1:
            dp_table = []
            for i in range(n+1):
                cols = []
                for j in range(n+1):
                    cols.append(0)
                dp_table.append(cols)
            # print dp_table
            ans = combinations(n, 0, dp_table)
            # print dp_table
        else:
            ans = 1

        print ans


if __name__ == '__main__':
    main()
