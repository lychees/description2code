#include<iostream>
using namespace std;
int n, p;
int wt[105], v[105];

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		cin >> n >> p;
		for (int i = 0; i < n; i++)
		{
			cin >> v[i] >> wt[i];
		}
		int d[n + 1][p + 1];
		for (int i = 0; i <= n; i++)
		{
			for (int j = 0; j <= p; j++)
			{
				if (i == 0 || j == 0)
				{
					d[i][j] = 0;
				}
				else if (wt[i - 1] <= j)
				{
					d[i][j] = max(d[i - 1][j], d[i - 1][j - wt[i - 1]] + v[i - 1]);

				}
				else
				{
					d[i][j] = d[i - 1][j];
				}
			}
		}
		int ans = p;
		int maxx = 0;
		for (int i = 0; i <= p; i++)
		{
			if (d[n][i] + (p - i)>maxx)
			{
				maxx = d[n][i] + (p - i);
				ans = i;
			}
		}
		cout << ans << " " << maxx << endl;
	}
}
