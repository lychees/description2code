#include <bits/stdc++.h>
using namespace std;
#define ll long long 
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define si(a)     scanf("%d", &a)
#define sl(a)     scanf("%lld", &a)
#define pi(a)     printf("%d", a)
#define pl(a)     printf("%lld", a)
#define pm(str)   printf("%s\n",str)
#define pn        printf("\n")

ll int digit[20];
ll int len;
ll int dp[20][200][1500];
int gcd(int a,int b)
{
    if(a%b==0)
        return b;
    else
        return gcd(b,a%b);
}
ll solver(int pos , int sum,int sqsum,int check)
{
    ll int endr,curr,ans=0;

    if(pos==-1 && sum==0)
        return 0;
    if(pos==-1)
        return __gcd(sum,sqsum)==1;

    if(!check && dp[pos][sum][sqsum]!=-1)
        return dp[pos][sum][sqsum];

    if(check==1)
        endr=digit[pos];
    else
        endr=9;

    for(curr=0;curr<=endr;curr++)
    {
        ans+=solver(pos-1,sum+curr,sqsum+curr*curr,check && curr==endr);
    }

    if(!check)
        dp[pos][sum][sqsum]=ans;

    return ans;

}

ll findout(ll num)
{
    ll x;
    len=0;
    while(num>0)
    {
        digit[len++]=num%10;
        num/=10;
    }
  
    return solver(len-1,0,0,1);
}
int main()
{
    ll int t,l,r,num,i,j,k;
    for(i=0;i<20;i++)
            for(j=0;j<200;j++)
                for(k=0;k<1500;k++)
                    dp[i][j][k]=-1;
   
    si(t);
	while(t--)
    {
        cin>>l>>r;
        cout<<findout(r)-findout(l-1)<<endl;
    }
}
