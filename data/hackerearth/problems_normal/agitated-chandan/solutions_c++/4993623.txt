#include<bits/stdc++.h>
using namespace std;
#define LL long long
#define S 1000005
#define W while
#define M 1000000007
#define str string
#define pi 3.14159265
LL mini=INT_MAX;
LL maxi=INT_MIN;
vector<pair<int,int> >v[1000001];
LL dist[1000001];
int n;
int bfs(int i)
{
	queue<int> q;
	q.push(i);
	for(int j=0;j<1000001;j++)
		dist[j]=0;
	int visited[1000000]={0};
	visited[i]=1;
	W(!q.empty())
	{
		int i=q.front();
		q.pop();
		for(int j=0;j<v[i].size();j++)
		{
		
			int k=v[i][j].first;
			int w=v[i][j].second;
			if(visited[k]==0)
			{
				visited[k]=1;
				dist[k]+=(dist[i]+w);
				q.push(k);
			}
		}
	}
	int maxi=dist[0];
	int k=0;
	for(int i=1;i<=n;i++)
	{
		if(dist[i]>maxi)
		{
			maxi=dist[i];
			 k=i;
		}
	}
	return k;
}
int main()
{
	int t;
	cin>>t;
	W(t--)
	{
		cin>>n;
		LL a;
		for(int i=0;i<n-1;i++)
		{
			LL b,w;
			cin>>a>>b>>w;
			v[b].push_back(make_pair(a,w));
			v[a].push_back(make_pair(b,w));
		}
		int r=bfs(1);
		int ans=bfs(r);
		int cost=-1;
		LL ma=dist[ans];
		if(ma <100) cost = 0;
		else if(ma>10000) cost = 10000;
		else if(ma>1000) cost = 1000; 
		else if(ma>100) cost = 100;
		cout<<cost<<" "<<dist[ans]<<endl;
		for(int i=0;i<=1000000;i++)
			v[i].clear();
	}		
	return 0;
}