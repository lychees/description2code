#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stdio.h>
#include <string.h>
#include <vector>
#define S(n) scanf("%d", &n)
#define Sll(n) scanf("%lld", &n)
#define Sl(n) scanf("%ld", &n)
#define ll long long
#define li long int
using namespace std;
struct node {
  ll x;
  ll y;
};
ll gcd(ll a, ll b) {
  return b == 0 ? a : a > b ? gcd(b, a % b) : gcd(a, b % a);
}
bool myfunc(struct node a, struct node b) {
  if (a.x == b.x) {
    return a.y < b.y;
  } else {
    return a.x < b.x;
  }
}
ll conv(string s, ll base) {
  int i;
  ll ans = 0;
  ll p = 1;
  for (i = s.length() - 1; i >= 0; i--) {
    if (s[i] >= '0' && s[i] <= '9') {
      if ((s[i] - '0') >= base) {
        return -1;
      } else {
        ans = ans + (s[i] - '0') * p;
        p = p * base;
      }
    } else {
      int t = s[i] - 'A';
      t = t + 10;
      if (t >= base) {
        return -1;
      } else {
        ans = ans + (t * p);
        p = p * base;
      }
    }
  }
  return ans;
}
int main() {
  ll n, sum;
  string a[100010];
  cin >> n;
  int i;
  for (i = 1; i <= n; i++) {
    cin >> a[i];
  }
  cin >> sum;

  int base;
  for (base = 2; base <= 16; base++) {
    ll s = 0;
    int fg = 0;
    for (i = 1; i <= n; i++) {
      ll t = conv(a[i], base);
      //		cout << t << endl;
      if (t == -1) {
        fg = 1;
        break;
      } else {
        s = s + t;
      }
    }
    if (fg != 1 && sum == s) {
      cout << base << endl;
      return 0;
    }
  }
  return 0;
}