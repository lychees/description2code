#include <iostream>
#include <queue>
using namespace std;
int dp[40][40];
char arr[40][40];
int visited[40][40];
struct node{
	int i,j;
};
int eval(int i, int j, int n)
{
	queue<struct node> q;
	struct node temp1;
	temp1.i=i;
	temp1.j=j;
	q.push(temp1);
	int count=0;
	while(!q.empty())
	{
		int len=q.size();
		count++;
		while(len--)
		{
			struct node te=q.front();
			q.pop();
			i=te.i;
			j=te.j;
			if(arr[i][j]=='E')
				return count;
			if(i<n-1 && arr[i+1][j]!='T' && visited[i+1][j]==0)
			{
				struct node temp;
				temp.i=i+1;
				temp.j=j;
				q.push(temp);	
				visited[i+1][j]=1;
			}
			if(j<n-1 && arr[i][j+1]!='T' && visited[i][j+1]==0)
			{
				struct node temp;
				temp.i=i;
				temp.j=j+1;
				q.push(temp);	
				visited[i][j+1]=1;
			}
			if(i>0 && arr[i-1][j]!='T'  && visited[i-1][j]==0)
			{
				struct node temp;
				temp.i=i-1;
				temp.j=j;
				q.push(temp);	
				visited[i-1][j]=1;
			}
			if(j>0 && arr[i][j-1]!='T' && visited[i][j-1]==0)
			{
				struct node temp;
				temp.i=i;
				temp.j=j-1;
				q.push(temp);	
				visited[i][j-1]=1;
			}
		}
	}
	return -1;
}
int main()
{
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
    	for(int j=0;j<n;j++)
    	{
    		cin>>arr[i][j];
    	}
    }
    int ans=0;
    for(int i=0;i<n;i++)
    {
    	for(int j=0;j<n;j++)
    	{
    		if(arr[i][j]=='S')
    			ans=eval(i,j,n);
    	}
    }
    cout<<ans-1<<endl;
    return 0;
}
