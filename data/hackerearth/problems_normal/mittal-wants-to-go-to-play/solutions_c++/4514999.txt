#include <bits/stdc++.h>
using namespace std; 

vector < pair<int , int > > v[10004];
int n , m;
int dist[10006];

set< pair <int , int > > s;
pair <int , int > p;

set <pair <int , int > > :: iterator it ; 


void djikstra()
{
	int i ; 
	dist[1]=0;
	
	s.insert(make_pair(0,1));
	
	int x, c;
	while(!s.empty())
	{
		
		it=s.begin();
		p=*it;
		c=p.first;
		x=p.second;
		s.erase(make_pair(c,x));
		
		for(i=0;i<v[x].size();i++)
		{
			
				if(dist[v[x][i].second] > dist[x] + v[x][i].first)
					{
						s.erase(make_pair(dist[v[x][i].second],v[x][i].second));
						dist[v[x][i].second] = dist[x] + v[x][i].first  ;
						s.insert(make_pair(dist[v[x][i].second],v[x][i].second));
					}	
		}
		
	}
	
	return ;
}

int main()
{
	int t ;
	int x, y , c ;
	int a , k ;
	int q ;
	cin >> t ;
	while(t--)
	{
	
	cin >> n >> m ;
	
	
	int i;
		
	for(i=1;i<=n;i++)
	{
		v[i].clear();
		dist[i]=1000000000;
	}
	
	i = m;
	
	while(i--)
	{
		cin >> x >> y >> c ; 
		
		v[x].push_back(make_pair(c,y));
		v[y].push_back(make_pair(c,x));		
	}

	
	djikstra();
	
	cin >> q ; 
	
	while(q--)
	{
		cin >> a >> k;
		
		cout << max(0 , k-2*dist[a]) << endl ;
			
	}
	
}
	
	return 0;
}

