/*   ARSHEYA RAJ   */

#include <iostream>
#include <bits/c++io.h>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>
#include <string.h>
#include <algorithm>
#include <iomanip>
#include <exception>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <iterator>
#include <climits>
 
#define ll long long int
#define MAX(a,b) (a>b)?a:b
#define MIN(a,b) (a>b)?b:a
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FOR_X(i,x,n) for(i=x;i<n;i++)
#define BACK(i,n) for(i=n;i>0;i--)
#define BACK_X(i,n,x) for(i=n;i>=x;i--)
#define fill(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define pp pair<int,int>
#define mod 1000000007
#define MAX_N 1000005
#define MAXVAL 100000000
#define MINVAL -100000000

template< class T > T sq(T &x) { return x * x; }
template< class T > T abs(T &n) { return (n < 0 ? -n : n); }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T &a, T &b, T &c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }

const double EPS = 1e-9;
const int INF = 0x3f3f3f3f;

using namespace std;

int main(){
	ll t,r,g,b;
	ll redcnt=0,greencnt=0,bluecnt=0;
	ll R=0,G=0,B=0;
	scanf("%lld %lld %lld %lld",&t,&r,&g,&b);
	ll red=0;
	ll green=0;
	ll blue=0;
	ll yellow=0;
	ll cyan=0;
	ll magenta=0;
	ll white=0;
	ll black=0;
	while(t--){
		redcnt++;
		greencnt++;
		bluecnt++;
		if(R==1 && G==0 && B==0){
			red++;
		}
		else if(R==0 && G==1 && B==0){
			green++;
		}
		else if(R==0 && G==0 && B==1){
			blue++;
		}
		else if(R==1 && G==1 && B==0){
			yellow++;
		}
		else if(R==0 && G==1 && B==1){
			cyan++;
		}
		else if(R==1 && G==0 && B==1){
			magenta++;
		}
		else if(R==1 && G==1 && B==1){
			white++;
		}
		else if(R==0 && G==0 && B==0){
			black++;
		}
		if(redcnt==r){
			if(R==0){
				R=1;
			}
			else{
				R=0;
			}
			redcnt=0;
		}
		if(greencnt==g){
			if(G==0){
				G=1;
			}
			else{
				G=0;
			}
			greencnt=0;
		}
		if(bluecnt==b){
			if(B==0){
				B=1;
			}
			else{
				B=0;
			}
			bluecnt=0;
		}
	}
	printf("%lld %lld %lld %lld %lld %lld %lld %lld\n",red,green,blue,yellow,cyan,magenta,white,black);
return 0;
}