#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long int
#define pb push_back
#define mk make_pair
#define max 200002
ll power(ll a, ll b) {
ll x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>mod) x%=mod;
        }
        y = (y*y);
        if(y>mod) y%=mod;
        b /= 2;
    }
    return x;
}
ll tree[max];
 
ll read(ll idx) 
{
	ll sum = 0;
	while (idx > 0) {
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
void update(ll idx ,ll val) 
{
	while (idx <= max) {
		tree[idx] += val;
		idx += (idx & -idx);
	}
}
int main()
{
	int n,q,i;
	ll l,r;
	scanf("%d%d",&n,&q);
	ll a[n+2];
	for(i = 1; i <= n; i++) {
		scanf("%Ld",&a[i]);
		if(a[i] < 0) {
			a[i] = 0;
			continue;
		}
		vector<ll>x;
		while(a[i]) {
			x.push_back(a[i]%10);
			a[i] /= 10;
		}
		if(x[0] == x[x.size()-1]) {
			a[i] = 1LL;
		}
		if(a[i]) {
			update(i,a[i]);
		}
	}
	while(q--) {
		scanf("%d%Ld%Ld",&i,&l,&r);
		if(i == 1) {
			printf("%Ld\n",read(r)-read(l-1));
		}
		else {
			vector<ll>x;
			if(r < 0) {
				if(a[l]) {
					update(l,-1);
					a[l] = 0;
				}
				continue;
			}
			while(r) {
				x.push_back(r%10);
				r /= 10;
			}
			if(x[0] == x[x.size()-1]) {
				if(!a[l]) {
					update(l,1);
					a[l] = 1;
				}
			}
			else {
				if(a[l]) {
					update(l,-1);
					a[l] = 0;
				}
			}
		}
	}
	return 0;
}
