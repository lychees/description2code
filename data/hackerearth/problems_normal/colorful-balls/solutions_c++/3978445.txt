#include <iostream>
#include<bits/stdc++.h>

using namespace std;

#define MAX 11
#define ll long long

ll dp[MAX][MAX][MAX][MAX][4];

ll ways(int p, int q, int r, int s, int last)
{
    if (p<0 || q<0 || r<0 || s<0)
        return 0;
        
    if (p==1 && q==0 && r==0 && s==0 && last==0)
        return 1;
    if (p==0 && q==1 && r==0 && s==0 && last==1)
        return 1;
    if (p==0 && q==0 && r==1 && s==0 && last==2)
        return 1;
    if (p==0 && q==0 && r==0 && s==1 && last==3)
        return 1;

    if (dp[p][q][r][s][last] != -1)
        return dp[p][q][r][s][last];
        
    if (last==0)
       dp[p][q][r][s][last] = ways(p-1,q,r,s,1) + ways(p-1,q,r,s,2) + ways(p-1,q,r,s,3);
    else if (last==1)
       dp[p][q][r][s][last] = ways(p,q-1,r,s,0) + ways(p,q-1,r,s,2) + ways(p,q-1,r,s,3);
    else if (last==2)
       dp[p][q][r][s][last] = ways(p,q,r-1,s,0) + ways(p,q,r-1,s,1) + ways(p,q,r-1,s,3);
    else
       dp[p][q][r][s][last] = ways(p,q,r,s-1,0) + ways(p,q,r,s-1,1) + ways(p,q,r,s-1,2);
 
    return dp[p][q][r][s][last];
}

ll countUtil(int p, int q, int r, int s)
{
   memset(dp, -1, sizeof(dp));
   return ways(p, q, r, s, 0) + ways(p, q, r, s, 1) + ways(p, q, r, s, 2) + ways(p, q, r, s, 3);
}

int main()
{
	int p, q, r, s;
	cin >> p >> q >> r >> s;
	if (p == 0 && q == 0 && r == 0 && s == 0)
		cout << 1 << endl;
	else
    	cout << countUtil(p, q, r, s) << endl;
    return 0;
}
