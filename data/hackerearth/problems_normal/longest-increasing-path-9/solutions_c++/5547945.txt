#include <bits/stdc++.h>
using namespace std;
int a[100][100];
int dp[100][100];
int dfsutil(int x,int y,int n,int m){
	if(dp[x][y]!=-1){
		return dp[x][y];
	}
	int ans=1;
	if(x+1<n && a[x+1][y]>a[x][y]){
		ans=max(ans,1+dfsutil(x+1,y,n,m));
	}
	if(y+1<m && a[x][y+1]>a[x][y]){
		ans=max(ans,1+dfsutil(x,y+1,n,m));
	}
	return dp[x][y]=ans;
}
void dfs(int n,int m){
	memset(dp,-1,sizeof(dp));
	cout<<dfsutil(0,0,n,m)<<endl;
}
int main() {
	int t;
	cin>>t;
	while(t--){
		int n,m;
		cin>>n>>m;
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				cin>>a[i][j];
			}
		}
		dfs(n,m);
	}
	return 0;
}