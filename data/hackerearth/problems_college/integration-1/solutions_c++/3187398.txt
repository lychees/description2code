#include<bits/stdc++.h>
using namespace std;
typedef long long int LL;
#define pb push_back
#define mp make_pair
#define f first
#define sc second
#define pii pair<int,int>
#define M 1000000007
#define inf (int)(2e+9)
#define all(o) (o).begin(), (o).end()
/*#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;*/
int gcd(int a, int b) { return (b == 0 ? a : gcd(b, a % b)); }
int lcm(int a, int b) { return (a * (b / gcd(a, b))); }
LL max(LL a,LL b,LL c){return max(a,max(b,c));}
inline LL power(LL x,LL y)
{
    LL ans=1;
    while(y>0){
        if(y&1)
            ans=(ans*x)%M;
        x=(x*x)%M;
        y/=2;
    }
    return ans;
}
inline int read()
{
	int ret = 0,temp=1;
	int c = getchar_unlocked();
	while(c<'0' || c>'9'){
		c = getchar_unlocked();
	}
	while(c>='0' && c<='9')
	{
		ret = (ret<<3) + (ret<<1) + c - '0';
		c = getchar_unlocked();
	}
        return ret;
}
int main()
{
	int t;
	scanf("%d",&t);
	for(int tt=1;tt<=t;tt++){
		printf("Case #%d: ",tt);
		LL n,p,u,r,s;
		scanf("%lld %lld %lld %lld %lld",&n,&p,&u,&r,&s);
		LL ans=p;
		LL tp1=(u-p)/r;
		tp1=min(tp1,n);
		ans+=r*tp1;
		n-=tp1;
		LL l=(r*s)/__gcd(r,s);
		if(ans-l>=0){
		LL k=l/r+l/s;
		n%=k;
		}
			while(ans-s>=0 && n>0){
				ans-=s;
				n-=1;
				if(n==0) break;
				while(ans+r<=u){
				ans+=r;
				n-=1;
				if(n==0) break;
				}
			}
		printf("%lld\n",ans);

	}
	return 0;
}
