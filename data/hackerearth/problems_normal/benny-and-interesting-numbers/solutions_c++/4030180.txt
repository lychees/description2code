#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define sc1ll(x) scanf("%lld",&x)
#define sc2ll(x,y) scanf("%lld%lld",&x,&y)
#define sc3ll(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
vector<ll> sieve(100001,1);
vector<ll> prime_arr;
#define pc(x) putchar_unlocked(x)
inline void writeInt(ll n)
{
        ll N = n, rev, count = 0;
        rev = N;
        if (N == 0) { pc('0'); pc('\n'); return ;}
        while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
        rev = 0;
        while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
        while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
        while (count--) pc('0');
        pc('\n');
}
void sieve_calc()
{
    sieve[0]=0,sieve[1]=0;
    prime_arr.push_back(2);
    for(ll i=4;i<=100000;i+=2)
        sieve[i]=0;
    for(ll i=3;i<=100000;i=i+2)
    {
        if(sieve[i]==1)
        {
            prime_arr.push_back(i);
            for(ll j=i+i;j<=100000;j+=i)
                sieve[j]=0;
        }
    }
}
bool isprime(ll num)
{
    if(num==1)
        return false;
    for(ll i = 2 ; i*i <=num ; i++)
    {
        if(num%i == 0)
            return false;
    }
    return true;
}
int main()
{
    sieve_calc();
    ll total,k,temp,j,fact,test,a,b,num,cnt,second_num;
    ll srt;
    sc1ll(test);
    while(test--)
    {
        sc1ll(num);
        if(num==1)
            cout<<"Yes\n";
        else if(isprime(num)==true)
            cout<<"Yes\n";
        else
        {
            bool flag=true;
            k=0,temp=num,total=1;
            cnt=1;
            for(j=prime_arr[k];( (k<prime_arr.size()) && (j*j<=temp) );j=prime_arr[++k] )//it calculates the number of divisors efficiently
            {
                if(temp%j==0)
                {
                    cnt=0;
                    while((temp%j)==0)
                    {
                        temp=temp/j;
                        cnt+=1;
                    }
                    if(cnt>1)
                    {
                        flag=false;
                        break;
                    }
                }
            }
            if(flag==false)
                printf("No\n");
            else
                printf("Yes\n");
        }
    }
}


