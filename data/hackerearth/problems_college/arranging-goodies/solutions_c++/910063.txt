#include <string>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <iostream>
#include <sstream>
#include <cstddef>
#include <algorithm>
#include <utility>
#include <iterator>
#include <numeric>
#include <list>
#include <complex>
#include <cstdio>
#include <climits>
#include <iostream>
#include <fstream>


using namespace std;

typedef vector<int> vi;
typedef vector<string> vs;
typedef long long ll;
typedef complex<double> pnt;
typedef pair<int, int> pii;

#define RA(x) (x).begin(), (x).end()
#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)
#define SZ(x) ((int) (x).size())



struct compare
{
    int M;

    compare(int M = 0) : M(M) {}

    bool operator()(int a, int b) const
    {
        return abs(M + 1 - 2 * a) < abs(M + 1 - 2 * b);
    }
};


int main(int argc, const char **argv)
{

    int N, M;
    cin >> N >> M;
    vi order(M);
    for (int i = 0; i < M; i++)
        order[i] = i + 1;
    stable_sort(order.begin(), order.end(), compare(M));
    for (int i = 0; i < N; i++)
        cout << order[i % M] << '\n';

    return 0;
}