/* 
 * File:   main.cpp
 * Author: vineet
 *
 * Created on 11 March, 2015, 11:29 AM
 */

#include <cstdlib>
#include<iostream>
#include<queue>

using namespace std;

/*
 * 
 */
bool check(int x){
    if(x>=2 && x<=1000000)
        return true;
    return false;
}
int main() {
    
    int t,source,destination,add,mul,div,sub;
    cin>>t;
    while (t--) {
        queue <int> myqueue;
        bool flag=false;
        int distance[1000001]={0},visited[1000001]={0};
        cin>>source>>destination;
        cin>>mul>>div>>add>>sub;
        myqueue.push(source);
        visited[source]=1;
        while(!myqueue.empty()){
            if(myqueue.front()==destination){
                cout<<distance[destination]<<endl;
                flag=true;
                break;
            }
            if(check(mul*myqueue.front()) && visited[mul*myqueue.front()]==0){
                myqueue.push(mul*myqueue.front());
                visited[mul*myqueue.front()]=1;
                distance[mul*myqueue.front()]=distance[myqueue.front()]+1;
            }
            if(check(add+myqueue.front()) && visited[add+myqueue.front()]==0){
                myqueue.push(add+myqueue.front());
                visited[add+myqueue.front()]=1;
                distance[add+myqueue.front()]=distance[myqueue.front()]+1;
            }
            if(check(myqueue.front()-sub) && visited[myqueue.front()-sub]==0){
                myqueue.push(myqueue.front()-sub);
                visited[myqueue.front()-sub]=1;
                distance[myqueue.front()-sub]=distance[myqueue.front()]+1;
            }
            if(check(myqueue.front()/div) && visited[myqueue.front()/div]==0){
                myqueue.push(myqueue.front()/div);
                visited[myqueue.front()/div]=1;
                distance[myqueue.front()/div]=distance[myqueue.front()]+1;
            }
            myqueue.pop();
        }
        if(!flag)
            cout<<"-1"<<endl;
    }
    return 0;
}

