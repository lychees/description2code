#include <iostream>
#include <cstdio>
using namespace std;

long long int max(long long int a,long long int b)
{
	return((a>b)?a:b);
}

long long int knapsack(long long int n,long long int wt[],long long int v[],long long int W)
{
	long long int dp[n+1][W+1],i,w;
	for(i=0;i<=n;i++)
	{
		for(w=0;w<=W;w++)
		{
			if(i==0 || w==0)
				dp[i][w]=0;
			else if(wt[i-1]<=w)
				dp[i][w]=max(dp[i-1][w],dp[i-1][w-wt[i-1]]+v[i-1]);
			else
				dp[i][w]=dp[i-1][w];
		//	printf("i%lld  w%lld  d%lld\t",i,w,dp[i][w]);
		}
	//	printf("\n");
	}			
/*	for(i=0;i<=n;i++)
	{
		for(w=0;w<=W;w++)
		{
			printf("%lld\t",dp[i][w]);
		}
		printf("\n");
	}*/ 
	return dp[n][W];
}

int main()
{
    long long int n,t,wt[1002],v[1002],i,W;
    for(scanf("%lld",&t);t;t--)
    {
        scanf("%lld",&n);
        scanf("%lld",&W);
        for(i=0;i<n;i++)
            scanf("%lld",&wt[i]);
        for(i=0;i<n;i++)
            scanf("%lld",&v[i]);
        printf("%lld\n",knapsack(n,wt,v,W));
    }
    return 0;
}

