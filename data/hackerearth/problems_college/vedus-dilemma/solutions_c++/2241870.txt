#include<bits/stdc++.h>
using namespace std;
int gcd(int a,int b){
	if(b==0)
	return a;
	return gcd(b,a%b);
}
int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		vector<int> A(n);
		int i;
		
		for(i=0;i<n;i++)
		cin>>A[i];
		
		int p,q;
		cin>>p>>q;
		sort(A.begin(),A.end());
		vector <int> :: iterator r = A.begin();
	/*	while(r!=A.end()){
			cout<<*r<<endl;
			r++;
		}*/
		//r = A.begin();
		//r =r - 1;
		r= lower_bound(A.begin(),A.end(),p);
		if(*r!=p)
		r = r - 1;
		//cout<<*(r)<<endl;
		//r = r - 1;
		vector <int> :: iterator s = A.begin();
		s = upper_bound(A.begin(),A.end(),p);
		
		//cout<<*s<<endl;
		int count=0;
		vector <int> res;
		while(s!=A.end() && r!=A.begin()-1){
			if(abs(*s - p)< abs(*r - p)){
				if(gcd(*s,p)!=1)
				{
					res.push_back(*s);
					count++;
				}
				s++;
			}
			else{
				if(gcd(*r,p)!=1)
				{
					res.push_back(*r);
					count++;
				}
			
				r = r - 1;
			}
			if(count==q)
			break;
		}
		

		if(count!=q){
			if(s==A.end()){
				
				while(r!=A.begin() - 1 && count!=q){
				//	cout<<"hi"<<endl;
					if(gcd(*r,p)!=1){
						res.push_back(*r);
						count++;
						
					}
					r = r- 1;
				}
			}
			
			else if(r==A.begin() - 1){
				while(s!=A.end() && count!=q){
					if(gcd(*s,p)!=1){
						res.push_back(*s);
						count++;
						//r = r- 1;
					}
					s++;
				}
			}
		}
		if(count!=q){
			cout<<"-1"<<endl;
		}
		else{
			sort(res.begin(),res.end());
		vector <int> :: iterator z = res.begin();
		while(z!=res.end()){
			cout<<*z<<" ";
			z++;
		}
		cout<<endl;
	}
		}
		
	return 0;
}