//!!!!!!!!!	NEVER GIVE UP !!!!! NEVER !!!!!!!! 
#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <utility>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <queue>
#include <sstream>
#include <iomanip>
#include <limits>
using namespace std;
//cout << fixed << setprecision(4);
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
//int X ,Y ;
int Dp[1002][1002][2];
const int MOD = 179424673 ;
int fun(int p,int q,int x,int y)
{
  Dp[0][0][1] = 1 ;
  Dp[0][0][0] = 1 ;

  for(int i = 0;i<=p;i++)
  {
    for(int j = 0 ;j<=q;j++)
    {
      for(int k = 1 ;k<=i&&k<=x;k++)
        Dp[i][j][1] = ( Dp[i][j][1] + Dp[i-k][j][0])%MOD;
      for(int k = 1;k<=j&&k<=y;k++)
        Dp[i][j][0] = (Dp[i][j][0] + Dp[i][j-k][1])%MOD;
    }
  }
return (Dp[p][q][1]%MOD + Dp[p][q][0]%MOD)%MOD ;   
}
/*ll fun(int p,int q,int x ,int y)
{ ll ans = 0 ; 
	if(p==0 && q==0)
	    return 1 ;
	if(p<0)
	  return 0 ;
	if(q<0)
	  return 0 ;
	if(Dp[p][q][x][y] != -1)
	 	return Dp[p][q][x][y];
	
    if(p!=0)
      {
      	for(int i = 1 ;i<=x;i++)
      	 {int t = Y ; 
      	 	ans = (ans + fun(p-i,q,0,t))%MOD;      	 
      	 }
      }
    if(q!=0)
      {
      	for(int i =1;i<=y;i++)
      	  { int t = X; 
      	  	ans = (ans + fun(p,q-i,t,0) )%MOD;
      	  }
      }
   return Dp[p][q][x][y] = ans%MOD ;
}
*/   
int main()
{ 
    #ifdef _WIN32 
     freopen("input.txt", "r", stdin);
    #endif // LOCAL_USER
 geti(t);
 while(t--)
 {int p,q,x,y;
 	scanf("%d %d %d %d",&p,&q,&x,&y);
 	mem(Dp,0);
 	cout<<fun(p,q,x,y)%MOD<<"\n";
 }


return 0;
}