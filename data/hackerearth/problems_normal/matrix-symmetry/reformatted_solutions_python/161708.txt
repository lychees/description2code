"""
From HackerEarth February Easy Challenge

http://www.hackerearth.com/feb-easy-challenge-14/algorithm/matrix-symmetry/
"""

import sys


def get_col(m, c):
    return [m[x][c] for x in xrange(len(m))]


def get_row(m, r):
    return m[r]


def is_vertical(m):
    n = len(m)
    for col in xrange(n/2):
        if get_col(m, col) != get_col(m, n-1-col):
            return False
    return True


def is_horizontal(m):
    n = len(m)
    for row in xrange(n/2):
        if get_row(m, row) != get_row(m, n-1-row):
            return False
    return True


def check_symmetry(m):
    vert = is_vertical(m)
    horz = is_horizontal(m)
    if vert and horz:
        return "BOTH"
    elif vert:
        return "VERTICAL"
    elif horz:
        return "HORIZONTAL"
    else:
        return "NO"


def load_matrix(fd):
    m = []
    n = int(fd.readline().strip())
    for i in xrange(n):
        m.append(list(fd.readline().strip()))
    return m


def load_tests(fd):
    t = int(fd.readline().strip())
    for i in xrange(t):
        m = load_matrix(fd)
        print check_symmetry(m)


if __name__ == '__main__':
    if len(sys.argv) > 1:
        input = open(sys.argv[1], "r")
    else:
        input = sys.stdin

    load_tests(input)
