    #include <bits/stdc++.h>

    using namespace std;

    int bit[15][100015];
    long long brr[100015];

    int distinct_count(long long x)
    {
        int a[10]={0};
        while(x>0){
            a[x%10]++;
            x=x/10;
        }
        int ret=0;
        for(int i=0;i<10;i++){
            if(a[i])
            ret++;
        }
        return ret;
    }
    void update(int dig,int idx,int inc)
    {
        while(idx<=100005){
            bit[dig][idx]+=inc;
            idx+=(idx&(-idx));
        }
    }
    int query(int dig,int idx)
    {
        int ret=0;
        while(idx){
            ret+=bit[dig][idx];
            idx-=(idx&(-idx));
        }
        return ret;
    }
    int main()
    {
        int n,i;
        cin>>n;
        for(i=1;i<=n;i++){
            cin>>brr[i];
            int x=distinct_count(brr[i]);
            update(x,i,1);
        }
        int ty,q,c,l,r,u;
        int s;
        long long v;
        cin>>q;
        while(q--){
            cin>>s;
            if(s==0){
                cin>>u>>v;
                int x=distinct_count(brr[u]);
                brr[u]+=v;
                int x1=distinct_count(brr[u]);
                if(x==x1)
                continue;
                update(x,u,-1);
                update(x1,u,1);
                continue;
            }

            if(s==1){
                cin>>u>>v;
                int x=distinct_count(brr[u]);
                brr[u]=v;
                int x1=distinct_count(brr[u]);
                if(x==x1)
                continue;
                update(x,u,-1);
                update(x1,u,1);
                continue;
            }
            if(s==2){
                int cc;
                cin>>u>>v >> cc;
                int ress=query(cc,v)-query(cc,u-1);
                printf("%d\n",ress);
            }

    }
    return 0;
}
