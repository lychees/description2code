#include<bits/stdc++.h>
using namespace std;

#define forn(i, n)  for(int i = 0;i<n;i++)
#define for1(i, n)  for(int i = 1;i<=n;i++)
#define FORE(it, u)  for(__typeof(u).begin() it = (u).begin(); it!= (u).end(); it ++)
const int N = 1005;
const int MOD = 1e9 + 7;
long long f[N * N];///tinh giai thua
void cal_frac()
{
    f[0] = 1LL;
    for1(i, N * N - 1) f[i] = (1LL * f[i - 1] * i) % MOD;
}
int a[N][N];
bool col[N][N];
struct Point
{
    int x, y;
    Point(){x = y = 0;}
    Point(int _x,int _y)
    {
        x = _x;
        y = _y;
    }
    bool outside(int n, int m)
    {
        return x < 1 || x > n || y < 1 || y > m;
    }
};
int dx[8] = {-2, -2, -1, -1, 1, 1, 2, 2};
int dy[8] = {1, -1,   2, -2, 2, -2, 1,-1};

int n, m;

int main()
{
   // freopen("bfs.inp","r",stdin);
    cal_frac();
    int test;
    scanf("%d", &test);
    while(test --)
    {
        int horses;
        scanf("%d %d %d", &n, &m, &horses);
        queue<Point> q;
        vector<int> scc;
        memset(a, 0, sizeof a);
        memset(col, false, sizeof col);

        for1(i, horses)
        {
            int x, y;
            scanf("%d %d", &x, &y);
            a[x][y] = 1;
        }
        for1(i, n) for1(j, m)
        {
            if(a[i][j] == 0 || col[i][j] == true) continue;
            q.push({i, j});
            col[i][j] = true;
            int x = 0;
            while(!q.empty())
            {
                Point cur = q.front(); q.pop();
                x ++;///cu xoa di 1 nut thi tang thanh phan lien thong them 1
                forn(i, 8)
                {
                     int xx = cur.x + dx[i];
                     int yy = cur.y + dy[i];
                     Point go = Point(xx, yy);
                     if(go.outside(n, m)) continue;
                     if(a[xx][yy] == 0 || col[xx][yy] == true) continue;
                     col[xx][yy] = true;
                     q.push(go);
                }
            }
            scc.push_back(x);
           // cout<< "x " << x << endl;
        }
    long long ans = 1;
    FORE(it, scc)
    {
        ans = (1LL * f[*it] * ans )%MOD;
    }
    printf("%lld\n", ans);
    }
}


