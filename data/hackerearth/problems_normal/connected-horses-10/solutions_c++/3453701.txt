#include <iostream>
#include <bits/stdc++.h>
using namespace std;
 long long mod = 1e9 + 7 ;
 long long  fact[1000005];
	int t ,n,m,x,y,g,a[1000][1000];
	
void calc_fac()
{
  fact[0] = 1;
  for (int i = 1; i <= 1000000; i++)
    fact[i] = (i * fact[i-1]) % mod;
}

void dfs(int x, int y ,int &temp)
{
	
	if(x<0 || y<0 || x>n-1 || y>m-1 || a[x][y]!=1)
	return;
	
	temp++;
	
	a[x][y]= 2;
	
	dfs(x+2 ,y+1,temp);
	dfs(x+2,y-1,temp);
		dfs(x-2 ,y+1,temp);
	dfs(x-2,y-1,temp);
		dfs(x+1,y+2,temp);
	dfs(x-1,y+2,temp);
		dfs(x+1,y-2,temp);
	dfs(x-1,y-2,temp);
	
	return ;
}

int main()
{
calc_fac();
	cin>>t;
	while(t--)
	{
	long long ans =1 ;
		cin>>n>>m>>g;
		  assert(1<=n && n<=1000);
    assert(1<=m && m<=1000);
    assert(1<=g && g<=n*m);
		for(int i=0 ;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				a[i][j]=0;
			}
		}
		
		while(g--)
		{
			cin>>x>>y ;
			a[x-1][y-1]=1;
			
		}
		
		for(int i=0 ;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				if(a[i][j]==1)
				{
				 int temp=0;
					dfs(i,j,temp);
					ans= (ans*fact[temp])%(mod);
				}
			}
		}
	cout<<ans<<endl;	
		
	}
	
	return 0;
}











/*#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct node
{
	int first,second ;
};

int fact (int x)
{
	if(x==0 || x==1)
	return 1 ;
	
	return x * fact(x-1);
}
int main()
{
   int t ,n,m,x,y,g ,total=1;
   vector<node> v;
   cin>>t ;
   while(t--)
   {
   	int yes=0 ;
   	v.clear();
   	cin>>n>>m>>g ;
   	while(g--)
   	{
   		cin>>x>>y ;
   		struct node temp;
   	temp.first = x ;
   		temp.second= y ;
   		v.push_back(temp);
   	}
   	for(int i=0 ; i<v.size()-1 ;i++)
   	{
   	for(int j=i+1 ;j<v.size();j++)
   	{
   		if((v[i].first + 2 == v[j].first) && (v[i].second + 1==v[j].second || v[i].second - 1 ==v[j].second ) ||(v[i].first - 2 == v[j].first) && (v[i].second + 1==v[j].second || v[i].second - 1 ==v[j].second ) || (v[i].second + 2 == v[j].second) && (v[i].first + 1==v[j].first || v[i].first - 1 ==v[j].first ) || (v[i].second - 2 == v[j].second) && (v[i].first + 1==v[j].first || v[i].first - 1 ==v[j].first ))
   		yes++;
   		
   		
   	}
   	total=  ((total)*fact(yes))%1000000007;
   	}
   	cout<<total<<endl;
   }
    return 0;
}*/
