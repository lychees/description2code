#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int  MOD=1000000007;
const int  INF= int(1e9);
const int  MAX=110;
ll c[MAX][MAX],d[MAX];
inline int mul(int a, int b) {
    return (long long)a * b % MOD;
}
inline int exp(int a, int b) {
    int res = 1;
    while (b > 0) {
        if (b & 1) res = mul(res, a);
        a = mul(a, a);
        b >>= 1;
    }
    return res;
}
inline int inv(int a) {
    return exp(a, MOD - 2);
}
inline void add(int &a, int b) {
    a += b;
    if (a >= MOD) a -= MOD;
}

int main()
{
    ios_base::sync_with_stdio(false);
    memset(c, 0, sizeof c);
    for(int n=1;n<MAX;n++) {
        c[n][0]=c[n][n]=1;
        for(int k=1;k<n;k++) {
            c[n][k]=(c[n-1][k]+c[n-1][k-1])%MOD;
        }
    }
    d[0] = 1;
    d[1] = 0;
    for(int i=2;i<MAX;i++) {
        d[i] = mul((i - 1), (d[i - 1] + d[i - 2])%MOD);
    }
    int n,l,r;
    cin>>n>>l>>r;
    int fav,total;
    fav=total=0;
    for(int i=0;i<=n;i++) {
        int ways = mul(d[i],c[n][i]);
        if(i>=l && i<=r) {
            add(fav,ways);
        }
        add(total,ways);
    }
    int res = mul(fav,inv(total));
    cout<<res;

    return 0;

}
