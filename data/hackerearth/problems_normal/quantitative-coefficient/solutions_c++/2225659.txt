/*input

*/
#include <bits/stdc++.h>
#define X first
#define Y second
#define ll long long
#define d1(x) cout<<#x<<" "<<x<<endl;
#define d2(x,y) cout<<#x<<" "<<x<<" "<<#y<<" "<<y<<endl;
#define d3(x,y,z) cout<<#x<<" "<<x<<" "<<#y<<" "<<y<<" "<<#z<<" "<<z<<endl;
using namespace std;
#define gc getchar_unlocked
int read_int(){
    char c = gc ();
    while (c < '0' || c > '9')
        c = gc ();
        int ret = 0;
    while (c >= '0' && c <= '9'){
        ret = 10 * ret + c - 48;
        c = gc ();
    }
    return ret;
}
const ll infy=1000000000LL;
const ll MOD=1000000007;
void MST(){
    int n,m;
    cin>>n>>m;
    vector<vector<pair<int,long long > > > v(n+1); 
    vector<int> visited(n+1,0);
    for (int i = 0; i < m; i++){
        int a,b;
        ll w;
        a=read_int();
        b=read_int();
        w=(ll)read_int();
        v[a].push_back({b,w});
        v[b].push_back({a,w});
    }
    int source=1;
    ll count=1LL;
    int xx=0;
    //set<pair<ll,int> > s;
    priority_queue<pair<ll,int>,vector<pair<ll,int> >,greater<pair<ll,int > > > s;
    pair<ll,int> p;
    s.push({1LL,source});
    while(!s.empty()){
        //p=*(s.begin());
        p=s.top();
        //s.erase(s.begin());
        s.pop();
        int u=p.Y;
        if(visited[u]) continue;
        else{
            visited[u]=1;
            count=(count*p.X);
            count%=MOD;
            xx++;
        }
        if(xx==n) break;
        for (int i = 0; i < v[u].size(); i++){
            if(!visited[v[u][i].X]){
                s.push({v[u][i].Y,v[u][i].X});
            }
        }
    }
    printf("%lld\n",count);
}
void solve(){
    MST();
}
int main(){
    //ios_base::sync_with_stdio(0);
    int t;t=read_int();
    while(t--){
        solve();
    }
    return 0;
}