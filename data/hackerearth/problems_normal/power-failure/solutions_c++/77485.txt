#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <deque>
#include <set>
#include <map>
#include <utility>
#include <sstream>
#include <stack>
#include <queue>
#include <climits>
#include <limits>

#define pb push_back
#define pf push_front
#define all(c) c.begin(), c.end()
#define tr(c, it) \
	for(typeof(c.begin()) it = c.begin(); it!=c.end(); ++it)
#define present(container, element) (find(all(container),element) != container.end())
#define present2(c,x) ((c).find(x) != (c).end()) // For maps and set

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const long double PI = 3.141592653589793238462643383;
const ll MOD = 1000000007;
const double EPS = 1e-9; // a==b is abs(a-b)<EPS, a>=b is a>b-EPS, a>b is a>=b+EPS

using namespace std;
vector<bool> primes(100001,1);

void precompute(){
	primes[0]=false;
	primes[1]=false;
	for(int i=2; i<1000;){
		for(int j=i*i; j<100001; j=j+i){
			primes[j]=false;
		}
		++i;
		while(!primes[i]) ++i;
	}}
	
void display(vector<int> vec){
	int n = vec.size();
	for(int i=0; i<n; ++i){
		cout<<vec[i]<<" ";
	}
	cout<<endl;
}
int main()
{
	precompute();
    int T; cin>>T;
    while(T--){
    	int n,m; cin>>n>>m;
    	vector<int> vec(n);
    	for(int i=0; i<n; ++i) cin>>vec[i];
    	sort(all(vec));
    	vec.pb(m+1);
    	//display(vec);
    	vector<int> vec2(n+1);
    	vec2[n]=0;
    	for(int i=n-1; i>-1; --i){
    		int ans=vec2[i+1]-1;
    		if(i==n-1) ans+=1;
    		for(int j=vec[i]; j<vec[i+1]; ++j){
    			if(!primes[j]) ++ans;
    		}
    		vec2[i]=ans;
    	}
    	//display(vec2);
    	unsigned long long ans =1;
    	for(int i=0; i<n; ++i){
    		//cout<<"ans is:"<<ans<<" and vec2["<<i<<"] is:"<<vec2[i]<<endl;
    		ans=ans*vec2[i];
    		ans=ans%MOD;
    	}
    	cout<<ans<<endl;
    }
}
