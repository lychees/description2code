#include <bits/stdc++.h>

#define FO(i,a,b) for (int i = (a); i < (b); i++)
#define sz(v) int(v.size())

using namespace std;

typedef long long ll;

struct tg {
    int ft, fr, lt, lr;
    int ln;
    ll cnt;

    tg(int x=0, int len=0) {
        ft = lt = x;
        fr = lr = len;
        ln = len;
        cnt = len * 1ll * (len+1) / 2;
    }
};

tg mrge(tg a, tg b) {
    if (a.ln == 0) return b;
    if (b.ln == 0) return a;
    //printf("-- MRG --\n");
    //printf("%lld (%d,%d) (%d,%d)\n", a.cnt, a.ft, a.fr, a.lt, a.lr);
    //printf("%lld (%d,%d) (%d,%d)\n", b.cnt, b.ft, b.fr, b.lt, b.lr);
    //printf("---------\n");
    tg res;
    res.cnt = a.cnt + b.cnt;
    if (a.lt == b.ft) {
        res.cnt += a.lr * 1ll * b.fr;
    }
    res.ln = a.ln + b.ln;
    res.ft = a.ft;
    res.fr = a.fr;
    if (a.fr == a.ln && b.ft == a.ft) res.fr += b.fr;
    res.lt = b.lt;
    res.lr = b.lr;
    if (b.lr == b.ln && a.lt == b.lt) res.lr += a.lr;
    return res;
}

struct RT {
    static constexpr int N = 100005;
    typedef tg T;

    T v[4*N];
    int val[4*N];

    T op(const T &a, const T &b) {
        return mrge(a,b);
    }

    T q(int i, int rs, int re, int qs, int qe) {
        if (val[i]) {
            return tg(val[i],qe-qs);
        }
        if (rs==qs && re==qe) {
            return v[i];
        } else {
            int md=(rs+re)/2;
            T r;
            if (qs<md) r = op(r, q(2*i+1, rs, md, qs, min(qe,md)));
            if (qe>md) r = op(r, q(2*i+2, md, re, max(qs,md), qe));
            return r;
        }
    }

    void u(int i, int rs, int re, int qs, int qe, int qv) {
        if (rs==qs && re==qe) {
            val[i] = qv;
            v[i] = tg(qv, qe-qs);
        } else {
            int md=(rs+re)/2;
            if (val[i]) {
                val[2*i+1] = val[i];
                val[2*i+2] = val[i];
                v[2*i+1] = tg(val[i],md-rs);
                v[2*i+2] = tg(val[i],re-md);
                val[i] = 0;
            }
            if (qs<md) u(2*i+1, rs, md, qs, min(qe,md), qv);
            if (qe>md) u(2*i+2, md, re, max(qs,md), qe, qv);
            v[i] = op(v[2*i+1], v[2*i+2]);
        }
    }
} rt;

int n, m;

int main() {
    scanf("%d%d", &n, &m);
    FO(i,0,n) {
        int x; scanf("%d", &x);
        rt.u(0, 0, n, i, i+1, x);
    }
    FO(i,0,m) {
        int t; scanf("%d", &t);
        if (t == 0) {
            int l, r, c; scanf("%d%d%d", &l, &r, &c); l--;
            rt.u(0, 0, n, l, r, c);
        } else {
            int l, r; scanf("%d%d", &l, &r); l--;
            printf("%lld\n", rt.q(0,0,n,l,r).cnt);
        }
    }
    return 0;
}

