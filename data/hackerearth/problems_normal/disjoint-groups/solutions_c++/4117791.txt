/* NumeriX
   "Hard Work Beats Talent
   When Talent Doesn't Work Hard"
*/
#include <bits/stdc++.h>
#define ll long long int
#define sii(x) scanf("%d",&x)
#define pii(x) printf("%d\n",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld\n",x)
#define present_set_map(container, element) (container.find(element) != container.end()) 
#define present_vec(container, element) (find(all(container),element) != container.end()) 
#define mp make_pair
#define all(x) x.begin(),x.end()
#define all_rev(x) x.rbegin(),x.rend()
#define pb push_back
#define fr first
#define se second
using namespace std;

ll factorial[1000009];

long int  modPow(long long int a,long long  int b,long long  int MOD)
{
    long long int x=1,y=a; 
    while(b > 0)
    {
        if(b%2 == 1)
        {
            x=(x*y)%MOD;
            //if(x>MOD) x%=MOD;
        }
        b/=2;
        y = (y*y)%MOD;
        //if(y>MOD) y%=MOD; 
    }
    return x;
}
 
ll modInverse(ll a,ll p)
{
	return modPow(a,p-2,p);
}

int main()
{
    ll n,x=0,i,temp,mod=1e9+7;
    sll(n);
    for(i=0;i<n;i++)
    {
        sll(temp);
        x^=temp;
    }
    if(x==0)
    {
    	ll res=(modPow(2,n-1,mod)-1%mod)%mod;
    	if(res<0)
    		res+=mod;
    	pll(res);
    }
    else
        printf("0\n");
}
