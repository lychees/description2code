N = 10001
isPrime = [1] * N
isPrime[0] = 0
isPrime[1] = 0
for i in xrange(2, N):
    if isPrime[i]:
        for j in xrange(i + i, N, i):
            isPrime[j] = 0

primes = [i for i in xrange(2, N) if isPrime[i]]
minOps = [1 << 30] * N
n, K = map(int, raw_input().split())
A = [list(map(int, raw_input().split())) for i in xrange(n)]

for i in xrange(N):
    for p in primes:
        if p >= i and (p - i) % K == 0:
            minOps[i] = min(minOps[i], (p - i) / K)

minCount = 1 << 30
for i in xrange(n - 2):
    for j in xrange(n - 2):
        count = 0
        for dx, dy in ((0, 0), (1, 1), (2, 2), (2, 0), (0, 2)):
            count += minOps[A[i + dx][j + dy]]

        if count < minCount:
            minCount = count
            pos = (i + 2, j + 2)

if minCount == 1 << 30:
    print 'no'
else:
    print 'yes'
    print minCount
    print pos[0], pos[1]
