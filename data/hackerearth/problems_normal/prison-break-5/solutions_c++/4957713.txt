#include <iostream>
using namespace std;
 
int arr[21][21];
bool done[21][21]={false};
int routes=0,n;
void dfs(int x,int y)
{
	if(x<0||y<0||x>=n||y>=n||done[x][y]||arr[x][y])
		return;
	else if(x==n-1 && y==n-1)
	{
		routes++;
		return;
	}
	done[x][y]=true;
	dfs(x,y+1);
	dfs(x,y-1);
	dfs(x+1,y);
	dfs(x-1,y);
	done[x][y]=false;
}
 
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	routes=0;
    	cin>>n;
    	for(int i=0;i<n;i++)
    	{
    		for(int j=0;j<n;j++)
    		{
    			cin>>arr[i][j];
    			done[i][j]=false;
    		}
    	}
    	if(arr[0][0]!=1||arr[n-1][n-1]!=1)
    	{
    		arr[0][0]=0;
    		dfs(0,0);
    	}
    	cout<<routes<<endl;
    }
    return 0;
}