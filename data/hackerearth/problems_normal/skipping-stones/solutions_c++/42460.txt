#include<iostream>
#include<stdio.h>
using namespace std;
double max(double a, double b)
{
    if(a > b)
        return a;
    return b;
}
double maxProb(double prob[10001], int dist[1001], int n, int l, int d, int hash[10001])
{
    hash[0] = 1;
    double maxProd[10001] = {0.0};
    maxProd[0] = 1.0;
    //for(int i=0;i<n;++i)
    {

        for(int j=1;j<=d;++j)
        {
            if(!hash[j])
                continue;
            int present = j;
            int previous = j - l;
            if(previous < 0)
            {
                for(int k=0;k<j;++k)
                {
                    //if(hash[k])
                    {
                        maxProd[j] = max(maxProd[k]*prob[j], maxProd[j]);


                    }

                }
            }
            else{
                for(int k=previous;k<j;++k)
                {
                   // if(hash[k])
                    {
                        maxProd[j] = max(maxProd[k]*prob[j], maxProd[j]);

                    }

                }
            }
        }
    }
    int present = d;
    int previous = d - l;
    if(previous < 0)
        previous = 0;
    double max = 0;
    for(int i=previous;i<d-1;++i)
    {
        if(maxProd[i] > max)
            max = maxProd[i];
    }
    return max;
}
int main()
{
    int n,l, d;
    scanf("%d %d %d",&n, &l, &d);
    double prob[1001];
    int dist[1001];
    int hash[10001] = {0};
    double probHash[10001] = {0.0};
    for(int i=0;i<n;++i)
    {
        scanf("%lf", &prob[i]);

    }
    for(int i=0;i<n;++i)
    {
        scanf("%d", &dist[i]);
        probHash[dist[i]] = prob[i];
        hash[dist[i]] = 1;
    }


    double ans = maxProb(probHash, dist, n, l, d, hash);
    printf("%.6lf\n", ans);
}
