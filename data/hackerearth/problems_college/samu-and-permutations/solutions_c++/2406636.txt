#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>
using namespace std;
int dp[1<<15][15];
int arr[15],n;
int solve(int mask,int i)
{
  int j;
  if(dp[mask][i]!=-1)
  return dp[mask][i];
  int x=__builtin_popcount(mask)+1;
  if(x==(n+1))
  return 0;
 // printf("yes");
  for(j=0;j<n;j++)
  {
     if(!((mask)&(1<<j)))
     {
         dp[mask][i]=max(dp[mask][i],(x*abs(arr[i]-arr[j]))+solve((mask|(1<<j)),j));
       //  printf("yes");
     }
  }  
 // printf("%d ",dp[mask][i]);
  return dp[mask][i];
}
int main()
{
    int test,i,j,mask,taste;
    scanf("%d",&test);
    while(test--)
    {
                taste=-1;
                scanf("%d",&n);
                for(i=0;i<n;i++)
                scanf("%d",&arr[i]);
                memset(dp,-1,sizeof(dp));
                for(i=0;i<n;i++)
                {
                  mask=1<<i;
                  taste=max(taste,solve(mask,i));
                } 
                printf("%d\n",taste);
    }
    getchar();
    getchar();
}
