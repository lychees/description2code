#include <iostream>
#include<vector>
#include<algorithm>
#include<bitset>
using namespace std;
#define ll long long
#define vi vector<ll>
#define size_t 10000010
bitset<size_t> bs;
ll _sieve_size;
vi primes;

void sieve(ll upperbound){
    _sieve_size=upperbound+1;
    bs.reset();bs.flip();
    bs.set(0,0);bs.set(1,0);
    for(ll i=2;i<=_sieve_size;i++)if(bs.test(i)){
            for(ll j=i*i;j<=_sieve_size;j+=i)bs.set(j,0);
            primes.push_back(i);
        }
}


bool isPrime(ll n){
    if(n< _sieve_size)
        return bs.test(n);
    for(ll i=0;i<primes.size();i++){
    	if(n%primes[i]==0)
    		return false;
    }
    return true;
        
    
}
int main()
{
    ll t,n;
    scanf("%lld",&t);
    while(t--){
    	scanf("%lld",&n);
    	if(n==2)
    		cout<<"Arjit\n";
    	else if(n==4)
    		cout<<"Deepa\n";
    	else{
    	sieve(n);
    	ll f=0;
    	for(ll i=1;primes.size();i++){
    		if(isPrime(n-primes[i])){
    			cout<<"Deepa\n";
    			f=1;
    			break;
    		}
    	}
    	if(f==0)
    		cout<<"Arjit\n";
    }
    }
    
    return 0;
}
