/*
    xxx_joker/codersumit
*/
#include <bits/stdc++.h>
#define bitcnt(x) __builtin_popcountll(x)
#define sd(a) scanf("%d",&a)
#define sld(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define sc(a) scanf("%c",&a)
#define pd(a) printf("%d",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define space printf(" ");
#define nw printf("\n")
#define pb push_back
#define FOR(i,a,b) for(i=a;i<b;i++)
#define FORR(i,a,b) for(i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define MAX 10000005
#define mod 1000000007

typedef long long ll;
typedef unsigned long long ull;
using namespace std;
/*inline void fastread(int *a)
{
 register char c=0;
 while (c<33) c=getchar();
 *a=0;
 while (c>33)
 {
     *a=*a*10+c-'0';
     c=getchar();
 }
}
*/
ll pow(ll a,ll b){
	if(b==0)
		return 0LL;
	else if(b==1)
		return a;
	else{
		ll temp=pow(a,b/(ll)2);
		temp*=temp;
		if(b%2!=0)
			temp*=a;
		return temp;
	}
}
ll sieve[MAX]={0};
vector<ll> v;
vector<ll> vv[30];
int main(){//while(1){
    ll temp1,temp,i,test,j,a,b,ans;
    sieve[0]=sieve[1]=1;
    FOR(i,2,MAX){
        if(sieve[i]==0){
            for(j=2;j*i<MAX;j++){
                sieve[i*j]=1;
            }
        }
    }
    temp1=1LL;
    for(i=1;i<24;i++){
        temp1*=(ll)2;
        temp=temp1;
        temp--;
        //cout<<endl;
        //cout<<"temp= "<<temp<<endl;
        //cout<<"i = "<<i<<" temp= "<<temp<<endl;
        if(sieve[temp]==0){
          //  cout<<"i = "<<i<<endl;
            vv[i].pb(temp);
            continue;
        }
        //ans=sqrt(temp);
        //ans++;
        for(j=1;j<=temp;j++){
            if(sieve[j]==0 && (temp%j==0))
          //      cout<<j<<" ";
                vv[i].pb(j);
        }
        //temp++;
    }
    sld(test);
    while(test--){
        ans=0;
        //memset(visit,0,sizeof(visit));
        sld(a);sld(b);
        for(i=0;i<vv[a].size();i++){
            for(j=0;j<vv[b].size();j++){
               // cout<<vv[a][i]<<" "<<vv[b][j]<<endl;
                if(vv[a][i]==vv[b][j]){
                    ans++;
                    break;}
            }
        }
        printf("%lld\n",ans);
    }
	return 0;
}
