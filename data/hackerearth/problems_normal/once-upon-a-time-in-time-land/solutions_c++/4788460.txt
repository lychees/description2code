#include<iostream>
#include <cassert>
#include <cctype>
#include <cmath>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

#include <algorithm>
#include <deque>
#include <functional>
#include <iterator>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <fstream>
#include <sstream>


using namespace std;
typedef long long int64;
int64 memo[10005];
long long MaxpositiveSum(int index,int n,long long dp[],int k)
{
    if(index>=n)
        return 0;
    if(memo[index]!=-1)return memo[index];
    long long sum=max(MaxpositiveSum(index+1,n,dp,k),dp[index]+MaxpositiveSum(index+k+1,n,dp,k));
    return memo[index]=sum;
}
int main()
{
    int t,i;
    cin>>t;
    int n,k;
    for(i=0;i<t;i++)
    {
        cin>>n>>k;
        long long dp[n],j;
        for(j=0;j<n;j++)
        {
            cin>>dp[j];
        }
        memset(memo,-1,sizeof(memo));
        long long sum=MaxpositiveSum(0,n,dp,k);
        cout<<sum<<endl;
    }
}
