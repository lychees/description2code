/*
* @problem: xx
*/
#include <iostream>
#include <algorithm>
#include <utility>
#include <cstring>
#include <string.h>
#include <queue>
#include <set>
#include <map>
#include <math.h>
#include <stdio.h>
#include <vector>
#include <functional>
#include <bitset>
#include <iomanip>
#define ll long long
#define pi acos(-1.0)
#define pb push_back
#define MS0(ar) memset(ar,0,sizeof ar)
#define MS1(ar) memset(ar,-1,sizeof ar)
#define ff first
#define ss second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ind(a) scanf("%d",&a)
#define inf(a) scanf("%lf",&a)
#define inl(a) scanf("%lld",&a)
#define ins(a) scanf("%s",a)
#define pd(a) printf("%d\n",a)
#define pl(a) printf("%lld\n",a);
#define bitcnt(x) __builtin_popcountll(x)
#define mod 1000000007
const int MAX = 1e3 + 10;
using namespace std;
int vis[MAX];
vector< pair<int, int > >v[MAX];
void dfs(int x , int cst)
{
    vis[x] = 1;
    for (int i = 0; i < v[x].size(); i++)
    {
        int cur = v[x][i].ss;
        int wt = v[x][i].ff;
        if (!vis[cur] && wt < cst)
        {
            dfs(cur, cst);
        }
    }
}
int gcd(int a, int b)
{
    if (b == 0)
        return a;
    else
        return gcd(b, a % b);
}
int main()
{

    ios_base::sync_with_stdio(0);
    cin.tie(0);
#ifndef ONLINE_JUDGE
    freopen("../input.txt", "r", stdin);
    //freopen("../output.txt","w",stdout);
#endif
    int t, n, k, u, wt, q;
    ll x, y;
    cin >> t;
    while (t--)
    {
        cin >> n >> k;
        for (int i = 0; i < k; i++)
        {
            cin >> x >> y >> wt;
            v[x].pb({wt, y});
            v[y].pb({wt, x});
        }
        cin >> q;
        int ans = 0;
        for (int i = 0; i < q; i++)
        {
            cin >> u >> x;
            for (int i = 0; i <= n; i++)
                vis[i] = 0;
            int cur , wt;
            for (int i = 0; i < v[u].size(); i++)
            {
                cur = v[u][i].ss;
                wt =  v[u][i].ff;
                if (cur == x)
                    break;
            }
            dfs(u, wt);
            if (!vis[x])
                ans++;
        }
        int g = gcd(ans, q);
        cout << (ans / g) << "/" << (q / g) << endl;
        for (int i = 0; i <= n; i++)
            v[i].clear();
    }
    return 0;
}