/* FactorialSize.c */
#include<iostream>
#include <math.h>
#include <stdlib.h>
#include <stdio.h>
using namespace std;
#define ll long

ll findTrailingZeros(ll  n)
{
    // Initialize result
    ll count = 0;
 
    // Keep dividing n by powers of 5 and update count
    for (ll i=5; n/i>=1; i *= 5)
          count += n/i;
 
    return count;
}

int main()
{
	int t;
	cin>>t;
	ll num;
    while (t--)
    {
        ll   l, index;
        double sum;
		cin>>num;
        if (num>0)
        {
			l=num;
            /* log(1) + ... + log(N-1) + log(N) */
            for (sum = 0, index = 1; index <= l; index++)
                sum += log10((double) index);

            /* CEILING[(log(1) + ... + log(N-1) + log(N))] */
            sum = ceil(sum);

            printf("%.0f\n",sum-findTrailingZeros(l));
        }
    }
    return EXIT_SUCCESS;
}