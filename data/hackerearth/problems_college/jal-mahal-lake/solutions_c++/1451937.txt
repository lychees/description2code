#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
int t;
vector<pair<long long int, long long int> > v;
long long int a[51];
long long int b[51];
int main(){
	scanf("%d", &t);
	while (t--){
		int n;
		scanf("%d", &n);
		for (int i = 0; i < n; i++){
			scanf("%lld", &a[i]);
		}
		v.resize(n);
		for (int i = 0; i < n; i++){
			scanf("%lld", &b[i]);
			v[i].first = a[i];
			v[i].second = a[i] + b[i];
		}
		sort(v.begin(), v.end());
		if (v.size() == 1){
			puts("0");
			continue;
		}
		long long int mint = LLONG_MAX;
		for (int i = 0; i < v.size(); i++){
		//	for(int jj=0;jj<v.size();jj++){
			long long int want = v[i].first;
			long long int tmp = 0;
			for (int j = i - 1; j >= 0; j--){
				tmp += abs(v[j].second - want);
				want -= v[j].second-v[j].first;
			}
			want = v[i].second;
			for (int j = i + 1; j < v.size(); j++){
				tmp += abs(v[j].first - want);
				want += v[j].second-v[j].first;
			}
			mint = min(mint, tmp);
		//	}
		}
		printf("%lld\n", mint);
	}
	return 0;
}