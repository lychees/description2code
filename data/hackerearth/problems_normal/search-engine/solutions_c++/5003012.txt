#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <cmath>
#include <climits>
#ifdef DEBUG
    #include <ctime>
#endif
using namespace std;

// template

// abbreviations
#define vi vector<int>
#define vl vector<ll>
#define vb vector<bool>
#define vs vector<string>
#define ii pair<int, int>
#define a first
#define b second
#define vii vector<ii>
#define mii map<int, int>
#define vvi vector<vi>
#define vvl vector<vl>
#define que queue
#define pque priority_queue
#define stk stack
#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define pu push
#define po pop
#define mp make_pair
#define sz(var) ((int) var.size())
#define rep(it, n) for(int it = 0; it < n; ++it)
#define dep(it, n) for(int it = n - 1; it >= 0; --it)
#define rep1(it, n) for(int it = 1; it <= n; ++it)
#define dep1(it, n) for(int it = n; it > 0; --it)
#define loop(it, from, to) for(int it = (from); it <= (to); ++it)
#define iter(it, cont) for(__typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); ++it)
#define riter(it, cont) for(__typeof((cont).rbegin()) it = (cont).rbegin(); it != (cont).rend(); ++it)
#define all(cont) (cont).begin(), (cont).end()
#define rng(cont, n) cont, cont + n
#define memclr(var) memset(var, 0, sizeof(var))

typedef unsigned long long ull;
typedef long long ll;

const int INF = INT_MAX;
const int NINF = INT_MIN;
const ll INF_LL = LLONG_MAX;
const ll NINF_LL = LLONG_MIN;
const double PI = acos(-1.0);
const int MOD = 1e9 + 7;

#ifdef DEBUG
    #define debug(fmt, args...) printf("Line %d, in %s\t: " fmt, __LINE__, __FUNCTION__, ##args)
    #define rep_rt() printf("[Run time: %.3fs]\n", ((double) clock()) / CLOCKS_PER_SEC)
#else
    #define debug(...)
#endif

// end of template

#define MAXN (int) (1e6)
#define MAXL (int) (1e6)
char str[MAXL + 2];

struct Node {
    int max_val = 0;
    Node *next[256];
    Node() {
        rep(idx, 256) {
            next[idx] = NULL;
        }
    }
    Node *get_save(int idx) {
        if (next[idx] == NULL)
            next[idx] = new Node();
        return next[idx];
    }
} *root;

int main() {
#ifdef DEBUG
    freopen("search-engine.in", "r", stdin);
#endif
    root = new Node();
    int n, nq;
    scanf("%d %d", &n, &nq);
    rep(idx, n) {
        int w;
        scanf("%1000000s %d%*c", str, &w);
        Node *curr = root;
        int len = (int) strlen(str);
        rep(idx, len) {
            int cv = str[idx];
            curr = curr->get_save(cv);
            curr->max_val = max(curr->max_val, w);
        }
    }
    while (nq--) {
        scanf("%1000000s%*c", str);
        Node *curr = root;
        int len = (int) strlen(str);
        rep(idx, len) {
            int cv = str[idx];
            curr = curr->next[cv];
            if (curr == NULL)
                break;
        }
        printf("%d\n", curr ? curr->max_val : -1);
    }

#ifdef DEBUG
    rep_rt();
#endif
    return 0;
}