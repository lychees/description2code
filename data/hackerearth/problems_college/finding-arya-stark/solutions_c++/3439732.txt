#include<bits/stdc++.h>
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define mod 1000000007 // 10**9 + 7
#define INF 1e9
#define FOR(i,a,b) for(int (i) = (a); (i) < (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a)-1; (i) >= (b); --(i))
#define CLEAR(a) memset((a),0,sizeof(a))
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define rep(i, a, b) for (int i = a; i < b; i++)
#define rrep(i, b, a) for (int i = b; i > a; i--)
#define all(v) v.begin(), v.end()
#define GETCHAR getchar_unlocked
#define pi(n) printf("%d\n",n)
#define pll(n) printf("%lld\n",n)
#define rk() int t; scanf("%d",&t); while(t--)
using namespace std;
const double pi = acos(-1.0);
//freopen("in","r",stdin);
//freopen("out","w",stdout);
const int er[8] = {-1,-1,0,1,1,1,0,-1};
const int ec[8] = {0,1,1,1,0,-1,-1,-1};
const int fr[4] = {-1,1,0,0};
const int fc[4] = {0,0,1,-1};
typedef unsigned long long ull;
typedef long long ll;
typedef long l;
typedef pair<int,int> pii;
typedef vector<int> vec;
typedef vector<pii> vpii;
ll po(ll a,ll p)
{ll ret = 1;while(p){if(p&1)ret = (ret*a)%mod;a=(a*a)%mod;p=p>>1;}return ret%mod;}


vector<int> g[100005];
int visited[100005];
int beginn[100005];
int endd[100005];
int p[100005];

int dfs(int node,int start_time)
{
   visited[node]=1;
   
   start_time++;
   beginn[node]=start_time;
   
   for(int i:g[node])
   {
  	if(visited[i]==0)
  	{
  		p[i] += p[node]+1;
    start_time=dfs(i,start_time);
  	}
   }
   start_time++;
   endd[node]=start_time;
  
 return start_time;
}

vector<int> ans;
int main()
{
  ios_base::sync_with_stdio(0);
  int n,a,b,q; 
  cin>>n;
 for(int i=0;i<n-1;i++)
 {
   cin >> a >> b;
   g[a-1].push_back(b-1);
   g[b-1].push_back(a-1);
 }
p[0]=0;
dfs(0,0);
//for(int i=0;i<n;i++)
//cout<<i+1<<": "<<beginn[i]<<" "<<endd[i]<<" "<<p[i]<<endl;
   cin>>q;
 while(q--)
 {
  int a,x,y;

  cin>>a>>x>>y;
  if(a==0)
  {
    int flag=beginn[y-1]>=beginn[x-1]&&beginn[y-1]<endd[x-1];
  	if(flag==1)
    	{
    	ans.push_back(p[y-1]-p[x-1]+1);
    	}
    else
    	ans.push_back(0);
  	
  }
  else
  {
    swap(x,y);
  	int flag=beginn[y-1]>=beginn[x-1]&&beginn[y-1]<endd[x-1];
  	if(flag==1)
    	{
    	ans.push_back(p[y-1]-p[x-1]+1);
    	}
    else
    	ans.push_back(0);
  }
 }
 for(int i=0;i<ans.size();i++)
   {
   	if(ans[i])
       cout<<"YES"<<" "<<ans[i]<<endl;
    else
       cout<<"NO"<<endl;
   
   
 }
return 0;
}