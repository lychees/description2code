#include <iostream>
#define INF 9999999

using namespace std;

int min_cost(int hno, int col, int n);
void printsolution(int n);
void init_cache();

int price[100][3];
int cache[100][3];
int solution[100];
char *colors[]={"Red", "Green", "Blue"};

int main()
{
        int i, j;
        int T;
        int n;
        cin>>T;
        while(T--)
        {
                cin>>n;
                for(i=0; i<n; i++)
                {
                        for(j=0; j<3; j++)
                        {
                                cin>>price[i][j];
                        }
                }

                init_cache();
                cout<<min_cost(0, 4, n)<<endl;
        }
        return 0;
}

void init_cache()
{
        for(int i=0; i<100; i++)
        {
                for(int j=0; j<3; j++)
                {
                        cache[i][j]=-1;
                }
        }
}

int min_cost(int hno, int col, int n)
{
        if(hno==n)
        {
                return 0;
        }
        if(cache[hno][col]!=-1)
        {
                //cout<<"Cache hit"<<endl;
                return cache[hno][col];
        }

        int val;
        int ans=INF;
        for(int i=0; i<3; i++)
        {
                if(i!=col)
                {
                        val=min_cost(hno+1, i, n);
                        if(price[hno][i]+val<ans)
                        {
                                ans=val+price[hno][i];
                                solution[hno]=i;
                        }
                }
        }

        cache[hno][col]=ans;
        return ans;
}

void printsolution(int n)
{
        for(int i=0; i<n; i++)
        {
                cout<<colors[solution[i]]<<endl;
        }
}
