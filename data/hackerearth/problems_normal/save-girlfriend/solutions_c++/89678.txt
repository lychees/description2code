#include<iostream>
#include<vector>
using namespace std;
#define lli long long int
bool P[10005];
vector<lli>v;
inline void fi(int *a)
{
       int tmp=0;
 register char c=0;
 while (c<33) c=getchar_unlocked();
 *a=0;
 while (c>33)
 {
       if(c==42)
       {
                tmp=1;
                continue;
       }
     *a=*a*10+c-'0';
     c=getchar_unlocked();
 }
 if(tmp==1)
 *a=0-*a;
}
inline void fii(lli *a)
{
       int tmp=0;
 register char c=0;
 while (c<33) c=getchar_unlocked();
 *a=0;
 while (c>33)
 {
       if(c==42)
       {
                tmp=1;
                continue;
       }
     *a=*a*10+c-'0';
     c=getchar_unlocked();
 }
 if(tmp==1)
 *a=0-*a;
}
void func()
{
     P[0]=P[1]=1;
     for(int i=2;i<=102;i++)
     {
             if(!P[i])
             {
                      for(int j=i*i;j<10005;j+=i)
                              P[j]=1;
             }
     }
     for(int i=2;i<=10000;i++)
             if(P[i]==0) v.push_back(i);
} 
int main()
{
    func();
    int t;
    fi(&t);
    while(t--)
    {
              int a,b;
              fi(&a);fi(&b);
              int A[b-a+1];
              int mx=0;
              int ct=0;
              for(int j=a;j<=b;j++)
              {
                      int el=j;
                      A[j-a]=1;
                      //if(P[j]==0) A[j-a]=2;
                      //else
                      {
                      for(int i=0;i<v.size();i++)
                      {
                      int k=0;
                      int pp=v[i];
                      if(v[i]*v[i]>el) break;
                      while(el%pp==0)
                      {
                                     k++;
                                     el=el/pp;
                      }
                      A[j-a]*=(k+1);
                      }
                      }
                      if(el!=1) A[j-a]*=2;
                      if(A[j-a]>mx)
                      {
                                   mx=A[j-a];
                                   ct=1;
                      }
                      else if(A[j-a]==mx) ct++;                                   
              }
              printf("%d\n",ct+1);
    }
    return 0;
}
              
                      
                      
