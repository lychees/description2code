#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("E.inp","r",stdin)
#define OUTPUT freopen("E.out","w",stdout)
#define FOR(i,l,r) for(auto i=l;i<=r;i++)
#define REP(i,l,r) for(auto i=l;i<r;i++)
#define FORD(i,l,r) for(auto i=l;i>=r;i--)
#define REPD(i,l,r) for(auto i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=4e3+10;

int n,len,m,k;
int f[N][N],g[N][N],fd[N][N];
ll power(ll x,ll y){
    ll ans=1;
    while (y){
        if (y&1) ans=ans*x%MOD;
        x=x*x%MOD;
        y>>=1;
    }
    return ans;
}
void add(int &x,ll v){
    x=(x+v)%MOD;
}
int solve(){
    f[0][0]=g[0][0]=fd[0][0]=1;
    FOR(i,1,n)
        FOR(j,0,m){
            int v=(g[i-1][j]-(i>=len?g[i-len][j]:0)+MOD)%MOD;
            add(f[i][j],1LL*v*(k-1));
            if (i>=len&&j) add(f[i][j],1LL*fd[i-len][j-1]*(k-1));
            fd[i][j]=(f[i][j]+(j?fd[i-1][j-1]:0))%MOD;
            g[i][j]=(f[i][j]+g[i-1][j])%MOD;
//            cout<<i<<" "<<j<<" "<<f[i][j]<<'\n';
        }
    return f[n][m]*power(k-1,MOD-2)%MOD*k%MOD;
}
int main(){
    cin>>n>>len>>m>>k;
    cout<<solve();
}
