#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define REP(i,n) for(int i=0; i<(int)(n); i++)
#define FOR(i,b,e) for (int i=(int)(b); i<(int)(e); i++)
#define ALL(x) (x).begin(), (x).end()

const int INF = 1e9 + 1;
int n, q;
int d[1000];
int dist[10000];
typedef pair<int, int> PII;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  
  cin >> n >> q;
  REP (i, n) cin >> d[i];
  int z = *min_element(d, d+n);

  priority_queue<PII, vector<PII>, greater<PII> > Q;
  fill(dist, dist + z, INF);
  Q.emplace(0, 0);
  dist[0] = 0;

  while (!Q.empty()) {
    int v, cost;
    tie(cost, v) = Q.top();
    Q.pop();
    if (cost > dist[v]) continue;
    for (auto &x: d) {
      if (cost + x < dist[(v+x) % z]) {
        dist[(v+x) % z] = cost + x;
        Q.emplace(cost + x, (v+x) % z);
      }
    }
  }

  REP (i, q) {
    int x;
    cin >> x;
    if (dist[x%z] <= x)
      cout << "YES" << endl;
    else
      cout << "NO" << endl;
  }

  return 0;
}
