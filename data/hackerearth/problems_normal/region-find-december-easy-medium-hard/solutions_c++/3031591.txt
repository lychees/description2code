#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)

#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 1505

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

//FILE* outFile;

inline void add(int &a,int b){a+=b;if(a<0)a+=mod;while(a>=mod)a-=mod;}

int a[N],b[N],ans[N],tot=0;
ll dp[N][N],f[N][N];
vi g[N];

void dfs(int u,int fa){
    dp[u][a[u]]=1;
    for(int i=a[u];i>=0;i--)f[u][i]=1;
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        dfs(j,u);
        for(int x=0;x<tot;x++){
            dp[u][x]+=1LL*f[u][x]*f[j][x]%mod-1LL*f[u][x+1]*f[j][x+1]%mod;
            dp[u][x]%=mod;
            if(dp[u][x]<0)dp[u][x]+=mod;    
        }
        for(int k=tot-1;k>=0;k--)f[u][k]=(dp[u][k]+f[u][k+1])%mod;
    }
}
int main(){
    //ios::sync_with_stdio(0);
    //cout<<fixed<<setprecision(10);
    //outFile=fopen("2.txt","w");
    int T,i,j,k,n,m;
    scanf("%d",&n);
    tot=0;
    for(i=1;i<=n;i++)scanf("%d",&a[i]),b[tot++]=a[i];
    sort(b,b+tot);tot=unique(b,b+tot)-b;
    for(i=1;i<=n;i++)a[i]=lower_bound(b,b+tot,a[i])-b;
    for(i=0;i<n-1;i++){
        scanf("%d%d",&j,&k);
        g[j].pb(k);
        g[k].pb(j);
    }
    dfs(1,0);
    for(i=1;i<=n;i++)
        for(j=0;j<tot;j++)add(ans[j],dp[i][j]);
    scanf("%d",&m);
    while(m--){
        scanf("%d",&k);int res=0;
        j=lower_bound(b,b+tot,k)-b;
        if(j>=tot||b[j]!=k)res=0;
        else res=ans[j];
        printf("%d\n",res);
    }
    return 0;
}