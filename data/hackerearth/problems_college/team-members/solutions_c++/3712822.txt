#include <bits/stdc++.h>
using namespace std;
 
int D, K;
 
char S[16];
long long ten[16];
long long dp[1003][(1<<15)+5];
 
long long solve(int N, int mask, int pos)
{
    if(mask==0)
    {
        if(N==0)
            return 1;
 
        return 0;
    }
 
    if(dp[N][mask]!=-1)
        return dp[N][mask];
 
    long long ans = 0, done = 0;
 
    for(int i=0; S[i]!='\0'; i++)
    {
        if(mask&(1<<i) && (done&(1<<(S[i]-'0')))==0)
        {
            done+= (1<<(S[i]-'0'));
            ans+= solve((N-(S[i]-'0')*ten[pos]%D+D)%D, mask-(1<<i), pos+1);
        }
    }
 
    return dp[N][mask] = ans;
}
 
int main()
{
    scanf(" %s %d %d", S, &D, &K);
 
    int N = strlen(S);
 
    ten[0] = 1;
 
    for(int i=1; i<=15; i++)
        ten[i] = ten[i-1]*10;
 
    memset(dp, -1, sizeof(dp));
 
    printf("%lld\n", solve(K, (1<<N)-1, 0));
 
    return 0;
}