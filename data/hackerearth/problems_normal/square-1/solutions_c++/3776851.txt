#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb emplace_back
#define mt make_tuple
#define gcd __gcd
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%.4Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pii;

const int maxn = 1e5 + 7;
const ll md = 1e9 + 7;
const int iter = 100;	
const ld pi = acos(-1.0);
const ld inf = 1e17;
const int parts = 70;

pair<ld,ld> rotate(pair<ld,ld> Z, ld x) {
	ld a = cos(x), b = sin(x);
	return mp(Z.first*a - Z.second*b, Z.first*b + Z.second*a);
}

pair<ld,ld> A[maxn]; int n;

ld f(ld x) {

	ld maxx,maxy,minx,miny; maxx = maxy = -inf; minx = miny = inf;

	rep(i,1,n) {
		auto Q = rotate(A[i],x);
		maxx = max(maxx,Q.first); minx = min(minx,Q.first);
		maxy = max(maxy,Q.second); miny = min(miny, Q.second);
	}

	return max(maxx-minx,maxy-miny);
}

ld solve(ld l, ld r) {
	rep(i,1,iter) {
		ld ft = (l+l+r)/3, st = (l+r+r)/3; ld a = f(ft), b = f(st);
		if (a < b) {
			r = st;
		} else {
			l = ft;
		}
	}
	return f(l);
}

int main() {
	s(n);
	rep(i,1,n) {
		sf(A[i].first); sf(A[i].second);
	}

	ld ans = inf; ld p = pi/(2*parts);
	rep(i,1,parts) {
		ans = min(ans,solve((i-1)*p, i*p));
	}
	prf(ans); endc;
}
