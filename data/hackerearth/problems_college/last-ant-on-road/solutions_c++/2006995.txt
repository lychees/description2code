#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <iostream>
#include <string>
#include<sstream>
#include<string.h>
#include <vector>
#include <bitset>
#include <cmath>
#include <queue>
#include<stack>
#include <set>
#include <map>
#include<ctime>
#include <functional> 

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef pair<double,double> pdd;
typedef pair<int,pii> p3i;
typedef vector<pii> vpii;

#define GI ({int t;scanf("%d",&t);t;})
#define REP(i,n) FOR(i,0,n) 
#define FOR(i,a,b) for (ll i(a); i < (b); i++)
#define FORMAP(it,c) for (typeof((c).begin()) it=c.begin(); it!=c.end(); ++it)
#define FORV(i, c) for(auto &(i) : (c))
#define UN(v) sort((v).begin(),(v).end()),v.erase(unique(v.begin(),v.end()),v.end())
#define CL(a,b) memset(a,b,sizeof(a))
#define pb push_back
#define mp make_pair
#define SORT(a) sort((a).begin(),(a).end())
#define REV(a) reverse((a).begin(),(a).end())
#define FILL(x,v) memset(x,v,sizeof x);
#define INF (int)1e9

int main(){
	int t;
	 int n;
  int a[1003];
 int i,k;
	int res[1003];
	scanf("%d",&t);

 for(k=0;k<t;k++)
 {
 scanf("%d", &n);

 // Directions of ants
 for(i=0; i<n; i++){
  scanf("%d", &a[i]);
 }
 int left = 0, right = 0;
 for(i=0; i<n; i++){
  if(a[i] == -1){
   left ++;
  }
  else{
   break;
  }
 }

 for(i=n-1; i>=0; i--){
  if(a[i] == 1){
   right++;
  }
  else{
   break;
  }
 }
 
 // Number of ants between 'left' and 'right' position and moving towards left
 int leftgoingants = 0;
 for(i=left; i <= n-right-1; i++){
  if(a[i] == -1){
   leftgoingants ++;
  }
 }
 if(left >= right){
  res[k]=left + leftgoingants;
 }
 else{
  res[k]= left + leftgoingants + 1;
 }
 }
 for(k=0;k<t;k++)
 {
 	printf("%d\n",res[k]);
 }
 system("pause");
 return 0;
}
