#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>

using namespace std;

#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define S(x) scanf("%d",&x)
#define all(c) (c).begin(),(c).end() 
#define sz(c) int((c).size())
#define pb push_back
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define rep(i,x,y) for(int i = x; i < y; i++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long int LL;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;

const int MAX = 100001, mod = 1000000007;

LL F[3][3], I[3][3];


void multiply(LL M[3][3])
{
	LL res[3][3];
	memset(res,0,sizeof(res));
	rep(i,0,3) rep(j,0,3) rep(l,0,3) 
	res[i][j] = (res[i][j] + (F[i][l]*M[l][j])%mod)%mod;
	memcpy(F,res,sizeof(F)); 
}

void mat_pow(LL n)
{
	if(n == 1) return;
	mat_pow(n>>1);
	multiply(F);
	if(n & 1) multiply(I);
}

int main()
{
	int t;
	S(t);
	while(t--){
		LL n, f[2], a, b, c;
		scanf("%lld%lld%lld%lld%lld%lld",&n,&f[0],&f[1],&a,&b,&c);
		n--;
		if(n > 1){
			memset(F,0,sizeof(F));
			memset(I,0,sizeof(I));
			F[0][0] = 1; F[1][2] = 1; F[2][2] = a;
			F[2][1] = b; F[2][0] = 1;
			I[0][0] = 1; I[1][2] = 1; I[2][2] = a;
			I[2][1] = b; I[2][0] = 1;
			mat_pow(n-1);
			LL ans = (F[2][0]*c + F[2][1]*f[0] + F[2][2]*f[1]) % mod;
			//LL ans = (F[2][0] + F[2][1]*f[0] + F[2][2]*f[1])%mod;
			printf("%lld\n",ans);
		}
		else printf("%lld\n",f[n]);
	}
	return 0;
}