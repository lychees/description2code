#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
#define mod 1000000007
vector<long long int >arr;
long long int fact[100005];
int fast_pow(long long a,long long n)
{
	if(n==0)
		return 1;
	if(n==1)
		return a;
	long long halfn=fast_pow(a,n/2);
	if(n%2==0)
		return (halfn*halfn)%mod;
	else
	return (((halfn*halfn)%mod)*a)%mod;
}
long long int findMMI_fermat(long int n)
{
	return fast_pow(n,mod-2);
}
int main()
{
	int t;long long int x,sum=0;
	long int n,k;
	cin>>t;
	fact[0]=fact[1]=1;
	for(long int i=2;i<=100000;i++)
	{
		fact[i]=(i*fact[i-1])%mod;
	}
	long long numerator,denominator,mini_denominator,ans;
	while(t--)
	{
		sum=0;
		cin>>n>>k;
		for(long int i=0;i<n;i++)
		{
			cin>>x;
			arr.push_back(x);
		}
		sort(arr.begin(),arr.end());
		for(long int i=0;i<=n-k;i++)
		{
			if(n-i<k)
				break;
			numerator=fact[n-i-1];
			denominator=(fact[k-1]*fact[n-i-k])%mod;
			mini_denominator=findMMI_fermat(denominator);
			ans=(numerator*mini_denominator)%mod;
			
			sum=(sum+(arr[i]*ans)%mod)%mod;
		}
		cout<<sum<<endl;
		arr.clear();
	}
	return 0;
}
		