#include<bits/stdc++.h>
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define UP upper_bound
#define LB lower_bound
#define LL long long 
#define Pi 3.14159265358
#define si size()
#define en end()
#define be begin()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define ii set<int>::iterator
#define Tree int ind, int L, int R
#define Left 2*ind,L,(L+R)/2
#define Right 2*ind+1,(L+R)/2+1,R
using namespace std;
const LL m7=1000000007;
char s[100001];
char c[100001];
LL xar[100001];
LL Hash1[100001];
LL Hash2[100001];
LL k, h1, h2;
int n, m, i, j, t, l, r, res;
main(){
	   cin>>t;
	   xar[0]=1;
	   for(i=1;i<=100000;i++)xar[i]=(xar[i-1]*29ll)%m7;
	   while(t--)
	    {	
	     res=0; 
	     scanf("%s%s",&s,&c);
		 n=strlen(s);
		 k=29;
		 Hash1[0]=s[0]-'0'+1;
		 Hash2[0]=c[0]-'0'+1;
		 for(i=1;i<n;i++)
		  {
		   Hash1[i]=(Hash1[i-1]+(s[i]-'0'+1)*k)%m7;	
		   Hash2[i]=(Hash2[i-1]+(c[i]-'0'+1)*k)%m7;	
		   k=(k*29ll)%m7;
		  }
		 for(i=0;i<n;i++)
		  {
		   h1=(Hash1[i]*xar[n-i-1])%m7;
		   h2=((Hash2[n-1]-((n-i-2>=0)?Hash2[n-i-2]:0))%m7+m7)%m7;	
		   //cout<<h1<<" "<<h2<<endl;
		   if(h1!=h2)continue;
		   
		   h2=(((n-i-2>=0)?Hash2[n-i-2]:0)*xar[i+1])%m7;
		   h1=((Hash1[n-1]-Hash1[i])%m7+m7)%m7;
		   if(h1==h2)res++;
		  } 
		 cout<<res<<endl;res=0;
		}
       }