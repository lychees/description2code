#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
 
#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)
 
#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<ll>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
 
#define GI(x)     scanf("%d",&x)
 
#define FOR(i,a,b)      for(int i=(int)(a);i<(int)(b);i++)
#define RFOR(i,a,b)     for(int i=(int)(b)-1;i>=(int)(a);i--)
 
#define MOD       1000000007
#define EPS       1E-10
#define INF       1000000000
#define MAXN      100005
#define PI  acos(-1)
 
#define CASE(x)   cout << "Case #" << x << ": ";

int BIT[MAXN], maxVal = 100000;

int cmp(const void *a, const void *b)
{
	return *((const int *)a + 1) - *((const int *)b + 1);
}
void update(int idx, int val)
{
	while (idx <= maxVal)
	{
		BIT[idx] += val;
		idx += (idx & -idx);
	}
}
int query(int idx)
{
	int sum = 0;
	while (idx > 0)
	{
		sum += BIT[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
int main()
{
	int n, q, a[MAXN], qno[MAXN][3], ans[MAXN], d, pos[MAXN];
	scanf("%d %d %d", &n, &q, &d);
	for (int i = 1; i <= n; i++)
	{
		scanf("%d", a + i);
		pos[a[i]] = i;
	}
	for (int i = 0; i < q; i++)
	{
		scanf("%d %d", &qno[i][0], &qno[i][1]);
		qno[i][2] = i;
	}
	qsort(qno, q, sizeof(int) * 3, cmp);
	// for (int i = 0; i < q; i++)
	// 	cout << qno[i][0] << ' ' << qno[i][1] << ' ' << qno[i][2] << endl;
	for (int i = 1, k = 0; i <= n; i++)
	{
		for (int j = max(1, a[i] - d); j <= min(n, a[i] + d); j++)
		{
			if (pos[j] <= i)
				update(pos[j], 1);
		}
		while (qno[k][1] == i)
		{
			ans[qno[k][2]] = query(qno[k][1]) - query(qno[k][0] - 1);
			k++;
		}
	}
	for (int i = 0; i < q; i++)
		printf("%d\n", ans[i]);
	return 0;
}
