#include <iostream>
using namespace std;
long long land[1001][1001];
int d, n, k, a;
long long mod = 1e9+7;

long long bit[1001][1001];
long long get(int x1, int y1, int x2, int y2)
{
	long long res = 0;
	for(int j=y1;j<=y2;++j)
	{
		int xx1 = x1;
		int xx2 = x2;
		while(xx2>0)
		{
			res = (res + bit[xx2][j])%mod;
			xx2 -= xx2 & (-xx2);
		}
		xx1--;
		while(xx1>0)
		{
			res = (res - bit[xx1][j])%mod;
			xx1 -= xx1 & (-xx1);
		}
	}
	return res;
}

void update(int x1, int y1, long long val)
{
	while(x1<=n)
	{
		bit[x1][y1] += val;
		x1 += x1 & (-x1);
	}
}

int main()
{
	cin>>d;
	while(d--)
	{
		cin>>n>>k>>a;
		for(int i=1;i<=n;++i)
			for(int j=1; j<=n; ++j)
				bit[i][j]=0;
				
		for(int i=1;i<=n;++i)
			for(int j=1; j<=n; ++j)
			{
				land[i][j]=k;
				update(i,j,k);
			}
				
		for(int i=0; i<a;++i)
		{
			char ch;
			int x1, y1, x2, y2;
			long long z;
			cin>>ch;
			if(ch == 'm')
			{
				cin>>x1>>y1>>x2>>y2;
				cout<<get(x1,y1,x2,y2)<<endl;
			}
			else if(ch=='s')
			{
				cin>>x1>>y1>>z;
				long long old = land[x1][y1];
				land[x1][y1] = (old*z)%mod;
				update(x1,y1,land[x1][y1]-old);
			}
		}	
	}
    return 0;
}
