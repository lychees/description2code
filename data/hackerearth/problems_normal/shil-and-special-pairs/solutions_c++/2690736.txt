/*
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
#include <assert.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-8
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512

using namespace std;

int n,tests;
string st;
long long ar[1<<18];
int t[27][200006];

bool score(long long x)
{
	if (x<0)
		return false;
	if (x<0)
		x=-x;
	vector<int> dig;
	if (x==0)
		return true;
	while (x)
	{
		dig.push_back(x%10);
		x/=10;
	}
	return (dig[0]==dig.back());
}

void inc(int id,int i,int delta)
{
	for (;i<=200002;i=(i|(i+1)))
		t[id][i]+=delta,
		t[id][i]%=bs;
}

void add(int id,int i,int delta)
{
	inc(id,i,delta);
}

int sum(int id,int r)
{
	int res=0;
	for (;r>=0;r=(r&(r+1))-1)
		res+=t[id][r],
		res%=bs;
	return res;
}

int sum(int id,int l,int r)
{
//	cout<<sum(id,r)<<"%"<<sum(id,l-1)<<endl;
	
	return sum(id,r)-sum(id,l-1);
}

int d,ps[1<<20];
int l[1<<20],r[1<<20];
vector<int> queries[1<<20];
int ans[1<<20];
int id;

int main(){
//freopen("beavers.in","r",stdin);
//freopen("beavers.out","w",stdout);
//freopen("F:/in.txt","r",stdin);
//freopen("F:/output.txt","w",stdout);
//ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>n>>tests>>d;

for (int i=1;i<=n;i++)
{
	cin>>ar[i];
	ps[ar[i]]=i;
}

for (int i=1;i<=tests;i++)
{
	cin>>l[i]>>r[i];
	queries[r[i]].push_back(i);
//	order.push_back(make_pair(r[i],i));
}

for (int i=1;i<=n;i++)
{
	for (int j=ar[i]-d;j<=ar[i]+d;j++)
	{
		if (j<1||j>n)
			continue;
		int at=ps[j];
		if (at>i)
			continue;
		//cout<<i<<"%"<<at<<endl;
		inc(1,at,1);
	}
	for (int j=0;j<queries[i].size();j++)
	{
		int id=queries[i][j];
//		cout<<id<<"%"<<l[id]<<"  "<<r[id]<<" "<<sum(1,l[id],r[id])<<endl;
		ans[id]=sum(1,l[id],r[id]);
	}
}
for (int i=1;i<=tests;i++)
{
	cout<<ans[i]<<endl;
}
//cin.get();cin.get();
return 0;}
