import math

prime = []
# dic = {}
table = {}

numb = []
den = []
num = []


def sort(n):
    global den
    global num

    if n == len(numb):
        # print den
        # print num, "\n \n"
        if add(num) < add(den):
            return 1
        else:
            return 0

    ex = 0

    den.append(numb[n])
    ex += sort(n+1)

    den.remove(numb[n])

    num.append(numb[n])
    ex += sort(n+1)

    num.remove(numb[n])

    # put nth in either
    return ex


def add(arr):
    sum = 0
    for n in arr:
        sum += pow(n, table[current][n])
    return sum


def tablize(n):
    dic = {}
    for i in range(2, n+1):

        if i in prime:
            curr = n
            dic[i] = 0
            while curr > i:
                curr = int(curr/i)  # Check if floored
                dic[i] += curr

    table[n] = dic

    return dic


def factorize(n):
    if n in prime:
        return {n: 1}
    fact = {}
    for j in range(2, int(n/2)+1):
        if n % j == 0:
            if j in prime:
                fact[j] = 1
                temp = factorize(n/j)

                for x in temp.keys():
                    if x in fact:
                        fact[x] = fact[x] + temp[x]
                    else:
                        fact[x] = temp[x]
                break

    return fact


def merge(g, t):
    for n in t.keys():
        g[n] = g[n] + t[n]


'''
def merge(t):
	global dic
	for n in t.keys():
		dic[n] = dic[n] + t[n]
'''


def primes(n):
    global prime
    flag = False
    for i in range(5, n+1):
        for j in range(2, int(math.sqrt(i))+1):
            if i % j == 0:
                flag = True
                break

        if flag:
            flag = False
            continue
        prime.append(i)


def ans(n):
    if n == 1:
        return 0

    ans = 1
    prev = 1
    for i in range(3, n+1):
        if i in prime:
            prev = prev*2
        ans += prev
    return ans


prime = [2, 3]
N = int(raw_input())
primes(N)

total = ans(N)
# for i in range(2, N+1):
# tablize(i)
# numb = table[i].keys()
# current = i
# total += sort(0)


print total

# print table[N]


# for i in table[n].keys():
