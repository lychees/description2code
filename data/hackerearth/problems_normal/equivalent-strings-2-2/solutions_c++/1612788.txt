#include "bits/stdc++.h"

#define clr(x) memset((x), 0, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define in(x) int (x); input((x));
#define x first
#define y second
typedef int itn;

#define next next12345
#define prev prev12345
#define left lefdsf232
#define right rig43783
#define x1 x12345
#define y1 y12345

using namespace std;

template<typename T>
T gcd(T x, T y) {
    while (y > 0) {
        x %= y;
        swap(x, y);
    }
    return x;
}

template<class _T>
inline _T sqr(const _T &x) {
    return x * x;
}

template<class _T>
inline string tostr(const _T &a) {
    ostringstream os("");
    os << a;
    return os.str();
}

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
const long double PI = 3.1415926535897932384626433832795L;

template<typename T>
inline void input(T &a) {
    static int c;
    a = 0;
    while (!isdigit(c = getchar()) && c != '-') {}
    char neg = 0;
    if (c == '-') {
        neg = 1;
        c = getchar();
    }
    while (isdigit(c)) {
        a = 10 * a + c - '0';
        c = getchar();
    }
    if (neg) a = -a;
}

template<typename T = int>
inline T nxt() {
    T res;
    input(res);
    return res;
}

inline string next() {
    static int c;
    string res;
    while (isspace(c = getchar())) {}
    while (!isspace(c)) {
        res = res + (char)c;
        c = getchar();
    }
    return res;
}
const int N = 100001;
int prv1[N][26];
int prv2[N][26];

int main() {
    //#define int long
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#else
#define fname "a"
    //freopen(fname".in", "r", stdin);
    //freopen(fname".out", "w", stdout);
#endif

    long long pp = 732473;

    long long pw[N];
    long long spw[N];
    pw[0] = 1;
    spw[0] = 1;
    for (int i = 1; i < N; ++i) {
        pw[i] = pw[i - 1] * pp;
        spw[i] = spw[i - 1] + pw[i];
    }

    int t = nxt();
    while (t--) {
        string a = next(), b = next();

        vector <int> p1[26];
        vector <int> p2[26];

        for (int i = 0; i < (int)a.length(); ++i) {
            p1[a[i] - 'a'].push_back(i);
            for (int j = 0; j < 26; ++j) {
                prv1[i + 1][j] = prv1[i][j] + (a[i] == 'a' + j);
            }
        }
        for (int i = 0; i < (int)b.length(); ++i) {
            p2[b[i] - 'a'].push_back(i);
            for (int j = 0; j < 26; ++j) {
                prv2[i + 1][j] = prv2[i][j] + (b[i] == 'a' + j);
            }
        }

        vector <long long> h1[26], h2[26];

        for (int i = 0; i < 26; ++i) {
            h1[i].resize(p1[i].size() + 1);
            h1[i][0] = 0;
            for (int j = 0; j < p1[i].size(); ++j) {
                h1[i][j + 1] = h1[i][j] * pp + p1[i][j] + 1;
            }
        }

        for (int i = 0; i < 26; ++i) {
            h2[i].resize(p2[i].size() + 1);
            h2[i][0] = 0;
            for (int j = 0; j < p2[i].size(); ++j) {
                h2[i][j + 1] = h2[i][j] * pp + p2[i][j] + 1;
            }
        }

        int q = nxt();

        while (q--) {
            int i = nxt() - 1, j = nxt() - 1, k = nxt();
            vector <long long> H1(26), H2(26);
            for (int u = 0; u < 26; ++u) {
                int l = prv1[i][u];
                int r = prv1[i + k][u];

                //cout << (char)(u + 'a') << " " << l << " " << r << "\n";

                H1[u] = (h1[u][r] - h1[u][l] * pw[r - l] - i * spw[r - l - 1]);

                l = prv2[j][u];
                r = prv2[j + k][u];


                //cout << (char)(u + 'a') << " " << l << " " << r << "\n";

                H2[u] = (h2[u][r] - h2[u][l] * pw[r - l] - j * spw[r - l - 1]);
            }
            sort(H1.begin(), H1.end());
            sort(H2.begin(), H2.end());
            puts(H1 == H2 ? "yes" : "no");
        }
    }

#ifdef LOCAL
    cout << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC * 1000 << " ms." << endl;
#endif
    return 0;
}
