/*
    Author:-Sarthak Taneja
    CSE 2nd year,MNNIT Allahabad
*/
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair< int,int > ii;
typedef vector< ii > vii;

#define sfd(x) scanf("%d",&x)
#define sfs(x) scanf("%s",x)
#define sff(x) scanf("%lf",&x)
#define mod 1000000007
#define MAX 1000000
#define pb push_back
#define mp make_pair
#define fr first 
#define sc second
#define testcases scanf("%d",&t);while(t--)
#define ffor(a,b,c) for(a=b;a<c;a++)
#define rfor(a,b,c) for(a=b;a>=c;a--)

int n;
int bit[3][100005]={0};

void addSum(int index,int value,int bit_index)
{
	for(int i=index;i<=100000;i += (i & -i))
	{
		bit[bit_index][i]= (bit[bit_index][i] + value)%mod; 
	}
}

int getSum(int index,int bit_index)
{
	int sum=0;
	for(int i=index;i>=1;i -= (i & -i))
	{
		sum= (sum + bit[bit_index][i])%mod;
	}
	return sum;
}

int main()
{
	int i,j,t;
	int a[100005];
	cin>>n;
	for(i=1;i<=n;i++)
		sfd(a[i]);

	ll ans=0;

	for(i=1;i<=n;i++)
	{
		int l=getSum(a[i]-1,0);
		int r=(getSum(100000,0) - getSum(a[i],0)+ mod)%mod;
		int dp0=(getSum(100000,2) - getSum(a[i],2) + r + mod)%mod;
		int dp1=(getSum(a[i]-1,1) + l)%mod;

//		printf("%d %d\n",dp0,dp1);
		addSum(a[i],1,0);
		addSum(a[i],dp0,1);
		addSum(a[i],dp1,2);
		ans=(ans + dp0 + dp1)%mod;
	}

	printf("%lld\n",ans);
	return 0;
}