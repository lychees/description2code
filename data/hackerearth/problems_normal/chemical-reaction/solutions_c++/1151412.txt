//Utkarsh Saxena
#include<iostream>
#include<limits.h>
#include<map>
#include<vector>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<queue>
using namespace std;
#define lld signed long long int
int n;
int tree[5*100000+5];
int read(int idx){
	int sum = 0;
	while (idx > 0){
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
void update(int idx ,int val){
	while (idx <= n){
		tree[idx] += val;
		idx += (idx & -idx);
	}
}
int bin(int i,int j,int x)
{
	if(i==j)return i;
	int mid=((i+j)/2);
	if(read(mid)>=x)return bin(i,mid,x);
	return bin(mid+1,j,x);
}
char s[5*100000+5][15];
lld d[5*100000+5];
int main()
{
	int t,j,x;
	cin>>t;
	while(t--)
	{
		lld ans=0;
		cin>>n;
		for(int i=1;i<=n;++i)
		{
			scanf("%s ",&s[i]);
		}
		for(int i=1;i<=n;++i)
		{
			scanf("%lld",&d[i]);
			update(i,1);
		}
		for(int i=1;i<=n-1;++i)
		{
			scanf("%d",&x);
			j=bin(1,n,x);
			ans=max(ans,d[j]);
			printf("%s %lld\n",s[j],ans);
			update(j,-1);
		}
		j=bin(1,n,1);
		ans=max(ans,d[j]);
		printf("%s %lld\n",s[j],ans);
		update(j,-1);

	}
}
