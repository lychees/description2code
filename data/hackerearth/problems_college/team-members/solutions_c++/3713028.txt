#include <bits/stdc++.h>
using namespace std;
#define ms(s, n) memset(s, n, sizeof(s))
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define FORd(i, a, b) for (int i = (a) - 1; i >= (b); i--)
#define FORall(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
#define sz(a) int((a).size())
#define all(a) (a).begin(), (a).end()
#define uni(a) (a).erase(unique(all(a)), (a).end())
#define pb push_back
#define pf push_front
#define mp make_pair
#define fi first
#define se second
#define prec(n) fixed<<setprecision(n)
#define bit(n, i) ((n) & (1LL << (i)))
#define bitcount(n) __builtin_popcount(n)
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pi;
typedef vector<int> vi;
typedef vector<pi> vii;
#define EPS 1e-9
const int MOD = (int) 1e9 + 7;
const int INF = (int) 1e9;
const ll LINF = (ll) 1e18;
const ld PI = 2 * acos((ld) 0);
ll gcd(ll a, ll b) {ll r; while (b != 0) {r = a % b; a = b; b = r;} return a;}
ll lcm(ll a, ll b) {return a / gcd(a, b) * b;}
ll fpow(ll n, ll k, int p = MOD) {ll r = 1; for (; k; k >>= 1) {if (k & 1) r = r * n % p; n = n * n % p;} return r;}
void addmod(int& a, int val, int p = MOD) {if ((a = a + val) >= p) a -= p;}
int n, d, k;
map<vi, int> tb;
int p[15] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
void solve() {
	string s;
	cin>>s>>d>>k;
	n = sz(s);
	ll ans = 0;
	FOR(i, 0, 1 << n) if (bitcount(i) == n / 2) {
		int j = n ^ i;
		int u = n / 2, v = n - u;
		vi a, b;
		FOR(j, 0, n) {
			if (bit(i, j)) a.pb(s[j] - '0');
			else b.pb(s[j] - '0');
		}
		sort(all(a)); sort(all(b));
		if (tb[a]) continue; tb[a] = 1;
		vector<pair<int, int> > V1, V2;
		int X = 1;
		FOR(j, 0, v) X = 10 * X % d;
		do {
			int t = 0, r = 0;
			FOR(j, 0, u) {
				t = 10 * t + a[p[j]];
				r = (10 * r + a[p[j]]) % d;
			}
			V1.pb(mp(t, r * X % d));
		}
		while (next_permutation(p, p + u));
		do {
			int t = 0, r = 0;
			FOR(j, 0, v) {
				t = 10 * t + b[p[j]];
				r = (10 * r + b[p[j]]) % d;
			}
			V2.pb(mp(t, r));
		}
		while (next_permutation(p, p + v));
		sort(all(V1)); uni(V1);
		sort(all(V2)); uni(V2);
		int cnt[1010]; ms(cnt, 0);
		FOR(j, 0, sz(V1)) {
			cnt[V1[j].se]++;
		}
		FOR(j, 0, sz(V2)) {
			ans += cnt[(k - V2[j].se + d) % d];
		}
	}
	cout<<ans;
}
int main() {
	ios_base::sync_with_stdio(0); cin.tie(0);
#ifdef _LOCAL_
    freopen("in.txt", "r", stdin); //freopen("out.txt", "w", stdout);
#endif
    solve();
#ifdef _LOCAL_
    //printf("\nTime elapsed: %dms", 1000 * clock() / CLOCKS_PER_SEC);
#endif
    return 0;
}