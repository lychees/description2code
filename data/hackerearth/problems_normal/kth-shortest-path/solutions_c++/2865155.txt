#include<bits/stdc++.h>
using namespace std;
int arr[102][102];
bool obs[102][102];
vector<int> dp[102][102];
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int m,n,tx,ty,k,q,temp;
		cin>>m>>n;
		for (int i=0;i<m;i++)
		{
        	for (int j=0;j<n;j++) 
        		obs[i][j] = false, dp[i][j].clear();
        }
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
			{
				string s;
				stringstream ss;
				ss.clear();
				cin >> s;
				if ( s == "##" ) obs[i][j] = true, arr[i][j] = -999;
				else 
				{
				    ss << s;
				    ss >> arr[i][j];
				}
			}
		}
		if (!obs[0][0])
		dp[0][0].push_back(arr[0][0]);
		for(int col=1;col<n;col++)
		{
			if(!obs[0][col])
			{
					if(dp[0][col-1].size()>0) dp[0][col].push_back(dp[0][col-1][0]+arr[0][col]);
			}
		}
		for(int row=1;row<m;row++)
		{
			if(!obs[row][0])
			{
				
					if(dp[row-1][0].size()>0) dp[row][0].push_back(dp[row-1][0][0]+arr[row][0]);
				
			}
		}
		for(int row=1;row<m;row++)
		{
			for(int col=1;col<n;col++)
			{
				if(!obs[row][col])
				{
					int i=0,j=0,cnt=0;
					int row_size=dp[row-1][col].size();
					int col_size=dp[row][col-1].size();
					while(i<row_size && j<col_size && cnt != 101)
					{
						if(dp[row-1][col][i]<dp[row][col-1][j])
							dp[row][col].push_back(dp[row-1][col][i]+arr[row][col]),i++,cnt++;
						else
							dp[row][col].push_back(dp[row][col-1][j]+arr[row][col]),j++,cnt++;
					}
					if(i<row_size)
					for(i;i<row_size && cnt!=101;i++,cnt++)
						dp[row][col].push_back(dp[row-1][col][i]+arr[row][col]);
					if(j<col_size)
					for(j;j<col_size && cnt!=101;j++,cnt++)
						dp[row][col].push_back(dp[row][col-1][j]+arr[row][col]);
				}
			}
		}
		scanf("%d",&q);

		while(q--)
		{
			scanf("%d",&tx);
			scanf("%d",&ty);
			scanf("%d",&k);
			if(obs[tx][ty])
				cout<<"Obstacle"<<endl;
			else if(dp[tx][ty].size()<k)
				cout<<"Not so many paths"<<endl;
			else
			cout<<dp[tx][ty][k-1]<<endl;
		}
	}
}