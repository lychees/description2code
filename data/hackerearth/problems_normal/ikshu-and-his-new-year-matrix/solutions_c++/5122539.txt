#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define MOD 1000000007
#define MAX 100005
#define INF 1000000000
bool prime[100005];
int a[1005][1005],ans[100005];
void sieve()
{
		int i,j;
		int n = 10002;
		for(i= 2;i <= n;i++){
			prime[i] = true;
		}
		for(i = 2;i*i <= n;i++){
				if(prime[i])
				for(j = i*i;j <= n;j+=i){
						prime[j] = false;
				}
		}
}
int main()
{
	int n,k,i,j,flag,count,res;
	sieve();
	cin >> n >> k;
	ans[10000] = -1;
	for(i = 9999;i > 0;i--){
			flag = 0;
			count = 0;
			if(prime[i]){
				continue;
			}
			if(i+k > 10000){
				ans[i] = -1;
				continue;
			}
			else{
				if(ans[i+k] == -1){
					ans[i] = -1;
				}
				else{
					ans[i]  = ans[i+k] + 1;
				}
			}
	}
/*	for(i = 950;i >= 950;i++){
		cout << ans[i] << " ";
	}*/
	for(i = 0;i < n;i++){
		for(j = 0;j < n;j++){
			cin >> a[i][j];
		}
	}
	int cost = INF;
	int ansx=-1,ansy=-1;
	for(i = 1;i < n-1;i++){
		for(j = 1;j < n-1;j++){
			res = 0;
			if(ans[a[i][j]] == -1){
				continue;
			}
			else{
				res += ans[a[i][j]];
			}
			if(ans[a[i-1][j-1]] == -1){
				continue;
			}
			else{
				res += ans[a[i-1][j-1]];
			}
			if(ans[a[i+1][j+1]] == -1){
				continue;
			}
			else{
				res += ans[a[i+1][j+1]];
			}
			if(ans[a[i-1][j+1]] == -1){
				continue;
			}
			else{
				res += ans[a[i-1][j+1]];
			}
			if(ans[a[i+1][j-1]] == -1){
				continue;
			}
			else{
				res += ans[a[i+1][j-1]];
			}
			if(res < cost){
				cost = res;
				ansx = i+1;
				ansy = j+1;
			}
		}
	}
	if(cost == INF){
		cout << "no";
		return 0;
	}
	else{
		cout << "yes\n";
		cout << cost << endl;
		cout << ansx << " " << ansy;
	}
    return 0;
}
