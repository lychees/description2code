#include <boost/multiprecision/cpp_int.hpp>
#include <iostream>
namespace mp = boost::multiprecision;
using namespace std;

int gcd(int k,int m)
{
	//cout<<"gcd iss     "<<k<<"  "<<m<<"\n";
	if(m==0)
	return k;
	return gcd (m,k%m);
}
int main()
{
   int test;
   cin>>test;
   while(test--)
   {
   	  int n;
   	  cin>>n;
   	  int a[n];
   	    mp::cpp_int lcm = 1;
   	  for(int i=0;i<n;i++)
   	    cin>>a[i];
   	  //lcm = (((a[0]*a[1])%1000000007)/gcd(a[0],a[1]))%1000000007;
   	  for(int i=0;i<n;i++)
   	  {
   	  	//cout<<lcm<<"  "<<a[i]<<"  "<<gcd(lcm,a[i])<<"\n";
   	  	lcm = (((lcm*a[i]))/gcd(lcm,a[i]));
   	  //	cout<<lcm<<"\n";
   	  }
   	  cout<<lcm%1000000007<<"\n";
   }
}
