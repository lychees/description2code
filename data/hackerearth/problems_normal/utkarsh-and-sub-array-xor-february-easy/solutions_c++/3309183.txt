#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 6;

const int mod = 1e9 + 7;

long long l, r, cur;

int n, a[N], b[N], sz, p[N], m;

map < long long, int > all;

int id(long long x)
{
	if (all.count(x)) return all[x];
	return all[x] = ++sz;
}

int get(int x)
{
	if (p[x] == x) return x;
	return p[x] = get(p[x]);
}

int mult(int a, int b)
{
	return (1ll * a * b) % mod;
}

int sum(int a, int b)
{
	a += b;
	if (a >= mod) a -= mod;
	return a;
}

int bp(int a, long long n)
{
//	n %= (mod - 1);
	int ans = 1;
	while(n)
	{
		if (n & 1) ans = mult(ans, a);
		a = mult(a, a);
		n >>= 1;
	}
	return ans;
}

void Union(int a, int b)
{
	a = get(a), b = get(b);
	if (a == b) return;
	cur--;
	p[b] = a;
}

int main()
{
	cin >> n >> m; cur = n;
	for (int i = 1;i <= m;i++)
	{
		cin >> l >> r; l--;
		a[i] = id(l), b[i]= id(r);
	}
	for (int i = 1;i <= sz;i++) p[i] = i;
	for (int i = 1;i <= m;i++)
	{
		Union(a[i], b[i]);
		cout << bp(2, cur) << endl;
	}
	return 0; 	
}