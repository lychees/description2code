#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
using namespace std;
#define MAX 500001
bool use[MAX];
map<int,int> v[MAX];
int kari[MAX];
long long int ans[MAX];
long long int MOD = 1e9 + 7;
int main(){
	for (int i = 2; i < MAX; i++){
		if (!use[i]){
			use[i] = true;
			for (int j = i; j < MAX; j += i){ 
				int countt = 0;
				int jj = j;
				while (jj%i == 0){
					countt++;
					jj /= i;
				}
				use[j]=true;
				v[j][i] = countt;
			}
		}
	}
	int t;
	scanf("%d",&t);
//	while(t--){
//	int n;
//	scanf("%d", &n);
	long long int anss=1LL;
	ans[1]=anss;
	for (int i = 2; i <MAX; i++){
		map<int, int>::iterator ite;
		for (ite = v[i].begin(); ite != v[i].end(); ite++){
				if(kari[(*ite).first]<(*ite).second){
					int co=(*ite).second-kari[(*ite).first];
					while(co--){
						anss*=(*ite).first;
						anss%=MOD;
					}
				}
				kari[(*ite).first] = max(kari[(*ite).first], (*ite).second);
		}
		ans[i]=anss;
	}
	while(t--){
		int n;
		scanf("%d",&n);
		printf("%lld\n",ans[n]);
	}
	return 0;
}