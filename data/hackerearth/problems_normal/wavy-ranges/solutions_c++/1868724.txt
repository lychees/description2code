#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
//#define mod 1000000000
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 1005

ull n, k;
ull F[10][20][2], G[20];
int a[20], num, test;

ull cal(ull x){

	if(x == 0) return 0;
	num = 0;
	while(x){
		a[++num] = x % 10;
		x /= 10;
	}

	int h = -1;

	ull res = 0;
	For(i, 1, a[num] - 1) {
		res += F[i][num][0];
		if(num != 1) res += F[i][num][1];
	}
	For(i, 1, num - 1) res += G[i];

	Ford(i, num - 1, 1){
		if(h == 0 || h == -1){
			For(j, a[i + 1] + 1, a[i] - 1){
				res += F[j][i][0];
			}
		}
		if(h == 1 || h == -1){
			For(j, 0, min(a[i + 1], a[i]) - 1){
				res += F[j][i][1];
			}
		}
		if(a[i] == a[i + 1]) break;
		if(h == -1){
			if(a[i + 1] > a[i]) h = 0;
			else h = 1;
		} else if(h == 1){
			if(a[i + 1] > a[i]) h = 0;
			else break;
		} else{
			if(a[i + 1] < a[i]) h = 1;
			else break;
		}
		if(i == 1) res++;
	}
	if(num == 1) res++;
	return res;
}

void solve(int itest){
	cin >> n >> k;
	ull x = cal(n);
	if(x < k){
		cout << -1 << " ";
	} else{
		ull l = 0, r = n, mid;
		while(l < r){
			mid = (l + r) >> 1;
			if(cal(mid) >= x - k) r = mid;
			else l = mid + 1;
		}
		cout << l + 1 << " ";
	}

	x = cal(n - 1);
	ull T = (ull)(1e18 + 0.5);

	if(cal(T) < x + k){
		cout << -1 << endl;
	} else{
		ull l = 0, r = T + T, mid;
		while(l < r){
			mid = (l + r) >> 1;
			if(cal(mid) > x + k) r = mid;
			else l = mid + 1;
		}
		cout << min(r - 1, T) << endl;
	}
}

void init(){
	ms(F, 0); ms(G, 0);
	Rep(i, 10) Rep(j, 2) F[i][1][j] = 1;
	For(len, 2, 19){
		Rep(i, 10){
			for(int k = 0; k < i; k++){
				F[i][len][0] += F[k][len - 1][1];
			}
			for(int k = i + 1; k < 10; k++){
				F[i][len][1] += F[k][len - 1][0];
			}
		}
	}

	For(len, 1, 19) {
		For(i, 1, 10) {
			G[len] += F[i][len][0];
			if(len != 1) G[len] += F[i][len][1];
		}
	}
}

int main(){

//	freopen("in.txt", "r", stdin);
//	freopen("out.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	init();

//	cout << cal(1000000000000000000ll) << endl;
//	cout << cal(974000000000000001ll) << endl;

    cin >> test;
    For(itest, 1, test){
    	solve(itest);
    }

    return 0;
}
