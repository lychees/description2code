#include <cstdio>
#include <cstring>
#include <cassert>
#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

#define TRACE(x) cerr << #x << " = " << x << endl

typedef long long ll;
typedef pair<int, int> P;
#define X first
#define Y second

const int MAX = 305;

int a[MAX];
int f[2*MAX], sor[2*MAX];
int n, m;
vector <int> V[MAX];
int spojen[MAX];
int bio[MAX];

int Match(int node)
{
  if (bio[node])
    return 0;
  bio[node] = 1;

  for (auto it : V[node])
    if (spojen[it] == -1 || Match(spojen[it])) {
      spojen[it] = node;
      return 1;
    }

  return 0;
}

int Moze(int val)
{
  for (int i=0; i<n; i++) {
    V[i].clear();

    for (int j=0; j<n; j++)
      if (f[i+a[j]] <= sor[val])
        V[i].push_back(j);
  }

  memset(spojen, -1, sizeof spojen);
  for (int i=0; i<n; i++) {
    memset(bio, 0, sizeof bio);
    if (!Match(i))
      return 0;
  }

  return 1;
}

int main()
{
  scanf("%d%d", &n, &m);

  for (int i=0; i<n; i++)
    scanf("%d", &a[i]);

  for (int i=0; i<n+m-1; i++) {
    scanf("%d", &f[i]);
    sor[i] = f[i];
  }

  sort(sor, sor + n+m-1);
  int lo = 0, hi = n+m-1;

  for (; lo<hi; ) {
    int mid = (lo + hi) / 2;
    if (Moze(mid))
      hi = mid;
    else
      lo = mid + 1;
  }

  printf("%d\n", sor[lo]);

  return 0;
}

