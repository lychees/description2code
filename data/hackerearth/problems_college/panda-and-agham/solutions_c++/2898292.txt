#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
using namespace std;

typedef long int ll;

ll pts[100002];

inline ll Scan_f()
{
    ll noRead=0;
    register char p=getchar_unlocked();
    //register char p=getc(stdin);
    for(;p<48 || p>57;p=getchar_unlocked());
    //for(;p<48 || p>57;p=getc(stdin));
    while(p>47 && p<58){ noRead = (noRead << 3) + (noRead << 1) + (p - '0');p=getchar_unlocked();}
    //while(p>47 && p<58){ noRead = (noRead << 3) + (noRead << 1) + (p - '0');p=getc(stdin);}
    return noRead;
};

bool solve(ll dis,ll n,ll k)
{
    ll i,ctr = 1,prev;
    prev = pts[0];
    for(i=1;i<n;i++)
    {
        if((pts[i]-prev) >= dis)
        {
            ctr++;
            prev = pts[i];
        }
    }
    if(ctr >= k)
    {
        return true;
    }
    else
    {
        return false;
    }
}

int main()
{
    ll T,n,i,k,low,mid,high;
    T = Scan_f();
    while(T > 0)
    {
        n = Scan_f();
        k = Scan_f();
        for(i=0;i<n;i++)
        {
            pts[i] = Scan_f();
        }
        sort(pts,pts+n);
        low = 0;
        high = pts[n-1]-pts[0]+1;
        while(high-low > 1)
        {
            mid = (low+high)/2;
            if(solve(mid,n,k))
            {
                low = mid;
            }
            else
            {
                high = mid;
            }
        }
        printf("%ld\n",low);
        T--;
    }
 return 0;
}
