using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

ll canhai(ll n)
{
    ll fi,la,mid;
    fi=0;
    la=n+1;
    while (fi+1<la)
    {
        mid=fi/2+la/2;
        if (fi%2 && la%2) mid++;
        if (mid>n/mid) la=mid;
        else fi=mid;
    }
    return fi;
}

ll power(ll a, ll n, ll m)
{
    if (n==0) return 1;
    ll tmp,c;
    tmp=c=a;
    n--;
    while (n)
    {
        if (n%2) tmp=tmp*c%m;
        c=c*c%m;
        n/=2;
    }
    return tmp;
}

struct node
{
    int gt,vt;
};

int test;
string s;
node f[100+10];

bool cmp(node a, node b)
{
    return (a.gt<b.gt || (a.gt==b.gt && a.vt<b.vt));
}

void xuli()
{
    FORE(i,0,25) f[i].gt=0;
    cin >> s;
    FOR(i,0,s.length()) f[ s[i]-'a' ].gt++;

    FORE(i,0,25) f[i].vt=i;

    sort(f,f+25+1,cmp);

    FORE(i,0,25)
    FORE(j,1,f[i].gt) cout << (char) (f[i].vt+97);
    cout << "\n";
}

int main()
{
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen("sorted-string.out", "w", stdout);
    cin >> test;
    while (test--) xuli();
}

