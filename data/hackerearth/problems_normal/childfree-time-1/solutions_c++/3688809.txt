#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define pll pair<ll,ll>
vector<pll> adj[1000000+5];
vector<pll> rever[1000000+5];
bool marked[1000000+5];
ll dist[1000000+5];
vector<ll> list1;
 ll dfs(ll start) {

        marked[start] = true;

        for(pll pp : rever[start])
        {
            ll v = pp.first;
            if(!marked[v])
            {
                ll x = pp.second + dfs(v);
               dist[start] =  max(dist[start], x);
            }
            else
                dist[start] = max(dist[start], dist[v] + pp.second);
        }
        return dist[start] = 2+ dist[start];
    }

   int main()
   {
       ll n,m,w;
       cin>>n>>m;
       for(ll i=0; i<=n; i++)
        {

            marked[i] = false;
            dist[i] = 0;
        }
         for(ll i=0; i<m; i++)
        {
           ll x,y;
           cin>>x>>y>>w;
           x--;
           y--;
           adj[x].push_back(make_pair(y,w));
           rever[y].push_back(make_pair(x,w));

        }
        for(ll i=0; i<n; i++)
        {
            if(adj[i].size()==0)
                list1.push_back(i);
        }
         ll maxi = 0;
        for(ll x:list1)
        {

            if(!marked[x])
            {
                dfs(x);
                dist[x]-=2;
                maxi = max(maxi, dist[x]);
               // out.println("Holla");
            }
        }
       // out.println(Arrays.toString(dist));
        cout<<maxi;

   }



