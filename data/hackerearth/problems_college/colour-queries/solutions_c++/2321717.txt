#include <iostream>
#include <algorithm>
using namespace std;

int adj[110][110];
bool visited[110][110];

int dx[] = {1,0,-1,0};
int dy[] = {0,1,0,-1};

int n,m,cnt;

int dfs(int x,int y,int d) {
	if(x<0 || y<0 || x>=n || y>=m) return 0;
	if(visited[x][y]) return 0;
	visited[x][y] = true;
	int cnt=0,temp_x,temp_y;
	for(int i=0; i<4; i++) {
		temp_x = x;
		temp_y = y;
		
		temp_x += dx[i];
		temp_y += dy[i];
		
		if(temp_x>=0 && temp_x<n && temp_y>=0 && temp_y<m && abs(adj[x][y]-adj[temp_x][temp_y])<=d && (!visited[temp_x][temp_y]))  {
			cnt++;
			cnt+=dfs(temp_x,temp_y,d);
		}
	}
	return cnt;
	
}

int main()
{
    int q;
    scanf("%d %d %d",&n,&m,&q);
    
    for(int i=0; i<n; i++)
    	for(int j=0; j<m; j++) 
    		scanf("%d",&adj[i][j]);
    
    for(int i=0; i<q; i++) {
    	int x,y,d;
    	scanf("%d %d %d",&x,&y,&d);
    	for(int a=0; a<n; a++)
    		for(int b=0; b<m; b++)
    			visited[a][b]=false;
    	cnt = 0;
    	x--;
    	y--;
    	printf("%d\n",dfs(x,y,d)+1);
    }
    return 0;
}
