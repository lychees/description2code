#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>

int main()
{
	int t, n;
	std::cin >> t;
	
	while (t--)
	{
		std::cin >> n;
		std::vector<std::string> vs(n);
		std::map<char, int> mci;
		
		for (int i = 0; i < n; ++i)
		{
			std::cin >> vs.at(i);
		}
		
		for (int i = 0; i < n; ++i)
		{
			std::set<char> sc;
			std::string s = vs.at(i);
			
			for (int i = 0; i < s.size(); ++i)
			{
				if (sc.find(s.at(i)) == sc.end())
				{
					++mci[s.at(i)];
				}
				
				sc.insert(s.at(i));
			}
		}
		
		auto p = std::max_element(mci.begin(), mci.end(), 
					[](const std::pair<int, char> &p1, const std::pair<int, char> &p2) {return p1.second < p2.second;});
		
		std::cout << p->first << std::endl;
	}
	
	return 0;	
}
