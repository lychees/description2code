#include<bits/stdc++.h>
using namespace std;
int zarr[300500];
void zarray(string &s)
{
    int i,n;
    n=s.length();
    int left=0,right=0;
    int k;
    zarr[0]=0;
    for(k=1;k<n;++k)
    {
        if(k>right)
        {
            left=right=k;
            while(right<n&&s[right]==s[right-left])
                ++right;
            zarr[k]=right-left;
            --right;
        }
        else
        {
            i=k-left;
            if(zarr[i]<right-k+1)
                zarr[k]=zarr[i];
            else
            {
                left=k;
                while(right<n&&s[right]==s[right-left]) ++right;
                zarr[k]=right-left;
                --right;
            }
        }
    }
}
int Zpattern_match(string &s,string &pat)
{
    string temp="";
    temp+=pat;
    temp+='$';
    temp+=s;
    //int zarr[temp.length()+2];
    zarr[0]=0;
    zarray(temp);
    int i,n=temp.length();
    int pat_len=pat.length();
    int c=0;
    for(i=pat_len;i<n-pat_len;++i) if(zarr[i]==pat_len) ++c;
    return c;
}
string a,b,temp;
void sol()
{
   cin>>a>>b;
    temp=b+b;
  cout<<Zpattern_match(temp,a)<<endl;
}
int main()
{
    int t;
    cin>>t;
    while(t--) sol();
    return 0;
}
