//6:24-6:36
#include<bits/stdc++.h>
#define REP(i,n) for (int i=0;i<n;i++) 
#define MP make_pair
#define pb push_back
using namespace std;
int n,q,d[100010],dist[100010],x,u,v,l=0,ewt,INF=1e9;
set<pair<int,int> > dijk;
int main() {
	ios::sync_with_stdio(false);cin.tie(0);
	cin>>n>>q;
	REP(i,n) cin>>d[i],l=(d[i]<d[l]?i:l);
	swap(d[0],d[l]);
	REP(i,100009) dist[i]=INF;
	dijk.insert(MP(0,0));dist[0]=0;
	for (int i=1;i<n;i++) dijk.insert(MP(INF,i));
	while (!dijk.empty()) {
		pair<int,int> cur=*dijk.begin();
		dijk.erase(dijk.begin());
		u=cur.second; l=cur.first;
		for (int i=1;i<n;i++) {
			v=(u+d[i])%d[0];
			ewt=d[i];
			if (dist[v]>dist[u]+ewt) {
				dijk.erase(MP(dist[v],v));
				dist[v]=dist[u]+ewt;
				dijk.insert(MP(dist[v],v));
			}
		}
	}
	while (q--) {
		cin>>x;
		if (dist[(x%d[0])]<=x) cout<<"YES\n"; else cout<<"NO\n";
	}
}