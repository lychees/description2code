#include <cmath>
#include <cstdio>
#include <vector>
#include <map>
#include <set>
#include <iostream>
#include <algorithm>
using namespace std;

typedef long long ll;

int main()
{

	ll ii, t;
	cin >> t;

	for (ii = 0; ii < t; ii++)
	{
		ll i, j, k, p, n, ifz = 0;

		cin >> n;

		vector<ll> pot(n + 1);

		for (i = 1; i <= n; i++)
		{
			cin >> pot[i];
		}

		if (n == 1)
		{
			cout << pot[1] << ' ' << pot[1] << endl;

			continue;
		}

		sort(pot.begin() + 1, pot.end());

		vector<ll>::iterator it;

		for (i = 1; i < pot.size(); i++)
		{
			if (pot[i] > 0)
			{
				break;
			}
		}

		for (p = 1; p < pot.size(); p++)
		{
			if (pot[p] >= 0)
			{
				break;
			}
		}


		if (pot[p] == 0)
		{
			ifz = 1;
		}

		p--;

		ll max = 1, temp = 1, min = 1;

		for (k = i; k < pot.size(); k++)
		{
			temp *= pot[k];
		}

		max = temp;

		for (j = 1; j <= ((p) / 2) * 2; j++)
		{
			max *= pot[j];
		}

		if (p % 2 != 0)
		{
			min *= pot[j] * max;

			if (ifz == 1 && p == 1 && i == pot.size())
				max = 0;

			cout << max << ' ' << min << endl;

			continue;
		}

		if (p % 2 == 0 && p != 0)
		{
			min = max / (pot[j - 1]);

			cout << max << ' ' << min << endl;

			continue;
		}

		if (ifz == 1 && p == 0 && i != pot.size())
		{
			cout << temp << ' ' << 0 << endl;

			continue;
		}

		if (ifz == 1 && p == 0 && i == pot.size())
		{
			cout << 0 << ' ' << 0 << endl;

			continue;
		}

		if (i == 1)
		{
			cout << temp << ' ' << pot[1] << endl;

			continue;
		}
	}

		return 0;
}