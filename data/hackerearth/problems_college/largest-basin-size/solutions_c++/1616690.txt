#include <iostream>
using namespace std;
void dfs(int i, int j, int **a, bool **b);

int maxi,n,m,count;

int main() {
	int i,j;
	int **a;
	bool **b;
	cin>>n>>m;
	maxi = 0;
	a = new int*[n];
	for(i = 0; i < n; i++) {
		a[i] = new int[m];
	}	
	b = new bool*[n];
	for(i = 0; i < n; i++) {
		b[i] = new bool[m];
	}	
	for(i = 0; i < n; i++) {
		for(j = 0; j < m; j++)
			cin>>a[i][j];
	}
	for(i = 0; i < n; i++) {
		for(j = 0; j < m; j++) {
			if(!b[i][j]) {
				count = 1; 
				b[i][j] = true;
				dfs(i,j, a,b);
				
			}
		}
	}
	cout<<maxi<<endl;
	return 0;
}

void dfs(int i, int j, int **a, bool **b) {
	for(int k = i; k <= i+1; k++) {
		for(int l = j-1; l <= j+1; l++) {
			if(k >= 0 && k < n && l >= 0 && l < m) {
				if(!b[k][l] && a[k][l] == a[i][j]) {
					count++;
					b[k][l] = true;
					if(count > maxi) 
						maxi = count;
					dfs(k, l, a, b);
				}
			}
		}
	}
	
}