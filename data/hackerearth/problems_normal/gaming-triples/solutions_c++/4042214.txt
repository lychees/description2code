#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
using namespace std;
class BIT
{
	vector<int> data;
public:
	BIT(int sz):data(sz){}
	long long query(int idx)
	{
		if(idx<0) return 0;
		int ans = data[0];
		while(idx)
		{
			ans+=data[idx];
			idx&=idx-1;
		}
		return ans;
	}
	void update(int idx,int delta)
	{
		if(idx==0)
		{
			data[0]+=delta;return;
		}
		while(idx<data.size())
		{
			data[idx]+=delta;
			idx+=idx&-idx;
		}
	}
};
int arr[100010];
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
    	int n;
    	scanf("%d",&n);
    	BIT b1(n),b2(n);
    	vector<int> ds;
    	for(int i=0;i<n;++i)
    	{
    		scanf("%d",&arr[i]);
    		ds.push_back(arr[i]);
    	}
    	int c;
    	scanf("%d",&c);
    	sort(ds.begin(),ds.end());
    	ds.erase(unique(ds.begin(),ds.end()),ds.end());
    	for(int i=0;i<n;++i)
    	{
    		arr[i] = lower_bound(ds.begin(),ds.end(),arr[i])-ds.begin();
    		b2.update(arr[i],1);
    	}
    	long long ans1=0,ans2=0;
    	for(int i=0;i<n;++i)
    	{
    		ans1+=b1.query(arr[i]-1)*b2.query(arr[i]-1);
    		ans2+= (i-b1.query(arr[i]))*(n-i-b2.query(arr[i]));
    		b1.update(arr[i],1);
    		b2.update(arr[i],-1);
    	}
    	const char * names[]{"Ananya","Sarika"};
    	if(ans1<=ans2)
    	{
    		printf("%s\n%lld\n",names[!c],ans1*2);
    	}
    	else printf("%s\n%lld\n",names[c],ans2*2+1);
    	
    }
    return 0;
}
