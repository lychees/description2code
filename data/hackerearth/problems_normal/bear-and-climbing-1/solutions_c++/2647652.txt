#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v; ll w; };

ll MOD = 1000000007;
ll _MOD = 1000000009;
ll INF = LLONG_MAX / 10;
double EPS = 1e-10;

int main() {
	int N; cin >> N;
	vector<int> x(N), y(N);
	for (int i = 0; i < N; i++)
		scanf("%d%d", &x[i], &y[i]);
	vector<i_i> z(N);
	for (int i = 0; i < N; i++)
		z[i] = i_i(y[i] - x[i], i);
	sort(z.begin(), z.end());
	reverse(z.begin(), z.end());
	ll lb = 0, ub = INF;
	while (ub - lb > 1) {
		ll L = (lb + ub) / 2;
		vector<int> a(N);
		int j = 0;
		for (int i = 0; i < N; i++) {
			for (; j + 1 < N; j++) {
				ll dx = x[i] - x[j + 1], dy = y[i] - y[j + 1];
				if (dx * dx + dy * dy > L) break;
			}
			a[i] = j;
		}
		a[N - 1] = N;
		int r = 0;
		for (int k = 0; k < N; k++) {
			int i = z[k].second;
			if (i > r) continue;
			r = max(r, a[i]);
		}
		if (r == N) ub = L;
		else lb = L;
	}
	if (ub == INF) ub = -1;
	cout << ub << endl;
}
