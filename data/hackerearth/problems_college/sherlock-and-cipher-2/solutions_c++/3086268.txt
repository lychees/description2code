/*input
9999926826034

 
*/
#include <bits/stdc++.h>
#include <stdlib.h>
using namespace std;
long long mod=1e9+7;
 
typedef long long unsigned llu;
typedef long long int lld;
typedef long ld;
#define rep(i,a,n) for(long long int i = (a); i <= (n); ++i)
#define repI(i,a,n) for(int i = (a); i <= (n); ++i)
#define repD(i,a,n) for(long long int i = (a); i >= (n); --i)
#define repDI(i,a,n) for(int i = (a); i >= (n); --i)
 
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld%lld",&a,&b)
#define sc3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scd(a) scanf("%d",&a)
#define scd2(a,b) scanf("%d%d",&a,&b)
#define scd3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scf(a) scanf("%lf",&a)
#define scf2(a,b) scanf("%lf%lf",&a,&b)
#define scf3(a,b,c) scanf("%lf%lf%lf",&a,&b,&c)
#define prL(a) printf("%lld\n",a)
#define prS(a) printf("%lld ",a)
#define prdL(a) printf("%d\n",a)
#define prdS(a) printf("%d ",a)
#define prfL(a) printf("%lf\n",a)
#define prfS(a) printf("%lf ",a)
#define popcount __builtin_popcountll
#define swap(a,b,t) t=a;a=b;b=t
typedef pair<lld,lld> PA;
 
#define lim 200003
#define lim2 103
inline lld sqr(lld x) { return x * x; }
// map<pair<PA,PA>,lld> M;
// map<string,lld> M,Mn;
// map<lld,lld>::iterator it;
// std::ios::sync_with_stdio(false);
// string S[lim],T[lim],Q[lim];
 
// multiset<lld> S;
// set<PA> S;
// string S[lim];
// stack<lld> S;
// vector<lld> V[lim],Vf[lim];
// vector<lld> X,Y;
// vector<PA> IN[lim];
 
// bool dp[1002][12][12];
// priority_queue<PA> Q;
lld A[lim],B[lim],dp1[lim],dp2[lim];
// lld A[lim];
// PA P[lim];
// char S[lim];
// double dp[1<<18];
lld one,zero,ansR,numNodes;




int main(){
    // std::ios::sync_with_stdio(false);
    lld T,i,j,h,l,r,k,s,a,b,c,d,n,m,w,x,y,v,z,t,p,q,curr,prev,sum,ans,pos,val,countA,secondMin,indicator;
    sc(T);
    while(T--){
    	char A[1002],B[1002];
    	// string A,B;
    	scanf(" %[^\n]s",A);
    	scanf(" %[^\n]s",B);
    	n=strlen(A);
    	m=strlen(B);
    	rep(i,0,n-m){
    		t=1;
    		val=0;
    		indicator=0;
    		rep(j,0,m-1){
    			if(indicator==0){
    				if(B[j]>='A' && B[j]<='Z'){
    					if(A[i+j]<'A' || A[i+j]>'Z') t=0;
    					indicator=1;
    					val=(B[j]-A[i+j]+26)%26;
    				}
    				else if(B[j]>='a' && B[j]<='z'){
    					if(A[i+j]<'a' || A[i+j]>'z') t=0;
    					indicator=1;
    					val=(B[j]-A[i+j]+26)%26;
    				}
    			}
    			else{
    				if(B[j]>='A' && B[j]<='Z'){
    					if(A[i+j]<'A' || A[i+j]>'Z') t=0;
    					x=(B[j]-A[i+j]+26)%26;
    					if(x!=val) t=0;
    				}
    				else if(B[j]>='a' && B[j]<='z'){
    					if(A[i+j]<'a' || A[i+j]>'z') t=0;
    					x=(B[j]-A[i+j]+26)%26;
    					if(x!=val) t=0;
    				}
    			}
    		}
    		if(t==1) break;
    	}
    	// prL(val);
    	rep(i,0,n-1){
    		if((A[i]>='A' && A[i]<='Z')){
    			x=(A[i]-'A'+val)%26;
    			// printf("\nA[i]=%c x=%lld val=%lld\n",A[i],x,val );
    			printf("%c",x+'A');
    		}
    		else if((A[i]>='a' && A[i]<='z')){
    			x=(A[i]-'a'+val)%26;
    			// printf("\nA[i]=%c x=%lld val=%lld\n",A[i],x,val );
    			printf("%c",x+'a');
    		}
    		else printf("%c",A[i]);
    	}
    	printf("\n");
    }
	return 0;
}

