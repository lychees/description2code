#include <iostream>
#include <string.h>
#include <stack>
#include <vector>
using namespace std;
void dfs(vector<int> a[], int vis[], int i)
{
	vector<int>::iterator it;
	for(it=a[i].begin();it!=a[i].end();it++)
	{
		int j=*it;
		if(vis[j]==0)
		{
			vis[j]=1;
			dfs(a,vis,j);
		}
	}
}
int solve(int n, vector<int> a[])
{
	int vis[n], c=0, f=0, i, j;
	memset(vis,0,sizeof(vis));
	vector<int>::iterator it;
	for(i=0;i<n;i++)
	{
		if(vis[i]==0)
		{
			vis[i]=1;
			dfs(a,vis,i);
			c++;
		}
	}
	return c;
}
int main()
{
	int t, n, e, x, y;
	cin>>t;
	while(t--)
	{
		cin>>n;cin>>e;
		vector<int> a[n];
		while(e--)
		{
			cin>>x>>y;
			a[x].push_back(y);
			a[y].push_back(x);
		}
		cout<<solve(n,a)<<endl;
	}
    return 0;
}
