#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
using namespace std;

#define debug(x) cout << '>' << #x << ':' << x << endl;
#define rep(i,n) for(int i=0;i<(n);++i)
#define sd(n) scanf("%d",&n)
#define sdll(n) scanf("%lld",&n)
#define sdd(a,b) scanf("%d"%d",&a,&b)
#define prn(n) printf("%d\n",n)
#define sz() size()
#define prnll(n) printf("%lld\n",n)
#define pb(n) push_back(n)
#define MAX 1000007

inline bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }

const int INF = 1<<29;
typedef unsigned long long ll;

inline int two(int n) { return 1 << n; }
inline int test(int n, int b) { return (n>>b)&1; }
inline void set_bit(int & n, int b) { n |= two(b); }
inline void unset_bit(int & n, int b) { n &= ~two(b); }
inline int last_bit(int n) { return n & (-n); }
inline int ones(int n) { int res = 0; while(n && ++res) n-=n&(-n); return res; }
////////////////////////////////////////////////////////////////////////////
vector<bool>v(MAX,true);
int gcd(int a,int b)
{
    while(b)
    {
        int temp=a;
        a=b;
        b=temp%a;
    }

    return a;
}
void getstart()
{
    v[1]=v[0]=false;
    int k=sqrt(MAX);
    for(int i=2;i<=k;i++)
    {
        if(v[i])
        for(int j=2; i*j <MAX ;j++)
        {
            v[i*j]=false;
        }
    }
}
int main()
{
    getstart();
    int t;
    sd(t);
    while(t--)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        int l= ( (a*b) / gcd(a,b));
      //  debug(l);
        int p=sqrt(l);
        int cnt=0;

      //  debug(p);
        for(int i=1;i<=p; i++ )
        {
            if(l%i==0)
            {
                if(v[i])
                 cnt++;

                if(i!=(l/i) && v[l/i] )
                    cnt++;
            }
        }
       // debug(cnt);
        if(v[cnt])
            cout << "Yes" << endl;
        else
            cout << "No" << endl;

    }
    return 0;
}
