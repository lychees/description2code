import sys
t = int(raw_input())


def findDishes(index, mask, k, f, dp):
    if index == n:
        return 0
    if dp[index][mask] != -1:
        return dp[index][mask]

    ans = sys.maxint
    for i in range(k):
        if f[index][i] == '0':
            continue
        if (mask & (1 << (k-1-i))):
            ans = min(ans, findDishes(index+1, mask, k, f, dp))
        else:
            ans = min(
                ans,
                1 +
                findDishes(
                    index +
                    1,
                    mask | (
                        1 << (
                            k -
                            1 -
                            i)),
                    k,
                    f,
                    dp))
    dp[index][mask] = ans
    return ans


for i in range(t):
    dp = [[-1]*((1 << 10)+10)]*(500+10)
    (n, k) = map(int, raw_input().strip().split(' '))
    f = [None]*n
    for j in range(n):
        f[j] = raw_input()

    ans = findDishes(0, 0, k, f, dp)
    print ans
