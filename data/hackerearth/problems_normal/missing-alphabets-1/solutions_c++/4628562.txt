#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;

map<char, int> order;

bool compare(string a, string b) {
	
	unsigned int i = 0;
	while(i < a.size() && i < b.size()) {
		if(a[i] == b[i]) {
			i++;
			continue;
		}
		return (order[a[i]] < order[b[i]]);
	}
	
	if(i == a.size()) {
		return true;
	}
	return false;
}

int main()
{
    int t, n;
    cin >> t;
    string alphaOrder, str;
    while(t--) {
    	cin >> alphaOrder;
    	vector<string> dict;
    	order.clear();
    	for(int i = 0; i < alphaOrder.size(); i++)
    		order[alphaOrder[i]] = i;
    	cin >> n;
    	for(int i = 0; i < n; i++) {
    		cin >> str;
    		dict.push_back(str);
    	}
    	sort(dict.begin(), dict.end(), compare);
    	
    	for(int i = 0; i < dict.size(); i++) {
    		cout << dict[i] << endl;
    	}
    }
    return 0;
}
