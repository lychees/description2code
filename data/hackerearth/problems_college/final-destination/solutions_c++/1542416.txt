#include <bits/stdc++.h>
using namespace std;

long long mul, sub, div1, add, dist[1000005];
bool visited[1000005];
long long bfs(long long  a, long long b)
{
    queue <long long> q;
    q.push(a);
    dist[a] = 0;
    visited[a] = true;
    while(!q.empty())
    {
        a = q.front();
        if(a == b)
        	return dist[a];
        q.pop();
        if(a +add <= 1000000 and visited[a + add] == false)
        {
            visited[a + add] = true;
           	dist[a+add] =dist[a]+1;
            q.push(a + add);
        }
        if(a - sub >= 2 and visited[a - sub] == false)
        {
            visited[a - sub] = true;
            dist[a-sub] = dist[a]+1;
            q.push(a - sub);
        }
        if(a*mul <= 1000000 and visited[a*mul] == false)
        {
            visited[a*mul] = true;
            dist[a*mul] = dist[a]+1;
            q.push(a*mul);
        }
        if(a/div1 >= 2 and visited[a/div1] == false)
        {
            visited[a/div1] = true;
            dist[a/div1] = dist[a]+1;
            q.push(a/div1);
        }
    }
    return dist[b];
}

int main()
{ 
    //freopen("input.txt", "r", stdin);
    long long t, a, b, ans;
    for(cin >> t;t--;)
    {
        cin >> a >> b;
        cin >> mul >> div1 >> add >> sub;
        for(int i = 0;i < 1000005;++i)
            visited[i] = false, dist[i] = -1;
        ans = bfs(a, b);
        cout << ans << endl;
    }
    return 0;
}