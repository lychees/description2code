#include <iostream>
#include <queue>
#include <utility>
using namespace std;

int n, m, b[1000][1000];

int search(int i, int j)
{
	queue<pair<int, int>> q;
	q.push({i, j});
	int val = 0;
	while (!q.empty()) {
		auto p = q.front();
		q.pop();
		if (!b[p.first][p.second])
			continue;
		val++;
		b[p.first][p.second] = 0;
		for (int i2 = max(0, p.first - 1); i2 <= min(n - 1, p.first + 1); i2++)
			for (int j2 = max(0, p.second - 1); j2 <= min(m - 1, p.second + 1); j2++)
				if (b[i2][j2])
					q.push({i2, j2});
	}
	return val;
}

void tc()
{
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> b[i][j];
	int tr = 0, max = 0;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (b[i][j]) {
				tr++;
				int cur = search(i, j);
				if (cur > max)
					max = cur;
			}
	cout << tr << ' ' << max << '\n';
}

int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin >> t;
	for (int i = 0; i < t; i++)
		tc();
}