#include <bits/stdc++.h>
using namespace std;
typedef __uint128_t ll;
long long R, N, X, W, D, Y, tmp;
ll bit, loop, dist, laps, extra, pos, ans;
ll arr[1000005];
const ll mod = 1000000007;
ll query(int x) {
    if (!x) return 0;
    ll sum = 0;
    for (;x; x-=(x&-x)) {
        sum += arr[x];
        sum %= mod;
    }
    return sum;
}

void update(ll val, int pos) {
    for (;pos<=N; pos+=(pos&-pos)) {
        arr[pos] += val;
        arr[pos] %= mod;
    }
}

int main() {
    //freopen("input.txt","r",stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> R >> N;
    for (int i=1; i<=N; i++) {
        cin >> tmp;
        update(tmp, i);
    }
    for (int i=0; i<R; i++) {
        cin >> X >> W >> D >> Y;
        bit = W % D;
        loop = W / D;
        dist = bit * (loop + 1) + D * loop * (loop + 1) / 2;
        laps = dist / N;
        extra = dist % N;
        pos = X + extra;
        if (pos > N) {
            pos = pos % N;
            ans = query(pos) - query(X-1) + query(N) * (laps + 1);
            ans = (ans + mod) % mod;
        }
        else {
            ans = query(pos) - query(X-1) + query(N) * laps;
            ans = (ans + mod) % mod;
        }
        update(Y, X);
        cout << (long long)ans << "\n";
    }
}
