#include <bits/stdc++.h>
using namespace std;
const int mod = 1e9+7;
const int maxn = 1e5+10;
int q,p[maxn],a[maxn],n,p2,test,z,zz;
int powmod(int x,int y){
    if (y==0) return 1;
    int ans=powmod(x,y>>1);
    ans=(1LL*ans*ans)%mod;
    if (y&1) ans=(1LL*ans*x)%mod;
    return ans;
}
int getsum(int x,int k){ /// x^1 + x^2 + x^3 + ... + x^k % z
    if (k==1) return x;
    int ans,t;
    if (k%2==0){
        ans=getsum(x,k>>1);
        t=powmod(x,(k>>1));
        t++;
        t-=(t>=mod)?mod:0;
        return (1LL*ans*t)%mod;
    } else{
        ans=getsum(x,k>>1);
        t=powmod(x,(k>>1)+1);
        t++; t-=(t>=mod)?mod:0;
        ans++; ans-=(ans>=mod)?mod:0;
        ans=(1LL*ans*t)%mod;
        ans--;
        if (ans<0) ans+=mod;
        return ans;
    }
}
int main(){
   
    p2=powmod(2,mod-2);
    scanf("%d",&test);
    while (test--){
        scanf("%d",&n);q=z=1;
        for (int i=1; i<=n; i++) scanf("%d",&p[i]);
        for (int i=1; i<=n; i++){
            scanf("%d",&a[i]);
            q=(1LL*q*getsum(p[i],a[i]))%mod;
        }
        printf("%d\n",q);
    }
}
