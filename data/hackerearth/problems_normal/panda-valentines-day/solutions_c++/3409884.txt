#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

const int MAX = 1000001;
bool v[MAX];
long prim[MAX];

void sieve(){
	for (int i = 2; i < MAX; i += 2)
	{ 
	    long count = 1;
	    long n = i/2;
	    while(n % 2 == 0)
	    {
	        count++;
	        n /= 2; 
	    }
	    prim[i] = count;
	}
	for (long i = 3; i < MAX; i += 2){
		if (!v[i]){ 
			prim[i] += 1;
			for (long j = 2; (j*i) < MAX; j += 1)
			{
				    long pos = j*i;
				    v[j*i] = true;
				    long n = pos/i, count = 1;
            	    while(n % i == 0)
            	    {
            	        count++;
            	        n /= i; 
            	    }
				    prim[pos] += count;
			}
		}
	}
}

int main()
{
	
	int t, n;
	cin>>t;
	
	sieve();
	long long ans[MAX];
	ans[0] = ans[1] = 0;
	ans[2] = 1;
	
	for(int i = 3; i<MAX; i++)
	{
		ans[i] = ans[i-1] + prim[i];
	}
	
	while(t--)
	{
		cin>>n;
		cout<<ans[n]<<endl;
	}

    return 0;
}
