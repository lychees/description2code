#include <iostream>
#include<vector>
#define mod 1000000007
using namespace std;

int n;
vector<long long int> vec;
long long int maximum=0;
long long int modular(long long int base,long long int power)
{
	long long int result=1;
	while(power>0)
	{
		if(power%2==1)
		{
			result=(result*base)%mod;
		}
		base=(base*base)%mod;
		power=power/2;
	}
	return result;
}

void func(long long int pro,long long int sum,int index)
{

	if(index==n)
		return ;
	else
	{
			
			long long int temp1=(sum+vec[index])%mod;
			long long int temp2=(pro*vec[index])%mod;
			temp1=modular(temp1,mod-2);
			temp1=(temp1*temp2)%mod;
			maximum=max(temp1,maximum);
		func((pro*vec[index])%mod,(sum+vec[index])%mod,index+1);
		func(pro,sum,index+1);
	}
}

int main()
{
	int t;
	cin>>t;
	int cnt=1;
	while(t>0)
	{
		cin>>n;
		vec.resize(n);
		for(int i=0;i<n;i++)
			cin>>vec[i];
		maximum=0;
		long long int pro=1;
		long long int sum=0;
		func(1,0,0);
		// Case #1: 1
		cout<<"Case #"<<cnt<<": "<<maximum<<endl;
		cnt++;
		t--;
	}
}
