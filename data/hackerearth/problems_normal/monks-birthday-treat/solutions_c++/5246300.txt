#include<bits/stdc++.h>
using namespace std;

vector<int>v[1001];

int min1=9999;
int count1=1;

void dfs(int u,bool visited[])
{
  visited[u]=true;
  vector<int>::iterator it;
  for(it=v[u].begin();it!=v[u].end();it++)
  {
    if(!visited[*it])
    {
      count1++;
      dfs(*it,visited);

    }
  }
}


void dfsutil(int n)
{
  bool visited[n+1];
  memset(visited,false,sizeof(visited));
  for(int i=1;i<=n;i++)
  {
    memset(visited,false,sizeof(visited));
    //cout<<visited[i];
    count1=1;
    if(!visited[i])
    dfs(i,visited);
    if(count1<=min1)
    min1=count1;
    //cout<<min1<<endl;
  }
  cout<<min1<<endl;
}


int main()
{
  int n,e,s,d;
  cin>>n>>e;
  for(int i=1;i<=e;i++)
  {
    cin>>s>>d;
    v[s].push_back(d);
  }

  dfsutil(n);
  return 0;
}
