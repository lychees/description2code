#include <bits/stdc++.h>
using namespace std;
#define MAX 1000001
int BIT[1000001] , N , M ,A[200001] , B[200001];
 
void update(int idx){
 
	while(idx<=M){
		BIT[idx] += 1;
		idx += (idx&-idx);
	}
}
 
int sum(int idx){
	int s = 0;
	while(idx){
		s += BIT[idx];
		idx -= (idx&-idx);
	}
	return s;
}
 
int query(int l,int r){
	if(l>r)
		return 0;
	return sum(r)-sum(l-1);
}
 
int main(){
 
	cin >> N;
	for(int i=1;i<=N;i++){
		cin >> A[i];
		M = max(M,A[i]);	
	}
	for(int i=1;i<=N;i++){
		cin >> B[i];
	}
	long long ans = 0;
	for(int i=1;i<=N;i++){
		ans += query(B[i]+1,M);
		update(A[i]);
	}
	long long i = 2 ;
	bool ok = 1 ;
	while(i*i <= ans){
		if(ans % i == 0){
			ok = 0 ;
			break ;
		}
		i ++ ;
	}
	puts(ok ? "MAGIC INVERSION" : "SIMPLE INVERSION") ;
	return 0;
}