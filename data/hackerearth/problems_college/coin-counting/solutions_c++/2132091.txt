// Aditya Varshney - coderaditya

#include <iostream>
#include <bitset>
#include <cmath>
#include <queue>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <map>
#include <climits>

#define pb push_back
#define mp make_pair

typedef long long int ll;

using namespace std;

int count( int S[], int m, int n )
{
    int i, j, x, y;

    // We need n+1 rows as the table is consturcted in bottom up manner using
    // the base case 0 value case (n = 0)
    int table[n+1][m];

    // Fill the enteries for 0 value case (n = 0)
    for (i=0; i<m; i++)
        table[0][i] = 1;

    // Fill rest of the table enteries in bottom up manner
    for (i = 1; i < n+1; i++)
    {
        for (j = 0; j < m; j++)
        {
            // Count of solutions including S[j]
            x = (i-S[j] >= 0)? table[i - S[j]][j]: 0;

            // Count of solutions excluding S[j]
            y = (j >= 1)? table[i][j-1]: 0;

            // total count
            table[i][j] = x + y;
        }
    }
    return table[n][m-1];
}

int main()
{
    ios::sync_with_stdio(0);
    int t,n,i;
    int a[] = {1,3,5};
    cin>>t;
    while(t--) {
        cin>>n;
        printf("%d\n", count(a, 3, n));
    }
}
