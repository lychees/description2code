#include <bits/stdc++.h>
using namespace std;
int a[100001];
vector <int> g[101];//index of vet=color; value=index of stone with that color
int s[100000], d[100000],color[101];
void bfs(int s1, int end)
{
	unsigned int i;
	int u, in, sz;
	for(i=0; i<100000; i++)
	{
		s[i]=0;
		d[i]=-1;
	}
	for(i=0; i<100; i++)
	{
		color[i]=0;
	}
	//memset(color,0,100);
	d[s1]=0;
	queue <int>q;
	q.push(s1);
	while(!q.empty())
	{
		in=q.front();
		q.pop();
		if(in==end)break;
		if(in>0)
		{
			if(d[in-1]==-1)
			{
				d[in-1]=d[in]+1;
				q.push(in-1);
			}
		}
		u=a[in];
		sz=g[u].size();
		if(color[u]==0){
		for(i=0; i<sz; i++)
		{
			if(d[g[u][i]]==-1)
			{
				d[g[u][i]]=d[in]+1;
				q.push(g[u][i]);
			}
		}color[u]=1;}
	}
}
int main()
{
	int N,Q,S,M,E,ans=0;
	cin>>N;
	for(int i=0; i<N; i++)
	{
		cin>>a[i];	
		g[a[i]].push_back(i);
	}
	cin>>Q;
	while(Q--)
	{
		cin>>S>>M>>E;
		bfs(S,M);
		if(d[M]==-1)
		cout<<-1;
		else
		{
			ans=d[M];
			bfs(M,E);
			if(d[E]==-1)
			{
				cout<<-1;
			}
			else
			{
				cout<<ans+d[E];
			}
		}cout<<endl;
	}
}
