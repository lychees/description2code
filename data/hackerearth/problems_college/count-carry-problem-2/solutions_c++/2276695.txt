using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

string a,b;
int test,n,m,sum,nho,ans;

int main()
{
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen("count-carry-problem-2.out", "w", stdout);
    cin >> test;
    while (test--)
    {
        cin >> a >> b;
        reverse(a.BG,a.ED);
        reverse(b.BG,b.ED);
        while (a.length()<b.length()) a+='0';
        while (b.length()<a.length()) b+='0';
        n=a.length();
        m=b.length();
        nho=0;
        ans=0;
        FOR(i,0,max(n,m))
        {
            sum=a[i]+b[i]+nho-'0'-'0';
            if (sum>9)
            {
                ans++;
                nho=1;
            }
            else nho=0;
        }
        if (ans>1) cout << ans << " carry operations\n";
        else if (ans==1) cout << "1 carry operation\n";
        else cout << "No carry operation\n";
    }
}

