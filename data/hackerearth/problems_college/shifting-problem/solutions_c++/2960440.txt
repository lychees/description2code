#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <cstdio>
#include <memory>

using namespace std;


#define LL long long int
#define mfor(i,n) for(int i=0;i<n;i++)
#define FOR(i,a,b)  for(int i=a;i<=b;i++)
#define RFOR(i,a,b)   for(int i=a;i>=b;i--)
#define snd(n) int (n); scanf("%d",&(n))
#define sd(n)  scanf("%d",&n)
#define sd2(n,m) scanf("%d %d",&(n),&(m))
#define snd2(n,m) int (n),(m); scanf("%d %d",&(n),&(m))
#define snd3(n,m,k) int (n),(m),(k); scanf("%d %d %d",&(n),&(m),&(k))
#define ptd(x) printf("%d\n",(x))
#define ptl printf("\n");
#define OPEN freopen("in.txt","r",stdin)
#define pb push_back
#define mp make_pair
#define IS_ODD( num ) ((num) & 1)
#define IS_EVEN( num ) (!IS_ODD( (num) ))
#define MEM(dest,val) memset(dest,val,sizeof(dest))
#define MOD 1000000007
#define N 1001

typedef vector<int>vi;
typedef pair<int,int>ii;
typedef vector<ii>vii;
typedef vector<vi>tvi;
typedef map<int,int>MAP;
typedef set<int>SET;

/*
LL mpow(LL a, LL n)
{   LL ret=1;LL b=a;while(n) {if(n&1)
    ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
    return (LL)ret;
}

int strToint(string s){
    int a=0,b=1;
    for(int i=s.length()-1;i>=0;i--){
        a+=(s[i]-'0')*b;
        b*=10;
    }
    return a;
}
void UnionFind() { rk.clear();p.clear();rk.assign(N, 0);p.assign(N, 0); for (int i = 0; i < N; i++) p[i] = i; }
int findSet(int i) { return (p[i] == i) ? i : (p[i] = findSet(p[i])); }
bool isSameSet(int i, int j) { return findSet(i) == findSet(j); }
void unionSet(int i, int j) {
    if (!isSameSet(i, j)) {
        int x = findSet(i), y = findSet(j);
        if (rk[x] > rk[y]) p[y] = x;
        else { p[x] = y;
        if (rk[x] == rk[y]) rk[y]++; }
    }
}*/
LL a[N],b[N];
int T,n;
int main(){
    ios::sync_with_stdio(false);
    //OPEN;
    cin>>T;
    a[0]=b[0]=0;a[1]=b[1]=1;
    FOR(i,2,1000)a[i]=a[i-1]+a[i-2];
    FOR(i,1,1000)b[i]=a[i-1]+a[i];
    while(T--){
        cin>>n;
        cout<<b[n]<<endl;
    }
    return 0;

}
