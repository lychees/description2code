//Code By -- Vineet Jha//

#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define e 1000000007
#define MAX 1000006
#define rep(i,a,b) for(i=a;i<b;i++)
#define pb push_back
using namespace std;

ll t,n,k,x,y,cnt;
list<ll> *adj;
bool *visited;
ll pow(ll a, ll b, ll MOD) {
ll x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD;
        b /= 2;
    }
    return x;
}
 
ll modInverse(ll a, ll m) {
    return pow(a,m-2,m);
}

ll combi(ll a,ll b)
{
	ll prd=1;
	prd*=a;
	prd%=e;
	prd*=(a-1);
	prd%=e;
	prd*=modInverse(b,e);
	prd%=e;
	return prd;
}

int dfsutil(ll x,bool visited[])
{
	visited[x]=true;
	cnt++;
	//cout<<x<<' ';
	list<ll>::iterator itr;
	for(itr=adj[x].begin();itr!=adj[x].end();itr++)
	{
		if(!visited[*itr])
		{
			dfsutil(*itr,visited);
		}
	}
	return 0;
}

ll dfs(ll x)
{
	dfsutil(x,visited);
}

int main()
{
	ll i,j,sum;
	cin>>t;
	while(t--)
	{
		sum=1;
		cin>>n>>k;
		adj=new list<ll>[n+1];
		rep(i,1,n+1)
		{
			adj[i].pb(i);
		}
		rep(i,0,k)
		{
			cin>>x>>y;
			adj[x].pb(y);
			adj[y].pb(x);
		}
		
		/*rep(i,1,n+1)
		{
			list<ll>::iterator itr;
			for(itr=adj[i].begin();itr!=adj[i].end();itr++)
			{
				cout<<*itr<<" ";
			}
			cout<<endl;
		}*/
		visited=new bool[n+1];
		memset(visited,false,sizeof(visited));
		rep(i,1,n+1)
		{
			cnt=0;
			dfs(i);
			//cout<<endl;
			if(cnt>1)
			{
				sum*=combi(cnt,2);
				//cout<<i<<" "<<cnt<<" "<<combi(cnt,2)<<endl;
				sum%=e;
			}
		}
		cout<<sum<<endl;
		rep(i,0,n+1)
		adj[i].clear();
	}
	return 0;
}