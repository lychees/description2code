#include <bits/stdc++.h>

#define ULL unsigned long long
 
using namespace std;
 
bool isprime[1000001];
 
ULL mulmod(ULL a, ULL b, ULL c) {
	ULL x = 0,y = a%c;
 
	while(b>0){
		if(b&1) x = (x+y)%c;
		y = (y<<1)%c;
		b >>= 1;
	}
 
	return x;
}
 
ULL pow(ULL a, ULL b, ULL c) {
	ULL x = 1, y = a;
 
	while(b>0){
		if(b&1) x = mulmod(x,y,c);
		y = mulmod(y,y,c);
		b >>= 1;
	}
 
	return x;
}
 
bool miller_rabin(ULL p, int it) {
	if(p<2) return false;
	if(p==2) return true;
	if((p&1)==0) return false;
 
	ULL s = p-1;
	while(s%2==0) s >>= 1;
 
	while(it--){
		ULL a = rand()%(p-1)+1,temp = s;
		ULL mod = pow(a,temp,p);
 
		if(mod==-1 || mod==1) continue;
 
		while(temp!=p-1 && mod!=p-1){
			mod = mulmod(mod,mod,p);
			temp <<= 1;
		}
 
		if(mod!=p-1) return false;
	}
 
	return true;
}
 
int main()
{
	int t,n,i,j,m;
	unsigned long long ans;
	for (i = 2; i <= 1000000; i++) {
			isprime[i] = true;
	}
	for (i = 2; i*i <= 1000000; i++) {
		if (isprime[i]) {
			for (j = i*i; j <= 1000000; j+=i) {
				isprime[j] = false;
			}
		}
	}
	scanf("%d",&t);
	while (t --) {
		ans = 0;
		scanf("%d %d",&m,&n);
		for (i = m; i <= n; i++) {
			if (isprime[i]) {
				ans += i;
			}
		}
		if (ans == 0) {
			printf("NO\n");
		} else {
			if (miller_rabin(ans,18)) {
				printf("YES\n");
			} else {
				printf("NO\n");
			}
		}
	}
	
	return 0;
}