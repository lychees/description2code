#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <complex>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 1000005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

pii a[N];
int n;
ll cal(int i,int j){
    return 1LL*(a[j].x+a[j].y-a[i].x-a[i].y)*(a[j].x+a[j].y-a[i].x-a[i].y)+1LL*(a[j].y-a[i].y)*(a[j].y-a[i].y);
}
bool solve(ll L){
    static int s[N];
    int top=0;s[++top]=0;
    for(int i=1;i<n;i++){
        int k=top,flag=0;
        for(int j=top;j;j--){
            if(a[s[j]].x<a[i].x){
                ll d=cal(s[j],i);
                if(d>L){
                    flag=0;break;
                }
                else{
                    k=j;flag=1;break;
                }
            }
        }
        if(flag){
            if(i==n-1)return 1;
            while(top>k)top--;
            s[++top]=i;
        }
    }
    /*
    s[0]=1;puts("");
    for(int i=1;i<n;i++){
        s[i]=0;
        for(int j=i-1;j>=0;j--)if(s[j]&&a[j].x<a[i].x&&cal(i,j)<=L){cerr<<i<<" "<<j<<",\t";s[i]=1;break;}
    }
    //*/
    return 0;
}
int main(){
    ios::sync_with_stdio(0);
    int T,i,j,k,m;
    cin>>n;
    for(i=0;i<n;i++)cin>>a[i].x>>a[i].y,a[i].x-=a[i].y;
    if(a[0].x>=a[n-1].x){cout<<"-1\n";return 0;}
    for(m=1,i=1;i<n-1;i++)if(a[i].x>a[0].x&&a[i].x<a[n-1].x)a[m++]=a[i];
    a[m++]=a[n-1];n=m;
    ll l=1,r=cal(0,n-1)-1;
    while(l<=r){
        ll x=(l+r)>>1;
        if(solve(x))r=x-1;
        else l=x+1;
    }
    cout<<r+1<<"\n";
    //*/
    //DBG(solve(15999376222208LL))
    return 0;
}