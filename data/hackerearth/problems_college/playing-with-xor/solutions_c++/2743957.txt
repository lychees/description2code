#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string.h>
using namespace std;

#define EPS 0.0000001

typedef long long LL;

#define gc getchar_unlocked

#define s 1024
char arr1[s];
int prime[s];
int xx=0;



void markMultiples(char arr1[], int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr1[ num-1 ] = 1; // minus 1 because index starts from 0.
        ++i;
    }
}

// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    int i,ans;
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {

        for ( i=1,ans=0; i<n; ++i)
        {
            if ( arr1[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                prime[xx]=i+1;
                xx++;
                markMultiples(arr1, i+1, n);
            }
        }
    }
//printf("%d\n",ans);

}


int dp[1025][1025];

int A[1025];

#define mod 100000007

int main()
{
     SieveOfEratosthenes(1024);
    // freopen("input.txt","r",stdin);
	int t,n,m,i,j,c=1;
	LL ans;
	int tst;
	cin>>tst;

	for(t=tst;c<=t;c++){
		cin>>n;
		ans=0;

		for(i=0;i<n;i++)
			cin>>A[i];
		memset(dp,0,sizeof(dp));
		dp[0][0] = 1;
		for(i=1;i<=n;i++){
			int a = A[i-1];
			for(j=0;j<1025;j++){
				dp[i][j] = dp[i-1][j]||dp[i-1][j^a];

		}

		}

           for(i=0;i<xx;i++)
           {
               ans+=dp[n][prime[i]];
           }
           cout<<ans<<"\n";

	}

	return 0;
}
