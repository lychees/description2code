// The truth is always either terrible or boring
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define rep1(i,a,b) for(int i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(int i = b, _a = (a); i >= _a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple // remember tie & ignore
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int __t; cin >> __t; rep1(_t,1,__t)
#define case(ans) "Case #" << _t << ": " << ans << "\n"
#define cout(d) cout << fixed << setprecision(d)
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1e9 + 7;
ll k;

map<pair<int,int>,ll> memo;
inline ll f(int len, int sum) {
    if(!len) return sum == k;
    if(memo.find(mp(len, sum)) != memo.end())
        return memo[mp(len,sum)];
    
    ll ans(0);
    rep(i,10) ans += f(len - 1, sum + i);
    return memo[mp(len,sum)] = ans;
}

inline ll tot(ll n) {
    if(!n) return 0;
    memo.clear();
    
    int d[20], len(0);
    ll ncopy = n;
    while(n) d[len++] = n % 10, n /= 10;
    
    ll ans(0), p(0), pcopy;
    rep2(i,len-1,0) {
        pcopy = p;
        rep1(j,0,d[i]) {
            p = pcopy + j;
            if(j < d[i]) ans += f(i, p);
        }
    }
    return ans;
}

int main() {
//    ios_base::sync_with_stdio(false); cin.tie(NULL);
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    ll l, r; cin >> l >> r >> k;
    cout << tot(r + 1) - tot(l);
    return 0;
}