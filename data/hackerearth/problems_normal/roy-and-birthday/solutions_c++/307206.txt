#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int MAX=1000005;
const int MOD=1000000007;
long long num[MAX],den[MAX];
char s[MAX];
int M[26];

long long mypow(long long a,long long b)
{
	if(b==0) return 1;
	if(b==1) return a%MOD;
	long long x=mypow(a,b/2);
	x=(x*x)%MOD;
	if(b&1){
		x=(x*a)%MOD;
	}
	return x;
}

bool isvowel(char ch)
{
	return (ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u');
}

int main()
{
	num[0]=den[0]=1;
	int i;
	for(i=1;i<MAX;i++) {
		num[i]=(num[i-1]*i)%MOD;
		den[i]=(den[i-1]*mypow(i,MOD-2))%MOD;
	}
	int T;
	scanf(" %d",&T);
	while(T--){
		scanf(" %s",s);
		memset(M,0,sizeof(M));
		int vow,con;
		vow=con=0;
		int N=0;
		
		for(i=0;s[i];i++){
			if(isvowel(s[i])) vow++;
			else con++;
			M[s[i]-'a']++;
			N++;
		}
		if(vow-con > 1){
			printf("-1\n");
		} else {
			long long ans=(num[con]*num[con+1])%MOD;
			ans = (ans*den[con+1-vow])%MOD;
			ans = (ans*den[vow])%MOD;
			ans = (ans*num[vow])%MOD;
			for(i=0;i<26;i++)
				ans=(ans*den[M[i]])%MOD;
			printf("%lld\n",ans);
		}
		
	}
	return 0;
}
