/*
 Anton Gulikov
*/
#pragma comment(linker,"/STACK:300000000")
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <string>
#include <stdlib.h>

#define gcd(a,b) __gcd((a),(b))
#define sqr(a) ((a)*(a))
#define odd(a) ((a)&1)
#define foru(i,n) for (int i=0;i<(n);i++)
#define ford(i,n) for (int i=(n)-1;i>=0;i--)
#define forab(i,l,r) for (int i=(l);i<=(r);i++)
#define forabd(i,r,l) for (int i=(r);i>=(l);i--)
#define fillchar(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define F first
#define S second
#define all(x) x.begin,x.end
#define pw2(x) (1ull<<(x))
#define mp make_pair

const long double eps=1e-20;
const long double pi=acos(-1.0);
const long long inf=1000*1000*1000*1000*1000*1000;
const long long base=1000*1000*1000+7;

using namespace std;

bool ok[111111];
int f[111111],a[111111];
int ans,n;

int main(){
	scanf("%d",&n);
	foru(i,n) scanf("%d",&a[i]);
	foru(i,a[n-1]+1) ok[i]=false;
	foru(i,n) ok[a[i]]=true;
	forab(i,1,a[n-1]) if (ok[i]){
		f[i]=1;
		int j=2;
		while (j*j<=i){
			if (i%j==0){
				f[i]=max(f[i],f[j]+1);
				f[i]=max(f[i],f[i/j]+1);
			}
			j++;
		}
		j=2;
		while (j*j<=i){
			if (i%j==0){
				f[j]=max(f[j],f[i]);
				f[i/j]=max(f[i/j],f[i]);
			}
			j++;
		}
		ans=max(ans,f[i]);
	}
	cout<<ans;
	return 0;
}