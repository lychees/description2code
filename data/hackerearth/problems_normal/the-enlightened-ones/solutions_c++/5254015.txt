#include<bits/stdc++.h>
using namespace std;
long long int k,pos[100001],n;
long long int check(long long int mid);
long long int binarySearch(long long int l, long long int r)
{
        if (r >= l)
        {
                long long int mid = l + (r - l)/2;
 
                if (check(mid)>=0 && check(mid-1)==-1)  return mid;
 
                else if (check(mid) >=0 && check(mid-1)>=0) return binarySearch(l, mid-1);
                else if (check(mid)==-1) return binarySearch(mid+1,r);
 
        }
 
        return -1; 
}
long long int check(long long int mid)
{
        long long int range=0,i,c=k;
        for (i=0;i<n;i++)
        {
                if (range<pos[i])
                {
                        if (c==0)
                        {
                                return -1;
                        }
                        else
                        {
                                range=pos[i]+2*mid;
                                c--;
                        }
                }
        }
        return 1;
}
int compfun(const void * a, const void * b)
{
        return ( *(int*)a - *(int*)b );
}
int main()
{
        long long int i,ans;
        scanf ("%lld %lld",&n,&k);
        for (i=0;i<n;i++)
        {
                scanf ("%lld",&pos[i]);
        }
        qsort(pos,n,sizeof(pos[0]),compfun);
        ans=binarySearch(0,10000000);
        printf("%lld\n",ans);
}