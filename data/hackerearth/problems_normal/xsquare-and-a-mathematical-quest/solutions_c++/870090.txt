#include <bits/stdc++.h>
using namespace std;
#define int long long
map <int,int> prime; int notprime[100001]; 
const int mod=1e9+7; 
bool checkprime (int a)
{
	if (a%2==0 || a%3==0 || a%5==0 || a%7==0) return false;
	for (int g=9;g<=sqrt(a); g++) {if (a%g==0) return false;}
	return true;
}
main()
{
	for (int g=2;g<=100000; g++)
	{
		if (notprime[g]) continue;
		for (int y=2*g; y<=100000; y+=g) notprime[y]=1; 
	}
    int a; cin >> a;int check=1; 
    for (int g=0;g<a; g++)
    {
    	int b; cin >> b;
    	vector <int> divi;
    	if (b!=1) check=0; else continue; 
    	for (int y=2; y<=sqrt(b); y++)
    	{if (b%y) continue; 
    		if (y==sqrt(b))
    		{
    			if (!notprime[y])
    			{
    				int first=y, z=b;
    				while (z%first==0){prime[first]++; z/=first;}
    			}
    		}
    		else
    		{
    			if (!notprime[y]){
    			int first=y, z=b;
    			while (z%first==0) {prime[first]++; z/=first; }}
    			if (checkprime(b/y)){
    			int first=b/y; int z=b;
    			while (z%first==0){prime[first]++; z/=first;}}
    		}
    	}int checkprime=1; 
    	for (int g=2;g<=sqrt(b); g++)
    	{
    		if (b%g==0){checkprime=0; break;}
    	}
    	if (checkprime) prime[b]++; 
    } int ans=1; if (check==1){cout << 4; return 0;}//cout << prime[5] << '\n';
    for (map <int,int> :: iterator x=prime.begin(); x!=prime.end(); x++)
    {
    	int fact=x->first; if (fact==2) continue; 
    	int num=x->second;
    	if (fact%4==3)
    	{
    		if (num%2==1)
    		{
    			cout << 0; return 0; 
    		}
    	}
    	else
    	{
    		ans*=(1LL*(num+1)); ans%=mod; 
    	}
    }cout << (4*ans)%mod; 
    return 0;
}
