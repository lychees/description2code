#include<bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(i=a;i<=b;i++)
#define ren(i,a,b) for(i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define b(v) v.begin()
#define e(v) v.end()
#define mem(n,m) memset(n,m,sizeof(n))
#define lb lower_bound
#define ub upper_bound
#define vii vector<int>
#define vll vector<long long>
#define gl(cin,s)  getline(cin,s);
#define bitc(n) __builtin_popcountll(n)
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 

#define boost ios_base::sync_with_stdio(0)
#define MOD 1000000009
#define EPSILON 1e-9
#define PI 3.14159265358979323846
#define SIZE 100001
#define VALUE 200001

typedef long long  ll;
typedef unsigned long long ull;
typedef long double  ldo;
typedef double  db ;
using namespace std;

ll fact[VALUE];
ll mul(ll a,ll b)
{
	ll x=(a*b)%MOD;
	return x;
}


void f()
{
	fact[0]=1;
	fact[1]=1;
	ll i;
	rep(i,2,VALUE-1)
	{
		fact[i]=mul(fact[i-1],i);
	}
	return ;
}
ll p(ll a,ll y)
{
	ll res = 1;
	while(y)
	{
		if(y&1) 
		{
			res = (res*a)%MOD;
		}
		a = (a*a)%MOD;
		y >>= 1;
	}
	return res%MOD;
}
ll mod_div(ll a,ll b)
{
	ll ans = (a*p(b,MOD-2))%MOD; 
	return ans;
}
int main()
{  	
	//freopen("route.in","r",stdin);
	//freopen("route.out","w",stdout);
	//boost;
	f();
	ll t,n,m,k,i,ans,x;
	//cin>>t;
	scanf("%lld",&t);
	while(t--)
	{
		//cin>>n>>m>>k;
		scanf("%lld %lld %lld",&n,&m,&k);
		x=n-m;
		ans=0;
		for(i=1;i<=k;i++)
		{
			ll temp1=0;
			ll temp2=0;
			if(x-i>=0)
			temp1=mod_div(fact[x],mul(fact[x-i],fact[i]));
			if(n-i>=0)
			temp2=mod_div(fact[n],mul(fact[n-i],fact[i]));
			ans+=temp2-temp1;
			if(ans<0)
			ans+=MOD;
			if(ans>=MOD)
			ans-=MOD;
		}
		printf("%lld\n",ans);
	}
	return 0;
}