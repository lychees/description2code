#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define NIL 0
#define INF (1<<28)
#define MAXN 200001
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 5000000007
#define total 500005
#define M 1000000007
typedef long long int int64;
//int a[1000000];
/*
inline void fast(int &x) {
    register int64 c = getchar_unlocked();
    x = 0;
    int64 neg = 0;
    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
    if(c=='-') {
        neg = 1;
        c = getchar_unlocked();
    }
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(neg)
        x = -x;
}*/
struct paint{
	int x,y,c;
};
bool cmp(paint a,paint b){
	if(a.x!=b.x)
	return a.x<b.x;
	return a.y<b.y;
}
vector<paint>v;
int main(){
	int t,l,p,i,j;
	cin>>t;
	while(t--){
		cin>>l>>p;
		int dp[l+2];
		for(i=0;i<=l;i++)
		dp[i]=M;
		dp[0]=0;
		paint tmp;
		for(i=0;i<p;i++){
			cin>>tmp.x>>tmp.y>>tmp.c;
			v.pb(tmp);
		}
		sort(all(v),cmp);
		for(i=0;i<v.size();i++){
		tmp.x=v[i].x;
		tmp.y=v[i].y;
		tmp.c=v[i].c;
		dp[tmp.y]=min(dp[tmp.y],dp[tmp.x]+tmp.c);
		for(j=tmp.x;j<=tmp.y;j++)
		dp[j]=min(dp[j],dp[tmp.y]);
		}
		if(dp[l]==M)
		cout<<-1<<endl;
		else
		cout<<dp[l]<<endl;
		
		v.clear();
	}
	return 0;
}