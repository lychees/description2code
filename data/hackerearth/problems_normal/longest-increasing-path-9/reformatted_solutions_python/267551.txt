__author__ = 'NirmalGanesh'


def solve(n, m, grid):
    length = 1
    sPoint = (0, 0)
    stack = list()
    seenPoints = set()
    stack.append(sPoint)
    while (len(stack) != 0):
        a, b = stack.pop()
        if (a, b) in seenPoints:
            continue
        else:
            seenPoints.add((a, b))
        if (a+b+1 > length):
            length = a+b+1
        if a+1 < n and grid[a+1][b] > grid[a][b]:
            stack.append((a+1, b))
        if b+1 < m and grid[a][b+1] > grid[a][b]:
            stack.append((a, b+1))
    print length


if __name__ == "__main__":
    nCases = input()
    l = []
    cases = []
    for i in xrange(nCases):
        case = raw_input()
        n, m = list(map(lambda x: int(x), case.split()))
        grid = []
        for i in xrange(n):
            row = list(map(lambda x: int(x), raw_input().split()))
            grid.append(row)
        solve(n, m, grid)
