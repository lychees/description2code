#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define MEMS(a,b) memset((a),(b),sizeof(a))
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define LL long long
#define U unsigned

int mod = 1000000007;

int ololo = 1;

int r(LL num, int p) {
	if (p == 0)
		return 1;
	LL res = r(num,p/2);
	res *= res;
	res%=mod;
	if (p&1) {
		res*=num;
		res%=mod;
	}
	return res;
}

int phi;

int calc(int n, int i, int ty) {
	if (ty == 1) {
		if (n == 1) {
			return 1;
		}
		int tot = n / i;
		LL q = r(n,i);
		LL res = (r(q,tot)-1);
		if (res<0)
			res+=mod;
		res*=q;
		res%=mod;
		res *= r(q-1,mod-2);
		return res%mod;
	}
	if (ty == 2) {
		if (n == 1) {
			return 4;
		}
		int tot = n / i;
		LL q = r(2,i);
		LL res = r(q,tot);
		res--;
		if (res<0)
			res += mod;
		res *= r(2,n+i);
		res%=mod;
		int val = q - 1;
		if (val<0)
			val += mod;
		res*=r(val,mod-2);
		return res%mod;
	}
	if (n == 1) {
		return 1;
	}
	LL res = phi;
	int tot = n / i;
	res*=r(n,i-1);
	res%=mod;
	LL q = r(n,i);
	LL val = r(q,tot)-1;
	if (val<0)
		val+=mod;
	res*=val;
	res%=mod;
	val = q - 1;
	if (val<0)
		val += mod;
	res*=r(q-1,mod-2);
	return res%mod;
}

vector<pnt> divs;
vector<int> all;
void genAll(int num, int p) {
	if (p == divs.size()) {
		all.push_back(num);
		return;
	}
	FOR(cnt,0,divs[p].second+1) {
		genAll(num,p+1);
		num*=divs[p].first;
	}
}

vector<int> ans;
const int N = 100010;
int f[N];

int main()
{
#ifdef Fcdkbear
        freopen("in.txt", "r", stdin);
        //freopen("out.txt", "w", stdout);
        double beg = clock();
#endif

        FOR(i,0,N)
        	f[i] = i;
        for (int i = 2; i<N; ++i) {
        	if (f[i] == i)
        		for (int j = i + i; j < N; j += i)
        			f[j] = i;
        }
        int q;
        scanf("%d",&q);
        FOR(it,0,q) {
        	int ty,n;
        	scanf("%d%d",&ty,&n);
        	all.clear();
        	int temp = n;
        	int last = -1;
        	int cnt = 0;
        	divs.clear();
        	while (temp>1) {
        		int k = f[temp];
        		if (k!=last) {
        			if (last != -1) {
        				divs.push_back(mp(last,cnt));
        			}
        			last = k;
        			cnt = 1;
        		} else {
        			cnt++;
        		}
        		temp/=k;
        	}
        	if (last != -1) {
        		divs.push_back(mp(last,cnt));
        	}
        	phi = 1;
        	FOR(i,0,divs.size()) {
        		int p = 1;
        		FOR(j,0,divs[i].second)
        			p *= divs[i].first;
        		phi *= (p - p/divs[i].first);
        	}
        	all.clear();
        	genAll(1,0);
        	sort(all.begin(), all.end());
        	ans.clear();
        	ans.resize(all.size());
        	LL res = 0;
        	for (int i = (int)all.size() - 1; i >= 0; --i) {
        		ans[i] = calc(n,all[i],ty);
        		FOR(j,i+1,all.size()) {
        			if (all[j]%all[i])
        				continue;
        			ans[i] -= ans[j];
        			if (ans[i]<0)
        				ans[i] += mod;
        		}
        		res += ans[i]*1ll*all[i];
        		res %= mod;
        	}
        	printf("%d\n",(int)res);
        }

#ifdef Fcdkbear
        double end = clock();
        fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
        return 0;
}
