/*
Template belongs to : Himanshu Jaju [himanshujaju]
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define msi       map<string,int>
#define msit      map<string,int>::iterator
#define pb        push_back
#define mp        make_pair

#define GI(x)     scanf("%d",&x)
#define PI(x)     printf("%d",x)

#define FOR(i,a,b)      for(int i=a;i<b;i++)
#define RFOR(i,a,b)     for(int i=b-1;i>=a;i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       1000000007

#define PI  acos(-1)

#define CASE(x)   cout<<"Case "<<x<<": ";

int main()
{
      inp_s;
      int n,m;
      cin >> n >> m;
      vector< vector<PII> > edges(n+1);
      while(m--)
      {
            int a,b,c;
            cin >> a >> b >> c;
            edges[a].pb(mp(b,c));
            //edges[b].pb(mp(a,c));
      }
      int visited[10000][10] = {0};
      visited[1][0] = 1;
      queue< PII > bfs;
      bfs.push(mp(1,0));
      while(!bfs.empty())
      {
            PII top = bfs.front();
            bfs.pop();

            int u = top.first;
            int c = top.second;

            FOR(i,0,sz(edges[u]))
            {
                  int v = edges[u][i].first;
                  int cl = edges[u][i].second;
                  if(c == cl) continue;
                  if(!visited[v][cl])
                  {
                        visited[v][cl] = visited[u][c] + 1;
                        bfs.push(mp(v,cl));
                  }
            }
      }
      int ans = INT_MAX;
      FOR(i,0,10) if(visited[n][i]) ans = min(ans,visited[n][i]);
      if(ans == INT_MAX) ans = 0;
      cout << ans-1 << endl;
      return 0;
}
