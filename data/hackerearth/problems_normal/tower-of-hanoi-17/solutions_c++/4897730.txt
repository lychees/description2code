#include<iostream>
#include<climits>
#include<vector>
#include<algorithm>
#include<utility>
using namespace std;

int main()
{
    long long int t,n;
    ios::sync_with_stdio(false);
    cin>>t;
    while(t--)
    {
        cin>>n;
        vector<pair<long long int,long long int> > vec;
        long long int a,b;
        for(long long int i=0;i<n;i++)
        {
            cin>>a>>b;
            vec.push_back(make_pair(a,b));
        }
        sort(vec.begin(),vec.end());
        long long int arr[n][2];
        for(long long int i=0;i<n;i++)
        {
            arr[i][0]=vec[n-1-i].first;
            arr[i][1]=vec[n-1-i].second;
        }
        /*for(long long int i=0;i<n;i++)
        {
            cout<<arr[i][0]<<' '<<arr[i][1]<<endl;
        }*/
        long long int height[n];long long int m=0;
        height[0]=arr[0][1];
        for(long long int i=1;i<n;i++)
        {
            m=arr[i][1];
            height[i]=arr[i][1];
            for(long long int j=i;j>=0;j--)
            {
                if(arr[j][0]>arr[i][0]&&arr[j][1]>arr[i][1])
                {
                //    cout<<i<<' '<<j<<endl;
                    m=max(m,height[i]+height[j]);
              //      cout<<'m'<<' '<<m<<endl;
                }
            }
            height[i]=m;
            //cout<<"height"<<' '<<i<<' '<<height[i]<<endl;
        }

        long long int min = LLONG_MIN;
        for(long long int i=0;i<n;i++)
        {
            if(height[i]>min)
                min=height[i];
        }
        cout<<min<<endl;
    }
}
