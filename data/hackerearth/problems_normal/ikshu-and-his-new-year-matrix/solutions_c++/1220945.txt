#include <iostream>
#include <stdio.h>
#include <climits>
#define ll long long int
using namespace std;
bool prime[100005]={0};
int N,K;
ll mat[1005][1005],dupmat[1005][1005];

ll gcd(ll a,ll b)
{
	ll r;
	while(b!=0)
	{
		r=a%b;
		a=b;
		b=r;
	}
	return a;
}

int main()
{
	int i,j;
	
	prime[0]=prime[1]=1;
	prime[2]=0;

	j=0;
	for(i=0;i<=100000;i++)
	{
		if(prime[i]==0)
		{
			j=i+i;
			while(j<=100000)
			{
				prime[j]=1;
				j=j+i;
			}
		}
	}

	ll op=0,tp;
	ll final=LLONG_MAX;
	int x,y;
	
	scanf("%d",&N);
	scanf("%d",&K);
	
	for(i=0;i<N;i++)
	{
		for(j=0;j<N;j++)
		{
			cin>>mat[i][j];
			dupmat[i][j]=0;
		}
	}

	for(i=1;i<N-1;i++)
	{
		for(j=1;j<N-1;j++)
		{
			op=0;
			if(prime[mat[i][j]]!=0)
			{
				if(dupmat[i][j]==0)
				{
					if(gcd(mat[i][j],K)!=1)
					{
						dupmat[i][j]=-1;
						continue;
					}
					tp=mat[i][j];
					while(tp<=100000 && prime[tp]!=0)
					{
						tp=tp+K;
						op=op+1;
						dupmat[i][j]++;
					}
					if(tp>100000)
					{	dupmat[i][j]=-1;	continue;	}
				}
				else if(dupmat[i][j]==-1)
					continue;
				else
					op=op+dupmat[i][j];
			}

			if(prime[mat[i-1][j-1]]!=0)
			{
				if(dupmat[i-1][j-1]==0)
				{
					if(gcd(mat[i][j],K)!=1)
					{
						dupmat[i][j]=-1;
						continue;
					}
					tp=mat[i-1][j-1];
					while(tp<=100000 && prime[tp]!=0)
					{
						tp=tp+K;
						op=op+1;
						dupmat[i-1][j-1]++;
					}
					if(tp>100000)
					{	dupmat[i-1][j-1]=-1;	continue;	}
				}
				else if(dupmat[i-1][j-1]==-1)
					continue;
				else
					op=op+dupmat[i-1][j-1];
			}
			
			if(prime[mat[i-1][j+1]]!=0)
			{
				if(dupmat[i-1][j+1]==0)
				{
					if(gcd(mat[i][j],K)!=1)
					{
						dupmat[i][j]=-1;
						continue;
					}
					tp=mat[i-1][j+1];
					while(tp<=100000 && prime[tp]!=0)
					{
						tp=tp+K;
						op=op+1;
						dupmat[i-1][j+1]++;
					}
					if(tp>100000)
					{	dupmat[i-1][j+1]=-1;	continue;	}
				}
				else if(dupmat[i-1][j+1]==-1)
					continue;
				else
					op=op+dupmat[i-1][j+1];
			}
			
			if(prime[mat[i+1][j-1]]!=0)
			{
				if(dupmat[i+1][j-1]==0)
				{
					if(gcd(mat[i][j],K)!=1)
					{
						dupmat[i][j]=-1;
						continue;
					}
					tp=mat[i+1][j-1];
					while(tp<=100000 && prime[tp]!=0)
					{
						tp=tp+K;
						op=op+1;
						dupmat[i+1][j-1]++;
					}
					if(tp>100000)
					{	dupmat[i+1][j-1]=-1;	continue;	}
				}
				else if(dupmat[i+1][j-1]==-1)
					continue;
				else
					op=op+dupmat[i+1][j-1];
			}
			
			if(prime[mat[i+1][j+1]]!=0)
			{
				if(dupmat[i+1][j+1]==0)
				{
					if(gcd(mat[i][j],K)!=1)
					{
						dupmat[i][j]=-1;
						continue;
					}
					tp=mat[i+1][j+1];
					while(tp<=100000 && prime[tp]!=0)
					{
						tp=tp+K;
						op=op+1;
						dupmat[i+1][j+1]++;
					}
					if(tp>100000)
					{	dupmat[i+1][j+1]=-1;	continue;	}
				}
				else if(dupmat[i+1][j+1]==-1)
					continue;
				else
					op=op+dupmat[i+1][j+1];
			}
			
			if(final>op)
			{
				final=op;
				x=i;
				y=j;
			}
		}
	}

	if(final!=LLONG_MAX)
	{
		printf("yes\n");
		printf("%lld\n",final);
		printf("%d %d",x+1,y+1);
	}
	else
		printf("no\n");
		

	return 0;
}