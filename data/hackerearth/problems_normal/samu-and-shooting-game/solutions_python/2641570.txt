def winning_chances(n, w, x, y, p, q, cache={}):
    if n <= 0 < w: return 0
    if n <= 0 and w <= 0: return 1
    if w <= 0: return 1
    if (n, w) in cache: return cache[(n, w)]

    a = p * winning_chances(n - 1, w - x, x, y, p, q, cache)+(1 - p) * winning_chances(n - 1, w, x, y, p, q, cache)
    c = q * winning_chances(n - 1, w - y, x, y, p, q, cache)+(1 - q) * winning_chances(n - 1, w, x, y, p, q, cache)
    res = max([a, c])
    cache[(n, w)] = res

    return res


def main():
    t = int(raw_input())
    for i in xrange(t):
        x, y, n, w, p, q = map(int, raw_input().split())
        print("{0:.6f}".format(winning_chances(n, w, x, y, (p / 100.0), (q / 100.0), {}) * 100))


if __name__ == '__main__':
    main()