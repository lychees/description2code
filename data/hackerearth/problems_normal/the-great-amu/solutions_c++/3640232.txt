#include <bits/stdc++.h>
// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#include <time.h>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define dbl long double
#define pi 3.14159265358979323846
using namespace std;
// mylittledoge

#ifdef DONLINE_JUDGE
	// palindromic tree is better than splay tree!
	#define lld I64d
#endif

int pw(int a, int e, int p) {
	if(e <= 0) return 1;
	int x =pw(a,e/2,p);
	x =(x*x)%p;
	if(e%2 != 0) x =(x*a)%p;
	return x;}

int inv(int a, int p) {
	if(a%p == 0) return 0;
	return pw(a,p-2,p);}

int main() {
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout << fixed << setprecision(10);
	int N,Q;
	cin >> N >> Q;
	int P[3] ={2,5,719};
	vector< vector<int> > V[3],W[3];
	for(int k =0; k < 3; k++) {
		V[k].resize(N,vector<int>(N,0));
		W[k].resize(N,vector<int>(N,0));
		for(int i =0; i < N; i++) W[k][i][i] =1;}
	for(int i =0; i < N; i++) for(int j =0; j < N; j++) {
		int x;
		cin >> x;
		for(int k =0; k < 3; k++) V[k][i][j] =x%P[k];}

	for(int k =0; k < 3; k++) {
		vector<bool> fr(N,true);
		for(int i =0; i < N; i++) {
			int x =-1;
			for(int j =0; j < N; j++) if(fr[j] && V[k][j][i] != 0) x =j;
			if(x == -1) continue;
			fr[i] =false;
			swap(V[k][x],V[k][i]);
			swap(W[k][x],W[k][i]);
			int I =inv(V[k][i][i],P[k]);
			for(int j =0; j < N; j++) {
				V[k][i][j] =(V[k][i][j]*I)%P[k];
				W[k][i][j] =(W[k][i][j]*I)%P[k];}
			for(int j =0; j < N; j++) if(j != i && V[k][j][i] != 0) {
				int I2 =V[k][j][i];
				for(int l =0; l < N; l++) {
					V[k][j][l] =(V[k][j][l]-V[k][i][l]*I2)%P[k];
					if(V[k][j][l] < 0) V[k][j][l] +=P[k];
					W[k][j][l] =(W[k][j][l]-W[k][i][l]*I2)%P[k];
					if(W[k][j][l] < 0) W[k][j][l] +=P[k];}
				}
			}
		}

	for(int i =0; i < Q; i++) {
		vector<int> v(N);
		for(int i =0; i < N; i++) cin >> v[i];
		bool ok =true;
		for(int k =0; k < 3; k++) {
			vector<int> w(N,0);
			for(int a =0; a < N; a++) for(int b =0; b < N; b++) 
				w[a] =(w[a]+W[k][a][b]*v[b])%P[k];
			for(int j =0; j < N; j++) 
				if(w[j] != 0 && V[k][j][j] == 0) ok =false;
			}
		if(ok) cout << "Yes\n";
		else cout << "No\n";}
	return 0;}

// look at my code
// my code is amazing
