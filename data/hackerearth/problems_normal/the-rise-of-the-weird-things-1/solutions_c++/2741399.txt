#include <iostream>
using namespace std;
void mergeSort(int arr[],int low,int mid,int high);
void partition(int arr[],int low,int high);

int main() {
	int t;
	cin>>t;
	int a[t],b[t],i=0,j=0;
	int k,ran,even=0,odd=0;
	while(t--)
	{
	    cin>>ran;
	    if(ran%2==0)
	    {
	   	even = even+ran;
	    a[i]=ran;
	    i++;
	    a[i]=even;
	    }
	    else
	    {
	    	odd = odd +ran;
	    	b[j]=ran;
	    	j++;
	    	b[j]=odd;
	    }   
	}
	partition(a,0,i);
	partition(b,0,j);
	
	for (k=0;k<=i;k++)
	cout<<a[k]<<" ";
	for (k=0;k<=j;k++)
	cout<<b[k]<<" ";
	
	
	return 0;
}

void partition(int arr[],int low,int high){

    int mid;

    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid);
         partition(arr,mid+1,high);
         mergeSort(arr,low,mid,high);
    }
}

void mergeSort(int arr[],int low,int mid,int high){

    int i,m,k,l,temp[100000];

    l=low;
    i=low;
    m=mid+1;

    while((l<=mid)&&(m<=high)){

         if(arr[l]<=arr[m]){
             temp[i]=arr[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             m++;
         }
         i++;
    }

    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             i++;
         }
    }
   
    for(k=low;k<=high;k++){
         arr[k]=temp[k];
    }
}


