#include <iostream>
#include <map>
#include <vector>
using namespace std;

long long H[100005];
long long L[100005];
long long DP[100005][2];

int main()
{
    int n;
    map<long long, long long> m;
    cin>>n;
    for(int i=1;i<=n;i++)
    	cin>>H[i]>>L[i];
    
    DP[0][0] = 0;
    DP[0][1] = 0;
    L[0] = 0;
    m[0] = 0;
    
    
    for(int i=1;i<=n;i++)
    {
    	DP[i][0] = max(DP[i-1][0], DP[i-1][1]);
    	DP[i][1] = H[i];
		auto it = m.upper_bound(L[i]);
		it--;
		DP[i][1] = max(DP[i][1], H[i] + it->second);
		if(DP[i][1] > it->second)
		{
			m[L[i]] = DP[i][1];
		
	    	it = m.upper_bound(L[i]);
	    	
	    	vector<map<long long, long long>::iterator> v;
	    	for(;it!=m.end();it++)
	    		if(it->second <= DP[i][1])
	    			v.push_back(it);
	    
	    	for(auto it=v.begin();it!=v.end();it++)
	    		m.erase(*it);
	    	v.clear();
		}
    }
    
    cout<<max(DP[n][0], DP[n][1])<<endl;
    return 0;
}
