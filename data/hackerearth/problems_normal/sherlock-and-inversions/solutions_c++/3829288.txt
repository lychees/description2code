//BISMILLAHIR RAHMANIR RAHIM
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<queue>
#include<set>
#include <iostream>
#include<stack>
#include<map>
#include<string>
#include<vector>
#include<algorithm>
#define N 1000000
#define sn scanf
#define pf printf
#define pb push_back
#define mp make_pair

const double PI=2.0*acos(0);

typedef long long int ll;
using namespace std;
struct T{
int b,x,y,p;
}qry[100005];

bool cmp(T x,T y)
{
    if(x.b==y.b)
        return x.y<y.y;
        return x.b<y.b;
}
ll bit[100010],bitt[100010];
int ar[100005],arr[100005];
map<int,int>vis;
void update(int p,int v)
{
    while(p<100005)
    {
        bit[p]+=v;
        p+=p&-p;
    }
}
ll query(int p)
{
    ll s=0;
    while(p>0)
    {
        s+=bit[p];
        p-=p&-p;
    }
    return s;
}
void update1(int p,int v)
{
    while(p<100005)
    {
        bitt[p]+=v;
        p+=p&-p;
    }
}
ll query1(int p)
{
    ll s=0;
    while(p>0)
    {
        s+=bitt[p];
        p-=p&-p;
    }
    return s;
}
int main()
{
    int i,j,k,l,t,q,cs=1,r=1,s,m,n,a,b,c,d,e,f,g,h,u,v;

    //freopen(".txt","r",stdin);
    sn("%d %d",&n,&q);
    for(i=0;i<n;i++)
    {
        sn("%d",&ar[i]);
        arr[i]=ar[i];
    }
    sort(arr,arr+n);
    for(i=0,j=1;i<n;i++)
    {
        if(vis[arr[i]]==0)
        {
            vis[arr[i]]=j;j++;
        }
    }
    for(i=0;i<n;i++)
        ar[i]=vis[ar[i]];
    g=317;
    for(i=0;i<q;i++)
    {
        sn("%d %d",&qry[i].x,&qry[i].y);
        qry[i].b=qry[i].x/g;qry[i].p=i;
    }
    sort(qry,qry+q,cmp);
    qry[q].b=10000;

    int L=1,R=1;
    h=100001;
    ll anx=0,ans[100005];
    for(i=0;i<q;)
    {
          e=i;
          L=1,R=1;anx=0;
           memset(bit,0,sizeof(bit));
           memset(bitt,0,sizeof(bitt));
         for(;i<q&&qry[e].b==qry[i].b;i++)
         {
             u=qry[i].x;v=qry[i].y;
             while(R<=v)
             {
                 anx=anx+query(h-ar[R-1]-1);
                 update(h-ar[R-1],1);
                 update1(ar[R-1],1);
                 R++;
             }
             while(R-1>v)
             {
                 anx=anx-query(h-ar[R-1]-1);
                 update(h-ar[R-1],-1);
                 update1(ar[R-1],-1);
                 R--;
             }
             while(L<u)
             {
                 anx=anx-query1(ar[L-1]-1);
                 update(h-ar[L-1],-1);
                 update1(ar[L-1],-1);
                 L++;
             }
             while(L>u)
             {
                anx=anx+query1(ar[L-2]-1);
                 update(h-ar[L-2],1);
                 update1(ar[L-2],1);
                 L--;
             }
             ans[qry[i].p]=anx;
         }
    }
    for(i=0;i<q;i++)
        pf("%lld\n",ans[i]);
    return 0;

}

/*
#include <bits/stdc++.h>
  #define _ ios_base::sync_with_stdio(0);cin.tie(0);
*/
