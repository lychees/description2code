/*#include <iostream>pub
using namespace std;
long long int arr[1000001];

unsigned int hcf(unsigned int a, unsigned int b) {
   if (b == 0) {
      return a;
   } else {
      return hcf(b, a % b);
   }
}
int cal(int n)
{
		int count=0;
		for(int j=2;j*j<=n;j++)
		{
			
			
				if(hcf(j,n))
				count++;
			
		}
}
int phi(int n) {
	int result = n;
	for(int i = 2; i * i <= n; ++i)
		if(n % i == 0) {
			while(n % i == 0)
				n /= i;
			result -= result / i;
		}
	if(n > 1)
		result -= result / n;
	return result;
}
void calculate()
{
	arr[0]=0;arr[1]=0;
	for(int i=2;i<1000000;i++)
	{
		arr[i]=arr[i-1]+phi(i);
	}
}
int main()
{
	int t;
	cin>>t;
	int no;
		int count=0;
		
		calculate();
	for(int i=0;i<t;i++)
	{
		
		cin>>no;
	
		cout<<(no*(no-1))/2 -arr[no]<<endl;
	}
   
    return 0;
}
*/
#include <stdio.h>
#include<math.h>
long int a[1000004]={0};
int ar[1000004]={0};
int isprime(long int n){
	int t,i;
	t=sqrt(n);
	for(i=2;i<=t;i++){
		if(n%i==0)return 0;
	}
	return 1;
}
int main()
{
   long int t,n,i,j,k;
    long int res;
     ar[2]=1;
    for(i=3;i<1000000;i++){
    	if(isprime(i)==1)ar[i]=1;
    }
    for(i=4;i<=1000000;i++){
    	if(ar[i]==1)a[i]=a[i-1];
    	else{
    		j=i;k=2;res=i;
    		while(j>1 && ar[j]!=1){
    			if(ar[k]==1 && j%k==0){while(j%k==0)j/=k;
    			  res=res*(k-1)/k;
    			}
    		k++;	
    		}
    	    	if(j>1)res=res*(j-1)/j;
    	  a[i]=a[i-1]+(i-res-1);	
    	}
    }
    scanf("%ld",&t);
    while(t--){
    	scanf("%ld",&n);
    	printf("%ld\n",a[n]);
    }
    return 0;
}