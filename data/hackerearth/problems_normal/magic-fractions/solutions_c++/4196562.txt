/*input
500
*/
#include <iostream>
#include <cstdio>
#include <vector>
#include <functional>
#include <math.h>
#include <string.h>
#include <utility>
#include <algorithm>
#include <iomanip>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <stdlib.h>
#include <list>
#include <assert.h>
#include <time.h>
#include <fstream>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define ll long long
#define N 505
#define _N 500
const ll mod = 1e18 + 7;
template<class T>
void maximize(T &x, T y) {
	if (x < y) x = y;
}
template<class T>
void minimize(T &x, T y) {
	if (x > y) x = y;
}

ll prime[505];
ll n, ans = 0;

void eratosthene() {
	for (ll i = 2; i <= _N; i++) {
		if (prime[i] == 0) {
			for (ll j = i * 2; j <= _N; j += i) prime[j]++;
		}
	}
}

long long binPow(long long a, long long q) // remember to replace pow by this
{
	a %= mod;
	if (q == 0) return 1;
	return ((q % 2 == 1 ? a : 1) * binPow(a * a, q / 2)) % mod;
}
ll cal(ll d) {
	if (d == 1) return 0;
	if (d == 2) return 1;
	if (d == 3) return 2;
	if (d == 4) return 2;
	if (d == 5) return 4;
	ll cnt = 0;
	for (ll i = 3; i <= d; i++) {
		if (prime[i] == 0) {
			cnt++;
		}
	};
	return binPow(2, cnt) % mod;
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n;
	eratosthene();
	for (ll i = 1; i <= n; i++) {
		ans += cal(i);
		ans %= mod;
	}
	cout << ans;
}