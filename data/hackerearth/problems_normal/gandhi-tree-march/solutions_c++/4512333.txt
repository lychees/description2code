#include<bits/stdc++.h>
using namespace std;
struct node{
	int col;
	char ds;
	node *left,*right,*par;
};
vector<char> v;
int n;
void dfs(node* root,int co)
{
	if(!root || root->ds=='0') return;
	if(n==co){
		v.push_back(root->ds);
	}
	dfs(root->left,co-1);
	dfs(root->right,co+1);
}
int main()
{
	int t,i,j,tt,l;
	string s;
	node* temp,*root,*r;
	cin>>t;
	while(t-->0)
	{
		cin>>n;
		cin>>s;
		l=s.length();
		l--;
	    
	    temp = new node;
	    temp->ds=s[0];
	    temp->col=0;
	    temp->left=NULL;
	    temp->right=NULL;
	    temp->par=NULL;
	    root=r=temp;
	    for(int i=1;i<=l;i++)
	    {
	    	if(isalpha(s[i]))
	    	{
	    		if(s[i-1]==')'||s[i-1]=='.')
	    		{
	    			r=r->par;
	    			r=r->right;
				}
				r->ds=s[i];
			}
			if(s[i]==')')
			{
				r=r->par;
			}
			if(s[i]=='(')
			{
				temp = new node;
				temp->left=NULL;
				temp->right=NULL;
				temp->ds='0';
				temp->par=r;
				r->left=temp;
				temp=new node;
				temp->left=NULL;
				temp->right=NULL;
				temp->ds='0';
				temp->par=r;
				r->right=temp;
				
				r=r->left;;
			}
		}
		dfs(root,0);
		l=v.size();
		if(l)
		{
			sort(v.begin(),v.end());
			for(int i=0;i<=l-1;i++)
			{
				cout<<v[i];
			}
		
		}
	    else 
		cout<<"Common Gandhijee!";
		cout<<endl;
		v.clear();
	    
	}
	return 0;
}