#include <bits/stdc++.h>
using namespace std;
set<pair<int,int > > s;
set<pair<int,int > >::iterator it;
set<pair<int,pair<int,int> > > abc;
int arr[100006];
int size[100006];int i;
int setsize[100006];
int maxsize=1;
void init(int n)
{
	for(i=1;i<=n;i++)
	{
		arr[i]=i;size[i]=1;s.insert(make_pair(1,i));
	}
	setsize[1]=n;
}
int root(int x)
{
	while(x!=arr[x])
	{
		arr[x]=arr[arr[x]];
		x=arr[x];
	}
	return x;
}
bool find(int a,int b)
{
	if(root(a)==root(b))
	{
		return true;
	}
	else
	{
		return false;
	}
}
 
int main() {
	ios::sync_with_stdio(false);
	int n;cin>>n;init(n);
	int q;cin>>q;int prev;
	while(q--)
	{
		int a,b;cin>>a>>b;
		int roota=root(a);
		int rootb=root(b);
		
		if(roota!=rootb)
		{
			
			int sizea=size[roota];
			int sizeb=size[rootb];
			setsize[sizea]--;
			setsize[sizeb]--;
			s.erase(make_pair(sizea,roota));
			s.erase(make_pair(sizeb,rootb));
			arr[rootb]=roota;
			size[roota]=sizea+sizeb;
			int sizec=sizea+sizeb;
			setsize[sizec]++;
			if(sizec>=maxsize)
			maxsize=sizec;
			s.insert(make_pair(sizec,roota));
		}
		i=1;
		while(setsize[i]==0)
		i++;int flag=0;
		int min=999999;
		if(setsize[i]==1)
		{
			int temp1=i;i++;
			for(;i<=maxsize;i++)
			{
				if(setsize[i]>1)
				{
					cout<<"0"<<endl;flag=1;break;
				}
				else if(setsize[i]==1)
				{
					int temp2=i;
					int temp=abs(temp1-temp2);temp1=temp2;
					if(temp<min)
					min=temp;
				}
				
			}
		}
		else
		{
			cout<<"0"<<endl;flag=1;
		}
		if(setsize[n]==1)
		{cout<<"0"<<endl;flag=1;}
		if(flag==0)
		{cout<<min<<endl;}
	}
	return 0;
}