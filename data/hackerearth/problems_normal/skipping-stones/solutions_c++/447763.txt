#include <stdio.h>     
#include <assert.h>   

static int numElem;
static int lStep;
static int puddleLen;

struct Stone
{
	int index;
	float prob;
	int dist;
};

static Stone stone[1002];

static float maxProb[1002];


void Skipping_Stones()
{
	scanf("%d %d %d", &numElem, &lStep, &puddleLen);

	stone[0].index = 0;
	stone[0].prob = 1;

	for (int i = 1; i <= numElem; i++)
	{
		stone[i].index = i;
		scanf("%f", &stone[i].prob);
	}

	int prevdist = 0;
	int temp;
	for (int i = 0; i < numElem; i++)
	{
		scanf("%d", &temp);
		stone[i].dist = temp - prevdist;
		prevdist = temp;
	}

	stone[numElem].dist = puddleLen - temp;

	maxProb[numElem+1] = 1;

	for (int i = numElem; i>=0; i--)
	{
		int dist = 0;
		float prob = -1;

		for (int j = i; j <= numElem; j++)
		{
			dist += stone[j].dist;
			if (dist <= lStep)
			{
				if (stone[i].prob * maxProb[j+1] > prob)
					prob = stone[i].prob * maxProb[j+1];

			}
			else
			{
				break;
			}

		}

		maxProb[i] = prob;

	}


	if (maxProb[0] < 0)
	{
		printf("IMPOSSIBLE\n");
	}

	int prob =  int (maxProb[0] * 1000 * 1000);

	if (prob)
	{
		printf("%.6f\n", maxProb[0]);
	}
	else
	{
		printf("IMPOSSIBLE\n");
	}


}


int main()
{
    Skipping_Stones();
    return 0;
}
