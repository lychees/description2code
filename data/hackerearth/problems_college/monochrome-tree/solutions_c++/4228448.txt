#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define rep(i,a) for(ll i=0;i<a;++i)
#define repp(i,a,b) for(ll i=a;i<b;++i)
#define all(c) (c).begin(), (c).end()
#define FILL(a,x) memset(a,x,sizeof(a))
#define    foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
ll M=1e9+7;

int ini[100005],fin[100005],dp[2][100005];

vector<int> vec[100005];


void dfs(int no,int p,int fl){
    if(dp[fl][no]!=-1)return;
    if(vec[no].size()==1 && p!=-1){
        int cu=(ini[no]+fl)%2;
        if(cu==fin[no])dp[fl][no]=0;
        else dp[fl][no]=1;
        return ;
    }
    
    int res=0,cu=(ini[no]+fl)%2,res1=0;
   // cout<<no<<" "<<p<<" "<<fl<<" "<<cu<<endl;
        for(auto i:vec[no]){
            if(i==p)continue;
            dfs(i,no,fl);
            dfs(i,no,1-fl);
            res+=dp[fl][i];
            res1+=dp[1-fl][i];
        }
    
    if(cu!=fin[no]){
        res++;
        res1++;
    }
    else res1+=2;
    
    dp[fl][no]=min(res,res1);
    return ;
}

int main()
{
    fastScan;
    int n;
    cin>>n;
    int a,b;
    rep(i,n-1){
        cin>>a>>b;
        vec[a].pb(b);
        vec[b].pb(a);
    }
    repp(i,1,n+1)cin>>ini[i];
    repp(i,1,n+1)cin>>fin[i];
    FILL(dp,-1);
    dfs(1,-1,0);
    
    cout<<dp[0][1];
   
    
    return 0;
}