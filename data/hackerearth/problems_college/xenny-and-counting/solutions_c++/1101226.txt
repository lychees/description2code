#include <iostream>
#include <algorithm>
using namespace std;

long long int DP_cal(int n,int k){
	long long int** l = new long long int*[n+1];
	for (int i = 0; i < n+1; i++)
		l[i] = new long long int[k+1];
	for (int i = 0; i < k+1; i++)
		l[0][i] = 1;
	for (int i = 1; i < n+1; i++)
		l[i][0] = 0;
	for (int i = 1; i < n+1; i++){
		for (int j = 1; j < k+1; j++){
			l[i][j] = 0;
			for (int x = 0; x <= i; x++){
				l[i][j] += l[i-x][j-1];  
			}	
		}
	}
	return l[n][k];
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,k;
        cin>>n>>k;
        cout<< DP_cal(k,n) << endl;
    }
}