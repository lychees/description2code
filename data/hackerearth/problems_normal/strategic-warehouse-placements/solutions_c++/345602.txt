#include<bits/stdc++.h>
using namespace std;
vector<pair<int, int> > v;

int main()
{
	int n, m, i, a, b;
	vector<vector<int> > vvv(10009);
	scanf("%d%d", &n, &m);
	if (m == 0) {
		printf("%d\n", n);
		return 0;
	}
	for (i = 0; i < m; i++) {
		scanf("%d%d", &a, &b);
		v.push_back(make_pair(a, b));
		vvv[a].push_back(b);
		vvv[b].push_back(a);
	}
	int maxi = 0, an;
	for (i = 0; i <= n; i++) {
		if (vvv[i].size() > maxi) {
			maxi = vvv[i].size();
			an = i;
		}
	}
	int visit[10009] = {0};
	int l = vvv[an].size();
	int ans = 1;
	visit[an] = 1;
	for (i = 0; i < l; i++) {
		visit[vvv[an][i]] = 1;
	}
	//printf("pp\n");
	while (1) {
		//printf("gg\n");
		vector<vector<int> > vv(10009);
		for (i = 0; i < m; i++) {
			if (visit[v[i].first] == 0 && visit[v[i].second] == 0) {
		//		printf("ll\n");
				vv[v[i].first].push_back(v[i].second);
				vv[v[i].second].push_back(v[i].first);
		//		printf("uu\n");
			} else if (visit[v[i].first] == 1 && visit[v[i].second] == 0)
				vv[v[i].first].push_back(v[i].second);
			else if (visit[v[i].first] == 0 && visit[v[i].second] == 1)
				vv[v[i].second].push_back(v[i].first);
		}
		maxi = 0;
		//printf("ii\n");
		for (i = 0; i <= n; i++) {
			if (vv[i].size() > maxi) {
				maxi = vv[i].size();
				an = i;
			}
		}
		if (maxi == 0)
			break;
		//ans++;
		l = vv[an].size();
		visit[an] = 1;
		for (i = 0; i < l; i++) {
			visit[vv[an][i]] = 1;
		}
	}
	for (i = 1; i <= n; i++)
		if (visit[i] == 2)
			ans++;
	printf("%d\n", n / 10 == 0 ? ans * 3 : ans * 2);
	//printf("%d\n", ans);
	return 0;
}