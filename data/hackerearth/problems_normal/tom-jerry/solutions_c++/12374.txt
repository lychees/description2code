#include<stdio.h>
#include<stdlib.h>
#include<string.h>
long long int A[1001][1001],B[1001][1001],n,paths=0;
int solve(int x,int y) {
	if(x==n-1 && y==n-1) {
		paths++;
		return 2;
	}
	if(x-1 >=0 && !B[x-1][y] && !A[x-1][y]) {
		B[x-1][y]=1;
		solve(x-1,y);
		B[x-1][y]=0;
	}
	if(x+1<n && !B[x+1][y] && !A[x+1][y]) {
		B[x+1][y]=1;
		solve(x+1,y);
		B[x+1][y]=0;
	}
	if(y-1>=0 && !B[x][y-1] && !A[x][y-1]) {
		B[x][y-1]=1;
		solve(x,y-1);
		B[x][y-1]=0;
	}
	if(y+1<n && !B[x][y+1] && !A[x][y+1]) {
		B[x][y+1]=1;
		solve(x,y+1);
		B[x][y+1]=0;
	}
}
int main() {
	int i,j;
	int T;
	scanf("%lld",&n);
	paths=0;
	//memset(B,0,sizeof(B));
	for(i=0;i<n;i++) for(j=0;j<n;j++) scanf("%lld",&A[i][j]);
	B[0][0]=1;
	solve(0,0);
	printf("%lld\n",paths);
	return 0;
}
