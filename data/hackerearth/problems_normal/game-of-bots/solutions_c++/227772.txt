//Practice Problems / Game of Bots
#include<iostream>
#include<cstring>
#include<string>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<stack>
#include<set>
#include<map>
#include<list>
#include<math.h>
#include<ctime>
#define LL long long
#define ULL unsigned long long
#define FOR(i,n) for(i=0;i<n;i++)
#define FORx(i,lb,ub) for(i=lb;i<=ub;i++)
#define RFOR(i,ub,lb) for(i=ub;i>=lb;i--)
#define FORS(it,v) for(it=v.begin();it!=v.end();it++)
#define sc(n) scanf("%d",&n)
#define scst(n) scanf("%s",n)
#define print(x) printf("%d\n",x)
#define N 1000001
LL gcd(LL a, LL b) { return b?gcd(b,a%b):a; }
using namespace std;

bool isPossible(char *s1,char *s2)
{
    int i=0,j=0,l1=strlen(s1),l2=strlen(s2);
    if(l1!=l2)
    return false;

    while(s1[i]!='\0' && s2[j]!='\0')
    {
        while(s1[i]=='#')
        i++;
        while(s2[j]=='#')
        j++;
        if(s1[i]!=s2[j])
        return false;
        else if(s1[i]==s2[j])
        {
            if((s1[i]=='A' && i<j)||(s1[i]=='B' && i>j))
            return false;
            i++;j++;
        }
    }
    return true;
}

int main()
{
    int t;
    char *s1=(char*)malloc(sizeof(char)*N);
    char *s2=(char*)malloc(sizeof(char)*N);
    sc(t);
    while(t--)
    {
        scanf("%s%s",s1,s2);
        if(isPossible(s1,s2))
        printf("Yes\n");
        else
        printf("No\n");
    }
    return 0;
}
