#include <iostream>
#include <algorithm>
 #include<cstdio>
using namespace std;
 
class _x{ 
 public: long long int  s, e, p,m; 
	}VAL[10005];
long long int  N;
 
long long int  comp(class _x a, class _x b ){
	return b.e>a.e;
}
 
long long int  lesserlater(long long int  s, long long int  e, long long int  x)
{
//	cout << s << ' ' << e << ' ' << x << endl;
 	if(s==e) 
		return s;
	if(e>N)
		return -1;
	long long int  m=(s+e)/2;
	//cout << m << '*' << VAL[m].e << ' ' << VAL[m+1].e << endl;
	if(VAL[m].e < x) { 
		if( VAL[m+1].e >= x ) 
			return m;
		else 
			return lesserlater(m+1, e,x);
	}else if( VAL[m].e >= x )
			return lesserlater(s, m, x);
}
 
int  main ()
{
	long long int  tc;
	cin >> tc;
	while(tc--){
	cin >> N;
	for(long long int  i=1;i<=N;i++) {
		cin >> VAL[i].s >> VAL[i].e >> VAL[i].p;
		

		VAL[i].e--;
		}
		sort(VAL,VAL+N+1, comp);

	for(long long int  j=1;j<=N;j++){
 
		long long int  k=lesserlater(0,j,VAL[j].s);
		VAL[j].p+=VAL[k].p;
		
		if(VAL[j].p<VAL[j-1].p) 
			VAL[j].p=VAL[j-1].p;
			

	}
	double res = VAL[N].p;
		printf("%.2f\n",res/100);
	}
}