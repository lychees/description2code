#include<stdio.h>
 
long long max(long long a, long long b) { return (a > b)? a : b; }
 
long long knapSack(int W, int wt[], long long val[], int n)
{
   int i, w;
   long long K[n+1][W+1];
 
   for (i = 0; i <= n; i++)
   {
       for (w = 0; w <= W; w++)
       {
           if (i==0 || w==0)
               K[i][w] = 0;
           else if (wt[i-1] <= w)
                 K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]],  K[i-1][w]);
           else
                 K[i][w] = K[i-1][w];
       }
   }
 
   return K[n][W];
}
 
int main()
{
    int t,i,j,k,l;
    long long ans;
    scanf("%d",&t);
    for(i=0;i<t;i++)
    {
    	scanf("%d%d",&j,&k);
    	long long val[j];int wt[j];
    	ans=0;
    	for(l=0;l<j;l++)
    	{
    		scanf("%d",&wt[l]);
    		if(wt[l]<(l+1))
    		wt[l]=(l+1)-wt[l];
    		else
    			wt[l]=10000;
    	}
    	for(l=0;l<j;l++)
    	{
    		scanf("%lld",&val[l]);
    		if(wt[l]==10000)
    		ans+=val[l];
    	}
	    printf("%lld\n", ans+knapSack(k, wt, val, j));
    }
    return 0;
}