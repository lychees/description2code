#include <bits/stdc++.h>
using namespace std;
#define ll long long 
#define mod 1000000007

ll fast_pow(ll x,ll b){
	if(b == 0) return 1;
	if(b == 1) return x;
	if(b%2 == 1){
		return (x*fast_pow(x,b-1))%mod;
	} else {
		ll y = fast_pow(x,b/2);
		return (y*y)%mod;
	}
}

ll inv(ll x){
	return fast_pow(x,mod-2);
}

int main(){
    int t;
    cin>>t;
    while(t--){
    	ll s[20] = {0};
    	int n,k;
    	scanf("%d %d",&n,&k);
    	ll x;
    	for(int i = 0;i<k;i++){
    		for(int j = 0;j<n;j++){
    			scanf("%lld",&x);
    			s[j] += x;
    		}
    	}
    	ll min_ans = INT_MAX;
    	ll max_ans = -1;
    	int min_len = 0;
    	int max_len = 0;
    	for(int mask = 1;mask<(1<<n); mask++){
    		ll val = 1;
    		int cntr = 0;
    		for(int j = 0;j<n;j++){
    			if(mask&(1<<j)){
    				cntr ++;
    				val *= s[j];
    				val %= mod;
    			}
    		}
    		val *= inv(cntr);
    		val %= mod;
    		if(val >= max_ans) {
    			if(val == max_ans){
    				(max_len != 0)? max_len = min(max_len,cntr) : max_len = cntr;
    			}
    			else {
    				max_ans = val;
    				max_len = cntr;
    			}
    		}
    		if(val <= min_ans){
    			if(val == min_ans){
    				(min_len != 0)? min_len = max(min_len,cntr) : min_len = cntr;
    			}
    			else {
    				min_ans = val;
    				min_len = cntr;
    			}
    		}
    	}
    	ll ans1 = max_ans^min_ans;
    	ll ans2 = min_len^max_len;
    	cout<<ans1<<" "<<ans2<<endl;
    }
    return 0;
}
