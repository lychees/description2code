#include<iostream>
#include<cstring>
#include<random>
#include<map>
using namespace std;
#define MOD 1000000007
#define MAX 1000005
int isprime[MAX/32+2];

#define isSet(n) isprime[n>>5]&(1<<(n&31))
#define unset(n) isprime[n>>5] &= ~(1<<(n&31));

void sieve()
{
    int i,j;
    isprime[0]=0xA28A28AC;
    for(int i=1;i<=MAX/32+1;i+=3)
    {
            isprime[i]  =0x28A28A28;
            isprime[i+1]=0x8A28A28A;
            isprime[i+2]=0xA28A28A2;
    }
    for(i=5;i*i<=MAX;i+=2)
                           if(isSet(i))
                             {
                                        for(j=i*i;j<=MAX;j+=i)
                                                unset(j);
                             }
}

int main()
{
	ios::sync_with_stdio(false);
	vector<int> primes;
	sieve();
	for(int i=2;i<=1000000;i++){
		if(isSet(i))
			primes.push_back(i);
	}
	vector<long long> prefixSum(1000010);
	for(int i=2;i<=1000000;i++){
		if(isSet(i))
		{
			//cout<<"AM PRIME "<<i<<"\n";
			prefixSum[i]=prefixSum[i-1];
		}
		else{
			int leastFactor=0;
			for(int j=0;j<primes.size();j++){
				if(i%primes[j]==0){
					leastFactor=primes[j];
					break;
				}
			}
			//cout<<"LEAST FACTOR IS "<<leastFactor<<"\n";
			
			prefixSum[i]=leastFactor+prefixSum[i-1];
			prefixSum[i]%=MOD;
			
		}
	}
	/*
	for(int i=1;i<=10;i++){
		cout<<prefixSum[i]<<" ";
	}
	*/
	int t;
	cin>>t;
	while(t--){
		int l,r;
		cin>>l>>r;
		cout<<(MOD+prefixSum[r]-prefixSum[l-1])%MOD<<"\n";
	}
	

	
}