#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>
#include <deque>
#include <bitset>
#include <iterator>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>
#include <utility>
#include <limits>
#include <time.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <cstring>

using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<char> vch;
typedef vector<vector<int> > vvi;
typedef map<int,int> MPII;
typedef set<int> SET;
typedef multiset<int> MSET;
 
#define s(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define FORAB(i,a,b) for(i=a;i<=b;i++)
#define forab(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) forab(i,0,n)
#define repn(i,n) FORAB(i,1,n)
#define bit(x,i) ( x & (1 << i) ) 
#define lowbit(x) ((x)&((x)^((x)-1))) //get the lowest bit of x
#define hBit(msb,n) asm("bsrl %1,%0" : "=r"(msb) : "r"(n)) //get the highest bit of x, maybe the fastest
#define fill(a,b)   memset(a,b,sizeof(a)) 
#define sz(a)      (int)(a.size())
#define MIN(a,b)     (a) = min((a),(b))
#define MAX(a,b)     (a) = max((a),(b))
#define ff first
#define ss second
#define ALL(v) (v).begin(),(v).end()
#define TR(i,x) for(typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define pb push_back
#define mp make_pair
#define MOD 1000000007
#define INF (int)1e9
#define EPS (double)(1e-9)
#define PI (double)(3.141592653589793)
ll pow(ll num,ll power){if(power==0)return 1;if(power==1)return num;	ll t = pow(num,power/2);return power%2?t*t*num:t*t;}
int main()
{	//freopen("input.txt", "r", stdin);
	//double c1 = clock();
	//*************CODE*****************
	int t,n,m,k,i,j,k1;
	cin>>t;
	while(t--)
	{
		cin>>m>>n>>k;
		double dp[m+1][k+1];
		fill(dp,0.0);
		repn(i,min(n,k))
		{
			dp[1][i] = (double)1/n;
		}
		FORAB(i,2,m)
		{
			repn(j,k)
			{
				for(k1 = 1;k1 < j && k1 <=n ;k1++)
				{
					dp[i][j] += dp[i-1][j-k1];
				}
				dp[i][j] = dp[i][j] / n;
			}
		}
		double ans = dp[m][k];
		if(ans == 0)
		{
			cout<<"0.000 0\n";
			continue;
		}
		int deci = 0;
		//cout<<"ans ="<<ans<<"\n";
		while(((int)ans)%10 == 0)
		{
			ans *= 10;
			deci++;
		}
		printf("%.3lf %d\n",ans,deci);
		
	}
		
	//*************END******************
	//c1 = clock() - c1;
	//fprintf(stderr,"Execution Time = %lf sec\n",c1 / CLOCKS_PER_SEC);
	return 0;
}