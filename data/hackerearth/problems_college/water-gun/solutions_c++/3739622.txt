#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MX = 5010;
const ll MOD = 1000000007;

#define pow powq
ll pasc[MX][MX];
ll pow(ll a, int b)
{
	ll ret = 1;
	while (b) {
		if (b & 1) {
			ret = ret * a % MOD;
		}
		b /= 2;
		a = a * a % MOD;
	}
	return ret;
}

ll mul(ll a, ll b)
{
	a *= b;
	a %= MOD;
	return a;
}

ll sub(ll a, ll b)
{
	a -= b;
	a %= MOD;
	if (a < 0) a += MOD;
	return a;
}

int main()
{
	for (int i = 0; i < MX; i++) {
		for (int j = 0; j < MX; j++) {
			if (j > i)
				pasc[i][j] = 0;
			else if (j == 0)
				pasc[i][j] = 1;
			else
				pasc[i][j] = (pasc[i-1][j-1] + pasc[i-1][j]) % MOD;
		}
	}
	int T;
	scanf("%d", &T);
	while (T--) {
		ll K, N;
		scanf("%lld%lld", &K, &N);
		assert(1 <= K && K <= 5000);
		assert(1 <= N && N <= 5000);
		ll ans = 0;
		ans += mul(pasc[K][3], sub(sub(pow(3, N), mul(3, sub(pow(2, N), 2))), 3));
		ans += mul(K, sub(pow(K-1, N), K-1));
		ans += pasc[K][2];
		ans %= MOD;
		printf("%lld\n", ans);
	}
}