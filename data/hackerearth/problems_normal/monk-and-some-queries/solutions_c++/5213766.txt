#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>

using namespace std;
void max_heapify(int arr[],int i,int n){
int largest = i;
int left = 2* i;
int right = 2* i +1;
if(left<=n && arr[left]>arr[largest] ){
    largest = left;
}
if(right<=n && arr[right]>arr[largest] ){
    largest =    right;
}
if(largest!=i){
    swap(arr[i],arr[largest]);
    max_heapify(arr,largest,n);
}
}

void min_heapify(int arr[],int i,int n){
int smallest = i;
int left = 2* i;
int right = 2* i +1;
if(left<=n && arr[left]<arr[smallest] ){
    smallest = left;
}
if(right<=n && arr[right]<arr[smallest] ){
    smallest =    right;
}
if(smallest!=i){
    swap(arr[i],arr[smallest]);
    min_heapify(arr,smallest,n);
}
}
int minimum(int arr[]){
return arr[1];
}

int maximum(int arr[]){
return arr[1];
}
void extractnum(int arr[],int& length,string minORmax){
int var = arr[1];
arr[1] = arr[length];
length = length - 1;
//cout<<" arr1 "<<arr[1]<<endl;
if(minORmax=="min"){
 min_heapify(arr,1,length);

}else{
max_heapify(arr,1,length);
}
}

void increase_value(int arr[],int i,int val){
arr[i] = val;
while(i > 1 && arr[i/2]< arr[i]){
    swap(arr[i],arr[i/2]);
    i = i/2;
}
}

void decrease_value(int arr[],int i,int val){
arr[i] = val;
while(i > 1 && arr[i/2]> arr[i]){
    swap(arr[i],arr[i/2]);
    i = i/2;
}
}

void insert_to_max(int arr[], int length,int val){
//length = length +1;
arr[length] = -1;
increase_value(arr,length,val);
}

void insert_to_min(int arr[], int length,int val){
//length = length +1;
arr[length] = -1;
decrease_value(arr,length,val);
}
////////////////////////////////////////////////////////////////////////////////////////////////////

int main(){

int N,num,Q,x,p;
int arr[100000],brr[100000];
int length =1;
int countArr[100000]={0};
scanf("%d",&Q);
while(Q--){
        int flag=1;
    scanf("%d",&p);
    if(p==1){
            length++;
        scanf("%d",&x);
        insert_to_max(arr,length,x);
        insert_to_min(brr,length,x);
        countArr[x]++;
  /*               for(int j=0;j<length;j++){
        cout<<" after insert "<<arr[j]<<endl;
    }*/
    }else if(p==2){
     scanf("%d",&x);
     if(countArr[x]==0){
        cout<<"-1"<<endl;
     }else
    countArr[x]--;
    }
    else if(p==3){

        int maxm = maximum(arr);
        if((countArr[maxm])!=0){
            cout<<maxm<<endl;
        }else{
            while((countArr[maximum(arr)])==0){
                    if(length==1){
                        cout<<"-1"<<endl;
                        flag=0;
                        break;
                    }
                     extractnum(arr,length,"max");
            }
             if(flag==0){
                continue;
            }
            cout<<maximum(arr)<<endl;
        }

    }else{
    int minm = minimum(brr);
        if((countArr[minm])!=0){
            cout<<minm<<endl;
        }else{
            while((countArr[minimum(brr)])==0){
                     if(length==1){
                        cout<<"-1"<<endl;
                        flag=0;
                        break;
                    }
        extractnum(brr,length,"min");
            }
            if(flag==0){
                continue;
            }
            cout<<minimum(brr)<<endl;

        }
    }
}
}

