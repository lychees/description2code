#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;
bool is_palin ( string s )
{
	int i=0, l = s.length()-1;
	while ( i<l )
	{
		if ( s[i]!=s[l])
		return false;
		i++,l--;
	}
	return true;
}
int f ( string s )
{
	set<string> st;
	for ( int i = 0; s[i]; i++ )
	{
		for ( int j = i; s[j]; j++ )
		{
			string g = "";
			for ( int k = i; k <= j; k++)
			g+=s[k];
		if ( is_palin(g))
		st.insert(g);
		}
	}
	int sz = st.size();
	return sz;
}
long long a[12][12];
long long b[12][12], n, m, l;
long long dp[102][102];
long long id[102][102];
long long ans[12][12];
void mul ( long long x[][102], long long y[][102] )
{
	long long z[102][102],sum=0;
	for (int c = 0 ; c < l ; c++ )
    {
      for (int d = 0 ; d < l ; d++ )
      {
        for (int k = 0 ; k < l ; k++ )
        {
          long long ho =(x[c][k]*y[k][d])%mod;
          sum = sum + ho;
        }
        //if ( sum >= mod )
        sum %= mod;
        z[c][d] = sum;
        sum = 0;
      }
    }
    for (int c = 0 ; c < l ; c++ )
    {
      for (int d = 0 ; d < l ; d++ )
      {
      	x[c][d]=z[c][d];
      }
  }
}
int main()
    {
    	string s;
   long long i, j, x1,x2,y1,y2;
   cin >> n >> m;
   for ( i = 0; i < n; i++ )
   {
   	for ( j = 0; j < m; j++ )
   	{
   	cin >> s;
   	a[i][j] = f(s);
   	b[i][j]=l;
   	dp[l][l]=1;
   	l++;
   	}
   }
   int c;
   cin >> c;
   for ( i = 0; i < c; i++ )
   {
   		cin >> x1 >> y1 >> x2 >> y2;
   		dp[b[x1][y1]][b[x2][y2]]++;	
   		dp[b[x2][y2]][b[x1][y1]]++;
   }
   for ( i = 0; i < l; i++ )
   id[i][i]=1;
   long long d;
   cin >> d;
   while ( d > 0 )
   {
   		if ( d%2 == 1 )
   		mul(id,dp);
   		mul(dp,dp);
   		d/=2;
   }
   for ( i = 0; i < n; i++ )
   {
   	for ( j = 0; j < m; j++ )
   	{
   		for (int p = 0; p < n; p++ )
   		{
   			for(int q = 0; q < m; q++ )
   			{
   				long long ko =(id[b[i][j]][b[p][q]]*a[p][q])%mod;
   				ans[i][j]+=ko;
   				ans[i][j]%=mod;
   			}
   		}
   		cout << ans[i][j] << " ";
   	}
   	cout << endl;
   }
}