// @adi28galaxyak
// Content: dp practice

#include "bits/stdc++.h"
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vi > vii;
typedef pair<int, int> pii;
#define FF first
#define SS second
#define pb(v) push_back(v)
#define mp(x,y) make_pair(x, y)

#define s(n) scanf("%d",&n)
#define rep(i,start,end) for(int i = start;i<end;i++)

const int MAX = 1e6;
vector<bool> DP(MAX+5, false);
vector<bool> DONE(MAX+5, false);
bool update(int id){
    if(DONE[id]==true) {
        return DP[id];
    }
    vi x;
    int n = id;
    while(n>0){
        x.pb(n%10);
        n/=10;
    }
    
    rep(i,0,x.size()){
        int temp = id - x[i]*x[i];
        if(temp>0 and temp!=id) 
            if(update(temp)==true) {
                DONE[id] = true;
                DP[id] = true;
                return true;
            }

    }
    return false;
}

int main(){
    int tt;s(tt);
    DP[1] = DP[4] = DP[27] = DP[256] = DP[3125] = DP[46656] = DP[823543] =  true;
    DONE[1] = DONE[4] = DONE[27] = DONE[256] = DONE[3125] = DONE[46656] = DONE[823543] =  true;

    rep(i,0,10) DONE[i] = true;
    
    while(tt--){
        int n;
        s(n);
        
        update(n)==true?cout<<"Yes":cout<<"No";
        cout<<endl;
    }
}
