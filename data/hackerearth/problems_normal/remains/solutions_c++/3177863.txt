#include <algorithm>
#include <cstdio>
using namespace std;

typedef long long llong;

llong get(llong a, llong b, llong n) {
    llong k = min(n / 3, (a - b) / (2 * max(b, 1ll)));
    if (n == 0)
        return 0;
    else if (n >= 3 && b == 0) {
        k = n / 3;
        llong cur = 2 * a * k;
        return cur + get(a, b, n - 3 * k);
    } else if (n >= 3 && a >= 2 * b && k > 0) {
        llong cur = (-2 * b) * k + (a + (a - 2 * (k - 1) * b)) * k;
        return cur + get(a - 2 * k * b, b, n - 3 * k); 
    } else
        return abs(a - b) + get(b, abs(a - b), n - 1);
}

void solve() {
    llong a, b, n;
    scanf("%lld %lld %lld", &a, &b, &n);
    llong sum = a + b + get(a, b, n - 2);
    printf("%lld\n", sum);
}

int main() {
    int T;
    scanf("%d", &T);
    for (int i = 0; i < T; i++) {
        solve();
        fflush(stdout);
    }
}
