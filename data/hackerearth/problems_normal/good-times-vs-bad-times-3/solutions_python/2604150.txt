from fractions import gcd,Fraction
HH = 0
MM = 0
SS = 0
bad = 0
good = 0
badarr = []
goodarr = []
while(HH<24 and MM <60 and SS<60):
	goodarr.append(good)
	badarr.append(bad)	
	gcdHM = gcd(HH,MM)
	gcdGS = gcd(gcdHM,SS)
	if(gcdGS==1):# or HH<=1 or MM<=1 or SS<=1):
		good+=1		
	else:
		bad+=1		
	SS+=1
	if(SS==60):
		MM+=1
		SS=0
	if(MM==60):
		HH+=1
		MM=0
		SS=0

reqdict = {}
larr = len(badarr)
for i in xrange(larr):
	b = bad-badarr[i]
	g = good-goodarr[i]
	if(g!=0 and b!=0):
		f = Fraction(b,g)
		reqdict[i]=str(f.numerator) + ":"+str(f.denominator)
	else:	
		reqdict[i]=str(b) + ":" + str(g)
	
t = int(input())
for i in xrange(t):
	h,m,s=map(int,raw_input().split())
	tosecs = h*60*60 + m*60 + s
	print reqdict[tosecs]		
	