#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<queue>
#include<vector>
#include<cassert>

using namespace std;

#define ll long long
#define llu unsigned long long
#define MOD 100000
#define INF 2000000000

ll a[200005];
priority_queue <ll> maxq;
priority_queue <ll,vector<ll>,greater<ll> > minq;

int main()
{
    int n,i;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
       scanf("%lld",&a[i]);
    }
    
    if(n==1)
    {
            printf("%lld\n",a[0]);
            return 0;
    }
    ll ans = 0,tmp;
    ans = (ans + a[0] + min(a[0],a[1]))%MOD;
    i=2;
    maxq.push(min(a[0],a[1]));
    minq.push(max(a[0],a[1]));
    while(i<n)
    {
          if(a[i]<maxq.top())
           {
               maxq.push(a[i]);
           }   
           else
           {
               minq.push(a[i]);
           }
           
           if(maxq.size() > minq.size()+1)
           {
              tmp = maxq.top();
              maxq.pop();
              minq.push(tmp);              
           }
           else if(minq.size() > maxq.size()+1)
           {  
              tmp = minq.top();
              minq.pop();
              maxq.push(tmp);
           }
           
           if(maxq.size()==minq.size())
           {
              tmp = min(maxq.top(),minq.top());
           }
           else if(maxq.size()>minq.size())
           {
              tmp = maxq.top();
           }
           else
           {
               tmp = minq.top();
           }
           
           ans = (ans + tmp)%MOD;
           i++;
    }
    printf("%lld\n",ans);
    
    //system("pause");
    return 0;
}
