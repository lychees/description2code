// There is nothin in a catterpillar that tells you its going to be a butterfly ------------------- !
#include <bits/stdc++.h>
using namespace std;
#define ll  int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
const int inf=INT_MAX;

#define pi pair<ll,ll>
#define pii pair<pi,ll>
#define f first
#define mp make_pair
#define pb push_back
#define s second
#define rep(i,n) for(int i=0;i<n;i++)
#define forup(i,a,b) for(int i=a;i<=b;i++)
ll a[1251][1251];
ll b[1251][1251];
int N,U,V;
ll d1[1251];
ll d2[1251];
ll d11[1251];
ll d22[1251];
inline void read(int &a)
{
    register char c=0;
    while (c<33) c=getchar_unlocked();
    a=0;
    while (c>33)
    {
        a=a*10+c-'0';
        c=getchar_unlocked();
    }
}
class comp{
public:
	bool operator()(pi a,pi b){
		return a.s>b.s;
	}
};
void dj(){
	priority_queue<pi,vector<pi>,comp >pq;
	pq.push(mp(U,0));
	pi tp;
	ll u,d;
	while(pq.size()){
		tp=pq.top();
		pq.pop();
		if(d1[tp.f]<=tp.s) continue;
		u=tp.f;
		d=tp.s;
		d1[u]=d;
		rep(i,N){
			if(d1[i]>d1[u]+a[u][i]){
				pq.push(mp(i,d1[u]+a[u][i]));
			}
		}
	}
	pq.push(mp(V,0));
	while(pq.size()){
		tp=pq.top();
		pq.pop();
		u=tp.f;
		d=tp.s;
		if(d2[u]<=d) continue;
		d2[u]=d;
		rep(i,N){
			if(d2[i]>d2[u]+b[i][u]){
				pq.push(mp(i,d2[u]+b[i][u]));
			}
		}
	}
	
	pq.push(mp(U,0));
	while(pq.size()){
		tp=pq.top();
		pq.pop();
		if(d11[tp.f]<=tp.s) continue;
		u=tp.f;
		d=tp.s;
		d11[u]=d;
		rep(i,N){
			if(d11[i]>d11[u]+b[u][i]){
				pq.push(mp(i,d11[u]+b[u][i]));
			}
		}
	}
	
	pq.push(mp(V,0));
	while(pq.size()){
		tp=pq.top();
		pq.pop();
		u=tp.f;
		d=tp.s;
		if(d22[u]<=d) continue;
		d22[u]=d;
		rep(i,N){
			if(d22[i]>d22[u]+a[i][u]){
				pq.push(mp(i,d22[u]+a[i][u]));
			}
		}
	}
	
}
int main(){

	read(N);
	rep(i,N)
		rep(j,N)
			read(a[i][j]);
	rep(i,N){
		d1[i]=d2[i]=inf;
		d11[i]=d22[i]=inf;
	}
	rep(i,N)
		rep(j,N)
			read(b[i][j]);
	read(U);
	read(V);
	U--, V--;
	dj();
	ll ans=inf;
	rep(i,N){
		if(i!=U and i!=V){
			ans=min(ans,d1[i]+d2[i]);
			ans=min(ans,d11[i]+d22[i]);
		}
	}
	
	cout<<ans;

}
