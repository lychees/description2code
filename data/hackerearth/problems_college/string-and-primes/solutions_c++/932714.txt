/*
Template belongs to : Himanshu Jaju [himanshujaju]
*/

#include<bits/stdc++.h>
using namespace std;
;;
typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int t;cin>>t;while(t--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define msi       map<string,int>
#define msit      map<string,int>::iterator
#define pb        push_back
#define mp        make_pair

#define GI(x)     scanf("%d",&x);
#define GLL(x)    scanf("%lld",&x);
#define GSTR(x)   scanf("%s",x);

#define PI(x)     printf("%d",x);
#define PLL(x)    printf("%lld",x);
#define PSTR(x)   printf("%s",x);

#define FOR(i,a,b)      for(int i=a;i<b;i++)
#define RFOR(i,a,b)     for(int i=b-1;i>=a;i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       1000000007

VI primes;
int arr[10000001] = {0};
// limit <=10^7
void sieve(int limit)
{
      FOR(i,2,limit+1) arr[i] = 1;
      int i = 2;
      while(i<=limit)
      {
            primes.pb(i);
            int j = 2*i;
            while(j<=limit)
            {
                  arr[j] = 0;
                  j+=i;
            }
            i++;
            while(i<=limit && !arr[i])
                  i++;
      }
}
LL ans[1000000] = {0};

int is_prime(LL a)
{
      if(a<=1000000) return arr[a];
	int i = 0;
	while(primes[i]*primes[i]<=a)
	{
		if(a%primes[i] == 0) return 0;
		i++;
	}
	return 1;
}

int main()
{
      inp_s;
      sieve(1000);
      DRT()
      {
            string s;
            cin>>s;
            int cnt = 0;
            FOR(i,0,sz(s)) if(arr[s[i]]) cnt++;
            if(!cnt)
            {
                  cout<<"NULL"<<endl;
                  continue;
            }
            FOR(i,0,sz(s))
            if(!arr[s[i]])
            {
                  cnt++;
                  cout<<s[i];
            }
            cout<<endl;;;;;;;;;;;;
      }
      return 0;
}

