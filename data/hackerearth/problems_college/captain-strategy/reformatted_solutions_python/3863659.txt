def dfs(x):
    vis[x] = 1
    for v in edges[x]:
        if not vis[v]:
            dfs(v)
            par[v] = x
            dp[x] += dp[v]


n, q = map(int, raw_input().split())

edges = [[] for i in range(n+1)]
vis = [0]*(n+1)
par = [0]*(n+1)

dp = [0] + map(int, raw_input().split())
orig = [x for x in dp]

for i in range(n-1):
    x, y = map(int, raw_input().split())
    edges[x].append(y)
    edges[y].append(x)

dfs(1)

while q > 0:
    q -= 1
    s = raw_input().split()
    if s[0] == 'Q':
        print dp[int(s[1])]
    else:
        x = int(s[1])
        v = int(s[2]) - orig[x]
        orig[x] = int(s[2])
        while x != 0:
            dp[x] += v
            x = par[x]
