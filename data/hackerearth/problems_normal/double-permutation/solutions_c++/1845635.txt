#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <utility>

using namespace std;

#define FOR(i, n) for(long long int i = 0; i < (n); ++i)
#define FORU(i, j, k) for(long long int i = (j); i <= (k); ++i)
#define FORD(i, j, k) for(long long int i = (k); i >= (k); --i)

const long long int MOD = 1000000007;

int A[200005];
int B[200005];


long long int solve(int* A, int* B, long long int p, int i, int j){
  if(i+1 >= j) return 0;
  long long int r = 0;
  int m = (i+j)/2;
  r += solve(B, A, p, i, m);
  r += solve(B, A, p, m, j);

  int c = i;
  int n = m;
  
  int a = 0;
  int b = j-m;

  while(i != m && n != j){
    if(B[i] < B[n]){
      r += a*3*p + b*p;
      A[c] = B[i]; i++; c++;
    }else if(B[i] == B[n]){
      r += a*3*p + (b-1)*p + 2*p;
      A[c] = B[i]; i++; c++;
      A[c] = B[n]; a++; b--; n++; c++;
    }else{
      A[c] = B[n]; a++; b--; n++; c++;
    }
  }
  while(i != m) { A[c] = B[i]; i++; c++; r += a*3*p + b*p; }
  while(n != j) { A[c] = B[n]; n++; c++; }

  return r%MOD;
}


long long int pow(long long int n){
  if(n == 0) return 1;
  else if(n % 2 == 0){
    long long int a = pow(n/2);
    return (a*a)%MOD;
  }else{
    long long int a = pow(n/2);
    return (2*a*a)%MOD;
  }
}

int main(int, char**){
  int n; cin >> n;
  FOR(i, 2*n) { cin >> A[i]; B[i] = A[i]; }
  if(n == 1) cout << 1 << endl;
  else cout << solve(A, B, pow(n-2), 0, 2*n) << endl;
}
