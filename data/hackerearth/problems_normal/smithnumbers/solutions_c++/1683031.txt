#include <bits/stdc++.h>
using namespace std;

#define MAX 1000001
int isprime[MAX]={0};
int checker[MAX];
int smith[MAX];
typedef long long LL;
int dsum(LL n){
	int s=0;
	while(n>0){
		s+=(n%10);
		n/=10;
	}
	return s;
}

void set_smith(){
	int cnt = 0;
	for(LL i = 2; i < MAX; i++){
		if(isprime[i] == 0){ 
			checker[i] = dsum(i);
			cnt++; 
		}
		else
		{
			if(i%2 == 0) {
				checker[i] = 2 + (checker[i/2]); 
			}
			else
			{
			   for(int j = 3; 2*j < i; j=j+2)
			   	  if(i%j == 0) 
			   	  {
			   	  	checker[i] = checker[j] + checker[i/j];
			   	  	break;
			   	  }
			}
			if(checker[i] == dsum(i)) cnt++;
		}
		smith[i] = cnt;
	}
}
void set_prime(){
	//memset(isprime, 0, sizeof(isprime));
	int j = 2+2;
	while(j < MAX){
		isprime[j] = 1;  
		j = j+2;
	}
	for(LL i = 3; i < MAX; i = i+2){
		if(isprime[i] == 0){
			j = i+i;
			while(j < MAX){
				isprime[j] = 1;
				j = j+i;
			}
		}
	}
}

int main(){
	LL t,l,r;
	set_prime();
	set_smith();
	cin>>t;
	while(t--){
		scanf("%lld%lld", &l, &r);
		printf("%d\n", (smith[r] - smith[l-1]));
	}
	return 0;
}