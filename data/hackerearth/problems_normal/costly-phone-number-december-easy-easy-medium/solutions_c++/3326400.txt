/*    SHUBHAM SINHA    */



#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>

#define ll long long int
#define maxN 10000
#define maxVal 1e8
#define minVal -1e8
#define mod 1e9+7

#define gcd(a,b) __gcd(a,b)

using namespace std;

int d[10];
int a[10];

string s;

void dfs(int s,int w)
{
	if(d[s]<=w)
		return;
	d[s]=w;
	int i;
	for(i=0;i<9;i++)
	{
		if(d[i]!=2000000000)
			dfs((s+i)%10,w+d[i]);
		else
			dfs((s+i)%10,w+a[i]);
	}
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    	freopen("in.txt","r",stdin);
    #endif
	int t,i,j,k,x,ans;
	cin>>t;
	while(t--)
	{
		ans=0;
		for(i=0;i<10;i++)
		{
			cin>>a[i];
			d[i]=a[i];
		}
		//Calculate the minimum cost for generating each individual digit.
		for(k=0;k<100;k++)
			for(i=0;i<10;i++)
				for(j=0;j<10;j++)
				{
					x=(i+j)%10;
					d[x]=min(d[x],d[i]+d[j]);
				}
		cin>>x;
		cin>>s;
		for(i=0;i<x;i++)
			ans=ans+d[s[i]-'0'];
		cout<<ans<<"\n";
	}
    return 0;
}