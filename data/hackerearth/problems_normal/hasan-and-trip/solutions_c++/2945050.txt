#include <bits/stdc++.h>
#define MAX 3002
 
using namespace std;
 
double x[MAX], y[MAX], val[MAX], dp[MAX];
bool vis[MAX];
int n;
 
double dist(double x1, double y1, double x2, double y2)
{
	double ans = (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1);
	ans = sqrt(ans);
	return ans;
	
}
double f(int idx)
{
	if ( idx == n-1 ) return val[idx];
	if ( vis[idx] ) return dp[idx];
	vis[idx] = true;
	double ans;
	for ( int i = idx+1; i < n; i++ ) {
		if ( i == idx+1 ) ans = val[idx] - dist(x[idx],y[idx],x[i],y[i]) + f(i);
		else ans = max(ans, val[idx] - dist(x[idx],y[idx],x[i],y[i]) + f(i));
	}
	dp[idx] = ans;
	return ans;
}
 
int main()
{
	//
	cin >> n;
	for ( int i = 0; i < n; i++ )
	{
		cin >> x[i] >> y[i] >> val[i];
	}
	double ans = f(0);
	cout << setprecision(6) << fixed << ans << endl;
	return 0;
}