/*
***************************************************************************************************************

                            Author : Yash Sadhwani

**************************************************************************************************************
*/
#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define sd(x) scanf("%lf",&x)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mod 1000000007
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807
#define ub(X,v) upper_bound(X.begin(),X.end(),v)
#define lb(X,v) lower_bound(X.begin(),X.end(),v)



//qsort(ww,cc,sizeof(tp),compare);
/*int compare(const void *a,const void *b){
    ll y=((((tp*)a)->w)-(((tp*)b)->w));
    if(y>0)return 1;
    else if(y==0)return 0;
    else return -1;
}
bool way(ii x,ii y){
    return x.first<y.first or x.first==y.first and x.second<y.second;
}

ll modpow(ll base, ll exponent,ll modulus){
    if(base==0&&exponent==0)return 0;
    ll result = 1;
    while (exponent > 0){
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}

#define getchar_unlocked getchar
using namespace std;
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c<'0'||c>'9'){
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return x;
}

*/


#define MAXN 100010
#define SQRT 330
#define ls (node<<1)
#define rs ((node<<1)+1)
#define ii pair<int,int>
#define F first
#define S second


struct BIT{
    vi tree;
    BIT(void){
        tree.resize(MAXN + 10);
    }
    void update(int idx, ll val){
        while(idx < MAXN){
            tree[idx] += val;
            idx += (idx & (-idx));
        }
    }
    ll get(int idx){
        ll ret = 0;
        while(idx > 0){
            ret += tree[idx];
            idx -= (idx & (-idx));
        }
        return ret;
    }
};


int N;

ll K;

vi AdjList[MAXN];

BIT T;

ll ans = 0;

void dfs(int node, int p){
    ll t = K / node;
    t = min(t, (long long)MAXN - 1);
    T.update(node, 1);
    ll ct = T.get(t);
    for(int i = 0; i < AdjList[node].size(); i++){
        int v = AdjList[node][i];
        if(v != p){
            dfs(v, node);
        }
    }
    ct -= T.get(t);
    ans -= ct;
}

int ins[MAXN];

inline void ReadInput(void){
    si(N); sl(K);
    for(int i = 1; i < N; i++){
        int a, b;
        si(a); si(b);
        AdjList[a].pb(b);
        ins[b]++;
    }
}

inline void solve(void){
    for(int i = 1; i <= N; i++){
        if(ins[i] == 0) dfs(i, 0);
    }
    cout << ans << endl;
}

inline void Refresh(void){
    
}

int main()
{   
    //ios_base::sync_with_stdio(false);
    ReadInput();
    solve();
    return 0;
}

// U COME AT THE KING, BETTER NOT MISS !!!