#include <bits/stdc++.h>
using namespace std;
#define FOR(i, a, b) for(int i=(a);i<=(b);i++)
#define FORD(i, a, b) for(int i=(a);i>=(b);i--)
#define REP(i, b) for(int i=0;i<b;i++)
#define pb push_back
#define MAXC 1000020
#define MOD 1000000007
int fac[MAXC], ifac[MAXC];

int power(int base, long long exponent) {
  int result = 1, m = base;
  while (exponent) {
    if (exponent & 1) result = ((long long)result * m) % MOD;
    m = ((long long)m * m) % MOD;
    exponent /= 2;
  }
  return result;
}

int c(int n, int k) { return (((long long)fac[n] * ifac[n-k] +MOD)%MOD ); }
void pre(){
	 fac[0] = fac[1]=1;
     for(int i=1;i<MAXC;i++) fac[i+1] = ((long long)fac[i]*(i+1))%MOD;
 	 ifac[MAXC-1] = power(fac[MAXC-1], MOD-2);
 	 FORD(i, MAXC-2, 0) ifac[i] = ((long long)ifac[i+1]*(i+1))%MOD;
}

int main(int argc, char *argv[]) {
	pre();
	int t,flag;
//	long long temp=((ifac[2]*ifac[3])+MOD)%MOD;
//	cout<<(fac[5]*temp)%MOD<<endl;

	for(cin>>t;t;t--){
		string A,B;
		cin>>A>>B;flag=1;
		vector<int>fir,sec;
		for(int i=0;i<26;i++)fir.pb(0),sec.pb(0);
		for(int i=0;i<A.length();i++)fir[A[i]-'a']++;
		for(int i=0;i<B.length();i++)sec[B[i]-'a']++;
		for(int i=0;i<26;i++)
			if(fir[i]<sec[i]){
				flag=0;
				break;
			}
		//	cout<<flag<<endl;
		if(flag){
			long long ans=1;
			for(int i=0;i<26;i++)
				if(sec[i]){					
					ans=(ans*c(fir[i],sec[i]))%MOD;
				//	cout<<ans<<" "<<fir[i]<<" "<<sec[i]<<endl;
				}
			cout<<ans<<endl;
			
		}else cout<<0<<endl;
	}
 
  //printf("%lld\n", ((long long)c(2 * N, N) * power(N + 1, MOD - 2)) % MOD);
  return 0;
}
