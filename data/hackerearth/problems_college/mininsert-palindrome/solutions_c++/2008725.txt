
#include <iostream>
using namespace std;

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    int n;
    string X,Y;
    cin>>n;
    cin>>X;
    int j=0;
    for(int i=X.size()-1;i>=0;i--)
    Y[j++]=X[i];
    
   int L[X.size()+1][X.size()+1];
   int i;
  
   /* Following steps build L[m+1][n+1] in bottom up fashion. Note 
      that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */
   for (i=0; i<=X.size(); i++)
   {
     for (j=0; j<=X.size(); j++)
     {
       if (i == 0 || j == 0)
         L[i][j] = 0;
  
       else if (X[i-1] == Y[j-1])
         L[i][j] = L[i-1][j-1] + 1;
  
       else
         L[i][j] = max(L[i-1][j], L[i][j-1]);
     }
   }
    
   /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */
   cout<<X.size()-L[X.size()][X.size()]<<endl;
}
    return 0;
}