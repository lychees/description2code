#include <iostream>
#include <algorithm>
#include <vector>
#define int64 long long int
#define int32 long int
using namespace std;
 
class Worker{
	public:
	int32 cost, startTime, speed;
	Worker(int32 c, int32 sT, int32 sp){
		cost = c;
		startTime = sT;
		speed = sp;
	}	
	
	Worker(){
		cost = startTime = speed = 0;
	}
};
	
	bool wayToSort(Worker i, Worker j){
		if(i.startTime < j.startTime) return true;
		if(i.startTime > j.startTime) return false;
		if(i.speed > j.speed) return true;
		if(i.speed < j.speed) return false;
		return (i.cost <= j.cost);
	};
 
 
 
int main()
{
    int32 n;
    int64 d, totalCost;
    cin >> n;
    cin >> d;
    int iC;
    std::vector<Worker> workers(n);
    for(int32 i = 0; i < n; i++){
    	cin >> workers[i].startTime;
    	cin >> workers[i].cost;
    	cin >> workers[i].speed;
    }
    
    sort(workers.begin(), workers.end(), wayToSort);
    
    iC = 0;
    totalCost = workers[iC].cost;
    for(int32 j = 1; j < n; j++){
    	
    		if(workers[j].speed > workers[iC].speed){
    		d -= (workers[j].startTime - workers[iC].startTime) * workers[iC].speed;
    		if (d <= 0) break;
    		iC = j;
    		totalCost += workers[j].cost;
    	}
    }
    cout << totalCost << endl;
    return 0;
}