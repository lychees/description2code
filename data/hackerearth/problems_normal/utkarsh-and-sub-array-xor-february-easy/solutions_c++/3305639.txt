#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ll long long int
using namespace std;

ll MOD = 1000000007;

ll raise(ll b, ll exp)
{
    ll r=1;
    while(exp)
    {
        if(exp&1)r=(r*b)%MOD;
        b=(b*b)%MOD;
        exp>>=1;
    }
    return r;
}

ll n,k,two_inv;

ll inv(ll n)
{
    return raise(n,MOD-2);
}

map<ll,int> m;

struct sub
{
    int parent;
    int rank;
}a[2000001];

int contain(int i)
{
    if(a[i].parent!=i)
        a[i].parent=contain(a[i].parent);
    return a[i].parent;
}

void glue(int x, int y)
{
    int xrt=contain(x);
    int yrt=contain(y);
    if (a[xrt].rank<a[yrt].rank)
        a[xrt].parent=yrt;
    else if(a[xrt].rank>a[yrt].rank)
        a[yrt].parent = xrt;
    else
    {
        a[yrt].parent=xrt;
        a[xrt].rank++;
    }
}


int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    //freopen("input.txt","r",stdin);
    ll x,y,ans;
    cin>>n>>k;
    ans=raise(2,n);
    two_inv=inv(2);
    for(int i=0;i<=(2*k);i++)
    {
        a[i].parent=i;
        a[i].rank=0;
    }
    int ind=1;
    while(k--)
    {
        cin>>x>>y;
        if(m[x-1]==0)m[x-1]=ind++;
        if(m[y]==0)m[y]=ind++;
        //cout<<contain(4)<<" "<<contain(5)<<endl;
        if(!(contain(m[x-1])==contain(m[y])))
        {
            ans=(ans*two_inv)%MOD;
        }
        glue(m[x-1],m[y]);
        cout<<ans<<endl;
    }
    return 0;
}


// ^_^ \\
