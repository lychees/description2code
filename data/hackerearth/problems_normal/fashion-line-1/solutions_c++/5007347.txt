

    #include<bits/stdc++.h>
    using namespace std;
    int getCharId(char ch)
    {
        if(ch>='a' && ch<='z')
            return ch-'a';
        else if(ch>='A' && ch<='Z')
            return ch-'A'+26;
        else if(ch>='0' && ch<='9')
            return ch-'0'+52;
        else
            return -1;
    }
    int main()
    {
        int T;
        cin>>T;
        assert(1<=T && T<=100);
        while(T--)
        {
            char str[10001],special[10001];
            int N,mark[62]={0},K,i,L,R;
            cin>>N>>K>>L>>R;
            assert(1<=N  && N<=10000 && 1<=K && K<=62 && 0<=L && L<=N && 0<=R && R<=N && L<=R);
            cin>>str>>special;
            assert(strlen(str)==N);
            assert(strlen(special)==K);
            for(i=0;i<K;i++)
            {          
                mark[getCharId(special[i])]=1;
            }
            int next[100001],next_c=0;
            int len=strlen(str);
           // cout<<"In next "<<endl;
            for(i=0;i<len;i++)
            {
                if(mark[getCharId(str[i])]==1)
                {
                    next[next_c]=i;
                  //  cout<<i<<endl;
                    next_c++;
                }
            }
            long long ans=0,next_i=0;
            for(i=0;i<len;i++)
            {
                
                if(next_i+L-1>=next_c)
                    break;
                    
                int till1=i;
                if(L!=0)
                    till1=next[next_i+L-1];
                int till2=len-1;
                if(next_i+R<next_c)
                {
                    till2=next[next_i+R]-1;
                }
                
                if(till1<=till2)
                {
                    ans+=(till2-till1+1);
                //    cout<<"at "<<i<<" "<<till2-till1+1<<endl;
                }
                if(mark[getCharId(str[i])]==1)
                    next_i++;
            }
            cout<<ans<<endl;
        }
        return 0;
    }

