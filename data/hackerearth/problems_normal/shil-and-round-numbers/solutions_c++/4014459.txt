#include <cstdio>

int n, q, bit[200001] = {}, roundArr[200001] = {};

bool isRound(long long a)
{
	if (a < 0)
	{
		return false;
	}
	if (a == 0)
	{
		return true;
	}
	int first, last = a % 10;
	while (a > 0)
	{
		first = a % 10;
		a /= 10;
	}
	return first == last;
}

void update(int ind, int val)
{
	while (ind <= 200000)
	{
		bit[ind] += val;
		ind += ind & -ind;
	}
}

int query(int ind)
{
	int sum = 0;
	while (ind > 0)
	{
		sum += bit[ind];
		ind -= ind & -ind;
	}
	return sum;
}

int main()
{
	
	long long a;
	int b, c, d;
	bool temp;
	scanf("%d %d", &n, &q);
	for (int i = 0; i < n; i++)
	{
		scanf("%lld", &a);
		if (isRound(a))
		{
			update(i+1, 1);
			roundArr[i+1] = 1;
		}
	}
	while (q--)
	{
		scanf("%d", &b);
		if (b == 1)
		{
			scanf("%d %d", &c, &d);
			printf("%d\n", query(d)-query(c-1));
		}
		else
		{
			scanf("%d %lld", &c, &a);
			temp = isRound(a);
			if (roundArr[c] == temp)
			{
				continue;
			}
			if (roundArr[c])
			{
				update(c, -1);
			}
			else
			{
				update(c, 1);
			}
			roundArr[c] = 1^roundArr[c];
		}
	}
}