#include <bits/stdc++.h>
using namespace std;
#define MAX1 500005
#define ALL(V) V.begin(),V.end()
struct node
{
	int next[2];
	vector<int>v;
	node()
	{
		next[0]=-1;
		next[1]=-1;
	}
};
node a[MAX1];
int main()
{
	int n,q,x,l,r;
	scanf("%d%d",&n,&q);
	int cnt=1;
	for(int i=0;i<n;i++)
	{
		scanf("%d",&x);
		int cur=0;
		for(int j=19;j>=0;j--)
		{
			int t=(bool)(x&(1<<j));
			if(a[cur].next[t]==-1)
			{
				a[cur].next[t]=cnt++;
			}
			cur=a[cur].next[t];
			a[cur].v.push_back(i);
		}
	}
	while(q--)
	{
		scanf("%d%d%d",&l,&r,&x);
		--l;
		--r;
		int cur=0;
		int res=0;
		for(int i=19;i>=0;i--)
		{
			int t=(bool)(x&(1<<i));
			t=1-t;
			if(a[cur].next[t]==-1)
			{
				cur=a[cur].next[1-t];
				continue;
			}
			int nx=a[cur].next[t];
			int id=lower_bound(ALL(a[nx].v),l)-a[nx].v.begin();
			if(id==a[nx].v.size()||a[nx].v[id]>r)
			cur=a[cur].next[1-t];
			else
			{
				res=res+(1<<i);
				cur=nx;
			}
			
		}
		cout<<res<<"\n";
	}
	return 0;
	
}