#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp)%mod;
	if(b&1)
		temp=(temp*a)%mod;
	return temp;
}
int readint()
{
    int x=0;
    char c;
    while(1)
    {
	c=getchar_unlocked();
	if(c=='\n'||c==' '||c==EOF)
	    break;
	else
	    x=(x<<3)+(x<<1)+c-'0';
    }
    return x;
}
int main()
    {
		//ios_base::sync_with_stdio(false);
		int i,n,q;
		//cin >> n >> q;
		//sc("%d%d",&n,&q);
		n=readint();
		q=readint();
		vi v(n);
		for(i=0;i<n;i++)
			v[i]=readint();
		sort(v.begin(),v.end());
		map<int,int> eq;
		map<int,int>::iterator it,it2;
		eq[0]=1;
		ll val=1,pre=1,tot;
		ll tsum=0;
		char ch;
		for(i=0;i<n;i++)
		{
			it=eq.find(v[i]);
			if(it==eq.end())
			{
				eq[v[i]]=(int)val;
			}
			else
				it->second=(int)((ll)it->second+(ll)val)%mod;
			//eq[v[i]]=(eq[v[i]]+val)%mod;
			val=(val<<1)%mod;
		}
		val=0;
		ll cal;
		vi m;
		vi pos;
		for(it=eq.begin();it!=eq.end();it++)
		{
			tsum=(tsum+it->second)%mod;
			cal=it->second;
			cal=(cal+val)%mod;
			m.pb((int)cal);
			pos.pb(it->first);
			val=cal;
		}
	/*	for(it=m.begin();it!=m.end();it++)
		{
			cout << (it->first)<< " "<<(it->second)<<"\n";
		}*/
		ll ans=0;
		int sh;
		vi::iterator vit;
		int position;
		//scanf("%c",&ch);
		while(q--)
		{
			ans=0;
			//scanf("%c",&ch);
			sc(" %c%d",&ch,&sh);
		//	pf("q=%c %d\n",ch,sh);
			//cout <<ch <<" "<<sh<<"\n";
			if((ch)=='=')
			{
				it=eq.find(sh);
				if(it!=eq.end())
					ans=it->second;
			}
			else if((ch)=='<')
			{
				vit=lower_bound(pos.begin(),pos.end(),sh);
				if((vit==pos.end())||((*vit)>sh))
					vit--;
				position=vit-pos.begin();
				ans=m[position];
				it2=eq.find(sh);
				if(it2!=eq.end())
				{
					ans=(ans-it2->second)%mod;
					ans=(ans+mod)%mod;
				}
			}
			else
			{
				ans=tsum;
				vit=lower_bound(pos.begin(),pos.end(),sh);
				if((vit==pos.end())||((*vit)>sh))
					vit--;
				position=vit-pos.begin();
				ans=(ans-m[position])%mod;;
					ans=(ans+mod)%mod;
			
			}
			pf("%lld\n",ans);
		}
    return 0;
}
