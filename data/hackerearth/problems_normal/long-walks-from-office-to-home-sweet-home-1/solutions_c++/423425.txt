#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <chrono>
#include <climits>
#include <map>
#include <stack>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <cstddef>
#include <memory>
#include <cinttypes>
#include <bitset>
#include <set>
#include <cstring>
#include <sstream>
#include <functional>
#include <cmath>
#include <queue>
#include <cassert>
#define si(n)scanf("%d",&n)  
#define sll(n)scanf("%lld",&n)
#define pi(n)printf("%d\n",n)
#define pll(n)printf("%lld\n",n)
#define pn()printf("\n")
//@author Jaydeep Maddipati
using namespace std; using ll = long long;
const int mod = 1000000007; ll adj[50][50],id[50][50],y[50][50],n, k, u, v;
void p(ll exp){
	ll temp[50][50];
	while (exp > 0){
		if (exp & 1){
			for (int i = 0; i < n; i++){
				for (int j = 0; j < n; j++){
					temp[i][j] = 0;
					for (int k = 0; k < n; k++){
						temp[i][j] = (temp[i][j] + id[i][k] * y[k][j])%mod;
					}
				}
			}
			for (int i = 0; i < n; i++){
				for (int j = 0; j < n; j++){
					id[i][j] = temp[i][j];
				}
			}
		}
		for (int i = 0; i < n; i++){
			for (int j = 0; j < n; j++){
				temp[i][j] = 0;
				for (int k = 0; k < n; k++){
					temp[i][j] = (temp[i][j] + y[i][k] * y[k][j]) % mod;
				}
			}
		}
		for (int i = 0; i < n; i++){
			for (int j = 0; j < n; j++){
				y[i][j] = temp[i][j];
			}
		}
		exp >>= 1;
	}

}
int main(){
	//freopen("in.txt", "r", stdin);
	std::ios::sync_with_stdio(false); int t; si(t);
	while (t--){
		for (int i = 0; i < 50; i++){
			for (int j = 0; j < 50; j++){
				if (i == j)id[i][j] = 1;
				else id[i][j] = 0;
			}
		}
		scanf("%lld %lld %lld %lld", &n, &k, &u, &v);
		for (int i = 0; i < n; i++){
			for (int j = 0; j < n; j++){
				sll(adj[i][j]); y[i][j] = adj[i][j];
			}
		}
		p(k); pll(id[u][v]);
	}
	return 0;
}
