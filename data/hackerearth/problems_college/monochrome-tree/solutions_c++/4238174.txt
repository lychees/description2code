#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define pii pair<int,int>
#define pll pair<ll,ll>
#define PB push_back
#define MP make_pair
#define N 100001

vector< vector<int> > adj(N);
int bcolor[N], gcolor[N], dp[N][2];
bool visited[N];

void dfs(int i){
	visited[i] = 1;
	int samecolor = 0, invcolor = 0;

	for(int j = 0; j < adj[i].size(); j++){
		int k = adj[i][j];

		if(visited[k] == 0){
			dfs(k);
			samecolor += dp[k][0];
			invcolor += dp[k][1];
		}
	}

	dp[i][0] = min((bcolor[i] != gcolor[i]) + samecolor, 1 + (bcolor[i] == gcolor[i]) + invcolor);
	dp[i][1] = min(1 + (bcolor[i] != gcolor[i]) + samecolor, (bcolor[i] == gcolor[i]) + invcolor);
}

int main(){
	int n, m, i, j, k;

	scanf("%d", &n);

	m = n - 1;

	while(m--){
		scanf("%d%d", &i, &j);
		adj[i].PB(j);
		adj[j].PB(i);
	}

	for(i = 1; i <= n; i++)
		scanf("%d", &bcolor[i]);

	for(i = 1; i <= n; i++)
		scanf("%d", &gcolor[i]);

	dfs(1);

	printf("%d\n", dp[1][0]);

	return 0;
}
