#include<iostream>
#include<queue>
#include<unordered_map>
#include<utility>
#include<array>

using namespace std;
typedef long long LL;
struct Course
{
  array<LL,2> iqs;
  LL z;
  LL count;
};
typedef struct Course content;
int main() {
  LL c, p, n;

  cin >> c >> p >> n;

  unordered_map<LL, content > record;
  priority_queue<pair<LL, LL>> course;
  LL iq;
  for (LL i = 1; i <= c; i++) {

    content tmp;
    if (i <= n) {
      cin >> iq;
      tmp.count=1;
    }
    else {
      iq = 0;
      tmp.count = 0;
    }

    tmp.iqs[0] = 0;
    tmp.iqs[1] = iq;
    tmp.z = iq;
    record[i] = tmp;
    course.push(make_pair(-iq, -i));
  }
  int id;
  for (LL i = 1; i <= p; i++) {
    if (!(cin >> iq)) {
      iq = 0;
    }
    id = course.top().second;
    content& tmp = record[-id];

    tmp.count++;
    tmp.iqs[0] = tmp.iqs[1];
    tmp.iqs[1] = iq;

    tmp.z = tmp.count*(tmp.iqs[0] + tmp.iqs[1]);
    course.pop();
    course.push(make_pair(-tmp.z, id));
    cout << -id << " ";
  }
  cout << endl;

  return 0;
}