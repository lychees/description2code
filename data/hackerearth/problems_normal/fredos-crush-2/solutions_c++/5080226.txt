#include<iostream>

using namespace std;

#define MAXN 15
#define MAX 10000000

bool adj[MAXN+1][MAXN+1];
int mic[MAXN+1][1<<MAXN];

int countbit(int n){
    int co = 0;
    while(n){
        n &= n-1;
        co++;
    }
    return co;
}

int gcd(int a, int b){
    if(b == 0) return a;
    return gcd(b, a%b);
}

void solve(int n, int m){
    for(int i=0;i<n;i++){
        for(int j=0;j<(1<<n);j++) mic[i][j] = MAX;
    }

    for(int i=0;i<n;i++){
        mic[i][1<<i] = i+1;
    }

    for(int i=0;i<(1<<n);i++){
        for(int j=0;j<n;j++){
            // set j
            if(i&(1<<j)){
                for(int k=0;k<n;k++){
                    if( (i&(1<<k)) && (mic[k][i^(1<<j)] != MAX) && adj[j][k]){
                        mic[j][i] = mic[k][i^(1<<j)] + j+1;
                        break;
                    }
                }
            }
        }
    }

    int ansN1[MAXN] = {0};
    int numN[MAXN] = {0};
    for(int i=0;i<MAXN;i++) {numN[i] = 0; ansN1[i] = 0;}

    for(int i=0;i<n;i++){
        for(int j=0;j<(1<<n);j++){
            //cout << i << " bit : " << j << " -> " << mic[i][j] << endl;
            if(mic[i][j] != MAX){
                int co = countbit(j);
                if(co > numN[i]){
                    ansN1[i] = mic[i][j];
                    numN[i] = co;
                }
                else if(co == numN[i]){
                    if(ansN1[i] < mic[i][j]){
                        ansN1[i] = mic[i][j];
                    }
                }
            }
        }
    }
    int ans1 = 0, ans2 = MAX;
    for(int i=0;i<n;i++){
        if(ansN1[i] > ans1) ans1 = ansN1[i];
        if(ansN1[i] < ans2) ans2 = ansN1[i];
    }
    int g = gcd(ans1, ans2);
    cout << ans1/g << " " << ans2/g << endl;
}

void init(){
    for(int i=0;i<MAXN;i++){
        for(int j=0;j<MAXN;j++) adj[i][j] = 0;
    }
}

int main(){
    int t;
    cin >> t;
    while(t--){
        init();
        int n, m;
        cin >> n >> m;
        for(int i=0;i<m;i++){
            int x, y;
            cin >> x >> y;
            x--; y--;
            adj[x][y] = 1;
            adj[y][x] = 1;
        }
        solve(n, m);
    }
}
