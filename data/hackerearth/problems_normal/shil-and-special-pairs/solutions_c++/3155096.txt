#include <bits/stdc++.h>

using namespace std;


# define sz(x) (int)x.size()
# define mp make_pair
# define vi vector<int>
# define pi pair<int,int>
# define pb push_back

#define s(n)   scanf("%d",&n)
#define sl(n)  scanf("%lld",&n)
#define ss(n)  scanf("%s",n)

#define INF    (int)1e9
#define EPS    1e-9

#define foreach(v, c)   for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define Fw(a, b, c)  for (int (a)=(b); (a)<(c); (a)++)
#define Fd(a, b, c)  for (int (a)=(b); (a)>=(c); (a)--)

#define all(a)    a.begin(), a.end()
#define in(a, b)   ( (b).find(a) != (b).end())

template<typename T, typename TT>
ostream &operator<<(ostream &s, pair<T, TT> t) { return s << "(" << t.first << "," << t.second << ")"; }

#define out(a, i) cout<<#a<<"= "<<a<<(i==1?'\n':' ');
#define printA(a, L, R) Fw(i,L,R) cout << a[i] << (i==R-1?'\n':' ')
#define d(s) cout << #s << " " << s << " ";
#define en() cout << endl;
#define reset(a, b)   memset(a,b,sizeof(a))
#define SYNC         ios_base::sync_with_stdio(0);

long long int bit[100001];
void update(int x,int n) {
	while(x<=n) {
		bit[x]+=1;
		x +=(x&-x);
	}
		
}

long long int query(int x) {
	long long int res=0;
	while(x>0){
		res += bit[x];
		x-=(x&-x);
	}
	return res;
}
int main() {
	
	int n,q,d,l,r,qi;
	cin >> n >> q >> d;
	int arr[n],pos[n];
	long long int ans[q];
	Fw(i,0,n) {
		cin >> arr[i];
		pos[arr[i]]=i;
	}
	vector<pair<pi,int> > qv;
	Fw(i,0,q) {
		cin >> l>>r;
		qv.pb(mp(mp(r,l),i));
	}
	sort(all(qv));
	qi=0;
	Fw(i,0,n) {
		Fw(k,max(1,arr[i]-d),min(n,arr[i]+d)+1)
			if(pos[k]<=i)
				update(pos[k]+1,n);
		
		while(qi<q&&qv[qi].first.first==(i+1)) {
			ans[qv[qi].second]=query(qv[qi].first.first)-query(qv[qi].first.second-1);qi++;
		}
	}
	Fw(i,0,q)
		cout << ans[i] << endl;
}