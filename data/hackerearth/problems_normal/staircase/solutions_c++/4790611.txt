#include <iostream>
#include<algorithm>
#include<cstring>
using namespace std;
typedef long long int64;
 
int DistanceCovered(int m,int n,int dp[])
{
	if(n==0)
		return 1;
	if(n<0)
		return 0;
	if(dp[n]!=-1)return dp[n];
	int ways=0,j=1;
	while(j<=m)
	{
		ways+=DistanceCovered(m,n-j,dp);
		j++;
	}
	return dp[n]=ways;
}
int main()
{
    int n,i;
    cin>>n;
    if(n<0)
    	{
    		cout<<"ERROR"<<endl;
    		return 0;
    	}
    int dp[n+1];
    memset(dp,-1,sizeof(dp));
    int a=DistanceCovered(3,n,dp);
    memset(dp,-1,sizeof(dp));
    int b=DistanceCovered(2,n,dp);
    cout<<"Jack-"<<a<<endl;
    cout<<"Jill-"<<b<<endl;
    return 0;
}
