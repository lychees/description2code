"""

    'L' -- from (X, Y) moves to point (X, Y - 1)
    'R' -- from (X, Y) moves to point (X, Y + 1)
    'U' -- from (X, Y) moves to point (X - 1, Y)
    'D' -- from (X, Y) moves to point (X + 1, Y)
"""

navigator = {
    "L": lambda x,y: (x,y -1),
    "R": lambda x,y: (x, y+1),
    "U": lambda x,y: (x -1, y),
    "D": lambda x,y: (x+1, y),
}

# tests = {
#     "RDUUDLRLDLDLDLRUUDLRLDDURUUUUUDUDUDDDDRLLLLLLRRRRLLL": 33,
#     "RRRRRRRRRRRRRRRRRRUUUUUUUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDLLLLLLLLLLLLRLRLRLRLRLDUDUDUDUDUDURURLDLDLRLDLRLDLRUDRLDRRRDURDLRD": 55
# }
# import pprint

def navigate(instrs):
    path_map = {}
    # slips = 0
    x,y = 0,0
    path_map[(x,y)] = 0
    for instr in instrs:
        # print("({}, {}) -> ".format(x, y))
        point = navigator[instr](x,y)
        if point in path_map:
            path_map[point] +=1
        else:
            path_map[point] = 0

        x,y = point

    # pprint.pprint(path_map)
    slips = sum(path_map.values())
    return slips


if __name__ == '__main__':
    # print(navigate("RRULDL") ==2)
    x = raw_input("")
    print navigate(x)
    # print(x)
    # for k,v in tests.items():
    #     print(navigate(k) == v)