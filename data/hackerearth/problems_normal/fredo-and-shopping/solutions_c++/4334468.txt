
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <string>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <sstream>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <stdint.h>
#include <bits/stdc++.h>
#include <limits>
#define fl(i,n) for(int (i)=0;(i)<(int)(n);(i)++)
#define  ll long long
#define pb push_back
#define mp make_pair
#define MOD 1000000007

using namespace std;


struct shop{
	long long shopNum;
	int index;
};


bool shf(shop a,shop b){
	return a.shopNum < b.shopNum;
}

void update(int node,int val,int* ft,int n){
	int i;
	for(i=node;i<=n;i+=i&(-i)){
		ft[i]+=val;
	}

}

int query(int node,int* ft,int n){
	int i,ans = 0;
	for(i=node;i>0;i-=i&(-i))
		ans+=ft[i];
	return ans;
}

int main(){
	int n,i,j;
	cin>>n;
	shop inp[n+1];
	for(i=1;i<=n;i++){
		inp[i].index = i;
	}
	int coor[n+1];
	int ft[n+1];
	ft[0] = inp[0].shopNum = -1;
	fl(i,n+1){
		ft[i] = 0;
	}
	for(i=1;i<=n;i++){
		cin>>inp[i].shopNum;
		//update(i,inp[i],ft,n);
	}
	sort(inp+1,inp+n+1,shf);
	j = 1;
	//cout<<"here : "<<inp[1].index<<endl;
	coor[inp[1].index] = 1;
	for(i=2;i<=n;i++){
		if(inp[i-1].shopNum < inp[i].shopNum)
			j++;
		coor[inp[i].index] = j;
	}
	for(i=1;i<=n/2;i++){
		swap(coor[i],coor[n-i+1]);
	}
	for(i=n;i>=1;i--){
        cout<<query(coor[i]-1,ft,n)<<" ";
		update(coor[i],1,ft,n);
	}


	return 0;
}
