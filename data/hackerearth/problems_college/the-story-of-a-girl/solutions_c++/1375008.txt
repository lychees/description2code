/*
Template belongs to : Himanshu Jaju [himanshujaju]
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<LL,LL>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define msi       map<string,int>
#define msit      map<string,int>::iterator
#define pb        push_back
#define mp        make_pair

#define GI(x)     scanf("%d",&x)

#define FOR(i,a,b)      for(int i=a;i<b;i++)
#define RFOR(i,a,b)     for(int i=b-1;i>=a;i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       1000000007

vector<PII> matrix_mul(vector<PII> x, vector<PII> y)
{
      vector<PII> ret;
      LL a,b,c,d;
      a = (x[0].first*y[0].first + x[0].second*y[1].first)%MOD;
      c = (x[1].first*y[0].first + x[1].second*y[1].first)%MOD;
      b = (x[0].first*y[0].second + x[0].second*y[1].second)%MOD;
      d = (x[1].first*y[0].second + x[1].second*y[1].second)%MOD;
      ret.pb(mp(a,b));
      ret.pb(mp(c,d));
      return ret;
}

vector<PII> mat_expo(LL power)
{
      vector<PII> ret;
      ret.pb(mp(1,1));
      ret.pb(mp(1,0));
      if(power == 1)
            return ret;
      vector<PII> A = mat_expo(power/2);
      A = matrix_mul(A,A);
      if(power%2) A = matrix_mul(A,ret);
      return A;
}

LL fibo(LL n)
{
      vector<PII> ans = mat_expo(n-1);
      return ans[0].first;
}

int main()
{
      inp_s;
      DRT()
      {
            int n;
            cin>>n;
            cout<<fibo(n)<<endl;
      }
      return 0;
}

