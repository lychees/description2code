/*input
2
5 6
1 2 2
2 3 -1
3 4 -7
4 5 0
2 3 -7
3 5 6
5 8
1 5 10
2 3 -6
5 2 5
4 5 9
1 5 1
2 4 -10
2 3 -2
4 1 1
*/
#include <bits/stdc++.h>
#include<stdio.h>
using namespace std;
#define pii pair<long long,long long>
#define F(i,a,b) for(ll i = (ll)(a); i <= (ll)(b); i++)
#define RF(i,a,b) for(ll i = (ll)(a); i >= (ll)(b); i--)
#define PI 3.14159265
#define ll long long
#define ff first
#define ss second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define INF 1000000009
#define mod 1000000007
pair <pii,ll> arr[2000];
ll dist[2000],n,m;
bool bellman_ford(ll src)
{
	F(i,0,n+5)
	 	dist[i]=INF;
	dist[src]=0;
	F(i,1,n-1) // running outer loop n-1 times for shortest distances
	{
	 	F(j,1,m) // processing all edges
	 	{
	 		ll u,v,c;
	 		u = arr[j].ff.ff;
	 		v = arr[j].ff.ss;
	 		c = arr[j].ss;
	 		if(dist[u]!=INF && dist[v]>dist[u]+c)
	 			dist[v]=dist[u]+c;
	 	}
	}
	// now check for negative cycles
	F(j,1,m)
	{
		ll u,v,c;
	 		u = arr[j].ff.ff;
	 		v = arr[j].ff.ss;
	 		c = arr[j].ss;
	 		if(dist[u]!=INF && dist[v]>dist[u]+c)
	 			return 1;
	}
	return 0;
}
int main() 
{
	std::ios::sync_with_stdio(false);
	ll t;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		F(i,1,m)
		{
			ll u,v,c;
			cin>>u>>v>>c;
			c = -1ll*c;
			arr[i] = mp(mp(u,v),c);
		}
		if(bellman_ford(1))
			cout<<"Yes";
		else
			cout<<"No";
		cout<<"\n";
	}
	return 0;
}