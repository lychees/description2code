#include <bits/stdc++.h>
#define forn(i, n) for (int i = 0; i < int(n); i++)
#define lli long long
#define mp make_pair
#define pi pair<int,int>
#define pli pair<lli,lli>
#define pb push_back
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define slli(n) scanf("%lld",&n);
#define ss(n) scanf("%s",n);

const double EPS = 1e-24;
const lli mod = 1000000007ll;
const lli mod1 = 1000000009ll;
const lli mod2 = 1100000009ll;
const double PI = 3.14159265359;
int INF = 2147483645;
lli INFINF = 9223372036854775807;

template <class T>T Max2(T a,T b){return a<b?b:a;}
template <class T>T Min2(T a,T b){return a<b?a:b;}
template <class T>T Max3(T a,T b,T c){return Max2(Max2(a,b),c);}
template <class T>T Min3(T a,T b,T c){return Min2(Min2(a,b),c);}
template <class T>T Max4(T a,T b,T c,T d){return Max2(Max2(a,b),Max2(c,d));}
template <class T>T Min4(T a,T b,T c,T d){return Min2(Min2(a,b),Max2(c,d));}

using namespace std;
vector< lli > invpow(200001,1),facnum(200001,1);lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
typedef vector< lli > vi;
typedef vector< vi > vvi;
lli fact( lli n, lli r){
	lli num,den;
	lli ans;
	num = facnum[n];
	den = (invpow[r])*(invpow[n-r]);
	den%=mod;
	ans = num*den;
	lli final = ans%mod;
	return final;
};

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
#endif
ios::sync_with_stdio(false);
cin.tie(NULL);
for(lli i=1;i<=200001;i++){
			facnum[i] = (facnum[i-1]*i)%mod;
            invpow[i] = powermod(facnum[i],mod-2,mod);
        }
lli t,n,m,c;
cin>>t;
while(t--){
	cin>>n>>m>>c;
	lli k=n-(c+1);
	lli ans,b;
	if(c*m<n){
		printf("0\n");
		continue;
	}
	ans = fact(n+m-1,m-1);
	for(lli i=1;k>=0;i++){
		b = (fact(m,i))*(fact(k+m-1,m-1));
		if(i%2==0)
				ans+=b%mod;
		else
				ans-=b%mod;
		k-=(c+1);
		if(ans>0)
			ans%=mod;
		while(ans<0)
			ans+=mod;
	}
	lli a = ans%mod;
	printf("%lld\n",a);
}
}

