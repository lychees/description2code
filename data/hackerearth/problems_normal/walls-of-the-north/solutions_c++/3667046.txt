#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll int a[100010],c[100010],b1[100010],b2[100010];
pair<ll int,ll int> p[100010];
ll int query(ll int *b,ll int index)
{
	ll int ans=0;
	while(index>0)
	{
		//~ cout<<"here 1 "<<index<<endl;
		ans=max(ans,b[index]);
		index-=(index&(-index));
	}
	return ans;
}
void update(ll int *b,ll int index,ll int v)
{
	while(index<=100005)
	{
		//~ cout<<"here 2 "<<index<<endl;
		b[index]=max(v,b[index]);
		index+=(index & (-index));
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll int test;
	cin>>test;
	while(test--)
	{
		memset(b1,0,sizeof(b1)); //initialise bit-tree
		memset(b2,0,sizeof(b2)); //initialise bit-tree
		ll int n;
		cin>>n;
		ll int i,t1,t,t2,ans;
		for(i=0;i<n;i++)
		{
			cin>>p[i].first;
			p[i].second=i;
		}
		sort(p,p+n);
		for(i=0;i<n;i++)
		{
			if(i==0)
			{
				t=1;
				a[p[i].second]=t;
				c[p[i].second]=100005-t;
			}
			else
			{
				if(p[i].first>p[i-1].first)
				t++;
				a[p[i].second]=t;
				c[p[i].second]=100005-t;
			}
		}
		for(i=0;i<n;i++)
		{
			t1=query(b2,c[i]);
			t2=query(b1,a[i]);
			//~ cout<<t1<<" "<<t2<<" "<<endl;
			update(b1,a[i],t1+1);
			update(b2,c[i],t2+1);
		}
		t1=query(b1,100005);
		t2=query(b2,100005);
		ans=max(t1,t2);
		cout<<ans<<endl;
	}
	return 0;
}
