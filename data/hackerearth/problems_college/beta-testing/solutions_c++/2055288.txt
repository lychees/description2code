#include <bits/stdc++.h>
/*#include <boost/multiprecision/cpp_int.hpp> */
#define ll long long
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define gc getchar_unlocked
#define pp pair<int,int>
#define bigint boost::multiprecision::cpp_int
#define PLIM 68000000
using namespace std;

bool cmp(pair<pp,string> p1,pair<pp,string> p2)
{
if(p1.first.first==p2.first.first)return p1.first.second<p2.first.second;
return p1.first.first>p2.first.first;
}

int main()
{
	int n;
	cin>>n;
	map<string,pp> my;
	int stamp=0;
	while(n--)
	{
		string s;
		cin>>s;
		if(!my.count(s))my[s]=mp(1,stamp++);
		else my[s]=mp(my[s].first+1,stamp++);
	}
	
	vector<pair<pp,string>> v;
	
	for(auto i:my)
	{
		v.pb(mp(i.second,i.first));
	}
	sort(v.begin(),v.end(),cmp);
	
	for(auto i:v)
	{
		cout<<i.second<<" "<<i.first.first<<"\n";
	}
	
	
  

return 0;
}