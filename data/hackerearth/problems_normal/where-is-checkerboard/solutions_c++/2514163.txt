#include <bits/stdc++.h>
using namespace std;

bool isblack(char a,char b,char c)
{
	if(a=='#' && b=='_' && c=='_')
		return true;
	return false;
}
bool iswhite(char a,char b,char c)
{
	if(a=='_' && b=='#' && c=='#')
		return true;
	return false;
}

long long sol(vector<string> b,int n,int m)
{
	long long ans=0;
	vector<vector<long long> > DP(n,vector<long long>(m));
	for(int i=0;i<m;i++)
		DP[0][i]=1;
	for(int i=0;i<n;i++)
		DP[i][0]=1;
	for(int i=1;i<n;i++)
	{
		for(int j=1;j<m;j++)
		{
			if(b[i][j]=='#')
			{
				if(isblack(b[i-1][j-1],b[i-1][j],b[i][j-1]))
				{
					DP[i][j]=1+min(DP[i-1][j-1],min(DP[i-1][j],DP[i][j-1]));
				}
				else
					DP[i][j]=1;
			}
			else
			{
				if(iswhite(b[i-1][j-1],b[i-1][j],b[i][j-1]))
				{
					DP[i][j]=1+min(DP[i-1][j-1],min(DP[i-1][j],DP[i][j-1]));
				}
				else
					DP[i][j]=1;
			}
			if(b[i][j]=='_' && DP[i][j]>=32)
				ans++;
		}
	}
	return ans;
}

int main()
{
    int m,n;
 	cin>>n>>m;
 	vector<string> board;
 	string x;
 	for(int i=0;i<n;i++){
 		cin>>x;
 		board.push_back(x);
 	}
 	
 	cout<<sol(board,n,m);
    return 0;
}
