#include<bits/stdc++.h>
using namespace std;
#define M 1000000007
bool prime[100001]={0};
int powerx[1005];
int powery[1005];
vector<int>v,v1,v2;
void process()
	{
		int i,j;
		prime[0] = prime[1] = 1;
		for(i=2;i<=100000;++i)
			{
				if(prime[i]==0)
					{
						v.push_back(i);
						for(j=2*i;j<=100000;j+=i)
							{
								prime[j] = 1;
							}
					}
			}
	}
int f(int x,int y)//power of number y in x
	{
		int ans=0;
		while(x)
			{
				ans = ans + x/y;
				x = x/y;
			}
		return ans;
	}
int main()
	{
		process();
		long long int temp;
		long long int ans;
		ios_base::sync_with_stdio(0);
		long long int t,i,lim,X,Y;
		cin>>t;
		while(t--)
			{
				v1.clear();
				v2.clear();
				cin>>X>>Y;
				if(Y>=X)
					cout<<0<<endl;
				else
					{
						ans = 1;
						vector<int>::iterator it=v.begin();
						while(*(it)<=X)
							{
								v1.push_back(f(X,*(it)));
								++it;
							}
						it = v.begin();
						while(*(it)<=Y)
							{
								temp  = f(Y,*(it));
								v2.push_back(temp);
								ans = ans * (temp+1);
								if(ans>=M)
									ans%=M;
								++it;
							}
					 	//ans contains all factors of factorial of Y
					 	it = v1.begin();
					 	vector<int>::iterator it2 = v2.begin();
					 	temp = 1;
					 	while(it!=v1.end())
					 		{
					 			temp = temp*((*it)+1);
					 			if(temp>=M)
					 				temp%=M;
					 			++it;
					 		}
						ans = (ans+M)%M;
						
						//cout<<temp;
						temp = (temp-ans+M)%M;
						cout<<temp<<endl;
					}
			}
	}