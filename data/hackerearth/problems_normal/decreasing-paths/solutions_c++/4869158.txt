#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define PP pop_back()
#define ALL(x) x.begin(),x.end()
#define st first
#define nd second
#define sz(x) (int) x.size()
#define pii pair<int,int>
#define ii int,int
#define ll long long
#define lf double
#define llu long long unsigned
#define INPUT freopen("inp.in","r",stdin);
#define OUTPUT freopen("oup.out","w",stdout);
#define sag 2*node+1
#define sol 2*node
#define orta ((bas+son)/2)
#define set(x,y) memset(x,y,sizeof(x))
#define MIN3(x,y,z) min(min(x,y),z)
#define MAX3(x,y,z) max(max(x,y),z)
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define ROF(i,j,k) for(int i=j;i>=k;i--)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 2000000000
#define N 1005
#define PI 3.14159265
using namespace std;
ll a[N][N],dp[N][N],n,ans;
ll dfs(int x,int y) {
    ll ret=0;
    if(dp[x][y]!=-1) return dp[x][y];
    if(x+1<=n && a[x+1][y]<a[x][y]) ret=(ret+dfs(x+1,y)+1)%MOD;
    if(y+1<=n && a[x][y+1]<a[x][y]) ret=(ret+dfs(x,y+1)+1)%MOD;
    if(x-1>=1 && a[x-1][y]<a[x][y]) ret=(ret+dfs(x-1,y)+1)%MOD;
    if(y-1>=1 && a[x][y-1]<a[x][y]) ret=(ret+dfs(x,y-1)+1)%MOD;
    return dp[x][y]=ret;
}
int main() {
    set(dp,-1);
    cin>>n;
    FOR(i,1,n) FOR(j,1,n) cin>>a[i][j];
    FOR(i,1,n) FOR(j,1,n) {
        ans=(ans+dfs(i,j)+1)%MOD;
    }
    cout<<ans;
}
