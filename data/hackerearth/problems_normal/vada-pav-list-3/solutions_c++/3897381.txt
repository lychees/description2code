#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

long long int hashFunc(string str) {
	int len = str.size();
	long long int hash = 0;
	long long int pow = 1;
	for (int i = 0; i < 5 - len; i++)
		pow *= 27;
	for (int i = 0; i < len; i++) {
		hash += pow * (str[len - 1 - i] - 'a' + 1);
		pow *= 27;
	}
	return hash;
}

string reverse_hashFunc(long long int n) {
	string str;
	while (n != 0) {
		char ch = (n % 27) - 1 + 'a';
		if (ch != 'a' - 1)
			str += ch;
		n /= 27; 
	}
	reverse(str.begin(), str.end());
	return str;
}

int main() {
	std::ios::sync_with_stdio(false);
	int n;
	cin >> n;
	vector <int> hash_table(14348907, 0);
	int count = 0;
	for (int i = 0; i < n; i++) {
		string str;
		cin >> str;
		long long int hash = hashFunc(str);
		if (hash_table[hash] != 1) {
			hash_table[hash] = 1;
			count++;
		}
	}
	cout << count << endl;
	for (int i = 0; i < 14348907; i++) 
		if (hash_table[i] == 1)
			cout << reverse_hashFunc(i) << endl;
	
}
