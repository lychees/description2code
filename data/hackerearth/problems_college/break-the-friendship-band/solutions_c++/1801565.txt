#include <algorithm>
#include <cstdlib>
#include <iostream>

int n, lred[1001], lblue[1001], rred[1001], rblue[1001];
std::string s;

int main()
{
	std::cin >> n >> s;
	s = s + s;
	
	for (int i = 0; i < 2 * n; ++i) {
		if (s[i] == 'r') {
			lred[i + 1] = lred[i] + 1;
			lblue[i + 1] = 0;
		} else if (s[i] == 'b') {
			lred[i + 1] = 0;
			lblue[i + 1] = lblue[i] + 1;
		} else {
			lred[i + 1] = lred[i] + 1;
			lblue[i + 1] = lblue[i] + 1;
		}
	}
	
	for (int i = 2 * n - 1; i >= 0; --i) {
		if (s[i] == 'r') {
			rred[i] = rred[i + 1] + 1;
			rblue[i] = 0;
		} else if (s[i] == 'b') {
			rred[i] = 0;
			rblue[i] = rblue[i + 1] + 1;
		} else {
			rred[i] = rred[i + 1] + 1;
			rblue[i] = rblue[i + 1] + 1;
		}
	}
	
	int result = 0;
	for (int i = 0; i <= 2 * n; ++i) {
		result = std::max(result, std::max(lred[i], lblue[i]) + std::max(rred[i], rblue[i]));
	}
	
	if (result > n) {
		result = n;
	}
	
	std::cout << result << std::endl;
	
	return 0;
}