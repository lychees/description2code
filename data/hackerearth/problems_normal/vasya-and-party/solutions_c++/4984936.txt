#include <iostream>
#include <cstring>
#include<vector>

#define r 100000
using namespace std;
vector<int> rel[r];
int visited[r];
vector<int> v;
long long int arr[r];
long long int count,maxi;
void dfs(int n)
{
	
	visited[n]=1;
	if(arr[n]==maxi)
	count++;
	if(arr[n]>maxi)
	{
		maxi=arr[n];
		count=1;
	}
	
	
	for(int i=0;i<rel[n].size();i++)
	{
		int y=rel[n][i];
		if(!visited[y])
		{
			dfs(y);
		}
		
	}
	
}
int main()
{
	int n,m;
	cin>>n>>m;
	//int arr[n];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
		
	}
	for(int j=0;j<m;j++)
	{
		int u,v;
		cin>>u>>v;
		--u;
		--v;
		rel[u].push_back(v);
		rel[v].push_back(u);
	}
	memset(visited,0,sizeof(visited));
	int c=0;
	
	for(int k=0;k<n;k++)
	{
		if(visited[k]==0)
		{
			dfs(k);
			if(count!=0)
			v.push_back(count);
	     }
			count=0;
			maxi=0;
		
		
	}
	long long int p=1;
	
	for(int i=0;i<v.size();i++)
	{
		p = (p*v[i])%1000000007;
	}
	cout<<p<<endl;
	
	
	
	
}