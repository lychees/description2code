#include <iostream>
#include <algorithm>
#include <string>
#include <map>
using namespace std;

const int N = 111;
const long long inf = 1e18;
map<string, int> p;
int n, m, q;
string x, y;
long long d[N][N], len;

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> x;
		p[x] = i;
	}
	for (int i = 0; i <= n; i++) {
		for (int j = 0; j <= n; j++) {
			d[i][j] = i != j ? inf : 0;
		}
	}
	for (int i = 0; i < m; i++) {
		cin >> x >> y >> len;
		d[p[x]][p[y]] = d[p[y]][p[x]] = len;
	}
	for (int k = 0; k < n; k++) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (d[i][k] < inf && d[k][j] < inf)
					d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
			}
		}
	}
	cin >> q;
	for (int i = 0; i < q; i++) {
		cin >> x >> y;
		cout << d[p[x]][p[y]] << endl;
	}
}