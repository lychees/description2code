#include <stdio.h>
#include <bits/stdc++.h>

using namespace std;

int mini (int i, int j) {
	if (i < j) {
		return i;
	}
	return j;
}
int g1 = 0;
char colour [100001];// = {0};
char a [100001];// = {0};
int visited [100001] = {0};
vector <int> v [100001];

int vert;

void dfs (int vi, char flag) {
	int i;
	//printf ("%d %c\n", vi, flag);
	visited [vi] = 1;
	colour [vi] = flag;
	
	for (i = 0; i < v [vi].size (); i++) {
		if (visited [v [vi] [i]] == 0) {
			if (colour [vi] == 'B') {
				flag = 'P';
			} else {
				flag = 'B';
			}
			dfs (v [vi] [i], flag);
	//		printf ("%d 1\n", v [vi] [i]);
		} else {
			if (colour [vi] == colour [v [vi] [i]]) {
				g1 = 1;
			}
		}
	}
	
	return;
	
}
int main ()
{
	int n, i, count, m, u1, u2, j, count1;
	char c, y, flag;
	
	cin >> n >> m;
	for (i = 0; i < n; i++) {
		cin >> a [i];
	}
	
	
	for (i = 0; i < m; i++) {
		scanf ("%d%d", &u1, &u2);
		u1--;
		u2--;
		v [u1].push_back (u2);
		v [u2].push_back (u1);
	}
	
	/*for (i = 0; i < m; i++) {
		for (j = 0; j < v [i].size (); j++) {
			//printf ("%d %d\n", i, v [i] [j]);
		}
	}*/
	
	dfs (0, 'B');
	count = 0;
	for (i = 0; i < n; i++) {
	//	printf ("%c %c\n", a [i], colour [i]);
		if ((a [i] == 'G' && colour [i] == 'P') || (a [i] == 'B' && colour [i] == 'B')) {
			continue;
		} else {
			count++;
		}
	}
	//memset(gender,0,sizeof(gender));
	memset(colour,0,sizeof(colour));
	memset(visited,0,sizeof(visited));
	dfs (0, 'P');
	count1 = 0;
	for (i = 0; i < n; i++) {
	//	printf ("%c %c\n", a [i], colour [i]);
		if ((a [i] == 'G' && colour [i] == 'P') || (a [i] == 'B' && colour [i] == 'B')) {
			continue;
		} else {
			count1++;
		}
	}
	if (g1 == 1) {
		printf ("-1\n");
	} else {
		printf ("%d\n", mini (count, count1));
	}
	return 0;
}