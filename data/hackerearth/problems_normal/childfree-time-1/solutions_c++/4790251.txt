#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define f(i,s,e) for(ll i=s;i<=e;i++)
#define ip(a) scanf("%lld",&a)
#define op(a) printf("%d",a)
#define lop(a) printf("%lld",a)
#define cip(a) scanf("%c",&a)
#define INF 1000000000
#define MOD 1000000007
#define pii pair<ll,ll>
#define pb push_back
#define mp make_pair
#define pi 3.14159265358979323846
#define  e 2.71828182845904523536
queue<pair<ll,ll> >q;
vector<ll> v;
stack<ll>s;
vector<pii> adj[1000009];
bool visit[1000009];
ll tim[1000009];
void rdfs(ll src)
{
    ll i;visit[src]=1;
    for(i=0;i<adj[src].size();i++)
        if(!visit[adj[src][i].first])
            rdfs(adj[src][i].first);
    s.push(src);
}
int main()
{
    ll n,m,x,y,z;
    memset(visit,false,sizeof(visit));
    ip(n);ip(m);
    while(m--)
    {
        ip(x);ip(y);ip(z);
        adj[x].pb({y,z});
    }
    f(i,1,n)
        if(!visit[i])
            rdfs(i);
    v.clear();
    while(!s.empty())
    {
        v.pb(s.top() );
        //cout<<s.top()<<" ";
        s.pop();
    }//cout<<endl;
    ll ans=INT_MIN;
    for(ll i=v.size()-1;i>=0;i--)
    {
        //tim[i]=2;
        if(adj[v[i]].size()==0)
        {
            tim[v[i]]=0;
            continue;
        }
        ll m=INT_MIN;
        //ll k=adj[v[i]][j].first;
        for(ll j=0;j<adj[v[i]].size();j++)
            m=max(m, tim[ adj[v[i]][j].first ] + adj[v[i]][j].second );
        tim[v[i]]=2+m;
        //cout<<v[i]<<" "<<m+2<<endl;
        ans=max(tim[v[i]],ans);
    }
    printf("%lld\n",ans);
    return 0;
}

