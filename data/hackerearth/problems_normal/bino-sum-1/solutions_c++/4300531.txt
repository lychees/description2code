using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define fast ios_base::sync_with_stdio(false),in.tie(0),cout.tie(0);
#define input freopen("input.in","r",stdin);
#define output freopen("output.cout","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define pii pair<ll,ll>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
typedef vector<vector<ll> > mat;
const ll mx=100001;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
void solve();
ll dp[1001][1001];
int main()
{
  int t=1;
 // cin>>t;
  while(t--)
  solve();
  return 0;
}
void fun()
{
  ll n=1000,k=1000;
  int j;
  rep(i,0,n)
  {
    rep(j,0,i)
    {
      if(j==0||j==i)
        dp[i][j]=1;
      else
        dp[i][j]=(dp[i-1][j-1]+dp[i-1][j])%mod;
    }
  }
}
void solve()
{
    fun();
    ll sum,p,k;
    int t;
    cin>>t;
    while(t--)
    {
      cin>>k>>p;
      sum=0;
      for(;p>=0;p--)
      {
        sum+=dp[k][p];
        sum%=mod;
      }
      cout<<sum;
      e
    }
    return ;   
}



























