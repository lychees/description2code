#include<bits/stdc++.h>

using namespace std;

vector<vector<int> > G;

int v[100005],A[100005],t=0,low[100005],disc[100005];

void arti_pt(int vertex,int parent)
{
	int i,child=0;
	
	v[vertex]=1;
	
	++t;
	disc[vertex]=t;
	low[vertex]=t;
	
	for(i=0;i<G[vertex].size();i++)
	{
		++child;
		if(!v[G[vertex][i]])
		{
			arti_pt(G[vertex][i],vertex);
			low[vertex]=min(low[vertex],low[G[vertex][i]]);
			
			if(parent!=-1 && low[G[vertex][i]]>=disc[vertex])
				A[vertex]=1;
			else if(parent==-1 && child>1)
				A[vertex]=1;
		}
		else
		{
			if(G[vertex][i]!=parent)
				low[vertex]=min(low[vertex],disc[G[vertex][i]]);
		}
	}
	
}
int main()
{
	int i,n,m,to,from,idx,Q;
	vector<int> R;
	cin>>n>>m;
	
	for(i=0;i<=n;i++)
	{
		G.push_back(R);
		A[i]=0;
		v[i]=0;
	}
	
	for(i=0;i<m;i++)
	{
		cin>>to>>from;
		G[to].push_back(from);
		G[from].push_back(to);
	}
	
	for(i=1;i<=n;i++)
		if(!v[i])
			arti_pt(i,-1);
	
	cin>>Q;
	
	for(i=0;i<Q;i++)
	{
		cin>>idx;
		if(A[idx]==1)
			printf("Satisfied %d\n",G[idx].size());
		else
			printf("Not Satisfied\n");
	}
	return 0;
}