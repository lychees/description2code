#include<bits/stdc++.h>

#define lli long long int
#define llu unsigned long long int
#define ld long double
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define slli(n) scanf("%lld",&n);
#define ss(n) scanf("%s",n);

const long double EPS = 1e-10;
const lli MOD = 1000000007ll;
const lli mod1 = 1000000009ll;
const lli mod2 = 1100000009ll;
int INF = 2147483645;
lli INFINF = 9223372036854775807;
int debug = 0;

using namespace std;

lli bit_count(lli _x){lli _ret=0;while(_x){if(_x%2==1)_ret++;_x/=2;}return _ret;}
lli bit(lli _mask,lli _i){return (_mask&(1<<_i))==0?0:1;}
lli powermod(lli _a,lli _b,lli _m){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a)%_m;_b/=2;_a=(_a*_a)%_m;}return _r;}
lli add(lli a,lli b,lli m){lli x=a+b;while(x>=m)x-=m;return x;}
lli sub(lli a,lli b,lli m){lli x=a-b;while(x<0)x+=m;return x;}
lli mul(lli a,lli b,lli m){lli x=a*b;x%=m;return x;}

int n,q,x;
vector<pair<int,int> > fact[100010];
int M = 100000;
bool isp[100010];
int cnt[100010];

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    debug = 1;
#endif
    srand (time(NULL));

    for(int i=2;i<=M;i++)
        isp[i] = true;
    for(int i=2;i<=M;i++){
        if(isp[i]){
            fact[i].pb({i,1});
            for(int j=i+i;j<=M;j+=i){
                isp[j] = false;
                int counter = 0;
                int d = j;
                while(d%i==0){
                    counter ++;
                    d/=i;
                }
                fact[j].pb({i,counter});
            }
        }
    }

    si(n);
    for(int i=1;i<=n;i++){
        int temp;
        si(temp);
        for(pair<int,int> x:fact[temp])
            cnt[x.F] += x.S;
    }
    si(q);
    while(q--){
        int ans = INF;
        si(x);
        for(pair<int,int> y:fact[x])
            ans = min(ans,cnt[y.F]/y.S);
        printf("%d\n",ans);
    }

    return 0;
}

