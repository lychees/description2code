/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
int dp[1000010];
bool solve(int n, int m1, int m2){

	if(n < m1){
		return false;
   	}
   	if(dp[n] != -1){
   		return dp[n] == 1;
   	}
	else{
		bool ret = false;
		if(n >= m1){
			ret = ret || !solve(n - m1, m1, m2);
		}
		if(n >= m2){
			ret = ret || !solve(n - m2, m1, m2);
		}
		if(ret){
			dp[n] = 1;
		}
		else{
			dp[n] = 0;
		}
		return ret;
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	int t, n, m1, m2;
	cin >> t;
	while(t--){
		cin >> n >> m1 >> m2;
		f(i, n + 1){
			dp[i] = -1;
		}
		cout << ((solve(n, min(m1, m2), max(m1, m2)) ? 1 : 0)) << endl;
	}
	
	return 0;
}