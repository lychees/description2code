#include <bits/stdc++.h>
using namespace std;
const int MAX = 100005;
bool vis[MAX] = {false};
int dist[MAX];
int n,x,y,z;
struct Node{
	int d;
	int i;
};
vector<Node> G[MAX];

int BFS(int start){
	queue<int> Q;
	for(int i=0;i<=n;i++){
		vis[i] = false;
		dist[i] = 0;
	}
	Q.push(start);
	vis[start] = true;
	while(!Q.empty()){
		int v = Q.front(); 
		Q.pop();
		for(int i=0;i<(int)G[v].size();i++){
			if(!vis[G[v][i].i]){
				vis[G[v][i].i] = true;
				dist[G[v][i].i] += dist[v] + G[v][i].d;
				Q.push(G[v][i].i);
			}
		}
	}
	return (int) (max_element(dist+1,dist+n+1) - dist);
}

int main()
{
    int t;
    cin>>t;
    Node temp;
    while(t--){
    	cin>>n;
    	for(int i=0;i<=n;i++){
    		G[i].clear();
    	}
    	for(int i=1;i<=n-1;i++){
    		cin>>x>>y>>z;
    		temp.i = x;
    		temp.d = z;
    		G[y].push_back(temp);
    		temp.i = y;
    		G[x].push_back(temp);
    	}
    	int start = BFS(1);
    	int ans = BFS(start);
    	int finAns = dist[ans];
    	int money = 0;
		if (finAns>100)
			money = 100;
		if (finAns>1000)
			money = 1000;
		if (finAns>10000)
			money = 10000;
		printf("%d %d\n",money,finAns);
    }
    return 0;
}
