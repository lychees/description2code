#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define F(i,x) for(int i=0; i<x; i++)
#define FI(it, m) for( vector<vector<long long> > :: iterator it=m.begin(); it!=m.end(); it++)
#define mset(a, x) memset(a, x, sizeof(a))
#define p(a) cout<<a<<endl
#define db(a) cout<<a<<" ";

ll a[100000], p[100000], b[100000];
int done[100000];
int main()
{
    int n;
    ll t;
    scanf("%d%lld", &n, &t);
    mset(a, 0);
    mset(p, 0);
    mset(done, 0);
    int cnum=1;
    vector<int> index;
    vector<vector<ll> > cycles;
    F(i, n)
    {
        scanf("%lld", &a[i]);
        //p(a[i]);
    }

    F(i, n)
    {
        scanf("%lld", &p[i]);
        p[i]--;
        //p(p[i]);
    }

    F(i, n)
    {
        if(done[i]==0)
        {
            vector<ll> temp;
            int j=i;
            index.push_back(i);
//            cout<< i << "#" << a[i];
//            p(j);
//            p("#");
            while(!done[j])
            {
                temp.push_back(a[j]);
                done[j]=cnum;
                j=p[j];
            }
            cycles.push_back(temp);
            cnum++;
        }
    }
    vector<vector<ll> >::iterator it;
    int j=0;
    FI(it, cycles)
    {
        int sind = index[j];
//        p(sind);
//        p(#);
        int len =  it->size();
        ll shift = len - t%(ll)len;
        while(shift--)
        {
            sind = p[sind];
        }
        F(i, len)
        {
//        	p((*it)[i]);
            b[sind] = (*it)[i];
//            p(sind);
            sind = p[sind];
        }
        j++;
    }

    F(i, n)
    {
        printf("%lld ", b[i]);
    }
    return 0;
}
