#include <bits/stdc++.h>
using namespace std;

const int MD = 1e9 + 7;
long n, a[555], dp[555][111][111];

long solve(int pos, int lastTaken, int g){
	if( pos == n ){
		return (g == 1);
	}
	long &ret = dp[pos][lastTaken][g];
	if( ret != -1 ) return ret;
	ret = 0 ;
	if(a[pos] > lastTaken ) ret = ( ret + solve(pos+1, a[pos], __gcd(g, int(a[pos]) ) )) % MD ;
	ret = ( ret + solve(pos+1, lastTaken, g) ) % MD;
	return ret;
}

int main() {
    cin >> n ;
    for( int i = 0 ; i < n ; i++ ){
    	cin >> a[i];
    }
    long ans = 0 ;
    memset(dp, -1, sizeof dp);
    for( int i = 0 ; i < n ; i++ ){
    	ans = ans + solve(i+1, a[i], a[i]);
    	ans %= MD ;
    }
    cout << ans << endl;
}
