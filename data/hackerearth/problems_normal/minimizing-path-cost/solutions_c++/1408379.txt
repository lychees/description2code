#include <iostream>
#include<string.h>
using namespace std;
#include<limits.h>
#include<map>
#define INF INT_MAX
int main()
{
	map<string,int>map_p;
	int n,m;
	cin>>n>>m;
	for(int i=0;i<n;i++)
	{
	string q;
	cin>>q;
	map_p[q]=i;
	//cout<<"map_p"<<"["<<q<<"]="<<i<<endl; 	
	}
	 int dist[n][n];
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			{
			if(i==j) dist[i][j]=0;
			else dist[i][j]=INF;	
			}
			
	for(int i=0;i<m;i++)
		{
		string src,end;
		int d;
		cin>>src>>end>>d;	
		int src_no= map_p[src];
		int end_no= map_p[end];
		dist[src_no][end_no]=d;
		dist[end_no][src_no]=d;	
		//cout<<"dist["<<end_no<<"]["<<src_no<<"]="<<	dist[end_no][src_no]<<endl;
		}
	 for (int k = 0; k < n; k++)
    {

        for (int i = 0; i < n; i++)
        {
         
            for (int j = 0; j < n; j++)
            {
            
                if(dist[i][k] != INF && dist[k][j] != INF && dist[i][k] + dist[k][j] < dist[i][j])
                    dist[i][j] = dist[i][k] + dist[k][j];
            }
        }
    }
	
	int q;
	cin >>q;
	for(int i=0;i<q;i++)
	{
	string src,end;		
	cin>>src>>end;	
		int src_no= map_p[src];
		int end_no= map_p[end];
		cout<<dist[src_no][end_no]<<endl;
	}
	
	
		
	return 0;
}