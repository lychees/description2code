#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
#define pb push_back
#define mp make_pair
#define sz size()
#define ln length()
#define forr(i,a,b)                 for(int i=a;i<=b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()    
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
ll a[2][2]; 
ll unit[2][2] = {{1,0},{0,1}};
ll MOD=1000000007;
void mul(ll aa[2][2] , ll b[2][2]){
	ll pro[2][2];
	for(int i=0;i<2;i++){
		for(int j=0;j<2;j++){
			for(int k=pro[i][j] = 0;k<2;k++){
				pro[i][j] += aa[i][k]*b[k][j];
			}
			pro[i][j] %= MOD;
		}
	}
	memcpy(aa,pro,sizeof(pro));
}			
void fun(ll res[][2] , ll n)
{
	ll x[2][2]; ll y[2][2];
	memcpy(x,unit,sizeof(unit));
	memcpy(y,a,sizeof(a));
	if(n==0){
		memcpy(res,a,sizeof(a));
		return;
	}
	while(n>0){
		if(n&1)
			mul(x,y);
		mul(y,y);
		n /= 2;
	}
	memcpy(res,x,sizeof(x));
}
int main()
{
	int t,n;
	scanf("%d",&t);
	forr(i,1,t){
		scanf("%d",&n);
		ll aa[2][2] ={{1,2},{1,0}} , ans;
		memcpy(a,aa,sizeof aa);
		ll res[2][2];
		if(n==1)
			cout<<2<<endl;
		else if(n==2)
			cout<<7<<endl;
		else{
			fun(res,n-2);
			ans = (res[0][0]*7+res[0][1]*2)%MOD ;
			cout<<ans<<endl;
		}
	}
	return 0;
}

