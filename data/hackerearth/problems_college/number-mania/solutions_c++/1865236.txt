#include<bits/stdc++.h>
using namespace std;

#define SIZE 160

void bigadd(const char a[],const char b[],char sum[])
{
    int i=0;
    while(a[i]>='0' && b[i]>='0')
    {
        sum[i]=a[i]+b[i]-'0';
        i++;
    }
    while(a[i]>='0')
    {
        sum[i]=a[i];
        i++;
    }
    while(b[i]>='0')
    {
        sum[i]=b[i];
        i++;
    }
    sum[i]=sum[i+1]=0;
    for(i=0;sum[i];i++)
        if(sum[i]>'9')
        {
                sum[i+1]+=(sum[i]-'0')/10;
                sum[i]='0' + (sum[i]-'0')%10;
        }
        else if(sum[i]<'0')
            sum[i]+='0';
}

void bigmult(const char a[],const char b[],char pro[])
{
    int p[SIZE]={0};
    int i,j,l=strlen(a)+strlen(b);
    for(i=0;a[i];i++)
    {
        if(a[i]>'0')
            for(j=0;b[j];j++)
                p[i+j]+=(a[i]-'0')*(b[j]-'0');
    }
    for(i=0;i<l;i++)
    {
        if(p[i]>9)
        {
            p[i+1]+=p[i]/10;
            p[i]%=10;
        }
    }
    while(!p[i])
            i--;
    pro[i+1]=0;
    while(i>=0)
    {
        pro[i]=p[i]+'0';
        i--;
    }
}

void bigcopy(const char a[],char b[])
{
    int i;
    for(i=0;a[i];i++)
        b[i]=a[i];
    b[i]=0;
}

void bigshow(const char a[])
{
    int i;
    for(i=strlen(a)-1;i>=0;i--)
        putchar(a[i]);
    printf("\n");
}

int bigdigsum(char a[])
{
    int i,s=0;
    for(i=0;a[i];i++)
        s+=a[i]-'0';
    return s;
}

char a[SIZE],b[SIZE],c[SIZE],ans[SIZE],one[SIZE];

bool isnp[103];
void fillSieve(int n=100)
{
    memset(isnp,0,sizeof isnp);
    // 0 : prime
    int i,j;
    isnp[1]=1;
    for(i=2,j=i*i;j<=n;j+=i)
            isnp[j]=1;
    for(i=3;i<=n;i+=2)
    {
        if(isnp[i])
            continue;
        for(j=i*i;j<=n;j+=i+i)
            isnp[j]=1;
    }
}


int main()
{
    one[0]='1',one[1]=0;
    a[0]='1',a[1]=0;
    ans[0]='1',ans[1]=0;
    int n,i;
    fillSieve();
    cin>>n;
    if(n>200)
    	assert(0);
    else if(n>10)
    	for(i=2;i<=n;i++)
	    {
	        bigadd(a,one,c);
	        bigmult(c,ans,b);
	        bigcopy(b,ans);
	        bigcopy(c,a);
	        if(!isnp[i])
	            bigshow(ans);
	    }
	else
		for(i=2;i<n;i++)
		{
			bigadd(a,one,c);
			bigmult(c,ans,b);
			bigcopy(b,ans);
			bigcopy(c,a);
			if(!isnp[i])
				bigshow(ans);
		}
    return 0;

}
