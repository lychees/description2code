#include <bits/stdc++.h>
using namespace std;
int fast_pow(long long base, long long n,long long M)
{
    if(n==0)
       return 1;
    if(n==1)
    return base;
    long long halfn=fast_pow(base,n/2,M);
    if(n%2==0)
        return ( halfn * halfn ) % M;
    else
        return ( ( ( halfn * halfn ) % M ) * base ) % M;
}
int findMMI_fermat(int n,int M)
{
    return fast_pow(n,M-2,M);
}
int main()
{
	int t;
	cin>>t;
	while(t--){
		long long n;
		cin>>n;
    long long fact[10000001];
    fact[0]=1;
    int i=1;
    int MOD=1000000007;
    while(i<=10000000)
    {
        fact[i]=(fact[i-1]*i)%MOD;
        i++;
    }
    long long num,mmideno,minw,deno=4;
    num =( ((n * (n-1)) % MOD)* (n-1))% MOD;
    mmideno = findMMI_fermat(deno,MOD);
    minw = (num * mmideno) % MOD;
    long long nu,mmid,maxw,d=6;
    nu = (((n*(n-1))% MOD) * ((2*n)-1)) % MOD;
    mmid = findMMI_fermat(d,MOD);
    maxw = (nu * mmid) % MOD;
    cout<<minw<<' '<<maxw<<endl;
			}
			return 0;
}