#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define MOD 1000000007
ll status[1000005];
ll primes[100005];	
ll psum[1000005];
ll nop[1000005];	
int k;		
					//primes[] stores all primes till 100001, i.e. primes[0]=2
void gen_primes()
{
	int i,j;
	k=1;
	status[1]=1;
	for(i=2;i*i<=1000001;i++)
	{
		if(status[i]==0)
		{													
			for(j=i*i;j<1000001;j+=i)
			{
				status[j]=1;
			}
		}
	}
	for(i=2;i<=1000001;i++)
	{
		nop[i] = nop[i-1];
		if(status[i]==0)
		{
			nop[i]++;
			primes[k]=i;
			psum[k] = psum[k-1]+i;
			psum[k]%=MOD;
			k++;
		}
	}
//	printf("%d\n", primes[k-2]);
}
ll dp[1000005];
int main()
{
	ll i,l,r,tsum;
	gen_primes();
	dp[1] = 0;
	for(i=2; i<=k; i++)
	{
		dp[i] =  dp[i-1]%MOD+ (psum[i-1]*primes[i])%MOD;
		dp[i]%=MOD;
	}
	ll t;
	scanf("%lld",&t);
	psum[0]=0;
	//cout<<dp[2]<<endl;
	while(t--)
	{
		ll x,y,anss;
		scanf("%lld%lld",&l, &r);
		x = nop[l], y = nop[r];
		if(status[l]==1)
			x++;
		tsum = (psum[y] - psum[x-1])+MOD;
		tsum%=MOD;
		 anss = (psum[x-1]*tsum)%MOD;
		
		ll res= (dp[y]-anss+MOD)%MOD;
		res-=dp[x-1];
		res+=MOD;
		res%=MOD;
		printf("%lld\n", res);
	}
	return 0;
}