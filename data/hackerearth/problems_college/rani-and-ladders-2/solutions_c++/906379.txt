#include<bits/stdc++.h>
using namespace std;

pair<int, int> p;

int get_ans(int *board, int n) {
	bool visited[n+1];
	memset(visited, false, sizeof(visited));
	queue< pair<int,int> > q;
	q.push(make_pair(0,0));
	visited[0] = 1;
	if(board[0] != -1) {
	    q.pop();
	    q.push(make_pair(board[0],0));
	    visited[board[0]] = 1;
	}
	while(!q.empty()) {
		p = q.front();
		q.pop();
		if(p.first == n-1) {
			break;
		}
		for(int j = p.first + 2; j <= (p.first + 12) && j < n; j++) {
			if(!visited[j]) {
				pair<int,int> temp;
				temp.second = p.second + 1;
				visited[j] = 1;
				if(board[j] != -1) {
					temp.first = board[j];
				} else {
					temp.first = j;
				}
				q.push(temp);
			}
		}
	}
	return p.second;
}

int main() {
	int t;
	cin>>t;
	int n,l;
	while(t--) {
		cin>>n>>l;
		int board[n+1];
		memset(board, -1, sizeof(board));
		int ind,val;
		for(int i = 0 ;i < l; i++) {
			cin>>ind>>val;
			ind--;
			val--;
			board[ind] = val;
		}
		cout<<get_ans(board, n)<<"\n";
	}
	return 0; 
}