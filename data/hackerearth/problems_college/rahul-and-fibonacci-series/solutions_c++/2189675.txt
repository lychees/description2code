#include<bits/stdc++.h>
#include<vector>
#include<cstdio>
#include<cmath>
#include<algorithm>
#define FOR(i,n) for(int i=0;i<n;i++)
#define si(x) scanf("%d",&x)
#define sll(x) scanf("%lld",&x)
#define M 1000000007
#define ll long long
using namespace std;
void mul(ll f[2][2],ll g[2][2])
{
    ll a=((f[0][0]*g[0][0])%M+(f[0][1]*g[1][0])%M)%M;
    ll b=((f[0][0]*g[0][1])%M+(f[0][1]*g[1][1])%M)%M;
    ll c=((f[1][0]*g[0][0])%M+(f[1][1]*g[1][0])%M)%M;
    ll d=((f[1][0]*g[0][1])%M+(f[1][1]*g[1][1])%M)%M;
    f[0][0]=a;
    f[0][1]=b;
    f[1][0]=c;
    f[1][1]=d;
}

void pow(ll f[2][2],ll n)
{
    if(n==0||n==1)
        return;
    ll g[2][2]={{1,1},{1,0}};
    pow(f,n/2);
    mul(f,f);
    if(n%2)
        mul(f,g);
}
ll fib(ll n)
{
    if(n==0)
        return 0;
    ll f[2][2]={{1,1},{1,0}};
    pow(f,n-1);
    return f[0][0];
}

long long int modpow(long long int base,long long int exp)
{
    long long int val=1;
    while(exp!=0)
    {
        if(exp%2==1)
            val=(val*base)%M;
        exp=exp/2;
        base=(base*base)%M;
    }
    return val;
}


int main()
{
    int t;
    si(t);

    vector<long long> v;
	v.push_back(1);
	v.push_back(2);
    long long a=1,b=2,n=2,c;
    c=a+b;
    while(c<=1e16)
    {
    	v.push_back(c);
    	n++;
    	a=b;
    	b=c;
    	c=a+b;
    }
    while(t--)
    {
        ll n,m;
        sll(n);
        long long b=0,last=1,nb,ans;
    	for(int i=1;i<v.size();++i)
    	{
    		nb=b+v[i]-last-1;
    		if(nb>=n)
    		{
    			ans=last+n-b;
    			break;
    		}
    		b=nb;
    		last=v[i];
    	}
    	printf("%lld\n",modpow(ans,fib(n)));
    }
    return 0;
}
