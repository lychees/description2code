#include<bits/stdc++.h>
using namespace std ;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<char> vc;
typedef pair<int,int> ii;
typedef long long int ll;

#define sz(a) int((a).size())
#define PB push_back
#define MP make_pair
#define clr(x) memset(x,0,sizeof(x))
#define mem(x,i) memset(x,i,sizeof(x))
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof(c.begin()) i = c.begin(); i != c.end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define F first
#define S second
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 1000000007
#define PI (3.141592653589793)
#define gc getchar
#define pc putchar
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define pw printf(" ")

/*
inline void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}*/

/*int gcd(int a, int b)
{
    if(b>a)return gcd(b,a);
    if(!b)return a;
    return gcd(b, a%b);
}
*/
bool vis[1000][1000];
int main()
{
  int t;
  si(t);
  while(t--)
  {
    int n,k;
    si(n);si(k);
    char v[n+2][n+2];
    for(int i=0;i<n;i++)ss(v[i]);
    clr(vis);
    int f,s,r,fl=0,c;
    if(v[0][0]=='0')
    {
      if(n==1)pin(1);
      else psn("-1");
      continue;
    }
    queue< pair< pair<int,int>, int > > q;
    q.push(MP(MP(0,0),0));
    while(!q.empty())
    {
      pair< pair<int,int>, int > top= q.front();
      q.pop();
      f=top.first.first;
      s=top.first.second;
      c=top.second;
      if(f==k-1&&s==k-1)
      {
        fl=1;
        break;
      }
      if(!vis[f+1][s]&&f+1<n&&v[f+1][s]=='1')q.push(MP(MP(f+1,s),c+1));
      if(!vis[f][s+1]&&s+1<n&&v[f][s+1]=='1')q.push(MP(MP(f,s+1),c+1));
    }
    if(fl)pin(c);
    else psn("-1");
  }
  return 0;
}
