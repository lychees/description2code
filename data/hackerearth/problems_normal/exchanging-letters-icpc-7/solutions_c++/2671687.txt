#include<bits/stdc++.h>
using namespace std;
int mod = 1000000007;
int a[2005];
long long F[2005];
int getPow(int x, int y) {
	if (y == 0)
		return 1;
	int ans = getPow(x, y / 2);
	ans = (ans * 1LL * ans) % mod;
	if (y % 2)
		ans = (ans * 1LL * x) % mod;
	return ans;
}

int nCr(int x, int y) {
	if (y > x)
		return 0;
	return (F[x] * getPow((F[y] * F[x - y]) % mod, mod - 2)) % mod;
}
int main() {
	ios::sync_with_stdio(false);
	int n, k, t;
	scanf("%d%d%d", &n, &k, &t);
	int minSum = 0, maxSum = 0;
	for (int i = 0; i < k; i++) {
		scanf("%d", a + i);
		minSum += a[i] - 1;
		maxSum += a[i] + 1;
	}
	F[0] = 1;
	for (int x = 1; x <= 2000; x++)
		F[x] = (x * 1LL * F[x - 1]) % mod;

	if (t < minSum || t > maxSum) {
		cout << 0 << endl;
		return 0;
	}
	int diff = t - minSum;
	if (diff % 2 != 0) {
		cout << 0 << endl;
		return 0;
	}
	cout << nCr(k, diff / 2) << endl;

	return 0;
}

