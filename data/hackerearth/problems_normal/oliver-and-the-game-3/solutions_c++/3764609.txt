/* Akshat Mathur 
	IIIT Allabahad */

// #include<fuck_you.h>
#include <bits/stdc++.h>
using namespace std;
#define FOR(i,a,n) for(int i=a;i<n;i++) //for loop
#define si(x) scanf("%d",&x) // scan int
#define sll(x) scanf("%lld",&x) // scan ll
#define ss(x) scanf("%s",x) // scan string
#define pi(x) printf("%d\n",x) // print int
#define pll(x) printf("%lld\n",x) // print ll
#define ps(x) printf("%s\n",ch) // print string
#define INF 2000000000 // infinity
#define ll long long
#define mp make_pair
#define pb push_back
#define fr first
#define se second
typedef pair< long long, long long > PLL;
typedef pair< int, int > PII;
#define XXX 100069
#define XXXX 10000069
vector<int> g[100069];
int vis[100069]={};
int start[100069];
int finish[100069];
int tim=0;
void DFS(int i){
    vis[i]=1;
    start[i]=tim++;
    FOR(j,0,g[i].size()){
        int v = g[i][j];
        if(!vis[v])
            DFS(v);
    }
    finish[i]=tim++;
}
bool is_in_subtree(int a,int b){
    if(start[a]<=start[b] && finish[a]>=finish[b])
        return true;
    else
        return false;
}
int main()
{
	int n;
	si(n);
	FOR(i,0,n-1){
        int x,y;
        si(x);si(y);
        g[x].pb(y);
        g[y].pb(x);
	}
	
	int q;
	si(q);
	DFS(1);
	//FOR(i,1,n+1)
     //   cout<<d[i]<<" ";
    
	FOR(i,0,q){
	    //printf("hi");
        int c,x,y;
        si(c); si(x); si(y);
        if((c && is_in_subtree(y,x)) || (!c && is_in_subtree(x,y)))
            printf("YES\n");
        else
            printf("NO\n");
	}
	return 0;
}
