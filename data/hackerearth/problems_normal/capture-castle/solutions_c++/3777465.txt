#include<iostream>
#include<algorithm>

# define inf 1000001

using namespace std;

int dx[] = {1,0,-1,0};
int dy[] = {0,1,0,-1};

int n,m;
int arr[1001][1001];
int tim[1001][1001];

typedef struct 
{
	int x;
	int y;
}Point ;

Point queue[1000002];

int issafe(int x,int y)
{
  if(x >= 0 && x < n && y >= 0 && y < m)
    return 1;
    
    return 0;
}

void bfs(int x,int y)
{
  int front = 0;
  int rear = -1;
  Point p;
  p.x = x;
  p.y = y;
  
  queue[++rear] = p;
  
  while(rear >= front)
  {
  	Point r = queue[front++];
  	
  for(int i=0;i<4;i++)
  {
  	Point s;
  	s.x = r.x + dx[i];
  	s.y = r.y + dy[i];
  	if(issafe(s.x,s.y) && tim[s.x][s.y] > tim[r.x][r.y]+arr[s.x][s.y])
  	{
  		tim[s.x][s.y] = tim[r.x][r.y]+arr[s.x][s.y];
  		queue[++rear] = s;
  	}
  }
  
}


	
}

int main()
{
	int tt,t,i,j,x,y;
	cin>>tt;
	while(tt--)
	{
	  cin>>n>>m;
	  
	  for(i=0;i<n;i++){
	   for(j=0;j<m;j++){
	   	 arr[i][j] = 0;
	   	 tim[i][j] = inf;
	   }
     }
	  
	  for(i=0;i<n;i++)
	   for(j=0;j<m;j++)
	     cin>>arr[i][j];
	     
	     cin>>x>>y>>t;
	     x--;
	     y--;
	     tim[0][0] = arr[0][0];
	     bfs(0,0);
	     
	     if(tim[x][y] != inf && tim[x][y] <= t )
	     {
	     	cout<<"YES\n";
	     	cout<<(t-tim[x][y])<<"\n";
	     }
	     else
	     cout<<"NO\n";
	 
	 }
	 
	 return 0;
}
	    