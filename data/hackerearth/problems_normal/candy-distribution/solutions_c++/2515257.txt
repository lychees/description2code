#include <iostream>
#include <map>
#include <math.h>
using namespace std;
map<long,long> DP;
#define mod 1000000007
long long power(long long a,long long b){
	long long ret=1;
	while(b){
		if(b&1) ret=(ret*a)%mod;
		a=(a*a)%mod;
		b=b>>1;
	}
	return ret;
}
long long distribute(long long n){
	if(n==1 || n==2) return 1;
	if(DP.find(n)!=DP.end()) return DP[n];
	long long ans=1;
	n--;
	for(int i=2 ; i<=sqrt(n) ; i++){
		if(n%i==0){
			ans=ans+power(distribute(i),n/i);
			ans%=mod;
			if(n/i!=i){
				ans=ans+power(distribute(n/i),(n/(n/i)));
				ans%=mod;
			}
		}
	}
	DP[n+1]=ans;
	return ans;
}
int main()
{
	long long n;
	cin>>n;
	cout<<distribute(n);
	return 0;
}
