#include <iostream>
#include <algorithm>
#include <string>
using namespace std;

int main()
{
	int t=0;
	cin >> t;
	//char ch;
	//cin >> ch;
	for(int i=0;i<t;i++){
		string str1;
		string str2;
		getline(cin,str1);
		if(str1 == "")
			getline(cin,str1);
		getline(cin,str2);
		
		transform(str1.begin(),str1.end(),str1.begin(),::tolower);
		transform(str2.begin(),str2.end(),str2.begin(),::tolower);
		//cout << str1 << " **** " << str2<<endl;
		string str11= "",str21="";
		for(int j=0;j<str1.length();j++){
			if(str1[j] >= 'a' && str1[j] <= 'z')
				str11.push_back(str1[j]);	
		}
		for(int j=0;j<str2.length();j++){
			if(str2[j] >= 'a' && str2[j] <= 'z')
				str21.push_back(str2[j]);	
		}
		string longerStr = str11;
		string shorterStr = str21;
		if(str11.length()<str21.length()){
			longerStr = str21;
			shorterStr = str11;
		}
		//cout<<"Shorter " <<shorterStr <<endl;
		//cout<<"Longer " <<longerStr <<endl;
		bool anagramFlag = true;	
		vector<int> cnt(26,0);
		for(int j=0;j<longerStr.length();j++){
			cnt[longerStr[j]-'a']++;
		}
		for(int j=0;j<shorterStr.length();j++){
			if(cnt[shorterStr[j]-'a'] == 0){
				anagramFlag = false;
				break;
			}
			cnt[shorterStr[j]-'a']--;
		}
		if(!anagramFlag){
			cout << "NO LUCK" <<endl;
		}
		else{
			//cout << "Dont know"<< endl; 		
			int evenChars =0,oddChars = 0;
			int newLength =0 ;
			string palindrome;
			int oddChar = -1;
			for(int j=0;j<26;j++){
				if(cnt[j] > 0){
					newLength += cnt[j];
					if(cnt[j] % 2 == 0){
						evenChars++;
						for(int k=0;k<cnt[j]/2;k++){
							palindrome.push_back('a'+j);
						}
					}
					else{
						oddChars++;
						
						for(int k=0;k<(cnt[j]-1)/2;k++){
							palindrome.push_back('a'+j);
						}
						oddChar = j;
					}
				}
			}
			if(evenChars == 0 && oddChars == 0){
				cout << "YES" << endl;
			}
			else if(oddChars > 1){
				cout << "NO LUCK" << endl;
			}
			else if(newLength%2 == 0 && oddChars > 0){
				cout << "NO LUCK" << endl;
			}
			else{
				cout << palindrome;
				
				if(oddChar != -1){
					char ch = 'a' + oddChar;
					cout << ch;
					
				}
				string rev(palindrome.rbegin(),palindrome.rend());
				cout << rev <<endl;
				
			}
			
		}
		
	}
    return 0;
}
