#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>

#include <cassert>
#include <limits>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#define each(it,o) for(auto it= (o).begin(); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define inrep int t;cin>>t; while(t--)
using namespace std;

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii > vpii;
typedef long long ll;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef vector<pll > vpll;
typedef vector<string> vs;
typedef long double ld;

template<typename T> ostream& operator<< ( ostream &o,vector<T> v ) {
    if ( v.size() >0 )
        o<<v[0];
    for ( unsigned   i=1; i<v.size(); i++ )
        o<<" "<<v[i];
    return o<<endl;
}
template<typename U,typename V> ostream& operator<< ( ostream &o,pair<U,V> p ) {
    return o<<"("<<p.first<<", "<<p.second<<") ";
}
template<typename T> istream& operator>> ( istream &in,vector<T> &v ) {

    for ( unsigned   i=0; i<v.size(); i++ )
        in>>v[i];
    return in;
}

ll findComplIntv ( char c, string s ) {
    ll tot=0;
    int l=0;
    rep ( i,s.size() ) {
        if ( c!=s[i] ) {
            l++;

        } else {

            tot+= ( ll ) l* ( l+1 ) /2;
            l=0;
        }

    }
    tot+= ( ll ) l* ( l+1 ) /2;
    return tot;

}
ll findC ( char c, int n, const string &s ) {
    if ( !n ) return findComplIntv ( c,s );
    int l=s.size();
    vi positions;
    ll tot=0;
    rep ( i,l ) if ( c==s[i] ) positions.push_back ( i );
    int sz=positions.size();
    reu ( i,n-1,sz ) {
        int a,b;
        if ( i==n-1 ) a=positions[0]+1;
        else a=positions[i-n+1]-positions[i-n];
        if ( i==sz-1 ) b=l-positions[i];
        else b=positions[i+1]-positions[i];
        tot+= ( ll ) a*b;

    }
    return tot;
}
int main() {
    ios_base::sync_with_stdio ( false );
    inrep {
        int m,n;
        cin>>m>>n;
        string s;
        cin>>s;
        ll r1=findC ( 'R',m,s );
        ll r2=findC ( 'K',n,s );

        cout<<r1<<" "<<r2<<endl;
    }
}
