    #include<bits/stdc++.h>
    using namespace std;
    map<int,int>dp;
    const int N=2000006;
    int is[N];
    int inf=1e9 +10;
    int f(int n)
    {
        if(n==1)return 1;
        int res=inf;
        if(n<N and is[n])return is[n];
        else if(n>N)
        {
            if(dp.count(n))
                return dp[n];
        }
        if(n%2==0)
            res=min(res,1+f(n/2));
        else
            res=min(res,1+f(n-1));
        if(n%3==0)
            res=min(res,1+f(n/3));
        else
            res=min(res,1+f(n-1));
        if(n<N)is[n]=res;
        else    dp[n]=res;
        return res;
    }
    int main()
    {
        int t;
        scanf("%d",&t);
        while(t--)
        {
            int n;
            scanf("%d",&n);
            int ans=f(n)-1;
            cout<<ans<<"\n";
        }
        return 0;
    }
