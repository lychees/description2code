
#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<string.h>
using namespace std;

#define lli long long int
lli m=1000000007;
#ifndef ONLINE_JUDGE
    #define getcx getchar
    #else
    #define getcx getchar_unlocked
    #endif
     
    inline long long getint (void) {
    long x = 0; char ch = getcx();
    while (ch<'0' || ch>'9')
    ch = getcx();
    while ('0'<=ch && ch<='9') {
    x = x*10+ch-'0';
    ch = getcx();
    }
    return x;
    }
    void multiply(lli F[2][2], lli M[2][2])
{
  lli x =  (F[0][0]*M[0][0])%m +( F[0][1]*M[1][0])%m;
  lli y =  (F[0][0]*M[0][1])%m +( F[0][1]*M[1][1])%m;
  lli z =  (F[1][0]*M[0][0])%m + (F[1][1]*M[1][0])%m;
  lli w =  (F[1][0]*M[0][1])%m + (F[1][1]*M[1][1])%m;
 
  F[0][0] = x%m;
  F[0][1] = y%m;
  F[1][0] = z%m;
  F[1][1] = w%m;
}
void power(lli F[2][2], lli n)
{
  if( n == 0 || n == 1)
      return;
  lli M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}
 

lli fib(lli n)
{
  lli F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0];
}
 


int main()
{
    lli t,i,s1,s2,n;
    
    t= getint();
 
    while(t--)
    {
             n=getint();
             /*
              s1=1;s2=1;
              lli s=1;
              for(i=3;i<=n;i++)
              {
                        s=s1+s2;
                        s1=s2;
                        s2=s%m;
              }
              
              cout<<s<<endl;
              */
              //cout<<Fibonacci(n)<<endl;
              
              cout<<fib(n)<<endl;
    }
    return 0;
}
              
