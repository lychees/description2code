//dark_9
#include <iostream>
#include <sstream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <math.h>
#include <stack>
#include <queue>
#include <ctype.h>
#include <map>
#include <bitset>
#include <limits>
#include <set>
typedef long long ll;
#define filla(x,y) memset(x,y,sizeof(x))
#define pb push_back
#define mp make_pair
#define INF 0x3f3f3f3f
#define F first
#define S second
#define gc getchar
#define MOD 
using namespace std;
/*long long choose(int n,int k)
{
    if(k==0)
        return 1;
    else
    {
        long long f=1;
        if(k>n-k)
            k=n-k;
        int p=1;
        while(p<=k)
        {
            f*=n--;
            f/=p++;
        }
        return f;
    }
}
ll power(int a,int b)
{
    ll ret;
    if(b==0)
        return 1;
    if(b==1)
        return a;
    ret=power(a,b/2);
    ret=(ret*ret);
    if(b&1)
        ret=(ret*a);
    return ret;
}*/
void scanint(int &x)
{
    register int c = gc(); 
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
/*bool cmp(int a,int b)
{
    return a>b;
}*/
vector<int> v[110];
vector<int> r[110];
int p[110];
int visit[110];
stack<int> s;
ll ctr;
void dfs(int k)
{
    int i;
    for(i=0;i<v[k].size();i++)
    {
        if(visit[v[k][i]]==0)
        {
            visit[v[k][i]]=1;
            dfs(v[k][i]);
        }
    }
    s.push(k);
}
void dfs1(int k)
{
    int i;
    for(i=0;i<r[k].size();i++)
    {
        if(visit[r[k][i]]==0)
        {
            ctr+=p[r[k][i]];
            visit[r[k][i]]=1;
            dfs1(r[k][i]);
        }
    }
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int i;
        for(i=0;i<110;i++)
            v[i].clear();
        for(i=0;i<110;i++)
            r[i].clear();
        while(!s.empty())
            s.pop();
        memset(p,0,sizeof(p));
        int n,m;
        scanf("%d%d",&n,&m);
        for(i=0;i<n;i++)
        {
            scanf("%d",&p[i]);
        }
        for(i=0;i<m;i++)
        {
            int x,y;
            scanf("%d%d",&x,&y);
            v[x].pb(y);
            r[y].pb(x);
        }
        memset(visit,0,sizeof(visit));
        for(i=0;i<n;i++)
        {
            if(visit[i]==0)
            {
                visit[i]=1;
                dfs(i);
            }
        }
        memset(visit,0,sizeof(visit));
        ll mctr=0;
        ctr=0;
        while(!s.empty())
        {
            ctr=0;
            if(visit[s.top()]==0)
            {
                ctr+=p[s.top()];
                visit[s.top()]=1;
                dfs1(s.top());
            }
            s.pop();
            if(ctr>mctr)
                mctr=ctr;
        }
        if(ctr>mctr)
            mctr=ctr;
        printf("%lld\n",mctr);
    }
    return 0;
}  