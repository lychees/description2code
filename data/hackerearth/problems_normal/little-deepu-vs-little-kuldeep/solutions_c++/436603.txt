#include <iostream>
using namespace std;
#define MOD 1000000007

long long modulo(int a,int b,int c) {
	long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%c;
}
long long divide(int a)
{
	return modulo(a,MOD-2,MOD);
}
// Returns value of Binomial Coefficient C(n, k)
long long int binomialCoeff(unsigned int n, unsigned int k)
{
    unsigned long long res = 1;
 
    // Since C(n, k) = C(n, n-k)
    if (k > n - k)
        k = n - k;
 
    // Calculate value of [n*(n-1)*---*(n-k+1)] / [k*(k-1)*---*1]
    for (int i = 0; i < k; ++i)
    {
        res = (res*(n - i))%MOD;
        res = (res*divide(i + 1))%MOD;
    }
 
    return res;
}
long long fac[2000001];
void fact()
{
	long long res = 1;
	fac[0] = 1;
	for (long long i = 1;i<=2000000;i++)
	{
		fac[i] = (i*fac[i-1])%MOD;
	}
}
int main() {
	int t,n;
	scanf("%d",&t);
	fact();
	while(t--) {
		scanf("%d",&n);
		long long x = fac[2*n];
		long long y = fac[n];
		long long z = fac[n+1];
 		long long c = (x*divide(y))%MOD;
 		long long res  = (c*divide(z))%MOD;
    // return 2nCn/(n+1)
       //long long res = (c*divide(n+1))%MOD;
       cout << res << endl;
	}
}