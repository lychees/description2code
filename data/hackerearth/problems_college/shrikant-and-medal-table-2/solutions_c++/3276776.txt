/* My First Template  
   :P
*/
#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long int
#define pb push_back
#define mk make_pair
ll power(ll a, ll b) {
ll x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>mod) x%=mod;
        }
        y = (y*y);
        if(y>mod) y%=mod;
        b /= 2;
    }
    return x;
}
bool cmp(pair<pair<int,int>,pair<int,string> >a, pair<pair<int,int>,pair<int,string> >b)
{
	if(a.first.first > b.first.first) {
		return true;
	}
	else if(a.first.first < b.first.first) {
		return false;
	}
	if(a.first.second > b.first.second) {
		return true;
	}
	else if(a.first.second < b.first.second) {
		return false;
	}
	if(a.second.first > b.second.first) {
		return true;
	}
	else if(a.second.first < b.second.first) {
		return false;
	}
	if(a.second.second < b.second.second) {
		return true;
	}
	else {
		return false;
	}
}
int main() 
{
    int n,i;
    cin>>n;
    vector<pair<pair<int,int>,pair<int,string> > >dat;
    map<string,int>mp1,mp2,mp3;
    map<string,int>mp;
    while(n--) {
    	string s1,s2,s3;
    	cin>>s1>>s2>>s3;
    	mp1[s1]++;
    	mp2[s2]++;
    	mp3[s3]++;
    	mp[s1]++;
    	mp[s2]++;
    	mp[s3]++;
    }
    for(auto it = mp.begin(); it != mp.end(); it++) {
    	dat.push_back(mk(mk(mp1[it->first],mp2[it->first]),mk(mp3[it->first],it->first)));
    }
    sort(dat.begin(),dat.end(),cmp);
//    reverse(dat.begin(),dat.end());
    for(i = 0; i < dat.size(); i++) {
    	cout<<dat[i].second.second<<" "<<dat[i].first.first<<" "<<dat[i].first.second<<" "<<dat[i].second.first<<endl;
    }
	return 0;
}
