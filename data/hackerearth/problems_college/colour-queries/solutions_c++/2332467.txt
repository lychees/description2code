#include <iostream>
#include <bits/stdc++.h>
#define ll long long int
#define IN_M 1061109567
#define get getchar

using namespace std;




int main()
{
	ll arr[105][105];
	
	ll n, m;
	
	cin >> n >> m;
	
	ll q;
	cin >> q;
	
	for (ll i = 1; i <= n; i++) {
		for (ll j = 1; j <= m; j++) {
			scanf("%lld",&arr[i][j]);
		}
	}
	
	while (q--) {
		
		ll x;
		ll y;
		ll d;
		cin >> x >> y >> d;
		
		ll check[105][105];
		memset(check, 0, sizeof(check));
		
		pair<long long int,long long int> temp;
		temp.first = x;
		temp.second = y;
		
		ll ct = 0;
		
		queue <pair<long long int,long long int> > qu;
		qu.push(temp);
		
		while (qu.size()!=0) {
			
			temp = qu.front();
			qu.pop();
			check[temp.first][temp.second] = 1;
			ct+=1;
			
			pair<long long int,long long int> ai;
			
			if (temp.first - 1 >= 1 && check[temp.first - 1][temp.second] == 0 && abs(arr[temp.first - 1][temp.second] - arr[temp.first][temp.second]) <= d) {
				ai.first = temp.first - 1;
				ai.second = temp.second;
				qu.push(ai);
				check[temp.first - 1][temp.second] = 1;
				
			}
			
			if (temp.first + 1 <= n && check[temp.first + 1][temp.second] == 0 && abs(arr[temp.first + 1][temp.second] - arr[temp.first][temp.second]) <= d) {
				ai.first = temp.first + 1;
				ai.second = temp.second;
				qu.push(ai);
				check[temp.first + 1][temp.second] = 1;
				
			}
			
			if (temp.second - 1 >= 1 && check[temp.first][temp.second - 1] == 0 && abs(arr[temp.first][temp.second - 1] - arr[temp.first][temp.second]) <= d) {
				ai.first = temp.first;
				ai.second = temp.second - 1;
				qu.push(ai);
				check[temp.first][temp.second - 1] = 1;
				
			}
			
			if (temp.second  + 1 <= m && check[temp.first][temp.second + 1] == 0 && abs(arr[temp.first][temp.second + 1] - arr[temp.first][temp.second]) <= d) {
				ai.first = temp.first;
				ai.second = temp.second + 1;
				qu.push(ai);
				check[temp.first][temp.second + 1] = 1;
				
			}
			
			
		}
		
		cout << ct << "\n";
		
		
		
	}
	return 0;
}