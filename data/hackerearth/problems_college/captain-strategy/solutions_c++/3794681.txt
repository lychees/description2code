#include<bits/stdc++.h>
using namespace std;
int ener[100010];
vector<int> gr[100010];
int tree[100010];
int parent[100010];


void dfs(int v,int p)
{
   parent[v]=p;
  for(int i=0;i<gr[v].size();i++)
  {
     int u= gr[v][i];

     if(u!=p)
     {
       dfs(u,v);
       tree[v]+=tree[u];
     }

  }

}

int main()
{
int n,m,i,s,x,u,v,j;
cin>>n>>m;

for(i=1;i<=n;i++)
  {cin>>ener[i];
  tree[i]=ener[i];
  }

for(i=0;i<n-1;i++)
{
   cin>>u>>v;
   gr[u].push_back(v);
   gr[v].push_back(u);
}

char ch;

dfs(1,-1);



while(m--)
{
  cin>>ch;
  if(ch=='U')
  {
    cin>>s>>x;

    int diff=x-ener[s];
    ener[s]=x;

    j=s;
    tree[j]+=diff;

    while(parent[j]!=-1)
    {
      tree[parent[j]]+=diff;
      j=parent[j];
    }

  }
  else
  {
    cin>>s;

    cout<<tree[s]<<endl;


  }

}



}
