#include <iostream>
#include <iostream>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <vector>
#include <set>
#include <algorithm>
#include <iomanip>
#include <map>
#include <queue>
#include <stack>
#include <string>

using namespace std;

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const double PI = 3.14159265359;
const double EPS = 1e-9;
const int INF = (2e9);
// const ll INF = ((ll)1 << 62);

const ll P = 1e9 + 7;

string smallest;
set<string> seen;

string xhaka(string S, int A){
  for(int i=1; i<S.length(); i+=2){
    int d_l = S[i] - '0';
    d_l = (d_l + A)%10;
    S[i] = '0' + d_l;
  }
  return S;
}

string sera(string S, int H){
  string S2 = S;
  int n = S.length();
  for (int i = 0; i < n; ++i)
  {
    S2[(i + H)%n] = S[i];
  }
  return S2;
}

void find_smallest(string S, int A, int H){
  // cout << S << " sin"<< endl;
  if(seen.find(S) != seen.end()) return;
  // cout << seen.size() << " af"<<endl;
  seen.insert(S);
  smallest = min(smallest, S);
  find_smallest(xhaka(S, A), A, H);
  find_smallest(sera(S, H), A, H);
}

int main(){
  std::ios::sync_with_stdio(false);

  int t;
  int A, H;
  string S;

  cin >> t;

  while(t--){
    cin >> S;
    cin >> A >> H;
    seen.clear();

    smallest = S;

    find_smallest(S, A, H);

    cout << smallest << "\n";
  }


  return 0;
}

