#include<bits/stdc++.h>
using namespace std;
long long isvalid(long long r,long long c,long long m,long long n)
{
	if((r>=1&&r<=m)&&(c>=1&&c<=n))
	return 1;
	else 
	return 0;
}
typedef struct point
{
	int a,b;
}point;
int main()
{
	
	long long countr[]={0,1,0,-1};
	long long countc[]={-1,0,1,0};
	long long f,g,m,n,i,j,currdist,elem,x,y,x1,y1,test,time;
	cin>>test;
	while(test--)
	{
		cin>>m>>n;
		long long mat[m+1][n+1];
		long long dp[m+1][n+1];
		for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)
			{
				cin>>elem;
				mat[i][j]=elem;
			}
		}
		cin>>x>>y>>time;
		queue<point> q;
		point p1,p2,p3,p4;
		p1.a=1;
		p1.b=1;
		q.push(p1);
		for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)
				dp[i][j]=INT_MAX;
		}
		long long time1=INT_MAX;
		dp[1][1]=mat[1][1];
		while(!q.empty())
		{	
			p4=q.front();
			f=p4.a;
			g=p4.b;
			currdist=dp[f][g];
			//cout<<" currdist is "<<currdist<<" f is "<<f<<" g is "<<g<<" dp is "<<dp[f][g]<<endl;
			q.pop();
			if((p4.a==x)&&(p4.b==y))
			time1=min(time1,currdist);
			else
			{
				for(i=0;i<4;i++)
				{
					x1=p4.a+countr[i];
					y1=p4.b+countc[i];
					if(isvalid(x1,y1,m,n)&&((dp[x1][y1])>(currdist+mat[x1][y1])))
					{
						//cout<<" chirag "<<x1<<y1<<endl;
						dp[x1][y1]=currdist+mat[x1][y1];
						p3.a=x1;
						p3.b=y1;
						q.push(p3);
					}
				}
			}
		}
		if(time1<=time)
		{
			cout<<"YES"<<endl;
			cout<<time-time1<<endl;
		}
		else
		cout<<"NO"<<endl;
		
	}
	return 0;
}