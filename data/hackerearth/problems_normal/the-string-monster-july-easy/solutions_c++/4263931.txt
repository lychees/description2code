// The truth is always either terrible or boring
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;

#define X first
#define Y second
#define rep(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define rep1(i,a,b) for(int i = a, _b = (b); i <= _b; i++)
#define rep2(i,b,a) for(int i = b, _a = (a); i >= _a; i--)
#define mem(a,val) memset(a, (val), sizeof a)
#define mp make_pair
#define mt make_tuple // remember tie & ignore
#define eb emplace_back
#define all(c) (c).begin(), (c).end()
#define uni(c) c.resize(distance(c.begin(), unique(all(c))))
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define cases int __t; cin >> __t; rep1(_t,1,__t)
#define case(ans) "Case #" << _t << ": " << ans << "\n"
#define cout(d) cout << fixed << setprecision(d)
#define err(x) cerr << #x << " = " << x << '\n'
const int mod = 1e9 + 7;
int n, k, fl;
vi a[30], f;
set<vi> m;

int main() {
//    ios_base::sync_with_stdio(false); cin.tie(NULL);
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    string s;
    cases {
        set<vi>().swap(m);
        cin >> n;
        k = n / 2;
        rep(i,n) {
            cin >> s;
            vi(26,0).swap(a[i]);
            for(char c: s) a[i][c-'a']++;
        }
        cin >> s;
        vi(26,0).swap(f);
        for(char c: s) f[c-'a']++;
        
        vi c;
        rep(i,1<<k) {
            vi(26,0).swap(c);
            rep(j,k) if(i>>j&1) rep(l,26) c[l] += a[j][l];
            m.insert(c);
        }
        
        fl = 0;
        rep(i,1<<n-k) {
            vi(26,0).swap(c);
            rep(j,n-k) if(i>>j&1) rep(l,26) c[l] += a[j+k][l];
            rep(l,26) c[l] = f[l] - c[l];
            if(m.count(c)) fl = 1;
        }
        cout << (fl ? "YES\n":"NO\n");
    }
    return 0;
}