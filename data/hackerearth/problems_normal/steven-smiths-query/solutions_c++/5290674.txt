#include<bits/stdc++.h>
#include<unordered_map>
using namespace std;
int bit[1 << 20];
const int N = 1000 * 1000;
vector<pair<pair<int, int>, int>  >vec;
int ans[1 << 20];
typedef pair<int, int> mypair;
#define MP  make_pair
#define f first
#define s second
void upd(int at, int by){
	for (; at <= N; at += at&-at)
		bit[at] += by;
	return;
}
int qry(int at){
	int sum = 0;
	for (; at >= 1; at -= at&-at)
		sum += bit[at];
	return sum;
}
int main(){
	int n; scanf("%d", &n);
	for (int i = 1; i <= n; ++i){
		int a, b; scanf("%d %d", &a, &b);
		vec.push_back(make_pair(make_pair(a, b), i));
	}
	sort(vec.begin(), vec.end());
	int curr_ans = 0;
	int cnt = 0;
	ans[vec[0].second] = 0;
	upd(vec[0].first.second, 1);
	for (int i = 1; i<vec.size(); ++i){
		curr_ans = 0;
		curr_ans += qry(vec[i].first.second);
		if (vec[i].f.f == vec[i - 1].f.f
			&& vec[i].f.s == vec[i - 1].f.s){
			cnt++;
		}
		else cnt = 0;
		curr_ans -= cnt;
		ans[vec[i].second] = curr_ans;
		upd(vec[i].first.second, 1);
	}
	for (int i = 1; i <= n; ++i)
		printf("%d\n", ans[i]);
	return 0;
}
