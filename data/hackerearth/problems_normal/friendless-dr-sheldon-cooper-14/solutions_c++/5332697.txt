#include <bits/stdc++.h>
using namespace std;
vector<vector<int>> lst;
vector<bool> visited;
int bfs(int x) {
	queue<int> Q;
	int count = 0;
	Q.push(x);
	while(!Q.empty()) {
		x = Q.front();
		Q.pop();
		visited[x] = true;
		for(int i=0; i<lst[x].size(); ++i) {
			if(!visited[lst[x][i]]){
				visited[lst[x][i]] = true;
				count++;
				Q.push(lst[x][i]);
			}
		}
	}
	return count;
}
int main()
{
    int T, N, D, m, n;
    cin >> T;
    while(T--) {
    	cin >> N >> D;
    	lst.resize(N+1);
    	visited.resize(N+1);
    	for(int i=0; i<D; ++i) {
    		cin >> m >> n;
    		lst[m].push_back(n);
    		lst[n].push_back(m);
    	}
    	cout << bfs(m) << endl;
    	lst.clear();
    	visited.clear();
    }
    return 0;
}
