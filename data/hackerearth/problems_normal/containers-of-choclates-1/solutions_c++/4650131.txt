#include <bits/stdc++.h>
using namespace std;
int a[2];
void dfs(int ,vector<int> [],int [],int );
int main() {
    ios::sync_with_stdio(false);
    cin.tie(false);
    int t,n,i,j,y,u,ans;
	cin>>t;
    for(j=1;j<=t;j++)
	{
	    vector <int> v[100000];
	    int vis[100000]={0};
	    ans=0;
	    set<int> s;
	    set<int>:: iterator it;
	    cin>>n;
	    for(i=0;i<n;i++)
	    {
	        cin>>y>>u;
    	    v[y].push_back(u);
    	    v[u].push_back(y);
    	    s.insert(y);
    	    s.insert(u);
	    }
	    for(it=s.begin();it!=s.end();it++)
	    {
	        if(vis[*it]==1)
	        continue;
	        a[0]=1;
	        a[1]=0;
	        vis[*it]=1;
	        dfs(*it,v,vis,1);
	        ans+=max(a[0],a[1]);
	    }
	    cout<<"Case "<<j<<": "<<ans<<"\n";
	}
	return 0;
}


void dfs(int s,vector<int> v[100000],int vis[100000],int c)
{
    int i;
    for(i=0;i<v[s].size();i++)
    {
        if(vis[v[s][i]]==1)
        continue;
        vis[v[s][i]]=1;
        a[c%2]++;
        dfs(v[s][i],v,vis,c+1);
    }
}