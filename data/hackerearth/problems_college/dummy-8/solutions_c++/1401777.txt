//Naveen Sangtani
#include<bits/stdc++.h>
using namespace std;

typedef long long int          LL;
typedef unsigned long long     ULL;
typedef long double            LD;


#define pb                   push_back
#define ppb                  pop_back
#define mp                   make_pair
#define ff                   first
#define ss                   second


#define PI                   acos(-1.0)
//#define e                    exp(1.0)
#define EPS                  1e-9


#define count_1(n)           __builtin_popcountll(n)


#define fr(i,a,b)            for(int i=a;i<=b;++i)
#define rev(i,b,a)           for(int i=b;i>=a;--i)
#define foreach(v,c)         for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define CLR(A)               memset(A,false,sizeof(A))
#define FILL(A,n,val)        for(int i=0;i<n;++i) A[i]=val
#define all(x)               x.begin(),x.end()
#define TT()                 int tc;cin>>tc;while(tc--)


#define dbg(vari)            cout<<#vari<<" = "<<(vari)<<endl;
#define dbgA(A,n)            cout<<endl;fr(i,0,n-1) cout<<i<<" -- > "<<A[i]<<endl;
#define dbgV(V)              cout<<endl;fr(i,0,V.size()-1){cout<<i<<" --> "<<V[i].ff<<" "<<V[i].ss<<endl;}
#define dbgG(G,n)            cout<<endl;fr(i,1,n){cout<<i<<" --> ";fr(j,0,(G[i].size())-1) cout<<"("<<G[i][j].ff<<" , "<<G[i][j].ss<<")"<<"  ";cout<<endl;}
#define ns                  cout<<endl<<" ----- entered -----"<<endl;


#define maX(a,b)                ((a)>(b)?(a):(b))
#define miN(a,b)                ((a)<(b)?(a):(b))
#define abS(x)                  ((x)<0?-(x):(x))



typedef pair<int,int> PII;
typedef pair< pair<int,int>,int> TRI;



LL gcd(LL x, LL y) {return y == 0 ? x : gcd(y, x % y);}
bool isPalin(string x) {LL len = x.length();fr(i,0,(len/2)-1) {if (x[i] != x[len - 1 - i])return false;}return true;}
string tolowerStr(string x){string ret = "";fr(i,0,(LL)x.length()-1) {ret.pb(tolower(x[i]));}return ret;}
string toupperStr(string x) {string ret = "";fr(i,0,(LL)x.length()-1) {ret.pb(toupper(x[i]));}return ret;}
LL modulo(LL a,LL b,LL c){LL res = 1; for(int i=0;i<b;i++){res *= a;res %= c; }return res%c;}
bool double_equals(double a, double b, double epsilon = 0.1){return std::abs(a - b) < epsilon;}


#define INF                 INT_MAX
#define LINF                LONG_LONG_MAX
#define MAX                 100007
#define MOD                 1000000007

bool prime[1000005];void seive(){prime[0]=1;prime[1]=1;for(int i=2;i*i<=MAX;++i)if(!prime[i])for(int j=2*i;j<MAX;j+=i)if(!prime[j])prime[j]=1;}



//int ib[65];int I2B(LL x){CLR(ib);int k = 63;while(x>0){ib[k--] = x%8;x/=8;}}

   
int t,n,m,tt=1,dist[105][105][4],die[105][105],dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};
string s[105];
bool vis[105][105][4];
map<char,int>mm;

int main()
{
	//freopen("c.txt","r",stdin);
    //freopen("out.txt","w",stdout);
	//ios_base::sync_with_stdio(0);
	cin>>t;
	mm['^']=0,mm['<']=1,mm['v']=2,mm['>']=3;
	
	while(t--){
		memset(vis,0,sizeof vis);
		memset(die,0, sizeof die);
		
		cin>>n>>m;
		for(int i=0;i<n;i++){
			cin>>s[i];
		}
		int x,y,mask;
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				if(s[i][j]=='S'){
					x=i,y=j;
				}
			}
		}
		
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				if(s[i][j]=='^'||s[i][j]=='<' ||s[i][j]=='v' ||s[i][j]=='>'){
					//up
					for(int k=i-1;k>=0;k--){
						if(s[k][j]=='G' ||s[k][j]=='S' ||s[k][j]=='.'){
							die[k][j]|=(1<<mm[s[i][j]]);
						}
						else break;
					}
					//rigth
					for(int k=j+1;k<m;k++){
						if(s[i][k]=='G' ||s[i][k]=='S' ||s[i][k]=='.'){
							die[i][k]|=(1<<((mm[s[i][j]]+1)%4));
						}
						else
						break;
					}
					//down
					for(int k=i+1;k<n;k++){
						if(s[k][j]=='G' ||s[k][j]=='S' ||s[k][j]=='.'){
							die[k][j]|=(1<<((mm[s[i][j]]+2)%4));
						}
						else break;
					}
					//left
					for(int k=j-1;k>=0;k--){
						if(s[i][k]=='G' ||s[i][k]=='S' ||s[i][k]=='.'){
							die[i][k]|=(1<<((mm[s[i][j]]+3)%4));
						}
						else
						break;
					}
				}
			}
		}
		
		bool flag=0;
		int ans=0;
		queue<TRI>qq;
		qq.push(mp(mp(x,y),0));
		vis[x][y][0]=1;
		dist[x][y][0]=0;
		while(!qq.empty()){
			TRI u=qq.front();
			x=u.ff.ff,y=u.ff.ss,mask=u.ss;
			int d=dist[x][y][mask];
			//cout<<x<<" "<<y<<" "<<mask<<" "<<dist[x][y][mask]<<endl;
			qq.pop();
			if(s[x][y]=='G'){
				flag=1;
				ans=dist[x][y][mask];
				break;
			}
			
			for(int i=0;i<4;i++){
				int p=x+dx[i],q=y+dy[i];
				if(p>=0 && p<n && q>=0 && q<m && (s[p][q]=='S' ||s[p][q]=='G' || s[p][q]=='.')){
					if(vis[p][q][(d+1)%4]==0 && (die[p][q] & 1<<((d+1)%4))==0){
						qq.push(mp(mp(p,q),(d+1)%4));
						vis[p][q][(d+1)%4]=1;
						dist[p][q][(d+1)%4]=dist[x][y][mask]+1;					
					}
				}				
			}
		}
		cout<<"Case #"<<tt<<": ";
		if(flag==0){
			cout<<"impossible"<<endl;
		}
		else{
			cout<<ans<<endl;
		}
		tt++;
	}
}		

