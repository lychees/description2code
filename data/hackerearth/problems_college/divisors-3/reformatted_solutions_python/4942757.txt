from sys import stdin
di = {}
n, t = map(int, stdin.readline().split())
div = []
i = 1


def gcd(a, b):
    while a % b:
        x = a % b
        a = b
        b = x
    return b


def solve(n):
    if n == 1:
        return 1
    if di.get(n, 0):
        return di[n]


while i*i <= n:
    if n % i == 0:
        div.append(i)
        if i*i != n:
            div.append(n/i)
    i += 1
div.sort()
# print div
l = len(div)
for i in xrange(l):
    cur = 0
    for j in xrange(i+1):
        if div[i] % div[j] == 0:
            cur += 1
    di[div[i]] = cur
# print di
'''
If Type=1, the participant must find the number of natural numbers which is divisor of both N and K.
If Type=2, the participant must find the number of natural numbers which is divisor of N and is divisible by K.
If Type=3, the participant must find the number of natural numbers which is divisor of N and is not divisible by K.
'''
for _ in xrange(t):
    ty, k = map(int, stdin.readline().split())
    if ty == 1:
        g = gcd(k, n)
        print di[g]
    elif ty == 2:
        if n % k:
            print 0
        else:
            print di[n/k]
    else:
        co = 0
        for i in div:
            if i % k:
                co += 1
        print co
