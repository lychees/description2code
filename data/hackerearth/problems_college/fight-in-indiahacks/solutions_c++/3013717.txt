#include<bits/stdc++.h>
using namespace std;
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
#define mp make_pair // useful for working with pairs
#define fi first
#define se second
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<vi > vvi;
typedef pair<int,int> ii;
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define present(c,x) ((c).find(x) != (c).end())
#define ll long long
#define fastscan ios_base::sync_with_stdio(0);cin.tie(NULL); 
int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b);}

int jerry(int);
int tom(int);
int b1[10000000],b2[10000000];

int N,m1,m2;

int jerry(int n){

	if(n<min(m1,m2)) return 0;
	if(b1[n]!=-1) return b1[n];
	b1[n] = n>=max(m1,m2) ? tom(n-m1) || tom(n-m2) : tom(n-m1) ;
	return b1[n];
}

int tom(int n){
	
	if(n<min(m1,m2)) return 1;
	if(b2[n]!=-1) return b2[n];
	b2[n] = n>=max(m1,m2) ? jerry(n-m1) && jerry(n-m2) : jerry(n-m1) ;
	return b2[n];
}

int main(){
	fastscan	
	int t;
	cin>>t;
	while(t--){
		cin>>N>>m1>>m2;
		for(int i=0;i<=N;i++){
			b2[i]=-1;
			b1[i]=-1;
		}
		// else if(m1==0 && m2==0){
		// 	cout<<"0\n";
		// 	continue;
		// }
		if(m1==0){
			cout<<"1"<<"\n";
			continue;
		}
		cout<<jerry(N)<<"\n";
		// for(int i=0;i<=N;i++){
		// 	cout<<b1[i]<<" "<<b2[i]<<"\n";
		// }
	}
	return 0;
}