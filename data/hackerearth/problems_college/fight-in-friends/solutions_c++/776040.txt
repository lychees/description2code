#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <cstring>
#include <cmath>
#include <climits>
#include <stack>
#include <map>
#include <sstream>
#include <numeric>
#include <iomanip>

#define pb push_back
#define ill long long int
#define ull unsigned long long int
#define pii pair<int,int>
#define s(n) scanf("%d", &n)
#define gc getchar_unlocked
#define ss(n) scanf("%s", n)
#define sl(n) scanf("%lld", &n)
#define pb push_back
#define F(i,a,b) for(int i=(a); i<(b); i++)
#define mem(a, v) memset(a, v, sizeof(a))
#define M(a,v) memset(a, v, sizeof(a))
#define all(v) v.begin(),v.end()
#define fr first
#define sc second
#define mp make_pair
#define deb cout <<"coink" <<endl
#define mod 1000000007
#define MAX 500100
#define inf (int)1e9
#define sq(x) ((x)*(x))
#define sqrtsum(x, y) sqrt((x)*(x)+(y)*(y))
#define abs(x) (x>0?x:-(x))
#define prin(v) forall(i, 0, v.size()) cout << v[i] <<" ";cout <<endl;

int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, -1 ,1};
using namespace std;
void swap(int &a, int &b) {
        int t = a;
            a = b;
                b = t;
}

void input() {
    freopen("in", "r", stdin);
}
int g[1300][1300];
int n, m , a, b, aa, bb;
int vis[1300];
int bfs(int src) {
    mem(vis, 0);
    queue<pii> q;
    q.push(mp(src, 0));
    while(!q.empty()) {
        int u = q.front().fr, tim = q.front().sc;  q.pop();
        if(u == b) return tim;
        if(vis[u]) continue;
        vis[u] = 1;
        F(i, 0, n) {
            if(vis[i]) continue;
            if(g[u][i]){
                q.push(mp(i, tim+1));
            }
        }


    }
    return -1;

}
int main() {
    // input();
    
    s(n);   s(m);   s(a);   s(b);
    a--;    b--;
    mem(g, 1);
    F(i, 0, m) {
        s(aa);  s(bb);
        aa--;   bb--;
        g[aa][bb] = 0;
        g[bb][aa] = 0;
    }
    printf("%d\n", bfs(a));
}
