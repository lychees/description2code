#include <iostream>
#include<queue>
using namespace std;

int ans;

class graph
	{
		public:
		void BFS()
		{
			int vis[1000009]={0};
			int a,b,m,d,ad,s,temp,ans;
			cin >> a >> b;
			cin >> m >> d >> ad >> s;
			
			queue <int> q;
			
			q.push(a);
			vis[a] = 1;
			ans=0;
			
			while(!q.empty())
			{
				int u = q.front();
				q.pop();
				
				if(u==b)
				{
					ans = vis[u];
					break;
				}
					temp = u*m;
					if(temp>=2 && temp<=1000000 && !vis[temp])
					{
						vis[temp] = vis[u] + 1;
						q.push(temp);
					}
					
					temp = u/d;
					if(temp>=2 && temp<=1000000 && !vis[temp])
					{
						vis[temp] = vis[u] + 1;
						q.push(temp);
					}
					
					temp = u+ad;
					if(temp>=2 && temp<=1000000 && !vis[temp])
					{
						vis[temp] = vis[u] + 1;
						q.push(temp);
					}
					
					temp = u-s;
					if(temp>=2 && temp<=1000000 && !vis[temp])
					{
						vis[temp] = vis[u] + 1;
						q.push(temp);
					}
			}
			
			cout << ans-1 << endl;
		}
	};

int main()
{
	int t;
	cin >> t;
    graph ob;
    while(t--)
    {
    	ob.BFS();
    }
    return 0;
}
