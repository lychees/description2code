#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
#define mod 1000000007
int paths[2000][2000];
vector< pair<int,int> > arr;
void setPath(int idx,int x,int y)
{
	int i,j;
	for(i=x;i<=arr[idx].first;i++)
	{
		for(j=y;j<=arr[idx].second;j++)
		{
			if(i==x&&j==y)
				continue;
			if(i>0)
			{
				paths[i][j]=(paths[i][j]+paths[i-1][j])%mod;
			}
			if(j>0)
			{
				paths[i][j]=(paths[i][j]+paths[i][j-1])%mod;
			}
		}
	}
}
int main()
{
	int t,n,q,i,j,x,y;
	scanf("%d",&t);
	while(t--){
		scanf("%d%d",&n,&q);
		for(i=0;i<=n;i++){
			for(j=0;j<=n;j++){
				paths[i][j]=0;
			}
		}
		paths[0][0]=1;
		arr.clear();
		pair<int,int> p;
		for(i=0;i<q;i++){
			scanf("%d%d",&x,&y);
			p.first=x;
			p.second=y;
			arr.push_back(p);
		}
		sort(arr.begin(),arr.end());
		x=0;y=0;
		if((q>0&&(arr[q-1].first!=n||arr[q-1].second!=n))||q==0)
		{
			p.first=n-1;
			p.second=n-1;
			arr.push_back(p);
			q++;
		}
		for(i=0;i<q;i++)
		{
			setPath(i,x,y);
			x=arr[i].first;
			y=arr[i].second;
		}
		printf("%d\n",paths[n-1][n-1]);
	}
    return 0;
}
