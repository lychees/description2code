#include<iostream>
#include<cstring>
//#include<conio.h>
using namespace std;

long int b,dp[80][80][80];

long int recurse(long int n,long int g,long int pos)
{long int x=0,y=0;
    
    if(pos==b)
    { if(n==b/2)
        { return 1;
        }
        return 0;
        }
      if(dp[n][g][pos]!=-1)
      { return dp[n][g][pos];
      }
      
      x=recurse(n+1,g,pos+1);
      if(n>g)
      { y=recurse(n,g+1,pos+1);
      }
      dp[n][g][pos]=x+y;
      return x+y;  
   
}

int main()
{ long int t,h,z;
    cin>>t;
    while(t--)
    { cin>>h;
     b=h*2;
     memset(dp,-1,sizeof(dp));
     z=recurse(0,0,0);
     cout<<z<<endl;
     }
    // getch();
     return 0;
     }
        
