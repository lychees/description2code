#include <bits/stdc++.h>
// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#include <time.h>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define dbl long double
#define pi 3.14159265358979323846
using namespace std;
// mylittledoge

#ifdef DONLINE_JUDGE
	// palindromic tree is better than splay tree!
	#define lld I64d
#endif

int main() {
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout << fixed << setprecision(10);
	int N,M,K;
	scanf(" %d %d %d",&N,&M,&K);
	vector< pair<int,int> > E(M);
	vector<int> Et(M,N+tisic);
	vector< vector< pair<int,int> > > G(N);
	for(int i =0; i < M; i++) {
		scanf(" %d %d",&E[i].ff,&E[i].ss);
		E[i].ff--;
		E[i].ss--;}
	for(int i =0; i < K; i++) {
		int t,x;
		scanf(" %d %d",&t,&x);
		Et[x-1] =min(Et[x-1],t);}
	for(int i =0; i < M; i++) {
		G[E[i].ff].push_back(make_pair(E[i].ss,Et[i]));
		G[E[i].ss].push_back(make_pair(E[i].ff,Et[i]));}

	queue<int> q;
	q.push(0);
	vector<int> D(N,N+tisic);
	D[0] =0;
	while(!q.empty()) {
		ALL_THE(G[q.front()],it) if(D[it->ff] > D[q.front()]+1 && it->ss > D[q.front()]) {
			D[it->ff] =D[q.front()]+1;
			q.push(it->ff);}
		q.pop();}

	if(D[N-1] == N+tisic) D[N-1] =-1;
	printf("%d\n",D[N-1]);
	return 0;}

// look at my code
// my code is amazing
