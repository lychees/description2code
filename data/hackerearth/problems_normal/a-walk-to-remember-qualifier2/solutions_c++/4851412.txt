#include<bits/stdc++.h>
using namespace std;
stack<int> st;int n,e,c=0,d=0,k=0;
bool marked[1000000],marked1[1000000];int chk[1000000];
vector<int> g[1000000],r[1000000];
void dfs(int v,int x)
{
    if(x==1)
    {
        marked[v]=true;
        for(int i=0;i<g[v].size();++i)
        {
            if(!marked[g[v][i]])
            {
                dfs((g[v][i]),1);
            }
        }
        st.push(v);
        return;
    }
    if(x==2)
    {
        marked1[v]=true;
        k++;
        //cout<<v<<" ";
        for(int i=0;i<r[v].size();++i)
        {
            if(!marked1[r[v][i]])
            {
                dfs(r[v][i],2);
            }
        }

        if(k>1)
            chk[v]=1;
        return;
    }
}
void kosaraju()
{
    int i;
    for(i=1;i<=n;++i)
    {
        if(!marked[i])
        {
            dfs(i,1);
            //cout<<endl;
        }
    }
    while(!st.empty())
    {
        int y=st.top();
        if(!marked1[y])
        {
            dfs(y,2);
            if(k>1)
            {
            chk[y]=1;
            }
            k=0;
            //cout<<endl;
        }
        st.pop();
    }

}
int main()
{
    int i,a,b;
    cin>>n>>e;
    for(i=0;i<=n;++i)
    {
        marked[i]=false;
        marked1[i]=false;
        chk[i]=0;
    }
    for(i=0;i<e;++i)
    {
        cin>>a>>b;
        g[a].push_back(b);
        r[b].push_back(a);
    }
    kosaraju();
    //cout<<c<<d;
    for(i=1;i<=n;++i)
    {
        cout<<chk[i]<<" ";
    }
}
