#include <bits/stdc++.h>

#define gc getchar_unlocked

using namespace std;

typedef long long        ll;
typedef pair<int, int>   pii;
typedef pair<int, pii>   piii;
typedef vector<int>      vi;
typedef set<int>         si;
typedef vector<pii>      vii;
typedef vector<piii>     viii;

#define rep(i,n)     for (int (i)=0; (i)<(n); (i)++)
#define repn(i,n)    for (int (i)=1; (i)<=(n); (i)++)
#define repd(i,n)    for (int (i)=(n)-1; (i)>=0; (i)--)
#define foreach(i,X) for(__typeof((X).begin()) i = (X).begin(); i != (X).end(); i++)
#define all(a)       a.begin(),a.end()

const int inf = numeric_limits<int>::max();
const ll linf = numeric_limits<ll>::max();

#define fi           first
#define se           second
#define pb           push_back
#define mp           make_pair

void fs(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int n;
ll dp[22][4];
int a[21][4];

int cal(int x, int l)
{
    if(dp[x][l]!=-1) return dp[x][l];
    if(x==n)
    {
        if(l==1) return dp[x][1]=min(a[x][2],a[x][3]);
        else if(l==2) return dp[x][2]=min(a[x][1],a[x][3]);
        else return dp[x][3]=min(a[x][1],a[x][2]);
    }
    int ans=0;
    if(l==1) ans=min(a[x][2]+cal(x+1,2),a[x][3]+cal(x+1,3));
    else if(l==2) ans=min(a[x][1]+cal(x+1,1),a[x][3]+cal(x+1,3));
    else ans=min(a[x][2]+cal(x+1,2),a[x][1]+cal(x+1,1));
    dp[x][l]=ans; return ans;
}

int main()
{
    int t; cin>>t;
    while(t--)
    {
        cin>>n;
        repn(i,n+1) repn(j,3) dp[i][j]=-1; 
        repn(i,n)
        cin>>a[i][1]>>a[i][2]>>a[i][3];
        int ans;
        if(n==1) ans=min(a[1][1],min(a[1][2],a[1][3]));
        else
        ans=min(a[1][1]+cal(2,1), min(a[1][2]+cal(2,2), a[1][3]+cal(2,3)));
        cout<<ans<<endl;
    }
    return 0;
}