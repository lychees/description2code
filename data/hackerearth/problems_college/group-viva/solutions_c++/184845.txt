#include <iostream>
#include <stdio.h>
#include <string.h>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <algorithm>

#define MOD 1000000007
#define SWAP(a,b) {a=(a)^(b);b = (a)^(b);a= (a)^(b);}

using namespace std;
inline long long minOf(long long x, long long y){return (x<y?x:y);}
inline long long maxOf(long long x, long long y){return (x>y?x:y);}
inline long long mabs(long long x){return (x<0?-x:x);}

const int maxn=(100000)+10;
bool p[maxn]={false};

vector<int> prime;

void sieve()
{
    p[0]=true;
    p[1]=true;
    for(long long i=2;i<=maxn;i++)
    {
        if(!p[i])
        {
            prime.push_back(int(i));
            for(long long j=i*i;j<=maxn;j+=i)
                p[j]=true;
        }
    }
}

long long gcd(long long a, long long b){
	long long t;
	while(b != 0){
		t = b;
		b = a%t;
		a = t;
	}
	return a;
}

int main()
{
	ios_base::sync_with_stdio(false);
	sieve();
	int t;
	int n,r;
	cin >> t;
	long long num,den,x,cc,g;
	int ii;
	while(t--){
		cin >> n >> r;
		num = 1;
		den = n;
		x = r-1;
		ii = 0;
		while(x>1 && prime[ii]*prime[ii] <= (r-1)){
			cc = 1;
//			cout << x << endl;
			while(x%prime[ii] == 0){
				cc++;
				x /= prime[ii];
			}
//			cout << "After :" << prime[ii] << " :" << x << " count :" << cc << endl;
			ii++;
			num = num*cc;
		}
		if(x > 1)
			num *= 2;
		num = n-num;
		g = gcd(num, den);
		num /= g;
		den /= g;
		cout << num << "/" << den << endl;
	}
	return 0;
}