
N = int(raw_input())

arr = []
size = []


def initialize(arr, n):
    for i in range(n):
        arr.append(i)
        size.append(1)


initialize(arr, N)

e = map(int, raw_input().strip().split(" "))


def root(arr, i):
    while arr[i] != i:
        arr[i] = arr[arr[i]]
        i = arr[i]
    return i


def union(arr, size, a, b):
    root_a = root(arr, a)
    root_b = root(arr, b)
    if size[root_a] < size[root_b]:
        arr[root_a] = arr[root_b]
        size[root_b] += size[root_a]
    else:
        arr[root_b] = arr[root_a]
        size[root_a] += size[root_b]


def root(arr, i):
    while arr[i] != i:
        arr[i] = arr[arr[i]]
        i = arr[i]
    return i


K = int(raw_input())

for i in range(K):
    a, b = map(int, raw_input().strip().split(" "))
    union(arr, size, a-1, b-1)

mp = {}
for i in range(N):
    mp[root(arr, i)] = mp.get(root(arr, i), []) + [e[i]]

ans = 1
for v in mp.values():
    m = min(v)
    cnt = 0
    for i in v:
        if i == m:
            cnt += 1
    ans = ans * cnt

print ans % 1000000007
