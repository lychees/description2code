#include <bits/stdc++.h>

using namespace std;
int lvl[10001];
vector<int> g[10001];
bool vis[10001];
int main()
{
	ios_base::sync_with_stdio(false);cin.tie();cout.tie();
	int n,m;
	cin >> n >> m;
	memset(lvl,-1,sizeof(lvl));
	for (int i = 0; i < m; i++) {
		int x,y;
		cin >> x >> y;

		g[x].push_back(y);
		g[y].push_back(x);
	}

	queue<int> q;
	q.push(0);
	lvl[0] = 0;
	memset(vis,false,sizeof(vis));
	while (!q.empty()) {
		int t = q.front();
		q.pop();
		vis[t] = true;
		for (int i = 0; i < g[t].size(); i++) {
			int tt = g[t][i];
			if (!vis[tt]) {
				lvl[tt] = lvl[t] + 1;
				q.push(tt);
			}
			vis[tt] = true;
		}
	}

	for (int i = 1; i < n; i++) {
		cout << lvl[i] << endl;
	}

	return 0;
}

