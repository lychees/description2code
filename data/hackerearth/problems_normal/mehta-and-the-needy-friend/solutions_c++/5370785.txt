#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <math.h>

#define ll long long int
#define maxN 100000
#define maxVal 100000000
#define minVal -100000000
#define mod 1000000007LL

#define gcd(a,b) __gcd(a,b)

using namespace std;

ll d[20];
ll dp[20][1024][2];

bool checkSquare(ll visit)
{
    ll i,p=1;
    for(i=1; i<=9; i++)
    {
        if(visit&(1<<i))
            p*=i;
    }
    if(((ll)sqrt(p)*(ll)sqrt(p))==p)
        return true;
    return false;
}

ll compute(ll i,ll visit,ll f,ll z)
{
    if(i==-1)
    {
        if(f&&checkSquare(visit))
            return 1;
        return 0;
    }
    if(!z&&dp[i][visit][f]!=-1)
        return dp[i][visit][f];
    ll l,r,j,ans=0,k,g;
    r=9;
    if(z)
        r=d[i];
    l=0;
    if(f)
        l=1;
    for(j=l; j<=r; j++)
    {
        k=visit;
        if(k&(1<<j))
            k&=(~(1<<j));
        else
            k|=(1<<j);
        if(j==0||j==1||j==4||j==9)
            k=visit;
        g=f;
        if(j!=0)
            g=1;
        ans=ans+compute(i-1,k,g,z&(j==r));
    }
    if(!z)
        dp[i][visit][f]=ans;
    return ans;
}

ll solve(ll p)
{
    if(p==0)
        return 0;
    ll l;
    l=0;
    while(p>0)
    {
        d[l++]=p%10;
        p/=10;
    }
    return compute(l-1,0,0,1);
}

ll searchb(ll a,ll b,ll k)
{
    ll s,e,m,v;
    s=a;
    e=b;
    while((e-s)>1)
    {
        m=s+(e-s)/2;
        v=solve(m)-solve(a-1);
        if(v>=k)
            e=m;
        else
            s=m+1;
    }
    if((solve(s)-solve(a-1))>=k)
        return s;
    if((solve(e)-solve(a-1))>=k)
        return e;
    return -1;
}

int main()
{
    ll t,a,b,k;
    memset(dp,-1,sizeof(dp));
    cin>>t;
    while(t--)
    {
        cin>>a>>b>>k;
        cout<<searchb(a,b,k)<<"\n";
    }
    return 0;
}
