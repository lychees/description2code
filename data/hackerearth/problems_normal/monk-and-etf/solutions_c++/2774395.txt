#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define F(i,a,b) for(ll i=a;i<=b;i++)
#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)
#define ALL(a) (a.begin()),(a.end())
#define ZERO(a) memset(a,0,sizeof(a))
#define mp make_pair
#define pb push_back 
#define X first
#define Y second
#define pi 3.14159265 
#define sd(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n) 
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;  
void fast_io() { cin.tie(0); ios::sync_with_stdio(false); } 

using namespace std;

const ll SIZE=(ll)(1e7);

ll phi[SIZE+10];

ll euler_phi(ll a,vector<ll> &v){
    
    ll ans=a;
    
    for(int i=0;i<v.size();i++)
    {
        while(a%v[i]==0)
            a/=v[i];
        
        ans-=ans/v[i];
    }
    
    if(a>1){
        
        ans-=ans/a;
        
    }
    
    return ans;
}

vector<ll> v[(ll)1e5+10];

//SIEVE OF ERATOSTHENES
void sieve(ll n,bool *prime){prime[0]=1; prime[1]=1;
    for(ll i=2;i<=n;i++)  if(prime[i]==0) for(ll j=2;j*i<=n;j++) prime[i*j]=1; }

bool prime[(ll)1e6+10]={0};    
    
int main(){
    
    ll t;
    
    sl(t);
    
    sieve((ll)1e6,prime);
    
    while(t--){
        
        ll l,r,k;
        
        sl(l); sl(r); sl(k);
                
        for(int i=0;i<=(r-l);i++)
            v[i].clear();
        
        F(i,2,(ll)1e6)    
        {
            if(prime[i]) continue;
            
            ll num=(l/i)*i;
            
            if(l%i!=0)
                num+=i;
            
            for(int j=num;j<=r;j+=i)
                v[j-l].pb(i);
        
        }
       
        double cnt=0;
        
        F(j,l,r)
        {
            ll ph=euler_phi(j,v[j-l]);
            
            assert(ph!=0);
            
            if(ph%k==0)
                cnt++;
            
        }
        
        printf("%0.6lf\n",cnt/(r-l+1.0));
        
    }
    
	return 0; 
}