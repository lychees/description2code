#maximum gold path - Ani's solution
def main():
    n=int(raw_input())
    a=[]
    for x in range(0,n):
        a.append(["0"] * n)
    i=0
    while i<n:
        st=raw_input()
        l=st.split(' ')
        j=0
        while j<n:
            l[j]=int(l[j])
            j+=1
        j=0
        while j<n:
            a[i][j]=l[j]
            j+=1
        i+=1
    fc=[]
    for x in range(0,n):
        fc.append(["0"] * n)
    for i in range(n):
        for j in range(n):
            fc[i][j]=-999999
    fc[0][0]=a[0][0]
    j=1
    while j<n:
        fc[0][j]=fc[0][j-1]+a[0][j]
        j+=1
    i=1
    while i<n-1:
        j=i+1
        while j<n:
            fc[i][j]=max(fc[i-1][j],fc[i][j-1])+a[i][j]
            j+=1
        i+=1
    fc[n-1][n-1]=max(fc[n-2][n-1],fc[n-1][n-2])+a[n-1][n-1]
    out1=fc[n-1][n-1]
    #print out1
    for i in range(0,n):
        for j in range(i,n):
            t=a[i][j]
            a[i][j]=a[j][i]
            a[j][i]=t
    for i in range(n):
        for j in range(n):
            fc[i][j]=-999999
    fc[0][0]=a[0][0]
    j=1
    while j<n:
        fc[0][j]=fc[0][j-1]+a[0][j]
        j+=1
    i=1
    while i<n-1:
        j=i+1
        while j<n:
            fc[i][j]=max(fc[i-1][j],fc[i][j-1])+a[i][j]
            j+=1
        i+=1
    fc[n-1][n-1]=max(fc[n-2][n-1],fc[n-1][n-2])
    out2=fc[n-1][n-1]
    print str(out1+out2)
main()
