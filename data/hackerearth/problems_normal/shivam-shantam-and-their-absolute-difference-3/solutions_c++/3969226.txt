#include<bits/stdc++.h>
#include<algorithm>
using namespace std;
#define fr(i,a,b) for(ll i=a;i<b;i++)
#define frn(i,a,b) for(int i=a;i>b;i--)
#define si(x) scanf("%d",&x)
#define sll(x)  scanf("%lld",&x)
#define pln printf("\n")
#define pi(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define mp make_pair
#define pb push_back
#define x first
#define y second
typedef long long ll;
ll MOD=1000000007;
ll pw(ll a,ll b){
  ll r=1;
  while(b>0){
     if(b&1){
       r=(r*a)%MOD;
        }
     b=b>>1;
     a=(a*a)%MOD;
  }
return r;
}         
int dp[2][401010][2];
 ll a[201],b[201],q;

int main(){
   int n;
   si(n);
  
   fr(i,0,n){
     sll(a[i]);
   }
   fr(i,0,n){
     sll(b[i]);
   }
   sll(q);

  // dp stuff
    //dp[elemnet # row][diff][sign] 0-positive 1-negative
    dp[0][0][0]=1;
     fr(i,1,n+1) {
        memset(dp[i%2], 0, sizeof(dp[i%2]));
        fr( j,0,400001) {
            fr (k,0,2) {
          
               if ( j == 0 && k == 1 ) continue;
                if ( !dp[(i-1)%2][j][k] ) continue;
                int act_diff = j, new_diff;
                if ( k == 1 ) act_diff = -j;
           
                new_diff = act_diff + a[i-1];
                dp[i%2][abs(new_diff)][new_diff < 0] += dp[(i-1)%2][j][k];
                dp[i%2][abs(new_diff)][new_diff < 0]%=MOD;

                new_diff = act_diff - b[i-1];
                dp[i%2][abs(new_diff)][new_diff < 0] += dp[(i-1)%2][j][k];
                dp[i%2][abs(new_diff)][new_diff < 0]%=MOD;

                new_diff = act_diff + a[i-1] - b[i-1];
                dp[i%2][abs(new_diff)][new_diff < 0] += dp[(i-1)%2][j][k];
                dp[i%2][abs(new_diff)][new_diff < 0]%=MOD;

                new_diff = act_diff;
                dp[i%2][abs(new_diff)][new_diff < 0] += dp[(i-1)%2][j][k];
                dp[i%2][abs(new_diff)][new_diff < 0]%=MOD;
             
            
            }
            }
        }

   ll ans=0;
   ll sa,sb,x,y;
   fr(i,0,q+1){
      fr(k,0,2){
        ans+=dp[n%2][i][k];
        ans%=MOD;
      }
   }

   pll(ans);pln;





return 0;
}
