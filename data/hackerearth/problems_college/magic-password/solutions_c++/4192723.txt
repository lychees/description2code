#include <bits/stdc++.h>
#define ll long long
#define MY_LONG_MAX (((1ll<<62))|((1ll<<62)-1))
#define MY_LONG_MIN (1ll<<63)
using namespace std;
int l,ans,temp;
string s1,s2,s3,s4;
void myfind(int index)
{
	//~ cout<<index<<endl;
	ll int i;
	char c;
	if(index==l)
	{
		//~ cout<<temp<<endl;
		ans=min(ans,temp);
	}
	else
	{
		if(s1.at(index)==s4.at(index))
		{
			myfind(index+1);
		}
		else
		{
			for(i=index+1;i<l;i++)
			{
				if(s1.at(i)==s4.at(index))
				{
					c=s1.at(index);
					s1.at(index)=s4.at(index);
					s1.at(i)=c;
					temp++;
					myfind(index+1);
					//backtrack
					temp--;
					s1.at(index)=c;
					s1.at(i)=s4.at(index);
				}
			}
		}
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int test;
	cin>>test;
	while(test--)
	{
		ans=INT_MAX;temp=0;
		cin>>s1;
		s4=s1;
		s3=s1;
		l=s1.length();
		int i,j,n;
		cin>>n;
		for(i=0;i<n;i++)
		{
			cin>>s2;
			if(s2.at(0)=='R')
			{
				for(j=0;j<l;j++)
				{
					s3.at(j)=s1.at((j-1+l)%l);
				}
				s1=s3;
			}
			else
			{
				for(j=0;j<l;j++)
				{
					s3.at(j)=s1.at((j+1)%l);
				}
				s1=s3;
			}
		}
		//~ cout<<s1<<endl;
		//Need to convert s1 to s4
		//cout<<s1<<endl;
		myfind(0);
		cout<<ans<<endl;
	}
	return 0;
}
