#include<bits/stdc++.h>
using namespace std;
#define ll long long int
ll p1=10000007;
ll x1=806023 ;
ll p2= 1000000007 ;
ll x2=514739 ;

char a[1000010];
ll xa[1000010];
ll xb[1000010];
ll pow1[1000010];
ll pow2[1000010];
int l;
int bsearch(int low,int high)
{
	  int ans=0;
	  while(low<high)
	  {
	  	unordered_set<ll> st;
	  	  // memset(h1,0,sizeof(h1));
	  	   //memset(h2,0,sizeof(h2));
	  	   bool f=0;
	  	   int mid=(low+high)/2;
	  	//  cout<<mid<<endl;
	  	   for(int i=mid;i<=l;i++)
	  	   {
	  	         int lf=i-mid+1;
				 ll val1=(xa[i]-(xa[lf-1]*pow1[mid]));
			    // ll val2=(xb[i]-(xb[lf-1]*pow2[mid]));
			      if(st.find(val1)!=st.end())
			      {
			      	  f=1;
				  }
				  st.insert(val1);
				  if(f)
				  break;
		   }
		   if(f)
		   {
		   	     low=mid+1;
		   	     ans=max(ans,mid);
		   }
		   else high=mid;
	  }
	  return ans;
}
int main()
{
	       cin>>(a+1);
	       l=strlen(a+1);
	       pow1[0]=1;
	       pow2[0]=1;
	       for(int i=1;i<=l+3;i++)
	       {
	       	      pow1[i]=(pow1[i-1]*p1);
	       	      pow2[i]=(pow2[i-1]*p2);
		   }
		   for(int i=1;i<=l;i++)
		   {
		   	      xa[i]=(xa[i-1]*p1+a[i]);
		   	      xb[i]=(xb[i-1]*p2+a[i]);
		   }
		   int low=0;
		   int high=l+1;
		   cout<<bsearch(0,high);
}