#include <iostream>
#include <stdio.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <sstream>
#include <cmath>
#include <stack>
#include <list>
#define ull unsigned long long int
#define ll long long
#define Max(a,b) a >b ? a :b
#define S(n) scanf("%d",&n)
#define Sl(n) scanf("%ld",&n)
#define Sll(n) scanf("%lld",&n)
#define li long int
#define Min(a,b) a <b ? a : b
#include <queue>
#define MAX 1000000
using namespace std;
int ma;
int l;
vector <int > v[100];
int min_dis(int dis[], int vis[], int n)
{
	int min = -1;
	int i;
	int j;
	for(i = 1; i <= n; i++)  {
		if(vis[i] == 0 && dis[i] > min) {
			min = dis[i];
			j = i;
		}
	}
	return j;
}
void dfs(int a[][110], int src, int des,int n, int nu)
{
	int i;
	int vis[1000] = {0};
	int par[1000];
	for(i = 1; i <= n; i++) {
		par[i] = -1;
	}
	int d[1000];
	for(i = 1; i <= n; i++) {
		d[i] = 0;
	}
	int j;
	
	
	d[src] = MAX;
	int c;
	for(c = 1; c <= n-1; c++) {
		int u = min_dis(d,vis,n);
		vis[u] = 1;
	//	cout << u << " ";
		for(j = 1; j <= n; j++) {
			if(a[u][j] != -1 && vis[j] == 0) {
				if(d[j] != 0) {
					if(a[u][j] >= d[u] && d[u] > d[j]) {
						
						d[j] = d[u];
						par[j] = u;
					} else if(d[u] >= a[u][j] && a[u][j] > d[j]) {
						d[j] = a[u][j];
						par[j] = u;
					} else if(a[u][j] >= d[u] && d[u] == d[j]) {
						if(par[j] != -1) {
							int t;
							t = par[u];
							int h = 0;
							while(t != -1) {
								if(t == par[j]) {
									h = 1;
									break;
								}
								t = par[t];
							}
							if(h == 1) {
								par[j] = u;
							}
						}
					}
				} else {
					if(a[u][j] <= d[u]) {
						d[j] = a[u][j];
						par[j] = u;
					} else {
						d[j] = d[u];
						par[j] = u;
					}
				}
				
 			}
		}
	}
	int f = des;
	int ans = 0;
	while(nu > 0) {
		nu = nu -(d[des]-1);
		ans++;
	}
	
	vector<int> v;
	while(des!= -1) {
		v.push_back(des);
		des = par[des];
	}
	for(i = v.size()-1; i >= 0; i--) {
		cout << v[i] << " ";
	}
	cout << endl << ans << endl;;
	
	
}
int main()
{
	ma = -1;
	int n,r;
	l = 0;
	cin >> n >> r;
	int i,j;
	int a[110][110];
	for(i = 1; i <= n; i++) {
		for(j = 1; j <= n; j++) {
			a[i][j] = -1;
		}
	}
	for(i = 0; i < r; i++) {
		int src;
		int des;
		cin >> src;
		cin >> des;
		int w;
		cin >> w;
		a[src][des] = w;
		a[des][src] = w;
		
	}

	
	int s,d;;
	int nu;
	
	cin >> s >> d >> nu;
	dfs(a,s,d,n,nu);
	

	
	
	return 0;
}
