#include <stdio.h>
#include <vector>
#include <queue>
#include <string.h>
#include <stdlib.h>
#include <cstdio>
#include <map>
#include <string>
#include <stack>
#include <iostream>
#include <algorithm>
#include <math.h>
#include <limits.h>
#include <set>
#define llu long long unsigned
#define ld long
#define F first
#define S second
#define ll long long
using namespace std;
#define si(x) scanf("%d",&x)
#define sdb(x) scanf("%lf",&x)
#define sll(x) scanf("%lld",&x)
#define sc(x) scanf("%c",&x)
#define pi(x) printf("%d", x);
#define pb push_back
#define res 1000000007
typedef pair<int,int> pp;

pp arr[200010];
int vis[200010],dist[200010];
// ll tim[200000];
std::map<pp, ll> mp;
int n,m,k;
std::vector<int> adj[100010];

ll path()
{
	int i,temp;
	for(i=1;i<=n;i++)
	{
		dist[i]=-1;
		adj[i].clear();
		vis[i]=0;
	}
	for(i=1;i<=m;i++)
	{
	
		adj[arr[i].first].pb(arr[i].second);adj[arr[i].second].pb(arr[i].first);
	}
	queue<int>q;
	q.push(1);
	vis[1]=1;
	dist[1]=0;
	while(!q.empty())
	{
		temp=q.front();
		q.pop();
		for(i=0;i<adj[temp].size();i++)
		{
			if(vis[adj[temp][i]]==0 and mp[pp(temp,adj[temp][i])] > dist[temp])
			{
				vis[adj[temp][i]]=1;
				dist[adj[temp][i]]=dist[temp]+1;
				q.push(adj[temp][i]);
			}
		}
	}
	// if(dist[n]==0) return -1;
	return dist[n];
}
// ll bin(ll x,ll y)
// {
// 	if(x==y) return path(x);
// 	ll mid=(x+y)>>1;
// 	int temp = path(mid);
// 	if(temp==-1 or temp<=mid) return bin(x,mid);
// 	return bin(mid+1,y);
// }
int main()
{
	int i,temp,temp2;
	si(n);si(m);si(k);
	for(i=1;i<=m;i++)
	{
		si(arr[i].first);
		si(arr[i].second);
		mp[pp(arr[i].first,arr[i].second)]=10000000000;
		mp[pp(arr[i].second,arr[i].first)]=10000000000;
	}
	for(i=0;i<k;i++)
	{
		si(temp);si(temp2);
		mp[pp(arr[temp2].first,arr[temp2].second)]=temp;
		mp[pp(arr[temp2].second,arr[temp2].first)]=temp;
	}
	// if(n==)
	printf("%lld\n", path());

	return 0;
}
