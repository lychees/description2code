#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-(a)) : (a))
#define EQ(a,b) ( (fabs((a)-(b))<EPS) ? (1) : (0))



typedef long long LL;
//typedef __int64 LL;


int vis[30][5];
long long mem[30][5];
char in[30];
int n;

long long get(int pos,int total)
{
  if(total==4)
  {
    if(pos==n) return 0;
    return -1;
  }
  if(vis[pos][total])
    return mem[pos][total];

  long long &ret=mem[pos][total];
  ret=-1;

  long long now=0;


  if(in[pos]=='0')
    return get(pos+1,total+1);

  int i;
  for(i=pos;i<n && i<(pos+12);i++)
  {
    now*=10;
    now+=in[i]-'0';
    if(get(i+1,total+1)>=0)
    {
      ret=max(ret,now+get(i+1,total+1));
    }
  }


  long long mat=1000000;
  mat*=mat;

  if(i<n)
  {
    now*=10;
    now+=in[i]-'0';
    if(now==mat && (i+1,total+1)>=0)
    {
      ret=max(ret,now+get(i+1,total+1));
    }
  }




  //cout<<pos<<" "<<total<<" "<<ret<<endl;
  vis[pos][total]=1;
  return ret;
}



int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,j,k,val;




    int T;
    scanf("%d",&T);
    while(T--)
    {
      scanf("%s",in);
      n=strlen(in);
      memset(vis,0,sizeof(vis));


      if(get(0,0)<0) printf("unlucky\n");
      else printf("%lld\n",get(0,0));
     // asdf
    }

    return 0;
}
