import operator


def PrimesPlus():
    yield 2
    yield 3
    i = 5
    while i != 1000001:
        yield i
        if i % 6 == 1:
            i += 2
        i += 2


def GetPrimeDecomp(n):
    d = {}
    primes = PrimesPlus()
    for p in primes:
        while n % p == 0:
            n /= p
            d[p] = d.setdefault(p, 0) + 1
        if n == 1:
            return d


def NumberOfDivisors(n):
    d = GetPrimeDecomp(n)
    powers_plus = map(lambda x: x+1, d.values())
    return reduce(operator.mul, powers_plus, 1)


n = raw_input()
numbers = map(int, raw_input().split())
s = 1
for x in numbers:
    s = s*x


print NumberOfDivisors(s) % 1000000007
