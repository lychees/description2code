#include <iostream>
using namespace std;

void solve(string n1, string n2) {
	int index1 = n1.size()-1,index2 = n2.size()-1;
	
	int ans=0,carry=0;
	while(index1>=0 && index2>=0) {
		
		if(n1[index1]-'0'+n2[index2]-'0'+carry>9) {
			ans++;
			carry = (n1[index1]-'0'+n2[index2]-'0'+carry)/10;
		} else {
			carry = 0;
		}
		index1--;
		index2--;
	}
	
	while(index1>=0 && carry>0) {
		if(n1[index1]-'0'+carry > 9) {
			carry = (n1[index2]-'0'+carry)/10;
			ans++;
		} else {
			carry=0;
		}
		index1--;
	} 
	
	while(index2>=0 && carry>0) {
		if(n2[index2]-'0'+carry > 9) {
			carry = (n2[index2]-'0'+carry)/10;
			ans++;
		} else {
			carry=0;
		}
		index2--;
	} 
	
	if(ans==0) {
		cout<<"No carry operation"<<endl;
	} else if(ans==1) {
		cout<<"1 carry operation"<<endl;
	} else {
		cout<<ans<<" carry operations"<<endl;
	}
}


int main()
{
    int test;
    cin>>test;
    
    while(test--) {
    	string num1,num2;
    	cin>>num1>>num2;
    	
    	solve(num1,num2);
    }
    return 0;
}
