#include <iostream>
#include <vector>
#include <cassert>
using namespace std;

int main()
{
    int	T; //Number of test-cases
    
    //Read count of test-cases
    cin >> T;
    
    assert((T >= 1) && (T <= 10));
    
    while (T--)
    {
    	long			L; //Number of available liters of Lassi
    	vector<long>	priceVec; //Prices for bottles of size [1,L]
    	
    	//Read L
    	cin >> L;
    	
    	assert((L >= 1) && (L <= 10000));
    	
    	priceVec.reserve(L);
    	
    	//Read prices
    	for (auto i = L; i > 0; --i)
    	{
    		long temp;
    		cin >> temp;
    		assert((temp >= 1) && (temp <= 1000000L));
    		priceVec.push_back(temp);
    	}
    	
    	long	result[L+1]; //Maximum profit gained for L liters will be stored in result[L]
    	
    	result[0] = 0;
    	
    	for (auto i = 1; i <= L; ++i)
    	{
    		result[i] = priceVec[i-1];
    		
    		for (auto j = 1; j <= (i / 2); ++j)
    		{
    			if ((result[j] + result[i-j]) > result[i])
    				result[i] = (result[j] + result[i-j]);
    		}
    	}
    	
    	cout << result[L] << endl;
    }
    
    return 0;
}