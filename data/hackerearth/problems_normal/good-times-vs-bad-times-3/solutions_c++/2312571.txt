/* https://www.hackerearth.com/practo-hiring-challenge-2/algorithm/good-times-vs-bad-times-3/ */

#include <iostream>
#include <algorithm>
using namespace std;
int g_times[86401], b_times[86401];

void compute()
{
    int moment = 86400;
    for(int hh=23; hh>=0; hh--)
      for(int mm=59; mm>=0; mm--)
        for(int ss=59; ss>=0; ss--)
        {
            moment--;
            if((hh==0 && mm==0 && ss!=1) || (hh==0 && mm!=1 && ss==0) || (hh!=1 && mm==0 && ss==0))
            {
                b_times[moment] = b_times[moment+1] + 1;
                g_times[moment] = g_times[moment+1];
            }
            else if(__gcd(__gcd(hh,mm),ss) == 1)
            {
                g_times[moment] = g_times[moment+1] + 1;
                b_times[moment] = b_times[moment+1];
            }
            else
            {
                b_times[moment] = b_times[moment+1] + 1;
                g_times[moment] = g_times[moment+1];
            }
        }
}

int main()
{
    compute();
    int t,h,m,s,moment;
    cin>>t;
    while(t--)
    {
        cin>>h>>m>>s;
        moment = h*3600 + m*60 + s;
        if(b_times[moment] && g_times[moment])
        {
            int div_factor = __gcd(b_times[moment],g_times[moment]);
            cout<<b_times[moment]/div_factor<<":"<<g_times[moment]/div_factor<<endl;
        }
        else
            cout<<b_times[moment]<<":"<<g_times[moment]<<endl;
    }
    return 0;
}
