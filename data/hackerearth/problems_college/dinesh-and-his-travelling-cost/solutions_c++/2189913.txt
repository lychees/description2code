#include <bits/stdc++.h>
using namespace std;
#define v 505
#define inf 1000000
long  long  dist[v];
 bool ans[v];
long  long  mindist(long  long  dist[],bool ans[])
{
    long  long  i;
     long  long  mini=INT_MAX;
     long  long  min_index;
    for(i=0;i<v;i++)
    {
        if(ans[i]==false&&dist[i]<=mini)
        {
            mini=dist[i];
            min_index=i;
        }
    }
    return min_index;
}
void dijkstra(long  long  g[v][v],long  long  src)
{
    long  long  i,j,e;
 for(i=0;i<v;i++){
 ans[i]=false;
 dist[i]=inf;
 }
 dist[src]=0;
 for(e=0;e<v-1;e++)
 {
  long  long  u=mindist(dist,ans);
  ans[u]=true;
  for(j=0;j<v;j++)
  {
      if(ans[j]==false&&g[u][j]&&dist[u]!=inf&&dist[j]>dist[u]+g[u][j])
        dist[j]=dist[u]+g[u][j];
  }
 }
 
}
int  main()
{
   // cout << "Hello World!" << endl;
   long long t,i,j,d;
   cin>>t;
   long long g[v][v];
   for(i=0;i<v;i++)
   {
   	for(j=0;j<v;j++)
   	g[i][j]=0;
   }
   for(i=0;i<t;i++){
   	long long a,b,w;
   	cin>>a>>b>>w;
   	g[a][b]=w;
   	g[b][a]=w;
   }

   long long s,q;
   cin>>s;
   	dijkstra(g,s);
   	cin>>q;
  while(q--)
   {
   	cin>>d;
    if(dist[d]==inf)
    cout<<"NO PATH"<<endl;
 else
    cout<<dist[d]<<endl;
   }
    return 0;
}
