#include <cstdio>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cctype>
#include <utility>
#include <queue>
#include <cmath>
using namespace std;

typedef pair<int, int> pii;
typedef long long LL;
typedef vector<int> vi;
typedef vector<pii> vpii;

#define pb push_back

#define X first
#define Y second
#define MOD int(1e9 + 7)

int N, M, P, Q; 

int modExp(int a, int b, int m) {
	int rt(1);
	for (; b; b >>= 1, a = (1LL * a * a) % m)
		if (b & 1) rt = (1LL * rt * a) % m;
	return rt;
}

int main() {
	
	int i, j, k;
	LL rlt, P1, P2, t;

	scanf("%d%d%d%d", &N, &M, &P, &Q);
	if (N == 1 && M == 1) {
		puts("0");
		return 0;	
	}
	if (N > M) swap(N, M);
	int rev = modExp(2, MOD - 2, MOD), rev6 = modExp(6, MOD - 2, MOD);
	rlt = 1LL * (1LL * N * M % MOD) * ((1LL * N * M % MOD + MOD - 1) % MOD) % MOD;
	P2 = 0;
	if (P <= N && Q <= M) P2 = (P2 + 1LL * (N - P) * (M - Q) % MOD) % MOD;	
	if (Q <= N && P <= M) P2 = (P2 + 1LL * (N - Q) * (M - P) % MOD) % MOD;
	P2 = 4LL * P2 % MOD;
	
	P1 = 0;
	if (N > 2) {
		P1 = (P1 + 1LL * (1LL * (N - 2) * (N - 1) % MOD) * rev % MOD) % MOD;
		t = 1LL * (N - 2) * (N - 1) % MOD;
		t = t * (2LL * N - 3) % MOD;
		t = t * rev6 % MOD;
		P1 = (t + P1 + MOD) % MOD;
	}
	t = 1LL * N * (N - 1) % MOD;
	t = t * rev % MOD;
	t = t * (M - N + 1) % MOD;
	P1 = (P1 + t) % MOD;
	P1 = 4LL * P1 % MOD;
	rlt = (rlt - P1 + MOD) % MOD;
	rlt = (rlt - P2 + MOD) % MOD;
	cout << rlt << endl;
	
	return 0;
}

