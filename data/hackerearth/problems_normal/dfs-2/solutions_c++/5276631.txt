#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int n;
long int findindex1(long int a[],long int x,long int y,long int z)
{
	long int mid;
	mid=(x+y)/2;
	if(a[mid]>=z)
	{
		if((mid>=1 && a[mid-1]<z) || (mid==0))
		return mid;
		else
		return findindex1(a,x,mid,z);
	}
	else
	return findindex1(a,mid+1,y,z);
}

long int findindex2(long int a[],long int x,long int y,long int z)
{
	long int mid;
	mid=(x+y)/2;
	if(a[mid]<=z)
	{
		if((mid<=n-2 && a[mid+1]>z) || (mid==n-1))
		return mid;
		else
		return findindex2(a,mid+1,y,z);
	}
	else
	return findindex2(a,x,mid,z);
}

int main()
{
    int q,i,j;
    scanf("%d",&n);
    long int a[n],l,r,x,y;
    for(i=0;i<n;i++)
    	scanf("%ld",&a[i]);
    sort(a,a+n);
    scanf("%d",&q);
    for(i=1;i<=q;i++)
    {
    	scanf("%ld %ld",&l,&r);
    	if(l<a[0] && r>a[n-1])
    	printf("%d\n",n);
    	else if(l>a[n-1] || r<a[0])
    	printf("0\n");
    	else if(l<a[0])
    	{
    		y=findindex2(a,0,n-1,r);
    		printf("%ld\n",y);
    	}
    	else if(r>a[n-1])
    	{
    		x=findindex1(a,0,n-1,l);
    		printf("%ld\n",n-x);
    	}
    	else
    	{
    		x=findindex1(a,0,n-1,l);
    		y=findindex2(a,0,n-1,r);
    		printf("%ld\n",y-x+1);
    	}
    }
    return 0;
}
