/*Author:rednivrug15*/
#include<bits/stdc++.h>
using namespace std;

#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define ll long long
#define N 210

long long power(long long a,long long b,long long mod)
{
    long long ret=1;

    while(b)
    {
        if(b%2==1)
            ret=(ret*a)%mod;
        b/=2;
        a=(a*a)%mod;
    }
    return ret;
}

int gcd(int a,int b)
{
    return b==0?a:gcd(b,a%b);
}
long long MOD=1234567891234LL;

int main()
{
    int t;
    scanf("%d",&t);

    while(t--)
    {
    	string str;
    	cin>>str;

    	long long dp[21][21][5];
    	memset(dp,0,sizeof dp);

    	int len=str.length();

    	for(int starts=1; starts<=len; starts++)
    	{
    		for(int i=0; i<len-starts+1; i++)
    		{
    			for(int j=1; j<=4; j++)
    			{
    				int start=i;
    				int ends=i+starts-1;

    				if(j>starts)
    				{
    					dp[start][ends][j]=-MOD;
    					continue;
    				}
    				if(ends-start>14 && j==1)
    		    	{
    		    		dp[start][ends][j]=-MOD;
    		    		continue;
    		    	}
    		    	if(start==ends)
    		   		{
    		    		dp[start][ends][j]=str[start]-'0';
    		    		continue;
    		   		}
    		   		if(j==1)
    		   		{
    		   			if(str[start]=='0')
    		   			 dp[start][ends][j]=-MOD;

    		   			else
    		   			{
    		   				long long number=0;

    		   				for(int x=start; x<=ends; x++)
    		   				 number=number*10+str[x]-'0';
    		   			    if(number<=(long long)(1e12))
    		   				dp[start][ends][j]=number;
    		   				else
    		   				dp[start][ends][j]=-MOD;
    		   			}
    		   			continue;
    		   		}

    		   		dp[start][ends][j]=-MOD;
    		   		for(int x=start; x<ends; x++)
    		   		{
    		   			for(int y=1; y<j; y++)
                         if(dp[start][x][y]>-MOD && dp[x+1][ends][j-y]>-MOD)
    		   			 dp[start][ends][j]=max(dp[start][ends][j],dp[start][x][y]+dp[x+1][ends][j-y]);
    		   		}

    			}
    		}
    	}
    	if(dp[0][len-1][4]>-MOD)
    	 cout<<dp[0][len-1][4]<<endl;
    	else
    	 cout<<"unlucky"<<endl;
    }
    return 0;
}
