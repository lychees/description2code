#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <cassert>

using namespace std;

#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define S(x) 			scanf("%d",&x)
#define all(c) 			(c).begin(),(c).end() 
#define sz(c) 			int((c).size())
#define pb 				push_back
#define present(c,x) 	((c).find(x) != (c).end()) 
#define cpresent(c,x) 	(find(all(c),x) != (c).end())
#define rep(i,x,y) 		for(int i = x; i < y; i++)
#define REV(i,x,y) 		for(int i = x; i >= y; i--)
#define foreach(c,itr)	for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define FILL(a,v) 		memset(a,v,sizeof(a))
#define debug(args...)	{dbg,args; cerr<<endl;}
#define FF 				first
#define SS 				second 
//#define R(x) 			((rand()%x) + 1)

typedef long long int LL;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;

struct _debugger
{
	template<typename T> _debugger& operator , (const T& v)
	{	
		cerr<<v<<" ";
		return *this;
	}
} dbg;
 
void debugarr(int * arr,int n)
{
	cout<<"[";
	for(int i=0;i<n;i++) cout<<arr[i]<<" ";
	cout<<"]"<<endl;
}

/* ------------------------Main Code----------------------- */
const int MAX = 1001;

int M[MAX][MAX], D[MAX], n, vis[MAX];

void bfs(int s)
{
	D[s] = 0;
	queue<int> q;
	q.push(s);
	vis[s] = 1;
	while(!q.empty()){
		int u = q.front(); q.pop();
		rep(i,1,n+1) if(!vis[i] && !M[u][i]){
			vis[i] = 1;
			D[i] = D[u] + 1;
			q.push(i);
		}
	}
}
int main()
{
	int m, a, b;
	S(n); S(m); S(a); S(b);
	rep(i,1,n+1) M[i][i] = 1;
	rep(i,0,m){
		int x, y;
		S(x); S(y);
		M[x][y] = 1;
		M[y][x] = 1;
	}
	FILL(D,-1);
	bfs(a);
	printf("%d\n",D[b]);
	return 0;
}