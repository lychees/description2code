#include<iostream>
#include<cstring>
using namespace std;
 
long long MOD = 1000000007LL;
bool isprime[1000001];
long long primepool[1000001] , z = 0;
 
long long power(long long a , long long b , long long mod)
{
    long long ret = 1;
    while(b)
    {
        if(b & 1) ret = (ret * a) % mod;
        a = (a * a) % mod;
        b = b >> 1;
    }
    return ret;
}
 
long long solve(long long p)
{
    long long ret = 0;
    long long N = p * (p - 1);
    for(int i = 1 ; i <= N ; i++)
        for(int j = 1 ; j <= N ; j++)
            if(power(i , j , p) == power(j , i , p))
                ret ++;
    return ret;
}
 
long long cnt[1001];
 
 
long long f(long long N)
{
    long long ret = 0;
    memset(cnt , 0 , sizeof(cnt));
    for(int i = 1 ; i <= N ; i++)
        for(int j = 1 ; j <= N ; j++)
            cnt[(i * j) % N] ++;
    for(int i = 0 ; i < N ; i++)
        ret += cnt[i] * cnt[i];
    return ret;
}
 
 
 
long long solve2(long long p)
{
    
    long long ret = (p - 1) * (p - 1);
    return ret + f(p - 1);
    return ret;
    
}
 
long long MUL(long long a , long long b)
{
    long long ret = 0;
    while(a)
    {
        if(a & 1) ret = (ret + b) % MOD;
        b = (b + b) % MOD;
        a = a >> 1;
    }
    return ret;
}
 
long long F(long long prime , long long power)
{
    long long ret = 1;
    long long mul = MUL(MUL(prime , prime) , prime);
    long long add = MUL(prime , (prime - 1));
    for(int i = 1 ; i <= power ; i++)
    {
        ret = (MUL(ret , mul) + add) % MOD;
        add = MUL(MUL(add , prime) , prime);
    }
    return ret;
}
 
long long SOLVE(long long p)
{
    long long t = p - 1;
    long long ret = MUL(t , t);
    long long add = 1;
    for(int I = 1 ; t > 1 && I <= z; I ++)
    {
        int i = primepool[I];
        if(t % i == 0)
        {
            int prime = i , mul = 0;
            while(t % i == 0)
            {
                mul ++;
                t /= i;
            }
            add = MUL(add , F(prime , mul));
        }
    }
    if(t > 1)
        add = MUL(add , F(t , 1));
    return (ret + add) % MOD;
}
 
int main()
{
    memset(isprime , true , sizeof(isprime));
    for(int i = 2 ; i <= 1000000 ; i++)
        if(isprime[i])
        {
            primepool[++z] = i;
            for(int j = i + i ; j <= 1000000 ; j += i)
                isprime[j] = false;
        }
    int T;
    cin>>T;
    long long p;
    while(cin>>p)
        cout<<SOLVE(p)<<endl;
    return 0;
}