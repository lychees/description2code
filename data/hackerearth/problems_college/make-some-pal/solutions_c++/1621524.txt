//http://www.careercup.com/question?id=6218545979457536
#include <iostream>
#include <algorithm>
using namespace std;
int solve(string s) {
	int p[2000011], n = s.size();
	
	string current = s + '$';

	for (int i = 0; i < n; i++) {
		current += s[n - 1 - i];
	}
	//cout << s <<" " << current << endl;
	p[0] = 0;
	for (int i = 1; i < 2 * n + 1; i++) {
		int j = p[i - 1];
		while (j > 0 && current[j] != current[i])
			j = p[j - 1];
		j += current[i] == current[j];
		p[i] = j;
	}
	return 2*n - p[2 * n];
}
int main()
{
    int t;
    cin>>t;
    while(t--){
    	string s;
    	cin>>s;
    	int n = s.length();
    	string b = s;
    	reverse(b.begin(),b.end());
    	b += '$';
    	b += s;
    	int lb = b.length();
    	int *p = new int[lb];
    	int j = -1;
    	p[0] = j = -1;
    	for(int i=1;i<lb;i++){
    		while (j>=0 && b[j+1]!=b[i]) j = p[j];
    		if (b[j+1]==b[i]) j++;
    		p[i] = j;
    	}
    	//cout << b << ": ";
    //	for(int i=0;i<lb;i++) cout << p[i] << " ";
    //	cout << endl;
    cout << 2*n-p[lb-1]-1 << "\n";
    	//reverse(s.begin(),s.end());
    	//cout << solve(s) << "\n";
    }
    return 0;
}
