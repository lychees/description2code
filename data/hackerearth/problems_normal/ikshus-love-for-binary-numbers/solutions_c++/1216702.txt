#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <math.h>
using namespace std;
long double dp[61][61];
int main() {
	int n,k;
	
	scanf("%d %d",&n,&k);
	dp[1][1]=1;
	dp[2][1]=3;
	dp[2][2]=1;
	for(int i=0;i<=60;i++)
	{
		dp[i][0]=pow(2,i);
	//	dp[i][1]=pow(2,i)-1;
	}
	for(int i=3;i<=60;i++)
		for(int j=1 ;j<=i;j++)
		{
			if(i==j)
				dp[i][j]=1;
			else
			{
				
				dp[i][j]=(2*dp[i-1][j])+((long long)pow(2,i-j-1)-dp[i-j-1][j]);
			}	
		//	if(j==1&&dp[i][j]!=pow(2,i)-1)
	//		cout<<i<<" "<<j<<" "<<dp[i][j]<<" "<<((long long)pow(2,i-j-1)-dp[i-j-1][j])<<endl;
		}
	long long h=__gcd((long long )dp[n][k],((long long )pow(2,n)));
	cout<<(long long )dp[n][k]/h<<"/"<<((long long)(pow(2,n)))/h;
	return 0;
}