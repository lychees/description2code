#include <iostream>
#include <string>
#include <vector>

using namespace std;

const int HASH_SIZE = 100000;

struct Name
{
	string name;
	int num_occurances;
};

int string_hash(string name)
{
	int len = name.length();
	int hash_val = 0;
	
	for (int i = 0; i < len; i++)
	{
		hash_val ^= (int)(name[i]);
		hash_val <<= 5;
		hash_val %= HASH_SIZE;
	}
	
	return hash_val;
}

int main()
{
    vector<Name> names[100000];
    Name *current;
    int t, num_distinct, hash_val, max=0, max_sum=0;
    string name;
    bool name_found;
    
    cin >> t;
    
    for (int i = 0; i < t; i++)
    {
    	cin >> name;
    	hash_val = string_hash(name);
    	name_found = false;
    	
    	// Search for name
    	for (int j = 0; j < names[hash_val].size(); j++)
    	{
    		current = &(names[hash_val][j]);
    		if (current->name == name)
    		{
    			name_found = true;
    			current->num_occurances += 1;
    			if (current->num_occurances > max)
    			{
    				max = current->num_occurances;
    				max_sum = max;
    			}
    			else if (current->num_occurances == max)
    			{
    				max_sum += max;
    			}
    		}
    	}
    	
    	if (!name_found)
    	{
    		Name temp;
    		temp.name = name;
    		temp.num_occurances = 1;
    		names[hash_val].push_back(temp);
    	}
    }
    
    printf("%d\n", max_sum);
    
    return 0;
}
