#include<bits/stdc++.h>
#define assn(n,a,b) assert(n<=b and n>=a)
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define sd(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
using namespace std;

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
       cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
       const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

#define MOD 1000000007ll
LL mpow(LL a, LL n) 
{LL ret=1;LL b=a;while(n) {if(n&1) 
ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}
return (LL)ret;}

#define int long long

vector<vector<unsigned long long> > A(60006, vector<unsigned long long>(7, 0));

bool cmp(PII a, PII b){
    if(a.F!=b.F)return a.F<b.F;
    return b.S>a.S;
}

#undef int
int main()
{
#define int long long

    int N,Q;
    cin>>N>>Q;
    vector <pair<int,int> > qq;
    for(int i=0;i<Q;i++)
    {
        int a,b;
        cin>>a>>b;
        qq.emplace_back(a,b);
    }
    sort(all(qq),cmp);
    int cnt=0;
    for(auto i = qq.begin(); i!=qq.end(); i++)
    {
        string tmp="";
        /*
        for(int j=1; j<i->first; j++)
        {
            A[cnt][(j-1)/64] |= 1ll<<(((j-1)%64));
        }
        */
        for(int j=i->first; j<=i->second; j++)
        {
            A[cnt][(j-1)/64] |= 1ll<<(((j-1)%64));
        }
        cnt++;
    }
    int ans=MOD;
    for(int i=0; i<N; i++)
    {
        int cnt=0;
        for(int j=i; j<qq.size(); j++)
        {
            if((A[j][i/64]&(1ll<<(i%64))))
            {
                cnt++;
                //trace(cnt);
            }
            //trace(j,i,A[j][i/64]);
        }
        //trace(cnt,ans);
        ans=min(ans,cnt);
        if(cnt==0)
            break;
        if(!(A[i][i/64]&(1ll<<(i%64))))
        {
            for(int j=i+1; j<qq.size(); j++)
            {
                if(A[j][i/64]&(1ll<<(i%64)))
                {
                    swap(A[i], A[j]);
                    break;
                }
            }
        }
        for(int j=i+1; j<qq.size(); j++)
        {
            if(A[j][i/64]&(1ll<<(i%64)))
            {
                for(int k=0; k<7; k++)
                {
                    A[j][k] = ((A[j][k])^(A[i][k]));
                }
            }
        }
    }
    //trace(ans);
    cout<<ans<<endl;
    return 0;
}


