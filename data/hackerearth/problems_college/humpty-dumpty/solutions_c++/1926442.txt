#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-(a)) : (a))
#define EQ(a,b) ( (fabs((a)-(b))<EPS) ? (1) : (0))





typedef long long LL;
//typedef __int64 LL;




int vals[1000];


int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,j,k,n;

    int T,X1,Y1;
    scanf("%d",&T);
    while(T--)
    {
      scanf("%d %d %d",&n,&X1,&Y1);

      LL Now=X1*X1+Y1*Y1;


      for(i=0;i<n;i++)
      {
        scanf("%d",&vals[i]);
      }
      sort(vals,vals+n);
      reverse(vals,vals+n);


      LL L=vals[0],R=vals[0];


      for(i=1;i<n;i++)
      {
        R+=vals[i];
        L=MAX(0,L-vals[i]);
      }

      if(R<1000000000)
        R*=R;


      if(L>=1000000000)
      {
        printf("Not able\n");
        continue;
      }
      L*=L;

      if(L<=Now && Now<=R)
        printf("Able\n");
      else printf("Not able\n");


    }


    return 0;
}
