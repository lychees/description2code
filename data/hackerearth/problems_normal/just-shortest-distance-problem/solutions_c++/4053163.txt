#include<iostream>
#include<vector>
using namespace std;
const int N=1099;
int n,m;
int dist[N];
vector<int>g[N];
void upd(int v)
{
    for(size_t i=0;i<g[v].size();++i)
    {
        int to=g[v][i];
        if(dist[to]>dist[v]+1)
        {
            dist[to]=dist[v]+1;
            upd(to);
        }
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin>>n>>m;
    for(int i=2;i<=n;++i)
        dist[i]=1e9;
    for(int i=1;i<=m;++i)
    {
        int temp;
        cin>>temp;
        if(temp==1)
        {
            int x;
            cin>>x;
                if(dist[x]>1e8)
                    cout<<-1<<endl;
                else cout<<dist[x]<<endl;
        }
        if(temp==2)
        {
            int a,b;
            cin>>a>>b;
            g[a].push_back(b);
            if(dist[b]>dist[a]+1)
            {
                dist[b]=dist[a]+1;
                upd(b);
            }
        }
    }
return 0;
}
