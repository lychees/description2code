#include<bits/stdc++.h>
using namespace std;

int vec[100001][3];
int svec[1000001];

int root1(int a)
{
	while(svec[a]!=a)
	{
		a=svec[a];
	}
	return a;
}

int root2(int a,int b)
{
	while(vec[a][b]!=a)
	{
		a=vec[a][b];
	}
	return a;
}

void Union1(int a,int b)
{
	svec[a]=b;
}

void Union2(int a,int b,int c)
{
	vec[a][c]=b;
}

int main()
{
	int n,m,ans,a,b,c;
	cin >> n >> m;
	for(int i=1;i<=n;i++)
		svec[i]=vec[i][1]=vec[i][2]=i;
	for(int i=0;i<m;i++)
	{
		cin >> a >> b >> c;
		for(int j=1;j<=2;j++)
		{
			if(c&j)
			{
				int ta=root2(a,j);
				int tb=root2(b,j);
				if(ta==tb)
					continue;
				Union2(ta,tb,j);
			}
		}
		if(c!=3)
			continue;
		int ta=root1(a);
		int tb=root1(b);
		if(ta==tb)
			continue;
		Union1(ta,tb);
		ans++;
	}
	ans=(n-1-ans)*2+ans;
	int cnt=0;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=2;j++)
		{
			if(vec[i][j]==i)
				cnt++;
		}
	}
	if(cnt>2)
		cout << "-1" << endl;
	else
		cout << m-ans << endl;
	return 0;
}