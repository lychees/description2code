from itertools import *
from collections import *
from operator import *
from bisect import *
from fractions import *


def Ii():
    return map(int, raw_input().split())


def Is():
    return raw_input().split()


ri = raw_input

lowercase = 'abcdefghijklmnopqrstuvwxyz'
n, m = input(), 0
words = [raw_input() for _ in xrange(n)]

for c, d in combinations(lowercase, 2):
    def pred(s): return len(s) == sum(ss == c or ss == d for ss in s)
    m = max(m, sum(len(word) for word in words if pred(word)))

print m
