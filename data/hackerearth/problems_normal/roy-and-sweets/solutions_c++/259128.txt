#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<string>
#include<vector>
#include<sstream>
#include<algorithm>
#include<map>
#include<queue>
using namespace std;
#define MAXI 1000010
typedef pair <int, int > PII;
int N, G;
vector<PII> sweets;
int maxi[MAXI];
int cmp(PII a, PII b) {
	return a.first < b.first;
}
int getIndx(int q) {
	int L = 0, H = N-1;
	while ( L < H) {
		int mid = L + H; mid >>= 1;
		if (sweets[mid].first > q) H = mid;
		else if (sweets[mid].first == q) return mid;
		else L = mid +1;
	}
	return L;
}
int main() {
	cin >> N;
	int m = 0;
	for (int i = 0; i < N; i++) {
		int a ,b ; cin >> a >> b;
		PII p = make_pair(a,b);
		m = max(m, a);
		maxi[a] = b;
		//sweets.push_back(p);
	}
	//sort(sweets.begin(), sweets.end(), cmp);
	for (int i = m; i >=0 ;i--) {
		maxi[i] = max(maxi[i+1], maxi[i]);
	}
	cin >> G;
	long long ans = 0;
	for (int i = 0; i < G; i++) {
		int M ; cin >> M;
		//int idx = getIndx(M);
		//while (idx < N && sweets[idx].first < M) idx++;
		/*if (idx < N) {
			long long a = maxi[idx]/M;
			ans += 100LL*a;
		}*/
		ans += 100LL*(maxi[M]/M);			
	}
	cout << ans <<"\n";
    return 0;
}
