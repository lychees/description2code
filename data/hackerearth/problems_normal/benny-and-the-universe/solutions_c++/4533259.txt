#include <bits/stdc++.h>
using namespace std;
#define SIZE 1000001
#define MOD 10000
void littleshinoandcoins()
{
    int k;
    string s;
    cin>>k;
    cin>>s;
    int l = s.size();
    long long int count = 0;
    for(int i =0;i<l;i++)
    {
        for(int j = i+k-1;j<l;j++)
        {
            set<char>d(begin(s)+i, begin(s)+j+1);
            //set<char>::iterator i1;
//            for(i1 = d.begin();i1!=d.end();i1++)
//                cout<<*i1;
//            cout<<endl;
            if(s[i]<=s[j] && d.size()==k)
            {
                count++;
            }
            if(d.size()>k)
                break;
        }
    }
    cout<<count<<endl;

}

int query[SIZE];

void tournamenthelper(queue<int>&s, long long int *strength)
{
    if(s.size()==1)
        return;
    queue<int>temp;
    while(!s.empty())
    {
        int a,b;
        a = b = -1;
        if(s.size())
        {
            a = s.front();
            s.pop();
        }
        if(s.size())
        {
            b = s.front();
            s.pop();
        }
        if(b!=-1)
        {
            if(strength[a]>strength[b])
            {
                query[a]++;
                query[b]++;
                //cout<<query[a]<<endl;
                temp.push(a);
            }
            else
            {
                query[b]++;
                query[a]++;
                //cout<<query[b]<<endl;
                temp.push(b);
            }
        }
        else
            temp.push(a);

    }
    tournamenthelper(temp,strength);


}
int sum[10000];
void shinoandfibonacchi()
{
    int t;
    cin>>t;
    int l,r;
    sum[0] = 0;
    sum[1] = 0;
    sum[2] = 1;

    for(int i = 3;i<1000;i++)
    {
        sum[i] = (sum[i-1]%MOD + sum[i-2]%MOD)%MOD;
    }

    while(t--)
    {
        cin>>l>>r;

    }
}


void littleshinoandtournament()
{
    int n,q;
    cin>>n>>q;
    long long int strength[n+1];
    for(int i =1;i<=n;i++)
        cin>>strength[i];
    queue<int>s;
    for(int i =1;i<=n;i++)
    {
        s.push(i);
    }

    tournamenthelper(s,strength);
    while(q--)
    {
        int player;
        cin>>player;
        cout<<query[player]<<endl;
    }

}
void bennyanduniverse()
{
    int n,q;
    cin>>n>>q;
    long long int d[n];
    for(int i =0;i<n;i++)
        cin>>d[i];
    sort(d,d+n);
    int smallest = d[0];
    long long int dist[smallest];
    set<pair<int,int>>s;
    for(int i =0;i<smallest;i++)
        dist[i] = 1e9 + 1e7;
    dist[0] = 0;
    for(int i =0;i<smallest;i++)
    {
        s.insert(make_pair(dist[i], i));
    }
    set<pair<int,int>>::iterator it;
    while(s.size())
    {
        it = s.begin();
        long long int v = (*it).second;
        s.erase(it);
        if(dist[v]>1e9+1e8)
            continue;
        for(int i =0;i<n;i++)
        {
            long long int new_value = dist[v] + d[i];
            int rem = new_value%d[0];
            if(dist[rem]>new_value)
            {
                s.erase(make_pair(dist[rem],rem));
                dist[rem] = new_value;
                s.insert(make_pair(dist[rem],rem));
            }
        }
    }

    while(q--)
    {
        int value;
        cin>>value;
        int rem = value%d[0];
        if(dist[rem]<=value)
        {
            cout<<"YES\n";
        }
        else
            cout<<"NO\n";
    }

}

int main()
{
//    string a = "abcaa";
//    set<char>s(begin(a)+1, begin(a)+2);
//    set<char>::iterator i;
//    for(i = s.begin();i!=s.end();i++)

//    cout<<*i;
//    cout<<endl;
    //littleshinoandtournament();
    bennyanduniverse();
    return 0;
}

