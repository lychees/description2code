#include <bits/stdc++.h>
using namespace std;
bool prime[1000005]={true};
int s[1000005]={0};
void SieveOfEratosthenes(int n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    
   memset(prime, true, sizeof(prime));

    for (int p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
   int c=0;
    // Print all prime numbers
    for (int p=2; p<=n; p++){
       if (prime[p]){
       	c++;
       }
       s[p]=c;
    }
         // 
        //  return c;
}

// Driver Program to test above function
int main()
{
    int t;
    cin>>t;
    SieveOfEratosthenes(1000005);int d=0;
   /* for(int i=1;i<=1000005;i++){
    if(prime[i]){
    	d++;
    	s[i]=d;
    }
    }*/
    
    while(t--){
    	int l,r;
    	cin>>l>>r;
    	float f;
    f=s[r]-s[l-1];
    f=f/(r-l+1);
    printf("%.6f\n",f);
    }
    
    return 0;
}
