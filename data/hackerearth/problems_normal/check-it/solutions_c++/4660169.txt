#include <bits/stdc++.h>
using namespace std;
const int MAX=1e5+5;
typedef long long ll;
#define pb(a)		push_back(a)
#define pp			pop_back()
#define sz			size()
#define pf(a)		printf("%d",a)
#define sf(a)		scanf("%d",&a)
#define pii pair<int,int>
#define pll pair<ll,ll>
int ar[MAX];
map<int,pii> edges;
void init(int n){
	for(int i=1;i<=n;i++)ar[i]=i;
	edges.clear();
}
int root(int a){
	while(a!=ar[a]){
		ar[a]=ar[ar[a]];
		a=ar[a];
	}
	return a;
}
void uni(int a,int b){
	a=root(a),b=root(b);
	ar[b]=a;
}
bool is_spanning_tree(int* select,int n){
	for(int i=0;i<n;i++){
		int x=edges[select[i]].first;
		int y=edges[select[i]].second;
		if(root(x)!=root(y)){
			uni(x,y);
		}else return false;
	}
	return true;
}
int main()
{
    ios::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--){
    	int n,m;
    	cin>>n>>m;
    	int x,y;
    	init(n);
    	int select[MAX];
    	for(int i=1;i<=m;i++){
    		cin>>x>>y;
    		edges[i]=pii(x,y);
    	}
    	for(int i=0;i<n-1;i++)cin>>select[i];
    	if(is_spanning_tree(select,n-1))cout<<"YES\n";
    	else cout<<"NO\n";
    }
    return 0;
}
