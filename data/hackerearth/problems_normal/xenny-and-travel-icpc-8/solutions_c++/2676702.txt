#include <bits/stdc++.h>
using namespace std;

#define INF 10000

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vector<int> > vvi;
typedef pair<int,int> ii;
typedef vector<pair<int,int> > vii;
typedef vector<vector<pair<int,int> > > vvii;

#define all(x) x.begin(), x.end()
#define tr(x,it) for(auto it = x.begin();it!=x.end();++it)
#define ntr(x,it) for(auto it = x.rbegin();it!=x.rend();++it)
#define sz(a) int((a).size()) 
#define pb push_back 
#define PB pop_back
#define pf push_front
#define PF pop_front
#define MP make_pair
#define clr clear
#define rz resize
#define C(a,b) memset(a,b,sizeof(a))
#define ia(a,n) FOR(i,0,n-1)cin>>a[i]
#define ia1(a,n) FOR(i,1,n)cin>>a[i]
#define fpresent(c,x) ((c).find(x) != (c).end())  // set,map
#define present(c,x) (find(all(c),x) != (c).end())  //vector
#define F first
#define S second
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define NFOR(i,a,b) for(int i=a;i>=b;--i)
#define rep(i,n) FOR(i,0,n-1)
#define TCASE int __T;cin>>__T;FOR(Tc,1,__T)
inline int add(int a,int b){a+=b;if(a>=INF)a-=INF;return a;}
inline int mul(int a,int b){return (int)(((ll)a*(ll)b)%INF);}

int road[1251][1251];
int rail[1251][1251];
int ru[1251];
int rv[1251];

int main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    
    int n;
    cin>>n;
    
    FOR(i,1,n)	FOR(j,1,n)	cin>>road[i][j];
    FOR(i,1,n)	FOR(j,1,n)	cin>>rail[i][j];
    int u,v;
    cin>>u>>v;
    
    FOR(i,1,n)ru[i]=INF;
    ru[u]=0;
    
	priority_queue < ii,vii,greater<ii> > pq;    
    
	
	
	
	pq.push({0,u});
	
	while (!pq.empty()) 
	{
		ii top=pq.top();
		pq.pop();
		int y=top.F;
		int x=top.S;
		if(y<=ru[x])
		{
			FOR(i,1,n)
			{
				if(i==x)continue;
				if(i==v)continue;
				if(ru[i]>ru[x]+road[x][i])
				{
					ru[i]=ru[x]+road[x][i];
					pq.push({ru[i],i});
				}
			}
		}
	}
	while(!pq.empty())pq.pop();
	
	
	FOR(i,1,n)rv[i]=INF;
	rv[v]=0;
	
	pq.push({0,v});
	
	while (!pq.empty()) 
	{
		ii top=pq.top();
		pq.pop();
		int y=top.F;
		int x=top.S;
		if(y<=rv[x])
		{
			FOR(i,1,n)
			{
				if(i==x)continue;
				if(i==u)continue;
				if(rv[i]>rv[x]+rail[i][x])
				{
					rv[i]=rv[x]+rail[i][x];
					pq.push({rv[i],i});
				}
			}
		}
	}
	while(!pq.empty())pq.pop();
	
	int ans=INF;
	FOR(i,1,n)
	{
		if(i==u or i==v)continue;
		ans=min(ans,ru[i]+rv[i]);
	}
	

    FOR(i,1,n)ru[i]=INF;
    ru[u]=0;
    
  
    while(!pq.empty())pq.pop();
	
	
	
	pq.push({0,u});
	
	while (!pq.empty()) 
	{
		ii top=pq.top();
		pq.pop();
		int y=top.F;
		int x=top.S;
		if(y<=ru[x])
		{
			FOR(i,1,n)
			{
				if(i==x)continue;
				if(i==v)continue;
				if(ru[i]>ru[x]+rail[x][i])
				{
					ru[i]=ru[x]+rail[x][i];
					pq.push({ru[i],i});
				}
			}
		}
	}
	while(!pq.empty())pq.pop();
	
	FOR(i,1,n)rv[i]=INF;
	rv[v]=0;
	
	pq.push({0,v});
	
	while (!pq.empty()) 
	{
		ii top=pq.top();
		pq.pop();
		int y=top.F;
		int x=top.S;
		if(y<=rv[x])
		{
			FOR(i,1,n)
			{
				if(i==x)continue;
				if(i==u)continue;
				if(rv[i]>rv[x]+road[i][x])
				{
					rv[i]=rv[x]+road[i][x];
					pq.push({rv[i],i});
				}
			}
		}
	}
	while(!pq.empty())pq.pop();
	
	
	FOR(i,1,n)
	{
		if(i==u or i==v)continue;
		ans=min(ans,ru[i]+rv[i]);
	}
	
    cout<<ans;
    
    
	return 0;
}
