#include<iostream>
#include<algorithm>
using namespace std;
string dp[10010][2];
string add(const string &a,const string &b){
	int carry=0;
	string s1=a;
	reverse(s1.begin(),s1.end());
	string s2=b;
	reverse(s2.begin(),s2.end());
	int lim=min(s1.length(),s2.length());
	string res="";
	int i;
	for(i=0;i<lim;i++){
		int temp=s1[i]+s2[i]-'0'-'0'+carry;
		carry=temp/10;
		temp%=10;
		temp+='0';
		char ch=temp;
		res+=temp;
	}
	if(lim==s1.length()){
		while(i<s2.length()){
			int temp=s2[i]-'0'+carry;
			carry=temp/10;
			temp%=10;
			temp+='0';
			char ch=temp;
			res+=ch;
			i++;
		}
	}
	else{
		while(i<s1.length()){
			int temp=s1[i]-'0'+carry;
			carry=temp/10;
			temp%=10;
			temp+='0';
			char ch=temp;
			res+=ch;
			i++;
		}
	}
	if(carry>0){
		char ch=carry+'0';
		res+=ch;
	}
	reverse(res.begin(),res.end());
	return res;
}
void init(){
	dp[1][0]="1";
	dp[1][1]="1";
	for(int i=2;i<10010;i++){
		dp[i][1]=add(dp[i-1][0],dp[i-1][1]);
		dp[i][0]=dp[i-1][1];
	}
}
int main(){
	int t;
	cin>>t;
	init();
	while(t--){
		int n;
		cin>>n;
		cout<<add(dp[n][0],dp[n][1])<<endl;;
	}
}
