#include<bits/stdc++.h>
using namespace std;
#define pb push_back
int k = 20001;
vector<int> adj[200001];
static bool v[100001];
static int cl[100001];
int one,zero;
void dfs(int cur,int color){
	if(v[cur])
		return;
	v[cur]=true;
	cl[cur]=color;
	if(color)
		one++;
	else
	zero++;
	for(int i=0;i<adj[cur].size();i++){
		dfs(adj[cur][i],1-color);
	}
}
int main(){
	int t;
	scanf("%d",&t);
	for(int te=1;te<=t;te++){
		for(int i=0;i<k;i++)
			adj[i].clear();
		int n;
		scanf("%d",&n);
		int root;
		bool v1[100001];
		memset(v1,false,sizeof(v1));
		for(int i=0;i<n;i++){
			int a,b;
			scanf("%d %d",&a,&b);
			adj[a].pb(b);
			adj[b].pb(a);
			v1[a]=v1[b]=true;
		//	root = a;
		}
		int ans = 0;
		memset(v,false,sizeof(v));
		for(int root=1;root<=2e4;root++)
			if(v1[root]&&!v[root]){
				one = zero = 0;
				dfs(root,1);
				ans += max(one,zero);
			}
		printf("Case %d: %d\n",te,ans);
	}
	return 0;
}