#include<stdio.h>
#define MOD 1000000007
#define LL long long
LL factorial[2000005];
/*
Tutorial TOPCODER
http://community.topcoder.com/tc?module=Static&d1=tutorials&d2=primeNumbers

a^??(n)=1(mod n).
a^(??(n)-1)=a^(-1) mod n
//Invers modulo

*/
LL pow(LL a, LL b, LL mod) {
    LL x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>mod) x%=mod;
        }
        y = (y*y);
        if(y>mod) y%=mod;
        b /= 2;
    }
    return x;
}

LL modInverse(LL a, LL m){
    return pow(a,500000001,m);
}
int main()
{

        int t,a,b,n,i;
        factorial[1]=1;
        for (i=2;i<=2000001;i++)
                factorial[i]=(factorial[i-1]*i)%(MOD-1);
        scanf("%d",&t);
        while(t--)
        {
                scanf("%d%d",&b,&n);
                LL nCr=((factorial[2*n])*(modInverse(factorial[n],(MOD-1))))%(MOD-1);
                nCr=((nCr)*(modInverse(factorial[n],(MOD-1))))%(MOD-1);
                LL nCr_pow_c=pow(nCr,b,MOD-1);
                //LL a_pow_nCr_pow_c=pow(a,nCr_pow_c,MOD);
                printf("%lld\n",nCr_pow_c);
        }
        return 0;
}