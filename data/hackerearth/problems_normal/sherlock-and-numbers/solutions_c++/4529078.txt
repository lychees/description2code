#include <iostream>
using namespace std;
int n,k,p;
int binarysearch(int *a,int start,int end,int k)
{
	if(start>end)
	{
		return -1;
	}
	int mid=start+(end-start)/2;
	if(a[mid]<=k && a[mid+1]>k)
	{
		return mid;
	}
	else if(a[mid]<k)
	{
		return binarysearch(a,mid+1,end,k);
	}
	else if(a[mid]>k)
	{
		return binarysearch(a,start,mid-1,k);
	}
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    	cin>>n;
    	cin>>k;
    	cin>>p;
    	int a[k];
    	for(int i=0;i<k;i++)
    	{
    		cin>>a[i];
    	}
    	if(p>a[k-1])
    	{
    		int n1=binarysearch(a,0,k-1,a[k-1])+1;
    		p=p+n1;
    	}
    	else
    	{
    		
    		int n1=binarysearch(a,0,k-1,p)+1;
    	while(p!=(p+n1))
    	{
    		p=p+n1;
    		if(p>a[k-1])
    		{
    			n1=binarysearch(a,0,k-1,a[k-1])-binarysearch(a,0,k-1,p-n1+1);
    			p=p+n1;
    			break;
    			
    		}
    		n1=binarysearch(a,0,k-1,p)-binarysearch(a,0,k-1,p-n1);
    	}
    	}
    	if(p>n)
    	{
    		cout<<-1<<endl;
    	}
    	else{
    		cout<<p<<endl;
    	}
    	
    }
    return 0;
}
