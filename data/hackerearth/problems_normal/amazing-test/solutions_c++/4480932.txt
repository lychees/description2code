#include <iostream>
#include <string>
using namespace std;

int arr[102];
int n,x;

bool knapsack(int total){
    int dp[x+1][n+1];
    for(int i = 0;i<=x;i++){
        dp[i][0] = 0;
    }
    for(int i = 0;i<=n;i++){
        dp[0][i] = 0;
    }
    for(int w = 1;w<=x;w++){
        for(int i = 1;i<=n;i++){
            if(w>=arr[i]){
                dp[w][i] = max(dp[w-arr[i]][i-1] + arr[i], dp[w][i-1]);
            }
            else{
                dp[w][i] = 0;
            }
        }
    }

    if(total-dp[x][n] <= x){
        return true;
    }
    return false;
}

int main()
{
    int test;
    cin>>test;
    while(test--){
        cin>>n>>x;
        int sum = 0;
        bool np = false;
        for(int i =1;i<=n;i++){
            cin>>arr[i];
            if(arr[i]>x){
                np = true;
            }
            sum+=arr[i];
        }
        if(sum<x){
            cout<<"YES\n";
            continue;
        }
        else if(np || sum>2 * x){
            cout<<"NO\n";
            continue;
        }

        bool possible = knapsack(sum);
        if(possible){
            cout<<"YES\n";
        }
        else{
            cout<<"NO\n";
        }
    }
}
