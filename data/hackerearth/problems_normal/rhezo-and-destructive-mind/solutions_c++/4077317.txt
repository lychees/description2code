#include <iostream>
#include <bits/stdc++.h>
using namespace std;
#define ll long long
bool vis[105];
ll n,m,q;
vector<ll>v[105];
#define pb push_back
#define mp make_pair
void dfs(ll index){
	vis[index] = true;
	for(auto &p:v[index]){
		if(vis[p]==false){
			dfs(p);
		}
	}
}
int main()
{
	cin>>n>>m;
	ll x,y;
	ll a[105],b[105];
	ll aa[105], bb[105];
	for(ll i=0;i<m;i++){
		cin>>x>>y;
		v[x].pb(y);
		v[y].pb(x);
		aa[i] = x;
		bb[i] =y;
	}
	ll conn = 0;
	for(ll i=1;i<=n;i++){
		if(vis[i]==false){
			dfs(i);	
			conn++;
		}
		
	}
	//conn holds the initial number of connected components
	cin>>q;
	ll conn1 = 0;
	while(q--){
		conn1=0;
		int anss = 0;
		for(ll i=0;i<m;i++){
			a[i] = aa[i];
			b[i] = bb[i];
		}
		for(ll i=0;i<105;i++){
			v[i].clear();
			vis[i] = false;
		}
		cin>>x;
		for(ll i=0;i<m;i++){
			if(a[i]==x){a[i]=-1;anss++;}
			if(b[i]==x){b[i]=-1;anss++;}
			
		}
		for(ll i=0;i<m;i++){
			if(a[i]!=-1 && b[i]!=-1){
				v[a[i]].pb(b[i]);
				v[b[i]].pb(a[i]);
			}
		}
		
		for(ll i=1;i<=n;i++){
			if(i==x)continue;
		
			if(vis[i]==false){
				dfs(i);
				conn1++;
			}
		}
	//	cout<<"con1 is "<<conn1<<endl;
		if(conn1 <= conn){
			printf("Not Satisfied\n");
		}
		else{
			cout<<"Satisfied "<<anss<<endl;
		}
	
	}

    return 0;
}
