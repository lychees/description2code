#include <bits/stdc++.h>
#define INF 1000000009
//#define mod 1000000007
#define vi vector<int>
#define vit vector<int>::iterator
#define ll long long
#define ii pair<int, int>
#define vii vector<ii>
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define CLR(arr) memset(arr, 0, sizeof(arr))
#define bas 31LL
#define prime 1000000009LL
using namespace std;

ll mod_exp(ll base, ll exp, ll mod)
{
    ll ans = 1;
    base = base%mod;
    while(exp)
    {
        if(exp&1)
            ans = (ans*base)%mod;
        base = (base*base)%mod;
        exp>>=1;
    }
    return ans;
}

ll table[100005];

void generate_table(string &S)
{
    ll x = bas;
    table[0] = S[0];
    for(int i=1; i<S.size(); ++i)
    {
        table[i] = (table[i-1] + S[i]*x)%prime;
        x = (x*bas)%prime;
    }
}

ll sub(int l, int r)
{
    if(l!=0)
        return (table[r] - table[l-1] + prime)%prime;
    return table[r];
}


int main()
{
    string S;
    cin>>S;
    generate_table(S);
    int Q;
    cin>>Q;
    ll inv = mod_exp(bas, prime-2, prime);
    while(Q--)
    {
        int l1, r1, l2, r2;
        scanf("%d %d %d %d", &l1, &r1, &l2, &r2);
        if(l1>l2)
        {
            swap(l1, l2);
            swap(r1, r2);
        }
        //ll hash1 = sub(l1-1, r1-1);
        //ll hash2 = (sub(l2-1, r2-1)*mod_exp(inv, l2-l1, prime))%prime;
        ll hash1 = (sub(l1-1, r1-1)*mod_exp(bas,l2-l1,prime))%prime;
        ll hash2 = sub(l2-1, r2-1);
        if(r1-l1==r2-l2 && hash1==hash2)
            cout<<"Yes"<<endl;
        else
            cout<<"No"<<endl;
    }
    return 0;
}
