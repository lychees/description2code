// Author : ? Ujjawal Dixit (HELLGEEK) IPG_2013117 ABV-IIITM
// Task : 

#include <bits/stdc++.h>
#define MOD             1000000007
#define MAX             (int)1e9
#define MIN             (int)-1e9
#define PI              (acos(-1.0))
#define linf            (1LL<<62)
#define inf             (0x7f7f7f7f)

using namespace std;
typedef double ld;
typedef long long ll;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii; 

#define tracearr(a,n)            for(int i=0;i<n;i++)  cout<<a[i]<<" ";
#define tracemat(a,n,m)          for(int i=0;i<n;i++) { for(int j=0;j<m;j++)  cout<<a[i]<<" "; cout<<endl; } 
#define tracepair(a,n)           for(int i=0;i<n;i++)  cout<<a[i].first<<" "<<a[i].second<<endl;
#define mp(v,a,b)                v.push_back(make_pair(a,b))
#define fi(filename)             freopen(filename,"r",stdin)
#define fo(filename)             freopen(filename,"w",stdout)
#define FOR(i,n,m)               for(int i=0;i<n;i+=m)
#define For(i,n,m)               for(int i=1;i<=n;i+=m)
#define repl(i,a,b,m)            for(int i=a;i<b;i+=m)
#define rep(i,a,b,m)             for(int i=a;i<=b;i+=m)
#define countbits(value)         __builtin_popcount(value)
#define countbitsll(value)       __builtin_popcountll(value)
#define trailing0bits(value)     __builtin_parity(value)
#define leading0bits(value)      __builtin_clz(value)
#define max(a,b)                 (a>=b?a:b)
#define min(a,b)                 (a<b?a:b)
#define s(a)                     scanf("%d",&a)
#define sll(a)                   scanf("%lld",&a)
#define p(a)                     printf("%d",a)
#define pll(a)                   printf("%lld",a)
#define pln()                    printf("\n")
#define m(x,n,value)             fill(x,x+n,value)
#define getstr(in)               getline(cin,in)
#define getc()                   getchar()
#define uj()                     int t; scanf("%d",&t); while(t--)
template<typename T> T gcd(T a, T b) {if(!b) return a;return gcd(b, a % b);}
template<typename T> T lcm(T a, T b) {return a * b / gcd(a, b);}
ll modpow(ll a,ll b,ll mod){ll x=1,y=a;while(b>0){if(b%2==0){	x=(x*y);if(x>mod)  x%=mod;}y=y*y;if(y>mod)   y%=mod;b/=2;}return x;}
ll mpow(ll a, ll n) {ll ret=1;ll b=a;while(n) {if(n&1) ret=(ret*b)%MOD;b=(b*b)%MOD;n>>=1;}return (ll)ret;}
ll modInverse(ll a, ll p){return modpow(a,p-2,p);}
ll extGcd(ll a,ll b,ll& x,ll& y){if(b==0){x=1;y=0;return a;}else{int g=extGcd(b,a%b,y,x);y-=a/b*x;return g;}}

int a[100010];
int incr[100010];
int incl[100010];

int main() {
    int n,q;
    s(n); s(q);
    FOR(i,n,1) s(a[i]);
    for (int i = 1 ; i < n; i++) {
        incr[i] = i;
        incl[i] = i;
        if (a[i]<=a[i-1]) 
            incl[i] = incl[i-1];
    }
    for (int i = n-2; i >= 0; i--) {
        if (a[i] <= a[i+1]) 
            incr[i] = incr[i+1];
    }
    //tracearr(incl,n); pln();
    //tracearr(incr,n); pln();
    while(q--) {
        int x,y;
        s(x); s(y);
        x--,y--;
        if (incr[x] >= incl[y]) 
             cout << "Yes"<<endl;
        else 
             cout << "No"<<endl;
    }
    return 0;
}