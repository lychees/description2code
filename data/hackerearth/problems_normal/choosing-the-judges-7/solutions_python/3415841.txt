from heapq import *


def max_score(scores, n):
    """
    :param scores: scores given by individual judge
    :param n: the number of judges
    :return: the maximum score johny boy can achieve
    """
    if len(scores) != n:
        raise ValueError()

    if n <= 0:
        return 0
    if n == 1:
        return scores[0]

    opt = [0] * n
    heap = []
    last = scores[1]

    opt[0], opt[1] = scores[0], scores[1]
    heappush(heap, -opt[0])

    for i in xrange(2, n):
        opt[i] = scores[i] + -heap[0]
        heappush(heap, -last)
        last = opt[i]

    return max(opt)


def main():
    t = int(raw_input())
    for i in xrange(t):
        n = int(raw_input())
        a = map(int, raw_input().split())
        print("Case {}: {}".format(i + 1, max_score(a, n)))


if __name__ == '__main__':
    main()
