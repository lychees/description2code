#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>

using namespace std;
long long n;
vector<long long>dp(10000+5);
vector<long long>pts(n+5);

long long points(long long i)
{
    if(i>n)
    {
        return 0;
    }
    if(dp[i])
    {
        return dp[i];
    }
    long long first = pts[i] + points(i+2);
    long long second = pts[i+1] + points(i+3);
    long long third = points(i+1);
    return dp[i] = max(first, max(second, third)); 
}

auto main()->int
{
    long long t;
    cin>>t;
    for(auto i=1;i<=t;i++)
    {
        cin>>n;
        vector<long long>dp_p(n+5);
        vector<long long>pts_p(n+5);
        dp = dp_p;
        pts = pts_p;
        for(auto j=0;j<n;j++)
        {
            cin>>pts[j];
        }
        points(0);
        cout<<"Case "<<i<<": "<<*max_element(dp.begin(),dp.end())<<endl;
    }
}