#include<iostream>
#include<cstdio>
#include<map>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<set>
#include<stack>

#define fill(a,val) memset(a, (val), sizeof a)
#define pb push_back
#define scantype int
#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b
#define lli long long int
#define N 100003

lli powermod(lli _a,lli _b){lli _r=1;while(_b){if(_b%2==1)_r=(_r*_a);_b/=2;_a=(_a*_a);}return _r;}

using namespace std;

void scan(scantype &x);

lli tree[3][N+4]; //sarkhav,upar tanso,niche transo (0,1,2)
int n;
lli mod = 1e9+7;

void update(int idx,lli val,int kyo)
{
    for(int i=idx;i<=N;i+=(i&(-i)))
      tree[kyo][i] = (tree[kyo][i] + val)%mod;
}

lli get(int idx,int kyo)
{
    lli sum=0;
    for(int i=idx;i>0;i-=(i&(-i)))
        sum =  (sum + tree[kyo][i])%mod;
    return sum;
}

int main(void)
{
  cin>>n;

  lli res=0;
  for(int i=0;i<n;i++)
  {
      int x;
      scan(x);

      lli new_lower,new_upper;

      new_lower = (get(N,1)-get(x,1)+mod)%mod;
      new_upper = get(x-1,2);

      new_upper = (new_upper + get(x-1,0))%mod;
      new_lower = (new_lower + ( (get(N,0)-get(x,0)+mod)%mod))%mod;

      res = (res+new_lower+new_upper)%mod;

      update(x,1,0);
      update(x,new_upper,1);
      update(x,new_lower,2);


  }
  cout<<res;
  return 0;
}









void scan(scantype &x)
{
    /*register int c = getchar(); //for positive
    x = 0;
    for(;(c<48 || c>57);c = getchar());
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}*/

    register int c = getchar(); //for negative/positive
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;c>47 && c<58;c = getchar()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
