
#include <iostream>
using namespace std;

#include <stdio.h>
#include <math.h>

int hcfFun (int a , int b){
	if(b==0) return a;
	return hcfFun(b, a%b);
}

int power(int x, unsigned int y)
{
    int temp;
    if( y == 0)
        return 1;
    temp = power(x, y/2);
    if (y%2 == 0)
        return temp*temp;
    else
        return x*temp*temp;
}

int main()
{
	int test,n;
			scanf("%d",&test);
	while(test--){
		scanf("%d",&n);
		int c = n,digit,q;
		int next = 0 , prev = 0, hcf;
			digit=0;
			while(c){
			digit++;
			c=c/10;
			}
		c = n;
		int x = digit-1;
		//cout<<x<<endl;
		int pw = power(10,x);
		//cout<<"pow "<<p<<" "<<digit<<endl;
		int p = pw;
		int flag =1;
		int flag19 = c/p;
		//cout<<flag19<<endl;
		while(flag){
                flag =0;
                flag19 = c/p;
		while(p){
             q = c/p;
            // cout<<q<<endl;
             if(q == 9) {
                    flag = 1;
                    }

             if(q%2==1){
                next = next + (q+1)*p;
                 break;
             }
             next = next + q*p;
             c = c%p;
             p = p/10;
		}
		if(flag19 == 9)
                 p = pw*10;
                 else
                    p = pw;
                   // cout<<"next "<<next<<" p "<<p<<endl;
                c = next;
                next = 0;

        }
/*		cout<<next<<endl;
		if(flag == 1){
                p = pw*10;
                c = next;
                next = 0;
                prev = 0;
         while(p){
             q = c/p;
             if(q == 9) flag = 1;
             if(q%2==1){
                next = next + (q+1)*p;
                 break;
             }
             next = next + q*p;
             c = c%p;
             p = p/10;
            }
		}*/
		next = c;
		if(next==n){
            cout<<"Unlimited Power"<<endl;
           continue;
		}
        //if(next / p)
		c = n;
	//	cout<<p<<endl;
		p = pw;
        while(p){
             q = c/p;
             if(q%2==1){
                prev = prev + (q-1)*p;
                while(p){
                        p=p/10;
                prev  = prev + 8*p;
                }
                 break;
             }
             prev = prev + q*p;
             c = c%p;
             p = p/10;
		}

           // cout<<next<<" "<< prev<<endl;
		hcf = hcfFun(next-n, n-prev);
		//cout<<(next-n)/hcf<<"/"<<(n-prev)/hcf<<endl;
		printf("%d/%d",(next-n)/hcf, (n-prev)/hcf);
		printf("\n");
	//	cout<<hcfFun(12, 9);
	}
    return 0;
}
