#include <iostream>
using namespace std;

int sizeofPalindrome(string s)
{
	int i=0, a, b, templargest = 0;
	int r = s.size();

	int largest = 0;
	for (i = 0; i < r; i++)
	{
		
			
		templargest = 1;
		a = i;
		b = i;
		a--;
		b++;
		while(a!= -1 && b != r && s[a] == s[b])
		{
			
			a--;
			b++;
			templargest+=2;
		}
		//cout<<"tl: "<<templargest<<" and";
		if(templargest > largest)
			largest = templargest;

		if(i!=r-1)
	   {
	   	templargest = 0;
		a = i;
		b = i+1;
		while(a!= -1 && b != r && s[a] == s[b])
		{
	
			a--;
			b++;
			templargest+=2;
		}
	}
		//cout<<"tl: "<<templargest<<endl;
		if(templargest > largest)
			largest = templargest;
	}
	return largest;
}

bool isPrime(int num)
{
	int i;
	if(num == 1)
		return false;
	/*(num == 2 || num == 3)
		return true;*/
	for (int i = 2; i*i <= num; i++)
	{
		if(num%i == 0)
		{
			return false;
			break;
		}
	}
	return true;
}

int main()
{
	int t,i,j,size;
	string s;
	cin>>t;
	while(t--)
	{
		cin>>s;
		size = sizeofPalindrome(s);
		if(isPrime(size))
			cout<<"YES"<<endl;
		else
			cout<<"NO"<<endl;
	}
	return 0;
}
