#include <bits/stdc++.h>
using namespace std;
vector<int> v[1005];
int distances[1005], visited[1005];
int graph[1005][1005];
void bfs(int m)
{
	queue<int> q;
	q.push(m);
	distances[m] = 0;
	visited[m] = 1;
	while(!q.empty())
	{
		int cur = q.front();
		q.pop();
		for(int node: v[cur])
		{
			if(visited[node]==0)
			{
				visited[node] = 1;
				distances[node] = distances[cur]+1;
				q.push(node);
			}
		}
	}
}
int main()
{
    //cout << "Hello World!" << endl;
    int n,m,st,en;
    scanf("%d%d%d%d",&n,&m,&st,&en);
    int i,j;
    for(i=1;i<=n;i++)
    {
    	distances[i] = -1;
    	visited[i] = 0;
    	for(j=i+1;j<=n;j++)
    	{
    		graph[i][j] = graph[j][i] = 1;
    	}
    }
    while(m--)
    {
    	scanf("%d%d",&i,&j);
    	graph[i][j] = graph[j][i] = 0;
    }
    for(i=1;i<=n;i++)
    for(j=i+1;j<=n;j++)
    if(graph[i][j]){
    	v[i].push_back(j);
    	v[j].push_back(i);
    }
    bfs(st);
    printf("%d\n",distances[en]);
    return 0;
}
