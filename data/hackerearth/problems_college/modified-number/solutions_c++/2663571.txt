#define all(c) c.begin(),c.end()  // c is here any container , for begin and end iterator.
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<vector>
#include<algorithm>
#define fori(t,i) for(int i=1;i<=t;i++)
#include<set>
#include<map>
#include<cstring>
#define present(container,element)  (container.find(element)!=container.end())                        // for set and map.
#define cpresent(container,element) (find(all(container),element)!=container.end())                   // for vector generally.
#define tr(container,it) \
                        for(map<string,int>::iterator it = container.begin();it!=container.end();it++)
                        

#define tri(container,it) \
                        for(set<int> ::reverse_iterator it = container.rbegin();it!=container.rend();it++)


#define trr(container,it) \
                        for(vector<int> ::iterator it = container.begin();it!=container.end();it++)                      
#include <stdio.h>
#include<math.h>

#include <sstream>

namespace patch
{
    template < typename T > std::string to_string( const T& n )
    {
        std::ostringstream stm ;
        stm << n ;
        return stm.str() ;
    }
}
using namespace std;

int main(){
	
	string str;
	int n;
	int t=100000;
	int a[100002];
	//cin >> t;
	int ti;
	long long int sqr=0;
	fori(t,i){
		//cin  >> ti;
		
		sqr=i*i;
		if(sqr==1){
			
			a[1]=1;
			//cout << "success";
			continue;
		}
		
		string res=patch::to_string(sqr);
		int len=res.size();
		int temp=0;
		int flag=0;
		string str1;
		string str2;
		//cin >> ti;
		for(int j=1;j<len;j++){
			
			str1=res.substr(temp,j);
			if(j<=len-1){
			
			 str2=res.substr(j);
			 
			}
			else
			 str2="0";
			 if (atoi(str2.c_str())==0 && len>=2)
			 	break;
			// cout << str1 << "helo" << str2;
			if(atoi(str1.c_str()) + atoi(str2.c_str()) == i  ){
			//	cout << atoi(str1.c_str()) + atoi(str2.c_str())<<endl;
			//	cout << str1 << "helo" << str2;
				flag=1;
				break ;
			}
			if(j==len-1)
			 	break;
			
			
		}
	//	cout << i;
		if(flag==1){
			a[i]=1;
		//	cout << "success"<< endl;
		}
		
		else{
			a[i]=0;
		}
	}
	//cout << "sucess";
	 int ca;
	 cin >>ca;
	 int num=0;
	 
	
	 
	 	cin >>num;
	 	int count=0;
	 	for(int u=ca;u<=num;u++){
	 		
	 		if(a[u]==1 ){
	 			count++;
	 			cout << u<< " ";
			 }
	 		
		 }
	 	if(count==0)
	 	cout << "INVALID RANGE";
	 	cout <<"\n";
	 
	
	
	
	
	return 0;	
}