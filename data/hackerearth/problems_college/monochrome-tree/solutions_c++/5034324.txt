#include <bits/stdc++.h>

using namespace std;

#define mi 1000000007
#define rep(i,a,b) for(i=a;i<b;i++)
#define repd(i,a,b,d) for (i=a;i<b;i+=d)
#define repv(i,a,b) for(i=b-1;i>=a;i--)
#define vi vector<int>
#define vl vector<long long int>
#define vvi vector <vector <int> >
#define ll long long int
#define ld long double
#define fi first
#define se second
#define pb push_back


ll paw(ll a,ll b);

vvi adj;
vi col,ch,sam,dp,op,re,vis;

int dfs(int v,int p)
{
  int i,si=adj[v].size(),x;

  if(col[v]==re[v])
	{
	  sam[v]=1;
	  dp[v]=0;
	}
  else
	{
	  //	  cout<<"else";
	  sam[v]=0;
	  dp[v]=1;
	}
  op[v]=1-dp[v];
  rep(i,0,si)
	if (adj[v][i]!=p)
	  dfs(adj[v][i],v);


  
  ch[v]=1;
  rep(i,0,si)
	{
	  if (adj[v][i]!=p)
		ch[v]+=ch[adj[v][i]];
	}

  rep(i,0,si)
	if (adj[v][i]!=p)
	  {
		dp[v] += min(dp[adj[v][i]],op[adj[v][i]]+1);
		op[v] += min(op[adj[v][i]],dp[adj[v][i]]+1);
	  }
  
  rep(i,0,si)
	if (adj[v][i]!=p)
	  sam[v] += sam[adj[v][i]];
  
  return 1;
}

int main()
{
  int n,u,v,i;

  
  cin>>n;

  re.resize(n+10);
  adj.resize(n+10);
  col.resize(n+10);
  ch.resize(n+10);
  sam.resize(n+10);
  dp.resize(n+10);
  op.resize(n+10);

  rep(i,0,n-1)
	{
	  cin>>u>>v;
	  adj[u].pb(v);
	  adj[v].pb(u);
	}

  adj[0].pb(1);

  col[0]=re[0]=1;

  rep(i,1,n+1)
  	cin>>col[i];

  rep(i,1,n+1)
  	cin>>re[i];

  dfs(0,0); 

  //  rep(i,1,n+1)
	//	cout<<dp[i]<<" ";
  
	//  cout<<"sam"<<sam[0]<<endl;
  cout<<dp[0]<<endl;

  return 0;
}


ll paw(ll a, ll b)
{
  ll x=((a)%mi),ans=1;
  while(b>0)
    {
      if (b&1)
	ans=(ans*x)%mi;
      x=(x*x)%mi;
      b>>=1;
    }
  return ans;
}
