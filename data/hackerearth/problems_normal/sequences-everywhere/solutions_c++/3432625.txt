#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

const ll lcms[] = {
	1,1,2,6,12,60,60,420,840,2520,2520,27720,27720,360360,360360,360360,720720,12252240,12252240,232792560,232792560,232792560,232792560,5354228880,5354228880,26771144400,26771144400,80313433200,80313433200,2329089562800,2329089562800,72201776446800,144403552893600,144403552893600,144403552893600,144403552893600,144403552893600,5342931457063200,5342931457063200,5342931457063200,5342931457063200,219060189739591200,219060189739591200
};

ll solve(ll N) {
	ll r = 0;
	r += N;						//1: x >= 1
	r += max(0LL, N - 2);		//2: x >= 3
	r += max(0LL, N - 2) / 2;	//3: x >= 4, x % 2 == 0
	//4: f(x) >= 4, f(x) % 2 == 0
	for(int y = 4; y < (int)(sizeof(lcms) / sizeof(*lcms)); y += 2)
		r += (N / lcms[y - 1]) - (N / lcms[y]);
	return r;
}

int main() {
	long long A; long long B;
	while(~scanf("%lld%lld", &A, &B)) {
		ll ans = solve(B) - solve(A - 1);
		printf("%lld\n", ans);
	}
	return 0;
}
