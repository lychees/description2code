#include<iostream>
#include<cstdio>
#include<iomanip>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
#include<sstream>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};
typedef struct 
{
	int id;
	double x, y, z;
}point;

bool comp(const point& a,const point& b)
{
	return (a.z > b.z);
}


int main()
{
	ios_base::sync_with_stdio(false);
	int i, n, ans=1, j;
	cin >> n;
	vi v(n+1),dp(n+1,1);
	for( i=1;i<=n;i++ )
	{
		cin >> v[i];
	}
	for( i=2;i<=n;i++ )
	{
		for( j=i-1;j>0;j-- )
		{
			if( ( abs(v[i]) > abs(v[j])) && ((ll)(v[i])*(ll)(v[j]) < 0) )
			{
				dp[i]=max(dp[i],dp[j] +1);
				ans=max(ans,dp[i]);
			}
		}
	}
	cout << ans;
    return 0;
}