#include <bits/stdc++.h>
using namespace std;
typedef pair<int,int> pii;
typedef pair<int,pii> pip;
const int MAXN = 100005;
int n,m,par[MAXN];
long long int prng_x,prng_a,prng_c,prng_mod;
int get()
{
	prng_x = (prng_a*prng_x + prng_c)%prng_mod;
	return prng_x;
}
int parent(int pos)
{
	if(par[pos] != pos)
		par[pos] = parent(par[pos]);
	return par[pos];
}
long long int MST(vector <pip> &edges)
{
	for (int i = 0; i < n; ++i)
		par[i] = i;
	sort(edges.begin(), edges.end());
	long long int ans = 0;
	vector <pip> temp;
	for (int i = 0; i < edges.size(); ++i)
	{
		int u = edges[i].second.first, v = edges[i].second.second, w = edges[i].first;
		u = parent(u);
		v = parent(v);
		if(u != v)
		{
			ans+=w;
			par[u] = v;
			temp.push_back(edges[i]);
		}
	}
	edges = temp;
	return ans;
}
int main()
{
	cin>>n>>m;
	cin>>prng_x>>prng_a>>prng_c>>prng_mod;
	vector <pip> edges;
	for (int i = 0; i < m; ++i)
	{
		int u = get()%n, v = get()%n, w = get();
		edges.push_back(pip(w,pii(u,v)));
		if(edges.size() > 2*n)
		MST(edges);
	}
	cout<<MST(edges)<<"\n";
	return 0;
}