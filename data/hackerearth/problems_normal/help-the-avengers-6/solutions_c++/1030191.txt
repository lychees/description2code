#include <bits/stdc++.h>
using namespace std;

int n, a[33333], flag[1000100], primes, tree[33333];

int get(int x)
{
  int res = 0;
  for (int i = x; i; i -= i & -i) res += tree[i];
  return res;
}

void add(int x, int v)
{
  for (int i = x; i <= n; i += i & -i) tree[i] += v;
}

int main()
{
  for (int i = 2; i < 999; i++)
    if (!flag[i])
      for (int j = i * i; j <= 1000000; j += i)
        flag[j] = 1;
  
  flag[1] = -1;
  for (int i = 2; i <= 1000000; i++)
    if (!flag[i]) flag[i] = primes++;
    else flag[i] = -1;
    
  ios::sync_with_stdio(0);
  int test, Q, x, y;
  string type;
  cin >> test;
  while (test--)
  {
    cin >> n;
    memset(tree, 0, sizeof tree);
    for (int i = 1; i <= n; i++) 
    {
      cin >> a[i];
      if (flag[a[i]] >= 0) add(i, 1);
    }
    
    cin >> Q;
    while (Q--)
    {
      cin >> type >> x >> y;
      if (type == "A") cout << get(y) - get(x - 1) << '\n';
      else 
      {
        if (flag[a[x]] >= 0 && flag[y] < 0) add(x, -1);
        else if (flag[a[x]] < 0 && flag[y] >= 0) add(x, 1);
        a[x] = y;
      }
    }
  }
}
