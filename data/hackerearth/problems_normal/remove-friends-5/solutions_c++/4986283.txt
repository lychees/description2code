#include <iostream>
#include<cstdlib>
using namespace std;
struct tree {
  long	int data;
	struct tree *prev;
	struct tree *next;
};
	
void initialise(struct tree **head,long int g,struct tree **pr){
	struct tree *d,*m;m=*pr;
	d=(struct tree *)malloc(sizeof(struct tree));
	d->data=g;
	if(m==NULL){d->prev=NULL;*pr=d;*head=d;}
	else{
	m->next=d;d->prev=m;*pr=m;*pr=d;}
	}

int main()
{
	struct tree *head=NULL,*temp,*temp1,*nexxt,*prev1=NULL;
    long int x,z,l,p;
    cin>>x;
    while(x!=0)
    {
    	cin>>z>>l;
    	while(z!=0){
    		cin>>p;
      initialise(&head,p,&prev1);
      z--;
    	}
    	temp=head;
    	while(l!=0){
    	
    		if(head==NULL)break;
    		if(temp->data<temp->next->data ){
    		temp1=temp;
    		nexxt=temp->next;
    		if(temp1==head){temp->next->prev=NULL;head=temp->next;}
    		if(temp->prev!=NULL){temp->prev->next=temp->next;temp->next->prev=temp->prev;
    		nexxt=temp->next->prev;}
    		temp=nexxt;
    			free(temp1);l--;
    		}
    		else temp=temp->next;
    	
    			
    		
    	}
    	while(head!=NULL){cout<<head->data<<" ";head=head->next;}
    	cout<<"\n";
    	l=0;head=NULL;temp=NULL;temp1=NULL;prev1=NULL;
         x--;
    }
    	
    
    return 0;
}
