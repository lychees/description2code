/* --- author: enot-the-rockstar ---*/
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <ctime>
#include <cassert>

#define fs first
#define sc second
#define pb push_back
#define mp make_pair
#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)
#define forit(it,v) for(typeof((v).begin()) it = v.begin() ; it != (v).end() ; ++it)
#define eprintf(...) fprintf(stderr, __VA_ARGS__),fflush(stderr)
#define sz(a) ((int)(a).size())
#define all(a) (a).begin(),a.end()

static inline unsigned long long rdtsc() { unsigned long long d; __asm__ __volatile__ ("rdtsc" : "=A" (d) ); return d; }

using namespace std;

typedef long long ll;
typedef double dbl;
typedef vector<int> vi;
typedef pair<int, int> pi;

const int inf = (int)1e9;
const dbl eps = 1e-9;

/* --- main part --- */

#define TASK "a"

const int maxn = 1010;
dbl a[maxn][maxn];
dbl d[maxn][maxn];

int main()
{
    #ifdef home
        assert(freopen(TASK".in", "r", stdin));
        assert(freopen(TASK".out", "w", stdout));
    #endif
    int tn;
    scanf("%d", &tn);
    forn(tt, tn)
    {
        int n, m;
        scanf("%d%d", &n, &m);
        forn(i, n) forn(j, m) scanf("%lf", &a[i][j]);
        forn(i, n + 1) forn(j, m + 1) d[i][j] = 0;
        d[0][0] = 1;
        forn(i, n) forn(j, m)
        {
            d[i][j + 1] += d[i][j] * a[i][j];
            d[i + 1][j] += d[i][j] * (1 - a[i][j]);
        }
        dbl res = 0;
        forn(i, n) res += (i + m) * d[i][m];
        forn(i, m) res += (i + n) * d[n][i];
        printf("%.6lf\n", res);
    }
    #ifdef home
        eprintf("Time: %d ms\n", (int)(clock() * 1000. / CLOCKS_PER_SEC));
    #endif
    return 0;
}
 