#include <bits/stdc++.h>
using namespace std;
#define LL long long
#define MOD 1000000007
#define matrix vector < vector < LL> >
matrix Res,R,M;
LL F[6];
matrix multiply(matrix A,matrix B)
{
	matrix C;
	C.resize(6);
	for(int i = 0;i<=5;i++)
	{
		C[i].resize(6);
	}
	for(int i = 1;i<=5;i++)
	{
		for(int j = 1;j<=5;j++)
		{
			C[i][j] = 0;
			for(int k = 1;k<=5;k++)
			{
				C[i][j]+=(A[i][k]*B[k][j])%MOD;
			}
			C[i][j]%=MOD;
		}
	}
	return C;
}
matrix Pow(matrix A,LL N)
{
 	if(N == 1)
 		return A;
 	if(N%2)
 		return multiply(A,Pow(A,N-1));
 	matrix Res = Pow(A,N/2);
 	return multiply(Res,Res);
}
void Preprocess()
{
	Res.resize(6);
	M.resize(6);
	for(int i = 0;i<=5;i++)
	{
		M[i].resize(6);
		Res[i].resize(6);
	}
}
int Solve(int N)
{
	for(int i = 0;i<=5;i++)
	{
		for(int j = 0;j<=5;j++)
		{
			M[i][j] = 0;
		}
	}
	M[5][1] = 1,M[5][2] = 2,M[5][3] = 1,M[5][4] = 1,M[5][5] = 1;
	M[1][2] = 1;
	M[2][3] = 1;
	M[3][4] = 1;
	M[4][5] = 1;
	if(N == 1)
		return 1;
	Res = Pow(M,N-1);
	LL Ans = 0;
	for(int i = 1;i<=5;i++)
	{
		Ans+=(F[i]*Res[1][i])%MOD;
	}
	return Ans%MOD;
}
int main()
{
	int T;
	Preprocess();
	cin>>T;
	while(T--)
	{
		int N;
		for(int i = 1;i<=5;i++)
			cin>>F[i];
		cin>>N;
		cout << Solve(N+1) << "\n";
	}
	return 0;
}