#include <bits/stdc++.h>
using namespace std;
const int MOD = 1000000007;
const int MAX = 100000 + 7;
vector < int > graph[MAX];
bool visited[MAX];
int N;
long long co = 0;
void dfs (int v)
{
	visited[v] = 1;
	co++;
	for(int i = 0; i  < (int)graph[v].size() ; i++)
	{
		if(!visited[graph[v][i]])
		dfs(graph[v][i]);
	}
	
	return;
}
int main()
{
    int T , a, b , M ;
    cin >> T;
    while (T--)
    {
    	cin >> N >> M ;
    	for(int i = 1; i <=N ; i++)
    	visited[i] = 0 ,graph[i].clear();
    
    	for(int i = 0; i < M ; i++)
    	{
    		cin >> a >> b;
    		graph[a].push_back(b);
    		graph[b].push_back(a);
    	}
    	long long ans = 1LL;
    	for(int i = 1; i <=N; i++)
    	{
    		 if(!visited[i]){
    		 dfs(i);
    		 if(co > 1)
    		 co = ((co*(co-1))/2)%MOD;
    		 
          ans = (ans*co)%MOD;
          co = 0;
          
    	}
    	
    	
    	
    }
    cout << ans << endl;
    }
    return 0;
}
