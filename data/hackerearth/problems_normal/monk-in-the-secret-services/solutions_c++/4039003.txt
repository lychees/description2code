#include<bits/stdc++.h>
#include<vector>
#include<list>
#include<utility>
#include<map>
#include<set>
#include<stack>
#include<queue>
#define mod 1000000007
#define ll long long
using namespace std;
ll i,j;
set < pair<ll,ll> > s[105];
ll dist[105];
ll totaldist[105];
bool vis[105];
void Dij(int start)
{
	memset(dist,-1,sizeof(dist));
	memset(vis,0,sizeof(vis));
	dist[start]=0;
	priority_queue < pair<ll,ll> >PQ;
	PQ.push(make_pair(0,start));
	while(!PQ.empty())
	{
		pair<ll,ll> v=PQ.top();
		PQ.pop();
		if(vis[v.second]==false)
		{//cout<<v.second<<"<--ele considered now"<<endl;
			vis[v.second]=true;
			for(set < pair<ll,ll> >::iterator it=s[v.second].begin();it!=s[v.second].end();it++)
			{
				ll newdist=dist[v.second]+(*it).second;
				if(dist[(*it).first]==-1)
				{
					dist[(*it).first]=newdist;
					PQ.push(make_pair((-1)*newdist,(*it).first));
				}
				if(dist[(*it).first] > newdist)
				{
					dist[(*it).first]=newdist;
					PQ.push(make_pair((-1)*newdist,(*it).first));
				}
			}
		}
		
		
	}
	
	
}
int main()
{
	int T;
	cin>>T;
	while(T--)
	{
		for(i=0;i<105;i++)
		s[i].clear();
		memset(totaldist,0,sizeof(totaldist));
		int N,M;
		cin>>N>>M;
		while(M--)
		{
			int A,B,C;
			cin>>A>>B>>C;
			s[A].insert(make_pair(B,C));
			s[B].insert(make_pair(A,C));
		}
		int S,A,H;
		cin>>S>>A>>H;
		
		Dij(S);
		for(i=1;i<=N;i++)
		totaldist[i]=dist[i];
	//	for(i=1;i<=N;i++)
	//	cout<<totaldist[i]<<" ";
	//	cout<<"<--tot dist after step 1"<<endl;
		
		Dij(A);
		for(i=1;i<=N;i++)
		totaldist[i]+=2*dist[i];
	//	for(i=1;i<=N;i++)
	//	cout<<totaldist[i]<<" ";
	//	cout<<"<--tot dist after step 2"<<endl;
		
		Dij(H);
		for(i=1;i<=N;i++)
		totaldist[i]+=dist[i];
	//	for(i=1;i<=N;i++)
	//	cout<<totaldist[i]<<" ";
	//	cout<<"<--tot dist after step 3"<<endl;
		
		ll maxval=0;
		for(i=1;i<=N;i++)
		{
			if(i!=S && i!=A && i!=H)
			maxval=max(maxval,totaldist[i]);
		}
		cout<<maxval<<endl;	
	}
return 0;
}
