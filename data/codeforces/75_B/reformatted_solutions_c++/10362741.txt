#include <algorithm>
#include <cmath>
#include <complex>
#include <cstdio>
#include <functional>
#include <iostream>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <time.h>
#include <vector>

using namespace std;

typedef long long LL;

vector<pair<int, string>> A;
map<string, int> M;

int ID(string s) {
  if (!M.count(s)) {
    M[s] = M.size() - 1;
    A.push_back(make_pair(0, s));
  }
  return M[s];
}

string a, b, c;

int n;

int main() {
  cin >> a;
  ID(a);
  cin >> n;
  for (int i = 0; i < n; ++i) {
    cin >> a;
    cin >> b;
    if (b[0] != 'l')
      cin >> c;
    cin >> c;
    c = c.substr(0, (int)c.size() - 2);

    if (ID(a) == 0 || ID(c) == 0) {
      int id = max(ID(a), ID(c));
      if (b[0] == 'p')
        A[id].first -= 15;
      if (b[0] == 'c')
        A[id].first -= 10;
      if (b[0] == 'l')
        A[id].first -= 5;
    }

    cin >> c;
  }

  sort(A.begin() + 1, A.end());
  for (int i = 1; i < A.size(); ++i)
    cout << A[i].second << endl;
  return 0;
}