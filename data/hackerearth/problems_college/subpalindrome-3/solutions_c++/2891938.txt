/*
Author :Akash Kumar
IIITD
*/
#include<bits/stdc++.h>
using namespace std;

long long int mod_pow(long long int a, long long int b,long long int mod)
{
	long long int ans=1;
	while(b)
	{
		int r=b%2;
	
		if(r!=0)
		ans=(ans*a)%mod;
		
		a=(a*a)%mod;
		
		b/=2;
	}	
	return ans;
}

long long gcdf(long long a,long long b)
{
	if(a==0)
	return b;
	return gcdf(b%a,a);	
}

long long min1(long long a,long long b)
{
	return a>b?b:a; 	
}

long long max1(long long a,long long b)
{
	return a<b?b:a; 	
}

long long int fact(long long int n)
{
	long long int ans=n,mod=1000000007;
	for(int i=1;i<=n-1;i++)
	{
		ans=(ans*i)%mod;
	}
	
	return ans;
}

struct node{
	string s;
	int val;
};

bool comp(struct node less,struct node more)
{
	return less.val<more.val;	
}

vector<vector<long long> > ans;
string s;
 
long long count(int a, int b) {
long long &res = ans[a][b];
if (res >= 0) return res;
res = 0;
if (a == b) return res = 1;
if (a+1 == b) return res = 2;
res = count(a,b-1) + count(a+1,b);
if (s[a] != s[b-1]) 
res -= count(a+1,b-1);	
return res;
}


int main() {
int t;
cin>>t;

for(;t>0;t--)
{
	cin>>s;
	ans.clear();
	ans.resize(s.size()+1, vector<long long>(s.size()+1,-1));
	cout << count(0,s.size())-1 <<"\n";

}
return 0;
}