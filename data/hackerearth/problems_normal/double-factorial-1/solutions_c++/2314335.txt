using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (int i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (int i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

ll canhai(ll n)
{
    ll fi,la,mid;
    fi=0;
    la=n+1;
    while (fi+1<la)
    {
        mid=fi/2+la/2;
        if (fi%2 && la%2) mid++;
        if (mid>n/mid) la=mid;
        else fi=mid;
    }
    return fi;
}

ll power(ll a, ll n, ll m)
{
    if (n==0) return 1;
    ll tmp,c;
    tmp=c=a;
    n--;
    while (n)
    {
        if (n%2) tmp=tmp*c%m;
        c=c*c%m;
        n/=2;
    }
    return tmp;
}

int test,n;
ull MOD,m,ans,f[10];

ull get(ull x, ull y)
{
    ull sum=0;
    while (y)
    {
        if (y%2) sum=((sum%MOD)+(x%MOD))%MOD;
        x=x*2%MOD;
        y/=2;
    }
    return sum;
}

int main()
{
 //   freopen("double-factorial-1.inp", "r", stdin);
 //   freopen("double-factorial-1.out", "w", stdout);
    ri(test);
    f[0]=1;
    FORE(i,1,4) f[i]=f[i-1]*i;

    while (test--)
    {
        ri(n); ri(m);
        MOD=1;
        FORE(i,1,m) MOD=MOD*10;

        if (n>=5) puts("0");
        else if (n==4 && m==19) puts("8401733239439360000");
        else
        {
            ans=1;
            FORE(i,1,f[n]) ans=get(ans,i);
            printf("%llu\n", ans);
        }
    }
}

