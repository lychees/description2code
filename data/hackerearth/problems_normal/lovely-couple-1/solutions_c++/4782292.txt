#include <iostream>
#include <vector>
#include <math.h>
#include <set>
#include <algorithm>

using namespace std;

bool primeFactors(int n)
{
    
    
}
int gcd(int m, int n)
{
    int r;
    if((m == 0) || (n == 0))return 0;
    if(m<0)m=-m;
    if(n<0)n=-n;
    do{
        r=m%n;
        if(r == 0)return n;
        m=n;
        n=r;
    }while(true);
    return n;
}


int main()
{
	vector<int> PRIMES(1000000,1);
	PRIMES[0]=0;
	PRIMES[1]=0;
	for(int i=2;i<=1000;i++)
	{
		if(PRIMES[i]==1){
			for(int j=i*i;j<=100000;j+=i)
				PRIMES[j]=0;
		}
	}
	int T;
	cin>>T;
	while(T--){
	int A,B;
	cin>>A;
	cin>>B;
	int lcm = (A*B)/gcd(A,B);
	
    int n = lcm;
    set<int> ss;
    while (n%2 == 0)
    {
        ss.insert(2);
        n = n/2;
    }
 
    for (int i = 3; i <= sqrt(n); i = i+2)
    {
        // While i divides n, print i and divide n
        while (n%i == 0)
        {
            ss.insert(i);
            n = n/i;
        }
    }
 
    if (n > 2)
        ss.insert(n);
        
	if(PRIMES[ss.size()])
		cout<<"Yes"<<endl;
		else
			cout<<"No"<<endl;
	}
    return 0;
}
