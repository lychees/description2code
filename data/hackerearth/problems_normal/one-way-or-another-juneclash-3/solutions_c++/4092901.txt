#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <sstream>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
#include <queue>
#include <bitset>		//UWAGA - w czasie kompilacji musi byc znany rozmiar wektora - nie mozna go zmienic
#include <cassert>
#include <iomanip>		//do setprecision
#include <ctime>
#include <complex>
using namespace std;

#define FOR(i,b,e) for(int i=(b);i<(e);++i)
#define FORQ(i,b,e) for(int i=(b);i<=(e);++i)
#define FORD(i,b,e) for(int i=(b)-1;i>=(e);--i)
#define REP(x, n) for(int x = 0; x < (n); ++x)

#define ST first
#define ND second
#define PB push_back
#define MP make_pair
#define LL long long
#define ULL unsigned LL
#define LD long double

const double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342;

#define MR 10010

pair < pair < LL, LL >, bool > t[MR];

inline bool check(int n)
{
	REP(i, n - 1)FOR(j, i + 1, n)
	{
		bool b = (abs(t[j].first.first - t[i].first.first) + abs(t[j].first.second - t[i].first.second)) & 1;
		if (b && t[i].second == t[j].second)
			return 0;
		if (!b && t[i].second != t[j].second)
			return 0;
	}

	return 1;
}

int main()
{
	int T;
	scanf("%d", &T);
	REP(c, T)
	{
		int n;
		scanf("%d", &n);
		REP(i, n)
		{
			LL v;
			scanf("%lld%lld%lld", &t[i].first.first, &t[i].first.second, &v);
			t[i].second = v & 1;
		}
		
		random_shuffle(t, t + n);
		n = min(n, 2000);
		if (check(n)) printf("Yes\n"); else printf("No\n");
	}
	return 0;
}