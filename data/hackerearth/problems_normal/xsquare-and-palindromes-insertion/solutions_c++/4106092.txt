#include <iostream>
#include <map>
#include <algorithm>
using namespace std;
typedef map<char, int> freqmap;
typedef pair<char, int> pairclass;

void print_freqmap(freqmap const &mapp)
{
    for(auto key : mapp)
    {
        cout << key.first << " : " << key.second << endl;
    }
}
int main()
{
    int t;
    cin >> t;
    string s;
    while( t-- )
    {
        freqmap mapp;
        cin >> s;
        for_each(s.begin(), s.end(), [&mapp](char ch){
                if(mapp.find(ch) == mapp.end())
                {
                    mapp.insert(freqmap::value_type(ch,1));
                }
                else
                {
                    mapp[ch] += 1;
                }
                } );
        //print_freqmap(mapp);
        if(s.length()%2 == 1) // odd length string
        {
            int oddchars = 0;
            for(pairclass key : mapp)
            {
                if(key.second%2 == 1)
                    ++oddchars;
            }
         //   cout << "odd length string - oddchars = " << oddchars << endl;
            cout << (oddchars - 1) << endl;
            //return oddchars - 1;
        }
        else if(s.length()%2 == 0) // even length string
        {
            int oddchars = 0;
            for(pairclass key : mapp)
            {
                if(key.second%2 == 1)
                    ++oddchars;
            }
           // cout << "even length string - oddchars = " << oddchars << endl;
            if( oddchars == 0 ) // all even chars
                cout << 0 << endl;
            else if( oddchars == s.length() ) // all odd chars
                cout << (s.length() - 1) << endl;
            else // both odd and even chars
                cout << ( oddchars - 1 ) << endl;
        }
    }
    return 0;
}
