// hackerearth file
#include<bits/stdc++.h>
#include<math.h>
#include<cmath>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_vvv) (int)(_vvv.size())
#define all(_v) (_v).begin(),(_v).end()
#define gi(x) scanf("%d",&x)
#define gl(x) scanf("%ld",&x)
#define gll(x) scanf("%64d",&x)
#define pii pair<int,int>
typedef long long ll;
const ll MOD = 1e9+7;
const int INF = 0x7f7f7f7f;
const double eps = 1e-6;

const int maxn = 500010;
ll dp[maxn];
int num[maxn];

ll fast_expo(ll a,ll b) {
	// a ^  b % MOD
	if(b == 0) return 1ll;
	ll p;
	if(b % 2 == 0) {
		p = fast_expo(a,b / 2);
		p = (p * p) % MOD;
	}
	else p = (a * fast_expo(a,b - 1)) % MOD;

	return p;
}

int main() {
	ios_base::sync_with_stdio(false);

    int n,k,m; cin >> n >> k >> m;
	for (int i = 0; i < n; i ++) {
		int x; cin >> x;
		num[x] ++;
	}

	dp[0] = 1;
	for (int i = 1; i <= k; i ++) {
		if(num[i] == 0) continue;
		for (int j = m - 1; j >= 0; j --) {
			dp[j + 1] = (dp[j] * (fast_expo(2ll,num[i]) - 1) + dp[j + 1] + MOD) % MOD;
		}
	}

	ll ans = 0;
	for (int i = 0; i <= m; i ++) ans = (ans + dp[i] + MOD) % MOD;

	cout << ans << "\n";
	return 0;
}
