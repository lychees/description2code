#include<bits/stdc++.h>
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define mod 1000000007 // 10**9 + 7
#define INF 1e9
#define FOR(i,a,b) for(int (i) = (a); (i) < (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a)-1; (i) >= (b); --(i))
#define CLEAR(a) memset((a),0,sizeof(a))
#define mp(a, b) make_pair(a, b)
#define pb(a) push_back(a)
#define rep(i, a, b) for (int i = a; i < b; i++)
#define rrep(i, b, a) for (int i = b; i > a; i--)
#define all(v) v.begin(), v.end()
#define GETCHAR getchar_unlocked
#define pi(n) printf("%d\n",n)
#define pll(n) printf("%lld\n",n)
#define rk() int t; scanf("%d",&t); while(t--)
using namespace std;
const double pi = acos(-1.0);
//freopen("in","r",stdin);
//freopen("out","w",stdout);
const int er[8] = {-1,-1,0,1,1,1,0,-1};
const int ec[8] = {0,1,1,1,0,-1,-1,-1};
const int fr[4] = {-1,1,0,0};
const int fc[4] = {0,0,1,-1};
typedef unsigned long long ull;
typedef long long ll;
typedef long l;
typedef pair<int,int> pii;
typedef vector<int> vec;
typedef vector<pii> vpii;
ll po(ll a,ll p)
{ll ret = 1;while(p){if(p&1)ret = (ret*a)%mod;a=(a*a)%mod;p=p>>1;}return ret%mod;}

ll recur(ll startIndex,ll endIndex,ll sumLeft,int prefix_sum[], int a[])
{
		ll newSum=0;
		ll ret=0;
		int si=startIndex;
		for(si=startIndex;si<=endIndex;si++)
		{
			newSum+=a[si];
			if(newSum>=sumLeft){
				++si;
				//cout<<si<<endl;
				if(si>endIndex)
					return 0;
				break;
			}
			else if (si==endIndex)
				return 0;
			//cout<<si<<endl;
		}
		for(int i=si;i<=endIndex;i++)
		{
			ll b=recur(i,endIndex,newSum,prefix_sum,a);
			//cout<<b<<" "<<"aa";
			if(a[i]+prefix_sum[endIndex]-prefix_sum[i] >=newSum)
					ret+=b+1;
					//cout<<ret<<endl;
			newSum+=a[i];
		}
		return ret;
	}
int main()
{
    ll t;
    
    cin>>t;
    while(t--)
    {
    	int a[100005],prefix_sum[100005];
    	string n;
    	int len=0;
    	cin>>n;
    	for(int i=0;n[i]!='\0';i++)
    	{
    		a[i]=n[i]-'0';
    		len++;
    	}
    	prefix_sum[0]=a[0];
    	for(int i=0;i<=len;i++)
    		prefix_sum[i]=prefix_sum[i-1]+a[i];
    
    	cout<<recur(0,len-1,0,prefix_sum,a)+1<<endl;
    }
    return 0;
}
