#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define MAX 100005
int arr[MAX];
ll sum[MAX];
int dp[MAX];
ll dpsol(int n, int k)
{
		int i;
		int j;
		ll csum;
		ll msum;
		msum = INT_MIN;
		sum[0]=0;
		for(i=1;i<=n;++i)
				sum[i] = sum[i-1] + arr[i];
		dp[0] = 0;
		if(arr[1] <= k) dp[1] = 1;
		else dp[1] = 0;
		for(i=2;i<=n;++i)
		{
				if(arr[i]<=k)
				{
						dp[i] = dp[i-1]+1;
				}
				else dp[i] = 0;
				if(dp[i] == 0 && dp[i-1] != 0)
				{
						j = i-1;
						csum = sum[j] - sum[j-dp[j]];
						msum = max(csum,msum);
				}
		}
		if(dp[n] != 0)
		{
				j = n;
				csum = sum[j] - sum[j-dp[j]];
				msum = max(csum,msum);

		}
		/*for(i=1;i<=n;++i)
		  cout<<dp[i]<<" ";
		  cout<<endl;*/
		return msum;
}
int main()
{
		int t;
		int i;
		int n;
		int k;
		cin>>t;
		while(t--)
		{
				cin>>n>>k;
				for(i=1;i<=n;++i)
				{
						cin>>arr[i];
				}
				cout<<dpsol(n,k)<<endl;
		}
}
