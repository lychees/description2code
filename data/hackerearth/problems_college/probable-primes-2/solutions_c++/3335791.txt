#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sz size
#define set0(a) memset(a, 0, sizeof(a))
#define setdp(a) memset(a, -1, sizeof(a))
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion
#define MOD 1000000007

struct sort_pred {
	bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right) {
    	return left.first < right.first;
	}
};
/*ll power(ll a, ll b) {
ll x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>mod) x%=mod;
        }
        y = (y*y);
        if(y>mod) y%=mod;
        b /= 2;
    }
    return x;
}*/
ll prime[1000001];
ll s[1000001]= {0};
void SieveOfEratosthenes(ll n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    
   // memset(prime, 1, sizeof(prime));
 	prime[0] = 0;
 	prime[1] = 0;
 	for (ll p=2; p<=n; p++)
       prime[p] = 1;
	   //if (prime[p])
          //cout << prime[p] << " ";
    for (ll p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == 1)
        {
            // Update all multiples of p
            for (ll i=p*2; i<=n; i += p)
                prime[i] = 0;
        }
    }
 //	for (int p=2; p<=n; p++)
      // if (prime[p])
         // cout << p << " ";
    // Print all prime numbers
    
} 
// A stack based efficient method to calculate stock span values

 
int main()
{
    //int price[] = {10, 4, 5, 90, 120, 80};''
    ll n; //= sizeof(price)/sizeof(price[0]);
    ll t;
    sll(t);
    //memset()
    SieveOfEratosthenes(1000001);
    ll c =0;
    for(ll i = 2 ; i< 1000001;i++){
    //	if(prime[i] == 1 && i<=1000000) c++;
    	//s[i] = s[i-1] + prime[i];
		prime[i] += prime[i-1];
    }
    //cout << c<< endl;
    //for(ll i = 1 ; i< 11;i++){
    	//cout << prime[i] << " ";
    //}
    while(t--){
    	ll l,r;
    	sll(l);
    	sll(r);
    	float ans = 0;
		ans = (float)(prime[r] - prime[l - 1]);
    	//cout << ans <<endl;
    	ans /= (float)(r-l+1);
    	printf("%.6f\n",ans);
    }
    return 0;
}
