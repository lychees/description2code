#include <bits/stdc++.h>
#define MP(x, y) make_pair(x, y)
using namespace std;
typedef pair<int, int> PII;

vector< vector<PII> >orig;
int n, m;
int dist[100004];
int lim = 1000000000;

void dij(int s)
{
	priority_queue<PII, vector<PII>, greater<PII>> Q;
	for (int i = 1; i <= n; i++)
		dist[i] = lim;
	dist[s] = 0;

	Q.push(PII(0, s));

	while (!Q.empty())
	{
		PII top = Q.top();
		Q.pop();
		int v = top.second, d = top.first;

		if (d <= dist[v])
		{
			for (int i = 0; i < orig[v].size(); i++)
			{
				int v2 = orig[v][i].first, cost = orig[v][i].second;
				if (dist[v2] > dist[v] + cost)
				{
					dist[v2] = dist[v] + cost;
					Q.push(PII(dist[v2], v2));
				}
			}
		}
	}
}

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		cin >> n >> m;
		orig.clear();
		orig.resize(n + 1);

		for (int i = 0; i < m; i++)
		{
			int x, y, c;
			cin >> x >> y >> c;
			orig[x].push_back(MP(y, c));
			orig[y].push_back(MP(x, c));
		}

		dij(1);
		int q;
		cin >> q;
		while (q--)
		{
			int x, k;
			cin >> x >> k;
			cout << max(0, k - 2 * dist[x]);
			cout << "\n";
		}

	}
}
