
/* Trico ------------------------> NIT Silchar

“All power is within you; you can do anything and everything.
Believe in that, do not believe that you are weak; do not believe that you are half-crazy lunatics,
as most of us do nowadays. You can do any thing and everything, without even the guidance
of any one. Stand up and express the divinity within you.”

 */
#include<bits/stdc++.h>
#define ll long long
#define pll pair<ll,ll>
#define vl vector<ll>
#define mod 1000000007
#define fori(z,n) for(int i=z;i<n;i++)
#define forj(z,n) for(int j=z;j<n;j++)
#define fork(z,n) for(int k=z;k<n;k++)
#define db(x) cout << (#x) << " = " << x << endl;
#define trico() int t;cin>>t ; while(t--)
#define CHECK_BIT(var,pos) ((var) & (1<<(pos)))
#define p_iter vector<pll>::iterator
#define l_iter vector<ll>::iterator
#define forstl(m) for(it=m.begin();it!=m.end();it++)
#define bitcnt(x) __builtin_popcountll(x)
const int nax = 1e7 + 5;
const int lax = 1e5 + 5;
const int pax = 2e5 + 5;
const int inf = 1e9 + 5;
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
using namespace std;
static int u=0;
void f_case(){u++;cout<<"Case "<<u<<": ";}
//ll modPow(ll a,ll b,ll MOD) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
//ll modInverse(ll a){return modPow(a,MOD-2);}
ll dp[nax];
bool prime[nax];
void sieve()
{
    prime[0]=false;
    prime[1]=false;
    fori(2,nax)
    prime[i]=true;
    for(ll i=2;i*i<nax;i++)
    {
        if(prime[i])
        {
            for(ll j=i+i;j<nax;j+=i)
                prime[j]=false;
        }
    }
    dp[0]=0;
    fori(1,nax)
    {
        if(prime[i])
            dp[i]=dp[i-1]+1;
        else
            dp[i]=dp[i-1];

    }
}
int main()
{
 //freopen("input.in", "r", stdin);
sieve();
ll l,r;
float ans;
trico()
{
    cin>>l>>r;
    ans = float(dp[r]-dp[l-1])/float(r-l+1);
    printf("%.6f\n",ans);


}
}
