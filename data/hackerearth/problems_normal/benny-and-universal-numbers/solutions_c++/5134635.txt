#include <bits/stdc++.h>
using namespace std;
int rem[16];
vector<long long int> ans;
vector< pair<long long int,int> > t1;
vector< pair<long long int,int> >  t2;
int m[101];
void sieve()
{
	memset(m,1,sizeof m);
	m[0]=0;m[1]=0;
	for(int i=2;i<=100;i++)
		if(m[i])
			for(int j=i*i;j<=100;j+=i)
				m[j]=0;
}
void rem_input()
{
	for(int i=1;i<=15;i++)
		cin >> rem[i];
}
void compute()
{
	for(int i=1;i<=9;i++)
		if(i%1==rem[1])
			t1.push_back(make_pair(i,0));
	for(int i=2;i<=15;i++)
	{
		if(i%2==1)
		{
			int s1=t2.size();
			for(int j=0;j<s1;j++)
				for(int k=0;k<=9;k++)
				{
					if(((10*t2[j].first+k)%i)==rem[i])
					{
						if(t2[j].second==1 || m[(int)(10*(t2[j].first%10)+k)] )
						{
							ans.push_back((10*t2[j].first+k));
							t1.push_back(make_pair((10*t2[j].first+k),1));
						}
						else
						{
							t1.push_back(make_pair((10*t2[j].first+k),0));
						}
					}
				}
			t2.clear();
		}
		else
		{
			int s1=t1.size();
			for(int j=0;j<s1;j++)
				for(int k=0;k<=9;k++)
				{
					if(((10*t1[j].first+k)%i)==rem[i])
					{
						if(t1[j].second==1 || m[(int)(10*(t1[j].first%10)+k)])
						{
							ans.push_back(10*t1[j].first+k);
							t2.push_back(make_pair(10*t1[j].first+k,1));
						}
						else
						{
							t2.push_back(make_pair(10*t1[j].first+k,0));
						}
					}
				}
			t1.clear();
		}

	}
}
void query()
{
	int q;
	long long int x,y;
	cin >> q;
	while(q--)
	{
		cin >> x >> y;
		int ans1=upper_bound(ans.begin(),ans.end(),y)-lower_bound(ans.begin(),ans.end(),x);
		cout << ans1 << endl;
	}
}
int main()
{
	sieve();
	rem_input();
	compute();
	query();
	return 0;
}