#include<iostream>
#include<algorithm>
using namespace std;
typedef struct dask{
	long t,x,y;
}dask;
bool sorter(dask d1,dask d2)
{
	if(d1.t!=d2.t)
		return d1.t<d2.t;
	if(d1.y!=d2.y)
		return d1.y>d2.y;
	return d1.x<d2.x;
}
int main()
{
	long n,d;
	dask dp[100005];
	cin>>n>>d;
	for(long i=0;i<n;i++)
		cin>>dp[i].t>>dp[i].x>>dp[i].y;
	sort(dp,dp+n,&sorter);
/*	for(long i=0;i<n;i++)
	{
		cout<<dp[i].t<<" "<<dp[i].x<<" "<<dp[i].y<<endl;
	}
*/
	long long cost=0,ct=dp[0].t,cx=dp[0].x,cy=dp[0].y;cost=cx;
	for(long i=0;i<n;i++)
	{
		if(d==0)
			break;
		if(dp[i].t!=ct && dp[i].y>cy)
		{
			d=d-cy*(dp[i].t-ct);
			if(d<=0)
				break;
			ct=dp[i].t,cx=dp[i].x,cy=dp[i].y;
			cost+=cx;
		}
	}	
	cout<<cost<<endl;
	return 0;
}