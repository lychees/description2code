#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())

const int MOD = 1e9+7;

typedef long long ll;
typedef pair<int,int> pii;
const int MAXN = 1e5+5;
int dp1[MAXN],dp2[MAXN];
int needed[MAXN];
int col[MAXN];
vector<int> adj[MAXN];
void DFS(int s, int par=-1) {
	if(col[s]==needed[s]) dp1[s]=0,dp2[s]=1;
	else dp1[s]=1,dp2[s]=0;
	for(auto it:adj[s]) {
		if(it==par) continue;
		DFS(it,s);
		dp1[s]+=min(dp2[it]+1,dp1[it]);
		dp2[s]+=min(dp1[it]+1,dp2[it]);
	}
	if(dp1[s]<dp2[s]) dp2[s]=dp1[s]+1;
	else if(dp1[s]>dp2[s]) dp1[s]=1+dp2[s];
}
int main() {
	// freopen("TASK.in","r",stdin);freopen("TASK.out","w",stdout);
	int n;
	cin>>n;
	for(int i=1;i<n;i++) {
		int x,y;
		cin>>x>>y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	for(int i=1;i<=n;i++) cin>>col[i];
	for(int i=1;i<=n;i++) cin>>needed[i];
	DFS(1);
	cout<<dp1[1]<<endl;
	return 0;
}