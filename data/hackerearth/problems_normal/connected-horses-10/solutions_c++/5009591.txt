#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define MOD 1000000007

ll mat[1003][1003],vis[1003][1003];
ll fact[1000006];

void compute()
{
    ll i;
    fact[0]=fact[1]=1;
    for(i=2;i<1000006;i++)
        fact[i]=(i*fact[i-1])%MOD;
}

bool isSafe(ll i,ll j,ll m,ll n)
{
    if(i>=0 && i<m && j>=0 && j<n && mat[i][j] && !vis[i][j])
        return true;
    else
        return false;
}

ll bfs(ll row,ll col,ll m,ll n)
{
    ll res,a,b,i,newx,newy;
    ll rowx[8]={-1,1,-1,1,2,2,-2,-2};
    ll rowy[8]={2,2,-2,-2,1,-1,1,-1};
    vis[row][col]=1;

    queue<pair<ll,ll> > q;
    q.push(make_pair(row,col));

    res=0;
    while(!q.empty())
    {
        pair<ll,ll> temp=q.front();
        q.pop();
        a=temp.first;
        b=temp.second;
        res++;
        for(i=0;i<8;i++)
        {
            newx=a+rowx[i];
            newy=b+rowy[i];

            if(isSafe(newx,newy,m,n))
            {
                vis[newx][newy]=1;
                q.push(make_pair(newx,newy));
            }
        }
    }

    return fact[res];

}

int main()
{
    compute();
    ll t,ans,m,n,q,x,y,i,j,curr;
    cin>>t;
    while(t--)
    {
        ans=1;
        cin>>m>>n>>q;
        for(i=0;i<m;i++)
            for(j=0;j<n;j++)
              mat[i][j]=0;
        while(q--)
        {
            cin>>x>>y;
            x--;
            y--;
            mat[x][y]=1;
        }

        for(i=0;i<m;i++)
            for(j=0;j<n;j++)
              vis[i][j]=0;

        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                if(mat[i][j] && !vis[i][j])
                {
                      curr=bfs(i,j,m,n);
                      ans=(ans*curr)%MOD;
                }


            }
        }

       cout<<ans<<endl;
    }
}
