//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <unordered_map>
#include <unordered_set>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(auto i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(auto i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)

set<int>secik[30];
const int M = 1 << 18;
int d[30][2 * M + 5];

void wstaw(int nr, int pos, int a)
{
	pos += M;
	while(pos)
	{
		d[nr][pos]+=a;
		pos /= 2;
	}
}

void wrzuc(int nr, int ile)
{
	secik[nr].IN(ile);
	wstaw(nr, ile, 1);
}

int czek(int nr, int kon)
{
	if(kon < 0) return 0;
	kon += M;
	int pocz = M;
	int res = d[nr][pocz];
	if(pocz != kon) res += d[nr][kon];
	while(pocz / 2 != kon / 2)
	{
		if(!(pocz & 1)) res += d[nr][pocz ^ 1];
		if(kon & 1) res += d[nr][kon ^ 1];
		pocz /= 2;
		kon /= 2;
	}
	return res;
}

int binsercz(int nr, int ile)
{
	int pocz = 0, kon = M - 1, mid;
	while(true)
	{
		mid = (pocz + kon) / 2;
		int ans = czek(nr, mid);
		//cout << ans << " " << mid << "\n";
		if(ans == ile)
		{
			if(czek(nr, mid - 1) < ile) return mid;
			kon = mid - 1;
		}
		else
		{
			if(ans > ile)
			{
				kon = mid - 1;
			}
			else
			{
				if(czek(nr, mid + 1) == ile) return mid + 1;
				pocz = mid + 2;
			}
		}
	}
}


void odpowiedz()
{
	set<PII> s;
	REP(i, 26)
		FORE(it, secik[i])
			s.IN(MP(*it, i));
	FORE(it, s)
	{
		cout << (char)(it->ND + 'a');
	}
	cout << "\n";
}

void odrzuc(int nr, int ile)
{
	int ans = binsercz(nr, ile);
	secik[nr].ER(ans);
	wstaw(nr, ans, -1);
	//cout << " " << nr << " " << ile << " " << ans << " "; odpowiedz();
}

void jebaj()
{
	string s;
	cin >> s;
	REP(i, SIZE(s))
	{
		wrzuc(s[i] - 'a', i);
	}
	int m;
	cin >> m;
	REP(i, m)
	{
		int a;
		char c;
		cin >> a >> c;
		odrzuc(c - 'a', a);
	}
	odpowiedz();
}

int main()
{
	IOSYNC;	
	int t;
	t = 1;
	//cin >> t;
	
	REP(i, t) 
	{
		jebaj();
	}
}
