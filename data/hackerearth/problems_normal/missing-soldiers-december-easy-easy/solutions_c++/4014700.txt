#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};
int main()
{
	ios_base::sync_with_stdio(false);
	int i, n, x, y, d;
	cin >> n;
	vector< pp > v(n);
	for( i=0;i<n;i++ )
	{
		cin >> x >> y >> d;
		v[i].first = x;
		v[i].second = x+d;
	}
	sort( v.begin(), v.end() );
	vector< pp > f;
	pp take;
	take.first = v[0].first;
	take.second = v[0].second;
	for( i=0;i<n;i++ )
	{
		if( ( v[i].first <= take.second ) || ( v[i].first == take.second + 1 ) )
		{
			take.second = max(take.second, v[i].second);
			if( i+1 == n)
			{
				f.pb( take);
			}
		}
		else
		{
			f.pb( take);
			take.first = v[i].first;
			take.second = v[i].second;
			if( i+1 == n)
			{
				f.pb( take);
			}
		}
	}
	ll ans = 0;
	for( i=0;i<(f.size());i++ )
	{
		ans += (ll)f[i].second - (ll)f[i].first + 1;
	}
	cout << ans;
	//cin >> n;
    return 0;
}
