from collections import deque
class Array(object):
	def __init__(self, size):
		self.size = size
		self.buffer = deque()
		self.time = 0
		self.count = 0
	def isEmpty(self):
		return self.count == 0
	def isFull(self):
		return self.count == self.size
	def append(self, value):
		if not self.isFull():
			self.count += 1
			self.buffer.append(value)
	def pop(self):
		if not self.isEmpty():
			self.count -= 1
			value = self.buffer.popleft()
			return value
	def remove(self, value):
		n = self.buffer[0]
		while n != value:
			v = self.pop()
			self.append(v)
			self.time+=1
			n = self.buffer[0]
		else:
			self.pop()
			self.time+=1
	def __iter__(self):
		n = 0
		while n != self.count:
			yield self.buffer[n]
			n += 1
	def __repr__(self):
		if self.isEmpty():
			return "Array: []"
		else:
			return "Array: [" + ",".join(str(i) for i in self) + "]"
			
	
arr = Array(input())
calling_list = map(int, raw_input().split())
map(arr.append, calling_list)
ideal_list = map(int, raw_input().split())
for i in ideal_list:
	arr.remove(i)
print arr.time
			
			