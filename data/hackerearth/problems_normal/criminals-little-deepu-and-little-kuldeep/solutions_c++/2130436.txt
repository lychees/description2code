#include <iostream>
using namespace std;

void swap(long int &x,long int &y)
{
	long int temp=x;
	x=y;
	y=temp;
}

int partition(long int A[],long int start,long int end)
{
	long int x=end,j=start,index=start-1;
	for(;j<end;j++){
		if(A[j]<=A[x]){
			index=index+1;
			swap(A[j],A[index]);
		}
	}
	swap(A[x],A[index+1]);
	return index+1;
}

void quickSort( long int A[],long int start,long int end)
{
	if(end>start){
		long int pivot=partition(A,start,end);
		quickSort(A,start,pivot-1);
		quickSort(A,pivot+1,end);
	}
}

int main()
{
    int T;
    long N,i,no_of_packets,*X;
    cin>>T;
       
    while(T--)
    {
    		cin>>N;
    		 X=new long[N];
    		
    		no_of_packets=1;
    		
    		for(i=0;i<N;i++)
    			cin>>X[i];
    		
    		quickSort(X,0,N-1);
    		
    		for(i=0;i<N;i++)
    		{
    			if(X[i]==0)
    					continue;
    					
    			for(long j=i+1;j<N;j++)
    			{
    				if(X[i]<X[j])
    				{
    					X[i]=X[j];
    					X[j]=0;
    				}
    			}
    			
    			++no_of_packets;
    		}
/*/

			for(i=0;i<N-1;i++){
				if(X[i]<X[i+1])
					continue;
				else 
					no_of_packets++;
			}
*/
    		cout<<no_of_packets-1<<endl;
    		 delete X;
    }
   
    return 0;
}
