#include<iostream>
#include<string>
#include<unordered_set>

using namespace std;

typedef long long ll;

string s;
unordered_set<ll> subs;
ll pow[1<<20];
ll shash[1<<20];

int check(int length)
{
    subs.clear();
    for(int i=0;i+length<=s.size();++i)
    {
        ll q = shash[length+i]-shash[i];
        q = q*pow[1000000-i];

        if(subs.find(q)!=subs.end())
            return true;

        subs.insert(q);
    }
    return false;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin>>s;

    pow[0]=1;
    for(int i=1;i<=1000000;++i)
        pow[i] = pow[i-1]*173;

    for(int i=1;i<=s.size();++i)
        shash[i] = shash[i-1] + s[i-1]*pow[i-1];

    int l,r;
    l=0;
    r=s.size();

    while(l<r)
    {
        int mid = (l+r+1);
        mid >>= 1;
        if(check(mid))
            l=mid;
        else
            r=mid-1;
       // cout<<mid<<endl;
    }
    cout<<l;
    return 0;
}
