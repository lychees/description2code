#include <iostream>
#include <cassert>
#include <deque>
#define endl '\n'

using namespace std;

// const long MAX = 10000;

int main() {
	int t, n, len;
	deque<int> q;

	cin >> t;
	while(t--) {
		cin >> n;

		for (int i = 0; i < n; ++i) {
			cin >> len;
			q.push_back(len);
		}

		long t1 = 0, t2 = 0;

		while(!q.empty()) {
			if(q.size() == 2) {
				q.pop_front();
				++t1;
				q.pop_back();
				++t2;
				break;
			} else if(q.size() == 1) {
				q.pop_front();
				++t1;
				break;
			}

			if(q.front() == q.back() * 2) {
				if(q.size() > 2) {
					q.pop_front();
					++t1;
				}
				if(q.size() > 2) {
					q.pop_back();
					++t2;
				}
			} else if(q.front() > q.back() * 2) {
				if(q.size() > 2) {
					q.front() -= q.back() * 2;
					q.pop_back();
					++t2;
				}
			} else {
				long time = (q.front() + 1) / 2;
				long remaining = time * 2 - q.front(); // either 1 or 0
				assert(remaining == 0 || remaining == 1);
				
				if(q.size() > 2) {
					q.pop_front();
					++t1;
				}
				if(remaining && q.size() >= 2) {
					q.front() -= remaining;
					if(q.front() == 0 && q.size() > 2) {
						q.pop_front();
						++t1;
					}
				}
				q.back() -= time;
				if(q.back() == 0 && q.size() > 2) {
					q.pop_back();
					++t2;
				}
			}
			// cout << "After:" << endl;
			// cout << q.front() << " " << q.back() << " (" << t1 << ", " << t2 << ")" << endl;
			// cout << "------" << endl;
		}

		cout << t1 << " " << t2 << endl;
	}
}