#include<bits/stdc++.h>
using namespace std;
#define getchar_unlocked getchar
#define ll long long int
#define mb make_pair
#define pb push_back
#define F first
#define S second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define rep(i,n) for(int i=0;i<n;i++)
#define tr(it,x) for(auto it=x.begin(); it!=x.end(); it++)
#define repp(i,a,b) for(int i=a;i<=b;i++)
#define M 100005 
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
#define sc(x) scanf("%d",&x)
#define scc(x1,x2) scanf("%d%d",&x1,&x2)
#define scl(x) scanf("%lld",&x)
#define sccl(x1,x2) scanf("%lld%lld",&x1,&x2)
//#define sccl(x1,x2,x3,x4,x5) scanf("%lld%lld%lld%lld%lld",&x1,&x2,&x3,&x4,&x5)
#define pr(x) printf("%d\n",x)
#define prl(x) printf("%lld\n",x)
#define fill(a,x) memset(a,x,sizeof(a))
int gcd(int a, int b) { return (b == 0 ? a : gcd(b, a % b)); }
int lcm(int a, int b) { return (a * (b / gcd(a, b))); }
ll max(ll a,ll b,ll c){return max(a,max(b,c));}
ll power(ll x,ll y)
{
    ll ans=1;
    while(y>0){
        if(y&1)
            ans=(ans*x)%M;
        x=(x*x)%M;
        y/=2;
    }
    return ans;
}
inline ll read()
{
	ll ret = 0,temp=1;
	ll c = getchar_unlocked();
	while(c<'0' || c>'9'){
		c = getchar_unlocked();
	}
	while(c>='0' && c<='9')
	{
		ret = (ret<<3) + (ret<<1) + c - '0';
		c = getchar_unlocked();
	}
        return ret;
}
bool prime[M];
int a[M];
void sieve()
{
	for(int i=2;i<M;i+=2)
	a[i]=2;
	a[1]=1;
	for(int i=3;i<M;i+=2)
	{
		if(!prime[i])
		{
			a[i]=i;
			for(int j=3;(j*i)<M;j+=2)
			{
				if(!prime[j*i]) prime[j*i]=true;
				a[j*i]=i;
			}
		}
	}
}
int cnt[M];
int main()
{
	sieve();
	int n,q,x;
	cin>>n;
	rep(i,M)
	cnt[i]=0;
	//cout<<a[3]<<endl;
	rep(i,n)
    {
    	int tt;
    	tt=read();
    	while(tt>1)
    	{
    		cnt[a[tt]]++;
    		tt/=a[tt];
    	}
    }
    //cout<<"vai"<<endl;
    q=read();
    while(q--)
    {
    	x=read();
    	vector<pair<int,int> >v;
    	while(x>1)
    	{
    		if(!v.empty()&&a[x]==v.back().first)
    		v.back().second++;
    		else
    		v.pb(mb(a[x],1));
    		x/=a[x];
    	}
    	int ans=1000000001;
    	int c=v.size();
    	rep(i,c)
    	ans=min(ans,cnt[v[i].first]/v[i].second);
    	cout<<ans<<endl;
    }
}
    
    