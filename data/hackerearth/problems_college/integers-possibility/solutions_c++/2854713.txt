#include <cstdio>
#include <iostream>
#include <string>

using namespace std;

typedef long long int int32;
const int32 mod = 1e9 + 7;

int32 Fib[2][2];

void M_Matrix(int32 A[2][2],int32 B[2][2])
{
    int32 a = ( (A[0][0] * B[0][0]) % mod + (A[0][1] * B[1][0]) % mod ) % mod;
    int32 b = ( (A[0][0] * B[0][1]) % mod + (A[0][1] * B[1][1]) % mod ) % mod;
    int32 c = ( (A[1][0] * B[0][0]) % mod + (A[1][1] * B[1][0]) % mod ) % mod;
    int32 d = ( (A[1][0] * B[0][1]) % mod + (A[1][1] * B[1][1]) % mod ) % mod;

    A[0][0] = a; A[0][1] = b; A[1][0] = c; A[1][1] = d; 
}

void Pow(int32 n)
{
    if(n == 0 || n == 1)
        return;

    int32 t[2][2] = {{1,1},{1,0}};

    Pow(n/2);
    M_Matrix(Fib,Fib);

    if(n%2)
        M_Matrix(Fib,t);
}



int32 Process(int32 n)
{
    Fib[0][0] = 1; Fib[0][1] = 1; Fib[1][0] = 1; Fib[1][1] = 0; 
    if(n == 0) return 1;
    Pow(n-1);
    return Fib[0][0];
}

int main()
{
    int T;
    int32 n;
    cin >> T;
    while(T--)
    {
        cin >> n;
        cout << Process(n) << endl;
    }
    return 0;
}
