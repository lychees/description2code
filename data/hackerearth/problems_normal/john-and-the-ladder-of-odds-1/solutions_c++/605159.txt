#include <bits/stdc++.h>

#define s(x) scanf("%d",&x);
#define ll long long
#define ull long long
#define pii pair <int, int>
#define vi vector <int>
#define pb push_back
#define mp make_pair
#define MD 1000000009

void multiply(long long int F[2][2],long long int M[2][2]);

void power(long long int F[2][2],long long int n);

long long int fib(long long int n)
{
  long long int F[2][2] = {{1,1},{1,0}};
  if(n == 0)
    return 0;
  power(F, n-1);
  return (F[0][0] % MD);
}
void power(long long int F[2][2], long long int n)
{
  if( n == 0 || n == 1)
      return;
  long long int M[2][2] = {{1,1},{1,0}};
  	power(F, n/2);
	multiply(F, F);

  	if( n % 2 != 0 )
    	 multiply(F, M);
}

void multiply(long long int F[2][2], long long int M[2][2])
{
  long long int x =  ((F[0][0] % MD) * (M[0][0] % MD)) + ((F[0][1] % MD)*(M[1][0] % MD));
  long long int y =  ((F[0][0] % MD) * (M[0][1] % MD)) + ((F[0][1] % MD)*(M[1][1] % MD));
  long long int z =  ((F[1][0] % MD) * (M[0][0] % MD)) + ((F[1][1] % MD)*(M[1][0] % MD));
  long long int w =  ((F[1][0] % MD) * (M[0][1] % MD)) + ((F[1][1] % MD)*(M[1][1] % MD));

  F[0][0] = x % MD;
  F[0][1] = y % MD;
  F[1][0] = z % MD;
  F[1][1] = w % MD;
}



int main() {
	int t; s(t);
	while (t--) {
		ll n; scanf ("%lld", &n);
		ll q1 = fib(n);
		ll q2 = fib(n+1);
		ll ans = q1 * q2;
		ans %= MD;
		
		printf ("%lld\n", ans);
		
	}
	return 0;
}