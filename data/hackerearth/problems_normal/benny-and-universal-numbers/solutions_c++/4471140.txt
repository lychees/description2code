#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define T long long
#define ordered_set tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>

#define ll long long
ordered_set s1,s2;
int rem[20];
bool A[120];
void dfs1(int len, ll x, ll b)
{ 
    if(x <=b )
        s1.insert(x);
    else
        return;  
    int mod = len + 1;
    int md = (rem[mod] - x*10)%mod;
    if(md<0)
      md += mod;
    int st = 0;
    if(len == 0)
        st = 1;
    for(int i = st;i<=9;i++)
    {
        if(i%mod == md)
        {
            dfs1(len+1,10*x+i,b);
        }
    }
}
void dfs2(int len,ll x, ll b)
{
    if(x <= b )
      s2.insert(x);
    else
      return;
    int xl = x%10;
    int mod = len + 1;
    int md = (rem[mod] - x*10)%mod;
    if(md<0)
      md += mod;
    int st = 0;
    if(len == 0)
        st = 1;
    for(int i = st;i<=9;i++)
    {
        if(i%mod == md && (A[10*xl+i]||len==0))
          dfs2(len+1,10*x+i,b);
    }
}
int main()
{
    memset(A,0,sizeof A);
    for(int i = 2;i*i<100;i++)
      if(!A[i])
        for(int j = i*i;j<100;j+=i)
          A[j] = 1;
    A[0] = 1;
    A[1] = 1;    
    int n;
    for(int i = 1;i<=15;i++)
    cin>>rem[i];
    ll MAX = 1e15;
    dfs1(0,0,MAX);
    dfs2(0,0,MAX);

    cin>>n;

    while(n--)
    {
      ll a,b;
      cin>>a>>b;
      cout << s1.order_of_key(b+1) + s2.order_of_key(a) - s1.order_of_key(a) - s2.order_of_key(b+1)<<endl;
    }
}