#include<bits/stdc++.h>
#define MOD 1000000007
using namespace	std;
typedef long long int i64;
void multiply(i64 F[2][2], i64 M[2][2]);

void power(i64 F[2][2], i64 y);

/* function that returns nth Fibonacci number */
int fib(int y)
{
i64 F[2][2] = {{1,1},{1,0}};
if(y == 0)
return 0;
power(F, y-1);
return F[0][0]%MOD;
}

/* Optimized version of power() */
void power(i64 F[2][2], i64 y)
{
if( y == 0 || y == 1)
return;
i64 M[2][2] = {{1,1},{1,0}};

power(F, y/2);
multiply(F, F);

if(y&1)
multiply(F, M);
}

void multiply(i64 F[2][2], i64 M[2][2])
{
i64 x = F[0][0]*M[0][0] + F[0][1]*M[1][0];
i64 y = F[0][0]*M[0][1] + F[0][1]*M[1][1];
i64 z = F[1][0]*M[0][0] + F[1][1]*M[1][0];
i64 w = F[1][0]*M[0][1] + F[1][1]*M[1][1];

F[0][0] = x%MOD;
F[0][1] = y%MOD;
F[1][0] = z%MOD;
F[1][1] = w%MOD;
}
int main()
{
//calc();
//cout<<fib(1)<<" "<<fib(2)<<endl;
int t;
scanf("%d",&t);
while(t--)
{
i64 y;
scanf("%lld",&y);
y = (y+1)>>1;
i64 ff = fib(y);
ff = (ff*ff)%MOD;
printf("%lld\n",ff);
}
return 0;
}
