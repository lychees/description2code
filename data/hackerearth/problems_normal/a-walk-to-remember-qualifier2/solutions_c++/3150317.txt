#include<bits/stdc++.h>
using namespace std;
stack<int> st;
const int MAXN = 1e5+3;
bool vis[MAXN];
vector<int> adj[MAXN],rev[MAXN];
int ans[MAXN];
int c;
vector<int> vec;
void DFS(int s) {
	vis[s]=true;
	for(int i=0;i<(int)adj[s].size();i++) {
		if(!vis[adj[s][i]])
			DFS(adj[s][i]);
	}
	st.push(s);
}
void DFS2(int s) {
	vis[s]=true;
	vec.push_back(s);
	c++;
	for(int i=0;i<(int)rev[s].size();i++) {
		if(!vis[rev[s][i]])
			DFS2(rev[s][i]);
	}
}
int main() {
	int n,m;	
	cin>>n>>m;
	for(int i=1;i<=m;i++) {
		int x,y;
		scanf("%d%d",&x,&y);
		adj[x].push_back(y);
		rev[y].push_back(x);
	}
	memset(vis,false,sizeof(vis));
	for(int i=1;i<=n;i++) {
		if(!vis[i])
			DFS(i);
	}
	memset(vis,false,sizeof(vis));
	while(!st.empty()) {
		int v=st.top();
		st.pop();
		if(!vis[v]) {
			vec.clear();
			c=0;
			DFS2(v);
			if(c==1)
				ans[vec[0]]=0;
			else if(c==2)
				ans[vec[0]]=ans[vec[1]]=0;
			else
				for(int i=0;i<(int)vec.size();i++)
					ans[vec[i]]=1;
		}
	}
	for(int i=1;i<=n;i++)
		cout<<ans[i]<<" ";
	cout<<endl;
	return 0;
}