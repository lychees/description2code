#include<bits/stdc++.h>

using namespace std;

typedef long long LL;

#define rep(i,b) for(LL i=0;i<b;i++)
#define rep1(i,b) for(LL i=1;i<=b;i++)
#define REP(i,a,b) for(LL i=a;i<=b;i++)
#define REV(i,b,a) for(LL i=b;i>=a;i--)

#define plln(n) printf("%lld\n",n)

#define s3ll(n1,n2,n3) scanf("%lld%lld%lld",&n1,&n2,&n3)
#define s2ll(n1,n2) scanf("%lld%lld",&n1,&n2)
#define sll(n) scanf("%lld",&n)

#define countSetBits(n) __builtin_popcountll(n)
#define gcd(a,b) __gcd(a,b)

#define mod 1000000007
#define mx 100005

LL arr[mx],sze[mx];
LL fact[mx];

void initialize(LL n)
{
	REP(i,0,n){
		arr[i]=i; sze[i]=1;
	}
}

LL root(LL i)
{
	while(arr[i]!=i)
	{
		arr[i]=arr[arr[i]];
		i=arr[i];
	}
	return i;
}

LL union_set(LL a,LL b)
{
	LL x=root(a);
	LL y=root(b);
	arr[y]=arr[x];
}


void solve()
{
    fact[0]=1;
    rep1(i,mx)
        fact[i]=(fact[i-1]*i)%mod;
}

int main()
{
	LL t,n,i,j,k,x,ans,a,b;
	solve();
	s2ll(n,k);
	initialize(n);
	while(k--){
		s2ll(a,b);
		LL x=root(a);
		LL y=root(b);
		if(x!=y){
			arr[y]=arr[x];
			sze[x]=(sze[x]+sze[y])%mod;
		}
	}
	ans=1;
	rep(i,n+1){
		if(arr[i]==i)
			ans=(ans*fact[sze[i]])%mod;
	}
	plln((ans+mod)%mod);
	return 0;
}
