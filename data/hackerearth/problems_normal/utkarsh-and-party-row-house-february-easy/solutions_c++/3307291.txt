#include<bits/stdc++.h>
using namespace std;
long long BIT1[100005];
long long BIT2[100005];
long long BIT3[100005];
long long int n;
long long arr[100005];
void update1(long long int ind,long long int val)
{
	while(ind<=n)
	{
		BIT1[ind]+=val;
		ind+=(ind&(-ind));
	}
}
void update2(long long int ind,long long int val)
{
	while(ind<=n)
	{
		BIT2[ind]+=val;
		ind+=(ind&(-ind));
	}
}
void update3(long long int ind,long long int val)
{
	while(ind<=n)
	{
		BIT3[ind]+=val;
		ind+=(ind&(-ind));
	}
}
long long query1(long long int ind)
{
	long long s=0;
	while(ind>0)
	{
		s+=BIT1[ind];
		ind-=(ind&(-ind));
	}
	return s;
}
long long query2(long long int ind)
{
	long long s=0;
	while(ind>0)
	{
		s+=BIT2[ind];
		ind-=(ind&(-ind));
	}
	return s;
}
long long query3(long long int ind)
{
	long long s=0;
	while(ind>0)
	{
		s+=BIT3[ind];
		ind-=(ind&(-ind));
	}
	return s;
}
int main()
{
	memset(BIT1,0,sizeof(BIT1));
	memset(BIT2,0,sizeof(BIT2));
	memset(BIT3,0,sizeof(BIT3));
	int q;
	scanf("%lld %d",&n,&q);
	long long int i,j;
	for(i=1;i<=n;i++)
	scanf("%lld",&arr[i]);
	for(i=1;i<=n;i++)
	{
		update1(i,arr[i]*i);
		update2(i,arr[i]*(n-i+1));
		update3(i,arr[i]);
	}
	int x;long long k,l,r;
	while(q--)
	{
		scanf("%d",&x);
		if(x==1)
		{
			scanf("%lld %lld %lld",&k,&l,&r);
			long long dis=0;
			if(l>=k&&r>=k)
			{
				dis+=query1(r)-query1(l-1);
				dis-=(query3(r)-query3(l-1))*k;
			}
			else if(l<=k&&r<=k)
			{
				dis+=query1(r)-query1(l-1);
				dis=(query3(r)-query3(l-1))*k-dis;
			}
			else if(l<=k&&r>=k)
			{
				dis+=query1(k)-query1(l-1);
				dis=(query3(k)-query3(l-1))*k-dis;
				dis+=query1(r)-query1(k-1);
				dis-=(query3(r)-query3(k-1))*k;
			}
			
			printf("%lld\n",dis);
		}
		else
		{
			long long int s;
			scanf("%lld %lld",&k,&s);
			update1(k,k*s);
			update2(k,(n-k+1)*s);
			update3(k,s);
		}
	}
	return 0;
}