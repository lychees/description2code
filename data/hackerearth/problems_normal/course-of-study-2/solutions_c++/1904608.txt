#include <bits/stdc++.h>

using namespace std;

typedef long long int li;
#define MAXN 100110
#define mod 1000000007

vector <li> v[100005];
li fac[100005];
void pre()
{
    li i;
    fac[0] = 1;
    for(i = 1;i < 100005; ++i){
        fac[i] = (fac[i - 1] * i) % mod;
    }
}

long long mul_inv(long long a, long long b)
{
	long long b0 = b, t, q;
	long long x0 = 0, x1 = 1;
	if (b == 1) return 1;
	while (a > 1) {
		q = a / b;
		t = b, b = a % b, a = t;
		t = x0, x0 = x1 - q * x0, x1 = t;
	}
	if (x1 < 0) x1 += b0;
	return x1;
}

li ncr(li i, li j)
{
    li d1 = mul_inv(fac[i - j], mod);
    li d2 = mul_inv(fac[j], mod);
    return (((fac[i] * d1) % mod) * d2) % mod;
}

int main()
{
    //freopen("input.txt", "r", stdin);
    pre();
    li i, j, n, temp, m;
    li tt = 0;
    cin >> n;
    for(i = 0;i < n; ++i){
        cin >> m;
        for(j = 0;j < m; ++j){
            cin >> temp;
            v[i].push_back(temp);
        }
        sort(v[i].begin(), v[i].end());
        tt += m;
    }
    li ans = 1;
    for(i = 0;i < n; ++i){
        li temp = ncr(tt, v[i].size());
        j = 0;
        vector <li> k;
        while(j < v[i].size()){
            li cur = 1;
            li one = v[i][j];
            ++j;
            while(j < v[i].size() && one == v[i][j]){
                ++j;
                ++cur;
            }
            k.push_back(cur);
        }
        for(j = 0;j < k.size(); ++j){
            temp = (temp * fac[k[j]]) % mod;
        }
        tt -= v[i].size();
        ans = (temp * ans) % mod;
    }
    cout << ans << "\n";
    return 0;
}
