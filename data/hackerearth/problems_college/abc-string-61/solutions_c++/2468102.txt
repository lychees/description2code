# include<bits/stdc++.h>
using namespace std;

string binaryconverter(long long x)
    {
		string s;
        if ( !x ) return s="0";
        s = bitset<numeric_limits<unsigned long long>::digits> ( x ).to_string();
        string::size_type n = s.find( '1' );
        return s.substr( n );
    }

long long fastmultiplier(long long a,long long x,long long n)
{
    string s=binaryconverter(x);
	long long r=1;
	for(string::iterator iter=s.begin();iter!=s.end();iter++)
		{
            r=(r*r)%n;
            if(*iter=='1')
             {
                r=(a*r)%n;
             }
		}
	return r;
}

int main()
{
    ios::sync_with_stdio(false);
    long long t,m=1e9+7,n,a,b,c;
    cin>>t;
    while(t--)
    {
        cin>>n;
        if(n<3)
            cout<<0<<"\n";
        else
        {
            a=fastmultiplier(3,n,m);
            b=fastmultiplier(2,n,m);
            c=(a-((((b+m-1)%m)*3)%m)+m)%m;
            cout<<c<<"\n";
        }
    }

}
