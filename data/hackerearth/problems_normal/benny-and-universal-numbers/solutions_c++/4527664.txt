#include<bits/stdc++.h>
#include<sstream>
using namespace std;
int rem[20],prime[100],n;
vector<long long int> numbers;
int check_prime(long long int num)
{
	long long int num1=num;
	string result;
	stringstream convert;
	convert << num1;
	result=convert.str();
	for(int i=0;result[i+1]!='\0';i++)
	{
		if(prime[(result[i]-'0')*10+result[i+1]-'0'])
			return 1;
	}
	return 0;
}
void solve(long long int val,int dig)
{
	if(dig==16)
	return;
	if(val%dig!=rem[dig])
	return;
	if(check_prime(val)==1)
	{
	numbers.push_back(val);
	}
	for(int i=0;i<10;i++)
	solve(val*10+i,dig+1);

}
int main()
{
	prime[2]=1;prime[3]=1;
	for(int i=4;i<=100;i++)
	{
		int flag=0;
		for(int j=2;j*j<=i;j++)
		{
			if(i%j==0)
			{
				flag=1;
				break;
			}
		}
		if(flag)
		prime[i]=0;
		else
		prime[i]=1;
	}
	for(int i=1;i<=15;i++)
	scanf("%d",&rem[i]);
	for(int i=1;i<=9;i++)
	solve(i,1);
	scanf("%d",&n);
	sort(numbers.begin(),numbers.end());
//	cout << numbers.size();
	while(n--)
	{
		long long int l,r;
		scanf("%lld %lld",&l,&r);
		cout << upper_bound(numbers.begin(),numbers.end(),r)-lower_bound(numbers.begin(),numbers.end(),l) << '\n';

	}
return 0;

}

