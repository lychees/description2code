#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool compare(const vector<int>& vec1, const vector<int>& vec2)
{
	if (vec1[0] == vec2[0])
	{
		if (vec1[2] == vec2[2])
			return vec1[1] < vec2[1];
		return vec1[2] > vec2[2];
	}
	return vec1[0] < vec2[0];
}

int main()
{
	int n, i, pres_speed, prev_time, prev_cost;
	vector< vector<int> > myvec(100000, vector<int> (3));
	long long int d, cost;
	cin >> n >> d;
	for(i = 0; i < n; i++)
		cin >> myvec[i][0] >> myvec[i][1] >> myvec[i][2];
	sort(myvec.begin(), myvec.begin()+n, compare);
	i = 1;
	prev_time = myvec[0][0];
	prev_cost = myvec[0][1];
	pres_speed = myvec[0][2];
	cost = 0;
	while(d > 0 && i < n)
	{
		if(pres_speed < myvec[i][2])
		{
			d -= pres_speed * (myvec[i][0] - prev_time);
			cost += prev_cost;
			prev_time = myvec[i][0];
			prev_cost = myvec[i][1];
			pres_speed = myvec[i][2];
		}
		i++;
	}
	if(i == n && d > 0)
		cost += prev_cost;

	cout << cost << endl;
	return 0;
}
