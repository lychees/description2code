// Author: thecodekaiser
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define MXN 500100

ll BIT[4*MXN];
ll arr[MXN];		// Holds the current position of ith num
int N;

ll GET(int idx)
{
	ll ret = 0;
	while(idx > 0)
	{	ret += BIT[idx]; idx -= (idx & -idx); }
	return ret;
}

void SET(int idx, int val)
{
	while(idx < 3*MXN)
	{	BIT[idx] += val; idx += (idx & -idx); }
	return;
}
		
void solve()
{
	int left = MXN, right, N, M, val;
	scanf("%d %d", &N, &M);
	
	right = MXN + N - 1;
	
	for(int i = 0; i < N; i++)
	{
		 scanf("%d", &val);
		 arr[val] = MXN + i;
		 SET(MXN+i, 1);
	}
	
	ll ans = 0;
	char ch;
	
	for(int i = 0; i < M; i++)
	{
		scanf("%d %c", &val, &ch);
		
		ll val1 = GET(arr[val]);
		ll val2 = GET(right);
	//	cout << val1 << " " << val2 << endl;
		
		ans += min(val1-1, val2-val1);
		SET(arr[val], -1);
		
		if(ch == 'l')
		{
			left--;
			SET(left, 1);
			arr[val] = left;
		}
		else
		{
			right++;
			SET(right, 1);
			arr[val] = right;
		}
	}
	
	cout << ans << endl;
			
	return;
}

int main()
{
	solve();
	
	return 0;
}