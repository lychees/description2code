#include <iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<queue>
using namespace std;
#define pp pair<int,int>
class priortise
{
	public:
		bool operator()(const pp &x,const pp &y)
		{
			return x.second>y.second;
		}
};
int A[1255][1255]={0},B[1255][1255]={0};
int main()
{
    int n,i,j;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
    	for(j=1;j<=n;j++)
    	{
    		scanf("%d",&A[i][j]);
    	}
    }
    for(i=1;i<=n;i++)
    {
    	for(j=1;j<=n;j++)
    	{
    		scanf("%d",&B[i][j]);
    	}
    }
    int s,d;
    scanf("%d%d",&s,&d);
    priority_queue<pp,vector<pp>,priortise> pq;
    int dist1[1255]={0},dist2[1255]={0},dist3[1255]={0},dist4[1255]={0};
    for(i=1;i<=n;i++)
    {
    	dist1[i]=1000000007;
    	dist2[i]=1000000007;
    	dist3[i]=1000000007;
    	dist4[i]=1000000007;
    }
    pq.push(pp(s,0));
    dist1[s]=0;
    while(!pq.empty())
    {
    	int u=pq.top().first;
    	pq.pop();
    	//printf("u=%d\n",u);
    	for(i=1;i<=n;i++)
    	{
    		if(dist1[u]+A[u][i]<dist1[i])
    		{
    			dist1[i]=dist1[u]+A[u][i];
    			pq.push(pp(i,dist1[i]));
    		}
    	}
    }
    pq.push(pp(s,0));
    dist2[s]=0;
    while(!pq.empty())
    {
    	int u=pq.top().first;
    	pq.pop();
    	for(i=1;i<=n;i++)
    	{
    		if(dist2[u]+B[u][i]<dist2[i])
    		{
    			dist2[i]=dist2[u]+B[u][i];
    			pq.push(pp(i,dist2[i]));
    		}
    	}
    }
    pq.push(pp(d,0));
    dist3[d]=0;
    while(!pq.empty())
    {
    	int u=pq.top().first;
    	pq.pop();
    	for(i=1;i<=n;i++)
    	{
    		if(dist3[u]+A[i][u]<dist3[i])
    		{
    			dist3[i]=dist3[u]+A[i][u];
    			pq.push(pp(i,dist3[i]));
    		}
    	}
    }
    pq.push(pp(d,0));
    dist4[d]=0;
    while(!pq.empty())
    {
    	int u=pq.top().first;
    	pq.pop();
    	for(i=1;i<=n;i++)
    	{
    		if(dist4[u]+B[i][u]<dist4[i])
    		{
    			dist4[i]=dist4[u]+B[i][u];
    			pq.push(pp(i,dist4[i]));
    		}
    	}
    }
    int ans=1000000007;
    for(i=1;i<=n;i++)
    {
    	if(i==s || i==d)
    		continue;
    	else
    	{
    		//printf("i=%d dist1=%d dist2=%d dist3=%d dist4=%d\n",i,dist1[i],dist2[i],dist3[i],dist4[i]);
    		if(dist1[i]+dist4[i]<ans)
    			ans=dist1[i]+dist4[i];
    		if(dist2[i]+dist3[i]<ans)
    			ans=dist2[i]+dist3[i];
    	}
    }
    printf("%d\n",ans);
    return 0;
}
