#include <cstdio>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cctype>
#include <utility>
#include <queue>
#include <cmath>
#include <complex>
using namespace std;

typedef long long LL;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef pair<LL, LL> PLL;
typedef pair<int, LL> PIL;
typedef pair<LL, int> PLI;
typedef double DB;

#define pb push_back
#define mset(a, b) memset(a, b, sizeof a)
#define all(x) (x).begin(), (x).end()
#define bit(x) (1 << (x))
#define bitl(x) (1LL << (x))
#define sqr(x) ((x) * (x))
#define sz(x) ((int)(x.size()))
#define cnti(x) (__builtin_popcount(x))
#define cntl(x) (__builtin_popcountll(x))
#define clzi(x) (__builtin_clz(x))
#define clzl(x) (__builtin_clzll(x))
#define ctzi(x) (__builtin_ctz(x))
#define ctzl(x) (__builtin_ctzll(x))

#define X first
#define Y second

#define Error(x) cout << #x << " = " << x << endl

template <typename T, typename U> 
inline void chkmax(T& x, U y) {
	if (x < y) x = y;
}

template <typename T, typename U>
inline void chkmin(T& x, U y) {
	if (y < x) x = y;
}

const int MN = 305;
const int p[] = {2, 5, 719};
int n, q;
int a[MN][2 * MN];
int A[MN][2 * MN];
int ans[MN];
int rev[1000][3];

int modExp(int a, int b, int m) {
	int ret = 1;
	for (; b; b /= 2, a = (LL)a * a % m)
		if (b & 1) ret = (LL)ret * a % m;
	return ret;
}

void init() {
	for (int i = 0; i < 3; i++) {
		for (int j = 1; j < p[i]; j++) {
			rev[j][i] = modExp(j, p[i] - 2, p[i]);
		}
	}
}

void calc(int mod, int id) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n + q; j++) {
			A[i][j] = a[i][j] % mod;
		}
	}
	int p = 0;
	for (int i = 0; i < n; i++) {
		if (A[p][i] == 0) {
			int j;
			for (j = p + 1; j < n; j++) if (A[j][i]) break;
			if (j == n) continue;
			for (int k = 0; k < n + q; k++) swap(A[p][k], A[j][k]);
		}
		int tt = rev[A[p][i]][id];
		for (int k = 0; k < n + q; k++) A[p][k] = A[p][k] * tt % mod;
		for (int j = 0; j < n; j++) {
			if (j == p) continue;
			int tt = A[j][i];
			for (int k = 0; k < n + q; k++) {
				A[j][k] = ((A[j][k] - tt * A[p][k]) % mod + mod) % mod;
			}
		}
		p++;
	}
	for (int i = 0; i < q; i++) {
		for (int j = p; j < n; j++) {
			if (A[j][i + n]) ans[i] = 0;
		}
	}
}

int main() {
	
	init();
	scanf("%d%d", &n, &q);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			scanf("%d", a[i] + j);
		}
	}
	for (int j = n; j < n + q; j++) {
		for (int i = 0; i < n; i++) {
			scanf("%d", a[i] + j);
		}
	}
	for (int i = 0; i < q; i++) ans[i] = 1;
	for (int i = 0; i < 3; i++) {
		calc(p[i], i);
	}
	for (int i = 0; i < q; i++) {
		printf("%s\n", ans[i] ? "Yes" : "No");
	}
	
	return 0;
}
