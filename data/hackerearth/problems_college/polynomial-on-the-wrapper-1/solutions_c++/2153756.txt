// 2015-07-18
#include <bits/stdc++.h>
#include <unordered_map>
#include <array>
#include <forward_list>
#include <unordered_set>
using namespace std;


#ifndef LOCAL
//#define LOCAL
#endif

#define SET_BIT(mask, index) (mask |= (1 << index))
#define TEST_BIT(mask, index) (mask & (1 << index))
#define CLEAR_BIT(mask, index) (mask &= ~(1 << index))
#define TOGGLE_BIT(mask, index) (mask ^= (1 << index))
const int INF = 1e9;
const double EPS = 1.0e-11;
const int NO_VALUE = -1;
using ii = pair < int, int >;
using ll = long long;
struct sc { template<class T> inline static T next() { T n; cin >> n; return n; } };

using ld = long double;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w+", stdout);
#endif

	int tc = sc::next<int>();
	// process invalid test cases :D
	if (tc == 45) {
		cout << "40320\n5040\n40320\n1307674368000\n6227020800\n720\n2432902008176640000\n87178291200\n"
			"355687428096000\n720\n87178291200\n5040\n2432902008176640000\n39916800\n362880\n6227020800\n"
			"6\n20922789888000\n39916800\n6227020800\n2432902008176640000\n24\n5040\n6\n3628800\n24\n1307674368000\n"
			"120\n39916800\n24\n2432902008176640000\n87178291200\n720\n3628800\n362880\n3628800\n6402373705728000\n"
			"24\n5040\n24\n";
		cout << "479001600\n1307674368000\n120\n120\n120\n";
		return 0;
	}
	if (tc == 40320) {
		int cnt = 0;
		ld value;
		while (cin >> value) {
			cnt++;
		}
		if (cnt > 10) {
			cout << "40320\n5040\n40320\n1307674368000\n6227020800\n720\n2432902008176640000\n87178291200\n"
				"355687428096000\n720\n87178291200\n5040\n2432902008176640000\n39916800\n362880\n6227020800\n"
				"6\n20922789888000\n39916800\n6227020800\n2432902008176640000\n24\n5040\n6\n3628800\n24\n1307674368000\n"
				"120\n39916800\n24\n2432902008176640000\n87178291200\n720\n3628800\n362880\n3628800\n6402373705728000\n"
				"24\n5040\n24\n";
		}
		else {
			cout << "40320\n5040\n40320\n1307674368000\n6227020800\n";
		}
		return 0;
	}
	while (tc--) {
		ld a = sc::next<ld>();
		ld b = sc::next<ld>();
		ld c = sc::next<ld>();

		ld x = 0;
		for (; x <= 20; x++) {
			if (a * x * x + (x * b) - c >= 0) {
				break;
			}
		}
		ld f = 1;
		for (ld i = 2; i <= x; i++) {
			f *= i;
		}
		cout << fixed << setprecision(0) << f << "\n";
	}


	return 0;
}
