#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<string>
#include<vector>
#include<map>
#include<stack>
#include<queue>
#include<algorithm>
#include<climits>

#define sd(c) scanf("%d", &c)
#define sc(c) scanf("%c", &c)
#define ss(c) scanf("%s", c)
#define sld(c) scanf("%ld", &c)
#define slld(c) scanf("%lld", &c)
#define pb(c) push_back(c)
#define FOR(i, v) for(int i=0; i<v.size(); i++)
#define print(v) for(int i=0; i<v.size(); i++) { cout<<v[i]<<(i<v.size()-1?" ":"");} cout<<endl;

using namespace std;

int count;

int dp[200][20000];

int main()
{
	int t;

	cin>>t;

	while(t--)
	{
		int n, a[200], count = 0, maxval = 0;

		
		cin>>n;
		for(int i=0; i<n; i++)
		{
			cin>>a[i];
			maxval+=a[i];
		}
		
		for(int i=0; i<n; i++)
		{
			for(int j=0; j<=maxval; j++) 
			{
				dp[i][j] = 0;
			}
		}

		for(int i=0; i<n; i++)
		{
			dp[i][0] = 1;
		}
		

		for(int j=1; j<=maxval; j++)
		{
			if(a[0] == j)
			{
				dp[0][j] = 1;
			}
			
			for(int i=1; i<n; i++)
			{
				if(dp[i-1][j] == 1)
				{
					dp[i][j] = 1;
				}
				else if(a[i]<=j && dp[i-1][j-a[i]] == 1)
				{
					dp[i][j] = 1;
				}
			}
		}

		for(int i=0; i<=maxval; i++)
		{
			if(dp[n-1][i] == 1)
				count++;
		}
		cout<<count<<endl;
	}
	return 0;
}
