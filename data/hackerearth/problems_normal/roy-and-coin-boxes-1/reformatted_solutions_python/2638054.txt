maxn = pow(10, 6)
maxm = maxn

startBox = [0 for i in range(maxn+1)]
endBox = [0 for i in range(maxn+1)]
netDays = [0 for i in range(maxm+1)]
totalCoins = [0 for i in range(maxm+1)]


def solve():
    count = 0
    for i in range(maxn+1):
        count += startBox[i]
        netDays[i] = count
        count -= endBox[i]

    for i in range(maxm+1):
        totalCoins[netDays[i]] += 1

    for i in range(maxn-1, 0, -1):
        totalCoins[i] += totalCoins[i+1]


if __name__ == '__main__':
    noBoxes = int(raw_input())
    noDays = int(raw_input())

    for i in range(noDays):
        L, R = tuple(map(int, raw_input().split()))
        startBox[L-1] += 1
        endBox[R-1] += 1

    solve()
    noQueries = int(raw_input())
    while (noQueries > 0):
        minCoins = int(raw_input())
        print totalCoins[minCoins]
        noQueries -= 1
