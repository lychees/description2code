#include <bits/stdc++.h>
using namespace std;

long long int dp[110][10010];
long long int fp[110][10010];
long long int f[110];
long long int s[110];

int main()
{
    int t;
    long long int n,p,i,j,z;

    cin >> t;

    while (t--) {
        cin >> n >> p;
        for (i = 1; i <= n; i++)
            cin >> s[i] >> f[i];

        memset(dp[0],0,sizeof(dp[0]));
        memset(fp[0],0,sizeof(fp[0]));

        for (i = 1; i <= n; i++) {
            for (j = 1; j <= p; j++) {
                dp[i][j] = dp[i-1][j];
                fp[i][j] = fp[i-1][j];
                if (f[i] <= j) {
                    z = dp[i-1][j-f[i]] + (s[i] - f[i]);
                    dp[i][j] = max(z,dp[i][j]);
                    if (z > dp[i-1][j]) {
                        fp[i][j] = fp[i-1][j-f[i]] + f[i];
                    } else {
                        if (z == dp[i-1][j]) {
                            fp[i][j] = min(fp[i][j], fp[i-1][j-f[i]] + f[i]);
                        }
                    }
                }
            }
        }
        cout <<fp[n][p]<<" "<<(dp[n][p] + p)<<endl;
    }
    return 0;
}
