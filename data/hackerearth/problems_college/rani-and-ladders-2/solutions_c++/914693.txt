#include<bits/stdc++.h>
#define si(n)scanf("%d",&n)
#define pi(n)printf("%d\n",n)
#define sll(n)scanf("%lld",&n)
#define pll(n)printf("%lld\n",n)
using namespace std;using ll=long long;using pii=pair<int,int>;
int main(){
    int t;si(t);
    while(t--){
        int n,l;si(n);si(l);vector<int>d(n+1,INT32_MAX);vector<int>g[n+1];
        for(int i=0;i<l;i++){
            int s,e;si(s);si(e);g[s].push_back(e);
        }
        priority_queue<pii,vector<pii>,greater<pii> >q;
        d[1]=0;q.push(make_pair(1,0));
        while(!q.empty()){
            int v=q.top().first,dist=q.top().second;q.pop();
            if(dist<=d[v]){
                if(g[v].size()==0){ // if there is no ladder costed me a WA:)
                    for(int i=2;i<=12 && i+v<=n;i++){
                        if(d[v+i]>d[v]+1){ //edge weight 1.
                            d[v+i]=d[v]+1;q.push(make_pair(v+i,d[v+i]));
                        }
                    }
                }
                else{
                    for(int x:g[v]){
                        if(d[x]>d[v]){
                            d[x]=d[v];q.push(make_pair(x,d[x])); // edge weight 0.
                        }
                    }
                }
            }
        }
        pi(d[n]);
    }
    return 0;
}

