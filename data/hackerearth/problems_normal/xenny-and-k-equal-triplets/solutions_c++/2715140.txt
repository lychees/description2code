	//
	//  THOUGHTWORKS1.cpp
	//  problemsolving
	//
	//  Created by Kaushik Surikuchi on 11/10/15.
	//  Copyright Â© 2015 KaushikSurikuchi. All rights reserved.
	//

#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;

long long tests, N, K, element, totalK;

inline long long Nc3(long long value) {
	if (value < 3) {
		return 0LL;
	}
	
	return (value * (value - 1) * (value - 2)) / 6;
}

inline long long getDenominator() {
	return Nc3(N);
}

inline long long getNumerator() {
	return Nc3(totalK);
}

inline void solve() {
	long long denominator = getDenominator();
	long long numerator = getNumerator();
	
	long long gcd = __gcd(numerator, denominator);
	
	cout << numerator / gcd << "/" << denominator / gcd << "\n";
	
	return;
}

int main() {
	ios::sync_with_stdio(false);
	
	cin >> tests;
	
	while (tests--) {
		totalK = 0LL;
		cin >> N >> K;
		for (int pos = 0; pos < N; ++pos) {
			cin >> element;
			if (element == K) {
				totalK++;
			}
		}
		
		solve();
	}
	
	return 0;
}