#include <bits/stdc++.h>
using namespace std;

bool ok(string s) {
	for(int i = 1; i < s.size(); i++)
		if(s[i] == s[i - 1] && s[i] == '1') return false;
	return true;
}

string go(string s) {
	int n = s.size();
	vector <bool> arr(n + 5, 0);
	for(int i = 0; i < n; i++)
		arr[i] = s[i] == '1';
	for(int i = n - 1; i >= 0; i--) {
		if(arr[i - 1] == arr[i] && arr[i] == 1) {
			for(int j = 0; j <= i; j++)
				arr[j] = 0;
			for(int j = i + 1; 1; j++) {
				if(arr[j] == 0 && arr[j + 1] == 0) {
					arr[j] = 1;
					break;
				} else {
					arr[j] = 0;
				}
			}
			break;
		}
	}
	bool yes = 0;
	s.clear();
	for(int i = n + 4; i >= 0; i--)
		if(yes || arr[i]) {
			yes = true;
			s += arr[i] ? '1' : '0';
		}
	reverse(s.begin(), s.end());
	return s;
}


int solve(int n) {
	string s;
	while(n) {
		s += char(n % 2 + '0');
		n /= 2;
	}
	cerr << s << endl;
	
	if(!ok(s)) {
		s = go(s);
	}
	cerr << s << endl;
	int num = 0;
	int two = 1;
	for(int i = 0; i < s.size(); i++) {
		if(s[i] == '1')
			num += two;
		two *= 2;
	}
	return num;
}

int solve2(int n) {
	for(int i = n; i <= 2 * n; i++) {
		string s;
		int tmp = i;
		while(tmp) {
			s += char(tmp % 2 + '0');
			tmp /= 2;
		}
		if(ok(s))
			return i;
	}
}

int main() {
	
	int t;
	scanf("%d", &t);
	while(t--) {
		int n;
		scanf("%d", &n);
		int x = solve2(n);
		printf("%d\n", x);
		
	}
	
}