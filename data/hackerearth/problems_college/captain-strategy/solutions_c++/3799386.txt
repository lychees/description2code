#include<bits/stdc++.h>
#define ll long long int
#define pd(a) printf("%d",a)
#define pld(a) printf("%lld",a)
#define pn() printf("\n")
#define ps(s) printf("%s",s)
#define sd(a) scanf("%d",&a)
#define sld(a) scanf("%lld",&a)
#define ss(s) scanf("%s",s)
#define fb(i,n) for(i=0;i<n;i++)
#define w(t) while(t--)
#define mod 1000000007

using namespace std;

vector<int>child[100006];

ll parent[100006],value[100006],arr[100006];

void fn(ll node,ll temp)
{
    if(node!=1)
    {
        value[node]+=temp;
        fn(parent[node],temp);
    }
    else
    {
        value[node]+=temp;
        return;
    }
}

void dfs(ll node)
{
    value[node]+=arr[node];
    ll i;
    fb(i,child[node].size())
    {
        //cout<<"node "<<node<<" "<<arr[child[node][i]];
        dfs(child[node][i]);
    }
    fb(i,child[node].size())
    {
        value[node]+=value[child[node][i]];
    }
    //cout<<endl;
}

int main()
{
   ll n,m,i,j,h,limit;
   sld(n);sld(m);
   fb(i,n)
   {
       parent[i+1]=i+1;
       sld(arr[i+1]);
   }
   fb(i,n-1)
   {
       ll a,b;
       sld(a);sld(b);
       child[a].push_back(b);
       parent[b]=(a);
   }

   dfs(1);

   w(m)
   {
       char query;
       cin>>query;
       if(query=='Q')
       {
           ll a;
           cin>>a;
           cout<<value[a]<<endl;
       }
       else
       {
           ll a,b,temp;
           cin>>a>>b;
           temp=b-arr[a];
           arr[a]=b;
           fn(a,temp);
       }
   }
    return 0;
}
