#include<iostream>
#include<algorithm>

# define mod 1000000007

using namespace std;

int dx[] = {2,1,-1,-2,-2,-1,1,2};
int dy[] = {1,2,2,1,-1,-2,-2,-1};

int arr[1001][1001],cnt = 0;
int m,n;
long long ans;

long long int fact[1000001];
int visited[1001][1001];

void pre_calculate()
{
	fact[0] = 1;
	for(long long int i = 1; i<=1e6;i++)
	 fact[i] = (fact[i-1]*i)%mod;
	 
}
int issafe(int x,int y)
{
  if(x >= 0 && x < n && y >= 0 && y < m && arr[x][y] && !visited[x][y])
    return 1;
    
    return 0;
	
	
}


void dfs(int x,int y)
{
       visited[x][y] = 1;
       cnt++;		
	
		
		for(int i = 0;i<8;i++)
		{
			int xx = x + dx[i];
			int yy = y + dy[i];
		//	cout<<s.x<<" "<<s.y<<"\n";
			if(issafe(xx,yy))
			{
				dfs(xx,yy);
			}
		} 
	
}


int main()
{
	int t,i,j,q,x,y;
	cin>>t;
	
	pre_calculate();
	
	while(t--)
	{
		cin>>n>>m>>q;
		cnt = 0;
		for(i = 0;i<n;i++){
		   for(j = 0;j<m;j++){
		    arr[i][j] = 0;
		    visited[i][j] = 0;
		}
	}
		    
		for(i = 0;i<q;i++)    
		{
		  cin>>x>>y;
		  x--;
		  y--;
		  arr[x][y] = 1;
		 	
		}
		
	    ans = 1;
		
		for(i = 0;i<n;i++){
		   for(j = 0;j<m;j++){
		     	if(arr[i][j] && !visited[i][j]){
		     		cnt = 0;
		     		dfs(i,j);
		     	//	cout<<cnt<<"\n";
		     		ans = (ans*fact[cnt])%mod;
		     		
		     	}
		     }
		 }
		     
	 	
		cout<<ans%mod<<"\n";
	}
	
}