#include<bits/stdc++.h>
using namespace std;
const int MAXN = 17;
int POWER[MAXN];
long long dp[131172];
int D[MAXN];
int L[MAXN];
int n;
long long go(int mask) {
	int idx=0;
	for(int i=0;i<MAXN;i++) if(POWER[i]&mask) idx++;
	if(idx==n) return 0;
	if(dp[mask]!=-1) return dp[mask];
	long long ret=-1e18+3;
	for(int i=0;i<n;i++) {
		if(!(POWER[i]&mask)) {
			long long temp=n;
			temp*=1LL*L[i];
			temp+=1LL*(1LL*i*D[i])*(1LL*idx*(idx+1)/2);
			temp-=1LL*(1LL*n*i)*(1LL*D[i]*idx);
			ret=max(ret,temp+go(mask|POWER[i]));
		}
	}
	return dp[mask]=ret;
}
int main() {
	POWER[0]=1;
	for(int i=1;i<MAXN;i++) POWER[i]=POWER[i-1]<<1;
	memset(dp,-1,sizeof(dp));
	scanf("%d",&n);
	for(int i=0;i<n;i++) scanf("%d",&L[i]);
	for(int i=0;i<n;i++) scanf("%d",&D[i]);
	printf("%lld\n",go(0));
	return 0;
}