#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define eps 1e-9
#define sqr(x) ((x)*(x))
#define SET(a,b) memset((a),(b),sizeof((a)))
#define pw(x) (1ll<<(x))
#define buli(x) __builtin_popcountll(x)
#define endl "\n"

const int MOD = 1e9+7;

typedef long long ll;
typedef vector<int> vi;
typedef map<int,int> mii;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

inline bool EQ(double a,double b) { return fabs(a - b) < 1e-9; }
inline void set_bit(int & n, int b) { n |= pw(b); }
inline void unset_bit(int & n, int b) { n &= ~pw(b); }

inline void check(ll &x) {
	if(x>=MOD)
		x%=MOD;
}

const int MAXN = 1e6+5;
ll f[MAXN],h[MAXN],g[MAXN];
ll power(ll x) {
	ll ret=1;
	for(int i=1;i<=x;i++) ret*=3;
	return ret;
}
int main() {
//	freopen("TASK.in","r",stdin);	
//	freopen("TASK.out","w",stdout);
	ll a,b,c,d,e,xf;
	cin>>a>>b>>c>>d>>e>>xf;
	f[0]=f[1]=g[0]=0;
	g[1]=1;
	for(int i=0;i<=2;i++) {
		if(i>=2) {
			f[i] = (((a * f[i - 1])%MOD * g[i - 2])%MOD + (b * (g[i - 1] * f[i - 2])%MOD)%MOD)%MOD;
			g[i] = (((c * g[i - 1])%MOD * f[i - 2])%MOD + (d * (power(f[i-1]))%MOD)%MOD)%MOD;
		}
		h[i]=((e*f[i])%MOD+(xf*g[i])%MOD)%MOD;
	}
	int q;
	cin>>q;
	h[1]+=h[0];
	h[1]%=MOD;
	while(q--) {
		ll x;
		cin>>x;
		if(x>=2) {
			ll ans=x-1;
			ans*=h[2];
			ans%=MOD;
			ans+=h[1];
			ans%=MOD;
			printf("%lld\n",ans);
		}
		else printf("%lld\n",h[x]);
	}
	return 0;
}