#include "bits/stdc++.h"
using namespace std;
const int N = 16;
int t;
int n;
pair < long long , long long > dp[1 << N];
pair < long long , long long > solve(int mask){
    if(dp[mask] != make_pair(-1LL , -1LL)){
        return dp[mask];
    }
    if(mask == ((1 << n) - 1)){
        return make_pair(0LL , 1LL);
    }
    pair < long long , long long > res;
    int pos = n - 1 - __builtin_popcount(mask);
    for(int i = 0 ; i < n ; ++i){
        if(i != pos && (!(mask & (1 << i)))){
            auto temp = solve(mask | (1 << i));
            res.first += temp.first;
            res.second += temp.second;
            res.first += temp.second * __builtin_popcount(mask  & ((1 << i) - 1));
        }
    }
    return dp[mask] = res;
}
int main(){
    scanf("%d" , &t);
    while(t--){
        scanf("%d" , &n);
        for(int i = (1 << n) - 1 ; i >= 0 ; --i){
            dp[i] = make_pair(-1 , -1);   
        }
        printf("%lld\n" , solve(0).first);
    }
}