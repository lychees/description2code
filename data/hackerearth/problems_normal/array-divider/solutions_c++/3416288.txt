#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<vector>
#include<string>
#include<cstring>
#include<unordered_map>
#include<cassert>
#include<cmath>

//code by cl3488

#define dri(X) int (X); scanf("%d", &X)
#define drii(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define driii(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define pb push_back
#define mp make_pair
#define rep(i, s, t) for ( int i=(s) ; i <(t) ; i++)
#define fill(x, v) memset (x, v, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define why(d) cerr << (d) << "!\n"
#define whisp(X, Y) cerr << (X) << " " << (Y) << "#\n"
#define exclam cerr << "!!\n"
typedef long long ll;
using namespace std;
typedef pair<int, int> pii;
const ll inf = (ll)1e9 + 70;
const ll mod = 1e9 + 7;
const int maxn = 505;

ll a[maxn];
ll ss[maxn];

ll dp[maxn][305];

int main(){
	if (fopen("input.txt", "r")) freopen("input.txt", "r", stdin);
	dri(n); dri(K);
	ll S = 0;
	rep(i,1,n+1){
		dri(t); a[i] = t; S += t;
	}
	rep(i,1,n+1){
		ss[i] = ss[i-1] + a[i];
	}
	//dp[0][k] = 0 for all k
	rep(i,1,n+1){
		dp[i][0] = 1e18;//you dare not run out...
		rep(k,1,K+1){
			dp[i][k] = 1e18;
			rep(j,1,i+1){
				ll here = ss[i] - ss[j-1];
				dp[i][k] = min(dp[i][k], dp[j-1][k-1] + here * here);
			}
		}
	}
	ll ans = dp[n][K];
	cout << (ll)K * ans - S * S << "\n";
	return 0;
}