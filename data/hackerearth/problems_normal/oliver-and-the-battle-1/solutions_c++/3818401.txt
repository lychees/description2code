# include <bits/stdc++.h>
using namespace std;
int const N=1e3 +5;
int matrix[N][N];
bool visit[N][N];

int bfs(int x,int y){
	int count=0;
	queue <pair<int ,int > >q;
	q.push(make_pair(x,y));
	visit[x][y]=0;
	while(!q.empty()){
		int a,b;
		a=q.front().first;
		b=q.front().second;
		q.pop();
		if(visit[a][b])continue;
		if(visit[a][b]==0){
			count++;
			visit[a][b]=1;
		}
		for (int i = -1; i < 2; ++i)
		{
			for (int j = -1; j < 2; ++j)
			{
				if((!visit[a+i][b+j]) and matrix[a+i][b+j] and (a+i>=0) and (b+j>=0)){
					q.push(make_pair(a+i,b+j));
				}
			}
		}
	}
return count;
}
int  main()
{
	//freopen("input.txt","r",stdin);
	int tc,height=0;
	cin>>tc;
	while(tc--){
		int n,m;
		cin>>n>>m;
		height=0;
		for (int i = 0; i < n; ++i)
		{
			for (int j = 0; j < m; ++j)
			{
				visit[i][j]=0;
				cin>>matrix[i][j];
			}
		}
		int max_value=0;
		for (int i = 0; i < n; ++i)
		{
			for (int j = 0; j < m; ++j)
			{
				if((!visit[i][j]) and matrix[i][j]==1){
					max_value=max(max_value,bfs(i,j));
					height++;
				}
			}
		}
		cout<<height<<" "<<max_value<<endl;
	}
	return 0;
	}
