
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <list>
#include <algorithm>
using namespace std;

#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define FOR(i,n) for(i=0;i<n;i++)
#define FORJAS(i,j,n) for(i=j;i<n;i++)
#define FORS(i,n) for(i=1;i<=n;i++)
#define FORJS(i,j,n) for(i=j;i<=n;i++)
#define LEN 1005
#define INF 100005
#define I int
#define LL long long
#define L long

bool is_perfect_cube(long n) {
    long root = round(cbrt(n));
    return n == root * root * root;
}
L preSum[LEN][LEN];
L grid[LEN][LEN];

int main()
{
	int n,k,i,j;
	cin>>n>>k;
	FOR(i,n){
		FOR(j,n)
			cin>>grid[i][j];
	}
	preSum[0][0]=grid[0][0];
	FORJAS(i,1,n)
		preSum[0][i]=preSum[0][i-1]+grid[0][i];
	FORJAS(i,1,n)
		preSum[i][0]=preSum[i-1][0]+grid[i][0];
	FORJAS(i,1,n){
		int colSum=grid[i][0];
		FORJAS(j,1,n){
			preSum[i][j]=preSum[i-1][j]+grid[i][j]+colSum;
			colSum+=grid[i][j];
		}
	}
	// FOR(i,n){
	// 	FOR(j,n)
	// 		cout<<preSum[i][j]<<" ";
	// 	cout<<endl;
	// }
	int ans=0;
	k--;
	for(i=0;i+k<n;i++){
		for(j=0;j+k<n;j++){
			L sum=0;
			if(i==0 && j==0)
				sum = preSum[i+k][j+k];
			else if(i == 0)
				sum = preSum[i+k][j+k] - preSum[i+k][j-1];
			else if(j == 0)
				sum = preSum[i+k][j+k] - preSum[i-1][j+k];
			else
				sum = preSum[i+k][j+k] - preSum[i+k][j-1] - preSum[i-1][j+k] + preSum[i-1][j-1];
			if(is_perfect_cube(sum))
				ans++;
			// cout<<sum<<":"<<ans<<endl;
		}
	}
	cout<<ans<<endl;
	return 0;
}