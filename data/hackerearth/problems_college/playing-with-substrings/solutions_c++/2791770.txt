            #include<bits/stdc++.h>
            using namespace std;

            #define     ll       long long
            #define     jkm()    int t; cin>>t; while(t--)

            #define     pb(a)    push_back(a)
            #define     sorta(v) sort(v.begin(), v.end())
            #define     sortd(v) sort(v.begin(), v.end(), greater<auto>())
            #define     all(v)   v.begin(),v.end()
            #define     l(a)     a.length()
            #define     sz(a)    a.size()
            #define     rep(i,n)  for(int i=0;i<n;i++)
            #define     fr(i,a,b)for(int i=(a);i<=(b);i++)
            #define     frd(i,a,b)       for(int i=(a);i>=(b);i--)
            #define     debug(x) cout << '>' << #x << ':' << x << endl;
            template< class T > void display(vector<T>& v){ for(auto it=v.begin();it!=v.end();it++) cout<<*it<<" "; }
            template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }      //gcd
            template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b);}      //lcm
            template<class T> inline int monkbit(T n){return (n==0)?0:(1+monkbit(n&(n-1)));} //bitmonk
            template<class T> inline bool isPrimeNumber(T n) {if(n<=1)return false;for (T i=2;i*i<=n;i++) if (n%i==0) return false;return true;}
            template<class T> inline T powerMod(T p,int e,T m) {if(e==0)return 1%m;else if(e%2==0){T t=powerMod(p,e/2,m);return multiplyMod(t,t,m);}else return multiplyMod(powerMod(p,e-1,m),p,m);}
            bool isUpperCase(char c){return c>='A' && c<='Z';}
            bool isLowerCase(char c){return c>='a' && c<='z';}
            char toLowerCase(char c){return (isUpperCase(c))?(c+32):c;}
            char toUpperCase(char c){return (isLowerCase(c))?(c-32):c;}
            template<class T> string toString(T n){ostringstream ost;ost<<n;ost.flush();return ost.str();}
            int toInt(string s){int r=0;istringstream sin(s);sin>>r;return r;}
            double toDouble(string s){double r=0;istringstream sin(s);sin>>r;return r;}
            const double pi=acos(-1.0);


int main(){
//code
ios::sync_with_stdio(0);
int i,j;
string s,t;
cin>>s>>t;
int c=0;
set<string> myset;
set <string> ::iterator it;
for(i=0;i<s.length();i++)
{
    for(j=1;j+i<=s.length();j++)
    {
        string tok=s.substr(i,j);
        myset.insert(tok);

    }


}
for(it=myset.begin();it!=myset.end();it++)
{
    string str=*it;
    if(str.find(t)!=string::npos)
        c++;
}

cout<<c;
return 0;
}
