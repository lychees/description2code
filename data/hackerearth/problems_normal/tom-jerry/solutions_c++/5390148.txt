#include <bits/stdc++.h>

using namespace std;

int n;

int arr [100 + 1][100 + 1];
int dirc [][2] = { {1 , 0}, {-1 , 0}, {0 , 1}, {0 , -1} };
int ans = 0;
bool vis [100 + 1][100 + 1];

void rec(int x, int y){

    if(x == n - 1 && y == n - 1){     // base case

        ans++;                        // increase the number of ways
        return;
    }

    vis[x][y] = true;

    for(int i = 0; i < 4; i++){

        int dx = x + dirc[i][0];                                // new transitions
        int dy = y + dirc[i][1];

        if(dx < 0 || dx >= n || dy < 0 || dy >= n) continue;    // outside of the board
        if(vis[dx][dy] || arr[dx][dy] == 1) continue;           // check for invalid or visited positions

        rec(dx, dy);
        vis[dx][dy] = false;            // back track
    }
}

int main()
{

    cin >> n;

    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cin >> arr[i][j];
        }
    }

    rec(0 , 0);
    cout << ans << "\n";

    return 0;
}