/* Man Mohan Mishra aka m17
   IIIT - Allahabad */
#include <cstdio>
#include <cmath>
#include <cstring>
#include <climits>
#include <cstdlib>
#include <cctype>
#include <iostream>
#include <algorithm>
#include <utility>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <iterator>

#define MOD 1000000007
#define INF 1000000000000000000
#define PI acos(-1)

using namespace std;

long long GCD (long long a,long long b) {
	if (b == 0) return a;
	return(a % b == 0 ? b : GCD(b,a % b));
}

long long POW (long long base,long long exp) {
	long long val;
	val = 1;
	while (exp > 0) {
		if (exp % 2 == 1) {
			val = (val * base) % MOD;
		}
		base = (base * base) % MOD;
		exp = exp / 2;
	}
	return val;
}

long long x[1005],y[1005];

int main()
{
	int n,i,j,idx,ans;
	long long h;
	scanf("%d",&n);
	for (i = 0; i < n; i++) {
		scanf("%lld%lld",&x[i],&y[i]);
	}
	ans = 0;
	for (i = 0; i < n; i++) {
		idx = -1;
		for (j = i + 1; j < n; j++) {
			if (idx == -1) {
				ans += 1;
				idx = j;
			} else {
				if (y[idx] >= y[i]) {
					h = (x[j] - x[idx]) * (y[idx] - y[i]);
					h = h / (x[idx] - x[i]) + 1 * (h % (x[idx] - x[i]) != 0);
					h = h + y[idx];
					if (y[j] >= h) {
						ans += 1;
						idx = j;
					}
				} else {
					h = (x[j] - x[idx]) * (y[i] - y[idx]);
					h = h / (x[idx] - x[i]);
					h = y[idx] - h;
					if (y[j] >= h) {
						ans += 1;
						idx = j;
					}
				}
			}
		}
	}
	printf("%d\n",ans);
	return 0;
}