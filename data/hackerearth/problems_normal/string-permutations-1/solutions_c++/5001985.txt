#include <iostream>
#include <vector>
#include <map>

using namespace std;

int giveMax(vector<string> &A)
{
	map<string, int> tab;
	int mx = 0;
	for(int i=0; i<A.size(); i++)
	{
		if(tab.find(A[i])!=tab.end())
		{
			//cout<<"Updating nonew"<<endl;
			tab[A[i]] += 1;
			if(mx < tab[A[i]])
			{
				mx = tab[A[i]];
			}
			//cout<<tab[A[i]]<<endl;
		}
		else
		{
			//cout<<"Updating new"<<endl;
			tab[A[i]] = 1;
			mx = max(mx, tab[A[i]]);
		}
	}
	long long ans = 0;
	for(map<string, int>::iterator it = tab.begin(); it!=tab.end(); it++)
	{
		if(it->second == mx)
		{
			ans += mx;
		}
	}
	return ans;
}

int main()
{
    int n;
    string str;
    cin>>n;
    vector<string> v;
    while(n--)
    {
    	cin>>str;
    	v.push_back(str);
    }
    cout<<giveMax(v)<<endl;
    return 0;
}
