// Headers
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cassert>
#include<cstdlib>
#include<vector>
#include<map>
#include<fstream>
#include<functional>
#include<list>
#include<stack>
#include<queue>
#include<algorithm>
#include<bitset>
#include<set>
using namespace std;
// Global declarations
typedef long long int ll;
typedef vector<int> vi;
typedef vector<char> vc;
typedef pair<int, int> pi;
const int mod = 1e9 + 7;
const int INF = 1 << 25;
// Macros
#define mp make_pair
#define el putchar('\n')
#define sp putchar(' ')
#define Fill(a,val) memset(a,val,sizeof a)
#define gcd __gcd
#define all(a) a.begin(),a.end()

ll mul[1003][1003];

int main(){
	int D; cin >> D;
	while (D--){
		ll N, K;
		cin >> N >> K;
		set<pair<ll,ll> >S;
		int A; cin >> A;
		for (int i = 1; i <= N;++i)
		for (int j = 1; j <= N; ++j)
			mul[i][j] = 1;
		while (A--){
			char c;
			cin >> c;
			if (c == 'm'){
				ll x1, y1, x2, y2;
				cin >> x1 >> y1 >> x2 >> y2;
				ll ans = ((((x2 - x1 + 1)*(y2 - y1 + 1)) % mod)*K) % mod;
				for (set<pair<ll,ll> >::iterator it = S.begin(); it != S.end(); ++it){
					pair<ll,ll> xy = *it;
					ll x = xy.first;
					ll y = xy.second;
					if (x >= x1&&x <= x2&&y >= y1&&y <= y2){
						ans = (ans + ((mul[x][y] - 1)*K) % mod) % mod;
					}
				}
				cout << ans; el;
			}
			else {
				ll x, y, Z; cin >> x >> y >> Z;
				S.insert(mp(x, y)); mul[x][y] = (mul[x][y] * Z) % mod;
			}
		}
	}
	return 0;
}