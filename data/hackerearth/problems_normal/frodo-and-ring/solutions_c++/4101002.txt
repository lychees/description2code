#include <iostream>
#include <stdio.h>
using namespace std;
#define MAX(a, b) ((a) > (b) ? ( a) : (b))
long long dp[201][201];
char Map[200][200];
int N,M;

int calEnergy(int c)
{
	switch(c)
	{
		case 76:
			return 0;
		case 84:
			return 150;
		case 68:
			return -100;
	}
}

int main()
{
	int T;
	cin>>T;
	while(T--)
	{
		scanf("%d %d",&N, &M);
		getchar();
		for(int i=0; i<N; i++)
		{
			for(int j=0; j<M; j++)
			{
				//Map[i][j] = getchar_unlocked();
				//cin>>Map[i][j];
				Map[i][j] = getchar();
				getchar();
				dp[i][j] = -1;
			}
		}
		
		dp[0][0] =  calEnergy(Map[0][0]);
		if(dp[0][0] >0)
		{
			for(int i=1; i<M; i++)
			{
				if(dp[0][i-1] >=0 )
				{
					dp[0][i] = calEnergy(Map[0][i]) + dp[0][i-1];
					dp[0][i] = dp[0][i] >= 0 ? dp[0][i] : -1; 
				}
			}
			for(int i=1; i<N; i++)
			{
				if(dp[i-1][0] >=0 )
				{
					dp[i][0] = calEnergy(Map[i][0]) + dp[i-1][0];
					dp[i][0] = dp[i][0] >= 0 ? dp[i][0] : -1; 
				}
			}
			
			for(int i=1; i<N; i++)
			{
				for(int j=1; j<M; j++)
				{
					long long maxE = max(dp[i][j-1], dp[i-1][j]);
					if(maxE >= 0)
					{
						dp[i][j] = calEnergy(Map[i][j]) + maxE;
						dp[i][j] = dp[i][j] >= 0 ? dp[i][j] : -1;
					}
					//cout<<"("<<i<<","<<j<<")="<<dp[i][j]<<"\n";
				}
			}
		}
		printf("%lld\n", dp[N-1][M-1]);
	}
    return 0;
}
