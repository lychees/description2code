// /HE/2016/Feb/Clash/SHRTDT

#include <bits/stdc++.h>

using namespace std;

int MAXDT = 10000;

void updatedt(int node, vector<int> & distance, vector<vector<int> > & adjlist) {
	for (int i = 0; i < adjlist[node].size(); i++) {
		int to = adjlist[node][i];
		if (distance[to] > (distance[node] + 1)) {
			distance[to] = (distance[node] + 1);
			// cout << "Updating " << node << " to " << to << " with " << distance[to] << endl;
			updatedt(to, distance, adjlist);
		}
	}
	return;
}

int main() {
	int n_nodes = 0, n_ops = 0;
	cin >> n_nodes >> n_ops;

	vector<int> distance(n_nodes, MAXDT);
	vector<vector<int> > adjlist(n_nodes);

	distance[0] = 0;

	while (n_ops--) {
		int op_type = 0;
		cin >> op_type;

		if (op_type == 1) {
			int node = 0;
			cin >> node;
			node -= 1;

			if (distance[node] != MAXDT)
				cout << distance[node] << endl;
			else
				cout << -1 << endl;
		}
		else {
			int from = 0, to = 0;
			cin >> from >> to;
			from -= 1, to -= 1;

			adjlist[from].push_back(to);

			if (distance[to] > (distance[from] + 1)) {
				distance[to] = (distance[from] + 1);
				// cout << "Updating " << from << " to " << to << " with " << distance[to] << endl;
				updatedt(to, distance, adjlist);
			}
		}
	}

	return 0;
}