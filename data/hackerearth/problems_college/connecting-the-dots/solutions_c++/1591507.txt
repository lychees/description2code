/* Template: By Jugal :) */
#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector <int> vi;
typedef vector <vi> vii;
typedef pair<int,int> pii;
typedef int ft;
#define get getchar_unlocked
#define put putchar_unlocked
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define ref(i,a,n) for(int i=a;i<=n;i++)
#define reb(i,n,a) for(int i=n;i>=a;i--)
#define all(a) a.begin(),a.end()
#define gi(n) scanf("%d",&n)
#define gii(n) scanf("%lld",&n)
#define gc(c) scanf(" %c",&c)
#define pi(n) printf("%d",n)
#define pii(n) printf("%lld",n)
#define pc(c) printf("%c",c)
#define ps printf(" ")
#define pn printf("\n")
void gl(char *str) { char c; int i=0; if((c=get())!='\n') str[i++]=c; while((c=get())!='\n') str[i++]=c;str[i]='\0'; }
void pl(char *str) { rep(i,strlen(str)) put(str[i]); }
void gfi(ft &x) {
register ft c = get(); x = 0; ft sn=1;
for(;(c<48 || c>57);c = get()) if(c=='-') sn=-1;
for(;c>47 && c<58;c = get()) {x = (x<<1) + (x<<3) + c - 48;}
x*=sn;
}

int n,m,dp[10000],c[1111][1111];
vi vec[10000];

int dfs(int ind,int prev,vi visit) {
//	cout << "llll " << ind << endl;
//	ref(i,1,5) cout << visit[i] << " ";pn;
	if(ind==n)return 0;//{cout << "no" << endl; return 1;}
	if(dp[ind]!=-1) return dp[ind];
	int ans=1000000;
	rep(i,vec[ind].sz) {
		if(visit[vec[ind][i]]==0 && prev!=c[ind][vec[ind][i]]) {//cout << "yes" << endl;
			visit[vec[ind][i]]=1;
			int d=dfs(vec[ind][i],c[ind][vec[ind][i]],visit);
		//	cout << " Yes " << d << " " << ans << endl;
			ans=min(ans,d);
			visit[vec[ind][i]]=0;
//			break;
		}
	}
	return dp[ind]=1+ans;
}



int main() {
	gfi(n);gfi(m);
	vi visit;
	rep(i,n+4) visit.pb(0);
	rep(i,m) {
		int x,y,z;
		gfi(x);gfi(y);gfi(z);
		vec[x].pb(y);c[x][y]=z;
	}	
	rep(i,n+5) dp[i]=-1;
/*	ref(i,1,n) {
		cout << i << " : ";
		rep(j,vec[i].sz) cout << vec[i][j] <<  " ";pn;
	}
*/
	visit[1]=1;
	int ans=dfs(1,-1,visit);
	if(ans>=1000000) cout << "-1" << endl;
	else cout << ans << endl;
	return 0;
}
