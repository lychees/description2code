//#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define SZ(x) (int)(x.size())
#define rep(i,a,b) for(int i=a;i<b;i++)
#define per(i,a,b) for(int i=b-1;i>=a;i--)
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)
 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 110
 
template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}
 
//FILE* outFile;
 
inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}
 
int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=ans*(ll)a%mod;
        a=(ll)a*a%mod;b>>=1;
    }
    return ans;
}

struct node{
	int x,y,w;
	bool operator <(const node&a)const{
		if(w!=a.w)return w<a.w;
		return x<a.x||(x==a.x&&y<a.y);
	}
}e[10010];
int f[N],a[N][N],M,use[N];
pii q[10010];
int find(int a){return a==f[a]?a:f[a]=find(f[a]);}
vector<pii> g[N];
int det(int m){
	ll ans=1;
	int j;
	rep(i,1,m)rep(j,1,m){
		if(a[i][j]<0)a[i][j]+=mod;
	}
	rep(i,1,m){
		for(j=i;j<m;j++)if(a[j][i])break;
		if(j==m)return 0;
		if(j!=i){
			rep(k,i,m)swap(a[j][k],a[i][k]);
			ans=-ans;
		}
		ans=1LL*ans*a[i][i]%mod;
		int t=pow(a[i][i],mod-2);
		rep(k,i+1,m){
			ll v=1LL*t*a[k][i]%mod;
			rep(j,i,m){
				a[k][j]=a[k][j]-v*a[i][j]%mod;
				if(a[k][j]<0)a[k][j]+=mod;
			}
		}
	}
	if(ans<0)ans+=mod;
	return ans;
}
int solve(int u){
	static int s[N],c[N];
	int tail=0,head=0;
	use[u]=1;s[tail++]=u;
	while(head<tail){
		u=s[head++];
		FOREACH(it,g[u]){
			int j=it->x;
			if(!use[j])use[j]=1,s[tail++]=j;
		}
	}
	M=tail;
	rep(i,0,M)rep(j,0,M)a[i][j]=0;
	rep(i,0,M)c[s[i]]=i;
	rep(i,0,M){
		int j=s[i];
		a[i][i]+=SZ(g[j]);
		FOREACH(it,g[j])--a[i][c[it->x]];
	}
	return det(M);
}
int main(){
    int i,j,m=0,n,k;
    scanf("%d%d",&n,&m);
    rep(i,1,n){
    	scanf("%d%d",&j,&k);
    }
    int w,sz;
    rep(i,0,m){
    	scanf("%d%d%d",&j,&k,&w),j--,k--;
    	e[i]={j,k,w};
    }
    sort(e,e+m);
    rep(i,0,n)f[i]=i;
    ll ans=1;
    map<int,int>h;
    rep(i,0,m){
    	int x,y,u,v,w=e[i].w;
    	j=i;sz=0;
    	h.clear();int tot=0;
    	while(j<m&&e[j].w==w){
    		x=e[j].x,y=e[j].y;
    		u=find(x),v=find(y);
    		if(u!=v){
    			q[sz++]={u,v};
    			if(!h.count(u))h[u]=tot,use[tot]=0,g[tot++].clear();
    			if(!h.count(v))h[v]=tot,use[tot]=0,g[tot++].clear();
    			g[h[u]].pb({h[v],j});
    			g[h[v]].pb({h[u],j});
    		}
    		j++;
    	}
    	rep(k,0,tot)if(!use[k])ans=ans*solve(k)%mod;
    	rep(k,0,sz){
    		u=find(q[k].x),v=find(q[k].y);
    		if(u!=v)f[u]=v;
    	}
    	i=j-1;
    }
    int cnt=0;
    rep(i,0,n)if(f[i]==i)cnt++;
    if(cnt>1)ans=0;
    printf("%d\n",ans);
    cerr<<1.*clock()/CLOCKS_PER_SEC<<"s\n";
    return 0;
}