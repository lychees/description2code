#include <iostream>
#include <vector>
#include <cstdio>
#define llu long long unsigned
#define lli long long int

using namespace std;

long long fast_pow_mod_p(long long a, long long b, int p)
{
    long long prod = 1, tmp = a;
    while(b > 0)
    {
        if(b%2 ==1)
        {
            prod = (prod* tmp) % p;
        }
        tmp = (tmp*tmp) % p;
        b /= 2;
    }
    return prod;
}

long long facts[2000001];

void preprocess()
{
    int p = 1000000007;
    facts[0] = 1;
    facts[1] = 1;
    for(unsigned i = 2; i < 2000001; i++)
        facts[i] = (i * facts[i-1]) % p;
}

int calc_catalan(unsigned n, int p)
{
    lli result = facts[2*n];
    lli mod_inv_nfact = fast_pow_mod_p(facts[n],p-2,p);
    lli mod_inv_nplus_one_fact = fast_pow_mod_p(facts[n+1],p-2,p);
    result = (result * mod_inv_nfact) %p;
    result = (result * mod_inv_nplus_one_fact) %p;
    return result;
}
int main(){
    int num_cases, num_moves;

    preprocess();

    scanf("%d",&num_cases);
    int p = 1000000007;
    while(num_cases > 0)
    {
        scanf("%d",&num_moves);
        int result = calc_catalan(num_moves,p);
        printf("%d\n", result);
        num_cases--;
    }
    return 0;
}