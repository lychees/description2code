import sys


def square_digits(n):
    n = long(n)
    total = 0
    while n:
        total += (n % 10) ** 2
        n //= 10
    return total


def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)


def multinomial_theorem(num_arr):
    num = ""
    for i in num_arr:
        num += str(i)
    num = long(num)
    temp = num

    while num != 89 and num != 1:
        num = square_digits(num)

    if num == 89:
        num_of_digits = [0] * 10
        for i in xrange(0, len(num_arr)):
            num_of_digits[num_arr[i]] += 1
        result = factorial(len(num_arr))

        for i in xrange(0, 10):
            result /= factorial(num_of_digits[i])
        return result
    return 0


for line in sys.stdin:
    n = int(line.strip())
    number = [0] * n
    i = n - 1
    result = 0
    while not (i == 0 and number[i] == 9):
        if number[i] < 9 and i == (n - 1):
            number[i] += 1
            result += multinomial_theorem(number)
        elif number[i] == 9:
            i -= 1
        else:
            number[i] += 1
            for j in xrange(i+1, n):
                number[j] = number[i]
            i = n - 1
            result += multinomial_theorem(number)
    print result, ((10**n) - result)
