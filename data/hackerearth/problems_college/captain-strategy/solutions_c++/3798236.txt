#include<iostream>
using namespace std;
#include<vector>
#include<queue>
int arr[1000000];
int a[1000000];
void dfsutil(vector <int> v[],int src,int s,int visited[])
{
	int k=src;
	for(int i=0;i<v[k].size();i++)
	{
		if(visited[v[k][i]]!=1)
		{
			a[s] = a[s] + arr[v[k][i]];
	
			visited[v[k][i]]=1;
			dfsutil(v,v[k][i],s,visited);
			//a[s]=sum;
		}
	}
	
}
void dfs(vector <int> v[],int src,int s)
{
	
	int visited[s+1];
	for(int i=0;i<=s;i++)
	visited[i]=0;
	visited[src]=1;
	dfsutil(v,src,src,visited);
}
int main()
{
	int i,m,n,x,y,z,p,o,r;
	cin>>n>>m;
	vector<int> v[n+1];
	for(i=1;i<=n;i++)
	{
		cin>>arr[i];
		a[i]=arr[i];
	}
	for(i=0;i<n-1;i++)
	{
		cin>>x>>y;
		v[x].push_back(y);
	}
	char c;
	while(m--)
	{
		cin>>c;
		if(c=='Q')
		{
			cin>>z;
				dfs(v,z,n+1);
				cout<<a[z]<<"\n";
		}
		if(c=='U')
		{
			cin>>p>>o;
			arr[p]=o;	
		}
		for(i=1;i<=n;i++)
		{
			a[i]=arr[i];
		}
	}
	return 0;
}