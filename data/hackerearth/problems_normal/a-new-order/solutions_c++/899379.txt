#include <bits/stdc++.h>
using namespace std;
int seen[27];
int indeg[27];
int adj[27][27];
int ranks[27];

void toposort()
{
	queue<int> Q;
	//insert indegree 0
	
	for(int i=0;i<26;i++)
	{
		if(indeg[i]==0 && seen[i]==1)
		{
			Q.push(i);
			ranks[i]=0;
		}
	}
	
	while(!Q.empty())
	{
		int val=Q.front();
		Q.pop();
		
		for(int i=0;i<26;i++)
		{
			if(adj[val][i]==1)
			{
				indeg[i]=indeg[i]-1;
				if(indeg[i]==0 && seen[i]==1)
				{
					Q.push(i);
					ranks[i]=ranks[val]+1;
				}
			}
		}
		
	}
		
	
	
}




int main()
{
   	
   	for(int i=0; i<26; i++)
	{
		seen[i]=0;
		indeg[i]=0;
		ranks[i]=-1;
	}
   	
   	for(int i=0;i<26;i++)
   	{
		for(int j=0; j<26; j++)
			adj[i][j] = 0;
   	}
   	
   	
   	int n;
   	cin>>n;
   	string str[n];
	
	for(int i=0;i<n;i++)
	{
		cin>>str[i];
	}
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<str[i].length();j++)
		{
			seen[(int)str[i][j]-(int)'a']=1;
		}
	}
	
	
	
	if(n==1)
	{
		for(int i=0;i<26;i++)
			{
				if(seen[i]==1)
				cout<<(char)(i+(int)'a');
			}
		cout<<endl;
	}
   	
   	for(int i=0;i<n-1;i++)
   	{
   		for(int j=i+1;j<n;j++)
   		{
   			int f=0;
   			while(str[i][f]==str[j][f]) f++;
   			
   			if(f<str[i].length() && f<str[j].length())
   			{
				   				
   				int p=(int)str[i][f]-(int)'a';
   				int q=(int)str[j][f]-(int)'a';
   				if(adj[p][q]==0)
   				{
   					adj[p][q]=1;
   					indeg[q]+=1;//inc the indegree
   				}
   			}
   		}
   	}
   	
   	toposort();
   	
   	
   	//output
   	
   	pair<int,char> out[27];
    int k=0; 	
   	for(int i=0;i<26;i++)
   	{
   		if(seen[i]==1 && ranks[i]!=-1)
   		{
   			out[k]=make_pair(ranks[i],i+(int)'a');
   			k++;
   		}
   	}
   	
   	sort(out,out+k);
	
	cout << out[0].second;
	
	for(int i=1; i<k; i++)
	{
		if(out[i].first == out[i-1].first)
			cout << out[i].second;
		else
			cout << "\n" << out[i].second;
	}
   	
   	
   	
    return 0;
}
