// By Dipankar Jain
#include<bits/stdc++.h>
using namespace std;

#define rep(x, n) for(int x=0; x<n; x++)
#define srep(x, start, end) for(int x=start; x<=end; x++)

// compare function for qsort
int compare (const void * a, const void * b)
{
  return ( *(int*)a - *(int*)b );
}


const int inf = -9999999;
const int MAX = 10e6 + 7;

void swap(int *a, int *b)
{
  int temp = *a;
  *a = *b;
  *b = temp;
}

int binary_search(int a[], int val, int start, int end);
int prefix[MAX];
int n;

int main()
{
  ios::sync_with_stdio(false);
  int m;
  cin >> n >> m;
  int x,y;
  rep(i,m)
  {
    cin >> x >> y;
    prefix[x-1]++;
    prefix[y]--;
  }
  srep(i,1,n-1)
    prefix[i] = prefix[i] + prefix[i-1];
  qsort(prefix, n, sizeof(int), compare);  
  int q;
  cin >> q;
  rep(i,q)
  {
    cin >> x;
    /*int flag = 0;
    rep(j,n)
    if(prefix[j] >= x)
      {
        flag = 1;
        cout << n - j  << endl;
        break;
      }
    if(!flag)
      cout << "0" << endl;*/
    cout << binary_search(prefix, x, 0, n-1) << endl;
  }
  return 0;
}

int binary_search(int prefix[], int x, int start, int end)
{
  int count = 0;
  int mid = (start + end)/2;
  while(start <= end)
  {
    int mid = (start + end)/2;
    if(prefix[mid] < x)
      start = mid + 1;
    else if(start != mid)
      end = mid;
    else
    {
      count = n - mid;
      break;
    }
  }
  return count;
}
