#include <iostream>
using namespace std;
struct something {
	int d;
	int pos;
};

void merge(struct something *arr, int left, int mid, int right) {
    int n1 = mid - left + 1;
   	int n2 = right - mid;
    //create two temp arrays;
    struct something templeft[n1];
    struct something tempright[n2];
    for(int i=0;i<n1;i++) templeft[i] = arr[left+i];
    for(int i=0;i<n2;i++) tempright[i] = arr[mid+i+1];

    //now merge the two arrays;
    int i=0, j=0, k=left;
    while(i<n1 && j<n2) {
        if(templeft[i].d <= tempright[j].d) {
            arr[k++] = templeft[i++];
        }
        else 
            arr[k++] = tempright[j++];
    }
    
    while(i<n1) 
        arr[k++] = templeft[i++];
    while(j<n2)
        arr[k++] = tempright[j++];
    
    
}

void mergeSort(struct something *arr, int left, int right) {
    if(left<right) {
        int mid = left+(right-left)/2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid+1, right);
        merge(arr, left, mid, right);
        //for(long long i=0;i<n;i++) cout<<arr[i]<<" ";
        //cout<<endl;
    }
}

int main()
{
	int n;
	cin>>n;
	int t[n], d[n];
	struct something finish[n];
	for(int i=0;i<n;i++) {
		cin>>t[i]>>d[i];
		finish[i].d = t[i] + d[i];
		finish[i].pos = i+1;
	}
	mergeSort(finish, 0, n-1);
	for(int i=0;i<n;i++) {
		cout<<finish[i].pos<<" ";
	}
    return 0;
}
