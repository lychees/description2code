#include<bits/stdc++.h>
using namespace std;
vector<int>graph[100005];
vector<int>revgraph[100005];
stack<int> s;
bool mrk[100005];
int ans[100005];
int ct1=0;
void dfs(int src)
{
	
    mrk[src] = true;
    for(int i = 0 ; i < graph[src].size() ;i++)
    {
        if(!mrk[graph[src][i]])
        {
            dfs(graph[src][i]);
        }
    }
    s.push(src);
}
void dfs2(int src)
{
	ct1++;
	if(ct1>1)
		ans[src]=1;
mrk[src] = true;
for(int i = 0 ; i< revgraph[src].size(); i++)
{
    if(!mrk[revgraph[src][i]])
    {
        dfs2(revgraph[src][i]);
    }
}
}
int main()
{
    int v;
    cin >> v;
    int e;
    cin >> e;
    int x,y;
    int i,j;
    for(i = 0 ; i < e ; i++)
    {
        cin >> x >> y;
        x--;y--;
        graph[x].push_back(y);
        revgraph[y].push_back(x);
    }
    for(i = 0 ; i < v; i++)
    {
        mrk[i] = false;
    }
    for(i = 0 ; i < v; i++)
    {
        if(!mrk[i])
        {
            dfs(i);
        }
    }
    for(i = 0 ; i < v ; i++)
    {
        mrk[i] = false;
    }
    while(!s.empty())
    {
        int tmp = s.top();
        s.pop();
        if(!mrk[tmp])
        {
        	ct1=0;
            dfs2(tmp);
            if(ct1>1)
            	ans[tmp]=1;
            
        }
    }
    for(int i=0;i<v;i++)
    {
    	cout << ans[i] << " ";
    }
 
    return 0;
}