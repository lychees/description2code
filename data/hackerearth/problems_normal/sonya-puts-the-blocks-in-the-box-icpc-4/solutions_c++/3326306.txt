#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
long long dp[102][100001], prefix[102][100001], cost[10002], len[105];
int main() {
	long long i,j,n, m,x,k,p;
	cin >> n >> m;
	for (i = 1; i <= n; i++) {
		cin >> len[i];
		prefix[i][0] = 0;    
		for (j = 1; j <= len[i]; j++) {
			cin >> x;
			prefix[i][j] = prefix[i][j - 1] + x;
		}
		dp[i][0] = 0;
	}
	dp[0][0] = 0;
	for (i = 1; i <= m; i++)
		dp[0][i] = 0;
	for (i = 1; i <= n; i++) {
		p = min(len[i], m);
		for (j = 1; j <= p; j++) {
			cost[j] = -1;
			for ( k = 1; k + j <= len[i] + 1; k++)
				cost[j] = max(cost[j], prefix[i][j + k - 1] - prefix[i][k - 1]);
		}
		for (j = 0; j <= m; j++) {
			dp[i][j] = dp[i - 1][j];
			p = min(j, len[i]);
			for (k = 1; k <= p; k++)
				dp[i][j] = max(dp[i][j], dp[i - 1][j - k] + cost[k]);
		}
	}
	cout << dp[n][m] << "\n";
	return 0;
}