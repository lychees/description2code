#include <iostream>
#include<cmath>
#include<iomanip>
using namespace std;
int isPrime(long int);
int isPresent(int);
void storeMemo(int,int);
int arr[9999]={0};
int main()
{	
  int T,N;
  cin>>T;
  while(T>0)
  {
  	int count_prime=0;
  	cin>>N;
  	for(int i=N;i>=3;i=i-2)
  	{
  		int d=isPresent(i);
  		if(d!=0)
  		{
  			count_prime=count_prime+d;
  			break;
  		}
  		if(isPrime((i*i)-(i-1)))
  		count_prime++;
  		
  		if(isPrime((i*i)-2*(i-1)))
  		count_prime++;
  		
  		if(isPrime((i*i)-3*(i-1)))
  		count_prime++;
  	}
  	storeMemo(N,count_prime);
  	cout<<fixed;
	cout<<setprecision(6);
	cout<<((count_prime/(double)(N+N-1))*100)<<"\n";
	N=0;
	T--;
  }
   
}
int isPresent(int N)
{
	if(arr[N]!=0)
		return arr[N];
	else
		return 0;
}
void storeMemo(int N,int count)
{
	arr[N]=count;
}

int isPrime(long int A)
{
	
	if(A==1)
	return 0;
	if(A==2||A==3)
	return 1;
	
	long int c=sqrt(A);
	if(A%2!=0)
	{
		for(int i=3;i<=c;i=i+2)
		if(A%i==0)
		return 0;
	}
	else
	return 0;
	return 1;
}