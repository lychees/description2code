#include<bits/stdc++.h>
using namespace std;
int prime[1000005];
vector<long long int>v;
vector<long long>v1;
long long s[1000005];
long long p[1000005];
long long sum[1000005];
const long long MOD=1E9+7;
void sieve()
{
	int i,j;
	prime[0]=1;
	prime[1]=1;
	for(i=2;i<=1000002;i++)
	{
		if(!prime[i])
		{
			v.push_back(i);
			for(j=2*i;j<=1000002;j+=i)
			{
				prime[j]=1;
			}
		}
	}
	long long s1=0;
	for(i=1000000;i>=1;i--)
	{
		if(prime[i]==0)
		{
			s1+=i;
			s1=s1%MOD;
		}
		s[i]=s1;
		s[i]=s[i]%MOD;
	}
	s1=0;
	for(i=0;i<=1000000;i++)
	{
		if(prime[i]==0)
		{
			s1+=i;
			s1=s1%MOD;
		}
		p[i]=s1;
		p[i]=p[i]%MOD;
	}
	for(i=1;i<=1000000;i++)
	{
		if(prime[i]==0)
		sum[i]=((long long)i*s[i+1])%MOD;
	}
	for(i=1000000;i>=1;i--)
	{
		sum[i]=(sum[i]+sum[i+1])%MOD;
	}
}
int main()
{
	sieve();
	int t;
	int l,r;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&l,&r);
		long long ans=sum[l]%MOD;
		long long ans1,ans2;
		ans1=(p[r]-p[l-1])%MOD;
		if(ans1<0)
		ans1+=MOD;
		ans2=(s[r+1])%MOD;
		ans1=(ans1*ans2)%MOD;
		ans=(ans-ans1)%MOD;	
		if(ans<0)
		ans+=MOD;
		ans=(ans-sum[r+1])%MOD;
		if(ans<0)
		ans+=MOD;
		printf("%lld\n",ans);
	}
	return 0;
}