#include <bits/stdc++.h>
using namespace std;
vector <long long int >A(1001);
vector <long long int >S(1001);
int froot(long long int x)
{
    while(A[x]!=x)
    {
        A[x]=A[A[x]];
        x=A[x];
    }
    return x;
}
int Union(long long int a,long long int b)
{
    int a_root=froot(a);
    int b_root=froot(b);
    if(a_root==b_root)
    return 0;
    if(S[a_root]>S[b_root])
    {
        A[b_root]=a_root;
        S[a_root]+=S[b_root];
        return 1;
    }
    else
    {
        A[a_root]=b_root;
        S[b_root]+=S[a_root];
        return 1;
    }
}
int find(int a,int b)
{
    if(froot(a)==froot(b))
    return 1;
    else
    return 0;
}
int main()
{
	int t;
    int a,b,n,m,c;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		c=0;
		for(int i=0;i<=n;i++)
		{
			A[i]=i;
			S[i]=1;
		}
		for(int	i=0;i<m;i++)
		{
			cin>>a>>b;
			if(Union(a,b))
			{
				c++;
			}
			
		}
		cout<<c<<endl;
	}
	return 0;
}					
	
