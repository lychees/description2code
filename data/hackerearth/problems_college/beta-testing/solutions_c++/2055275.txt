# include <bits/stdc++.h>

# define INF 0x7f7f7f7f
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned LL 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked
# define tri pair < LL,PL >
# define TRI(a,b,c) mp(a,mp(b,c))
# define ms(A,val) memset(A,val,sizeof(A))

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;


using namespace std;

int debug=1;
const int N=1e5+3;


/* MAIN PROGRAM STARTS HERE */

bool cmp(pair< PL,string> a,pair< PL,string> b)
	{
	return a.ff.ff==b.ff.ff?a.ff.ss<b.ff.ss:a.ff.ff>b.ff.ff;
	}
	
int main()
	{
	//freopen("TC1.txt","r",stdin);
	//freopen("output1","w",stdout);
	
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	
	
	LL T,n,i,j,k,p,q,x,y,z;
	
	cin>>n;
	map <string,PL> M;
	
	REP(i,n)
		{
		string s;
		cin>>s;
		if (M.find(s)==M.end()) 
			{
			M[s]=mp(1,i);	
			}
		else	
			{
			M[s].ff++; M[s].ss=i;
			}
		}
	
	vector < pair< PL,string> > V;
		
	for (map < string,PL >::iterator it=M.begin(); it!=M.end(); it++)
		{
		V.pb(mp(mp((it->ss).ff,(it->ss).ss),it->ff));
		}
		
	sort(V.begin(),V.end(),cmp);
		
	for (i=0; i<V.size(); i++)
		{
		cout<<V[i].ss<<" "<<V[i].ff.ff<<"\n";
		}
	return 0;
	}