#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int maxn = 1e5 + 5;

int n;
vector<int> e[maxn];
int dir[maxn], inv[maxn];
int s[maxn], t[maxn];

void dfs(int v, int pre)
{
	dir[v] = (s[v] != t[v]);
	inv[v] = !dir[v];
	for(int u : e[v])
	{
		if(u == pre) continue;
		dfs(u, v);
		dir[v] += dir[u];
		inv[v] += inv[u];
	}
	dir[v] = min(dir[v], 1 + inv[v]);
	inv[v] = min(inv[v], 1 + dir[v]);
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> n;
	for(int i = 1; i < n; i++)
	{
		int u, v;
		cin >> u >> v;
		e[u].push_back(v);
		e[v].push_back(u);
	}
	for(int i = 1; i <= n; i++) cin >> s[i];
	for(int i = 1; i <= n; i++) cin >> t[i];

	dfs(1, 0);

	cout << dir[1];

	return 0;
}