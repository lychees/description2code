#include <iostream>
using namespace std;

const int N = 1e5 + 100;
const int M = 1e9 + 7;

int modpow(int a, int b) {
	int res = 1;
	while (b) {
		if (b & 1) res = res * 1LL * a % M;
		a = a * 1LL * a % M;
		b >>= 1;
	}
	return res;
}

int rev(int k) {
	return modpow(k, M - 2);
}

int a[N];

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	int zrs = 0, sum = 1;
	for (int i = 1; i <= n; ++i) {
		if (a[i] == 0) ++zrs;
		else sum = sum * 1LL * a[i] % M;
	}
	int q;
	cin >> q;
	while (q--) {
		int t, id, v;
		cin >> t;
		if (t == 0) {
			cin >> id >> v;
			if (a[id] == 0)	--zrs;
			else sum = sum * 1LL * rev(a[id]) % M;
			a[id] = v;
			if (a[id] == 0) ++zrs;
			else sum = sum * 1LL * a[id] % M;
		}
		else {
			cin >> id;
			if (a[id] == 0) {
				if (zrs == 1) cout << sum << '\n';
				else cout << 0 << '\n';
			}
			else {
				if (zrs > 0) cout << 0 << '\n';
				else cout << sum * 1LL * rev(a[id]) % M << '\n';
			}
		}
	}
	return 0;
}