#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>
 
#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int t,n,x[18][MAX],y[18][MAX],z[MAX],ta,tb,tc,ct,ans;
pair<int,int> p[MAX];

int f1(int a,int b,int c,int d){
	if(f(c,d)==a&&f(c,d+1)==b)return x[c][d];
	c--;
	d=d*2+1;
	if(b<=f(c,d))return f1(a,b,c,d-1);
	if(a>=f(c,d))return f1(a,b,c,d);
	return max(f1(a,f(c,d),c,d-1),f1(f(c,d),b,c,d));
}

int f2(int a,int b,int c,int d){
	if(f(c,d)==a&&f(c,d+1)==b)return y[c][d];
	c--;
	d=d*2+1;
	if(b<=f(c,d))return f2(a,b,c,d-1);
	if(a>=f(c,d))return f2(a,b,c,d);
	return max(f2(a,f(c,d),c,d-1),f2(f(c,d),b,c,d));
}

int main(){
	scanf("%d",&t);
	while(t--){
		ans=0;
		scanf("%d",&n);
		F1(a,0,n){
			scanf("%d",&p[a].first);
			p[a].second=a;
		}
		sort(p,p+n);
		ta=ct=0;
		F1(a,0,n){
			if(p[a].first>ta){
				ct++;
				ta=p[a].first;
			}
			z[p[a].second]=ct-1;
		}
		F1(a,0,18)for(int b=0;f(a,b)<n;b++)x[a][b]=y[a][b]=0;
		F1(a,0,n){
			ta=f1(z[a],ct,17,0)+1;
			tb=f2(0,z[a]+1,17,0)+1;
			//printf("%d %d %d %d\n",a,z[a],ta,tb);
			ans=max(ans,max(ta,tb));
			tc=z[a];
			F1(b,0,18){
				y[b][tc]=max(y[b][tc],ta);
				tc>>=1;
			}
			tc=z[a];
			F1(b,0,18){
				x[b][tc]=max(x[b][tc],tb);
				tc>>=1;
			}
		}
		printf("%d\n",ans);
	}
	//system("pause");
	return 0;
}
