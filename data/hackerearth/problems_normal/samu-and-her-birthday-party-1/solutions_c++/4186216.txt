#include <iostream>
#include <vector>
using namespace std;
int numOfOnes(int p)
{
	int count = 0;
	while(p)
	{
		count += (p&1);
		p = (p >> 1);
	}
	//cout << count << endl;
	return count;
}
int main()
{
	int T;
	cin >> T;
	for(int i = 0; i < T; ++i)
	{
		int N,K;
		cin >> N >> K;
		int *A = new int[N];
		string str;
		for(int j = 0; j < N; ++j)
		{
			cin >> str;
			int index = 0;
			A[j] = 0;
			while(index < K)
			{
				A[j] = (A[j] << 1);
				A[j] += (str[index]-'0');
				++index;
			}
			//cout << A[j] << endl;
		}
		vector<int> v;
		int maxnum = 1;
		while(K)
		{
			maxnum *= 2;
			--K;
		}
		//cout << maxnum << endl;
		for(int j = 1; j < maxnum; ++j)
		{
			bool isExist = true;
			for(int k = 0; k < N; ++k)
			{
				if ((j&A[k]) == 0)
				{
					isExist = false;
					break;
				}
			}
			if (isExist)
			{
				v.push_back(j);
			}
		}
		int minnum = 100;
		int size = v.size();
		for(int j = 0; j < size; ++j)
		{
			//cout << v[j] << endl;
			int tmp = numOfOnes(v[j]);
		 	minnum = ((minnum < tmp)?minnum:tmp);
		}
		cout << minnum << endl;
	}
	//static int p
    //cout << "Hello World!" << endl;
    return 0;
}
