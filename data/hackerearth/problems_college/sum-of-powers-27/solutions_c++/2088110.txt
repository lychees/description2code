#include <iostream>
#include <cmath>
#include <set>
#include <algorithm>
#include <vector>

using namespace std;

int main()
{
	int T;
	cin>>T;

	set<int> powers;
	powers.insert(1);
	for (int i = 2; i <= sqrt(1000000); ++i)
	{
		int p = 2;
		while(pow(i,p) <= 1000000)
		{
			powers.insert(pow(i,p));
			++p;
		}
	}
	vector<int>POWER;
	for (set<int>::iterator i=powers.begin();i!=powers.end();i++)
	{
		POWER.push_back(*i);
	}

	for(;T--;)
	{
		int x;
		cin>>x;

		int flag = 0;
		for (int i = 0; i <POWER.size() ; ++i)
		{
			if(binary_search(POWER.begin(),POWER.end(),(x-POWER[i])))
			{
				flag = 1;
				break;
			}
		}
		if(flag == 1)
		{
			cout<<"Yes\n";
		}
		else
		{
			cout<<"No\n";
		}
	}
	return 0;
}