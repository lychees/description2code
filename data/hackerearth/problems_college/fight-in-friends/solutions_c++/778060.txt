#include <iostream>
#include<list>
using namespace std;

int arr[1001][1001];

void bfs(int a,int b,int n)
{
	bool visited[n+1];
	for(int i=0;i<=n;i++)
	  visited[i]=false;
	list<int> queue;
	visited[a]=true;
    queue.push_back(a);
    int flag=0;
    int count=0;
    int s;
    int nop,noc;
    nop=1;
    noc=0;
    while(!queue.empty())
    {
    	s=queue.front();
    	if(s==b)
    	{
    		flag=1;
    		break;
    	}
    	queue.pop_front();
    	for(int i=1;i<=n;i++)
    	{
    		if(arr[s][i]==0 && visited[i]!=true)
    		{
    			noc++;
    			queue.push_back(i);
    			visited[i]=true;
    		}
    	}
    	nop--;
    	if(nop==0)
    	{
    		nop=noc;
    		noc=0;
    		count++;
    	}
    	
    }
    if(flag==1)
     cout<<count;
    else
      cout<<"-1";
}

int main()
{
    int n,m,a,b;
    cin>>n;
    cin>>m;
    cin>>a;
    cin>>b;
    
    for(int i=0;i<=n;i++)
       arr[i][i]=1;
    int x,y;
    for(int i=0;i<m;i++)
    {
    	cin>>x;
    	cin>>y;
    	arr[x][y]=1;
    	arr[y][x]=1;
    }
    bfs(a,b,n);
    return 0;
}
