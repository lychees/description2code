#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define vi vector<int>
const int maxn = 1e5+10;
vi divs[maxn];
int mu[maxn];
int factor[maxn];
int phi[maxn];
#define pb push_back
const ll mod = 1e9+7;
vi all_divs[maxn];
void pre()
{
	memset(factor,0,sizeof factor);
	for(int i = 2;i*i<maxn;i++)
		if(!factor[i])
			for(int j = i*i;j<maxn;j+=i)
				factor[j] = i;
	mu[1] = 1;	
	phi[1] = 1;	
	for(int i = 2;i<maxn;i++)
	{
		if(!factor[i])
		{
			mu[i] = -1;
			phi[i] = i-1;
			continue;
		}
		int x = factor[i],y=i/x;
		if(y%x == 0)
		{
			mu[i] = 0;
			phi[i] = x*phi[y];
		}
		else
		{
			mu[i] = mu[y]*(-1);
			phi[i] = (x-1)*phi[y];
		}
	}
	for(int i = 1;i<maxn;i++)
		if(mu[i]!=0)
			for(int j = i;j<maxn;j+=i)
				divs[j].push_back(i);		
	for(int i = 1;i<maxn;i++)
		for(int j = i;j<maxn;j+=i)
			all_divs[j].pb(i);		
}
ll powr(ll a, ll b)
{
	ll x = 1;
	a%=mod;
	while(b)
	{
		if(b&1)
			x = (x*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return x;
}
ll inv(ll a)
{
	return powr(a,mod-2);
}
ll fun1(int n,int ind)
{	
	
	ll num = n;
	if(ind == 2)
		num=2;
	ll ret = 0;
	if(n == 1){
		if(ind == 1)
			return n;
		return powr(2,n+1);	
	}
	for(int i = 0;i<all_divs[n].size();i++)
	{
		int g = all_divs[n][i];
		int k = n/g;

		for(int j = 0;j<divs[k].size();j++)
		{
			ll ret1 = 0;
			int l = divs[k][j];
			int mx = n/(l*g);
			// cout<<"l "<<l<<endl;
			ll _num = powr(num,l*g);
			ret1 = (ret1+mu[l]*((_num*(powr(_num,mx)-1))%mod)*inv(_num-1))%mod;
			ret1=(ret1*g)%mod;
			ret=(ret+ret1+mod)%mod;
		}
		// cout<<ret<<endl;
	}
	if(ind == 2)
	{
		return (ret*powr(2,n))%mod;
	}
	return ret;
}
int main()
{
	pre();
	int q,n,ind;
	cin>>q;
	while(q--)
	{
		ll ret;
		scanf("%d%d",&ind,&n);
		if(ind == 1 || ind == 3)
			ret = fun1(n,1);
		else
			ret  = fun1(n,2);
		if(ind == 3)
			ret = (((ret*phi[n])%mod)*inv(n))%mod;
		cout<<(ret+mod)%mod<<endl;
	}
	return 0;
}