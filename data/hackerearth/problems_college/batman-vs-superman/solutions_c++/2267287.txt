#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
#define ll long long
#define maxn 100009
ll af[maxn],bf[maxn],ans[maxn],dff[maxn],ans1[maxn];
char str1[maxn];
ll scan()
{
    ll n = 0, ch = getchar_unlocked();
    while (ch < '0' || ch > '9')
        ch = getchar_unlocked();
    while (ch >= '0' && ch <= '9') {
        n = (n << 3) + (n << 1) + ch - '0';
        ch = getchar_unlocked();
    }
    return n;
}
int main()
{
	ll t,n,x,y,q,a,b,i,j,k,tmp,temp;
	t=scan();
	while(t--)
	{
		n=scan(); 
		x=scan();
		y=scan();
		q=scan();
		scanf("%s",str1);
		af[0]=0;
		bf[0]=0;
		for(i=0; i<n; i++)
		{
			if(str1[i]=='a')
			{
				af[i+1]=af[i]+1;
			}
			else
			af[i+1]=af[i];
			if(str1[i]=='b')
			{
				bf[i+1]=bf[i]+1;
			}
			else
			bf[i+1]=bf[i];
		}
		ans[0]=0;
		int flg=0,pos=1;
		for(i=1; i<=n; i++)
		{
			flg=0;
			for(j=pos; j<=n; j++)
			{
				tmp=af[j]-af[i-1];
					temp=bf[j]-bf[i-1];
					if(tmp>=x && temp>=y)
					{
						ans1[i]=n-j+1;
						dff[ans1[i]]=i;
						ans[i]=ans[i-1]+n-j+1;
						flg=1;
						pos=j;
						break;
					}
			}
			if(!flg)
			{
				ans[i]=ans[i-1];
				ans1[i]=0;
			}
		}
		ll low,high,mid,h1;
		h1=n;
		for(i=0; i<=n; i++)
		{
			low=1; high=h1;
				while(low<high)
				{
					mid=(low+high)/2;
					if(ans1[mid]>i)
					low=mid+1;
					else
					high=mid;
				}
				dff[i]=high;
				h1=high;
		}
		ll sum,start;
		while(q--)
		{
			a=scan();
			b=scan();
			start=dff[n-b];
			if(start<=a)
			{
				printf("0\n");
				continue;
			}
			sum=ans[start-1]-ans[a-1];
			sum=sum-((start-a)*(n-b));
			printf("%lld\n",sum);
		}
	}
}