#include<iostream>
#include<cmath>
#include<cstring>
#include<set>
#include<vector>
#include<map>
#include<algorithm>
#include<utility>
#define MX 200005
#define pb push_back
#define mp make_pair
#define fs first
#define sec second
#define TC int T;cin>>T;while(T--)
#define endl "\n"

typedef long long int LL;
using namespace std;
vector<LL>BIT(MX,0);
void update(LL id,LL add,LL n)
{
	while(id<=n)
	{
		BIT[id]+=add;
		 id+=(id&-id);
	}
}
LL getsum(LL id)
{
	 int sum=0;
	 while(id>0)
	 {
			sum+=BIT[id];
			id-=(id&-id);
	 }
	return sum;
}
 vector<LL>v(MX,0);
int main()
{
   //ios_base::sync_with_stdio(false);cin.tie(0);
  //TC{

     LL n,i,q,t,j,k,x,y,z;
	 cin>>n>>q;
	// vector<LL>v(n+4,0);
	 for(i=1;i<=n;i++)
	 {
	 	cin>>x;
	 	//x=abs(x);

		  if(x>=0)
		  {
			   	z=x%10;
		y=x%10;
		while(x!=0)
		{
            y=x%10;
			x/=10;
		}
		if(y==z)
		v[i]=1;
		  }
	 }
	 for(i=1;i<=n;i++)
	 {
		   update(i,v[i],n);
     }
	 while(q--)
	 {
		  cin>>t;
		  if(t==2)
		  {
			   cin>>j>>x;    // add k to index j
			   //x=abs(x);

			 if(x>=0)
			 {
			 	z=x%10;
		        y=x%10;
		         while(x!=0)
		           {
                      y=x%10;
			          x/=10;
		            }
			 }
			 else
			 {
			 	y=1;z=0;
			 }
          		      if(y==z)
					 {
					 	if(v[j]!=1)
						{
							v[j]=1;
					 	update(j,1,n);
                        }
                     }
                    else
					{
						  if(v[j]!=0)
						  {
							   v[j]=0;
							   update(j,-1,n);
                          }
                    }

		  }
		  else
		  {
			 cin>>j>>k;   //return sum from j to k
			 LL res=getsum(k)-getsum(j-1);
			 cout<<res<<endl;
		  }
	 }
  //}
	return 0;
}

