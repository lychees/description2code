//Author : Jatin Goyal
//codecracker4

#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007  //NA
#define ll long long int
#define all(c) c.begin(), c.end()
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it!=container.end(); it++)
#define sz(a) (int) a.size()
#define dcl(a) memset(a,0,sizeof(a))
#define rep(i,a,b) for(i=a;i<=b;i++)
#define mp(a,b) make_pair(a,b)
#define pr pair<int,int>  //NA
#define pb push_back  //NA
#define gc getchar  //NA

int a[200][200];
vector<int>vec[200][200];

int main()
{
//	freopen("##inp.txt","r",stdin);
    //freopen("##out.txt","w",stdout);
    int i,j,m,n,t,l,u,x,y,q,p;
    char s[1111];
    cin>>t;
    while(t--)
    {
        cin>>m>>n;
        rep(i,1,m)
        {
            rep(j,1,n)
            {
                scanf("%s",s);
                if(s[0]=='#') a[i][j]=-1000;
                else a[i][j]=atoi(s);
            }
        }

        rep(i,1,m)
        {
            rep(j,1,n)
            {
                if((i==1)&&(j==1)){vec[i][j].pb(a[i][j]); continue;}
                l=vec[i-1][j].size();
                u=vec[i][j-1].size();
                x=0;
                y=0;
                if(a[i][j]==-1000);
                else
                {
                    while(3)
                    {
                        if((x<l)&&(y<u))
                        {
                            if(vec[i-1][j][x]<vec[i][j-1][y]) {vec[i][j].pb(vec[i-1][j][x]+a[i][j]); x++;}
                            else {vec[i][j].pb(vec[i][j-1][y]+a[i][j]); y++;}
                        }
                        else if(x<l)
                        {
                            vec[i][j].pb(vec[i-1][j][x]+a[i][j]);
                            x++;
                        }
                        else if(y<u)
                        {
                            vec[i][j].pb(vec[i][j-1][y]+a[i][j]);
                            y++;
                        }
                        else break;
                        if(vec[i][j].size()>150) break;

                    }
                }
            }
        }
        /*rep(i,1,m)
        {
            rep(j,1,n) cout<<vec[i][j].size()<<' ';
            cout<<endl;
        }*/
        cin>>q;
        while(q--)
        {
            cin>>x>>y>>p;
            x++; y++; p;
            if(a[x][y]==-1000) cout<<"Obstacle"<<endl;
            else if(vec[x][y].size()>=p) cout<<vec[x][y][p-1]<<endl;
            else cout<<"Not so many paths"<<endl;
        }
        rep(i,1,m)
        {
            rep(j,1,n) vec[i][j].clear();
        }
    }
}
