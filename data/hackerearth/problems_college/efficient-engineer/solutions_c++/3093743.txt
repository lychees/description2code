#include <bits/stdc++.h>
 #define pb push_back
#define pp pop_back
 #define f first
 #define s second
 #define mp make_pair
 #define sz(a) int((a).size())
      typedef long long ll;
    typedef unsigned long long ull;
     
    const int MAX_N = (int)1e5 + 123;
    const double eps = 1e-6;
    const int inf = (int)1e9 + 123;
     
using namespace std;
     
    int n, k, d;
    int a[MAX_N];
    ll sum[MAX_N];
    vector < pair < int, int > > q;
    int ans;
     
    bool cmp(pair < int, int > a, pair < int, int > b) {
    	return (a.s < b.s || (a.s == b.s && a.f < b.f));
    }
     
int main() {
    
    	cin >> n >> k >> d;
    	for (int i = 1; i <= n; i++) {
    		cin >> a[i];
    		sum[i] = a[i] + (i > 1 ? sum[i - 1] : 0);
    	}		
    	for (int i = 1; i + k - 1 <= n; i++) {
    		if (sum[i + k - 1] - sum[i - 1] < d)
    			q.pb(mp(i, i + k - 1));
    		if (sum[i + k - 1] - sum[i - 1] == 0) {
    			cout << "-1";
    			return 0;
    		}
    	}
    	sort(q.begin(), q.end(), &cmp);
    	for (int i = 0, R = -1; i < sz(q); i++) {
    		if (q[i].f <= R)
    			continue;
    		ans++;
    		int j = q[i].s;
    		while(!a[j])
    			j--;
    		R = j + k - 1;
    	}	
    	cout << ans;
    	return 0;
    }
