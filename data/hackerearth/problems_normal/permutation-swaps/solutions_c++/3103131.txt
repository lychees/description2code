#include<bits/stdc++.h>

using namespace std;

#define DBG
#ifdef DBG
#define dbg(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define dbg(...)
#endif

#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 0x3f3f3f3f
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()


int a[100000 + 2];
int b[100000 + 2];
int vis[100000 + 2];
vi g[100000 + 2];
vi p,q;

void dfs(int u)
{
    vis[u] = 1;
    p.pb(a[u]);
    q.pb(b[u]);
    for(int v : g[u])
    {
        if(!vis[v])
        {
            dfs(v);
        }
    }
}



int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m,i;
        scanf("%d%d",&n,&m);
        for(i=0;i<n;i++)
        {
            vis[i] = 0;
            g[i].clear();
            scanf("%d",&a[i]);
        }
        for(i=0;i<n;i++)
        {
            scanf("%d",&b[i]);
        }
        while(m--)
        {
            int u,v;
            scanf("%d%d",&u,&v);
            u--,v--;
            g[u].pb(v);
            g[v].pb(u);
        }
        int flag = 1;
        for(i=0;i<n;i++)
        {
            if(!vis[i])
            {
                p.clear();
                q.clear();
                dfs(i);
                sort(all(p));
                sort(all(q));
                if(p != q)
                {
                    flag = 0;
                    break;
                }
            }
        }
        if(flag)
            cout << "YES" << endl;
        else
            cout << "NO" << endl;
    }
    return 0;
}
