#include <algorithm>
#include <cstdio>
#include <iostream>
#include <vector>
#include <map>
#include <cstring>
#include <string>
#include <set>
#include <cmath>
#include <memory>
#include <functional>
#include <numeric>
#include <queue>
#include <sstream>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const ull MOD = 1000000007;


int N[100007];
int M[57];
int original[100007];

bool check(int num, int in_index, int m) {
	for (int i = in_index; i <= m; ++i) {
		if (M[i] <= num && !(num % M[i]))
			return false;
	}
	return true;
}

int main()
{
	int n, m; cin >> n >> m;
	for (int i = 1;i <= m;++i) cin >> M[i];
	for (int i = 0;i < n;++i) cin >> N[i];

	original[0] = M[N[0]];
	for (int i = 1; i < n; ++i) {
		int num = N[i];
		int c = M[num];
		int in = c;

		if (in == original[i - 1]) in = original[i - 1] + c;
		else if (in < original[i - 1]) {
			in = original[i - 1] / in * in + c;
		}

		while (!check(in, num + 1, m)) {
			in += c;
		}

		original[i] = in;
	}

	cout << original[n-1] << endl;
	return 0;
}
