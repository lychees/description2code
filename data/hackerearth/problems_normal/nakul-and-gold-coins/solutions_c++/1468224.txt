#include<stdio.h>
#include<vector>
#include<algorithm>
using namespace std;
int arr[1000005] = {0};
int main()
{
	int t, len, i, j, k, l, tot, n, p, r, t1, t2;
	vector<int> prime;
	for (i = 2; i <= 1000000; i++) {
		if (arr[i] == 0) {
			prime.push_back(i);
			for (j = i * 2; j <= 1000000; j = j + i) {
				arr[j] = 1;
			}
		}
	}
	len = prime.size();
	scanf("%d", &t);
	vector<int>::iterator ee, bb, low, up;
	bb = prime.begin();
	ee = prime.end();
	while (t--) {
		scanf("%d%d", &l, &r);
		tot = 0;
		for (i = 0; i < len; i++) {
			t1 = l / prime[i];
			t2 = r / prime[i];
			if (t1 * prime[i] != l)
				t1++;
			up = lower_bound(bb + i + 1, ee, t1);
			low = upper_bound(bb + i + 1, ee, t2);
			tot = tot + (low - up);
			if (t2 <= prime[i])
				break;
		}
		printf("%d\n", tot);
	}
	return 0;
}