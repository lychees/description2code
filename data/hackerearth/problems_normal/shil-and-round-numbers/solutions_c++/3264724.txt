#include <iostream>
using namespace std;
long long int n;

void update(long long int bit[],long long int index,long long int value)
{
	while(index<=n)
	{
		bit[index]+=value;
		index+=index & (-index);
	}
}

long long int query(long long int x,long long int bit[])
{
	long long int sum=0;
	while(x>0)
	{
		sum+=bit[x];
		x-=x&(-x);
	}
	
	return sum;
}


 int main()
{
    
    cin>>n;
    long long int q;
    cin>>q;
    long long int count[n],x,y,bit[n+1];
    for(long long int i=0;i<n;i++)
    	{
    		count[i]=0;
    		bit[i]=0;
    	}
    	
    	bit[n]=0;
    	
    	
    long long int a[n],k,p,l,r,ind;
    for(long long int i=0;i<n;i++)
    {
    	cin>>a[i];
    	if(a[i]==0)
    	{
    		count[i]=1;
    		update(bit,i+1,count[i]);
    	}
    	if(a[i]>0){
    	x=a[i]%10;
    	//a[i]=a[i]/10;
    	
    	while(a[i])
    	{
    		y=a[i]%10;
    		a[i]/=10;
    	}
    	if(x==y)
    	count[i]=1;
    	
    	update(bit,i+1,count[i]);}
    	
    	if(a[i]<0)
    	{
    		count[i]==0;
    		//update(bit,i+1,count[i]);
    	}
    	
    	
    }
    
    while(q--)
    {
    	cin>>p;
    	if(p==1)
    	{
    		cin>>l>>r;
    		long long int sum=query(r,bit)-query(l-1,bit);
	    	cout<<sum<<endl;	
    	}
    	
    	else
    	{
    		cin>>ind>>k;
	    	x=k%10;
	    
	    	
	    	while(k)
	    	{
	    		y=k%10;
	    		k=k/10;
	    		
	    	//	k/=10;
	    	}
	    	if(x==y)
	    	{
	    		if(count[ind-1]==0)
	    		{
	    			count[ind-1]=1;
	    			update(bit,ind,count[ind-1]);
	    		}
	    		
	    	}
	    	
	    	else
	    	{
	    		if(count[ind-1]==1)
	    		{
	    			count[ind-1]=0;
					update(bit,ind,-1);

	    		}
	    	}
    	}
    }
    
    	
    
    return 0;
}
