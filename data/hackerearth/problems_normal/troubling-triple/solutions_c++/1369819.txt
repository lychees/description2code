/*
***************************************************************************************************************

							Author : Yash Sadhwani

**************************************************************************************************************
*/
/*#include<bits/stdc++.h>*/
#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define sc(x) scanf("%c",&x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mod 1000000007
#define maX(a,b) ((a)>(b)?a:b)
#define miN(a,b) ((a)<(b)?a:b)
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807


//qsort(ww,cc,sizeof(tp),compare);
/*int compare(const void *a,const void *b){
	ll y=((((tp*)a)->w)-(((tp*)b)->w));
	if(y>0)return 1;
	else if(y==0)return 0;
	else return -1;
}
bool way(ii x,ii y){
	return x.first<y.first or x.first==y.first and x.second<y.second;
}
*/


#define MAXN 1000010
#define ls (node<<1)
#define rs ((node<<1)+1)
#define ii pair<int,int>

int tree[MAXN];
int N;
ll K;
ll arr[2010];
ll products[2010][2010];

void update(int idx){
	while(idx<MAXN){
		tree[idx]++;
		idx+=(idx&(-idx));
	}
}

int query(int idx){
	int ret=0;
	while(idx>0){
		ret+=tree[idx];
		idx-=(idx&(-idx));
	}
	return ret;
}

inline void ReadInput(void){
	si(N); sl(K);
	for(int i=1;i<=N;i++)sl(arr[i]);
}

inline void solve(void){
	update(arr[N]);
	ll ans=0;
	for(int i=N-1;i>=1;i--){
        for(int j=1;j<i;j++){
            ll searchelement=K/(arr[i]*arr[j]);
            ans+=(query(searchelement));
		}
		update(arr[i]);
	}
	printf("%lld\n",ans );
}

inline void Refresh(void){

}

int main()
{
    ios_base::sync_with_stdio(false);
    ReadInput();
    solve();
	return 0;
}