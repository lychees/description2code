#include <bits/stdc++.h>
using namespace std;
int n,m,s,a,h,x,y,z,q;
inline long long min(long long a,long long b){
	if(a>b) return b;
	else return a;
}
inline long long max(long long a,long long b){
	if(a>b) return a;
	else return b;
}
long long mat[105][105];
long long d[105][105];
void floyd()
    {
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
        d[i][j]=mat[i][j];
        
        for(int k=0;k<n;k++)
        {
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
                {
                if (d[i][k] + d[k][j] < d[i][j])
                    d[i][j] = d[i][k] + d[k][j];
            }
        }
    }
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    int t;
    cin>>t;
    while(t--){
        cin>>n>>m;
    
        for(int i=0;i<n;i++)
        for(int j=0;j<n;j++){
            mat[i][j]=INT_MAX;
            if(i==j) mat[i][j]=0;
        }
        for(int i=0;i<m;i++)
            {
            cin>>x>>y>>z;
            mat[x-1][y-1]=min(mat[x-1][y-1],z);
            mat[y-1][x-1]=min(mat[y-1][x-1],z);
          
        }
    floyd();
    
    
    cin>>s>>a>>h;
    s--;a--;h--;
    long long p=0;
     for(int i=0;i<n;i++){
     	if(i!=s && i!=a && i!=h){
     		p=max(p,d[s][i]+2*d[i][a]+d[i][h]);
     	}
     }
     
     cout<<p<<endl;
    }
    return 0;
}
