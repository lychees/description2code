#include<bits/stdc++.h>
using namespace std;

bool ans;

struct trie_node{
    bool ed;
    trie_node *child[10];
};

trie_node* getnode()
{
    trie_node *temp = new trie_node();
    temp->ed=false;
    for(int i=0;i<10;i++)
        temp->child[i]=NULL;
    return temp;
}

void insertNode(trie_node *root,char num[],int n)
{
    int index;
    for(int i=0;i<n;i++)
    {
        index=num[i]-'0';
        if(!root->child[index])
            root->child[index]=getnode();
        else
        {
            if(i+1==n)
                ans=true;
        }
        root=root->child[index];
        if(root->ed)
            ans=true;
    }
    root->ed=true;
}

void deleteTrie(trie_node *root)
{
    for(int i=0;i<10;i++)
    {
        if(root->child[i])
            deleteTrie(root->child[i]);
    }
    delete(root);
    root=NULL;
}

int main()
{
    int t,n,index,len;
    scanf("%d",&t);
    char num[11];
    while(t--)
    {
        ans=false;
        scanf("%d",&n);
        getchar();
        while(n>0)
        {
            scanf("%s",num);
            trie_node *root = getnode();
            trie_node *temp=root;
            len=strlen(num);
            for(int i=0;i<len;i++)
            {
                index=num[i]-'0';
                if(!temp->child[index])
                    temp->child[index]=getnode();
                temp=temp->child[index];
            }
            temp->ed=true;
            n--;
            while(n--)
            {
                scanf("%s",num);
                if(!ans)
                    insertNode(root,num,strlen(num));
            }
            deleteTrie(root);
        }
        printf("%s\n",ans?"NO":"YES");
    }
}

