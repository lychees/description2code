#include <bits/stdc++.h>

using namespace std;

#define INF (1<<29)

struct Edge {
	int a, b, c;
};

int main() {
    int T;
    cin >> T;
    for (int t = 0; t < T; t++) {
    	int N, M;
    	cin >> N >> M;
    	Edge arr[1000];
    	for (int i = 0; i < M; i++) {
    		int a, b, c;
    		cin >> a >> b >> c;
    		Edge e; 
    		e.a = a; e.b = b; e.c = -c;
    		arr[i] = e;
    	}
    	
    	int dist[101];
    	for (int i = 1; i <= N; i++) {
    		dist[i] = INF;
    	}
    	dist[1] = 0;
    	for (int i = 1; i <= N; i++) {
    		for (int j = 0; j < M; j++) {
    			dist[arr[j].b] = min(dist[arr[j].b], dist[arr[j].a] + arr[j].c);
    		}
    	}
    	bool negativeCycle = false;
    	for (int i = 0; i < M; i++) {
	        if (dist[arr[i].b] < INF/2 && dist[arr[i].a] + arr[i].c < dist[arr[i].b]) {
	        	negativeCycle = true;
	        	break;
	        }
        }
        
        if (negativeCycle == true)	
        	cout << "Yes" << endl;
        else 
        	cout << "No" << endl;
    }
    return 0;
}
