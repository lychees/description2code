#include <bits/stdc++.h>

using namespace std;

#define sqr(x) ((x) * (x))
#define pb push_back
#define mp make_pair
#define ins insert
#define X first
#define Y second
#define fin(name) freopen(name, "r", stdin)
#define fout(name) freopen(name, "w", stdout)
#define files(name) fin(name".in"); fout(name".out")
#define enter cout << "\n"
#define space cout << " "
#define endl "\n"
#define fi(st,n) for (int i = (st); i <= (n); i++)
#define fj(st,n) for (int j = (st); j <= (n); j++)
#define fk(st,n) for (int k = (st); k <= (n); k++)
#define fq(st,n) for (int q = (st); q <= (n); q++)
#define fw(st,n) for (int w = (st); w <= (n); w++)
#define ff(i, st, n) for (int (i) = (st); (i) <= (n); (i)++)
#define ei(st,n) for (int i = (st); i >= (n); i--)
#define ej(st,n) for (int j = (st); j >= (n); j--)
#define ek(st,n) for (int k = (st); k >= (n); k--)
#define clean(a) memset((a),0,sizeof (a));
#define sync ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)

typedef long long ll;
typedef unsigned long long ull;
typedef double dbl;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef vector<int> vi;

const int inf = (int) 1e9, maxn = (int) 1e5 + 1;
const double eps = (double) 1e-8;
const int mod = (int) 1000000007;
const ll linf = (ll) 2 * 1e18;

//fin("t.in");
//fout("t.out");
//cout<<fixed<<setprecision(15);
//srand(time(0));

ll z[100005], k, x, y, st[2503], en[2503], tk, n, a[2][1003], fl, rk, cnt, tim1, tim2;
ll ans = linf;
vector <pair <ll, ll> > r[10004];

void solve(int mcnt)
{
	fi(0, 100)
	{
		if (r[i].size() < 100)
			fj(0, 100102)
				r[i].pb(mp((ll)0, (ll)0));
	}
	clean(st);
	clean(en);
	rk = k;
	x = 1;
	st[1] = 0;
	en[1] = 1;
	r[1][0] = mp((ll)rk * (ll)rk * (ll)z[1], (ll)1);
	tk = 1;
//	return 0;
	fi(2, n)
	{
		fj(2, min(k, tk + 1))
		{
			if (r[j].size() <= 100)
				fq(0, 100102)
					r[j].pb(mp((ll)0, (ll)0));
			a[x][j] = linf;
			cnt = 0;
			for (int q = st[j - 1]; cnt <= mcnt && q != en[j - 1]; q = ((q == 100100) * 0 + (q != 100100) * (q + 1)))
			{
				tim1++;
				if ((ll)r[j - 1][q].X + ll((ll)i - (ll)r[j - 1][q].Y) * ll((ll)i - (ll)r[j - 1][q].Y) + (ll)rk * (ll)rk * (ll)z[i] <= (ll)a[x][j])
				{
					st[j - 1] = q;
					a[x][j] = (ll)r[j - 1][q].X + ll((ll)i - (ll)r[j - 1][q].Y) * ll((ll)i - (ll)r[j - 1][q].Y) + (ll)rk * (ll)rk * (ll)z[i];
				}
				else
				{
					cnt++;
				}
/*				else
				{
					break;
				}
*/
			}
			fl = 1;
			for (int q = en[j]; q != ((st[j] == 0) * 100100 + (st[j] != 0) * (st[j] - 1)); q = ((q == 0) * 100100 + (q != 0) * (q - 1)))
			{
				if ((ll)r[j][q].X + ll((ll)i - (ll)r[j][q].Y) * ll((ll)i - (ll)r[j][q].Y) >= (ll)a[x][j] || fl)
				{
					tim1++;
					fl = 0;
					en[j] = ((q == 100100) * 0 + (q != 100100) * (q + 1));
					r[j][q] = mp((ll)a[x][j], (ll)i);
				}
				else
				{
					break;
				}
			}
//			cout << i << " " << j << " " << a[x][j] << endl;
		}
		if (tk < rk && (tk == 1 || a[x][tk + 1] <= a[x][tk]))
			tk++;
	}
	fi(2, tk)
	{
		ans = min(ans, a[x][i]);
//		cout << i << " " << a[x][i] << endl;
	}
}

int main()
{
//	fin("t.in");
	sync;
	cin >> n >> k;
//	n = 100000;
//	k = 60;
	fi(1, n)
	{
		cin >> z[i];
//		z[i] = (ll)1024;
	}

//	cout << tk << endl;
//	ans = a[x][tk];
	tim1 = 0;
	solve(100);
	if (tim1 <= 40000000)
		solve(1000);
	cout << ans;
    return 0;
}