#include <iostream>
using namespace std;
unsigned int takeshicastlemap[100][100] = {0};

int main()
{
	int testcases = 0;
	cin >> testcases;
	if((testcases >=1) && (testcases <= 20))
	{
		for(int testcaseno= 1; testcaseno <= testcases ; ++testcaseno)
		{
			int mapsize = 0;
			cin >> mapsize;
			int coinsgiventoguard = 0;
			cin >> coinsgiventoguard;
			int totalcoins = 0;
			if( (mapsize >= 2) && (mapsize <= 100))
			{
				for(int row = 0 ; row < mapsize ; ++row)
				{
					for(int column = 0; column < mapsize; ++column)
					{
						cin >> takeshicastlemap[row][column];
					}
				}
				/*int prevcolumn = 0;
				if((takeshicastlemap[0][0] == 0) && (takeshicastlemap[mapsize-1][mapsize-1] == 0))
				{
					for(int row = 0 ; row < mapsize ; ++row)
					{
						for(int column = prevcolumn; column < mapsize; ++column)
						{
							if((row == mapsize-1) && !(column == mapsize-1))
							{
								int i = 0;
								for(i = column+1 ; i < mapsize ; ++i)
								{
									totalcoins = totalcoins + takeshicastlemap[row][i];
								}
								column = i;
							}
							else if((column == mapsize-1) && !(row == mapsize-1))
							{
								int i = 0;
								for(i = row+1 ; i < mapsize ; ++i)
								{
									totalcoins = totalcoins + takeshicastlemap[i][column];
								}
								row = i;
							}
							else if((row == mapsize-1)&& (column == mapsize-1))
							{
								break;
							}
							else
							{
								if(takeshicastlemap[row+1][column] > takeshicastlemap[row][column+1])
								{
									totalcoins = totalcoins + takeshicastlemap[row+1][column];
									//prevrow = row;
									prevcolumn = column;
									break;
								}
								else
								{
									totalcoins = totalcoins + takeshicastlemap[row][column+1];
									//prevcolumn = column;
									//column++;
								}
							}
						}
					}
				}*/
				for(int col = 1; col < mapsize; ++col)
				{
					takeshicastlemap[0][col] = takeshicastlemap[0][col] + takeshicastlemap[0][col -1];
				}

				for(int row = 1; row < mapsize; ++row)
				{
					takeshicastlemap[row][0] = takeshicastlemap[row][0] + takeshicastlemap[row-1][0];
				}
#if 0
				for(int row = 0 ; row < mapsize ; ++row)
				{
					for(int column = 0; column < mapsize; ++column)
					{
						cout << takeshicastlemap[row][column] << " ";
					}
					cout << "\n";
				}
#endif
				for(int row = 1; row < mapsize; ++row)
				{
					for(int col = 1; col < mapsize; ++col)
					{
						if(takeshicastlemap[row-1][col] > takeshicastlemap[row][col-1])
						{
							takeshicastlemap[row][col] = takeshicastlemap[row][col] + takeshicastlemap[row-1][col] ;
						}
						else
						{
							takeshicastlemap[row][col] = takeshicastlemap[row][col] + takeshicastlemap[row][col-1] ;
						}
					}
				}
			}
			if(takeshicastlemap[mapsize-1][mapsize-1] >= coinsgiventoguard)
			{
				cout << takeshicastlemap[mapsize-1][mapsize-1] - coinsgiventoguard << "\n";
			}
			else
			{
				cout << -1 << "\n";
			}
			
		}
	}
	return 0;
}

