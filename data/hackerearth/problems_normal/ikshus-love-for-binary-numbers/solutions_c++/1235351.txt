#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll;
typedef vector<pll> vpll;typedef vector<string> vs; typedef double D; typedef vector<bool> vb;
typedef pair<ll,pll> pip;
#define sz(v) int((v).size())
#define all(v) (v).begin(), (v).end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sd(x) scanf("%d", &x)
#define slld(x) scanf("%I64d", &x)
#define present(c,x) ((c).find(x) != (c).end())
#define debug(X) cerr << "	--> " << #X << " = " << X << endl
#define INF 2000000000LL
#define M 2123
#define N 75
ll dp[N][N][2];
void solve()
{
	int n,k;
	sd(n);sd(k);
	dp[n][0][0] = 1;
	dp[n][0][1] = 0;
	if(k>1)
	{
		dp[n][1][0] = 1;
		dp[n][1][1] = 0;
	}
	else
	{
		dp[n][1][1] = 1;
		dp[n][1][0] = 0;
	}
	for(int j=n;j>=2;--j)
	{
		dp[n][j][0] = 0;
		dp[n][j][1] = 0;
	}
    for(int i=n-1;i>=0;--i)
	{
		dp[i][0][0] = dp[i+1][0][0];
		dp[i][0][1] = dp[i+1][0][1];
		for(int j=1;j<=n;++j)
		{
			dp[i][0][0] += dp[i+1][j][0];
			dp[i][0][1] += dp[i+1][j][1];
		}
		for(int j=1;j<=n;++j)
		{
			dp[i][j][0] = dp[i+1][j-1][0];
			dp[i][j][1] = dp[i+1][j-1][1];
			if(j==k)
			{
				dp[i][j][1] += dp[i][j][0];
				dp[i][j][0] = 0;
			}
		}
	}
	ll ans = 0;
	for(int i=0;i<=n;++i)
	{
		ans += dp[1][i][1];
	}
	ll m = ((1LL)<<n);
	while(ans%2==0)
	{
		ans >>= 1;
		m >>= 1;
	}

	printf("%lld/%lld\n",ans,m);
}
int main()
{
	int t = 1;
	while(t--)		solve();
	return 0;
}
