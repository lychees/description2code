#include <iostream>
#include <stdio.h>
#include <stdint.h>
using namespace std;
#define mod (1000000000000000000000)

# define MAX 101 // assuming we need first 100 rows
uint64_t triangle[MAX + 1][MAX + 1];

void makeTriangle() {
    int i, j;

    // initialize the first row
    triangle[0][0] = 1; // C(0, 0) = 1

    for(i = 1; i < MAX; i++) {
        triangle[i][0] = 1;triangle[i][i] =1; // C(i, 0) = 1

        for(j = 1; j < i; j++) {
            triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];

        }

    }


for(i=0;i<MAX;i++)
	for(j=0;j <= i;j++)
		if(triangle[i][j]==0) {
			cout << i << j << endl;
			}
	

}



long long C(int n, int r) {
	if(r==0) return 1;
    return triangle[n][r];
}





int main()
{
    int T, N;
    uint64_t ans,ans2,ans3,ans4;
    cin >> T;
    makeTriangle();
    while(T--)
    {	int n1,n2;
    	cin >> N;
   		ans2=ans3=ans4=0;
    	ans=0;
    	for(n1=N,n2=N;n2>=0;n1-=1,n2-=2)
    		{	ans+=(C(n1,n2) % mod);
    			ans2+=((C(n1,n2)/mod)/mod)%mod;
    			ans3+=((C(n1,n2)/mod)/mod/mod)%mod;
    			ans4+=((C(n1,n2)/mod)/mod/mod)/mod;
    			}
    	if(ans4) cout << ans4;		
    	if(ans3) cout << ans3;		
    	if(ans2) cout << ans2;	
       cout << ans << endl;
    }
    return 0;
}
