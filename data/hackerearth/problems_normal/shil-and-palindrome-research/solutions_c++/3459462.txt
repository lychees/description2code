#include <bits/stdc++.h>
using namespace std;

int n,q;
char s[100005];

int bit[100005][26]={0};
int hashh[26];

void replaceChar(int index,char prev,char present)
{
	for(int i=index;i<=n;i += (i & -i))
	{
		bit[i][present - 'a']++;
		bit[i][prev -'a']--;
	}
}

void addChar(int index,char ch)
{
	for(int i=index;i<=n;i += (i & -i))
	{
		bit[i][ch - 'a']++;
	}
}

void getHash(int index)
{
	for(int i=0;i<26;i++)
		hashh[i]=0;

	for(int i=index;i>=1;i -= (i & -i))
	{
		for(int j=0;j<26;j++)
		{
			hashh[j]+=bit[i][j];
		}
	}
}

int main()
{
	int i;
	cin>>n>>q;
	scanf("%s",s+1);
	for(i=1;i<=n;i++)
	{
		addChar(i,s[i]);
	}

	
	while(q--)
	{
		int ch;
		scanf("%d",&ch);
		if(ch == 1)
		{
			int index;
			char c;
			scanf("%d %c",&index,&c);
			replaceChar(index, s[index], c);
			s[index]=c;
		}
		else
		{
			int l,r;
			scanf("%d%d",&l,&r);
			getHash(r);
			int hashr[26];
			for(i=0;i<26;i++)
				hashr[i]=hashh[i];

			getHash(l-1);
			int hashl[26];
			for(i=0;i<26;i++)
				hashl[i]=hashh[i];
			
			int cntodd=0;
			for(i=0;i<26;i++)
			{
				// printf("%d %d\n",hashr[i],hashl[i]);
				hashr[i]-=hashl[i];
				// printf("%d ",hashr[i]);
				if(hashr[i]&1)
					cntodd++;
			}
			// printf("\n");
			
			if( ((r-l+1)&1 && cntodd==1 ) || ((r-l+1)%2==0 && cntodd==0))
				printf("yes\n");
			else
				printf("no\n");
		}
	}
    return 0;
}