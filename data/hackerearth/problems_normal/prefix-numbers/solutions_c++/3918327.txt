//BISMILLAHIR RAHMANIR RAHIM
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<queue>
#include<set>
#include <iostream>
#include<stack>
#include<map>
#include<string>
#include<vector>
#include<algorithm>
#define N 1000000
#define sn scanf
#define pf printf
#define pb push_back
#define mp make_pair

const double PI=2.0*acos(0);

typedef long long int ll;
using namespace std;
unsigned int A[505][505],B[505],C[505][505],res[505][505],D[505][505],m_sz=504/2;
void Matrix(ll p)
{
     unsigned int sum=0,m=m_sz,sum1,TILE=18;
    int i,j,k,x,y,z;
    for(i=0;i<m;i++)
    {
        res[i][i]=1;
    }

    while ( p )
    {
       // memset(C,0,sizeof(C));
       // memset(D,0,sizeof(D));
        if ( p & 1 ) //p is odd
        {
            for(i=0;i<m;i++)
            {
                for(j=0;j<m;j++)
                {
                    sum=0;sum1=0;
                    for(k=0;k<m;k+=6)
                    {
                        sum1+=(A[i][k]*A[k][j])+(A[i][k+1]*A[k+1][j])+(A[i][k+2]*A[k+2][j])+(A[i][k+3]*A[k+3][j])+(A[i][k+4]*A[k+4][j])+(A[i][k+5]*A[k+5][j]);
                        sum+=(res[i][k]*A[k][j])+(res[i][k+1]*A[k+1][j])+(res[i][k+2]*A[k+2][j])+(res[i][k+3]*A[k+3][j])+(res[i][k+4]*A[k+4][j])+(res[i][k+5]*A[k+5][j]);
                    }
                      //  sum+=(res[i][k]*A[k][j]),sum1+=(A[i][k]*A[k][j]);
                    D[i][j]=sum;C[i][j]=sum1;
                }
            }
            for(i=0;i<m;i++)
                for(j=0;j<m;j++)
                res[i][j]=D[i][j];
        }
        else
        {
            for(i=0;i<m;i++)
            {
                for(j=0;j<m;j++)
                {
                    sum=0;
                    for(k=0;k<m;k+=6)
                        {
                            sum+=(A[i][k]*A[k][j])+(A[i][k+1]*A[k+1][j])+(A[i][k+2]*A[k+2][j])+(A[i][k+3]*A[k+3][j])+(A[i][k+4]*A[k+4][j])+(A[i][k+5]*A[k+5][j]);
                        }
                    C[i][j]=sum;
                }
            }
        }
		 for(i=0;i<m;i++)
                for(j=0;j<m;j++)
                A[i][j]=C[i][j];
        p = p >> 1;
    }
}
int main()
{
    ll i,j,k,l,t,cs=1,r=1,s,m,n,a,b,c,d,e,f,g,h,u,v;

    //freopen(".txt","r",stdin);
   // freopen("out.txt","w",stdout);
    memset(A,0,sizeof(A));
    for(i=0;i<m_sz;i++)
    {
        for(j=1;j<=9;j++)
        {
            if((i*10+j)%j==0)
            {
                A[(i*10+j)%m_sz][i]++;
            }
        }
    }
    memset(B,0,sizeof(B));
    for(i=1;i<=9;i++)
        B[i]=1;
    sn("%lld",&n);
    if(n==1)
    {
        pf("9\n");
        return 0;
    }
    Matrix(n-2);
    for(i=0;i<1;i++)
		{
			for(j=0;j<m_sz;j++)
			{
				unsigned int sum=0;
				for(k=0;k<m_sz;k++)
					sum+=(B[k]*res[j][k]);
				C[i][j]=sum;
			}
		}
    unsigned int ans=0;
    for(i=0;i<m_sz;i++)
    {
        for(j=1;j<=9;j++)
        {
            if((i*10+j)%j==0)
                ans=ans+C[0][i];
        }
    }
    pf("%u\n",ans);
    return 0;

}

/*
#include <bits/stdc++.h>
  #define _ ios_base::sync_with_stdio(0);cin.tie(0);
*/
