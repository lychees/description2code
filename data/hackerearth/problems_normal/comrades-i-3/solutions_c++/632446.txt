#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <list>
#include <limits>
#include<bits/stdc++.h>
#define MAX 100008
using namespace std;
vector<int>Graph[MAX+1];
int d[MAX],start[MAX],fin[MAX];
int t = 0,tt=1,vertex;
vector<int>::iterator it;
void DFS(int u ,int t) 
{
	tt+=1;
	start[u]=tt;
	d[u]=t;
	for(vector<int>::iterator it=Graph[u].begin();it!=Graph[u].end(); it++)
	{
		DFS(*it,t+1);
	}
	tt+=1;
	fin[u]=tt;
}
 

int main() 
{
	std::ios::sync_with_stdio(false);
	int tc,n,arr[MAX];
	
	cin >> tc;
	
	while(tc--)
	{
		cin >> vertex;
		t=0;
		for(int i=0;i<vertex;i++)Graph[i].clear();
		for(int i=1;i<=vertex;i++)
		{ 
		    cin >> arr[i];
		    Graph[arr[i]].push_back(i);
		}
		DFS(0,1);
		int Q,x,y;
		
		cin >> Q;
		
		while(Q--)
		{
			cin >> y >> x;
			if(start[x]<start[y] && fin[x]>fin[y])
			cout << d[y] - d[x]-1<<endl;
			else cout<<"-1"<<endl;
		}
	}
	
	return 0;
}