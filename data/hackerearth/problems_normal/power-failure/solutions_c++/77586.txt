#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define MX 100001
#define mod 1000000007

int in[100001];
int isp[100001];
int cnt[100001];

int pre(){
	for(int i=0;i<MX;i++)
		isp[i] = 1;
	isp[0] = isp[1] = 0;
	for(int i=0;i*i<MX;i++){
		if(isp[i]){
			for(int j=i*i;j<MX;j+=i)
				isp[j] = 0;
		}
	}
	for(int i=1;i<MX;i++)
		cnt[i] += cnt[i-1] + isp[i];
}

vector<int> v;
int N;
int M;

int sol(){
	cin >> N >> M;
	v.resize(N);
	for(int i=0;i<N;i++)
		cin >> v[i];
	unsigned long long res = 1;
	sort(v.begin(), v.end());
	for(int i=N-1; i>=0;i--){
		int cn = v[i];
		int primes = cnt[M];
		if(cn>0)
			 	primes -= cnt[cn-1];
		int options = M - v[i] + 1 - (N-i-1) - primes ;
		res = res * (options);
		res %= mod;
	}
	cout << res << endl;
}

int main(){
	pre();
	int t =1 ;
	cin >> t;
	while(t--)
		sol();
}

