#include <iostream>
using namespace std;

int min(int a,int b)
{
	if(a<b) return a;
	else return b;
	
}

int max(int a,int b)
{
	if(a>b) return a;
	else return b;
	
}

int main()
{
    int m,p;
    cin>>m>>p;
    int w[p];
    for(int i=0;i<p;i++)
    cin>>w[i];
    
    
    int a[m][p];
    
    for(int i=0;i<m;i++)
    for(int j=0;j<p;j++)
    {
    	a[i][j]=-1;
    }
    
    //dp min of maximum load
    for(int i=0;i<m;i++)
    for(int j=0;j<p;j++)
    {
    	if(i==0)//only one mover for j packets
    	{
    		int sum=0;
    		for(int k=0;k<=j;k++) sum=sum+w[k];
    		a[i][j]=sum;
    	}
    	
    	else if(j==0)//only one packet
    	{ 
           a[i][j]=w[j];
    		
    	}
    	
    	else// i movers and j packets
    	{
    		//first case
    		int sum=0;
    		for(int k=j;k>=0;k--)
    		{ sum=sum+w[k];
    		int vmax=max(a[i-1][k-1],sum);//max load in this case in this case
    		
    		if(a[i][j]==-1)
    		a[i][j]=vmax;
    		else
    		a[i][j]=min(a[i][j],vmax);
    		}
    	}
    }
    
    /*
    for(int i=0;i<m;i++)
    {
    for(int j=0;j<p;j++)
    {
      cout<<a[i][j]<<" ";
    }
    cout<<endl;
    }
    */
    cout<<a[m-1][p-1]<<endl;
    return 0;
}
