#include <iostream>
#include<bits/stdc++.h>
using namespace std;
struct node{
	int pos,last,cost;	
};
class priori{
public:
	bool operator()(node a,node b){
		if(a.cost>b.cost) return true;
		else return false;
	}
};
int dp[2][10];
int main()
{
    int t;
    cin>>t;
    while(t--){
    	int n,a[10];
    	string s;
    	for(int i=0;i<10;i++) cin>>a[i];
    	cin>>n;
    	cin>>s;
    	
    	for(int i=0;i<10;i++){
    		for(int j=0;j<=n;j++) dp[j][i]= INT_MAX;
    	}
    	priority_queue<node, vector<node>, priori> pq;
    	pq.push( (node){0,0,0} );
    	dp[0][0]=0;
    	while(!pq.empty() ){
    		int x= pq.top().pos;
    		int y= pq.top().last;
    		int val= pq.top().cost;
    //		cout<<x<< " "<<y << " "<<val<<endl;
    		pq.pop();
    		for(int i=0;i<10;i++){
    			int tmp= (y+i)%10;
    			
    				if( dp[1][tmp] > val+a[i] ){
    					dp[1][tmp]= val+a[i];
    				//	pq.push((node){x+1,0,dp[x+1][0] } );
    				}
    			
    			 if( dp[x][tmp] > val+a[i] ){
    				dp[x][tmp]= val+a[i];
    				pq.push( (node){x,tmp,dp[x][tmp] } );
    			}
    		}
    	}
    	int ans=0;
    	for(int i=0;i<n;i++)
    	ans+=dp[1][s[i]-'0'];
    	cout<<ans<<endl;
    }
    
    return 0;
}
