#include <map>
#include <set>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cassert>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;
#define int long long

const int N = (int)1e5 * 32;
int f[N][2], ct[N];
map <int, int> M;
int n, sz;
int a[N];
int mx = 30;

void comp(int x, int a)
{
	int cur = 0;
	for (int i = mx; i >= 0 and ~cur; i--)
	{
		int dig = (a >> i & 1);
		int pdig = (x >> i & 1);
		if (pdig == 0)
		{
			cur = f[cur][dig];
			continue;
		}
		if (~f[cur][dig]) M[x] += ct[f[cur][dig]];
		cur = f[cur][dig ^ 1];
	}
}

void insert(int a)
{
	int cur = 0;
	ct[0]++;
	for (int i = mx; i >= 0; i--)
	{
		int dig = (a >> i & 1);
		if (f[cur][dig] < 0) f[cur][dig] = sz++;
		cur = f[cur][dig];
		ct[cur]++;
	}
}

void go()
{
	memset(f, -1, sizeof(f));
	memset(ct, 0, sizeof(ct));
	sz = 1;
	for (int i = 0; i < n; i++)
	{
		for (pair <int, int> y : M)
		{
			int x = y.first;
			if (x <= 0) continue;
			comp(x, a[i]);
		}
		insert(a[i]);
	}
}

#undef int
int main()
{
#define int long long
	int t; cin >> t;
	while (t--)
	{
		cin >> n;
		n++;
		for (int i = 1; i < n; i++) cin >> a[i];
		for (int i = 1; i < n; i++) a[i] ^= a[i-1];
		M.clear();

		int q; cin >> q;
		int l[q], r[q];
		for (int i = 0; i < q; i++)
		{
			cin >> l[i] >> r[i];
			M[l[i]] = M[r[i] + 1] = 0;
		}

		go();
		for (int i = 0; i < q; i++) cout << M[r[i] + 1] - M[l[i]] << "\n";
	}
	return 0;
}