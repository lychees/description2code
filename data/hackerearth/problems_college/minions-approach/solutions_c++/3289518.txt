#include <bits/stdc++.h>
using namespace std;

const int MAXN = 1e6 + 10;

int tc,N;
vector<int> pr;
int lp[MAXN];
void linearSieve(int N){
    memset(lp,0,sizeof(int)*(N + 1));
    pr.clear();
    lp[0] = 0;
    lp[1] = 1;
    for(int i = 2;i <= N;++i){
        if(lp[i] == 0){
            lp[i] = i;
            pr.push_back(i);
        }
        int sz = pr.size();
        for(int j = 0;j < sz && pr[j] <= lp[i] && i*pr[j] <= N;++j){
            lp[i*pr[j]] = pr[j];
        }
    }   
}
int phi[MAXN];
void calcPhi(int N){
    phi[1] = 1;
    for(int i = 2;i <= N;++i){
        if(lp[i] == i){
            phi[i] = i - 1;
        }
        int sz = pr.size();
        for(int j = 0;j < sz && pr[j] <= lp[i] && i*pr[j] <= N;++j){
            if(pr[j] == lp[i]){
                phi[i*pr[j]] = pr[j]*phi[i];
            } else{
                phi[i*pr[j]] = phi[i]*(pr[j] - 1);
            }
        }
    }
}

int main(){
	scanf("%d",&tc);
	linearSieve(MAXN - 1);
	calcPhi(MAXN - 1);
    lp[1] = 0;
    // for(int i = 1;i <= 20;++i){
    //     cout << phi[i] << "\n";
    // }
	for(int tr = 1;tr <= tc;++tr){
		scanf("%d",&N);
		int Z = phi[N];
		if(lp[Z] == Z){
			printf("Correct\n");
		} else{
			printf("Incorrect\n");
		}
	}
	return 0;
}
