#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<map>
#include<stdlib.h>
#include<algorithm>
#include<limits.h>
#include<stack>
#include<deque>
#include<set>

using namespace std;

#define i_n(a) scanf("%d",&a)
#define l_n(a) scanf("%lld",&a)
#define s_n(a) scanf("%s",a)
#define LL long long int
#define pb(a) push_back(a)
#define pp pair<int,int>
#define vv vector<LL>
#define vvp vector<pp>
#define i_p(a) printf("%d\n",a)
#define l_p(a) printf("%lld\n",a)
#define s_p(a) printf("%s",a)
#define pnt(expr) printf(#expr"\n")
#define reset(a,val) memset(a,val,sizeof(a))
#define m1 1000000000
#define mod 100000000
#define pr(cn,x) ((cn).find(x)!=(cn).end())
#define tr(cn,it) for(typeof((cn).begin()) it=(cn).begin();it!=(cn).end();it++)
#define read() freopen("fraud.in","r",stdin)
#define write() freopen("prem3.txt","w",stdout)
#define ADDMOD(a,b)  (a%mod+b%mod)%mod
#define MULMOD(a,b)  (a%mod*b%mod)%mod


bool cmp(const pair<int, int>& p1, const pair<int, int>& p2)
{
    return p1.first < p2.first;
}
LL mem[105][3];
int in[3]={1,3,5};
LL sol(int s,int idx)
{
    if(s==0)
        return 1;
    if(s<0)
        return 0;
    if(idx>=3&&s>=0)
        return 0;

    if(mem[s][idx]!=-1)
        return mem[s][idx];
    LL a=0;
    a=sol(s,idx+1)+sol(s-in[idx],idx);
    mem[s][idx]=a;
    return a;
}
int main()
{
    int t;
    i_n(t);

    while(t--)
    {
        int n;
        i_n(n);
        reset(mem,-1);
        LL z=0;
        z=sol(n,1)+sol(n-in[0],0);
        l_p(z);
    }

    return 0;
}
