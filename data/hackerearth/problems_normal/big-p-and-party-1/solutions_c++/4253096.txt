#include<bits/stdc++.h>
using namespace std;
vector<long long> v[1009];
long long distances[1009];
long long visited[1009];
queue<long long> q;
void bfs(long long vertex);

int main()
{
    long long vertex,edges,i,a,b;
    cin>>vertex>>edges;
    for(i=0;i<edges;i++)
    {
        cin>>a>>b;
        v[a].push_back(b);
        v[b].push_back(a);
    }
	distances[0]=0;
    for(i=0;i<=vertex-1;i++)
    {
        if(visited[i]==0)
        	bfs(i);
    }
   for(i=1;i<=vertex-1;i++)
    {
    	long long x;
    	x=distances[i];
    	cout<<x<<endl;
	}
return 0;
}
 
void bfs(long long vertex)
{
 
       long long i,x;
       q.push(vertex);
       while(!q.empty())
       {
            x=q.front();
            q.pop();
            visited[x]=1;
            
            
           for(i=0;i<v[x].size();i++)
           {
               if(visited[v[x][i]]==0)
               {
               distances[v[x][i]] = distances[x]+1;
               visited[v[x][i]]=1;
                q.push(v[x][i]);
               }
           }
 
 
       }
 
}