#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
using namespace std;
int a[100010];
int cp[100010]={0};
int tree[1000010]={0},MaxVal=500010;
int read(int idx){
	int sum = 0;
	while (idx > 0){
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}

void update(int idx ,int val){
	while (idx <= MaxVal){
		tree[idx] += val;
		idx += (idx & -idx);
	}
}

int main()
{
    int n;
    scanf("%d",&n);
    long long int sum=0;
    int pp=-1;
    int low=100010;
    int high=-1;
    for(int i=0;i<n;i++)
    {
            scanf("%d",&a[i]);
            cp[a[i]]++;
            if(a[i]<low)
               low=a[i];
            if(a[i]>high)
               high=a[i];
            update(a[i],1); 
            if(pp==-1)
            {
                      pp=a[i];
                      sum+=a[i];
                    sum%=100000;
               
            }
            else
            {
                int q=read(pp);
                int d=read(pp-1);
            //    cout<<q<<"\t"<<d<<"\n";
                if((q>=((i+2)/2))&&(d<(i+2)/2))                       
                {      sum+=pp;
                       sum%=100000;
               }
                else if(q<(i+2)/2)
                {    pp++;
                     while(cp[pp]==0)
                       pp++;
                       sum+=pp;
                       sum%=100000;
               
                }      
                else
                {
                        pp--;
                     while(cp[pp]==0)
                       pp--;
                       sum+=pp;
                       sum%=100000;
                }
            }
    }
    cout<<sum<<"\n";
    return 0;
    
}
