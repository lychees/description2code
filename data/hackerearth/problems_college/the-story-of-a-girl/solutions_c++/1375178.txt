#include<iostream>
#include<cstdio>
#include<istream>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#define rep(i,a,b) for(lint i=a; i<b; i++)
#define sc2(x,y) scanf("%d%d", &x,&y)
#define sc(x) scanf("%d", &x)
#include<memory.h>
#define lint long long
using namespace std;
#include <stdlib.h>
#define mod 1000000007
void multiply(lint F[2][2], lint M[2][2]);

void power(lint F[2][2], lint n);

/* function that returns nth Fibonacci number */
lint fib(lint n)
{
  lint F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0];
}

/* Optimized version of power() in method 4 */
void power(lint F[2][2], lint n)
{
  if( n == 0 || n == 1)
      return;
  lint M[2][2] = {{1,1},{1,0}};

  power(F, n/2);
  multiply(F, F);

  if (n%2 != 0)
     multiply(F, M);
}

void multiply(lint F[2][2], lint M[2][2])
{
  lint x =  (F[0][0]*M[0][0] + (F[0][1]*M[1][0])%mod)%mod;
  lint y =  (F[0][0]*M[0][1] + (F[0][1]*M[1][1])%mod)%mod;
  lint z =  (F[1][0]*M[0][0] + (F[1][1]*M[1][0])%mod)%mod;
  lint w =  (F[1][0]*M[0][1] + (F[1][1]*M[1][1])%mod)%mod;

  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}

/* Driver program to test above function */
int main()
{
  lint t,n;
  cin>>t;
  while(t--){
  	cin>>n;
  	lint ans = fib(n);
  	cout<<ans<<endl;
  }
  return 0;
}
