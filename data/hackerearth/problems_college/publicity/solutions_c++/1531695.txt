#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>  
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
using namespace std;
 
typedef unsigned long long int ull;
typedef long long int ll;

vii a[100005],ar[100005],comp,ord;
int vis[100005],n,m;

void dfs(int at)
{
    vis[at]=1;
    for(vii::iterator it=a[at].begin();it!=a[at].end();it++)
    {if(!vis[*it])
     dfs(*it);
    }
    ord.pb(at);
}

void dfs1(int at)
{
    vis[at]=1;
    comp.pb(at);//cout<<cost[at]<<"\n";
    for(vii::iterator it=a[at].begin();it!=a[at].end();it++)
    {if(!vis[*it])
     dfs1(*it);
    }
    
}

int main()
{ios_base::sync_with_stdio(false);
int t;
gl(t);
while(t--)
{   memset(vis,0,sizeof(vis));
	cin>>n;
	rep(i,0,100000)
	a[i].clear();
	ord.clear();
	comp.clear();
	gl(m);int ans=0;
while(m--)
{
    int x,y;
    cin>>x>>y;
    a[x].pb(y);
    a[y].pb(x);
}
rep(i,0,n-1)
if(!vis[i])dfs(i);
memset(vis,0,sizeof(vis));
reverse(all(ord));
rep(i,0,n-1)
{
	if(!vis[ord[i]])
	{
		dfs1(ord[i]);
		ans++;
		comp.clear();
	}
}
ol(ans);on;
}
return 0;
}