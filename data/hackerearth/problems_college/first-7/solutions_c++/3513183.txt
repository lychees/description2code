#include<bits/stdc++.h>
using namespace std;

#define LL long long
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ(a) (int)(a.size())
#define BS(vec,val) (int)(lower_bound(vec.begin(),vec.end(),val) - vec.begin())
#define bitcount __builtin_popcountll
#define LET(it,container) __typeof(container.begin()) it(container.begin())
#define ITER(it,container) for(__typeof(container.begin()) it=container.begin();it!=container.end();it++)

#define PREC cout << setprecision(6) << fixed;
#define FIO ios_base::sync_with_stdio(0); cin.tie(NULL);
#define DB(x) cerr << #x << ": " << x << " ";
//#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif
//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);

const double PI = acos(-1.0);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 9;
const int MX = 1e5 + 5;

int main()
{
	FIO;
	PREC;
	int t;
	cin >> t;
	while(t--)
	{
		LL n;
		cin >> n;
		
		double ans;
		ans = 1.0*(2*n -1)*n*n;
		
		double tmp;
		LL k;
		k = (n-1)/2;
		tmp = 4.0*(n-1)*(n-1)*(k+1) - (16.0 * k * (k+1) * (2*k + 1))/6.0;
		if(n%2 == 1)
		{
			tmp = tmp + (n-1) + 2*k;
		}
		
		ans = ans + tmp;
		ans = ans/(n*n);
	
		cout << ans << endl;
	}
	
	return 0;
}
