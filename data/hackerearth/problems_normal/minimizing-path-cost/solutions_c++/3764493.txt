#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef vector<pii> vpi;
typedef vector<pll> vpl;
typedef vector<string> vs;
#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define all(v) v.begin(),v.end()
#define Pi(x) printf("%d", x)
#define Pl(x) printf("%lld", x)
#define os() printf(" ")
#define nl() printf("\n");
#define F first
#define S second
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define mem(x,i) memset(x,i,sizeof(x))
#define fori(i,s,n) for(int i=(s);i<(n);++i)
#define forl(i,s,n) for(ll i=(s);i<(n);++i)
#define ford(i,s,n) for(int i=(n)-1;i>=(s);--i)
#define forld(i,s,n) for(ll i=(n)-1;i>=(s);--i)
#define INF 8944674407370955161LL
#define debug(i,st,arr) fori(i,0,st){cout<<arr[i]<<" ";}cout<<endl;
#define debugl(i,st,arr) forl(i,0,st){cout<<arr[i]<<" ";}cout<<endl;
#define forci(i,sw) for((i)=(sw).begin();(i)!=(sw).end();(i)++)
#define forcd(i,sw) for((i)=(sw).rbegin();(i)!=(sw).rend();(i)++)
#define debugit(i,sw) forci(i,sw){cout<<i->F<<" " << i->S<<endl;}cout<<endl;
#define sync() ios_base::sync_with_stdio(0)

int Dijsktra(vpi adj[], int src, int dest, int n)
{
	priority_queue<pii,vpi,greater<pii>> Q;
	int d[n+1];
	memset(d,MOD,sizeof(d));
	map<int,bool> f;
	d[src] = 0;
	Q.push(mp(d[src],src));
	
	while (!Q.empty()) {
		int u = Q.top().S;
		Q.pop();
		if (f[u]) continue;
		
		int sz = adj[u].size();
		fori(i,0,sz) {
			int v = adj[u][i].F;
			int c = adj[u][i].S;
			if (d[v] > d[u]+c) {
				d[v] = d[u]+c;
				Q.push(mp(d[v],v));
			}
		}
		f[u] = 1;
	}
	return d[dest];
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    
    int n,m;
    cin >> n >> m;
    map<string,int> M;
    map<string,int> ::iterator ir;
    fori(i,0,n) {
    	string s; cin >> s;
    	M[s] = 1;
    }
    int i =0;
    for(ir=M.begin(); ir!=M.end(); ir++) {
    	ir->S = i++;
    }
    vpi adj[n+1];
    fori(i,0,m) {
    	int c;
    	string s1,s2;
    	cin >> s1 >> s2 >> c;
    	adj[M[s1]].pb(mp(M[s2],c));
    	adj[M[s2]].pb(mp(M[s1],c));
    }
    int q;
    cin >> q;
    while (q--) {
    	string src,dest;
    	cin >> src >> dest;
    	cout << Dijsktra(adj,M[src],M[dest],n) << endl;
    }
    
    return 0;
}
