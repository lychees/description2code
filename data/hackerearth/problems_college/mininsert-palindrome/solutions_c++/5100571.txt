#include <iostream>
#include<string>
#include<algorithm>
using namespace std;

int max(int a, int b)
{
	return (a>b?a:b);
}

int lcs(string A, string B, int m, int n)
{   
     
	int f[m+1][n+1];
	for(int i=0;i<=m;i++)
	{
		for(int j=0;j<=n;j++)
		{
			if(i==0||j==0)
			    f[i][j]=0;
			else if(A[i]==B[j])
			    f[i][j]=1+f[i-1][j-1];
			else
			    f[i][j]=max(f[i-1][j],f[i][j-1]);
			
		}
	}
	return f[m][n];
	

}



int minIP(string A, int n)
{
	string B;
	reverse(A.begin(),A.end());
	B.assign(A);
	reverse(A.begin(),A.end());
	int lcss = lcs(A,B,A.length(),B.length());
	if (lcss==A.length())
	return 0;
	if(n%2==0)
	return (A.length()-lcss+1);
	else
	return A.length()-lcss;
	
}

int main()
{
	int n;
	int length_str;
	cin>>n;
for(int i=0;i<n;i++)
{
	cin>>length_str;
	string pal;
	cin>>pal;
	int minPal= minIP(pal,length_str);
	cout<<minPal<<endl;
}
    
}
