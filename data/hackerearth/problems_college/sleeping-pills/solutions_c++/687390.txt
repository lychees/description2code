#include <stdio.h>
#include <iostream>
using namespace std;

long modPow(long a, long x, long p) {
    //calculates a^x mod p in logarithmic time.
    long res = 1;
    while(x > 0) {
        if( x % 2 != 0) {
            res = (res * a) % p;
        }
        a = (a * a) % p;
        x /= 2;
    }
    return res;
}

long modInverse(long a, long p) {
    //calculates the modular multiplicative of a mod m.
    //(assuming p is prime).
    return modPow(a, p-2, p);
}
long modBinomial(long n, long k, long p) {
// calculates C(n,k) mod p (assuming p is prime).

    long numerator = 1; // n * (n-1) * ... * (n-k+1)
    for (int i=0; i<k; i++) {
        numerator = (numerator * (n-i) ) % p;
    }
    
    long denominator = 1; // k!
    for (int i=1; i<=k; i++) {
        denominator = (denominator * i) % p;
    }
    
    // numerator / denominator mod p.
    return ( numerator* modInverse(denominator,p) ) % p;
}



int main()
{
   // cout << "Hello World!" << endl;
   int t;
  // cin>>t;
   scanf("%d",&t);
   while(t--)
   {
   	int n,m;
   	//cin>>n>>m;
   	scanf("%d%d",&n,&m);
   	long long total=0;
   	int num;
   	for(int i=0; i<n; i++)
   	{
   		//cin>>num;
   		scanf("%d",&num);
   		total=total+num;
   	}
   	if(total>m)
   	{
   		cout<<(0)<<endl;
   	}
   	else
   	{
   		int ans=modBinomial((m-total+n-1),(n-1),1000000007);
   		cout<<ans<<endl;
   	}
   }
   
    return 0;
}
