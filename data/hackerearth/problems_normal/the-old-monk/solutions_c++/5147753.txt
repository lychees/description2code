#include <iostream>
using namespace std;

int findPosition(long long data[],long long item,int left,int right)
{
	// for(int i=left;i<=right;i++)
	// {
	// 	if(item>=data[i])
	// 	{
	// 		return right-i;
	// 	}
	// }
	int orRight=right;
	int dis=0;
	while(left<=right)
	{
		int mid=(left+right)/2;
		if(data[mid]==item)
		{
			int newDis=orRight-mid;
			if(newDis>dis)
			{
				dis=newDis;
			}
			right=mid-1;
		}
		else if(data[mid]<item)
		{
			int newDis=orRight-mid;
			if(newDis>dis)
			{
				dis=newDis;
			}
			right=mid-1;
		}
		else if(data[mid]>item)
		{
			
			left=mid+1;
		}
	}
	
	return dis;
}

int main()
{
    int testCase=0;
    cin>>testCase;
    for(int i=0;i<testCase;i++)
    {
    	int arrayNum=0;
    	cin>>arrayNum;
    	long long arrayA[arrayNum];
    	long long arrayB[arrayNum];
    	for(int j=0;j<arrayNum;j++)
    	{
    		cin>>arrayA[j];
    	}
    	
    	for(int j=0;j<arrayNum;j++)
    	{
    		cin>>arrayB[j];
    	}
    	
    	int result=0;
    	for(int j=1;j<arrayNum;j++)
    	{
    		long long data=arrayB[j];
    		int position=findPosition(arrayA,data,0,j);
    		if(position>result)
    		{
    			result=position;
    		}
    	}
    	cout<<result<<endl;
    }
    return 0;
}
