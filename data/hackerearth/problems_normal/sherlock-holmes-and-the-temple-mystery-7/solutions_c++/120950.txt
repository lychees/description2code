#include<iostream>
#include<algorithm>
#include<string.h>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<ctime>
#include<climits>
#include<iterator>
#include<list>
#include<functional>
#include<bitset>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<numeric>
#define MOD 1000000007
using namespace std;
bool findPartiion (int arr[], int n)
{
    int sum = 0;
    int i, j;
  
    for (i = 0; i < n; i++)
      sum += arr[i];
    
    if (sum%2 != 0)  
       return false;
  
    bool part[sum/2+1][n+1];
    
    for (i = 0; i <= n; i++)
      part[0][i] = true;
      
    for (i = 1; i <= sum/2; i++)
      part[i][0] = false;     
     
     // Fill the partition table in botton up manner 
     for (i = 1; i <= sum/2; i++)  
     {
       for (j = 1; j <= n; j++)  
       {
         part[i][j] = part[i][j-1];
         if (i >= arr[j-1])
           part[i][j] = part[i][j] || part[i - arr[j-1]][j-1];
       }        
     }    
     
     return part[sum/2][n];
}     
int N;
int arr[100000];
int work()
{
  cin>>N;
  for(int i=0;i<N;++i)cin>>arr[i];
  
  if (findPartiion(arr, N) == true)
     printf("YES\n");
  else
     printf("NO\n");
  return 0;
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	work();
	return 0;
}