/*Divyam Goyal - IIT-BHU*/
#include<bits/stdc++.h>
using namespace std;

//freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define bitcount    __builtin_popcountll
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
#define ll long long
#define mp(a,b) make_pair(a,b)
#define F first
#define S second
#define pb(x) push_back(x)
#define MOD 1000000007
#define MAX 100005


vector<int>tree[100005];
int dp[100005][2];int a[100005],b[100005];
void dfs(int node,int p)
{
    
    dp[node][1]=1;
    for(auto i:tree[node])
    {
        if(i!=p)
        {
            dfs(i,node);
            dp[node][1]+=dp[i][1]-1;
            dp[node][0]+=min(dp[i][0],dp[i][1]);
        }

    }

    if(a[node]==b[node])
        dp[node][1]++;
    else
        dp[node][0]++;
    dp[node][1]=min(dp[node][1],2+dp[node][0]);
    //trace3(node,dp[node][0],dp[node][1]);

}





int main()
{
    //ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n;
    cin>>n;

    for(int i=0;i<n-1;i++)
    {
        int u,v;
        cin>>u>>v;
        tree[u].pb(v);
        tree[v].pb(u);
    }

    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    for(int i=1;i<=n;i++)
    {
        cin>>b[i];
    }

    dfs(1,-1);

    cout<<min(dp[1][1],dp[1][0]);







    return 0;


}