#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<vector>
#include<string>
#include<cstring>
#include<cassert>
#include<cmath>

//code by cl3488

#define dri(X) int (X); scanf("%d", &X)
#define drii(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define driii(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define pb push_back
#define mp make_pair
#define rep(i, s, t) for ( int i=(s) ; i <(t) ; i++)
#define fill(x, v) memset (x, v, sizeof(x))
#define all(x) (x).begin(), (x).end()
#define why(d) cerr << (d) << "!\n"
#define whisp(X, Y) cerr << (X) << " " << (Y) << "#\n"
#define exclam cerr << "!!\n"
typedef long long ll;
using namespace std;
typedef pair<int, int> pii;
const ll inf = (ll)1e9 + 70;
const ll mod = 100000;
const int maxn = 205;

ll dp[maxn][maxn];

int main(){
	if (fopen("input.txt", "r")) freopen("input.txt", "r", stdin);
	dri(n);
	string s; cin >> s;
	for(int i = n-1; i >=0; i--){
		dp[i][i-1] = 1;//the empty sequence
		rep(j, i, n){
			//interval i...j
			dp[i][j] = 0;
			if(s[j] == 'A' || s[j] == 'B' || s[j] == 'C'){
				continue;
			}
			rep(c,0,3){
				if(s[j] != '?' && s[j] != ('a' + c)){
					continue;
				}
				rep(k, i, j){
					if(s[k] == '?' || s[k] == ('A' + c)){
						dp[i][j] += dp[i][k-1] * dp[k+1][j-1];
						dp[i][j] %= mod;
					}
				}
			}
		}
	}
	ll ans = dp[0][n-1];
	cout << (ans + mod) % mod << "\n";
	return 0;
}