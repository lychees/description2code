    #include <iostream>
    #include <vector>
    using namespace std;
     
    void merge(vector<long int>&a, vector<long int>&c, int low, int mid, int high)
    {
    	int i = low, k = low, j = mid+1;
    	while(i<=mid && j<=high) {
    		if (a[i] > a[j]) {
    			c[k++] = a[j];
    			j++;
    		} else {
    			c[k++] = a[i];
    			i++;
    		}
    	}
    	while (i<=mid) {
    		c[k++] = a[i];
    		i++;
    	}
    	while(j<=high) {
    		c[k++] = a[j];
    		j++;
    	}
    	k = high;
    	while (k>=low) {
    		a[k] = c[k];
    		k--;
    	}
    }
     
    void merge_sort(vector <long int> &a, vector <long int>&c, int low, int high)
    {
    	if (low>=high)
    		return;
    	int mid = (low+high)/2;
    	merge_sort(a, c, low, mid);
    	merge_sort(a, c, mid+1, high);
    	merge(a, c, low, mid, high);
    }
     
    int main()
    {
    	int T; cin >> T;
    	int cnt = 0;
    	while (T--) {
    		int N,i=0,j=0; cin >> N;
    		vector<long int>Pairs(N,0);
    		vector<long int>temp(N,0);
    		while(i<N) {
    			cin>>Pairs[i++];
    		}
    		merge_sort(Pairs, temp, 0, N-1);
    		cnt = 0;
    		for(i=0; i<N; i++) {
    			for(j=i; j<N; j++) {
    				if (Pairs[i] != Pairs[j])
    					break;
    				cnt++;
    			}
    		}
    		cout <<cnt<<"\n";
    	}
        return 0;
    }