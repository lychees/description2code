#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
const int MOD = 1000000007;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define foru(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define ford(i, a, b) for (int i = (a); i >= (b); --i)
#define sz(a) ((int) a.size())
#define pb(a) push_back(a)
#define mp(a, b) make_pair(a, b)
#define mem(a) memset(a, 0, sizeof(a))
#define all(a) a.begin(), a.end()

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void add_max(T &a, T b) {if (b > a) a = b;}
template<class T> inline void add_min(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {if (b == 0) return a; return gcd(b, a % b);}

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<vector<char> > logo1(n * 2, vector<char> (n * 2 + 3, ' '));
    repu(i, 0, n) repu(j, 0, n) {
    	int m = i + j - n + 1;
    	if (m >= 0 && m % 2 == 0) {
    		logo1[i][j] = '/';
    		logo1[i][2 * n - 1 - j] = '\\';
    		logo1[2 * n - 1 - i][j + 2] = '\\';
    		logo1[2 * n - 1 - i][2 * n - j + 1] = '/';
    	}
    }
    n++;
    vector<vector<char> > logo2(n * 2, vector<char> (n * 2 + 3, ' '));
    repu(i, 0, n) repu(j, 0, n) {
    	int m = i + j - n + 1;
    	if (m >= 0 && m % 2 == 0) {
    		logo2[i][j] = '/';
    		logo2[i][2 * n - 1 - j] = '\\';
    		logo2[2 * n - 1 - i][j + 2] = '\\';
    		logo2[2 * n - 1 - i][2 * n - j + 1] = '/';
    	}
    }
    repu(i, 0, logo1.size()) {
    	int lim = 0;
    	repu(j, 0, logo1[i].size()) {
    		if (logo1[i][j] != ' ') lim = j;
    	}
    	foru(j, 0, lim) printf("%c", logo1[i][j]);
    	printf("\n");
    }
    repu(i, 0, logo2.size()) {
    	int lim = 0;
    	repu(j, 0, logo2[i].size()) {
    		if (logo2[i][j] != ' ') lim = j;
    	}
    	foru(j, 0, lim) printf("%c", logo2[i][j]);
    	printf("\n");
    }
    return 0;
}
