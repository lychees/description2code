#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

int t,n,i,j,ans;

int dp[100005];

pair<int,int> p[100005];

bool marked[100005];

void setdp()
{
	for(i=0;i<n;i++)
	{
	int low=i+1; int high=n-1;
	           int mid;
	
	       int val=p[i].first+p[i].second;
	
	       for(j=0;j<50 && low<=high;j++)
	     {
		mid= (low+high)/2;
		
		if(p[mid].first>= val)high=mid;
		
		else low=mid+1;
	}
	
	dp[i]=low;
	
	
	}
}	


int main() {
	cin>>t;
	
	while(t--)
	{
		ans=0;
		
		memset(marked,false,sizeof(marked));
		cin>>n;
		
		for(i=0;i<n;i++)cin>>p[i].first;
		for(i=0;i<n;i++)cin>>p[i].second;
		
		sort(p,p+n);
		
	    setdp();
	    
	    int count=0;
		
		for(i=0;i<n && count<=n;i++)
		{
			if(!marked[i]){marked[i]=true; ans++;count++;}
			
			
			
				for(j=dp[i];marked[j]==true && j<=n;j++);
				
				marked[j]=true;
			
			
		}
		cout<<ans<<endl;
	}
	return 0;
}