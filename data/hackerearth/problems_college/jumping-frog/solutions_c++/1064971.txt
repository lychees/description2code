#include <bits/stdc++.h>
using namespace std;
#define scan(a) scanf("%d",&a);
#define print(a) printf("%d\n",a);
#define clr(a) memset(a,0,sizeof(a))
#define pb(x) push_back(x)
#define mp(a,b) make_pair(a,b)
int arr[100002];
vector<int>g[100];
int level[100002],flag[100];
void bfs(int s,int end)
{
    for(int i=0;i<100002;i++)
        level[i]=-1;
    queue<int>q;
    clr(flag);
    level[s]=0; 
    q.push(s);
    while(!q.empty())
    {
        int in=q.front();
        q.pop();
        if(in==end)
            break;     
        int u=arr[in];
        int sz=g[u].size();
        if(flag[u]==0)
        {
            for(int i=0;i<sz;i++)
            {
                int v=g[u][i];
                if(level[v]==-1)
                {
                    level[v]=level[in]+1;
                    q.push(v);
                }
            }
            flag[u]=1;
        }
        if(in>0)
        {
            if(level[in-1]==-1)
            {
                level[in-1]=level[in]+1;
                q.push(in-1);
            }
        }
    }
}
int main()
{
    int n,s,mid,e,q,p1=0;
    scan(n);
    for(int i=0;i<n;i++)
    {
        scan(arr[i]);
        g[arr[i]].pb(i);
    }
    scan(q);
    while(q--)
    {
        scan(s);scan(mid);scan(e);
        bfs(s,mid);
        if(level[mid]==-1)
            printf("-1\n");
        else
        {
            p1=level[mid];
            bfs(mid,e);
            if(level[e]==-1)
                printf("-1\n");
            else
                printf("%d\n",level[e]+p1);
        }   
    }
    return 0;
}
