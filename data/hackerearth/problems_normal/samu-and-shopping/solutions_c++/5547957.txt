#include <bits/stdc++.h>
using namespace std;

typedef vector<int> VI;

int A[100000][3];
int cache[100000][3];
int n;
int minValue(int shopId,int item){
	if(shopId == n-1){
		return A[shopId][item];
	}
	
	if(cache[shopId][item]!=-1){
		return cache[shopId][item];
	}else{
		switch(item){
			case 0 : 
				cache[shopId+1][1] = minValue(shopId+1,1);
				cache[shopId+1][2] = minValue(shopId+1,2);
				return cache[shopId][item] = A[shopId][item] + min(cache[shopId+1][1],cache[shopId+1][2]);
			case 1 : 
				cache[shopId+1][0] = minValue(shopId+1,0);
				cache[shopId+1][2] = minValue(shopId+1,2);
				return cache[shopId][item] = A[shopId][item] + min(cache[shopId+1][0],cache[shopId+1][2]);
			case 2 : 
				cache[shopId+1][1] = minValue(shopId+1,1);
				cache[shopId+1][0] = minValue(shopId+1,0);
				return cache[shopId][item] = A[shopId][item] + min(cache[shopId+1][0],cache[shopId+1][1]);
			default :
				break;
		}
	}
	return 0;
}

int main()
{
    int t;
    cin>>t;
    while(t--){
    	cin>>n;
    	memset(cache, -1, sizeof(cache));
    	for(int i=0;i<n;i++){
    		cin>>A[i][0]>>A[i][1]>>A[i][2];
    	}
    //	cout<<cache[3][0]<<endl;
    	cout<<min(minValue(0,0),min(minValue(0,1),minValue(0,2)))<<endl;
    }
    return 0;
}
