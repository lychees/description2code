#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <list>
#include <set>
using namespace std;

#define rep(i,a,b)for( int i = a; i < b; i++)

typedef long long ll;

ll n, m, x, y;

class node {
	public:
	char sex;
	ll type = -1;
	set<ll> adjlist;
};

vector<node> graph;

int main()
{
    cin >> n >> m;
    
    graph = vector<node>(n,node());
    
    rep(i,0,n)
    	cin >> graph[i].sex;
    
    rep(i,0,m) {
    	cin >> x >> y;
    	x--;
    	y--;
    	graph[x].adjlist.insert( y );
    	graph[y].adjlist.insert( x );
    }
    
    //bfs
    
    list<ll> q;
    graph[0].type = 0;
    q.push_back( 0 );
    
    while( !q.empty() ) {

    	node& cnode = graph[ q.front() ];
    	q.pop_front();
    	for( ll i : cnode.adjlist ) {
    		node& nnode = graph[i];
    		if( nnode.type == -1 ) {
    			nnode.type = (cnode.type + 1) % 2;
    			q.push_back( i );
    		}
			else if( nnode.type == cnode.type ) {
				cout << "Not possible";
				return 0;
			}
    	}
    	
    }
    
    ll c1 = 0, c2 = 0;
    
    rep(i,0,n) {
    	if( graph[i].type == 0 && graph[i].sex == 'B' )
    		c1++;
		if( graph[i].type == 1 && graph[i].sex == 'G' )
			c1++;
		if( graph[i].type == 0 && graph[i].sex == 'G' )
    		c2++;
		if( graph[i].type == 1 && graph[i].sex == 'B' )
			c2++;
    }
	
	cout << min( c1, c2 );
    
    return 0;
}
