#include<bits/stdc++.h>
  using namespace std;
  #define MAXN 1000010
  #define MOD 1000000007
  #define LL long long 
  int num[MAXN], a[MAXN];
  LL dp[MAXN];

 LL qpow(LL x , LL k){
 LL res=1;
 while(k){
    if(k & 1) res = (res%MOD * x%MOD) % MOD;
    x = (x%MOD * x%MOD)%MOD;
    k >>= 1;
 }
 return res;
}

int main() {
int T;
int n,k;
LL ans;
//int;
    scanf("%d",&n);
    assert(n<=1000000&&n>=1);
    int x;
    int max_num = 0;
    int count = 0;
    memset(num , 0 , sizeof(num));
    memset(dp , 0 , sizeof(dp));
    for(int i = 0 ; i < n ; i ++)
    {
        scanf("%d",&a[i]);
        assert(a[i]<=n);
        num[a[i]] ++;
        max_num = max(a[i] , max_num);
    }

    ans = 0;
    for(int i = max_num ; i >= 1 ; i --)
    {
        count = 0;
        dp[i] = 0;
        for(int j = i ; j <= max_num ; j += i)
        {
            count += num[j];
            if(j > i) dp[i] = (dp[i] - dp[j] + MOD) % MOD;
        }
        dp[i] = (dp[i] + qpow(2 , count) - 1 + MOD) % MOD;

    }
    for(int i=0;i<n;i++)
    cout<<dp[a[i]]<<" ";

   return 0;
 }
