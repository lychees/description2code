#include <algorithm>
#include <bitset>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>

#include <sstream>
// ostringstream buf;

#include <cstdio>
// sscanf(time.c_str(), "%d:%d:%d", &H, &M, &S);

#include <limits>
// std::numeric_limits<long long>::max();

typedef long long ll;
typedef std::bitset<10> tBS;

tBS n2bitset(ll n) {
  tBS bs(0);
  while (n!=0) {
    auto d = n % 10;
    bs.set(d);
    n = n / 10;
  }
  return bs;
}
	     

int main() {
  ll N;
  std::cin >> N;
  std::vector<ll> nn(10, 0);
  std::vector<std::vector<ll>> pp(10, std::vector<ll>(10, 0));
  std::vector<ll> smap(1024, 0);

  for (ll k=1; k<=N; k++) {
    auto bs = n2bitset(k);
    for (int bb = 0; bb<1024; bb++)
      if ((tBS(bb) & bs).any())
	smap[bb] ++;
  }
  
  ll Q;
  std::cin >> Q;
  while (Q--) {
    ll M;
    std::cin >> M;
    tBS bs(0);
    while (M--) {
      ll ch;
      std::cin >> ch;
      bs.set(ch);
    }

    std::cout << smap[bs.to_ulong()] << '\n';
  }
}
