#include <iostream>
#include<unordered_map>
#include<queue>
using namespace std;
unordered_map<int ,int > mymap;

int main()
{
    int t;
    cin>>t;
    while(t>0)
    {
    	int n;
    	cin>>n;
    	int cnt=0;
    	queue<pair<int,int>  > q;
    	q.push(make_pair(n,0));
		pair<int,int> pp;
    	mymap.clear();
    	while(q.size()>0)
    	{
    		pp=q.front();
    		if(pp.first==1)
    		{
    			cnt=pp.second;
    			break;
    		}	
    		if(pp.first%2==0 && pp.first/2>=1)
    		{
    			if(mymap.find(pp.first/2)==mymap.end())
    			{	
    				mymap[pp.first/2]=1;
    				q.push(make_pair(pp.first/2,pp.second+1));
    			}
    		}
    		if(pp.first%3==0 && pp.first/3>=1)
    		{
    			if(mymap.find(pp.first/3)==mymap.end())
    			{
    				mymap[pp.first/3]=1;
    				q.push(make_pair(pp.first/3,pp.second+1));
    			}
    		}
    		if(mymap.find(pp.first-1)==mymap.end() && pp.first-1>=1)
    		{	
    			mymap[pp.first-1]=1;
    			q.push(make_pair(pp.first-1,pp.second+1));
    		}
    		q.pop();
    	}
    	cout<<cnt<<endl;
    	t--;
    }
}