#include <bits/stdc++.h>
using namespace std;
int n,m,q,a,b;
vector<int> gr[109];


void dfs(int disc[],int low[],int visited[],int parent[],int AP[],int v,int n,int tme,int child)
{
    int i;
	visited[v] = 1;
	disc[v] = low[v] = tme+1;
	child = 0;
	for(int j=0;j<gr[v].size();j++)
	{
	    i = gr[v][j];
		if(visited[i]==0)
		{
			child+=1;
			parent[i] = v;
			dfs(disc,low,visited,parent,AP,i,n,tme+1,child);
			low[v] = min(low[v],low[i]);
			if(parent[v]==-1 && child>1)
				AP[v]=1;
			if(parent[v]!=-1 && low[i]>=disc[v])
			{
			    AP[v] = 1;
			}


		}
		else if(parent[v]!=i)
			low[v] = min(low[v],disc[i]);
	}
}

int main()
{
    //freopen("file1.txt","r",stdin);
    int disc[109],parent[109],low[109],visited[109],AP[109],child;
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
    	visited[i] = 0;
    	parent[i] = -1;
    	AP[i] = 0;
    }
    for(int i=1;i<=m;i++)
    {
    	cin>>a>>b;
    	gr[a].push_back(b);
    	gr[b].push_back(a);
    }
    for(int i=1;i<=n;i++)
    {
        if(!visited[i])
        dfs(disc,low,visited,parent,AP,i,n,0,child);
    }


    cin>>q;
    for(int i=1;i<=q;i++)
    {
    	cin>>a;

    	if(AP[a])
    	{
    		cout<<"Satisfied ";
    		cout<<gr[a].size();
    	}
    	else cout<<"Not Satisfied";
    	cout<<endl;
    }

}
