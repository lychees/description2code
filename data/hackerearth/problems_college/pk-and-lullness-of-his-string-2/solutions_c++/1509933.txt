#include <bits/stdc++.h>
using namespace std;

#define FOR(i, a, b) for (int (i) = (a); (i) < (b); (i)++)
#define REP(i, n) FOR(i, 0, n)

typedef long long LL;

const int MAXN = (int) 1e5 + 15;
const LL mod = (LL) 1e9 + 7;

LL fact[MAXN], inv[MAXN];

char s[MAXN];

LL compute(int n, int r) {
	if (r > n) return 0;
	LL ans = fact[n];
	ans = (ans * inv[r]) % mod;
	ans = (ans * inv[n - r]) % mod;
	return ans;
}

LL modpow(LL a, LL b, LL mod) {
	LL res = 1;
	while (b) {
		if (b & 1) res = (res * a) % mod;
		a = (a * a) % mod;
		b >>= 1;
	}
	return res;
}

void pre() {
	fact[0] = 1;
	FOR(i, 1, MAXN) fact[i] = (fact[i - 1] * (LL) i) % mod;
	REP(i, MAXN) inv[i] = modpow(fact[i], mod - 2, mod);
}

int main() {
	pre();
	int T;
	scanf("%d", &T);
	while (T--) {
		int len, n;
		scanf("%s %d", s, &len);
		n = strlen(s);
		int total_l = 0;
		REP(i, n) if (s[i] == 'l') total_l++;
		int cnt_l = 0;
		LL ans = 0;
		REP(i, n) if (s[i] == 'u') {
			ans += compute(cnt_l, len / 2) * compute(total_l - cnt_l, len/ 2);
			ans %= mod;
		} else cnt_l++;
		printf("%lld\n", ans);
	}
	return 0;
}