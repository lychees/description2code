#include<bits/stdc++.h>
using namespace std;
#define ll long long int
string st;
ll pw[1<<20];
ll s[1<<20];
#define ll long long int
unordered_multiset<ll> S;
bool check_for_substr(ll span)
{
    S.clear();
    for(ll i=0;(i+span)<=st.size();i++)
    {
        ll q=s[i+span]-s[i];
        q=q*(pw[1000000-i]);
        if(S.find(q)!=S.end())
            return true;
        S.insert(q);
    }
    return false;
}
int main()
{
    ios_base::sync_with_stdio(false);
    ll pre,test,i,j,a,b,c,d,k;
    cin>>st;
    pw[0]=1;
    for(i=1;i<=1000000;i++)
        pw[i]=pw[i-1]*173;
    for(i=1;i<=st.size();i++)
        s[i]=s[i-1]+st[i-1]*pw[i-1];

    ll left=0,right=st.size();
    while(left<right)
    {
        ll mid=(left+right+1)/2;
        if(check_for_substr(mid))
            left=mid;
        else
            right=mid-1;
    }
    cout<<left;
    return 0;
}



