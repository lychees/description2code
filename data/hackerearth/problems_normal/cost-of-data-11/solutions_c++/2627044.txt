using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

typedef struct node{
    node *next[30];
} *pnode;

void init(pnode &x){
    FORE(i,0,25) x->next[i]=NULL;
}

pnode root,cur;
int n,ans;
string s;

int main(){
 //   freopen("cost-of-data-11.inp", "r", stdin);
 //   freopen("cost-of-data-11.out", "w", stdout);
    root=new node;
    init(root);
    ans=0;
    cin >> n;
    while (n--){
        cin >> s;
        cur=root;
        FOR(j,0,s.length()){
            if (cur->next[ s[j]-'a' ]==NULL){
                cur->next[ s[j]-'a' ]=new node;
                init(cur->next[ s[j]-'a' ]);
                ans++;
            }
            cur=cur->next[s[j]-'a' ];
        }
    }
    cout << ans+1;
}
