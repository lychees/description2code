#include <bits/stdc++.h>
#define ll long long int
#define MAX 5001
#define EPS 1e-9
#define MOD 1000000007
#define INF 1e9
#define pn() printf("\n")
#define vint vector <int>
#define vpint vector <pair<int,int> >
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
#define gc() getchar_unlocked()
#define ms(x,v) memset(x,v,sizeof x)
#define pr_arr(i,x,size) for(i=0;i<size;i++) cout<<x[i]<<" "
#define ff(i,a,b) for(i=a;i<=b;i++)
#define fb(i,a,b) for(i=a;i>=b;i--)
#define gprint(i) cout<<"Case #"<<i<<": "
using namespace std;

vint prime;
int pr[100001];
void get_primes()
{
	int i,j;
	ff(i,2,MAX-1)
	{
		if(pr[i]==0)
		{
			prime.pb(i);
			for(j=2;j*i<MAX;j++)
			{
				pr[i*j]=-1;
			}
		}
	}
}

int main()
{
    ios::sync_with_stdio(false);
    int n;
    cin>>n;
    int i,j,arr[n+1];
    ll sum[n+1];
    sum[0]=0;
    ff(i,1,n)
    {
    	cin>>arr[i];
    	sum[i]=sum[i-1]+arr[i];
    }
    get_primes();
    ll dp[n+1];
    dp[0]=0;
    dp[1]=0;
    ll maxi=0;
    ff(i,2,n)
    {
    	for(j=0;j<prime.size() && prime[j]<=i;j++)
    	{
    		if(i-prime[j]==0)
    		{
    			maxi=max(maxi,sum[i]);
    		}
    		else
    		{
    			maxi=max(maxi,sum[i]-sum[i-prime[j]]+dp[i-prime[j]-1]);
    		}
    	}
    	dp[i]=maxi;
    }
    cout<<dp[n]<<endl;
    return 0;
}