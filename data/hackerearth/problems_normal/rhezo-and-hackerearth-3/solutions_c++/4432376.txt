#include<bits/stdc++.h>
using namespace std;
set<int> brid;
const int MAXN = 1e5+5;
vector< pair<int,int> > adj[MAXN];
int low[MAXN],disc[MAXN];
int tme=0;
bool vis[MAXN];
void DFS(int s, int par=-1) {
	vis[s]=true;
	++tme;
	low[s]=disc[s]=tme;
	for(int i=0;i<(int)adj[s].size();i++) {
		int to=adj[s][i].first;
		int idx=adj[s][i].second;
		if(to==par) continue;
		if(!vis[to]) {
			DFS(to,s);
			low[s]=min(low[s],low[to]);
			if(low[to]>disc[s]) brid.insert(idx);
		}
		else low[s]=min(low[s],disc[to]);
	}
}
int main() {
	// freopen("TASK.in","r",stdin);	
	// freopen("TASK.out","w",stdout);
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=m;i++) {
		int x,y;
		scanf("%d%d",&x,&y);
		adj[x].push_back(make_pair(y,i));
		adj[y].push_back(make_pair(x,i));
	}
	for(int i=1;i<=n;i++) if(!vis[i]) DFS(i);
	int q;
	cin>>q;
	while(q--) {
		int x;
		scanf("%d",&x);
		if(brid.find(x)!=brid.end()) printf("Unhappy\n");
		else printf("Happy\n");
	}
	return 0;
}