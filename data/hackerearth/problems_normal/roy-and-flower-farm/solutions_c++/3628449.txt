#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
    int t;
    cin >> t;
    while(t--) {
        int n, p;
        cin >> n >> p;
        int income[n+1];
        int cost[n+1];
        int profit[n+1];
        for(int i = 1; i <= n; i++) {
            cin >> income[i];
            cin >> cost[i];
            profit[i] = income[i] - cost[i];
        }


        int dp[n+1][p+1];
        for(int i = 0; i <= n; i++) {
            dp[i][0] = 0;
        }
        for(int i = 0; i <= p; i++) {
            dp[0][i] = 0;
        }

        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= p; j++) {
                if(j < cost[i]) {
                    dp[i][j] = dp[i-1][j];
                } else {
                    dp[i][j] = max(dp[i-1][j], profit[i] + dp[i-1][j-cost[i]]);
                }
            }
        }

        int i = n, j = p;
        int max_profit = dp[n][p];
        while(j >= 0 && max_profit == dp[i][j]) {
            j -= 1;
        }
        j+= 1;

        cout << j << " " << p + dp[n][p];
        cout << endl;
    }

    return 0;
}
