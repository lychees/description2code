#include<bits/stdc++.h>
using namespace std;
vector<int> v;
void SieveOfEratosthenes(int n)
{
    bool prime[n+1];
    memset(prime, true, sizeof(prime));
    int p;
     for ( p=2; p*p<=n; p++)
    {
        if (prime[p] == true)
        {
            v.push_back(p);
            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
    for (int i=p; i<=n; i++)
    {
        if(prime[i]!=false)  v.push_back(i);
    }
}

int main(){
int n;
cin>>n;int a[n+1],dp[n+1];
SieveOfEratosthenes(n);

for(int i=1;i<=n;i++){
    cin>>a[i];
    dp[i]=a[i]+a[1];
}
dp[1]=a[1];
if(n>=2){
dp[2]=a[1]+a[2];
}
if(n>=3){
dp[3]=dp[1]+a[3];
}

for(int i=4;i<=n;i++){
    for(int p=0;p<v.size()&&v[p]<=i/2;p++){
        if(i%v[p]==0) {
            if(dp[i/v[p]]+a[i]>dp[i]){
                dp[i]=dp[i/v[p]]+a[i];
            }
        }
    }
}
for(int i=1;i<=n;i++){
    cout<<dp[i]<<" ";
}

}
