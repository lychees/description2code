#include <bits/stdc++.h>
using namespace std;

vector<int> getSSSP(vector<int> adj[], int n)
{
	vector<int> dist(n + 1, -1);
	
	queue<int> Q;
	Q.push(0);
	dist[0] = 0;
	
	while(!Q.empty())
	{
		int u = Q.front();
		Q.pop();
		
		for(int i = 0; i < adj[u].size(); i++)
		{
			int v = adj[u][i];
			if(dist[v] == -1)
			{
				dist[v] = dist[u] + 1;
				Q.push(v);
			}
		}
	}
	
	return dist;
}

int main()
{
    int n, m;
    cin >> n >> m;
    vector<int> adj[n + 1];
    
    for(int i = 0; i < m; i++)
    {
    	int a, b;
    	cin >> a >> b;
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    }	
    
    vector<int> dist = getSSSP(adj, n);
    
    for(int i = 1; i < n; i++)
    {
    	if(dist[i] == -1)
    		cout << "INF" << endl;
    	else
    		cout << dist[i] << endl;
    }
    	
    return 0; 
}
