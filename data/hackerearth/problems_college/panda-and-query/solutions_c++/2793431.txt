/***************************************
		
		ANAY BHANDE
		
****************************************/

#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define ld long double
#define llu unsigned long long int
#define inf INT_MAX
#define linf LLONG_MAX
#define MOD 1000000007
#define EPS 1e-14

#define fl(i,c,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define rev(i,n,c) for(i=n;i>c;i--)
#define feach(it, a)  for(typeof((a).begin()) it=(a).begin(); it != (a).end(); ++it)
#define rfeach(it, a) for(typeof((a).rbegin()) it=(a).rbegin(); it != (a).rend(); ++it)
#define fea(it, a)  for(auto it=(a).begin(); it != (a).end(); ++it)
#define rfea(it, a) for(auto it=(a).rbegin(); it != (a).rend(); ++it)

#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))

#define ip freopen("in.txt","r",stdin)
#define op freopen("out.txt","w",stdout)

#define mp make_pair
#define pb push_back
#define ft first
#define sd second
#define pp pop_back()

#define aov(a) a.begin(),a.end()
#define PI 2.0*acos(0.0)
//#define PI acos(-1.0)

#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())

#define pii pair<int,int>
#define pli pair<long long int,long long int>
#define vi vector<int>
#define vl vector<long long int>
#define vp vector<pair<int,int> >
#define vpli vector<pair<long long int,long long int> >

#define ispresent(container, element) (container.find(element) != container.end())
#define vecpresent(container, element) (find(aov(container),element) != container.end()) 

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
long long int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}

/*****************************************************************/
///////////////////////   CHALO    ///////////////////////////
/*****************************************************************/

struct item {
    ll ans;
    ll open, close;

    item(char c){
        ans = open = close = 0;
        if (c == '{') open = 1;
        else {
            assert(c == '}');
            close = 1;
        }
    }
    item() {
        ans = open = close = 0;
    }
};

item merge(item lf, item rg){
    item res;
    res.ans = lf.ans + rg.ans + min(lf.open, rg.close) * 2;
    res.open = rg.open + (lf.open - min(lf.open, rg.close));
    res.close = lf.close + (rg.close - min(lf.open, rg.close));
    return res;
}

item tree[(1<<21) + 10];
string s;
ll lst;

ll get(ll l, ll r){
    l += lst;
    r += lst + 1;
    item resl, resr;
    while (l < r){
//      eprintf("[%d..%d]\n", l, r);
        if (l & 1) resl = merge(resl, tree[l]), l++;
        if (r & 1) r--, resr = merge(tree[r], resr);
        l /= 2;
        r /= 2;
    }
    return merge(resl, resr).ans;
}


int main()
{
ios_base::sync_with_stdio(false);
cin.tie(0);
cout.tie(0);
cin>>s;
ll q,i,a,b;
    ll n = s.length();
    lst = 2;
    while (lst < n) lst *= 2;
    for (int i = lst; i < lst + n; i++) 
        tree[i] = item(s[i - lst]);
    for (int i = lst - 1; i >= 1; i--)
        tree[i] = merge(tree[2*i], tree[2*i+1]);
cin>>q;
while(q--)
{
	cin>>a>>b;
	cout<<get(a-1, b-1)<<endl;
}
return 0;
}