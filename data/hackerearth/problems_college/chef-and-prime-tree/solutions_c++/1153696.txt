#include <iostream>
#include<algorithm>
#include<string.h>
using namespace std;


int prime[5000002];
int pos=0;

void markMultiples(bool arr[], int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr[ num-1 ] = 1;
        ++i;
    }
}
void SieveOfEratosthenes(int n)
{
    if (n >= 2)
    {
        bool arr[n];
        memset(arr, 0, sizeof(arr));
        for (int i=1; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                prime[pos]=i+1;
                pos++;
                markMultiples(arr, i+1, n);
            }
        }
    }
}

int main() {
	// your code goes here
	 SieveOfEratosthenes(5000002);
	int t;
	cin>>t;
	while(t--)
	{
		int x,y;
		cin>>x>>y;
		long long int ans=0;
		int flag=0;
		if(x==y)
		{
			if(binary_search(prime,prime+pos,x))
			{
				ans-=x;
			}
			else
			{
				ans+=x;
			}
			cout<<ans<<endl;
			continue;
		}
		if(binary_search(prime,prime+pos,x))
		{
			ans-=x;
		}
		else
		{
			if(x==1)
				flag=1;
			ans+=x;
		}
		if(binary_search(prime,prime+pos,y))
		{
			ans-=y;
		}
		else
		{
			if(y==1)
				flag=1;
			ans+=y;
		}
		//cout<<ans<<endl;
		while(x!=y)
		{
			if(x>y)
			{
				x/=2;
				if((x==1&&flag!=0)||(x==y))
				{
					continue;
				}
				if(binary_search(prime,prime+pos,x))
				{
					ans-=x;
				}
				else
				{
					if(x==1)
						flag=1;
					ans+=x;
				}
			}
			if(x<y)
			{
				y/=2;
				if((y==1&&flag!=0)||(x==y))
				{
					continue;
				}
				if(binary_search(prime,prime+pos,y))
				{
					ans-=y;
				}
				else
				{
					if(y==1)
						flag=1;
					ans+=y;
				}
			}
			//cout<<x<<" "<<y<<" "<<ans<<endl;
		}
		cout<<ans<<endl;
	}
	return 0;
}