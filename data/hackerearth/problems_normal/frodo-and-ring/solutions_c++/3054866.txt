#include<bits/stdc++.h>
#include <iostream>
#include <numeric>
#define ll long long
#define ull unsigned long long
#define mpa make_pair
#define pb push_back
#define ff first
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define ss second
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define fre     freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define pii pair<ll,ll>
#define ret return 0
using namespace std;
ll mod=1000000007;
ll modpow(ll a,ll n,ll temp) {
	ll res=1,y=a;
	while(n>0) {
		if(n&1)res=(res*y)%temp;
		y=(y*y)%temp;
		n/=2;
	}
	return res%temp;
}
ll n,a[500005],dp[1000005]= {0},b[500005],c[500005];
//ll vis[100005];
//vector<ll> adj[100005];
#define pi 3.1415926536
#define sz(x) x.size()
ll cbit(ll n) {ll k=0;while(n) n&=(n-1),k++;return k;}
ll nbit(ll n) {ll k=0;while(n) n/=2,k++;return k;}
//ll b1[1001][1001],b2[1001][1001],g1[1001][1001],g2[1001][1001],w[1001][1001];
//bool a1[101][101],a2[102][101],a3[103][101]
vector<ll> ans;
//vector<ll> adj[100005];
ll lcm(ll a,ll b){ return (a*b)/(__gcd(a,b));}
int main() {
char a[500][500];
ll dp[501][501],i,j,k,l,m,n,o,p,t;
scanf("%lld",&t);
while(t--){
	scanf("%lld %lld",&n,&m);
	getchar();
	for(i=1;i<=n;i++) for(j=1;j<=m;j++) a[i][j]=getchar(),getchar();
	
	for(i=0;i<=n;i++)
    dp[i][0]=INT_MIN;
    for(j=0;j<=m;j++)
    dp[0][j]=INT_MIN;
    if(a[1][1]=='D') {printf("-1\n");continue;}
    if(n==1 && m==1) {printf("0\n");continue;}
    for(i=1;i<=n;i++){
    	for(j=1;j<=m;j++){
    		
    		if(a[i][j]=='T'){
    			if(i==1 && j==1) dp[i][j]=150;
    			else{
    			dp[i][j]=INT_MIN;
    			if(dp[i][j-1]>=0)
    			dp[i][j]=max(dp[i][j-1]+150,dp[i][j]);
    			if(dp[i-1][j]>=0)
    			dp[i][j]=max(dp[i-1][j]+150,dp[i][j]);
    			}
    		}
    		else if(a[i][j]=='D'){
    			dp[i][j]=INT_MIN;
    			if(dp[i][j-1]>=100)
    			dp[i][j]=max(dp[i][j-1]-100,dp[i][j]);
    			if(dp[i-1][j]>=100)
    			dp[i][j]=max(dp[i-1][j]-100,dp[i][j]);
    	}
    	else
    	dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
    }
    }
    if(dp[n][m]<0) printf("-1\n");
    else printf("%lld\n",dp[n][m]);
    	
    	
    }
    
    
    
    
    
   
	
	
}













 
 

	
	



 
 
 

	



